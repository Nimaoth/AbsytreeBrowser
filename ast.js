/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI3439329284 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681170 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681169 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681249 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2550136837 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3422552551 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3422552567 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3422552566 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3422552568 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3221226150 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582848 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3087007841 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007838 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3472883847 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254789242 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291846989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2130706495 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2130706436 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2130706435 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291847200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018408 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671186 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448400 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671275 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448264 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448263 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448262 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448261 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448260 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818585265 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818585311 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254784072 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254785136 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254785409 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254785383 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254785285 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254785171 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784125 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254785079 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254785091 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254785039 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254785051 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784963 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784975 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784990 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784156 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784855 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784895 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784907 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784758 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784798 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784810 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784656 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784696 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784708 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784458 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784259 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784215 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784193 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784171 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254784092 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919187 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2466250756 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919237549 = {size: 0, kind: 23, base: null, node: null, finalizer: null};
var NTI2919237548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182375 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182353 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182532 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182380 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182360 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182411 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182374 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182397 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182364 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182354 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182385 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182361 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182389 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182362 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182393 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182363 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182401 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182365 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182369 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3254779959 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3254787440 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568640 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969574382 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578635 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017879 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017878 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017877 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017876 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017875 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017874 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017873 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516584388 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582915 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1627391161 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845668 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845664 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845667 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627390088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291850607 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2533359773 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2550136853 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291849420 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291849426 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2466250766 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068561 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068448 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3489661021 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3489661020 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818583371 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818583368 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818583365 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660998 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3489661006 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489661003 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3489661015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660970 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660977 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660974 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3489660988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660964 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3489660954 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3489660953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660952 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3489660946 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660940 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068509 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068508 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068507 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068505 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068504 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068502 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068500 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068499 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068495 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068494 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068493 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068491 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068490 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068489 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068488 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068487 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068486 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068485 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068446 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068605 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068602 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068481 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068551 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068440 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068540 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068552 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068441 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068445 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068553 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068442 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068534 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068431 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068533 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068532 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068432 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068530 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068554 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068443 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068555 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068444 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068430 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068541 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3489660939 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291855106 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291855113 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291855112 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291855111 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291855119 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780051 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780050 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780049 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780048 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780047 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780069 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780066 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780063 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780055 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779960 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3254780045 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780043 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780040 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780037 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780028 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780025 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780022 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779956 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3254780014 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969568667 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568665 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568664 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568662 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568656 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017872 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017871 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017862 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969568649 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568611 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969568641 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848319 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854034 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291848508 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848506 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271564383 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271564230 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929938 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845663 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3254780003 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3254780002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780001 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779995 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779983 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3254779982 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779981 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779975 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557328 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557325 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557322 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557314 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557140 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3254779967 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969568635 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568634 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568636 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2969568633 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568628 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568612 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2281701394 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2281701391 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2281701388 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2281701380 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2214592522 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592521 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141891 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141904 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2399141901 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141893 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2264924164 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3254782872 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254782867 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271562257 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254782593 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779953 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3254779962 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779954 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3254779966 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254791544 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254791398 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779909 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3254791228 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254788810 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254786315 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780132 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254788575 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780046 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254789379 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779957 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3254779958 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779908 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271564556 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780213 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321889483 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889975 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321890063 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889991 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321890004 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321890016 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889885 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889637 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889822 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889834 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889763 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889775 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889709 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889721 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889672 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889497 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111577 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111573 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3305111576 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111574 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3305112120 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3338665998 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3338665999 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3271561836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271561483 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338665997 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3271561711 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271561961 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338666673 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557164 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3271562130 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3338665994 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017860 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2785017861 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338665993 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3338665996 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3271557163 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557162 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557133 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557331 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3271557330 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3271557161 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3271557155 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557154 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557153 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557152 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557151 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557124 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557150 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557149 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557311 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3271557310 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557309 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557303 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557294 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3271557293 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557292 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557286 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557270 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3271557269 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557268 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557262 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557254 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557251 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557248 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557236 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557233 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557225 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121885 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121882 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121879 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557182 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557179 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557176 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557165 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557137 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557208 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557220 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557217 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557214 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557203 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557197 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557189 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557138 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557224 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557223 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557222 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557139 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557148 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557130 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557134 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557157 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3338665995 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3271563676 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557332 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3271557170 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557169 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271561676 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271561657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271561638 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557128 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557147 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557126 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3271557127 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557146 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3271557125 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557145 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557144 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557143 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557129 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271561624 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969577698 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007897 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554441 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2550136836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969576809 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1979711564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584815 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498824 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671047 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671304 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1811939335 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939334 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498825 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1644167173 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1660944393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644167172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498822 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1694498821 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498823 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944407 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944399 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944394 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3187671080 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805188 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805187 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671067 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3187671074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671071 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671069 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671066 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671065 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671064 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671048 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3187671043 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671063 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572509 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969569466 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121804 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572567 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572566 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572565 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572563 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572562 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473552 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2818572554 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572544 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572541 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572518 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572516 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572426 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845738 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845732 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845731 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845730 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845724 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027972 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2483027971 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845718 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845716 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845713 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845710 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582423 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2516582412 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582404 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582453 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582450 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582447 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582438 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582435 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582432 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582405 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845660 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845641 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845637 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2113929231 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2113929230 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2013265952 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2013265986 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265954 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2013265955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929229 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929228 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2449473539 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2415919108 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2415919107 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2197815299 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845702 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2751463428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463427 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2214592519 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592518 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2214592515 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845700 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845697 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845694 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929222 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929221 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845685 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554447 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI2785017880 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2785017867 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240743 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240742 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240741 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240735 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919122 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2415919121 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919120 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919114 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240723 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240722 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240721 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240715 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240706 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240705 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240704 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240698 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240684 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240683 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240676 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240659 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240651 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2768240643 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2449473554 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845669 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638530 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592520 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2214592516 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2197815306 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2197815300 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818572425 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572423 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572501 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681160 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681159 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681162 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681161 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681155 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681158 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681157 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572480 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572479 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572475 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572474 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572459 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572458 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572457 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572441 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572440 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572434 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572427 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969572495 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969572490 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969571585 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711498 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568637 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969568638 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448274 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572428 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003123002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568631 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568481 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969568484 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969572196 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007825 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007822 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007811 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007775 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969568663 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969569217 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898994 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898991 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898977 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898974 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019900968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137339604 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137341025 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3137340922 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3137340452 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137340550 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3137340486 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1560281203 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137339575 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007774 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2550136835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2164261152 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017869 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017868 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017859 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007798 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007803 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582403 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007783 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3087007788 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007780 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007779 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007844 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007771 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007778 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007773 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087009002 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019900729 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154117637 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019931331 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008732 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121783 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008719 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008716 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008654 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008384 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013268507 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019909216 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019930420 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008194 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3036676328 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898997 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898897 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898894 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898884 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898985 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007752 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007762 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007754 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087008909 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019907400 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007753 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087008055 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007757 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007756 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007748 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121671 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121667 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3003121670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121668 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007763 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007751 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007750 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3036676235 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007747 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI3036676200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898919 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676206 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3019898900 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898883 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898888 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122753 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3036676203 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3036676201 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676204 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898908 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019899118 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584774 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584773 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191183280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818583360 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI2147483653 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572422 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235627 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2919235630 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235662 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235613 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235622 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235619 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235593 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2919235608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235605 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235602 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235590 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919235589 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572486 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852126727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572524 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818582729 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389974 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1627389957 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389956 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810261 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578557 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578525 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578483 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627924 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818576615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576685 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473667 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473676 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473596 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2868903940 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903939 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852126723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818579744 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576075 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818579243 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576430 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572296 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572294 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572292 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818576104 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572291 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2885681165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681166 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572629 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572640 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572821 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572694 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473546 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638433 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389955 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2113929251 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2013265971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265951 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788536198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529168 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI788536206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265949 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2013265950 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187470 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187476 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587460 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2382364676 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2046820355 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1174405133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1174405134 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643078 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1174405123 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405123, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405123, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405123, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405123, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405123, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405123, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405123, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405123, name: "lvlNone", len: 0, sons: null}}};
NTI1174405123.node = NNI1174405123;
var NNI1174405134 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null}, 
{kind: 1, offset: "flushThreshold", len: 0, typ: NTI1174405123, name: "flushThreshold", sons: null}]};
NTI1174405134.node = NNI1174405134;
var NNI1174405133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI1174405123, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554449, name: "fmtStr", sons: null}]};
NTI1174405133.node = NNI1174405133;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI1174405133.base = NTI33555171;
NTI1174405134.base = NTI1174405133;
NTI1174405132.base = NTI1174405134;
var NNI704643084 = {kind: 1, offset: "val", len: 0, typ: NTI1174405132, name: "val", sons: null};
NTI704643084.node = NNI704643084;
var NNI704643076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI704643076.node = NNI704643076;
NTI704643076.base = NTI1174405133;
NTI704643075.base = NTI704643076;
var NNI704643097 = {kind: 1, offset: "val", len: 0, typ: NTI704643075, name: "val", sons: null};
NTI704643097.node = NNI704643097;
var NNI704643078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "consoleLogger", len: 0, typ: NTI704643084, name: "consoleLogger", sons: null}, 
{kind: 1, offset: "fileLogger", len: 0, typ: NTI704643097, name: "fileLogger", sons: null}]};
NTI704643078.node = NNI704643078;
NTI704643078.base = NTI1174405133;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217745.base = NTI33555176;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555176;
NTI134217742.base = NTI134217741;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
var NNI2046820355 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "padding", len: 0, typ: NTI33554435, name: "padding", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI33554438, name: "time", sons: null}, 
{kind: 1, offset: "fuzz", len: 0, typ: NTI33554438, name: "fuzz", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554438, name: "count", sons: null}]};
NTI2046820355.node = NNI2046820355;
var NNI2382364676 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2382364676.node = NNI2382364676;
var NNI2365587460 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2365587460.node = NNI2365587460;
NTI2365587460.base = NTI33555171;
NTI2382364676.base = NTI2365587460;
var NNI1040187476 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1040187470, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1040187476.node = NNI1040187476;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI2013265949 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2013265949, name: "Control", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2013265949, name: "Shift", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2013265949, name: "Alt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2013265949, name: "Super", len: 0, sons: null}}};
NTI2013265949.node = NNI2013265949;
NTI2013265950.base = NTI2013265949;
NTI788536206.base = NTI788529168;
NTI788536198.base = NTI788529168;
var NNI2013265971 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265950, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2013265971.node = NNI2013265971;
NTI2013265968.base = NTI2013265971;
var NNI2013265965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265968, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265965.node = NNI2013265965;
var NNI2013265951 = {kind: 1, offset: "next", len: 0, typ: NTI2013265965, name: "next", sons: null};
NTI2013265951.node = NNI2013265951;
var NNI2113929251 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2113929251.node = NNI2113929251;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555176;
var NNI1627389955 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389955, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389955, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389955, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389955, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389955, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389955, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389955, name: "JArray", len: 0, sons: null}}};
NTI1627389955.node = NNI1627389955;
NTI855638433.base = NTI33554449;
var NNI2449473546 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2449473546.node = NNI2449473546;
var NNI2449473548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473546, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473546, name: "Field1", sons: null}]};
NTI2449473548.node = NNI2449473548;
NTI2449473556.base = NTI2449473548;
NTI2818572694.base = NTI2449473556;
NTI2818572821.base = NTI2449473548;
NTI2818572640.base = NTI2449473548;
NTI2818572629.base = NTI2449473548;
var NNI805306392 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306392.node = NNI805306392;
var NNI2885681166 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "row", len: 0, typ: NTI33554435, name: "row", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554435, name: "column", sons: null}]};
NTI2885681166.node = NNI2885681166;
NTI2885681166.base = NTI33555171;
NTI2885681165.base = NTI2885681166;
var NNI2885681176 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "startIndex", len: 0, typ: NTI33554435, name: "startIndex", sons: null}, 
{kind: 1, offset: "oldEndIndex", len: 0, typ: NTI33554435, name: "oldEndIndex", sons: null}, 
{kind: 1, offset: "newEndIndex", len: 0, typ: NTI33554435, name: "newEndIndex", sons: null}, 
{kind: 1, offset: "startPosition", len: 0, typ: NTI2885681165, name: "startPosition", sons: null}, 
{kind: 1, offset: "oldEndPosition", len: 0, typ: NTI2885681165, name: "oldEndPosition", sons: null}, 
{kind: 1, offset: "newEndPosition", len: 0, typ: NTI2885681165, name: "newEndPosition", sons: null}]};
NTI2885681176.node = NNI2885681176;
NTI2885681176.base = NTI33555171;
var NNI2818572291 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2818572291, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2818572291, name: "Insert", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2818572291, name: "Nested", len: 0, sons: null}}};
NTI2818572291.node = NNI2818572291;
NTI2818572295.base = NTI2449473548;
NTI2818572296.base = NTI2818572292;
var NNI2818572294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldSelection", len: 0, typ: NTI2818572295, name: "oldSelection", sons: null}, 
{kind: 3, offset: "kind", len: 3, typ: NTI2818572291, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "selection", len: 0, typ: NTI2449473548, name: "selection", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cursor", len: 0, typ: NTI2449473546, name: "cursor", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]}], 
[setConstr(2), {kind: 1, offset: "children", len: 0, typ: NTI2818572296, name: "children", sons: null}]]}]};
NTI2818572294.node = NNI2818572294;
NTI2818572292.base = NTI2818572294;
NTI2818576104.base = NTI2818572292;
NTI2818576430.base = NTI2449473548;
NTI2818579243.base = NTI2449473548;
NTI2818576075.base = NTI2449473548;
NTI2818579744.base = NTI2449473548;
var NNI2868903940 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI2868903940.node = NNI2868903940;
var NNI33555181 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555181.node = NNI33555181;
NTI33555181.base = NTI33555171;
NTI2868903940.base = NTI33555181;
NTI2868903939.base = NTI2868903940;
var NNI2852126723 = {kind: 1, offset: "impl", len: 0, typ: NTI2868903939, name: "impl", sons: null};
NTI2852126723.node = NNI2852126723;
NTI2449473596.base = NTI2449473548;
NTI2449473676.base = NTI2449473548;
NTI2449473667.base = NTI2449473548;
NTI2818576685.base = NTI2449473548;
var NNI2818576690 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2818576685, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818576690.node = NNI2818576690;
NTI2818576615.base = NTI2449473548;
var NNI1157627924 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627924.node = NNI1157627924;
NTI1157627924.base = NTI33555176;
NTI2818572535.base = NTI2449473548;
var NNI2818578483 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473546, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473546, name: "Field1", sons: null}]};
NTI2818578483.node = NNI2818578483;
var NNI2818578525 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473546, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473546, name: "Field1", sons: null}]};
NTI2818578525.node = NNI2818578525;
var NNI2818578557 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473546, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473546, name: "Field1", sons: null}]};
NTI2818578557.node = NNI2818578557;
var NNI2348810261 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2348810261.node = NNI2348810261;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI1627389972 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1627389956, name: "Field3", sons: null}]};
NTI1627389972.node = NNI1627389972;
NTI1627389969.base = NTI1627389972;
var NNI1627389966 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1627389969, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1627389966.node = NNI1627389966;
NTI1627389974.base = NTI1627389956;
var NNI1627389957 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1627389955, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1627389966, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1627389974, name: "elems", sons: null}]]}]};
NTI1627389957.node = NNI1627389957;
NTI1627389956.base = NTI1627389957;
NTI2818572615.base = NTI2449473548;
NTI2818582729.base = NTI2449473548;
var NNI2818572524 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2852126723, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572524.node = NNI2818572524;
var NNI2852126727 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2852126727.node = NNI2852126727;
var NNI2818572547 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572535, name: "Field2", sons: null}]};
NTI2818572547.node = NNI2818572547;
var NNI2919235608 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235593, name: "Field2", sons: null}]};
NTI2919235608.node = NNI2919235608;
NTI2919235605.base = NTI2919235608;
var NNI2919235602 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235605, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235602.node = NNI2919235602;
NTI2919235613.base = NTI33554435;
var NNI2919235625 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235613, name: "Field2", sons: null}]};
NTI2919235625.node = NNI2919235625;
NTI2919235622.base = NTI2919235625;
var NNI2919235619 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235622, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235619.node = NNI2919235619;
var NNI2919235590 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onRequestSave", len: 0, typ: NTI2919235602, name: "onRequestSave", sons: null}, 
{kind: 1, offset: "onRequestSaveIndex", len: 0, typ: NTI2919235619, name: "onRequestSaveIndex", sons: null}]};
NTI2919235590.node = NNI2919235590;
NTI2919235590.base = NTI33555171;
NTI2919235589.base = NTI2919235590;
var NNI2818572486 = {kind: 1, offset: "val", len: 0, typ: NTI2919235589, name: "val", sons: null};
NTI2818572486.node = NNI2818572486;
var NNI2919235627 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2919235627, name: "Unknown", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2919235627, name: "Procedure", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2919235627, name: "Function", len: 0, sons: null}}};
NTI2919235627.node = NNI2919235627;
var NNI2919235630 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI2449473546, name: "location", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2919235627, name: "kind", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "doc", len: 0, typ: NTI33554449, name: "doc", sons: null}]};
NTI2919235630.node = NNI2919235630;
NTI2919235662.base = NTI2919235630;
var NNI2147483653 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI33554446, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI33554446, name: "h", sons: null}]};
NTI2147483653.node = NNI2147483653;
var NNI2818572422 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2147483653, name: "bounds", sons: null}]};
NTI2818572422.node = NNI2818572422;
NTI2818583360.base = NTI2919235630;
var NNI1191183280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1191183280.node = NNI1191183280;
var NNI2818584774 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818584774.node = NNI2818584774;
var NNI2818584773 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2818584774, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473546, name: "Field1", sons: null}]};
NTI2818584773.node = NNI2818584773;
var NNI3036676201 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3036676201.node = NNI3036676201;
var NNI3036676204 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3036676201, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676203, name: "Field1", sons: null}]};
NTI3036676204.node = NNI3036676204;
NTI3019898908.base = NTI3036676204;
NTI3019899118.base = NTI3019898908;
NTI3003122753.base = NTI33554435;
var NNI3019898883 = {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null};
NTI3019898883.node = NNI3019898883;
NTI3019898888.base = NTI3019898883;
var NNI3019898900 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676204, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898888, name: "Field2", sons: null}]};
NTI3019898900.node = NNI3019898900;
var NNI3036676206 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI3036676206, name: "Grey", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3036676206, name: "Red", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3036676206, name: "Green", len: 0, sons: null}}};
NTI3036676206.node = NNI3036676206;
var NNI3019898919 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676204, name: "Field1", sons: null}]};
NTI3019898919.node = NNI3019898919;
NTI3036676200.base = NTI33554439;
var NNI3087007747 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007747, name: "tError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007747, name: "tVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007747, name: "tString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007747, name: "tInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007747, name: "tFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007747, name: "tAny", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007747, name: "tType", len: 0, sons: null}}};
NTI3087007747.node = NNI3087007747;
NTI3036676235.base = NTI3036676204;
var NNI3087007750 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007750, name: "vkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007750, name: "vkVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007750, name: "vkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007750, name: "vkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007750, name: "vkBuiltinFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007750, name: "vkAstFunction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007750, name: "vkType", len: 0, sons: null}}};
NTI3087007750.node = NNI3087007750;
var NNI3003121667 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI3003121667, name: "Empty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3003121667, name: "Identifier", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3003121667, name: "NumberLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3003121667, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3003121667, name: "ConstDecl", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3003121667, name: "LetDecl", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3003121667, name: "VarDecl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI3003121667, name: "NodeList", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI3003121667, name: "Call", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI3003121667, name: "If", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI3003121667, name: "While", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI3003121667, name: "FunctionDefinition", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI3003121667, name: "Params", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI3003121667, name: "Assignment", len: 0, sons: null}}};
NTI3003121667.node = NNI3003121667;
NTI3003121671.base = NTI3003121668;
var NNI3003121670 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3003121668, name: "parent", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "reff", len: 0, typ: NTI2046820355, name: "reff", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI3003121667, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3003121671, name: "children", sons: null}]};
NTI3003121670.node = NNI3003121670;
NTI3003121668.base = NTI3003121670;
NTI3087007757.base = NTI3087007748;
var NNI3087007756 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mHash", len: 0, typ: NTI1325400067, name: "mHash", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI3087007747, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(6), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "open", len: 0, typ: NTI33554466, name: "open", sons: null}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "returnType", len: 0, typ: NTI3087007748, name: "returnType", sons: null}, 
{kind: 1, offset: "paramTypes", len: 0, typ: NTI3087007757, name: "paramTypes", sons: null}]}]]}]};
NTI3087007756.node = NNI3087007756;
NTI3087007748.base = NTI3087007756;
var NNI3087007751 = {kind: 3, offset: "kind", len: 7, typ: NTI3087007750, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(3), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(4), {kind: 1, offset: "impl", len: 0, typ: NTI3087007763, name: "impl", sons: null}], 
[setConstr(5), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "rev", len: 0, typ: NTI33554435, name: "rev", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}]]};
NTI3087007751.node = NNI3087007751;
NTI3087008055.base = NTI3087007748;
var NNI3087007753 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007753, name: "skAstNode", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007753, name: "skBuiltin", len: 0, sons: null}}};
NTI3087007753.node = NNI3087007753;
var NNI3019907400 = {kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null};
NTI3019907400.node = NNI3019907400;
var NNI3087007752 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007752, name: "Regular", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007752, name: "Prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007752, name: "Postfix", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007752, name: "Infix", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007752, name: "Scope", len: 0, sons: null}}};
NTI3087007752.node = NNI3087007752;
var NNI3087007762 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mHash", len: 0, typ: NTI1325400067, name: "mHash", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI3087007753, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}], 
[setConstr(1), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3087007751, name: "value", sons: null}, 
{kind: 1, offset: "operatorNotation", len: 0, typ: NTI3087007752, name: "operatorNotation", sons: null}, 
{kind: 1, offset: "precedence", len: 0, typ: NTI33554435, name: "precedence", sons: null}]}]]}]};
NTI3087007762.node = NNI3087007762;
NTI3087007754.base = NTI3087007762;
var NNI3087008909 = {kind: 1, offset: "val", len: 0, typ: NTI3087007754, name: "val", sons: null};
NTI3087008909.node = NNI3087008909;
NTI3019898985.base = NTI2046820355;
NTI3019898897.base = NTI3019898900;
var NNI3019898894 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898897, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898894.node = NNI3019898894;
var NNI3019898884 = {kind: 1, offset: "queries", len: 0, typ: NTI3019898894, name: "queries", sons: null};
NTI3019898884.node = NNI3019898884;
var NNI3019898997 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676204, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898985, name: "Field2", sons: null}]};
NTI3019898997.node = NNI3019898997;
NTI3087008200.base = NTI33554439;
NTI3036676328.base = NTI33554439;
NTI3087008194.base = NTI33554439;
NTI3019930420.base = NTI3087007751;
var NNI3019909216 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3019909216.node = NNI3019909216;
NTI2013268507.base = NTI33554439;
NTI3087008384.base = NTI33554439;
NTI3087008654.base = NTI33554439;
var NNI3087008719 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007754, name: "Field2", sons: null}]};
NTI3087008719.node = NNI3087008719;
NTI3087008716.base = NTI3087008719;
var NNI3087008713 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087008716, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087008713.node = NNI3087008713;
var NNI3003121783 = {kind: 1, offset: "val", len: 0, typ: NTI3003121668, name: "val", sons: null};
NTI3003121783.node = NNI3003121783;
var NNI3087008732 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3087008732.node = NNI3087008732;
var NNI3019931331 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3019931331.node = NNI3019931331;
NTI3154117637.base = NTI3087007751;
NTI3019900729.base = NTI33554439;
var NNI3087007771 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007771, name: "Horizontal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007771, name: "Vertical", len: 0, sons: null}}};
NTI3087007771.node = NNI3087007771;
NTI3087007779.base = NTI3087007773;
NTI3087007780.base = NTI33554449;
var NNI2516582403 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2516582403, name: "Italic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2516582403, name: "Underline", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2516582403, name: "Bold", len: 0, sons: null}}};
NTI2516582403.node = NNI2516582403;
NTI3087007783.base = NTI2516582403;
var NNI3087007788 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007783, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007788.node = NNI3087007788;
NTI3087007798.base = NTI33554449;
var NNI3087007803 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007798, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007803.node = NNI3087007803;
var NNI2164261152 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}]};
NTI2164261152.node = NNI2164261152;
var NNI2785017869 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2164261152, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2164261152, name: "Field1", sons: null}]};
NTI2785017869.node = NNI2785017869;
var NNI2550136835 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554446, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554446, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554446, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554446, name: "a", sons: null}]};
NTI2550136835.node = NNI2550136835;
var NNI2785017868 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2785017859, name: "parent", sons: null}, 
{kind: 1, offset: "anchor", len: 0, typ: NTI2785017869, name: "anchor", sons: null}, 
{kind: 1, offset: "pivot", len: 0, typ: NTI2164261152, name: "pivot", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554445, name: "left", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554445, name: "right", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554445, name: "top", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554445, name: "bottom", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2550136835, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2550136835, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastBoundsChange", len: 0, typ: NTI33554435, name: "lastBoundsChange", sons: null}, 
{kind: 1, offset: "lastHierarchyChange", len: 0, typ: NTI33554435, name: "lastHierarchyChange", sons: null}, 
{kind: 1, offset: "lastInvalidationRect", len: 0, typ: NTI2147483653, name: "lastInvalidationRect", sons: null}, 
{kind: 1, offset: "lastInvalidation", len: 0, typ: NTI33554435, name: "lastInvalidation", sons: null}, 
{kind: 1, offset: "sizeToContent", len: 0, typ: NTI33554466, name: "sizeToContent", sons: null}, 
{kind: 1, offset: "drawBorder", len: 0, typ: NTI33554466, name: "drawBorder", sons: null}, 
{kind: 1, offset: "fillBackground", len: 0, typ: NTI33554466, name: "fillBackground", sons: null}, 
{kind: 1, offset: "logLayout", len: 0, typ: NTI33554466, name: "logLayout", sons: null}, 
{kind: 1, offset: "allowAlpha", len: 0, typ: NTI33554466, name: "allowAlpha", sons: null}, 
{kind: 1, offset: "fontSizeIncreasePercent", len: 0, typ: NTI33554445, name: "fontSizeIncreasePercent", sons: null}]};
NTI2785017868.node = NNI2785017868;
NTI2785017868.base = NTI33555171;
NTI2785017859.base = NTI2785017868;
var NNI3087007778 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mhash", len: 0, typ: NTI1325400067, name: "mhash", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "orientation", len: 0, typ: NTI3087007771, name: "orientation", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2147483653, name: "bounds", sons: null}, 
{kind: 1, offset: "indent", len: 0, typ: NTI33554435, name: "indent", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554445, name: "fontSize", sons: null}, 
{kind: 1, offset: "render", len: 0, typ: NTI3087007844, name: "render", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3087007779, name: "children", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI3087007780, name: "colors", sons: null}, 
{kind: 1, offset: "styleOverride", len: 0, typ: NTI3087007788, name: "styleOverride", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI3087007803, name: "background", sons: null}, 
{kind: 1, offset: "depth", len: 0, typ: NTI33554435, name: "depth", sons: null}, 
{kind: 1, offset: "widgetTemplate", len: 0, typ: NTI2785017859, name: "widgetTemplate", sons: null}, 
{kind: 1, offset: "cloneWidget", len: 0, typ: NTI33554466, name: "cloneWidget", sons: null}]};
NTI3087007778.node = NNI3087007778;
NTI3087007773.base = NTI3087007778;
NTI3087009002.base = NTI3087007773;
var NNI3087007774 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI3087007774.node = NNI3087007774;
NTI3137339575.base = NTI33554449;
NTI1560281203.base = NTI33554449;
NTI3137340486.base = NTI33554449;
NTI3137340550.base = NTI2516582403;
NTI3137340452.base = NTI33554449;
var NNI3137340922 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3137340452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3137340922.node = NNI3137340922;
var NNI3137341025 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3137340452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3137341025.node = NNI3137341025;
NTI3137339604.base = NTI33554449;
NTI3019900968.base = NTI33554439;
var NNI3019898980 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898884, name: "Field2", sons: null}]};
NTI3019898980.node = NNI3019898980;
NTI3019898977.base = NTI3019898980;
var NNI3019898974 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898977, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898974.node = NNI3019898974;
NTI3019898994.base = NTI3019898997;
var NNI3019898991 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898994, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898991.node = NNI3019898991;
NTI2969569217.base = NTI3003121668;
var NNI3087007825 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007774, name: "Field2", sons: null}]};
NTI3087007825.node = NNI3087007825;
NTI3087007822.base = NTI3087007825;
var NNI3087007819 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007822, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007819.node = NNI3087007819;
var NNI3087007811 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "root", len: 0, typ: NTI3087007773, name: "root", sons: null}, 
{kind: 1, offset: "nodeToVisualNode", len: 0, typ: NTI3087007819, name: "nodeToVisualNode", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}]};
NTI3087007811.node = NNI3087007811;
NTI3087007775.base = NTI3087007811;
var NNI2969568663 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007775, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2164261152, name: "Field1", sons: null}]};
NTI2969568663.node = NNI2969568663;
var NNI2969568481 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2969568481, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2969568481, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2969568481, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2969568481, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2969568481, name: "SymbolNameChange", len: 0, sons: null}}};
NTI2969568481.node = NNI2969568481;
var NNI2969568484 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI2969568481, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3003121668, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI2969568484.node = NNI2969568484;
NTI2969568482.base = NTI2969568484;
NTI2969572196.base = NTI2969568482;
var NNI2969568631 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121668, name: "Field2", sons: null}]};
NTI2969568631.node = NNI2969568631;
var NNI3003123002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121668, name: "Field1", sons: null}]};
NTI3003123002.node = NNI3003123002;
NTI2818572428.base = NTI33554449;
var NNI2969568637 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2969568637, name: "SymbolCompletion", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2969568637, name: "AstCompletion", len: 0, sons: null}}};
NTI2969568637.node = NNI2969568637;
var NNI2969568638 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI33554445, name: "score", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2969568637, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodeKind", len: 0, typ: NTI3003121667, name: "nodeKind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]}]]}]};
NTI2969568638.node = NNI2969568638;
NTI3204448274.base = NTI2969568638;
NTI1979711498.base = NTI33554435;
NTI1979711504.base = NTI1979711498;
NTI1979711531.base = NTI33554435;
NTI2969571585.base = NTI2969568638;
var NNI2969572490 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121668, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2969572490.node = NNI2969572490;
var NNI2969572495 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2969572490, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2969572495.node = NNI2969572495;
var NNI2818572441 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572442, name: "Field1", sons: null}]};
NTI2818572441.node = NNI2818572441;
NTI2818572440.base = NTI2818572441;
var NNI2818572434 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572440, name: "handlers", sons: null};
NTI2818572434.node = NNI2818572434;
var NNI2818572458 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572459, name: "Field1", sons: null}]};
NTI2818572458.node = NNI2818572458;
NTI2818572457.base = NTI2818572458;
var NNI2818572451 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572457, name: "handlers", sons: null};
NTI2818572451.node = NNI2818572451;
var NNI2818572475 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572476, name: "Field1", sons: null}]};
NTI2818572475.node = NNI2818572475;
NTI2818572474.base = NTI2818572475;
var NNI2818572468 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572474, name: "handlers", sons: null};
NTI2818572468.node = NNI2818572468;
NTI2818572479.base = NTI2818572292;
NTI2818572480.base = NTI2818572292;
var NNI2885681158 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681158.node = NNI2885681158;
NTI2885681158.base = NTI33555171;
NTI2885681157.base = NTI2885681158;
var NNI2885681156 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681156.node = NNI2885681156;
NTI2885681155.base = NTI2885681156;
var NNI2885681162 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681162.node = NNI2885681162;
NTI2885681162.base = NTI33555171;
NTI2885681161.base = NTI2885681162;
var NNI2885681160 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681160.node = NNI2885681160;
NTI2885681160.base = NTI33555171;
NTI2885681159.base = NTI2885681160;
NTI2818572425.base = NTI2818572422;
var NNI2818572424 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "parts", len: 0, typ: NTI2818572425, name: "parts", sons: null}]};
NTI2818572424.node = NNI2818572424;
NTI2818572423.base = NTI2818572424;
var NNI2818572507 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572423, name: "Field2", sons: null}]};
NTI2818572507.node = NNI2818572507;
NTI2818572504.base = NTI2818572507;
var NNI2818572501 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572504, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572501.node = NNI2818572501;
var NNI2818572427 = {kind: 2, len: 17, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "lines", len: 0, typ: NTI2818572428, name: "lines", sons: null}, 
{kind: 1, offset: "languageId", len: 0, typ: NTI33554449, name: "languageId", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "textChanged", len: 0, typ: NTI2818572434, name: "textChanged", sons: null}, 
{kind: 1, offset: "textInserted", len: 0, typ: NTI2818572451, name: "textInserted", sons: null}, 
{kind: 1, offset: "textDeleted", len: 0, typ: NTI2818572468, name: "textDeleted", sons: null}, 
{kind: 1, offset: "singleLine", len: 0, typ: NTI33554466, name: "singleLine", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2818572479, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2818572480, name: "redoOps", sons: null}, 
{kind: 1, offset: "tsParser", len: 0, typ: NTI2885681157, name: "tsParser", sons: null}, 
{kind: 1, offset: "tsLanguage", len: 0, typ: NTI2885681155, name: "tsLanguage", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI2885681161, name: "currentTree", sons: null}, 
{kind: 1, offset: "highlightQuery", len: 0, typ: NTI2885681159, name: "highlightQuery", sons: null}, 
{kind: 1, offset: "languageServer", len: 0, typ: NTI2818572486, name: "languageServer", sons: null}, 
{kind: 1, offset: "onRequestSaveHandle", len: 0, typ: NTI33554435, name: "onRequestSaveHandle", sons: null}, 
{kind: 1, offset: "styledTextCache", len: 0, typ: NTI2818572501, name: "styledTextCache", sons: null}]};
NTI2818572427.node = NNI2818572427;
var NNI2214592520 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}]};
NTI2214592520.node = NNI2214592520;
NTI2214592520.base = NTI33555171;
NTI2214592516.base = NTI2214592520;
var NNI2197815306 = {kind: 1, offset: "val", len: 0, typ: NTI2214592516, name: "val", sons: null};
NTI2197815306.node = NNI2197815306;
var NNI2197815300 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2197815306, name: "workspace", sons: null}]};
NTI2197815300.node = NNI2197815300;
NTI2197815300.base = NTI33555171;
NTI2818572427.base = NTI2197815300;
NTI855638541.base = NTI33554449;
NTI855638530.base = NTI33554449;
NTI503316776.base = NTI33554449;
var NNI2449473554 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2449473554, name: "gui", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2449473554, name: "terminal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2449473554, name: "browser", len: 0, sons: null}}};
NTI2449473554.node = NNI2449473554;
var NNI2768240658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240659, name: "Field1", sons: null}]};
NTI2768240658.node = NNI2768240658;
NTI2768240657.base = NTI2768240658;
var NNI2768240651 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240657, name: "handlers", sons: null};
NTI2768240651.node = NNI2768240651;
var NNI2768240683 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240684, name: "Field1", sons: null}]};
NTI2768240683.node = NNI2768240683;
NTI2768240682.base = NTI2768240683;
var NNI2768240676 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240682, name: "handlers", sons: null};
NTI2768240676.node = NNI2768240676;
var NNI2768240705 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240706, name: "Field1", sons: null}]};
NTI2768240705.node = NNI2768240705;
NTI2768240704.base = NTI2768240705;
var NNI2768240698 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240704, name: "handlers", sons: null};
NTI2768240698.node = NNI2768240698;
var NNI2768240722 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240723, name: "Field1", sons: null}]};
NTI2768240722.node = NNI2768240722;
NTI2768240721.base = NTI2768240722;
var NNI2768240715 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240721, name: "handlers", sons: null};
NTI2768240715.node = NNI2768240715;
var NNI2415919121 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919122, name: "Field1", sons: null}]};
NTI2415919121.node = NNI2415919121;
NTI2415919120.base = NTI2415919121;
var NNI2415919114 = {kind: 1, offset: "handlers", len: 0, typ: NTI2415919120, name: "handlers", sons: null};
NTI2415919114.node = NNI2415919114;
var NNI2768240742 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240743, name: "Field1", sons: null}]};
NTI2768240742.node = NNI2768240742;
NTI2768240741.base = NTI2768240742;
var NNI2768240735 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240741, name: "handlers", sons: null};
NTI2768240735.node = NNI2768240735;
var NNI2785017867 = {kind: 1, offset: "getTextBounds", len: 0, typ: NTI2785017880, name: "getTextBounds", sons: null};
NTI2785017867.node = NNI2785017867;
var NNI2768240644 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "redrawEverything", len: 0, typ: NTI33554466, name: "redrawEverything", sons: null}, 
{kind: 1, offset: "onKeyPress", len: 0, typ: NTI2768240651, name: "onKeyPress", sons: null}, 
{kind: 1, offset: "onKeyRelease", len: 0, typ: NTI2768240651, name: "onKeyRelease", sons: null}, 
{kind: 1, offset: "onRune", len: 0, typ: NTI2768240651, name: "onRune", sons: null}, 
{kind: 1, offset: "onMousePress", len: 0, typ: NTI2768240676, name: "onMousePress", sons: null}, 
{kind: 1, offset: "onMouseRelease", len: 0, typ: NTI2768240676, name: "onMouseRelease", sons: null}, 
{kind: 1, offset: "onMouseMove", len: 0, typ: NTI2768240698, name: "onMouseMove", sons: null}, 
{kind: 1, offset: "onScroll", len: 0, typ: NTI2768240715, name: "onScroll", sons: null}, 
{kind: 1, offset: "onCloseRequested", len: 0, typ: NTI2415919114, name: "onCloseRequested", sons: null}, 
{kind: 1, offset: "onDropFile", len: 0, typ: NTI2768240735, name: "onDropFile", sons: null}, 
{kind: 1, offset: "layoutOptions", len: 0, typ: NTI2785017867, name: "layoutOptions", sons: null}]};
NTI2768240644.node = NNI2768240644;
NTI2768240644.base = NTI33555171;
NTI2768240643.base = NTI2768240644;
var NNI1795162126 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1795162126.node = NNI1795162126;
NTI1795162123.base = NTI1795162126;
var NNI1795162120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1795162123, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1795162120.node = NNI1795162120;
var NNI2113929222 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "context", len: 0, typ: NTI33554449, name: "context", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1795162120, name: "commands", sons: null}, 
{kind: 1, offset: "handleActions", len: 0, typ: NTI33554466, name: "handleActions", sons: null}, 
{kind: 1, offset: "handleInputs", len: 0, typ: NTI33554466, name: "handleInputs", sons: null}, 
{kind: 1, offset: "consumeAllActions", len: 0, typ: NTI33554466, name: "consumeAllActions", sons: null}, 
{kind: 1, offset: "consumeAllInput", len: 0, typ: NTI33554466, name: "consumeAllInput", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}]};
NTI2113929222.node = NNI2113929222;
NTI2113929221.base = NTI2113929222;
var NNI1291845685 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2113929221, name: "Field2", sons: null}]};
NTI1291845685.node = NNI1291845685;
NTI1291845682.base = NTI1291845685;
var NNI1291845679 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845682, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845679.node = NNI1291845679;
var NNI1291845700 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1291845700.node = NNI1291845700;
NTI1291845697.base = NTI1291845700;
var NNI1291845694 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845697, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845694.node = NNI1291845694;
NTI1174405131.base = NTI1174405133;
NTI2214592519.base = NTI2214592516;
var NNI2214592518 = {kind: 1, offset: "folders", len: 0, typ: NTI2214592519, name: "folders", sons: null};
NTI2214592518.node = NNI2214592518;
NTI2214592515.base = NTI2214592518;
var NNI2751463428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2751463428.node = NNI2751463428;
NTI2751463428.base = NTI33555171;
NTI2751463427.base = NTI2751463428;
NTI2197815299.base = NTI2197815300;
var NNI2013265955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "current", len: 0, typ: NTI33554435, name: "current", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554435, name: "persistent", sons: null}]};
NTI2013265955.node = NNI2013265955;
var NNI2013265986 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265952, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2013265951, name: "Field2", sons: null}]};
NTI2013265986.node = NNI2013265986;
NTI2013265983.base = NTI2013265986;
var NNI2013265980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265983, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265980.node = NNI2013265980;
var NNI2013265953 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isTerminal", len: 0, typ: NTI33554466, name: "isTerminal", sons: null}, 
{kind: 1, offset: "nextState", len: 0, typ: NTI33554435, name: "nextState", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554466, name: "persistent", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554449, name: "function", sons: null}, 
{kind: 1, offset: "inputs", len: 0, typ: NTI2013265980, name: "inputs", sons: null}]};
NTI2013265953.node = NNI2013265953;
NTI2013265989.base = NTI2013265953;
var NNI2013265988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "persistentState", len: 0, typ: NTI33554435, name: "persistentState", sons: null}, 
{kind: 1, offset: "states", len: 0, typ: NTI2013265989, name: "states", sons: null}]};
NTI2013265988.node = NNI2013265988;
NTI2013265954.base = NTI2013265988;
var NNI2113929229 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "state", len: 0, typ: NTI2013265955, name: "state", sons: null}, 
{kind: 1, offset: "config", len: 0, typ: NTI2113929221, name: "config", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "dfaInternal", len: 0, typ: NTI2013265954, name: "dfaInternal", sons: null}, 
{kind: 1, offset: "handleAction", len: 0, typ: NTI2113929230, name: "handleAction", sons: null}, 
{kind: 1, offset: "handleInput", len: 0, typ: NTI2113929231, name: "handleInput", sons: null}]};
NTI2113929229.node = NNI2113929229;
NTI2113929228.base = NTI2113929229;
var NNI2415919108 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2449473539, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "renderHeader", len: 0, typ: NTI33554466, name: "renderHeader", sons: null}, 
{kind: 1, offset: "fillAvailableSpace", len: 0, typ: NTI33554466, name: "fillAvailableSpace", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2415919114, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI33554466, name: "active", sons: null}]};
NTI2415919108.node = NNI2415919108;
NTI2415919108.base = NTI33555171;
NTI2415919107.base = NTI2415919108;
var NNI1291845636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "document", len: 0, typ: NTI2197815299, name: "document", sons: null}, 
{kind: 1, offset: "editor", len: 0, typ: NTI2415919107, name: "editor", sons: null}]};
NTI1291845636.node = NNI1291845636;
NTI1291845635.base = NTI1291845636;
NTI1291845702.base = NTI1291845635;
var NNI1291845642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845642.node = NNI1291845642;
NTI1291845642.base = NTI33555171;
NTI1291845637.base = NTI1291845642;
var NNI1291845660 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554446, name: "Field2", sons: null}]};
NTI1291845660.node = NNI1291845660;
NTI1291845657.base = NTI1291845660;
var NNI1291845654 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845657, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845654.node = NNI1291845654;
var NNI1291845646 = {kind: 1, offset: "props", len: 0, typ: NTI1291845654, name: "props", sons: null};
NTI1291845646.node = NNI1291845646;
NTI1291845641.base = NTI1291845646;
var NNI2516582438 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2550136835, name: "Field2", sons: null}]};
NTI2516582438.node = NNI2516582438;
NTI2516582435.base = NTI2516582438;
var NNI2516582432 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2516582435, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2516582432.node = NNI2516582432;
var NNI2516582412 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2550136835, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2516582412.node = NNI2516582412;
NTI2516582423.base = NTI2516582403;
var NNI2516582404 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "foreground", len: 0, typ: NTI2516582412, name: "foreground", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2516582412, name: "background", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI2516582423, name: "fontStyle", sons: null}]};
NTI2516582404.node = NNI2516582404;
var NNI2516582453 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2516582404, name: "Field2", sons: null}]};
NTI2516582453.node = NNI2516582453;
NTI2516582450.base = NTI2516582453;
var NNI2516582447 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2516582450, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2516582447.node = NNI2516582447;
var NNI2516582424 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "colorSpace", len: 0, typ: NTI33554449, name: "colorSpace", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2516582432, name: "colors", sons: null}, 
{kind: 1, offset: "tokenColors", len: 0, typ: NTI2516582447, name: "tokenColors", sons: null}]};
NTI2516582424.node = NNI2516582424;
NTI2516582405.base = NTI2516582424;
var NNI1291845716 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473539, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2415919107, name: "Field2", sons: null}]};
NTI1291845716.node = NNI1291845716;
NTI1291845713.base = NTI1291845716;
var NNI1291845710 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845713, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845710.node = NNI1291845710;
var NNI2483027972 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2449473539, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2415919114, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}]};
NTI2483027972.node = NNI2483027972;
NTI2483027972.base = NTI33555171;
NTI2483027971.base = NTI2483027972;
NTI1291845718.base = NTI2483027971;
var NNI1291845731 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845732, name: "Field1", sons: null}]};
NTI1291845731.node = NNI1291845731;
NTI1291845730.base = NTI1291845731;
var NNI1291845724 = {kind: 1, offset: "handlers", len: 0, typ: NTI1291845730, name: "handlers", sons: null};
NTI1291845724.node = NNI1291845724;
NTI1291845738.base = NTI2415919107;
var NNI1291845670 = {kind: 2, len: 37, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "backend", len: 0, typ: NTI2449473554, name: "backend", sons: null}, 
{kind: 1, offset: "platform", len: 0, typ: NTI2768240643, name: "platform", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "clearAtlasTimer", len: 0, typ: NTI33554447, name: "clearAtlasTimer", sons: null}, 
{kind: 1, offset: "timer", len: 0, typ: NTI33554447, name: "timer", sons: null}, 
{kind: 1, offset: "frameTimer", len: 0, typ: NTI33554447, name: "frameTimer", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "closeRequested", len: 0, typ: NTI33554466, name: "closeRequested", sons: null}, 
{kind: 1, offset: "widget", len: 0, typ: NTI2785017859, name: "widget", sons: null}, 
{kind: 1, offset: "eventHandlerConfigs", len: 0, typ: NTI1291845679, name: "eventHandlerConfigs", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1627389956, name: "options", sons: null}, 
{kind: 1, offset: "callbacks", len: 0, typ: NTI1291845694, name: "callbacks", sons: null}, 
{kind: 1, offset: "logger", len: 0, typ: NTI1174405131, name: "logger", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2214592515, name: "workspace", sons: null}, 
{kind: 1, offset: "scriptContext", len: 0, typ: NTI2751463427, name: "scriptContext", sons: null}, 
{kind: 1, offset: "initializeCalled", len: 0, typ: NTI33554466, name: "initializeCalled", sons: null}, 
{kind: 1, offset: "statusBarOnTop", len: 0, typ: NTI33554466, name: "statusBarOnTop", sons: null}, 
{kind: 1, offset: "currentView", len: 0, typ: NTI33554435, name: "currentView", sons: null}, 
{kind: 1, offset: "views", len: 0, typ: NTI1291845702, name: "views", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI1291845637, name: "layout", sons: null}, 
{kind: 1, offset: "layout_props", len: 0, typ: NTI1291845641, name: "layout_props", sons: null}, 
{kind: 1, offset: "theme", len: 0, typ: NTI2516582405, name: "theme", sons: null}, 
{kind: 1, offset: "loadedFontSize", len: 0, typ: NTI33554445, name: "loadedFontSize", sons: null}, 
{kind: 1, offset: "editors", len: 0, typ: NTI1291845710, name: "editors", sons: null}, 
{kind: 1, offset: "popups", len: 0, typ: NTI1291845718, name: "popups", sons: null}, 
{kind: 1, offset: "onEditorRegistered", len: 0, typ: NTI1291845724, name: "onEditorRegistered", sons: null}, 
{kind: 1, offset: "onEditorDeregistered", len: 0, typ: NTI1291845724, name: "onEditorDeregistered", sons: null}, 
{kind: 1, offset: "commandLineTextEditor", len: 0, typ: NTI2415919107, name: "commandLineTextEditor", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "commandLineEventHandler", len: 0, typ: NTI2113929228, name: "commandLineEventHandler", sons: null}, 
{kind: 1, offset: "commandLineMode", len: 0, typ: NTI33554466, name: "commandLineMode", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "editor_defaults", len: 0, typ: NTI1291845738, name: "editor_defaults", sons: null}]};
NTI1291845670.node = NNI1291845670;
NTI1291845669.base = NTI1291845670;
NTI2818572426.base = NTI2818572427;
NTI2818572518.base = NTI2449473556;
var NNI2818572516 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572518, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2818572516.node = NNI2818572516;
NTI2818572544.base = NTI2818572547;
var NNI2818572541 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572544, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572541.node = NNI2818572541;
var NNI2449473552 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2449473552, name: "none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2449473552, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2449473552, name: "relative", len: 0, sons: null}}};
NTI2449473552.node = NNI2449473552;
var NNI2818572554 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2449473552, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572554.node = NNI2818572554;
NTI2818572562.base = NTI2818572423;
NTI2818572563.base = NTI2919235630;
var NNI2818572565 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI2818572565.node = NNI2818572565;
NTI2818572564.base = NTI2818572565;
var NNI2818572567 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI2818572567.node = NNI2818572567;
NTI2818572566.base = NTI2818572567;
var NNI2818572510 = {kind: 2, len: 29, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2818572426, name: "document", sons: null}, 
{kind: 1, offset: "selectionsInternal", len: 0, typ: NTI2449473556, name: "selectionsInternal", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2818572516, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "searchQuery", len: 0, typ: NTI33554449, name: "searchQuery", sons: null}, 
{kind: 1, offset: "searchRegex", len: 0, typ: NTI2818572524, name: "searchRegex", sons: null}, 
{kind: 1, offset: "searchResults", len: 0, typ: NTI2818572541, name: "searchResults", sons: null}, 
{kind: 1, offset: "targetColumn", len: 0, typ: NTI33554435, name: "targetColumn", sons: null}, 
{kind: 1, offset: "hideCursorWhenInactive", len: 0, typ: NTI33554466, name: "hideCursorWhenInactive", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2113929228, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "commandCount", len: 0, typ: NTI33554435, name: "commandCount", sons: null}, 
{kind: 1, offset: "commandCountRestore", len: 0, typ: NTI33554435, name: "commandCountRestore", sons: null}, 
{kind: 1, offset: "disableScrolling", len: 0, typ: NTI33554466, name: "disableScrolling", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lineNumbers", len: 0, typ: NTI2818572554, name: "lineNumbers", sons: null}, 
{kind: 1, offset: "lastRenderedLines", len: 0, typ: NTI2818572562, name: "lastRenderedLines", sons: null}, 
{kind: 1, offset: "disableCompletions", len: 0, typ: NTI33554466, name: "disableCompletions", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2818572563, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "completionsBaseIndex", len: 0, typ: NTI33554435, name: "completionsBaseIndex", sons: null}, 
{kind: 1, offset: "completionsScrollOffset", len: 0, typ: NTI33554445, name: "completionsScrollOffset", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2818572564, name: "lastItems", sons: null}, 
{kind: 1, offset: "lastCompletionsWidget", len: 0, typ: NTI2785017859, name: "lastCompletionsWidget", sons: null}, 
{kind: 1, offset: "lastCompletionWidgets", len: 0, typ: NTI2818572566, name: "lastCompletionWidgets", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}, 
{kind: 1, offset: "scrollToCompletion", len: 0, typ: NTI1191183280, name: "scrollToCompletion", sons: null}]};
NTI2818572510.node = NNI2818572510;
NTI2818572510.base = NTI2415919108;
var NNI3003121804 = {kind: 1, offset: "val", len: 0, typ: NTI3003121668, name: "val", sons: null};
NTI3003121804.node = NNI3003121804;
var NNI2969569466 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121668, name: "Field1", sons: null}]};
NTI2969569466.node = NNI2969569466;
NTI2818572509.base = NTI2818572510;
var NNI3187671048 = {kind: 1, offset: "score", len: 0, typ: NTI33554446, name: "score", sons: null};
NTI3187671048.node = NNI3187671048;
NTI3187671048.base = NTI33555171;
NTI3187671043.base = NTI3187671048;
NTI3187671063.base = NTI3187671043;
var NNI3187671068 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI3187671068.node = NNI3187671068;
NTI3187671067.base = NTI3187671068;
var NNI2499805188 = {kind: 1, offset: "canceled", len: 0, typ: NTI33554466, name: "canceled", sons: null};
NTI2499805188.node = NNI2499805188;
NTI2499805187.base = NTI2499805188;
var NNI3187671062 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554435, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3187671063, name: "completions", sons: null}, 
{kind: 1, offset: "handleItemConfirmed", len: 0, typ: NTI3187671064, name: "handleItemConfirmed", sons: null}, 
{kind: 1, offset: "handleItemSelected", len: 0, typ: NTI3187671065, name: "handleItemSelected", sons: null}, 
{kind: 1, offset: "handleCanceled", len: 0, typ: NTI3187671066, name: "handleCanceled", sons: null}, 
{kind: 1, offset: "getCompletions", len: 0, typ: NTI3187671069, name: "getCompletions", sons: null}, 
{kind: 1, offset: "getCompletionsAsync", len: 0, typ: NTI3187671071, name: "getCompletionsAsync", sons: null}, 
{kind: 1, offset: "getCompletionsAsyncIter", len: 0, typ: NTI3187671074, name: "getCompletionsAsyncIter", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3187671067, name: "lastItems", sons: null}, 
{kind: 1, offset: "cancellationToken", len: 0, typ: NTI2499805187, name: "cancellationToken", sons: null}]};
NTI3187671062.node = NNI3187671062;
NTI3187671062.base = NTI2483027972;
NTI3187671080.base = NTI3187671043;
var NNI1660944862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1660944862.node = NNI1660944862;
var NNI1660944394 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1660944395, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1660944396, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1660944397, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1660944398, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1660944399, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1660944404, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1660944406, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1660944407, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1660944408, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1660944409, name: "flushImpl", sons: null}]};
NTI1660944394.node = NNI1660944394;
NTI1660944394.base = NTI33555171;
NTI1660944862.base = NTI1660944394;
var NNI1694498820 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498820, name: "tkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498820, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498820, name: "tkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498820, name: "tkInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498820, name: "tkFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498820, name: "tkTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498820, name: "tkFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498820, name: "tkNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498820, name: "tkCurlyLe", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498820, name: "tkCurlyRi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498820, name: "tkBracketLe", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498820, name: "tkBracketRi", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1694498820, name: "tkColon", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1694498820, name: "tkComma", len: 0, sons: null}}};
NTI1694498820.node = NNI1694498820;
var NNI1694498819 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498819, name: "jsonError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498819, name: "jsonEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498819, name: "jsonString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498819, name: "jsonInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498819, name: "jsonFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498819, name: "jsonTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498819, name: "jsonFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498819, name: "jsonNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498819, name: "jsonObjectStart", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498819, name: "jsonObjectEnd", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498819, name: "jsonArrayStart", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498819, name: "jsonArrayEnd", len: 0, sons: null}}};
NTI1694498819.node = NNI1694498819;
var NNI1694498821 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498821, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498821, name: "errInvalidToken", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498821, name: "errStringExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498821, name: "errColonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498821, name: "errCommaExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498821, name: "errBracketRiExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498821, name: "errCurlyRiExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498821, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498821, name: "errEOC_Expected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498821, name: "errEofExpected", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498821, name: "errExprExpected", len: 0, sons: null}}};
NTI1694498821.node = NNI1694498821;
var NNI1694498822 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498822, name: "stateEof", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498822, name: "stateStart", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498822, name: "stateObject", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498822, name: "stateArray", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498822, name: "stateExpectArrayComma", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498822, name: "stateExpectObjectComma", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498822, name: "stateExpectColon", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498822, name: "stateExpectValue", len: 0, sons: null}}};
NTI1694498822.node = NNI1694498822;
NTI1694498830.base = NTI1694498822;
var NNI1694498823 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "tok", len: 0, typ: NTI1694498820, name: "tok", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1694498819, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1694498821, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1694498830, name: "state", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "rawStringLiterals", len: 0, typ: NTI33554466, name: "rawStringLiterals", sons: null}]};
NTI1694498823.node = NNI1694498823;
NTI1660944393.base = NTI1660944394;
NTI1644167173.base = NTI33554448;
var NNI1644167172 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1660944393, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1644167173, name: "refillChars", sons: null}]};
NTI1644167172.node = NNI1644167172;
NTI1644167172.base = NTI33555171;
NTI1694498823.base = NTI1644167172;
NTI1694498863.base = NTI1694498822;
var NNI1694498825 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498825.node = NNI1694498825;
NTI1694498825.base = NTI134217746;
var NNI1811939334 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939334, name: "joptEnumOrd", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939334, name: "joptEnumSymbol", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939334, name: "joptEnumString", len: 0, sons: null}}};
NTI1811939334.node = NNI1811939334;
var NNI1811939335 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939335, name: "joptJsonNodeAsRef", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939335, name: "joptJsonNodeAsCopy", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939335, name: "joptJsonNodeAsObject", len: 0, sons: null}}};
NTI1811939335.node = NNI1811939335;
var NNI1811939336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "enumMode", len: 0, typ: NTI1811939334, name: "enumMode", sons: null}, 
{kind: 1, offset: "jsonNodeMode", len: 0, typ: NTI1811939335, name: "jsonNodeMode", sons: null}]};
NTI1811939336.node = NNI1811939336;
NTI3187671047.base = NTI3187671062;
var NNI3187671304 = {kind: 1, offset: "val", len: 0, typ: NTI3187671047, name: "val", sons: null};
NTI3187671304.node = NNI3187671304;
var NNI1291848451 = {kind: 1, offset: "val", len: 0, typ: NTI2483027971, name: "val", sons: null};
NTI1291848451.node = NNI1291848451;
var NNI1694498824 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498824.node = NNI1694498824;
NTI1694498824.base = NTI134217746;
var NNI2818584815 = {kind: 1, offset: "val", len: 0, typ: NTI1627389956, name: "val", sons: null};
NTI2818584815.node = NNI2818584815;
NTI1979711564.base = NTI33554449;
var NNI2969576809 = {kind: 1, offset: "completion", len: 0, typ: NTI2969568638, name: "completion", sons: null};
NTI2969576809.node = NNI2969576809;
NTI2969576809.base = NTI3187671048;
var NNI2550136836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}]};
NTI2550136836.node = NNI2550136836;
var NNI3087007968 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI3087007968.node = NNI3087007968;
var NNI3087007897 = {kind: 1, offset: "val", len: 0, typ: NTI3087007773, name: "val", sons: null};
NTI3087007897.node = NNI3087007897;
var NNI2969577698 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554446, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI2969577698.node = NNI2969577698;
NTI3271557144.base = NTI3271557129;
var NNI3271557123 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI3271557123, name: "Int", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3271557123, name: "String", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3271557123, name: "Bool", len: 0, sons: null}}};
NTI3271557123.node = NNI3271557123;
var NNI3271557125 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI33554449, name: "role", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI3271557123, name: "typ", sons: null}]};
NTI3271557125.node = NNI3271557125;
NTI3271557145.base = NTI3271557125;
var NNI3271557126 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI3271557126, name: "1", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3271557126, name: "1..n", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3271557126, name: "0..1", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3271557126, name: "0..n", len: 0, sons: null}}};
NTI3271557126.node = NNI3271557126;
var NNI3271557127 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI33554449, name: "role", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI2046820355, name: "class", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI3271557126, name: "count", sons: null}]};
NTI3271557127.node = NNI3271557127;
NTI3271557146.base = NTI3271557127;
var NNI3271557128 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI33554449, name: "role", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI2046820355, name: "class", sons: null}]};
NTI3271557128.node = NNI3271557128;
NTI3271557147.base = NTI3271557128;
var NNI3271557143 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "alias", len: 0, typ: NTI33554449, name: "alias", sons: null}, 
{kind: 1, offset: "base", len: 0, typ: NTI3271557129, name: "base", sons: null}, 
{kind: 1, offset: "interfaces", len: 0, typ: NTI3271557144, name: "interfaces", sons: null}, 
{kind: 1, offset: "isAbstract", len: 0, typ: NTI33554466, name: "isAbstract", sons: null}, 
{kind: 1, offset: "isInterface", len: 0, typ: NTI33554466, name: "isInterface", sons: null}, 
{kind: 1, offset: "properties", len: 0, typ: NTI3271557145, name: "properties", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3271557146, name: "children", sons: null}, 
{kind: 1, offset: "references", len: 0, typ: NTI3271557147, name: "references", sons: null}]};
NTI3271557143.node = NNI3271557143;
NTI3271557129.base = NTI3271557143;
NTI3271561624.base = NTI3271557129;
NTI3271561638.base = NTI3271557125;
NTI3271561657.base = NTI3271557127;
NTI3271561676.base = NTI3271557128;
var NNI3271557170 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557332, name: "Field1", sons: null}]};
NTI3271557170.node = NNI3271557170;
NTI3271557169.base = NTI3271557170;
var NNI3271563676 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557332, name: "Field1", sons: null}]};
NTI3271563676.node = NNI3271563676;
var NNI3338665995 = {kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null};
NTI3338665995.node = NNI3338665995;
NTI3271557134.base = NTI3271557157;
NTI3271557223.base = NTI3271557130;
var NNI3271557203 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557129, name: "Field2", sons: null}]};
NTI3271557203.node = NNI3271557203;
NTI3271557200.base = NTI3271557203;
var NNI3271557197 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557200, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557197.node = NNI3271557197;
NTI3271557208.base = NTI3271557129;
var NNI3271557220 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557208, name: "Field2", sons: null}]};
NTI3271557220.node = NNI3271557220;
NTI3271557217.base = NTI3271557220;
var NNI3271557214 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557217, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557214.node = NNI3271557214;
var NNI3271557182 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557169, name: "Field2", sons: null}]};
NTI3271557182.node = NNI3271557182;
NTI3271557179.base = NTI3271557182;
var NNI3271557176 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557179, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557176.node = NNI3271557176;
var NNI3003121885 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2046820355, name: "Field2", sons: null}]};
NTI3003121885.node = NNI3003121885;
NTI3003121882.base = NTI3003121885;
var NNI3003121879 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3003121882, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3003121879.node = NNI3003121879;
var NNI3271557165 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "builders", len: 0, typ: NTI3271557176, name: "builders", sons: null}, 
{kind: 1, offset: "preferredBuilders", len: 0, typ: NTI3003121879, name: "preferredBuilders", sons: null}]};
NTI3271557165.node = NNI3271557165;
NTI3271557137.base = NTI3271557165;
var NNI3271557189 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "classes", len: 0, typ: NTI3271557197, name: "classes", sons: null}, 
{kind: 1, offset: "childClasses", len: 0, typ: NTI3271557214, name: "childClasses", sons: null}, 
{kind: 1, offset: "builder", len: 0, typ: NTI3271557137, name: "builder", sons: null}]};
NTI3271557189.node = NNI3271557189;
NTI3271557138.base = NTI3271557189;
NTI3271557224.base = NTI3271557138;
NTI3271557225.base = NTI3271557139;
var NNI3271557239 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557138, name: "Field2", sons: null}]};
NTI3271557239.node = NNI3271557239;
NTI3271557236.base = NTI3271557239;
var NNI3271557233 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557236, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557233.node = NNI3271557233;
var NNI3271557254 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557130, name: "Field2", sons: null}]};
NTI3271557254.node = NNI3271557254;
NTI3271557251.base = NTI3271557254;
var NNI3271557248 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557251, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557248.node = NNI3271557248;
var NNI3271557269 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557270, name: "Field1", sons: null}]};
NTI3271557269.node = NNI3271557269;
NTI3271557268.base = NTI3271557269;
var NNI3271557262 = {kind: 1, offset: "handlers", len: 0, typ: NTI3271557268, name: "handlers", sons: null};
NTI3271557262.node = NNI3271557262;
var NNI3271557293 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557294, name: "Field1", sons: null}]};
NTI3271557293.node = NNI3271557293;
NTI3271557292.base = NTI3271557293;
var NNI3271557286 = {kind: 1, offset: "handlers", len: 0, typ: NTI3271557292, name: "handlers", sons: null};
NTI3271557286.node = NNI3271557286;
var NNI3271557310 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557311, name: "Field1", sons: null}]};
NTI3271557310.node = NNI3271557310;
NTI3271557309.base = NTI3271557310;
var NNI3271557303 = {kind: 1, offset: "handlers", len: 0, typ: NTI3271557309, name: "handlers", sons: null};
NTI3271557303.node = NNI3271557303;
var NNI3271557222 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "rootNodes", len: 0, typ: NTI3271557223, name: "rootNodes", sons: null}, 
{kind: 1, offset: "languages", len: 0, typ: NTI3271557224, name: "languages", sons: null}, 
{kind: 1, offset: "importedModels", len: 0, typ: NTI3271557225, name: "importedModels", sons: null}, 
{kind: 1, offset: "classesToLanguages", len: 0, typ: NTI3271557233, name: "classesToLanguages", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI3271557248, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeDeleted", len: 0, typ: NTI3271557262, name: "onNodeDeleted", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI3271557262, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "onNodePropertyChanged", len: 0, typ: NTI3271557286, name: "onNodePropertyChanged", sons: null}, 
{kind: 1, offset: "onNodeReferenceChanged", len: 0, typ: NTI3271557303, name: "onNodeReferenceChanged", sons: null}]};
NTI3271557222.node = NNI3271557222;
NTI3271557139.base = NTI3271557222;
var NNI3271557124 = {kind: 3, offset: "kind", len: 3, typ: NTI3271557123, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(1), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(2), {kind: 1, offset: "boolValue", len: 0, typ: NTI33554466, name: "boolValue", sons: null}]]};
NTI3271557124.node = NNI3271557124;
var NNI3271557150 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557124, name: "Field1", sons: null}]};
NTI3271557150.node = NNI3271557150;
NTI3271557149.base = NTI3271557150;
var NNI3271557152 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}]};
NTI3271557152.node = NNI3271557152;
NTI3271557151.base = NTI3271557152;
NTI3271557155.base = NTI3271557130;
var NNI3271557154 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557155, name: "Field1", sons: null}]};
NTI3271557154.node = NNI3271557154;
NTI3271557153.base = NTI3271557154;
var NNI3271557148 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI2046820355, name: "class", sons: null}, 
{kind: 1, offset: "model", len: 0, typ: NTI3271557139, name: "model", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3271557130, name: "parent", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI2046820355, name: "role", sons: null}, 
{kind: 1, offset: "properties", len: 0, typ: NTI3271557149, name: "properties", sons: null}, 
{kind: 1, offset: "references", len: 0, typ: NTI3271557151, name: "references", sons: null}, 
{kind: 1, offset: "childLists", len: 0, typ: NTI3271557153, name: "childLists", sons: null}]};
NTI3271557148.node = NNI3271557148;
NTI3271557130.base = NTI3271557148;
var NNI3271557156 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onNewLine", len: 0, typ: NTI33554466, name: "onNewLine", sons: null}, 
{kind: 1, offset: "addNewlineAfter", len: 0, typ: NTI33554466, name: "addNewlineAfter", sons: null}, 
{kind: 1, offset: "indentChildren", len: 0, typ: NTI33554466, name: "indentChildren", sons: null}, 
{kind: 1, offset: "noSpaceLeft", len: 0, typ: NTI33554466, name: "noSpaceLeft", sons: null}, 
{kind: 1, offset: "noSpaceRight", len: 0, typ: NTI33554466, name: "noSpaceRight", sons: null}]};
NTI3271557156.node = NNI3271557156;
NTI3271557133.base = NTI3271557156;
NTI3271557162.base = NTI33554449;
NTI3271557163.base = NTI33554449;
var NNI3271557157 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3271557134, name: "parent", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3271557130, name: "node", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554435, name: "line", sons: null}, 
{kind: 1, offset: "displayText", len: 0, typ: NTI2348810261, name: "displayText", sons: null}, 
{kind: 1, offset: "shadowText", len: 0, typ: NTI33554449, name: "shadowText", sons: null}, 
{kind: 1, offset: "fillChildren", len: 0, typ: NTI3271557161, name: "fillChildren", sons: null}, 
{kind: 1, offset: "filled", len: 0, typ: NTI33554466, name: "filled", sons: null}, 
{kind: 1, offset: "isVisible", len: 0, typ: NTI3271557330, name: "isVisible", sons: null}, 
{kind: 1, offset: "nodeFactory", len: 0, typ: NTI3271557331, name: "nodeFactory", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI3271557133, name: "style", sons: null}, 
{kind: 1, offset: "disableSelection", len: 0, typ: NTI33554466, name: "disableSelection", sons: null}, 
{kind: 1, offset: "disableEditing", len: 0, typ: NTI33554466, name: "disableEditing", sons: null}, 
{kind: 1, offset: "deleteImmediately", len: 0, typ: NTI33554466, name: "deleteImmediately", sons: null}, 
{kind: 1, offset: "deleteNeighbor", len: 0, typ: NTI33554466, name: "deleteNeighbor", sons: null}, 
{kind: 1, offset: "dontReplaceWithDefault", len: 0, typ: NTI33554466, name: "dontReplaceWithDefault", sons: null}, 
{kind: 1, offset: "increaseIndentBefore", len: 0, typ: NTI33554466, name: "increaseIndentBefore", sons: null}, 
{kind: 1, offset: "decreaseIndentBefore", len: 0, typ: NTI33554466, name: "decreaseIndentBefore", sons: null}, 
{kind: 1, offset: "increaseIndentAfter", len: 0, typ: NTI33554466, name: "increaseIndentAfter", sons: null}, 
{kind: 1, offset: "decreaseIndentAfter", len: 0, typ: NTI33554466, name: "decreaseIndentAfter", sons: null}, 
{kind: 1, offset: "fontSizeIncreasePercent", len: 0, typ: NTI33554445, name: "fontSizeIncreasePercent", sons: null}, 
{kind: 1, offset: "themeForegroundColors", len: 0, typ: NTI3271557162, name: "themeForegroundColors", sons: null}, 
{kind: 1, offset: "themeBackgroundColors", len: 0, typ: NTI3271557163, name: "themeBackgroundColors", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2550136835, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2550136835, name: "backgroundColor", sons: null}]};
NTI3271557157.node = NNI3271557157;
NTI3271557157.base = NTI33555171;
NTI3338665995.base = NTI3271557157;
var NNI3338665996 = {kind: 1, offset: "property", len: 0, typ: NTI2046820355, name: "property", sons: null};
NTI3338665996.node = NNI3338665996;
NTI3338665996.base = NTI3271557157;
var NNI2785017860 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2785017860, name: "Absolute", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2785017860, name: "Horizontal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2785017860, name: "Vertical", len: 0, sons: null}}};
NTI2785017860.node = NNI2785017860;
var NNI2785017861 = {kind: 3, offset: "kind", len: 3, typ: NTI2785017860, name: "kind", sons: [[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]]};
NTI2785017861.node = NNI2785017861;
NTI3338665994.base = NTI3271557134;
var NNI3338665993 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "layout", len: 0, typ: NTI2785017861, name: "layout", sons: null}, 
{kind: 1, offset: "inline", len: 0, typ: NTI33554466, name: "inline", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3338665994, name: "children", sons: null}]};
NTI3338665993.node = NNI3338665993;
NTI3338665993.base = NTI3271557157;
NTI3271562130.base = NTI3271557130;
var NNI3271557164 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3271557164.node = NNI3271557164;
NTI3271557164.base = NTI3271557157;
var NNI3338666673 = {kind: 1, offset: "val", len: 0, typ: NTI3271557332, name: "val", sons: null};
NTI3338666673.node = NNI3338666673;
var NNI3271561961 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3271557125, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3271561961.node = NNI3271561961;
var NNI3271561711 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3271557128, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3271561711.node = NNI3271561711;
var NNI3338665997 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "reference", len: 0, typ: NTI2046820355, name: "reference", sons: null}, 
{kind: 1, offset: "property", len: 0, typ: NTI2046820355, name: "property", sons: null}, 
{kind: 1, offset: "child", len: 0, typ: NTI3271557134, name: "child", sons: null}]};
NTI3338665997.node = NNI3338665997;
NTI3338665997.base = NTI3271557157;
var NNI3271561483 = {kind: 1, offset: "val", len: 0, typ: NTI3271557130, name: "val", sons: null};
NTI3271561483.node = NNI3271561483;
var NNI3271561836 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3271557127, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3271561836.node = NNI3271561836;
var NNI3338665999 = {kind: 1, offset: "role", len: 0, typ: NTI2046820355, name: "role", sons: null};
NTI3338665999.node = NNI3338665999;
NTI3338665999.base = NTI3271557157;
var NNI3338665998 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3338665998.node = NNI3338665998;
NTI3338665998.base = NTI3271557157;
var NNI3305111573 = {kind: 2, offset: 0, typ: null, name: null, len: 19, sons: {"0": {kind: 1, offset: 0, typ: NTI3305111573, name: "nkSupport", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3305111573, name: "nkTopLevel", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3305111573, name: "nkName", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3305111573, name: "nkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3305111573, name: "nkProc", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3305111573, name: "nkType", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3305111573, name: "nkString", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI3305111573, name: "nkChar", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI3305111573, name: "nkBool", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI3305111573, name: "nkPointer", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI3305111573, name: "nkSeq", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI3305111573, name: "nkArray", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI3305111573, name: "nkTuple", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI3305111573, name: "nkTable", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI3305111573, name: "nkObject", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI3305111573, name: "nkTopPair", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI3305111573, name: "nkFieldPair", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI3305111573, name: "nkNil", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI3305111573, name: "nkRepeat", len: 0, sons: null}}};
NTI3305111573.node = NNI3305111573;
NTI3305111577.base = NTI3305111574;
var NNI3305111576 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI3305111573, name: "kind", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554449, name: "value", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI3305111577, name: "nodes", sons: null}]};
NTI3305111576.node = NNI3305111576;
NTI3305111574.base = NTI3305111576;
NTI3305112120.base = NTI3305111574;
NTI3321889497.base = NTI3305111574;
NTI3321889672.base = NTI3305111574;
NTI3321889721.base = NTI3305111574;
NTI3321889709.base = NTI3305111574;
NTI3321889775.base = NTI3305111574;
NTI3321889763.base = NTI3305111574;
NTI3321889834.base = NTI3305111574;
NTI3321889822.base = NTI3305111574;
NTI3321889637.base = NTI3305111574;
NTI3321889556.base = NTI3305111574;
NTI3321889885.base = NTI3305111574;
NTI3321890016.base = NTI3305111574;
NTI3321890004.base = NTI3305111574;
NTI3321889991.base = NTI3305111574;
NTI3321890063.base = NTI3305111574;
NTI3321889975.base = NTI3305111574;
NTI3321889483.base = NTI3305111574;
var NNI3254780213 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3271557129, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}]};
NTI3254780213.node = NNI3254780213;
var NNI3271564556 = {kind: 1, offset: "val", len: 0, typ: NTI3271557134, name: "val", sons: null};
NTI3271564556.node = NNI3271564556;
NTI3254779908.base = NTI33554435;
var NNI3254779907 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "firstIndex", len: 0, typ: NTI33554435, name: "firstIndex", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI33554435, name: "lastIndex", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI3254779908, name: "path", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3271557130, name: "node", sons: null}, 
{kind: 1, offset: "cell", len: 0, typ: NTI3271557134, name: "cell", sons: null}]};
NTI3254779907.node = NNI3254779907;
var NNI3254779957 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3254779957, name: "SubstituteClass", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3254779957, name: "SubstituteReference", len: 0, sons: null}}};
NTI3254779957.node = NNI3254779957;
var NNI3254779958 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3271557130, name: "parent", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI2046820355, name: "role", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI3271557129, name: "class", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI3254779957, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "referenceRole", len: 0, typ: NTI2046820355, name: "referenceRole", sons: null}, 
{kind: 1, offset: "referenceTarget", len: 0, typ: NTI3271557130, name: "referenceTarget", sons: null}]}]]}]};
NTI3254779958.node = NNI3254779958;
NTI3254789379.base = NTI33554435;
NTI3254780046.base = NTI3271557134;
NTI3254788575.base = NTI33554435;
var NNI3254780132 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3254779907, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3254780132.node = NNI3254780132;
var NNI3254786315 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3254786315.node = NNI3254786315;
var NNI3254788810 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554466, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271564556, name: "Field1", sons: null}]};
NTI3254788810.node = NNI3254788810;
var NNI3254779909 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3254779909, name: "Left", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3254779909, name: "Right", len: 0, sons: null}}};
NTI3254779909.node = NNI3254779909;
var NNI3254791228 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3271557134, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI805306392, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3254779909, name: "Field2", sons: null}]};
NTI3254791228.node = NNI3254791228;
var NNI3254791398 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554466, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271564556, name: "Field1", sons: null}]};
NTI3254791398.node = NNI3254791398;
var NNI3254791544 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3271564556, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3254791544.node = NNI3254791544;
var NNI3254779953 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI3254779953, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3254779953, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3254779953, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3254779953, name: "PropertyChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3254779953, name: "ReferenceChange", len: 0, sons: null}}};
NTI3254779953.node = NNI3254779953;
var NNI3254779962 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI3254779953, name: "kind", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3271557130, name: "parent", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3271557130, name: "node", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI2046820355, name: "role", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3271557124, name: "value", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "slice", len: 0, typ: NTI805306392, name: "slice", sons: null}]};
NTI3254779962.node = NNI3254779962;
NTI3254779954.base = NTI3254779962;
NTI3254779966.base = NTI3254779954;
var NNI3254779955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "operations", len: 0, typ: NTI3254779966, name: "operations", sons: null}]};
NTI3254779955.node = NNI3254779955;
var NNI3254782593 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3271557130, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI3254782593.node = NNI3254782593;
var NNI3271562257 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3271557124, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3271562257.node = NNI3271562257;
var NNI3254782867 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3254779954, name: "Field1", sons: null}]};
NTI3254782867.node = NNI3254782867;
var NNI3254782872 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3254782867, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3254782872.node = NNI3254782872;
var NNI2264924164 = {kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null};
NTI2264924164.node = NNI2264924164;
NTI2264924164.base = NTI2214592520;
NTI2214592521.base = NTI33554449;
NTI2214592522.base = NTI33554449;
var NNI2214592517 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "files", len: 0, typ: NTI2214592521, name: "files", sons: null}, 
{kind: 1, offset: "folders", len: 0, typ: NTI2214592522, name: "folders", sons: null}]};
NTI2214592517.node = NNI2214592517;
var NNI2399141891 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "done", len: 0, typ: NTI33554466, name: "done", sons: null}, 
{kind: 1, offset: "listing", len: 0, typ: NTI2214592517, name: "listing", sons: null}]};
NTI2399141891.node = NNI2399141891;
var NNI2399141907 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2399141891, name: "Field2", sons: null}]};
NTI2399141907.node = NNI2399141907;
NTI2399141904.base = NTI2399141907;
var NNI2399141901 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2399141904, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2399141901.node = NNI2399141901;
var NNI2399141893 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2399141901, name: "cachedDirectoryListings", sons: null}]};
NTI2399141893.node = NNI2399141893;
NTI2399141893.base = NTI2214592520;
var NNI2281701394 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2214592517, name: "Field2", sons: null}]};
NTI2281701394.node = NNI2281701394;
NTI2281701391.base = NTI2281701394;
var NNI2281701388 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2281701391, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2281701388.node = NNI2281701388;
var NNI2281701380 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "user", len: 0, typ: NTI33554449, name: "user", sons: null}, 
{kind: 1, offset: "repository", len: 0, typ: NTI33554449, name: "repository", sons: null}, 
{kind: 1, offset: "branchOrHash", len: 0, typ: NTI33554449, name: "branchOrHash", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2281701388, name: "cachedDirectoryListings", sons: null}, 
{kind: 1, offset: "pathToSha", len: 0, typ: NTI1795162120, name: "pathToSha", sons: null}]};
NTI2281701380.node = NNI2281701380;
NTI2281701380.base = NTI2214592520;
NTI2969568628.base = NTI2969568631;
var NNI2969568625 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2969568628, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2969568625.node = NNI2969568625;
NTI2969568633.base = NTI2969568636;
NTI2969568634.base = NTI2969568482;
NTI2969568635.base = NTI2969568482;
var NNI2969568612 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "symbols", len: 0, typ: NTI3087008713, name: "symbols", sons: null}, 
{kind: 1, offset: "rootNode", len: 0, typ: NTI3003121668, name: "rootNode", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI2969568625, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI2969568633, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2969568634, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2969568635, name: "redoOps", sons: null}]};
NTI2969568612.node = NNI2969568612;
NTI2969568612.base = NTI2197815300;
var NNI3271557328 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557139, name: "Field2", sons: null}]};
NTI3271557328.node = NNI3271557328;
NTI3271557325.base = NTI3271557328;
var NNI3271557322 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557325, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557322.node = NNI3271557322;
var NNI3271557314 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "models", len: 0, typ: NTI3271557322, name: "models", sons: null}, 
{kind: 1, offset: "builder", len: 0, typ: NTI3271557137, name: "builder", sons: null}]};
NTI3271557314.node = NNI3271557314;
NTI3271557140.base = NTI3271557314;
NTI3254779968.base = NTI3254779955;
NTI3254779969.base = NTI3254779955;
var NNI3254779982 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3254779983, name: "Field1", sons: null}]};
NTI3254779982.node = NNI3254779982;
NTI3254779981.base = NTI3254779982;
var NNI3254779975 = {kind: 1, offset: "handlers", len: 0, typ: NTI3254779981, name: "handlers", sons: null};
NTI3254779975.node = NNI3254779975;
var NNI3254780002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3254780003, name: "Field1", sons: null}]};
NTI3254780002.node = NNI3254780002;
NTI3254780001.base = NTI3254780002;
var NNI3254779995 = {kind: 1, offset: "handlers", len: 0, typ: NTI3254780001, name: "handlers", sons: null};
NTI3254779995.node = NNI3254779995;
var NNI3254779967 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "model", len: 0, typ: NTI3271557139, name: "model", sons: null}, 
{kind: 1, offset: "project", len: 0, typ: NTI3271557140, name: "project", sons: null}, 
{kind: 1, offset: "currentTransaction", len: 0, typ: NTI3254779955, name: "currentTransaction", sons: null}, 
{kind: 1, offset: "undoList", len: 0, typ: NTI3254779968, name: "undoList", sons: null}, 
{kind: 1, offset: "redoList", len: 0, typ: NTI3254779969, name: "redoList", sons: null}, 
{kind: 1, offset: "onModelChanged", len: 0, typ: NTI3254779975, name: "onModelChanged", sons: null}, 
{kind: 1, offset: "onFinishedUndoTransaction", len: 0, typ: NTI3254779995, name: "onFinishedUndoTransaction", sons: null}, 
{kind: 1, offset: "onFinishedRedoTransaction", len: 0, typ: NTI3254779995, name: "onFinishedRedoTransaction", sons: null}, 
{kind: 1, offset: "builder", len: 0, typ: NTI3271557137, name: "builder", sons: null}]};
NTI3254779967.node = NNI3254779967;
NTI3254779967.base = NTI2197815300;
var NNI1291845663 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1291845663, name: "Local", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1291845663, name: "AbsytreeServer", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1291845663, name: "Github", len: 0, sons: null}}};
NTI1291845663.node = NNI1291845663;
var NNI1291845643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845643.node = NNI1291845643;
NTI1291845643.base = NTI1291845642;
var NNI1291845644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845644.node = NNI1291845644;
NTI1291845644.base = NTI1291845642;
var NNI1291845645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845645.node = NNI1291845645;
NTI1291845645.base = NTI1291845642;
var NNI2113929938 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2113929938.node = NNI2113929938;
var NNI3271564230 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557169, name: "Field1", sons: null}]};
NTI3271564230.node = NNI3271564230;
var NNI3271564383 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}]};
NTI3271564383.node = NNI3271564383;
var NNI1442840583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1442840583.node = NNI1442840583;
var NNI1291848506 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}]};
NTI1291848506.node = NNI1291848506;
NTI1291848506.base = NTI3187671048;
var NNI1291848508 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "workspaceFolder", len: 0, typ: NTI2197815306, name: "workspaceFolder", sons: null}]};
NTI1291848508.node = NNI1291848508;
NTI1291848508.base = NTI3187671048;
NTI1291854034.base = NTI2449473539;
var NNI1291848319 = {kind: 1, offset: "val", len: 0, typ: NTI2415919107, name: "val", sons: null};
NTI1291848319.node = NNI1291848319;
NTI2969568611.base = NTI2969568612;
NTI2969568649.base = NTI3003121668;
var NNI2969568647 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2969568649, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2969568647.node = NNI2969568647;
NTI2785017872.base = NTI2785017859;
var NNI2785017871 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "maskContent", len: 0, typ: NTI33554466, name: "maskContent", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI2785017861, name: "layout", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2785017872, name: "children", sons: null}]};
NTI2785017871.node = NNI2785017871;
NTI2785017871.base = NTI2785017868;
NTI2785017862.base = NTI2785017871;
NTI2969568656.base = NTI2969568638;
var NNI2969568658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI2969568658.node = NNI2969568658;
NTI2969568657.base = NTI2969568658;
NTI2969568662.base = NTI2969568663;
var NNI2969568664 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568664.node = NNI2969568664;
var NNI2969568665 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568665.node = NNI2969568665;
var NNI2969568666 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568666.node = NNI2969568666;
var NNI2969568667 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568667.node = NNI2969568667;
var NNI2969568641 = {kind: 2, len: 31, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2969568611, name: "document", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI3003121668, name: "selectedNode", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2969568647, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "selectionFuture", len: 0, typ: NTI2969568647, name: "selectionFuture", sons: null}, 
{kind: 1, offset: "deletedNode", len: 0, typ: NTI3003121783, name: "deletedNode", sons: null}, 
{kind: 1, offset: "lastRootNode", len: 0, typ: NTI3003121668, name: "lastRootNode", sons: null}, 
{kind: 1, offset: "currentlyEditedSymbol", len: 0, typ: NTI2046820355, name: "currentlyEditedSymbol", sons: null}, 
{kind: 1, offset: "currentlyEditedNode", len: 0, typ: NTI3003121668, name: "currentlyEditedNode", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "textDocument", len: 0, typ: NTI2818572426, name: "textDocument", sons: null}, 
{kind: 1, offset: "textEditEventHandler", len: 0, typ: NTI2113929228, name: "textEditEventHandler", sons: null}, 
{kind: 1, offset: "textEditorWidget", len: 0, typ: NTI2785017862, name: "textEditorWidget", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2969568656, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2969568657, name: "lastItems", sons: null}, 
{kind: 1, offset: "completionsBaseIndex", len: 0, typ: NTI33554435, name: "completionsBaseIndex", sons: null}, 
{kind: 1, offset: "completionsScrollOffset", len: 0, typ: NTI33554445, name: "completionsScrollOffset", sons: null}, 
{kind: 1, offset: "scrollToCompletion", len: 0, typ: NTI1191183280, name: "scrollToCompletion", sons: null}, 
{kind: 1, offset: "lastCompletionsWidget", len: 0, typ: NTI2785017859, name: "lastCompletionsWidget", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastLayouts", len: 0, typ: NTI2969568662, name: "lastLayouts", sons: null}, 
{kind: 1, offset: "lastEditCommand", len: 0, typ: NTI2969568664, name: "lastEditCommand", sons: null}, 
{kind: 1, offset: "lastMoveCommand", len: 0, typ: NTI2969568665, name: "lastMoveCommand", sons: null}, 
{kind: 1, offset: "lastOtherCommand", len: 0, typ: NTI2969568666, name: "lastOtherCommand", sons: null}, 
{kind: 1, offset: "lastCommand", len: 0, typ: NTI2969568667, name: "lastCommand", sons: null}]};
NTI2969568641.node = NNI2969568641;
NTI2969568641.base = NTI2415919108;
NTI3254779956.base = NTI3254779967;
var NNI3254780028 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3254779907, name: "Field2", sons: null}]};
NTI3254780028.node = NNI3254780028;
NTI3254780025.base = NTI3254780028;
var NNI3254780022 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3254780025, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3254780022.node = NNI3254780022;
var NNI3254780043 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557134, name: "Field2", sons: null}]};
NTI3254780043.node = NNI3254780043;
NTI3254780040.base = NTI3254780043;
var NNI3254780037 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3254780040, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3254780037.node = NNI3254780037;
NTI3254780045.base = NTI3254780046;
var NNI3254780069 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785017859, name: "Field2", sons: null}]};
NTI3254780069.node = NNI3254780069;
NTI3254780066.base = NTI3254780069;
var NNI3254780063 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3254780066, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3254780063.node = NNI3254780063;
var NNI3254780055 = {kind: 1, offset: "cellToWidget", len: 0, typ: NTI3254780063, name: "cellToWidget", sons: null};
NTI3254780055.node = NNI3254780055;
NTI3254779960.base = NTI3254780055;
NTI3254780047.base = NTI33554435;
NTI3254780048.base = NTI3254779958;
NTI3254780049.base = NTI3254779958;
var NNI3254780051 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI3254780051.node = NNI3254780051;
NTI3254780050.base = NTI3254780051;
var NNI3254780014 = {kind: 2, len: 26, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI3254779956, name: "document", sons: null}, 
{kind: 1, offset: "transactionCursors", len: 0, typ: NTI3254780022, name: "transactionCursors", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2113929228, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "nodeToCell", len: 0, typ: NTI3254780037, name: "nodeToCell", sons: null}, 
{kind: 1, offset: "logicalLines", len: 0, typ: NTI3254780045, name: "logicalLines", sons: null}, 
{kind: 1, offset: "cellWidgetContext", len: 0, typ: NTI3254779960, name: "cellWidgetContext", sons: null}, 
{kind: 1, offset: "mCursor", len: 0, typ: NTI3254779907, name: "mCursor", sons: null}, 
{kind: 1, offset: "mCursorBeforeTransaction", len: 0, typ: NTI3254779907, name: "mCursorBeforeTransaction", sons: null}, 
{kind: 1, offset: "useDefaultCellBuilder", len: 0, typ: NTI33554466, name: "useDefaultCellBuilder", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI3254780047, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "hasCompletions", len: 0, typ: NTI33554466, name: "hasCompletions", sons: null}, 
{kind: 1, offset: "filteredCompletions", len: 0, typ: NTI3254780048, name: "filteredCompletions", sons: null}, 
{kind: 1, offset: "unfilteredCompletions", len: 0, typ: NTI3254780049, name: "unfilteredCompletions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3254780050, name: "lastItems", sons: null}, 
{kind: 1, offset: "completionsBaseIndex", len: 0, typ: NTI33554435, name: "completionsBaseIndex", sons: null}, 
{kind: 1, offset: "completionsScrollOffset", len: 0, typ: NTI33554445, name: "completionsScrollOffset", sons: null}, 
{kind: 1, offset: "scrollToCompletion", len: 0, typ: NTI1191183280, name: "scrollToCompletion", sons: null}, 
{kind: 1, offset: "lastCompletionsWidget", len: 0, typ: NTI2785017859, name: "lastCompletionsWidget", sons: null}]};
NTI3254780014.node = NNI3254780014;
NTI3254780014.base = NTI2415919108;
var NNI1291855112 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291855112.node = NNI1291855112;
var NNI1291855113 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291855113.node = NNI1291855113;
var NNI1291855111 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1291855112, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291855113, name: "Field1", sons: null}]};
NTI1291855111.node = NNI1291855111;
NTI1291855119.base = NTI1291855111;
NTI1291855106.base = NTI2449473548;
var NNI1275068527 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068527.node = NNI1275068527;
NTI1275068527.base = NTI33555171;
NTI1275068430.base = NTI1275068527;
NTI1275068556.base = NTI1275068434;
var NNI1275068555 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1275068556, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1275068555.node = NNI1275068555;
NTI1275068555.base = NTI1275068541;
NTI1275068444.base = NTI1275068555;
var NNI1275068554 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1275068554.node = NNI1275068554;
NTI1275068554.base = NTI1275068541;
NTI1275068443.base = NTI1275068554;
NTI1275068542.base = NTI1275068443;
NTI1275068543.base = NTI1275068443;
var NNI1275068541 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1275068430, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1275068444, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1275068542, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1275068543, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1275068541.node = NNI1275068541;
NTI1275068432.base = NTI1275068530;
NTI1275068531.base = NTI1275068432;
NTI1275068532.base = NTI1275068432;
NTI1275068533.base = NTI1275068432;
var NNI1275068431 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1275068431, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068431, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068431, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068431, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275068431, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275068431, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275068431, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275068431, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275068431, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275068431, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275068431, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275068431, name: "NotationNode", len: 0, sons: null}}};
NTI1275068431.node = NNI1275068431;
var NNI1275068553 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068553.node = NNI1275068553;
NTI1275068553.base = NTI1275068541;
NTI1275068442.base = NTI1275068553;
NTI1275068535.base = NTI1275068442;
NTI1275068536.base = NTI1275068444;
var NNI1275068557 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1275068557.node = NNI1275068557;
NTI1275068557.base = NTI1275068541;
NTI1275068445.base = NTI1275068557;
NTI1275068537.base = NTI1275068445;
NTI1275068538.base = NTI1275068434;
var NNI1275068552 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1275068552.node = NNI1275068552;
NTI1275068552.base = NTI1275068541;
NTI1275068441.base = NTI1275068552;
NTI1275068539.base = NTI1275068441;
var NNI1275068551 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068551.node = NNI1275068551;
NTI1275068551.base = NTI1275068541;
NTI1275068440.base = NTI1275068551;
NTI1275068540.base = NTI1275068440;
var NNI1275068601 = {kind: 1, offset: "then", len: 0, typ: NTI1275068602, name: "then", sons: null};
NTI1275068601.node = NNI1275068601;
NTI1275068481.base = NTI1275068601;
var NNI1275068604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1275068481, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1275068605, name: "onloadingdone", sons: null}]};
NTI1275068604.node = NNI1275068604;
NTI1275068482.base = NTI1275068604;
var NNI1275068534 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1275068434, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1275068434, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1275068434, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1275068434, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1275068535, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1275068536, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1275068537, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1275068538, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1275068539, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1275068540, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1275068482, name: "fonts", sons: null}]};
NTI1275068534.node = NNI1275068534;
NTI1275068534.base = NTI1275068530;
NTI1275068433.base = NTI1275068534;
var NNI1275068558 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1275068558.node = NNI1275068558;
NTI1275068558.base = NTI33555171;
NTI1275068446.base = NTI1275068558;
var NNI1275068530 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1275068531, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1275068532, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1275068533, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1275068432, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1275068432, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1275068432, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1275068431, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1275068432, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1275068432, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1275068432, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1275068433, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1275068446, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1275068434, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1275068530.node = NNI1275068530;
var NNI1275068485 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1275068486, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1275068487, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1275068488, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1275068489, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1275068490, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1275068491, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1275068492, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1275068493, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1275068494, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1275068495, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1275068496, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1275068497, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1275068498, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1275068499, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1275068500, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1275068501, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1275068502, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1275068503, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1275068504, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1275068505, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1275068506, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1275068507, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1275068508, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1275068509, name: "onloadend", sons: null}]};
NTI1275068485.node = NNI1275068485;
NTI1275068485.base = NTI33555171;
NTI1275068530.base = NTI1275068485;
NTI1275068541.base = NTI1275068530;
NTI1275068434.base = NTI1275068541;
NTI3489660940.base = NTI2147483653;
var NNI3489660953 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3489660954, name: "Field1", sons: null}]};
NTI3489660953.node = NNI3489660953;
NTI3489660952.base = NTI3489660953;
var NNI3489660946 = {kind: 1, offset: "handlers", len: 0, typ: NTI3489660952, name: "handlers", sons: null};
NTI3489660946.node = NNI3489660946;
var NNI3489660970 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554449, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI3489660970.node = NNI3489660970;
var NNI3489660977 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3489660974, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3489660974, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3489660970, name: "value", sons: null}]};
NTI3489660977.node = NNI3489660977;
NTI3489660974.base = NTI3489660977;
var NNI3489660988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3489660974, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3489660974, name: "tail", sons: null}]};
NTI3489660988.node = NNI3489660988;
NTI3489660998.base = NTI3489660977;
var NNI3489661006 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3489660998, name: "Field2", sons: null}]};
NTI3489661006.node = NNI3489661006;
NTI3489661003.base = NTI3489661006;
var NNI3489661015 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3489661003, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3489661015.node = NNI3489661015;
var NNI2818583371 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2818583371.node = NNI2818583371;
NTI2818583368.base = NTI2818583371;
var NNI2818583365 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818583368, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818583365.node = NNI2818583365;
var NNI3489660965 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "capacity", len: 0, typ: NTI33554435, name: "capacity", sons: null}, 
{kind: 1, offset: "list", len: 0, typ: NTI3489660988, name: "list", sons: null}, 
{kind: 1, offset: "table", len: 0, typ: NTI3489661015, name: "table", sons: null}, 
{kind: 1, offset: "recordRemovedKeys", len: 0, typ: NTI33554466, name: "recordRemovedKeys", sons: null}, 
{kind: 1, offset: "removedKeys", len: 0, typ: NTI2818583365, name: "removedKeys", sons: null}]};
NTI3489660965.node = NNI3489660965;
NTI3489660964.base = NTI3489660965;
NTI3489661020.base = NTI3489661021;
var NNI1275068561 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI33554466, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI33554466, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI33554466, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI33554466, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI1275068432, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI33554466, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI33554435, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI1275068432, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI33554466, name: "isTrusted", sons: null}]};
NTI1275068561.node = NNI1275068561;
NTI1275068561.base = NTI33555171;
NTI1275068448.base = NTI1275068561;
var NNI3489660939 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI1275068434, name: "content", sons: null}, 
{kind: 1, offset: "boundsStack", len: 0, typ: NTI3489660940, name: "boundsStack", sons: null}, 
{kind: 1, offset: "onResized", len: 0, typ: NTI3489660946, name: "onResized", sons: null}, 
{kind: 1, offset: "mFontSize", len: 0, typ: NTI33554445, name: "mFontSize", sons: null}, 
{kind: 1, offset: "mLineHeight", len: 0, typ: NTI33554445, name: "mLineHeight", sons: null}, 
{kind: 1, offset: "mLineDistance", len: 0, typ: NTI33554445, name: "mLineDistance", sons: null}, 
{kind: 1, offset: "mCharWidth", len: 0, typ: NTI33554445, name: "mCharWidth", sons: null}, 
{kind: 1, offset: "escapedText", len: 0, typ: NTI3489660964, name: "escapedText", sons: null}, 
{kind: 1, offset: "domUpdates", len: 0, typ: NTI3489661020, name: "domUpdates", sons: null}, 
{kind: 1, offset: "currentEvent", len: 0, typ: NTI1275068448, name: "currentEvent", sons: null}]};
NTI3489660939.node = NNI3489660939;
NTI3489660939.base = NTI2768240644;
NTI2466250766.base = NTI2113929228;
NTI1291849420.base = NTI2415919108;
NTI1291849426.base = NTI1291849420;
var NNI2550136853 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2550136853.node = NNI2550136853;
NTI2550136853.base = NTI134217746;
var NNI2533359773 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI2533359773.node = NNI2533359773;
var NNI1291850607 = {kind: 1, offset: "val", len: 0, typ: NTI1291845669, name: "val", sons: null};
NTI1291850607.node = NNI1291850607;
NTI1627390088.base = NTI1627389956;
var NNI1291845664 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1291845663, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI33554449, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "settings", len: 0, typ: NTI1627389956, name: "settings", sons: null}]};
NTI1291845664.node = NNI1291845664;
NTI1291845667.base = NTI1291845664;
var NNI1291845662 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "ast", len: 0, typ: NTI33554466, name: "ast", sons: null}, 
{kind: 1, offset: "languageID", len: 0, typ: NTI33554449, name: "languageID", sons: null}, 
{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspaceId", len: 0, typ: NTI33554449, name: "workspaceId", sons: null}]};
NTI1291845662.node = NNI1291845662;
NTI1291845668.base = NTI1291845662;
var NNI1291845666 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "theme", len: 0, typ: NTI33554449, name: "theme", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554446, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "workspaceFolders", len: 0, typ: NTI1291845667, name: "workspaceFolders", sons: null}, 
{kind: 1, offset: "openEditors", len: 0, typ: NTI1291845668, name: "openEditors", sons: null}]};
NTI1291845666.node = NNI1291845666;
var NNI2801795076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2801795076.node = NNI2801795076;
NTI2801795076.base = NTI2751463428;
var NNI1627391161 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1627389956, name: "Field1", sons: null}]};
NTI1627391161.node = NNI1627391161;
NTI2516582915.base = NTI2516582403;
var NNI2516584388 = {kind: 1, offset: "val", len: 0, typ: NTI2516582405, name: "val", sons: null};
NTI2516584388.node = NNI2516584388;
NTI2785017874.base = NTI2785017859;
var NNI2785017873 = {kind: 1, offset: "children", len: 0, typ: NTI2785017874, name: "children", sons: null};
NTI2785017873.node = NNI2785017873;
NTI2785017873.base = NTI2785017868;
NTI2785017876.base = NTI2785017859;
var NNI2785017875 = {kind: 1, offset: "children", len: 0, typ: NTI2785017876, name: "children", sons: null};
NTI2785017875.node = NNI2785017875;
NTI2785017875.base = NTI2785017868;
NTI2785017878.base = NTI2785017859;
var NNI2785017877 = {kind: 1, offset: "children", len: 0, typ: NTI2785017878, name: "children", sons: null};
NTI2785017877.node = NNI2785017877;
NTI2785017877.base = NTI2785017868;
var NNI2785017879 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "lastRenderedText", len: 0, typ: NTI33554449, name: "lastRenderedText", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2516582404, name: "style", sons: null}]};
NTI2785017879.node = NNI2785017879;
NTI2785017879.base = NTI2785017868;
var NNI2818578635 = {kind: 1, offset: "val", len: 0, typ: NTI2818572509, name: "val", sons: null};
NTI2818578635.node = NNI2818578635;
NTI2969568640.base = NTI2969568641;
var NNI2969574382 = {kind: 1, offset: "val", len: 0, typ: NTI2969568640, name: "val", sons: null};
NTI2969574382.node = NNI2969574382;
NTI3254779959.base = NTI3254780014;
var NNI3254787440 = {kind: 1, offset: "val", len: 0, typ: NTI3254779959, name: "val", sons: null};
NTI3254787440.node = NNI3254787440;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555176;
NTI1191182365.base = NTI1191182401;
NTI1191182363.base = NTI1191182393;
NTI1191182362.base = NTI1191182389;
NTI1191182361.base = NTI1191182385;
var NNI1191182354 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182354, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182354, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182354, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182354, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182354, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182354, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182354, name: "Sunday", len: 0, sons: null}}};
NTI1191182354.node = NNI1191182354;
NTI1191182364.base = NTI1191182397;
var NNI1191182409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1191182410, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1191182411, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1191182409.node = NNI1191182409;
NTI1191182374.base = NTI1191182409;
var NNI1191182369 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1191182363, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1191182362, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1191182361, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1191182354, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1191182364, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1191182374, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1191182369.node = NNI1191182369;
NTI1191182369.base = NTI33555171;
var NNI1191182368 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182368.node = NNI1191182368;
var NNI1191182370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182370.node = NNI1191182370;
NTI1191182360.base = NTI1191182380;
var NNI1191182353 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1191182353, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182353, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182353, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182353, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182353, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182353, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1191182353, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1191182353, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1191182353, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1191182353, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1191182353, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1191182353, name: "December", len: 0, sons: null}}};
NTI1191182353.node = NNI1191182353;
var NNI1191182532 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1191182360, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1191182353, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1191182532.node = NNI1191182532;
var NNI1191182375 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1191182368, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1191182375.node = NNI1191182375;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555177;
NTI2919237549.base = NTI2919235613;
var NNI2919237548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2919237549, name: "Field1", sons: null}]};
NTI2919237548.node = NNI2919237548;
var NNI2466250756 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2466250756.node = NNI2466250756;
NTI2466250756.base = NTI2415919108;
NTI2415919187.base = NTI2113929228;
NTI3254784092.base = NTI3305111574;
NTI3254784171.base = NTI3305111574;
NTI3254784193.base = NTI3305111574;
NTI3254784215.base = NTI3305111574;
NTI3254784259.base = NTI3305111574;
NTI3254784458.base = NTI3305111574;
NTI3254784708.base = NTI3305111574;
NTI3254784696.base = NTI3305111574;
NTI3254784656.base = NTI3305111574;
NTI3254784810.base = NTI3305111574;
NTI3254784798.base = NTI3305111574;
NTI3254784758.base = NTI3305111574;
NTI3254784907.base = NTI3305111574;
NTI3254784895.base = NTI3305111574;
NTI3254784855.base = NTI3305111574;
NTI3254784156.base = NTI3305111574;
NTI3254784990.base = NTI3305111574;
NTI3254784975.base = NTI3305111574;
NTI3254784963.base = NTI3305111574;
NTI3254785051.base = NTI3305111574;
NTI3254785039.base = NTI3305111574;
NTI3254785091.base = NTI3305111574;
NTI3254785079.base = NTI3305111574;
NTI3254784125.base = NTI3305111574;
NTI3254785171.base = NTI3305111574;
NTI3254785285.base = NTI3305111574;
NTI3254785383.base = NTI3305111574;
NTI3254785409.base = NTI3305111574;
NTI3254785136.base = NTI3305111574;
NTI3254784072.base = NTI3305111574;
var NNI2818585311 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818585311.node = NNI2818585311;
var NNI2818585265 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2449473546, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818585265.node = NNI2818585265;
NTI3204448261.base = NTI2969568638;
var NNI3204448264 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI3204448264.node = NNI3204448264;
NTI3204448263.base = NTI3204448264;
var NNI3204448260 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2969568611, name: "document", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3204448261, name: "completions", sons: null}, 
{kind: 1, offset: "handleSymbolSelected", len: 0, typ: NTI3204448262, name: "handleSymbolSelected", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3204448263, name: "lastItems", sons: null}]};
NTI3204448260.node = NNI3204448260;
NTI3204448260.base = NTI2483027972;
NTI3187671275.base = NTI2113929228;
var NNI3204448400 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2969568638, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3204448400.node = NNI3204448400;
var NNI3187671186 = {kind: 1, offset: "val", len: 0, typ: NTI3187671043, name: "val", sons: null};
NTI3187671186.node = NNI3187671186;
var NNI2785018408 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2147483653, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2785018408.node = NNI2785018408;
NTI1291847200.base = NTI2147483653;
var NNI2130706435 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2130706435, name: "Relative", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2130706435, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2130706435, name: "Percent", len: 0, sons: null}}};
NTI2130706435.node = NNI2130706435;
var NNI2130706436 = {kind: 3, offset: "kind", len: 3, typ: NTI2130706435, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rel", len: 0, typ: NTI33554446, name: "rel", sons: null}], 
[setConstr(1), {kind: 1, offset: "abs", len: 0, typ: NTI33554446, name: "abs", sons: null}], 
[setConstr(2), {kind: 1, offset: "per", len: 0, typ: NTI33554446, name: "per", sons: null}]]};
NTI2130706436.node = NNI2130706436;
var NNI2130706495 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2147483653, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI2130706495.node = NNI2130706495;
NTI1291846989.base = NTI2147483653;
NTI3254789242.base = NTI33554435;
var NNI3472883847 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2550136835, name: "Field1", sons: null}]};
NTI3472883847.node = NNI3472883847;
var NNI3087007841 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007773, name: "Field2", sons: null}]};
NTI3087007841.node = NNI3087007841;
NTI3087007838.base = NTI3087007841;
var NNI3087007835 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007838, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007835.node = NNI3087007835;
NTI2516582848.base = NTI2516582403;
var NNI3221226150 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007774, name: "Field1", sons: null}]};
NTI3221226150.node = NNI3221226150;
NTI3422552568.base = NTI2516582403;
NTI3422552567.base = NTI33554449;
var NNI3422552566 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI3422552567, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI33554449, name: "Field4", sons: null}, 
{kind: 1, offset: "Field5", len: 0, typ: NTI33554449, name: "Field5", sons: null}, 
{kind: 1, offset: "Field6", len: 0, typ: NTI3422552568, name: "Field6", sons: null}]};
NTI3422552566.node = NNI3422552566;
var NNI3422552551 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI3422552551.node = NNI3422552551;
var NNI2550136837 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554441, name: "a", sons: null}]};
NTI2550136837.node = NNI2550136837;
var NNI2885681170 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681170.node = NNI2885681170;
NTI2885681170.base = NTI33555171;
NTI2885681169.base = NTI2885681170;
NTI2885681249.base = NTI2885681169;
var NNI3439329284 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3439329284.node = NNI3439329284;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function modInt(a_33556899, b_33556900) {
        if (b_33556900 == 0) raiseDivByZero();
    if (b_33556900 == -1 && a_33556899 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556899 % b_33556900);
  

  
}

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}
                      var helper_2063597622 = new Uint32Array([3198944359, 3630892171]);

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function divInt(a_33556895, b_33556896) {
        if (b_33556896 == 0) raiseDivByZero();
    if (b_33556896 == -1 && a_33556895 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556895 / b_33556896);
  

  
}

function eqStrings(a_33556874, b_33556875) {
        if (a_33556874 == b_33556875) return true;
    if (a_33556874 === null && b_33556875.length == 0) return true;
    if (b_33556875 === null && a_33556874.length == 0) return true;
    if ((!a_33556874) || (!b_33556875)) return false;
    var alen = a_33556874.length;
    if (alen != b_33556875.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556874[i] != b_33556875[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr();
var ConstSet10 = setConstr();

function SetPlus(a_33556858, b_33556859) {
        var result = {};
    for (var elem in a_33556858) { result[elem] = true; }
    for (var elem in b_33556859) { result[elem] = true; }
    return result;
  

  
}
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(2);

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet14 = setConstr();

function SetEq(a_33556842, b_33556843) {
        for (var elem in a_33556842) { if (!b_33556843[elem]) return false; }
    for (var elem in b_33556843) { if (!a_33556842[elem]) return false; }
    return true;
  

  
}

function reprEnum(e_33557353, typ_33557354) {
  var result_33557355 = [];

    var tmp_33557356 = false;
    var item_33557357 = typ_33557354.node.sons[e_33557353];
    tmp_33557356 = item_33557357 !== undefined
    if (tmp_33557356) {
    result_33557355 = nimCopy(null, makeNimstrLit(item_33557357.name), NTI33554449);
    }
    else {
      result_33557355 = nimCopy(null, (HEX24_369098760(e_33557353) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557355;

}
var ConstSet15 = setConstr();
var ConstSet16 = setConstr(1);
    var toUpperRanges_788530129 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_788530130 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_788530127 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_788530128 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);

function SetMinus(a_33556862, b_33556863) {
        var result = {};
    for (var elem in a_33556862) {
      if (!b_33556863[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 90]);
var ConstSet21 = setConstr(5);

function raiseFieldError2(f_33556718, discVal_33556719) {
    raiseException({message: (f_33556718 || []).concat(discVal_33556719 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556451) {
  var result_33556452 = [];

    if (x_33556451) {
    result_33556452 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556452 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556452;

}

function reprDiscriminant(e_33557377, typ_33557378) {
    var Temporary1;

  var result_33557379 = [];

    switch (typ_33557378.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557377, typ_33557378);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557377 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557377);
      break;
    }
    result_33557379 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557379;

}

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}
var ConstSet22 = setConstr(4);

function genericReset(x_33557114, ti_33557115) {
  var result_33557116 = null;

    result_33557116 = null;
    switch (ti_33557115.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557074(ti_33557115)) {
              result_33557116 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557116 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557115.kind == 17)) {
      result_33557116 = {m_type: ti_33557115};
      }
      else {
        result_33557116 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557116 = [];
    
      break;
    case 4:
    case 16:
            result_33557116 = new Array(x_33557114.length);
      for (var i = 0; i < x_33557114.length; ++i) {
        result_33557116[i] = genericReset(x_33557114[i], ti_33557115.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557116;

}
var ConstSet23 = setConstr(13, 10);
var ConstSet24 = setConstr(2);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(3);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(0);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(1);
var ConstSet36 = setConstr(2);
var ConstSet37 = setConstr(2);
var ConstSet38 = setConstr(2);
var ConstSet39 = setConstr(0);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(0);
var ConstSet42 = setConstr(1);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(1);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(2);
var ConstSet47 = setConstr(2);
var ConstSet48 = setConstr(2);
var ConstSet49 = setConstr(47, 47);
var ConstSet50 = setConstr(47, 47);
var ConstSet51 = setConstr(47, 47);
var ConstSet52 = setConstr(5);
var ConstSet53 = setConstr(5);

function isObj(obj_33557181, subclass_33557182) {
  var result_33557183 = false;

  BeforeRet: {
    var x_33557184 = obj_33557181;
    if ((x_33557184 == subclass_33557182)) {
    result_33557183 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557184 == subclass_33557182))) break Label2;
          if ((x_33557184 == null)) {
          result_33557183 = false;
          break BeforeRet;
          }
          
          x_33557184 = x_33557184.base;
        }
    };
    result_33557183 = true;
    break BeforeRet;
  };

  return result_33557183;

}

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet54 = setConstr([48, 57], [65, 90], [97, 122]);
var ConstSet55 = setConstr(5);
var ConstSet56 = setConstr(5);
var ConstSet57 = setConstr(2);
var ConstSet58 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet59 = setConstr([65, 90], [97, 122]);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}
    var names_3003123684 = [[69,109,112,116,121], [73,100,101,110,116,105,102,105,101,114], [78,117,109,98,101,114,76,105,116,101,114,97,108], [83,116,114,105,110,103,76,105,116,101,114,97,108], [67,111,110,115,116,68,101,99,108], [76,101,116,68,101,99,108], [86,97,114,68,101,99,108], [78,111,100,101,76,105,115,116], [67,97,108,108], [73,102], [87,104,105,108,101], [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [80,97,114,97,109,115], [65,115,115,105,103,110,109,101,110,116]];
var ConstSet60 = setConstr([48, 57]);
var ConstSet61 = setConstr([48, 57]);
var ConstSet62 = setConstr(4);
var ConstSet63 = setConstr(4);
var ConstSet64 = setConstr(5);
var ConstSet65 = setConstr(2);
var ConstSet66 = setConstr(3);
var ConstSet67 = setConstr(5);
var ConstSet68 = setConstr(6);
var ConstSet69 = setConstr(6);
var ConstSet70 = setConstr(4);
var ConstSet71 = setConstr(4);
var ConstSet72 = setConstr(4);
var ConstSet73 = setConstr(4);
var ConstSet74 = setConstr(4);
var ConstSet75 = setConstr(5);
var ConstSet76 = setConstr(5);
var ConstSet77 = setConstr(4);
var ConstSet78 = setConstr(4);
var ConstSet79 = setConstr(4);
var ConstSet80 = setConstr(4);
var ConstSet81 = setConstr(4);
var ConstSet82 = setConstr(4);
var ConstSet83 = setConstr(4);
var ConstSet84 = setConstr(4);
var ConstSet85 = setConstr(4);
var ConstSet86 = setConstr(6);
var ConstSet87 = setConstr(6);
var ConstSet88 = setConstr(0);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(1);
var ConstSet91 = setConstr(0);
var ConstSet92 = setConstr(4);
var ConstSet93 = setConstr(4);
var ConstSet94 = setConstr(5);
var ConstSet95 = setConstr(4);
var ConstSet96 = setConstr(4);
var ConstSet97 = setConstr(3);
var ConstSet98 = setConstr(2);
var ConstSet99 = setConstr(5);
var ConstSet100 = setConstr(4);
var ConstSet101 = setConstr(4);
var ConstSet102 = setConstr(5);
var ConstSet103 = setConstr(6);
var ConstSet104 = setConstr(3);
var ConstSet105 = setConstr(3);
var ConstSet106 = setConstr(2);
var ConstSet107 = setConstr(2);
var ConstSet108 = setConstr(4);
var ConstSet109 = setConstr(4);
var ConstSet110 = setConstr(5);
var ConstSet111 = setConstr(5);
var ConstSet112 = setConstr(6);
var ConstSet113 = setConstr(6);
var ConstSet114 = setConstr(5);
var ConstSet115 = setConstr(5);
var ConstSet116 = setConstr(3);
var ConstSet117 = setConstr(2);
var ConstSet118 = setConstr(5);
var ConstSet119 = setConstr(5);
var ConstSet120 = setConstr(6);
var ConstSet121 = setConstr(0);
var ConstSet122 = setConstr(1);
var ConstSet123 = setConstr(1);
var ConstSet124 = setConstr(1);
var ConstSet125 = setConstr(1);
var ConstSet126 = setConstr(4);
var ConstSet127 = setConstr(0);
var ConstSet128 = setConstr(1);
var ConstSet129 = setConstr(0);
var ConstSet130 = setConstr(1);
var ConstSet131 = setConstr(3);
var ConstSet132 = setConstr(3);
var ConstSet133 = setConstr(4);
var ConstSet134 = setConstr(5);
var ConstSet135 = setConstr(4);
var ConstSet136 = setConstr(10, 9, 7);
var ConstSet137 = setConstr(8);
var ConstSet138 = setConstr(1);
var ConstSet139 = setConstr(0);
var ConstSet140 = setConstr(0);
var ConstSet141 = setConstr(0);
var ConstSet142 = setConstr(0);
var ConstSet143 = setConstr();
var ConstSet144 = setConstr(0);
var ConstSet145 = setConstr(0);
var ConstSet146 = setConstr(0);
var ConstSet147 = setConstr(2);
var ConstSet148 = setConstr(1);
var ConstSet149 = setConstr();
var ConstSet150 = setConstr(1);
var ConstSet151 = setConstr(1);
var ConstSet152 = setConstr(1);
var ConstSet153 = setConstr(3);
var ConstSet154 = setConstr(3);
var ConstSet155 = setConstr(3);

function negInt(a_33556925) {
  var result_33556926 = 0;

    result_33556926 = (a_33556925 * -1);

  return result_33556926;

}
var ConstSet156 = setConstr(2);
var ConstSet157 = setConstr(1);
var ConstSet158 = setConstr(1);
var ConstSet159 = setConstr(1);
var ConstSet160 = setConstr(0);
var ConstSet161 = setConstr(0);
var ConstSet162 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet163 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet164 = setConstr([48, 57]);
var ConstSet165 = setConstr([48, 57]);
var ConstSet166 = setConstr(101, 69);
var ConstSet167 = setConstr([48, 57]);
var ConstSet168 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557231, number_33557232, number_33557232_Idx) {
    var Temporary1;

  var result_33557233 = 0;

  BeforeRet: {
    var sign_33557234 = false;
    var i_33557235 = 0;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    sign_33557234 = true;
    i_33557235 += 1;
    }
    }
    if (((s_33557231[i_33557235] == 78) || (s_33557231[i_33557235] == 110))) {
    if (((s_33557231[(i_33557235 + 1)] == 65) || (s_33557231[(i_33557235 + 1)] == 97))) {
    if (((s_33557231[(i_33557235 + 2)] == 78) || (s_33557231[(i_33557235 + 2)] == 110))) {
    if (!((ConstSet162[s_33557231[(i_33557235 + 3)]] != undefined))) {
    number_33557232[number_33557232_Idx] = NaN;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if (((s_33557231[i_33557235] == 73) || (s_33557231[i_33557235] == 105))) {
    if (((s_33557231[(i_33557235 + 1)] == 78) || (s_33557231[(i_33557235 + 1)] == 110))) {
    if (((s_33557231[(i_33557235 + 2)] == 70) || (s_33557231[(i_33557235 + 2)] == 102))) {
    if (!((ConstSet163[s_33557231[(i_33557235 + 3)]] != undefined))) {
    if (sign_33557234) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557232[number_33557232_Idx] = Temporary1;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    var buf_33557254 = [];
    if (sign_33557234) {
    addChar(buf_33557254, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet164[s_33557231[i_33557235]] != undefined)) break Label3;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label5;
                i_33557235 += 1;
              }
          };
        }
    };
    if ((s_33557231[i_33557235] == 46)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet165[s_33557231[i_33557235]] != undefined)) break Label7;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label9;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557254).length == (sign_33557234 ? 1 : 0))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet166[s_33557231[i_33557235]] != undefined)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    }
    }
    if (!((ConstSet167[s_33557231[i_33557235]] != undefined))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet168[s_33557231[i_33557235]] != undefined)) break Label11;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label13;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    number_33557232[number_33557232_Idx] = parseFloatNative_33557211(buf_33557254);
    result_33557233 = i_33557235;
  };

  return result_33557233;

}
var ConstSet169 = setConstr(0);
var ConstSet170 = setConstr(0);
var ConstSet171 = setConstr(0);
var ConstSet172 = setConstr(0);
var ConstSet173 = setConstr(1);
var ConstSet174 = setConstr(4);
var ConstSet175 = setConstr(4);
var ConstSet176 = setConstr(4);
var ConstSet177 = setConstr(4);
var ConstSet178 = setConstr(1);
var ConstSet179 = setConstr(4);
var ConstSet180 = setConstr(0);
var ConstSet181 = setConstr(13, 10);
var ConstSet182 = setConstr(0);
var ConstSet183 = setConstr(1);
var ConstSet184 = setConstr(13, 10);
var ConstSet185 = setConstr([48, 57]);
var ConstSet186 = setConstr([48, 57]);
var ConstSet187 = setConstr(69, 101);
var ConstSet188 = setConstr(43, 45);
var ConstSet189 = setConstr([48, 57]);
var ConstSet190 = setConstr(46, 101, 69);
var ConstSet191 = setConstr([48, 57], [65, 70], [97, 102]);
var ConstSet192 = setConstr([97, 122], [65, 90], 95);
var ConstSet193 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet194 = setConstr(4);
var ConstSet195 = setConstr([48, 57]);
var ConstSet196 = setConstr(0, 125);
var ConstSet197 = setConstr([48, 57]);
var ConstSet198 = setConstr([65, 90]);
var ConstSet199 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);

function absInt(a_33556931) {
    var Temporary1;

  var result_33556932 = 0;

    if ((a_33556931 < 0)) {
    Temporary1 = (a_33556931 * -1);
    }
    else {
    Temporary1 = a_33556931;
    }
    
    result_33556932 = Temporary1;

  return result_33556932;

}
      var tokToStr_1694498894 = [[105,110,118,97,108,105,100,32,116,111,107,101,110], [69,79,70], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [105,110,116,32,108,105,116,101,114,97,108], [102,108,111,97,116,32,108,105,116,101,114,97,108], [116,114,117,101], [102,97,108,115,101], [110,117,108,108], [123], [125], [91], [93], [58], [44]];
var ConstSet200 = setConstr(6);
var ConstSet201 = setConstr(4);
var ConstSet202 = setConstr(4);
var ConstSet203 = setConstr(2);
var ConstSet204 = setConstr(2);
var ConstSet205 = setConstr(3);
var ConstSet206 = setConstr(3);
var ConstSet207 = setConstr(1);
var ConstSet208 = setConstr(1);
var ConstSet209 = setConstr(6);
var ConstSet210 = setConstr(6);
var ConstSet211 = setConstr(5);
var ConstSet212 = setConstr(5);
var ConstSet213 = setConstr(5);
var ConstSet214 = setConstr(5);
var ConstSet215 = setConstr(5);
var ConstSet216 = setConstr(6);
var ConstSet217 = setConstr(5);
var ConstSet218 = setConstr(6);
var ConstSet219 = setConstr(5);
var ConstSet220 = setConstr(4);
var ConstSet221 = setConstr(4);
var ConstSet222 = setConstr(2);
var ConstSet223 = setConstr(3);
var ConstSet224 = setConstr(1);
var ConstSet225 = setConstr(2);
var ConstSet226 = setConstr(2);
var ConstSet227 = setConstr(2);
var ConstSet228 = setConstr(6);

function cmpStrings(a_33556866, b_33556867) {
        if (a_33556866 == b_33556867) return 0;
    if (!a_33556866) return -1;
    if (!b_33556867) return 1;
    for (var i = 0; i < a_33556866.length && i < b_33556867.length; i++) {
      var result = a_33556866[i] - b_33556867[i];
      if (result != 0) return result;
    }
    return a_33556866.length - b_33556867.length;
  

  
}
var ConstSet229 = setConstr(0);
var ConstSet230 = setConstr(0);
var ConstSet231 = setConstr(46, 44);
var ConstSet232 = setConstr([65, 90]);
var ConstSet233 = setConstr([97, 122]);
var ConstSet234 = setConstr(4);
var ConstSet235 = setConstr(13, 10);
var ConstSet236 = setConstr(2);
var ConstSet237 = setConstr(0);
var ConstSet238 = setConstr(1);
var ConstSet239 = setConstr([65, 90]);
var ConstSet240 = setConstr(0, 1);
var ConstSet241 = setConstr(0, 1);
var ConstSet242 = setConstr(0, 1);
var ConstSet243 = setConstr(0);
var ConstSet244 = setConstr(1);
var ConstSet245 = setConstr(2);
var ConstSet246 = setConstr(1);
var ConstSet247 = setConstr(1);
var ConstSet248 = setConstr(1);
    var names_1291854655 = [[76,111,99,97,108], [65,98,115,121,116,114,101,101,83,101,114,118,101,114], [71,105,116,104,117,98]];
var ConstSet249 = setConstr(4);
var ConstSet250 = setConstr(2);
var ConstSet251 = setConstr(3);
var ConstSet252 = setConstr(1);
var ConstSet253 = setConstr(5);
var ConstSet254 = setConstr(5);
var ConstSet255 = setConstr(6);
var ConstSet256 = setConstr(6);
    var names_1291854789 = [[74,78,117,108,108], [74,66,111,111,108], [74,73,110,116], [74,70,108,111,97,116], [74,83,116,114,105,110,103], [74,79,98,106,101,99,116], [74,65,114,114,97,121]];
var ConstSet257 = setConstr(4);
var ConstSet258 = setConstr(2);
var ConstSet259 = setConstr(3);
var ConstSet260 = setConstr(1);
var ConstSet261 = setConstr(5);
var ConstSet262 = setConstr(6);
var ConstSet263 = setConstr(5);
var ConstSet264 = setConstr(5);
var ConstSet265 = setConstr(2);
var ConstSet266 = setConstr(3);
var ConstSet267 = setConstr(1);
var ConstSet268 = setConstr(6);
var ConstSet269 = setConstr(6);
var ConstSet270 = setConstr(6);
var ConstSet271 = setConstr(47, 47);
var ConstSet272 = setConstr(47, 47);
var ConstSet273 = setConstr(47, 47);
var ConstSet274 = setConstr(47, 47);
var ConstSet275 = setConstr(47, 47);
var ConstSet276 = setConstr(47, 47);
var ConstSet277 = setConstr(47, 47);
var ConstSet278 = setConstr(47, 47);
var ConstSet279 = setConstr(47, 47);
var ConstSet280 = setConstr(47, 47);
var ConstSet281 = setConstr(47, 47);
var ConstSet282 = setConstr(47, 47);
var ConstSet283 = setConstr(47, 47);
var ConstSet284 = setConstr(2, 3);
var ConstSet285 = setConstr(2);
var ConstSet286 = setConstr(0);
var ConstSet287 = setConstr(1);
var ConstSet288 = setConstr(1);
var ConstSet289 = setConstr();
var ConstSet290 = setConstr();
var ConstSet291 = setConstr();
var ConstSet292 = setConstr();
var ConstSet293 = setConstr();
var ConstSet294 = setConstr(120, 88);
var ConstSet295 = setConstr(0);
    var names_1291854228 = [[71,117,105], [84,101,114,109,105,110,97,108], [66,114,111,119,115,101,114]];
var ConstSet296 = setConstr(1);
var ConstSet297 = setConstr(1);
var ConstSet298 = setConstr(1);
var ConstSet299 = setConstr(4, 0);
var ConstSet300 = setConstr(4, 0);
var ConstSet301 = setConstr(4);
var ConstSet302 = setConstr(4);
var ConstSet303 = setConstr(4);
var ConstSet304 = setConstr(2, 3);
var ConstSet305 = setConstr(2, 3);
var ConstSet306 = setConstr(3);
var ConstSet307 = setConstr(2);
var ConstSet308 = setConstr(6);
var ConstSet309 = setConstr(4);
var ConstSet310 = setConstr(4);
var ConstSet311 = setConstr(2, 3);
var ConstSet312 = setConstr(2, 3);
var ConstSet313 = setConstr(3);
var ConstSet314 = setConstr(2);
var ConstSet315 = setConstr(2);
var ConstSet316 = setConstr(6);
var ConstSet317 = setConstr(5);
var ConstSet318 = setConstr(4);
var ConstSet319 = setConstr(6);
var ConstSet320 = setConstr(4);
var ConstSet321 = setConstr(6);
var ConstSet322 = setConstr(4);
var ConstSet323 = setConstr();
var ConstSet324 = setConstr(4);
var ConstSet325 = setConstr(6);
var ConstSet326 = setConstr([97, 122], [65, 90], [48, 57], 95);
    var unitWeights_1191182486 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];
    var daysUntilMonthLeap_1191182609 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1191182608 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_1174405135 = [[68,69,66,85,71], [68,69,66,85,71], [73,78,70,79], [78,79,84,73,67,69], [87,65,82,78], [69,82,82,79,82], [70,65,84,65,76], [78,79,78,69]];
var ConstSet327 = setConstr(10, 13, 32, 61);
var ConstSet328 = setConstr(10, 13, 32);
          var decodeTable_2315256293 = new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 62, 255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 63, 255, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]);
    var FormatOpen_503316842 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet329 = setConstr(6);
var ConstSet330 = setConstr(6);
var ConstSet331 = setConstr(6);
var ConstSet332 = setConstr(4);
var ConstSet333 = setConstr(4);
var ConstSet334 = setConstr(6);
var ConstSet335 = setConstr(6);
var ConstSet336 = setConstr(6);
var ConstSet337 = setConstr(0);
var ConstSet338 = setConstr(1);
var ConstSet339 = setConstr(2);
var ConstSet340 = setConstr(0);
var ConstSet341 = setConstr(0);
var ConstSet342 = setConstr(1);
var ConstSet343 = setConstr(2);
var ConstSet344 = setConstr(0);
var ConstSet345 = setConstr(1);
var ConstSet346 = setConstr(0);
var ConstSet347 = setConstr(2);
var ConstSet348 = setConstr([65, 90]);
var ConstSet349 = setConstr();
var ConstSet350 = setConstr(0);
var ConstSet351 = setConstr(0);
var ConstSet352 = setConstr(0);
var ConstSet353 = setConstr(0);
var ConstSet354 = setConstr();
var ConstSet355 = setConstr(1);
var ConstSet356 = setConstr(1);
var ConstSet357 = setConstr();
var ConstSet358 = setConstr(0);
if (globalThis.utcInstance_1191183819 === undefined) {
  globalThis.utcInstance_1191183819 = [null];
}
if (globalThis.localInstance_1191183820 === undefined) {
  globalThis.localInstance_1191183820 = [null];
}
if (globalThis.level_1174405147 === undefined) {
  globalThis.level_1174405147 = [0];
}
if (globalThis.handlers_1174405148 === undefined) {
  globalThis.handlers_1174405148 = [[]];
}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function newCustomLogger_704643091(levelThreshold_704643092, fmtStr_704643093) {
  var result_704643094 = null;

    result_704643094 = ({m_type: NTI704643078, consoleLogger: ({val: null}), fileLogger: ({val: null}), levelThreshold: 0, fmtStr: []});
    result_704643094.fmtStr = nimCopy(null, fmtStr_704643093, NTI33554449);
    result_704643094.levelThreshold = levelThreshold_704643092;

  return result_704643094;

}
var logger_704643272 = [newCustomLogger_704643091(0, [36,108,101,118,101,108,110,97,109,101,32])];

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function some_704643120(val_704643122) {
  var result_704643123 = ({val: null});

    if (!(!((val_704643122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_704643123.val = val_704643122;

  return result_704643123;

}

function newConsoleLogger_1174405235(levelThreshold_1174405236, fmtStr_1174405237, useStderr_1174405238, flushThreshold_1174405239) {
  var result_1174405240 = null;

    result_1174405240 = ({m_type: NTI1174405134, useStderr: false, flushThreshold: 0, levelThreshold: 0, fmtStr: []});
    result_1174405240.fmtStr = nimCopy(null, fmtStr_1174405237, NTI33554449);
    result_1174405240.levelThreshold = levelThreshold_1174405236;
    result_1174405240.flushThreshold = flushThreshold_1174405239;
    result_1174405240.useStderr = useStderr_1174405238;

  return result_1174405240;

}

function enableConsoleLogger_704643118(self_704643119) {
    self_704643119.consoleLogger = nimCopy(self_704643119.consoleLogger, some_704643120(newConsoleLogger_1174405235(self_704643119.levelThreshold, self_704643119.fmtStr, false, 0)), NTI704643084);

  
}
enableConsoleLogger_704643118(logger_704643272[0]);
var objectID_1325400228 = [0];
var state_2063597581 = [{a0: 1773455756, a1: 4275166512}];

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function toCString(oid_2046820500) {
            var Temporary4;

  var result_2046820501 = null;

    Label1: {
      var i_2046820510 = 0;
      var i_2046820523 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2046820523 < 12)) break Label3;
            i_2046820510 = i_2046820523;
            if ((i_2046820510 < 4)) {
            Temporary4 = oid_2046820500.time;
            }
            else {
            if ((i_2046820510 < 8)) {
            Temporary4 = oid_2046820500.fuzz;
            }
            else {
            Temporary4 = oid_2046820500.count;
            }
            }
            var value_2046820511 = Temporary4;
            var byteOffset_2046820512 = modInt(i_2046820510, 4);
            var b_2046820517 = (value_2046820511 >> mulInt(byteOffset_2046820512, 8));
            result_2046820501 += "0123456789abcdef"[((((b_2046820517 & 240) >> 4)) | 0)];;
            result_2046820501 += "0123456789abcdef"[(((b_2046820517 & 15)) | 0)];;
            i_2046820523 = addInt(i_2046820523, 1);
          }
      };
    };

  return result_2046820501;

}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990066(result_301990068, result_301990068_Idx, x_301990069, start_301990070, n_301990071) {
    var Temporary1;

    var old_301990072 = (result_301990068[result_301990068_Idx]).length;
    if (result_301990068[result_301990068_Idx].length < (Temporary1 = chckRange(addInt(old_301990072, n_301990071), 0, 2147483647), Temporary1)) { for (var i = result_301990068[result_301990068_Idx].length; i < Temporary1; ++i) result_301990068[result_301990068_Idx].push(0); }
         else {result_301990068[result_301990068_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990086 = 0;
      var i_2046820547 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2046820547 < n_301990071)) break Label4;
            iHEX60gensym4_301990086 = i_2046820547;
            result_301990068[result_301990068_Idx][chckIndx(addInt(old_301990072, iHEX60gensym4_301990086), 0, (result_301990068[result_301990068_Idx]).length - 1)] = x_301990069.charCodeAt(chckIndx(addInt(start_301990070, iHEX60gensym4_301990086), 0, (x_301990069).length - 1));
            i_2046820547 = addInt(i_2046820547, 1);
          }
      };
    };

  
}

function addChars_301990062(result_301990064, result_301990064_Idx, x_301990065) {
    addChars_301990066(result_301990064, result_301990064_Idx, x_301990065, 0, ((x_301990065) == null ? 0 : (x_301990065).length));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990062(result_301990088, result_301990088_Idx, ((x_301990089) + ""));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addInt_301990087(result_301990109, result_301990109_Idx, x_301990110);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990108(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556695) || [],[32,46,46,32] || [],HEX24_369098760(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function rotl_2063597599(x_2063597600, k_2063597601) {
  var result_2063597602 = 0;

    result_2063597602 = ((x_2063597600 << k_2063597601) | (x_2063597600 >>> ((64 - k_2063597601) >>> 0)));

  return result_2063597602;

}

function next_2063597611(r_2063597612) {
  var result_2063597613 = 0;

    var s0_2063597614 = r_2063597612.a0;
    var s1_2063597615 = r_2063597612.a1;
    result_2063597613 = ((s0_2063597614 + s1_2063597615) >>> 0);
    s1_2063597615 = (s1_2063597615 ^ s0_2063597614);
    r_2063597612.a0 = ((rotl_2063597599(s0_2063597614, 55) ^ s1_2063597615) ^ (s1_2063597615 << 14));
    r_2063597612.a1 = rotl_2063597599(s1_2063597615, 36);

  return result_2063597613;

}

function skipRandomNumbers_2063597620(s_2063597621) {
    var s0_2063597623 = 0;
    var s1_2063597624 = 0;
    Label1: {
      var i_2063597633 = 0;
      var res_2046820541 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2046820541 <= 1)) break Label3;
            i_2063597633 = res_2046820541;
            Label4: {
              var b_2063597638 = 0;
              var i_2046820539 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2046820539 < 64)) break Label6;
                    b_2063597638 = i_2046820539;
                    if (!(((helper_2063597622[chckIndx(i_2063597633, 0, (helper_2063597622).length - 1)] & (1 << b_2063597638)) == 0))) {
                    s0_2063597623 = (s0_2063597623 ^ s_2063597621.a0);
                    s1_2063597624 = (s1_2063597624 ^ s_2063597621.a1);
                    }
                    
                    var _ = next_2063597611(s_2063597621);
                    i_2046820539 = addInt(i_2046820539, 1);
                  }
              };
            };
            res_2046820541 = addInt(res_2046820541, 1);
          }
      };
    };
    s_2063597621.a0 = s0_2063597623;
    s_2063597621.a1 = s1_2063597624;

  
}

function initRand_2063597797(seed_2063597798) {
    var Temporary1;

  var result_2063597799 = [({a0: 0, a1: 0})];

    if (!((seed_2063597798 == 0))) {
    Temporary1 = seed_2063597798;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_2063597805 = Temporary1;
    result_2063597799[0].a0 = Math.floor(seed_2063597805 / Math.pow(2, 16));
    result_2063597799[0].a1 = (seed_2063597805 & 65535);
    skipRandomNumbers_2063597620(result_2063597799[0]);
    var _ = next_2063597611(result_2063597799[0]);

  return result_2063597799[0];

}

function rand_2063597672(r_2063597674, max_2063597675) {
  var result_2063597676 = 0;

  BeforeRet: {
    if ((max_2063597675 == 0)) {
    break BeforeRet;
    }
    else {
      var max_2063597677 = max_2063597675;
      if ((max_2063597677 == -1)) {
      result_2063597676 = next_2063597611(r_2063597674);
      break BeforeRet;
      }
      
      Label1: {
          Label2: while (true) {
          if (!true) break Label2;
            var x_2063597690 = next_2063597611(r_2063597674);
            if ((x_2063597690 <= ((4294967295 - (4294967295 % max_2063597677)) ))) {
            result_2063597676 = (x_2063597690 % ((max_2063597677 + 1) ));
            break BeforeRet;
            }
            
          }
      };
    }
    
  };

  return result_2063597676;

}

function rand_2063597668(r_2063597669, max_2063597670) {
  var result_2063597671 = 0;

    result_2063597671 = rand_2063597672(r_2063597669, max_2063597670);

  return result_2063597671;

}
var t_2046820525 = Date.now();
var seed_2046820526 = [initRand_2063597797(t_2046820525)];
var incr_2046820531 = [rand_2063597668(seed_2046820526[0], 2147483647)];
var fuzz_2046820536 = rand_2063597668(seed_2046820526[0], 2147483647);

function HEX24_2046820478(oid_2046820479) {
            var Temporary4;

  var result_2046820480 = [];

    if (result_2046820480.length < 24) { for (var i = result_2046820480.length; i < 24; ++i) result_2046820480.push(0); }
         else {result_2046820480.length = 24; };
    Label1: {
      var i_2046820486 = 0;
      var i_2046820624 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2046820624 < 12)) break Label3;
            i_2046820486 = i_2046820624;
            if ((i_2046820486 < 4)) {
            Temporary4 = oid_2046820479.time;
            }
            else {
            if ((i_2046820486 < 8)) {
            Temporary4 = oid_2046820479.fuzz;
            }
            else {
            Temporary4 = oid_2046820479.count;
            }
            }
            var value_2046820487 = Temporary4;
            var byteOffset_2046820488 = modInt(i_2046820486, 4);
            var b_2046820493 = (value_2046820487 >> mulInt(byteOffset_2046820488, 8));
            result_2046820480[chckIndx(mulInt(2, i_2046820486), 0, (result_2046820480).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx(((b_2046820493 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            result_2046820480[chckIndx(addInt(mulInt(2, i_2046820486), 1), 0, (result_2046820480).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx((b_2046820493 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            i_2046820624 = addInt(i_2046820624, 1);
          }
      };
    };

  return result_2046820480;

}

function idToString(id_2046820621) {
  var result_2046820622 = null;

  BeforeRet: {
    result_2046820622 = toJSStr(HEX24_2046820478(id_2046820621));
    break BeforeRet;
  };

  return result_2046820622;

}

function idNone_2046820633() {
  var result_2046820634 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820634 = nimCopy(result_2046820634, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820634;

}
var null_2046820646 = idNone_2046820633();
var cb64_2315255812 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);
var cb64safe_2315255813 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95]);

function nextPowerOfTwo_872415437(x_872415438) {
  var result_872415439 = 0;

    result_872415439 = (x_872415438 - 1);
    result_872415439 = (result_872415439 | (result_872415439 >> 16));
    result_872415439 = (result_872415439 | (result_872415439 >> 8));
    result_872415439 = (result_872415439 | (result_872415439 >> 4));
    result_872415439 = (result_872415439 | (result_872415439 >> 2));
    result_872415439 = (result_872415439 | (result_872415439 >> 1));
    result_872415439 += (1 + ((x_872415438 <= 0) ? 1 : 0));

  return result_872415439;

}

function slotsNeeded_1308622891(count_1308622892) {
  var result_1308622893 = 0;

    result_1308622893 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1308622892, 3), 2), 4));

  return result_1308622893;

}

function initTable_1795162117(initialSize_1795162120) {
  var result_1795162126 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1795162128 = slotsNeeded_1308622891(chckRange(initialSize_1795162120, 0, 2147483647));
    result_1795162126.counter = 0;
    result_1795162126.data = new Array(chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647) ; ++i) { result_1795162126.data[i] = {Field0: 0, Field1: [], Field2: []}; }
  return result_1795162126;

}
var cachedAppFiles_2382364694 = [initTable_1795162117(32)];

function new_2365587482() {
  var result_2365587485 = null;

  BeforeRet: {
    var r_2365587487 = null;
    r_2365587487 = ({m_type: NTI2382364676});
    result_2365587485 = r_2365587487;
    break BeforeRet;
  };

  return result_2365587485;

}
var fs_2365587509 = new_2365587482();
var nextEditorId_2449473853 = [0];
var gEditor = null;
var handleIdCounter_2919235663 = [1];

function parseSaturatedNatural_771752342(s_771752343, b_771752344, b_771752344_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752345 = 0;

    var i_771752346 = 0;
    if (((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 43))) {
    i_771752346 = addInt(i_771752346, 1);
    }
    
      if (!(i_771752346 < (s_771752343).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752344[b_771752344_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752346 < (s_771752343).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752375 = subInt(s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)], 48);
          if ((b_771752344[b_771752344_Idx] <= divInt(subInt(2147483647, c_771752375), 10))) {
          b_771752344[b_771752344_Idx] = addInt(mulInt(b_771752344[b_771752344_Idx], 10), c_771752375);
          }
          else {
            b_771752344[b_771752344_Idx] = 2147483647;
          }
          
          i_771752346 = addInt(i_771752346, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 95))) break Label6;
                i_771752346 = addInt(i_771752346, 1);
              }
          };
        }
    };
    result_771752345 = i_771752346;
    }
    

  return result_771752345;

}

function parseSaturatedNatural_771752729(s_771752730, b_771752731, b_771752731_Idx, start_771752732) {
  var result_771752733 = 0;

    result_771752733 = parseSaturatedNatural_771752342((s_771752730.slice(start_771752732, (s_771752730).length - 1 + 1)), b_771752731, b_771752731_Idx);

  return result_771752733;

}

function HEX5BHEX5D_855639319(s_855639322, x_855639323) {
  var result_855639324 = [];

    var a_855639326 = x_855639323.a;
    var L_855639328 = addInt(subInt(subInt((s_855639322).length, x_855639323.b), a_855639326), 1);
    result_855639324 = nimCopy(null, mnewString(chckRange(L_855639328, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639333 = 0;
      var i_2684355216 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2684355216 < L_855639328)) break Label3;
            i_855639333 = i_2684355216;
            result_855639324[chckIndx(i_855639333, 0, (result_855639324).length - 1)] = s_855639322[chckIndx(addInt(i_855639333, a_855639326), 0, (s_855639322).length - 1)];
            i_2684355216 = addInt(i_2684355216, 1);
          }
      };
    };

  return result_855639324;

}

function HEX2EHEX2E_1040187488(a_1040187491, b_1040187492) {
  var result_1040187495 = ({a: 0, b: 0});

    result_1040187495 = nimCopy(result_1040187495, {a: a_1040187491, b: b_1040187492}, NTI1040187476);

  return result_1040187495;

}

function parseStandardFormatSpecifier_721420346(s_721420347, start_721420348, ignoreUnknownSuffix_721420349) {
      var Temporary1;
      var Temporary2;

  var result_721420350 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_721420350.fill = 32;
    result_721420350.align = 0;
    result_721420350.sign = 45;
    var i_721420352 = start_721420348;
    if (((addInt(i_721420352, 1) < (s_721420347).length) && (ConstSet2[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.fill = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    result_721420350.align = s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 2);
    }
    else {
    if (((i_721420352 < (s_721420347).length) && (ConstSet3[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.align = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    }
    if (((i_721420352 < (s_721420347).length) && (ConstSet4[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.sign = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 35))) {
    result_721420350.alternateForm = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
      if (!((addInt(i_721420352, 1) < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary1) {
    result_721420350.padWithZero = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
    var parsedLength_721420394 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "minimumWidth", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLength_721420394);
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 46))) {
    i_721420352 = addInt(i_721420352, 1);
    var parsedLengthB_721420405 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "precision", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLengthB_721420405);
    }
    else {
      result_721420350.precision = -1;
    }
    
      if (!(i_721420352 < (s_721420347).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary2) {
    result_721420350.typ = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    result_721420350.endPosition = i_721420352;
    if ((!((i_721420352 == (s_721420347).length)) && !(ignoreUnknownSuffix_721420349))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_855639319(s_721420347, HEX2EHEX2E_1040187488(i_721420352, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_721420350;

}

function nucruneLen(s_788529180) {
  var result_788529181 = 0;

    result_788529181 = 0;
    var i_788529182 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_788529182 < (s_788529180).length)) break Label2;
          if ((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] <= 127)) {
          i_788529182 = addInt(i_788529182, 1);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 5) == 6)) {
          i_788529182 = addInt(i_788529182, 2);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 4) == 14)) {
          i_788529182 = addInt(i_788529182, 3);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 3) == 30)) {
          i_788529182 = addInt(i_788529182, 4);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 2) == 62)) {
          i_788529182 = addInt(i_788529182, 5);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 1) == 126)) {
          i_788529182 = addInt(i_788529182, 6);
          }
          else {
          i_788529182 = addInt(i_788529182, 1);
          }
          }}}}}
          result_788529181 = addInt(result_788529181, 1);
        }
    };

  return result_788529181;

}

function runeLen_788536172(s_788536173) {
  var result_788536174 = 0;

    result_788536174 = nucruneLen((s_788536173.slice(0, (s_788536173).length - 1 + 1)));

  return result_788536174;

}

function runeLenAt_788529246(s_788529247, i_788529248) {
  var result_788529249 = 0;

    if ((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] <= 127)) {
    result_788529249 = 1;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 5) == 6)) {
    result_788529249 = 2;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 4) == 14)) {
    result_788529249 = 3;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 3) == 30)) {
    result_788529249 = 4;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 2) == 62)) {
    result_788529249 = 5;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 1) == 126)) {
    result_788529249 = 6;
    }
    else {
      result_788529249 = 1;
    }
    }}}}}

  return result_788529249;

}

function runeOffset_788529843(s_788529844, pos_788529845, start_788529846) {
  var result_788529847 = 0;

  BeforeRet: {
    var i_788529848 = 0;
    var o_788529849 = start_788529846;
    Label1: {
        Label2: while (true) {
        if (!(i_788529848 < pos_788529845)) break Label2;
          o_788529849 = addInt(o_788529849, chckRange(runeLenAt_788529246(s_788529844, o_788529849), 0, 2147483647));
          if (((s_788529844).length <= o_788529849)) {
          result_788529847 = -1;
          break BeforeRet;
          }
          
          i_788529848 = addInt(i_788529848, 1);
        }
    };
    result_788529847 = o_788529849;
    break BeforeRet;
  };

  return result_788529847;

}

function runeOffset_788536347(s_788536348, pos_788536349, start_788536350) {
  var result_788536351 = 0;

    result_788536351 = runeOffset_788529843((s_788536348.slice(0, (s_788536348).length - 1 + 1)), pos_788536349, start_788536350);

  return result_788536351;

}

function validateUtf8_788529475(s_788529476) {
  var result_788529477 = 0;

  BeforeRet: {
    var i_788529478 = 0;
    var L_788529482 = (s_788529476).length;
    Label1: {
        Label2: while (true) {
        if (!(i_788529478 < L_788529482)) break Label2;
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] <= 127)) {
          i_788529478 = addInt(i_788529478, 1);
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 5) == 6)) {
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] < 194)) {
          result_788529477 = i_788529478;
          break BeforeRet;
          }
          
          if (((addInt(i_788529478, 1) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 2);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_788529478, 2) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 3);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_788529478, 3) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 3), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 4);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          }}}
        }
    };
    result_788529477 = -1;
    break BeforeRet;
  };

  return result_788529477;

}

function validateUtf8_788536344(s_788536345) {
  var result_788536346 = 0;

    result_788536346 = validateUtf8_788529475((s_788536345.slice(0, (s_788536345).length - 1 + 1)));

  return result_788536346;

}

function nsuRepeatChar(c_855639133, count_855639134) {
  var result_855639135 = [];

    result_855639135 = nimCopy(null, mnewString(count_855639134), NTI33554449);
    Label1: {
      var i_855639140 = 0;
      var colontmp__2818584395 = 0;
      colontmp__2818584395 = subInt(count_855639134, 1);
      var res_2818584396 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818584396 <= colontmp__2818584395)) break Label3;
            i_855639140 = res_2818584396;
            result_855639135[chckIndx(i_855639140, 0, (result_855639135).length - 1)] = c_855639133;
            res_2818584396 = addInt(res_2818584396, 1);
          }
      };
    };

  return result_855639135;

}

function alignString_721420308(s_721420309, minimumWidth_721420310, align_721420311, fill_721420312) {
      var Temporary1;

  var result_721420313 = [];

    if ((minimumWidth_721420310 == 0)) {
    result_721420313 = nimCopy(null, s_721420309, NTI33554449);
    }
    else {
      if ((validateUtf8_788536344(s_721420309) == -1)) {
      Temporary1 = runeLen_788536172(s_721420309);
      }
      else {
      Temporary1 = (s_721420309).length;
      }
      
      var sRuneLen_721420314 = Temporary1;
      var toFill_721420315 = subInt(minimumWidth_721420310, sRuneLen_721420314);
      if ((toFill_721420315 <= 0)) {
      result_721420313 = nimCopy(null, s_721420309, NTI33554449);
      }
      else {
      if (((align_721420311 == 60) || (align_721420311 == 0))) {
      result_721420313 = nimCopy(null, (s_721420309 || []).concat(nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_721420311 == 94)) {
      var half_721420316 = divInt(toFill_721420315, 2);
      result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(half_721420316, 0, 2147483647)) || []).concat(s_721420309 || [],nsuRepeatChar(fill_721420312, chckRange(subInt(toFill_721420315, half_721420316), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []).concat(s_721420309 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420313;

}

function formatValue_721420459(result_721420460, result_721420460_Idx, value_721420461, specifier_721420462) {
    var Temporary1;

    var spec_721420463 = parseStandardFormatSpecifier_721420346(specifier_721420462, 0, false);
    var value_721420464 = nimCopy(null, value_721420461, NTI33554449);
    switch (spec_721420463.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_721420463.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_721420463.precision == -1))) {
    if ((spec_721420463.precision < runeLen_788536172(value_721420464))) {
    if (value_721420464.length < (Temporary1 = chckRange(runeOffset_788536347(value_721420464, chckRange(spec_721420463.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_721420464.length; i < Temporary1; ++i) value_721420464.push(0); }
         else {value_721420464.length = Temporary1; };
    }
    
    }
    
    result_721420460[result_721420460_Idx].push.apply(result_721420460[result_721420460_Idx], alignString_721420308(value_721420464, spec_721420463.minimumWidth, spec_721420463.align, spec_721420463.fill));;

  
}

function imul_1325400356(a_1325400357, b_1325400358) {
  var result_1325400359 = 0;

    var mask_1325400360 = 65535;
    var aHi_1325400365 = ((a_1325400357 >>> 16) & mask_1325400360);
    var aLo_1325400366 = (a_1325400357 & mask_1325400360);
    var bHi_1325400371 = ((b_1325400358 >>> 16) & mask_1325400360);
    var bLo_1325400372 = (b_1325400358 & mask_1325400360);
    result_1325400359 = ((((aLo_1325400366 * bLo_1325400372) >>> 0) + (((((aHi_1325400365 * bLo_1325400372) >>> 0) + ((aLo_1325400366 * bHi_1325400371) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1325400359;

}

function rotl32_1325400377(x_1325400378, r_1325400379) {
  var result_1325400380 = 0;

    result_1325400380 = ((x_1325400378 << r_1325400379) | (x_1325400378 >>> subInt(32, r_1325400379)));

  return result_1325400380;

}

function murmurHash_1325400389(x_1325400390) {
  var result_1325400391 = 0;

  BeforeRet: {
    var size_1325400400 = (x_1325400390).length;
    var stepSize_1325400401 = 4;
    var n_1325400402 = divInt(size_1325400400, stepSize_1325400401);
    var h1_1325400403 = 0;
    var i_1325400404 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1325400404 < mulInt(n_1325400402, stepSize_1325400401))) break Label2;
          var k1_1325400405 = 0;
          var j_1325400406 = stepSize_1325400401;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1325400406)) break Label4;
                j_1325400406 = subInt(j_1325400406, 1);
                k1_1325400405 = ((k1_1325400405 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, j_1325400406), 0, (x_1325400390).length - 1)]);
              }
          };
          i_1325400404 = addInt(i_1325400404, stepSize_1325400401);
          k1_1325400405 = imul_1325400356(k1_1325400405, 3432918353);
          k1_1325400405 = rotl32_1325400377(k1_1325400405, 15);
          k1_1325400405 = imul_1325400356(k1_1325400405, 461845907);
          h1_1325400403 = (h1_1325400403 ^ k1_1325400405);
          h1_1325400403 = rotl32_1325400377(h1_1325400403, 13);
          h1_1325400403 = ((((h1_1325400403 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1325400425 = 0;
    var rem_1325400426 = modInt(size_1325400400, stepSize_1325400401);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1325400426)) break Label6;
          rem_1325400426 = subInt(rem_1325400426, 1);
          k1_1325400425 = ((k1_1325400425 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, rem_1325400426), 0, (x_1325400390).length - 1)]);
        }
    };
    k1_1325400425 = imul_1325400356(k1_1325400425, 3432918353);
    k1_1325400425 = rotl32_1325400377(k1_1325400425, 15);
    k1_1325400425 = imul_1325400356(k1_1325400425, 461845907);
    h1_1325400403 = (h1_1325400403 ^ k1_1325400425);
    h1_1325400403 = (h1_1325400403 ^ size_1325400400);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    h1_1325400403 = imul_1325400356(h1_1325400403, 2246822507);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 13));
    h1_1325400403 = imul_1325400356(h1_1325400403, 3266489909);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    result_1325400391 = (h1_1325400403 | 0);
    break BeforeRet;
  };

  return result_1325400391;

}

function hash_1325400491(x_1325400492) {
  var result_1325400493 = 0;

    result_1325400493 = murmurHash_1325400389((x_1325400492.slice(0, (x_1325400492).length - 1 + 1)));

  return result_1325400493;

}

function isFilled_1308622880(hcode_1308622881) {
  var result_1308622882 = false;

    result_1308622882 = !((hcode_1308622881 == 0));

  return result_1308622882;

}

function nextTry_1308622883(h_1308622884, maxHash_1308622885) {
  var result_1308622886 = 0;

    result_1308622886 = (addInt(h_1308622884, 1) & maxHash_1308622885);

  return result_1308622886;

}

function rawGet_1291849221(t_1291849224, key_1291849225, hc_1291849226, hc_1291849226_Idx) {
  var result_1291849227 = 0;

  BeforeRet: {
    hc_1291849226[hc_1291849226_Idx] = hash_1325400491(key_1291849225);
    if ((hc_1291849226[hc_1291849226_Idx] == 0)) {
    hc_1291849226[hc_1291849226_Idx] = 314159265;
    }
    
    if (((t_1291849224.data).length == 0)) {
    result_1291849227 = -1;
    break BeforeRet;
    }
    
    var h_1291849279 = (hc_1291849226[hc_1291849226_Idx] & (t_1291849224.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field0)) break Label2;
          if (((t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field0 == hc_1291849226[hc_1291849226_Idx]) && eqStrings(t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field1, key_1291849225))) {
          result_1291849227 = h_1291849279;
          break BeforeRet;
          }
          
          h_1291849279 = nextTry_1308622883(h_1291849279, (t_1291849224.data).length - 1);
        }
    };
    result_1291849227 = subInt(-1, h_1291849279);
  };

  return result_1291849227;

}

function hasKey_1291849214(t_1291849217, key_1291849218) {
  var result_1291849219 = false;

    var hc_1291849220 = [0];
    result_1291849219 = (0 <= rawGet_1291849221(t_1291849217, key_1291849218, hc_1291849220, 0));

  return result_1291849219;

}

function contains_1291849208(t_1291849211, key_1291849212) {
  var result_1291849213 = false;

  BeforeRet: {
    result_1291849213 = hasKey_1291849214(t_1291849211, key_1291849212);
    break BeforeRet;
  };

  return result_1291849213;

}

function mustRehash_1291849673(t_1291849675) {
  var result_1291849676 = false;

    if (!((t_1291849675.counter < (t_1291849675.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291849676 = ((mulInt((t_1291849675.data).length, 2) < mulInt(t_1291849675.counter, 3)) || (subInt((t_1291849675.data).length, t_1291849675.counter) < 4));

  return result_1291849676;

}

function rawInsert_1291850122(t_1291850126, data_1291850127, data_1291850127_Idx, key_1291850128, val_1291850129, hc_1291850130, h_1291850131) {
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field1 = nimCopy(null, key_1291850128, NTI33554449);
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field2 = val_1291850129;
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field0 = hc_1291850130;

  
}

function enlarge_1291849828(t_1291849831) {
    var n_1291849834 = [];
    n_1291849834 = new Array(chckRange(mulInt((t_1291849831.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291849831.data).length, 2), 0, 2147483647) ; ++i) { n_1291849834[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1291849831.data; t_1291849831.data = n_1291849834; n_1291849834 = Temporary1;    Label2: {
      var i_1291849898 = 0;
      var colontmp__2818584404 = 0;
      colontmp__2818584404 = (n_1291849834).length - 1;
      var res_2818584406 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584406 <= colontmp__2818584404)) break Label4;
            i_1291849898 = res_2818584406;
            var eh_1291849952 = n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291849952)) {
            var j_1291849956 = (eh_1291849952 & (t_1291849831.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291849831.data[chckIndx(j_1291849956, 0, (t_1291849831.data).length - 1)].Field0)) break Label6;
                  j_1291849956 = nextTry_1308622883(j_1291849956, (t_1291849831.data).length - 1);
                }
            };
            rawInsert_1291850122(t_1291849831, t_1291849831, "data", n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field1, n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field2, eh_1291849952, j_1291849956);
            }
            
            res_2818584406 = addInt(res_2818584406, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291850291(t_1291850294, key_1291850295, hc_1291850296) {
  var result_1291850297 = 0;

  BeforeRet: {
    if (((t_1291850294.data).length == 0)) {
    result_1291850297 = -1;
    break BeforeRet;
    }
    
    var h_1291850348 = (hc_1291850296 & (t_1291850294.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field0)) break Label2;
          if (((t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field0 == hc_1291850296) && eqStrings(t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field1, key_1291850295))) {
          result_1291850297 = h_1291850348;
          break BeforeRet;
          }
          
          h_1291850348 = nextTry_1308622883(h_1291850348, (t_1291850294.data).length - 1);
        }
    };
    result_1291850297 = subInt(-1, h_1291850348);
  };

  return result_1291850297;

}

function HEX5BHEX5DHEX3D_1291849500(t_1291849503, key_1291849504, val_1291849505) {
    if (((t_1291849503.data).length == 0)) {
    var correctSizeHEX60gensym36_1291849554 = slotsNeeded_1308622891(32);
    t_1291849503.counter = 0;
    t_1291849503.data = new Array(chckRange(correctSizeHEX60gensym36_1291849554, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym36_1291849554, 0, 2147483647) ; ++i) { t_1291849503.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1291849559 = [0];
    var index_1291849566 = rawGet_1291849221(t_1291849503, key_1291849504, hc_1291849559, 0);
    if ((0 <= index_1291849566)) {
    t_1291849503.data[chckIndx(index_1291849566, 0, (t_1291849503.data).length - 1)].Field2 = val_1291849505;
    }
    else {
      if (((t_1291849503.data).length == 0)) {
      var correctSizeHEX60gensym39_1291849668 = slotsNeeded_1308622891(32);
      t_1291849503.counter = 0;
      t_1291849503.data = new Array(chckRange(correctSizeHEX60gensym39_1291849668, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_1291849668, 0, 2147483647) ; ++i) { t_1291849503.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1291849673(t_1291849503)) {
      enlarge_1291849828(t_1291849503);
      index_1291849566 = rawGetKnownHC_1291850291(t_1291849503, key_1291849504, hc_1291849559[0]);
      }
      
      index_1291849566 = subInt(-1, index_1291849566);
      rawInsert_1291850122(t_1291849503, t_1291849503, "data", key_1291849504, val_1291849505, hc_1291849559[0], index_1291849566);
      t_1291849503.counter = addInt(t_1291849503.counter, 1);
    }
    

  
}

function newEventHandlerConfig_2113929255(context_2113929256) {
  var result_2113929257 = null;

    result_2113929257 = ({context: [], commands: ({data: [], counter: 0}), handleActions: false, handleInputs: false, consumeAllActions: false, consumeAllInput: false, revision: 0});
    result_2113929257.handleActions = true;
    result_2113929257.handleInputs = false;
    result_2113929257.context = nimCopy(null, context_2113929256, NTI33554449);

  return result_2113929257;

}

function raiseKeyError_1627392893(key_1627392895) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1627392895 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1291850582(t_1291850585, key_1291850586) {
  var result_1291850587 = null;
  var result_1291850587_Idx = 0;

    var hcHEX60gensym22_1291850588 = [0];
    var indexHEX60gensym22_1291850595 = rawGet_1291849221(t_1291850585, key_1291850586, hcHEX60gensym22_1291850588, 0);
    if ((0 <= indexHEX60gensym22_1291850595)) {
    result_1291850587 = t_1291850585.data[chckIndx(indexHEX60gensym22_1291850595, 0, (t_1291850585.data).length - 1)]; result_1291850587_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291850586);
    }
    

  return [result_1291850587, result_1291850587_Idx];

}

function getEventHandlerConfig_1291849162(self_1291849163, context_1291849164) {
    var Temporary1;

  var result_1291849165 = null;

  BeforeRet: {
    if (!(contains_1291849208(self_1291849163.eventHandlerConfigs, context_1291849164))) {
    HEX5BHEX5DHEX3D_1291849500(self_1291849163.eventHandlerConfigs, context_1291849164, newEventHandlerConfig_2113929255(context_1291849164));
    }
    
    result_1291849165 = (Temporary1 = HEX5BHEX5D_1291850582(self_1291849163.eventHandlerConfigs, context_1291849164), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_1291849165;

}

function getModeConfig_2818584034(self_2818584035, mode_2818584036) {
  var result_2818584037 = null;

  BeforeRet: {
    result_2818584037 = getEventHandlerConfig_1291849162(self_2818584035.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(mode_2818584036 || []));
    break BeforeRet;
  };

  return result_2818584037;

}

function isAscii_2013266003(input_2013266004) {
  var result_2013266005 = false;

  BeforeRet: {
    if (((0 <= input_2013266004) && (input_2013266004 <= 255))) {
    result_2013266005 = true;
    break BeforeRet;
    }
    
    result_2013266005 = false;
    break BeforeRet;
  };

  return result_2013266005;

}

function newSeq_788533339(len_788533341) {
  var result_788533342 = [];

    result_788533342 = new Array(len_788533341); for (var i = 0 ; i < len_788533341 ; ++i) { result_788533342[i] = 0; }
  return result_788533342;

}

function toRunes_788533332(s_788533333) {
  var result_788533334 = [];

    result_788533334 = nimCopy(null, newSeq_788533339(0), NTI788536206);
    Label1: {
      var r_788533347 = 0;
      var i_2818584436 = 0;
      var result_2818584437 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584436 < (s_788533333).length)) break Label3;
            if ((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] <= 127)) {
            result_2818584437 = chckRange(s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
            i_2818584436 = addInt(i_2818584436, 1);
            }
            else {
            if (((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] >>> 5) == 6)) {
            if ((i_2818584436 <= subInt((s_788533333).length, 2))) {
            result_2818584437 = chckRange((((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] & 31) << 6) | (s_788533333[chckIndx(addInt(i_2818584436, 1), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584436 = addInt(i_2818584436, 2);
            }
            else {
              result_2818584437 = 65533;
              i_2818584436 = addInt(i_2818584436, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] >>> 4) == 14)) {
            if ((i_2818584436 <= subInt((s_788533333).length, 3))) {
            result_2818584437 = chckRange(((((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] & 15) << 12) | ((s_788533333[chckIndx(addInt(i_2818584436, 1), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584436, 2), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584436 = addInt(i_2818584436, 3);
            }
            else {
              result_2818584437 = 65533;
              i_2818584436 = addInt(i_2818584436, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] >>> 3) == 30)) {
            if ((i_2818584436 <= subInt((s_788533333).length, 4))) {
            result_2818584437 = chckRange((((((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] & 7) << 18) | ((s_788533333[chckIndx(addInt(i_2818584436, 1), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584436, 2), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584436, 3), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584436 = addInt(i_2818584436, 4);
            }
            else {
              result_2818584437 = 65533;
              i_2818584436 = addInt(i_2818584436, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] >>> 2) == 62)) {
            if ((i_2818584436 <= subInt((s_788533333).length, 5))) {
            result_2818584437 = chckRange(((((((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] & 3) << 24) | ((s_788533333[chckIndx(addInt(i_2818584436, 1), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818584436, 2), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584436, 3), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584436, 4), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584436 = addInt(i_2818584436, 5);
            }
            else {
              result_2818584437 = 65533;
              i_2818584436 = addInt(i_2818584436, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] >>> 1) == 126)) {
            if ((i_2818584436 <= subInt((s_788533333).length, 6))) {
            result_2818584437 = chckRange((((((((s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)] & 1) << 30) | ((s_788533333[chckIndx(addInt(i_2818584436, 1), 0, (s_788533333).length - 1)] & 63) << 24)) | ((s_788533333[chckIndx(addInt(i_2818584436, 2), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818584436, 3), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584436, 4), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584436, 5), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584436 = addInt(i_2818584436, 6);
            }
            else {
              result_2818584437 = 65533;
              i_2818584436 = addInt(i_2818584436, 1);
            }
            
            }
            else {
              result_2818584437 = chckRange(s_788533333[chckIndx(i_2818584436, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
              i_2818584436 = addInt(i_2818584436, 1);
            }
            }}}}}
            r_788533347 = result_2818584437;
            result_788533334.push(r_788533347);;
          }
      };
    };

  return result_788533334;

}

function toRunes_788536583(s_788536584) {
  var result_788536585 = [];

    result_788536585 = nimCopy(null, toRunes_788533332((s_788536584.slice(0, (s_788536584).length - 1 + 1))), NTI788536198);

  return result_788536585;

}

function getInputCodeFromSpecialKey_2013267119(specialKey_2013267120) {
      var Temporary1;

  var result_2013267121 = 0;

    var runes_2013267122 = toRunes_788536583(specialKey_2013267120);
    if (((runes_2013267122).length == 1)) {
    result_2013267121 = runes_2013267122[chckIndx(0, 0, (runes_2013267122).length - 1)];
    }
    else {
      switch (toJSStr(specialKey_2013267120)) {
      case "ENTER":
        Temporary1 = -1;
        break;
      case "ESCAPE":
        Temporary1 = -2;
        break;
      case "BACKSPACE":
        Temporary1 = -3;
        break;
      case "SPACE":
        Temporary1 = -4;
        break;
      case "DELETE":
        Temporary1 = -5;
        break;
      case "TAB":
        Temporary1 = -6;
        break;
      case "LEFT":
        Temporary1 = -7;
        break;
      case "RIGHT":
        Temporary1 = -8;
        break;
      case "UP":
        Temporary1 = -9;
        break;
      case "DOWN":
        Temporary1 = -10;
        break;
      case "HOME":
        Temporary1 = -11;
        break;
      case "END":
        Temporary1 = -12;
        break;
      case "PAGE_UP":
        Temporary1 = -13;
        break;
      case "PAGE_DOWN":
        Temporary1 = -14;
        break;
      case "F1":
        Temporary1 = -20;
        break;
      case "F2":
        Temporary1 = -21;
        break;
      case "F3":
        Temporary1 = -22;
        break;
      case "F4":
        Temporary1 = -23;
        break;
      case "F5":
        Temporary1 = -24;
        break;
      case "F6":
        Temporary1 = -25;
        break;
      case "F7":
        Temporary1 = -26;
        break;
      case "F8":
        Temporary1 = -27;
        break;
      case "F9":
        Temporary1 = -28;
        break;
      case "F10":
        Temporary1 = -29;
        break;
      case "F11":
        Temporary1 = -30;
        break;
      case "F12":
        Temporary1 = -31;
        break;
      default: 
        var fmtRes_2013267130 = [mnewString(0)];
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [73,110,118,97,108,105,100,32,107,101,121,32,39]);;
        formatValue_721420459(fmtRes_2013267130, 0, specialKey_2013267120, []);
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013267130[0], NTI33554449)]);
        Temporary1 = 0;
        break;
      }
      result_2013267121 = Temporary1;
    }
    

  return result_2013267121;

}

function HEX3CHEX3DHEX25_33555522(x_33555523, y_33555524) {
  var result_33555525 = false;

    result_33555525 = ((x_33555523 >>> 0) <= (y_33555524 >>> 0));

  return result_33555525;

}

function add_788529670(s_788529671, s_788529671_Idx, c_788529672) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

    var pos_788529673 = (s_788529671[s_788529671_Idx]).length;
    var iHEX60gensym58_788529675 = c_788529672;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 127)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary1 = chckRange(addInt(pos_788529673, 1), 0, 2147483647), Temporary1)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary1; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary1; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(iHEX60gensym58_788529675, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2047)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary2 = chckRange(addInt(pos_788529673, 2), 0, 2147483647), Temporary2)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary2; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary2; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 6) | 192), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 65535)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary3 = chckRange(addInt(pos_788529673, 3), 0, 2147483647), Temporary3)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary3; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary3; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 12) | 224), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2097151)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary4 = chckRange(addInt(pos_788529673, 4), 0, 2147483647), Temporary4)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary4; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary4; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 18) | 240), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 67108863)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary5 = chckRange(addInt(pos_788529673, 5), 0, 2147483647), Temporary5)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary5; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary5; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 24) | 248), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2147483647)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary6 = chckRange(addInt(pos_788529673, 6), 0, 2147483647), Temporary6)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary6; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary6; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 30) | 252), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 24) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 5), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  
}

function hasJsBigInt_973078571() {
  var result_973078572 = false;

    result_973078572 = typeof BigInt != 'undefined'

  return result_973078572;

}

function hiXorLoJs_1325400149(a_1325400150, b_1325400151) {
  var result_1325400152 = 0n;

    var prod_1325400153 = (a_1325400150 * b_1325400151);
    var mask_1325400154 = BigInt("0xffffffffffffffff");
    result_1325400152 = ((prod_1325400153 >> BigInt("64")) ^ (prod_1325400153 & mask_1325400154));

  return result_1325400152;

}

function hashWangYi1_1325400244(x_1325400246) {
  var result_1325400247 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_1325400266 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1325400267 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1325400268 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1325400269 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_1325400266, (BigInt(x_1325400246) ^ P1HEX60gensym6_1325400267)), P58HEX60gensym6_1325400268);
    result_1325400247 = Number((() => { const i = resHEX60gensym6_1325400269, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400247 = (x_1325400246 & 4294967295);
    }
    

  return result_1325400247;

}

function hash_1627392949(x_1627392951) {
  var result_1627392952 = 0;

    result_1627392952 = hashWangYi1_1325400244(x_1627392951);

  return result_1627392952;

}

function rawGet_2013266081(t_2013266084, key_2013266085, hc_2013266086, hc_2013266086_Idx) {
  var result_2013266087 = 0;

  BeforeRet: {
    hc_2013266086[hc_2013266086_Idx] = hash_1627392949(key_2013266085);
    if ((hc_2013266086[hc_2013266086_Idx] == 0)) {
    hc_2013266086[hc_2013266086_Idx] = 314159265;
    }
    
    if (((t_2013266084.data).length == 0)) {
    result_2013266087 = -1;
    break BeforeRet;
    }
    
    var h_2013266142 = (hc_2013266086[hc_2013266086_Idx] & (t_2013266084.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0)) break Label2;
          if (((t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0 == hc_2013266086[hc_2013266086_Idx]) && (t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field1 == key_2013266085))) {
          result_2013266087 = h_2013266142;
          break BeforeRet;
          }
          
          h_2013266142 = nextTry_1308622883(h_2013266142, (t_2013266084.data).length - 1);
        }
    };
    result_2013266087 = subInt(-1, h_2013266142);
  };

  return result_2013266087;

}

function hasKey_2013266074(t_2013266077, key_2013266078) {
  var result_2013266079 = false;

    var hc_2013266080 = [0];
    result_2013266079 = (0 <= rawGet_2013266081(t_2013266077, key_2013266078, hc_2013266080, 0));

  return result_2013266079;

}

function contains_2013266068(t_2013266071, key_2013266072) {
  var result_2013266073 = false;

  BeforeRet: {
    result_2013266073 = hasKey_2013266074(t_2013266071, key_2013266072);
    break BeforeRet;
  };

  return result_2013266073;

}

function HEX21HEX26_1325400067(h_1325400068, val_1325400069) {
  var result_1325400070 = 0;

    var h_1325400071 = (h_1325400068 >>> 0);
    var val_1325400072 = (val_1325400069 >>> 0);
    var res_1325400073 = ((h_1325400071 + val_1325400072) >>> 0);
    res_1325400073 = ((res_1325400073 + (res_1325400073 << 10)) >>> 0);
    res_1325400073 = (res_1325400073 ^ (res_1325400073 >>> 6));
    result_1325400070 = (res_1325400073 | 0);

  return result_1325400070;

}

function hash_2013266554(x_2013266556) {
  var result_2013266557 = 0;

    result_2013266557 = hashWangYi1_1325400244(x_2013266556);

  return result_2013266557;

}

function HEX21HEX24_1325400082(h_1325400083) {
  var result_1325400084 = 0;

    var h_1325400085 = (h_1325400083 >>> 0);
    var res_1325400090 = ((h_1325400085 + (h_1325400085 << 3)) >>> 0);
    res_1325400090 = (res_1325400090 ^ (res_1325400090 >>> 11));
    res_1325400090 = ((res_1325400090 + (res_1325400090 << 15)) >>> 0);
    result_1325400084 = (res_1325400090 | 0);

  return result_1325400084;

}

function hash_2013266518(x_2013266520) {
  var result_2013266521 = 0;

    Label1: {
      var it_2013266553 = 0;
      var i_2818584443 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584443 <= 3)) break Label3;
            if ((x_2013266520[chckRange(i_2818584443, 0, 3)] != undefined)) {
            it_2013266553 = chckRange(i_2818584443, 0, 3);
            result_2013266521 = HEX21HEX26_1325400067(result_2013266521, hash_2013266554(it_2013266553));
            }
            
            i_2818584443 = addInt(i_2818584443, 1);
          }
      };
    };
    result_2013266521 = HEX21HEX24_1325400082(result_2013266521);

  return result_2013266521;

}

function rawGet_2013266511(t_2013266514, key_2013266515, hc_2013266516, hc_2013266516_Idx) {
  var result_2013266517 = 0;

  BeforeRet: {
    hc_2013266516[hc_2013266516_Idx] = hash_2013266518(key_2013266515);
    if ((hc_2013266516[hc_2013266516_Idx] == 0)) {
    hc_2013266516[hc_2013266516_Idx] = 314159265;
    }
    
    if (((t_2013266514.data).length == 0)) {
    result_2013266517 = -1;
    break BeforeRet;
    }
    
    var h_2013266625 = (hc_2013266516[hc_2013266516_Idx] & (t_2013266514.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0)) break Label2;
          if (((t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0 == hc_2013266516[hc_2013266516_Idx]) && SetEq(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field1, key_2013266515))) {
          result_2013266517 = h_2013266625;
          break BeforeRet;
          }
          
          h_2013266625 = nextTry_1308622883(h_2013266625, (t_2013266514.data).length - 1);
        }
    };
    result_2013266517 = subInt(-1, h_2013266625);
  };

  return result_2013266517;

}

function hasKey_2013266504(t_2013266507, key_2013266508) {
  var result_2013266509 = false;

    var hc_2013266510 = [0];
    result_2013266509 = (0 <= rawGet_2013266511(t_2013266507, key_2013266508, hc_2013266510, 0));

  return result_2013266509;

}

function contains_2013266498(t_2013266501, key_2013266502) {
  var result_2013266503 = false;

  BeforeRet: {
    result_2013266503 = hasKey_2013266504(t_2013266501, key_2013266502);
    break BeforeRet;
  };

  return result_2013266503;

}

function HEX24_369098763(x_369098764) {
  var result_369098765 = [[]];

    addInt_301990087(result_369098765, 0, x_369098764);

  return result_369098765[0];

}

function raiseKeyError_2013266443(key_2013266445) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098763(key_2013266445) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266376(t_2013266379, key_2013266380) {
  var result_2013266381 = null;

    var hcHEX60gensym22_2013266382 = [0];
    var indexHEX60gensym22_2013266389 = rawGet_2013266081(t_2013266379, key_2013266380, hcHEX60gensym22_2013266382, 0);
    if ((0 <= indexHEX60gensym22_2013266389)) {
    result_2013266381 = t_2013266379.data[chckIndx(indexHEX60gensym22_2013266389, 0, (t_2013266379.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2013266443(key_2013266380);
    }
    

  return result_2013266381;

}

function addQuoted_2013267039(s_2013267041, s_2013267041_Idx, x_2013267042) {
    s_2013267041[s_2013267041_Idx].push.apply(s_2013267041[s_2013267041_Idx], reprEnum(x_2013267042, NTI2013265949));;

  
}

function collectionToString_2013267024(x_2013267026, prefix_2013267027, separator_2013267028, suffix_2013267029) {
  var result_2013267030 = [[]];

    result_2013267030[0] = nimCopy(null, prefix_2013267027, NTI33554449);
    var firstElement_2013267031 = true;
    Label1: {
      var value_2013267035 = 0;
      var i_2818584446 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584446 <= 3)) break Label3;
            if ((x_2013267026[i_2818584446] != undefined)) {
            value_2013267035 = i_2818584446;
            if (firstElement_2013267031) {
            firstElement_2013267031 = false;
            }
            else {
            result_2013267030[0].push.apply(result_2013267030[0], separator_2013267028);;
            }
            
            addQuoted_2013267039(result_2013267030, 0, value_2013267035);
            }
            
            i_2818584446 += 1;
          }
      };
    };
    result_2013267030[0].push.apply(result_2013267030[0], suffix_2013267029);;

  return result_2013267030[0];

}

function HEX24_2013267020(x_2013267022) {
  var result_2013267023 = [];

    result_2013267023 = nimCopy(null, collectionToString_2013267024(x_2013267022, [123], [44,32], [125]), NTI33554449);

  return result_2013267023;

}

function raiseKeyError_2013266989(key_2013266991) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2013267020(key_2013266991) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266922(t_2013266925, key_2013266926) {
  var result_2013266927 = null;
  var result_2013266927_Idx = 0;

    var hcHEX60gensym22_2013266928 = [0];
    var indexHEX60gensym22_2013266935 = rawGet_2013266511(t_2013266925, key_2013266926, hcHEX60gensym22_2013266928, 0);
    if ((0 <= indexHEX60gensym22_2013266935)) {
    result_2013266927 = t_2013266925.data[chckIndx(indexHEX60gensym22_2013266935, 0, (t_2013266925.data).length - 1)]; result_2013266927_Idx = "Field2";
    }
    else {
    raiseKeyError_2013266989(key_2013266926);
    }
    

  return [result_2013266927, result_2013266927_Idx];

}

function mustRehash_2013268533(t_2013268535) {
  var result_2013268536 = false;

    if (!((t_2013268535.counter < (t_2013268535.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013268536 = ((mulInt((t_2013268535.data).length, 2) < mulInt(t_2013268535.counter, 3)) || (subInt((t_2013268535.data).length, t_2013268535.counter) < 4));

  return result_2013268536;

}

function rawInsert_2013268982(t_2013268986, data_2013268987, data_2013268987_Idx, key_2013268988, val_2013268989, hc_2013268990, h_2013268991) {
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1 = nimCopy(data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1, key_2013268988, NTI2013265950);
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field2 = val_2013268989;
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field0 = hc_2013268990;

  
}

function enlarge_2013268688(t_2013268691) {
    var n_2013268694 = [];
    n_2013268694 = new Array(chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647) ; ++i) { n_2013268694[i] = {Field0: 0, Field1: {}, Field2: 0}; }    var Temporary1 = t_2013268691.data; t_2013268691.data = n_2013268694; n_2013268694 = Temporary1;    Label2: {
      var i_2013268758 = 0;
      var colontmp__2818584450 = 0;
      colontmp__2818584450 = (n_2013268694).length - 1;
      var res_2818584451 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584451 <= colontmp__2818584450)) break Label4;
            i_2013268758 = res_2818584451;
            var eh_2013268812 = n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013268812)) {
            var j_2013268816 = (eh_2013268812 & (t_2013268691.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013268691.data[chckIndx(j_2013268816, 0, (t_2013268691.data).length - 1)].Field0)) break Label6;
                  j_2013268816 = nextTry_1308622883(j_2013268816, (t_2013268691.data).length - 1);
                }
            };
            rawInsert_2013268982(t_2013268691, t_2013268691, "data", n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field1, n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field2, eh_2013268812, j_2013268816);
            }
            
            res_2818584451 = addInt(res_2818584451, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013269151(t_2013269154, key_2013269155, hc_2013269156) {
  var result_2013269157 = 0;

  BeforeRet: {
    if (((t_2013269154.data).length == 0)) {
    result_2013269157 = -1;
    break BeforeRet;
    }
    
    var h_2013269208 = (hc_2013269156 & (t_2013269154.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0)) break Label2;
          if (((t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0 == hc_2013269156) && SetEq(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field1, key_2013269155))) {
          result_2013269157 = h_2013269208;
          break BeforeRet;
          }
          
          h_2013269208 = nextTry_1308622883(h_2013269208, (t_2013269154.data).length - 1);
        }
    };
    result_2013269157 = subInt(-1, h_2013269208);
  };

  return result_2013269157;

}

function HEX5BHEX5DHEX3D_2013268360(t_2013268363, key_2013268364, val_2013268365) {
    if (((t_2013268363.data).length == 0)) {
    var correctSizeHEX60gensym32_2013268414 = slotsNeeded_1308622891(32);
    t_2013268363.counter = 0;
    t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }    }
    
    var hc_2013268419 = [0];
    var index_2013268426 = rawGet_2013266511(t_2013268363, key_2013268364, hc_2013268419, 0);
    if ((0 <= index_2013268426)) {
    t_2013268363.data[chckIndx(index_2013268426, 0, (t_2013268363.data).length - 1)].Field2 = val_2013268365;
    }
    else {
      if (((t_2013268363.data).length == 0)) {
      var correctSizeHEX60gensym35_2013268528 = slotsNeeded_1308622891(32);
      t_2013268363.counter = 0;
      t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }      }
      
      if (mustRehash_2013268533(t_2013268363)) {
      enlarge_2013268688(t_2013268363);
      index_2013268426 = rawGetKnownHC_2013269151(t_2013268363, key_2013268364, hc_2013268419[0]);
      }
      
      index_2013268426 = subInt(-1, index_2013268426);
      rawInsert_2013268982(t_2013268363, t_2013268363, "data", key_2013268364, val_2013268365, hc_2013268419[0], index_2013268426);
      t_2013268363.counter = addInt(t_2013268363.counter, 1);
    }
    

  
}

function mustRehash_2013267397(t_2013267399) {
  var result_2013267400 = false;

    if (!((t_2013267399.counter < (t_2013267399.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013267400 = ((mulInt((t_2013267399.data).length, 2) < mulInt(t_2013267399.counter, 3)) || (subInt((t_2013267399.data).length, t_2013267399.counter) < 4));

  return result_2013267400;

}

function rawInsert_2013267846(t_2013267850, data_2013267851, data_2013267851_Idx, key_2013267852, val_2013267853, hc_2013267854, h_2013267855) {
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field1 = key_2013267852;
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2 = nimCopy(data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2, val_2013267853, NTI2013265951);
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field0 = hc_2013267854;

  
}

function enlarge_2013267552(t_2013267555) {
    var n_2013267558 = [];
    n_2013267558 = new Array(chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647) ; ++i) { n_2013267558[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    var Temporary1 = t_2013267555.data; t_2013267555.data = n_2013267558; n_2013267558 = Temporary1;    Label2: {
      var i_2013267622 = 0;
      var colontmp__2818584456 = 0;
      colontmp__2818584456 = (n_2013267558).length - 1;
      var res_2818584457 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584457 <= colontmp__2818584456)) break Label4;
            i_2013267622 = res_2818584457;
            var eh_2013267676 = n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013267676)) {
            var j_2013267680 = (eh_2013267676 & (t_2013267555.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013267555.data[chckIndx(j_2013267680, 0, (t_2013267555.data).length - 1)].Field0)) break Label6;
                  j_2013267680 = nextTry_1308622883(j_2013267680, (t_2013267555.data).length - 1);
                }
            };
            rawInsert_2013267846(t_2013267555, t_2013267555, "data", n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field1, n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field2, eh_2013267676, j_2013267680);
            }
            
            res_2818584457 = addInt(res_2818584457, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013268024(t_2013268027, key_2013268028, hc_2013268029) {
  var result_2013268030 = 0;

  BeforeRet: {
    if (((t_2013268027.data).length == 0)) {
    result_2013268030 = -1;
    break BeforeRet;
    }
    
    var h_2013268081 = (hc_2013268029 & (t_2013268027.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0)) break Label2;
          if (((t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0 == hc_2013268029) && (t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field1 == key_2013268028))) {
          result_2013268030 = h_2013268081;
          break BeforeRet;
          }
          
          h_2013268081 = nextTry_1308622883(h_2013268081, (t_2013268027.data).length - 1);
        }
    };
    result_2013268030 = subInt(-1, h_2013268081);
  };

  return result_2013268030;

}

function HEX5BHEX5DHEX3D_2013267224(t_2013267227, key_2013267228, val_2013267229) {
    if (((t_2013267227.data).length == 0)) {
    var correctSizeHEX60gensym20_2013267278 = slotsNeeded_1308622891(32);
    t_2013267227.counter = 0;
    t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    }
    
    var hc_2013267283 = [0];
    var index_2013267290 = rawGet_2013266081(t_2013267227, key_2013267228, hc_2013267283, 0);
    if ((0 <= index_2013267290)) {
    t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2 = nimCopy(t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2, val_2013267229, NTI2013265951);
    }
    else {
      if (((t_2013267227.data).length == 0)) {
      var correctSizeHEX60gensym23_2013267392 = slotsNeeded_1308622891(32);
      t_2013267227.counter = 0;
      t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2013267397(t_2013267227)) {
      enlarge_2013267552(t_2013267227);
      index_2013267290 = rawGetKnownHC_2013268024(t_2013267227, key_2013267228, hc_2013267283[0]);
      }
      
      index_2013267290 = subInt(-1, index_2013267290);
      rawInsert_2013267846(t_2013267227, t_2013267227, "data", key_2013267228, val_2013267229, hc_2013267283[0], index_2013267290);
      t_2013267227.counter = addInt(t_2013267227.counter, 1);
    }
    

  
}

function linkState_2013267131(dfa_2013267132, dfa_2013267132_Idx, currentState_2013267133, nextState_2013267134, inputCode_2013267135, mods_2013267136) {
    if (!(contains_2013266068(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135))) {
    HEX5BHEX5DHEX3D_2013267224(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135, {next: ({data: [], counter: 0})});
    }
    
    HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135).next, mods_2013267136, nextState_2013267134);

  
}

function createOrUpdateState_2013269393(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, inputCode_2013269396, mods_2013269397, persistent_2013269398) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_2013269399 = 0;

  BeforeRet: {
    if (contains_2013266068(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396)) {
    if (contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397)) {
    Temporary2 = (Temporary3 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397), Temporary3)[0][Temporary3[1]];
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
      HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397, subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1));
    Temporary2 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    Temporary1 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    var nextState_2013269790 = Temporary1;
    dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(nextState_2013269790, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].persistent = persistent_2013269398;
    linkState_2013267131(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, nextState_2013269790, inputCode_2013269396, mods_2013269397);
    result_2013269399 = nextState_2013269790;
    break BeforeRet;
  };

  return result_2013269399;

}

function binarySearch_788530217(c_788530218, tab_788530219, len_788530220, stride_788530221) {
  var result_788530222 = 0;

  BeforeRet: {
    var n_788530223 = len_788530220;
    var t_788530224 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_788530223)) break Label2;
          var m_788530225 = divInt(n_788530223, 2);
          var p_788530226 = addInt(t_788530224, mulInt(m_788530225, stride_788530221));
          if ((((tab_788530219[chckIndx(p_788530226, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218)) {
          t_788530224 = p_788530226;
          n_788530223 = subInt(n_788530223, m_788530225);
          }
          else {
            n_788530223 = m_788530225;
          }
          
        }
    };
    if ((!((n_788530223 == 0)) && (((tab_788530219[chckIndx(t_788530224, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218))) {
    result_788530222 = t_788530224;
    break BeforeRet;
    }
    
    result_788530222 = -1;
    break BeforeRet;
  };

  return result_788530222;

}

function nucisLower(c_788530328) {
  var result_788530329 = false;

  BeforeRet: {
    var c_788530330 = c_788530328;
    var p_788530338 = binarySearch_788530217(c_788530330, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530338) && (((toUpperRanges_788530129[chckIndx(p_788530338, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530330)) && (c_788530330 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530338, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
    p_788530338 = binarySearch_788530217(c_788530330, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530338) && (c_788530330 == ((toUpperSinglets_788530130[chckIndx(p_788530338, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
  };

  return result_788530329;

}

function nuctoLower(c_788530228) {
  var result_788530229 = 0;

  BeforeRet: {
    var c_788530230 = c_788530228;
    var p_788530239 = binarySearch_788530217(c_788530230, toLowerRanges_788530127, 45, 3);
    if ((((0 <= p_788530239) && (((toLowerRanges_788530127[chckIndx(p_788530239, 0, (toLowerRanges_788530127).length - 1)]) | 0) <= c_788530230)) && (c_788530230 <= ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 1), 0, (toLowerRanges_788530127).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 2), 0, (toLowerRanges_788530127).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530239 = binarySearch_788530217(c_788530230, toLowerSinglets_788530128, 610, 2);
    if (((0 <= p_788530239) && (c_788530230 == ((toLowerSinglets_788530128[chckIndx(p_788530239, 0, (toLowerSinglets_788530128).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerSinglets_788530128[chckIndx(addInt(p_788530239, 1), 0, (toLowerSinglets_788530128).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530229 = c_788530230;
    break BeforeRet;
  };

  return result_788530229;

}

function nuctoUpper(c_788530276) {
  var result_788530277 = 0;

  BeforeRet: {
    var c_788530278 = c_788530276;
    var p_788530287 = binarySearch_788530217(c_788530278, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530287) && (((toUpperRanges_788530129[chckIndx(p_788530287, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530278)) && (c_788530278 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 2), 0, (toUpperRanges_788530129).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530287 = binarySearch_788530217(c_788530278, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530287) && (c_788530278 == ((toUpperSinglets_788530130[chckIndx(p_788530287, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperSinglets_788530130[chckIndx(addInt(p_788530287, 1), 0, (toUpperSinglets_788530130).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530277 = c_788530278;
    break BeforeRet;
  };

  return result_788530277;

}

function handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, index_2013269804, currentState_2013269805, defaultState_2013269806) {
              var Temporary5;
              var Temporary6;
              var Temporary7;
                var Temporary8;
    var Temporary12;

  BeforeRet: {
    var state_2013269813 = 0;
    var mods_2013269814 = nimCopy(null, ConstSet9, NTI2013265950);
    var specialKey_2013269815 = [[]];
    if (((input_2013269802).length <= index_2013269804)) {
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].isTerminal = true;
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].function = nimCopy(null, function_2013269803, NTI33554449);
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].nextState = defaultState_2013269806;
    break BeforeRet;
    }
    
    var inputCode_2013269819 = 0;
    var persistent_2013269820 = false;
    var nextIndex_2013269821 = index_2013269804;
    Label1: {
      var i_2013269829 = 0;
      var colontmp__2818584431 = 0;
      colontmp__2818584431 = (input_2013269802).length;
      var i_2818584432 = index_2013269804;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584432 < colontmp__2818584431)) break Label3;
            i_2013269829 = i_2818584432;
            Label4: {
              var rune_2013269830 = input_2013269802[chckIndx(i_2013269829, 0, (input_2013269802).length - 1)];
              if (isAscii_2013266003(rune_2013269830)) {
              Temporary5 = chckRange(rune_2013269830, 0, 255);
              }
              else {
              Temporary5 = 0;
              }
              
              var ascii_2013269831 = Temporary5;
              if (!((0 < i_2013269829) && isAscii_2013266003(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)]))) Temporary6 = false; else {                Temporary6 = (chckRange(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)], 0, 255) == 92);              }              var isEscaped_2013269832 = Temporary6;
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 92))) {
              break Label4;
              }
              
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 60))) {
              state_2013269813 = 1;
              Temporary7 = 0;
              }
              else {
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 62))) {
              if (!((state_2013269813 == 1))) {
              log_1174405220(logger_704643272[0], 5, [[69,114,114,111,114,58,32,62,32,119,105,116,104,111,117,116,32,60]]);
              break BeforeRet;
              }
              
              var inputCode_2013269838 = getInputCodeFromSpecialKey_2013267119(specialKey_2013269815[0]);
              state_2013269813 = 0;
              specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
              Temporary7 = inputCode_2013269838;
              }
              else {
                if ((state_2013269813 == 1)) {
                if ((!(isEscaped_2013269832) && (ascii_2013269831 == 45))) {
                mods_2013269814 = nimCopy(mods_2013269814, ConstSet10, NTI2013265950);
                Label9: {
                  var m_2013269843 = 0;
                  var i_2818584428 = 0;
                  var L_2818584429 = (specialKey_2013269815[0]).length;
                  Label10: {
                      Label11: while (true) {
                      if (!(i_2818584428 < L_2818584429)) break Label11;
                        m_2013269843 = specialKey_2013269815[0][chckIndx(i_2818584428, 0, (specialKey_2013269815[0]).length - 1)];
                        switch (m_2013269843) {
                        case 67:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet11), NTI2013265950);
                          break;
                        case 83:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet12), NTI2013265950);
                          break;
                        case 65:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet13), NTI2013265950);
                          break;
                        case 42:
                          persistent_2013269820 = true;
                          break;
                        default: 
                          var fmtRes_2013269861 = mnewString(0);
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [73,110,118,97,108,105,100,32,109,111,100,105,102,105,101,114,32,39]);;
                          addChar(fmtRes_2013269861, m_2013269843);;
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [39]);;
                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269861, NTI33554449)]);
                          break;
                        }
                        i_2818584428 = addInt(i_2818584428, 1);
                        if (!(((specialKey_2013269815[0]).length == L_2818584429))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
                }
                else {
                add_788529670(specialKey_2013269815, 0, rune_2013269830);
                }
                
                Temporary8 = 0;
                }
                else {
                  mods_2013269814 = nimCopy(mods_2013269814, ConstSet14, NTI2013265950);
                Temporary8 = rune_2013269830;
                }
                
              Temporary7 = Temporary8;
              }
              }
              inputCode_2013269819 = Temporary7;
              if (!((inputCode_2013269819 == 0))) {
              nextIndex_2013269821 = addInt(i_2013269829, 1);
              break Label1;
              }
              
            };
            i_2818584432 = addInt(i_2818584432, 1);
          }
      };
    };
    if ((inputCode_2013269819 == 0)) {
    var fmtRes_2013269866 = mnewString(0);
    fmtRes_2013269866.push.apply(fmtRes_2013269866, [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,105,110,112,117,116]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269866, NTI33554449)]);
    break BeforeRet;
    }
    
    var nextState_2013269867 = createOrUpdateState_2013269393(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, inputCode_2013269819, mods_2013269814, persistent_2013269820);
    if (((0 < inputCode_2013269819) && (SetEq(mods_2013269814, ConstSet15) || SetEq(mods_2013269814, ConstSet16)))) {
    var rune_2013269876 = chckRange(inputCode_2013269819, -2147483648, 2147483647);
    var bIsLower_2013269877 = nucisLower(rune_2013269876);
    if (!(bIsLower_2013269877)) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoLower(rune_2013269876), SetPlus(mods_2013269814, ConstSet17));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, inputCode_2013269819, SetPlus(mods_2013269814, ConstSet18));
    }
    
    if ((bIsLower_2013269877 && (mods_2013269814[1] != undefined))) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), SetMinus(mods_2013269814, ConstSet19));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), mods_2013269814);
    }
    
    }
    
    if (persistent_2013269820) {
    Temporary12 = nextState_2013269867;
    }
    else {
    Temporary12 = defaultState_2013269806;
    }
    
    var nextDefaultState_2013269895 = Temporary12;
    handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, nextIndex_2013269821, nextState_2013269867, nextDefaultState_2013269895);
  };

  
}

function buildDFA_2013269905(commands_2013269906) {
  var result_2013269907 = [null];

    result_2013269907[0] = ({persistentState: 0, states: []});
    result_2013269907[0].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    var currentState_2013269915 = 0;
    Label1: {
      var command_2013269938 = {Field0: [], Field1: []};
      var i_2818584422 = 0;
      var L_2818584423 = (commands_2013269906).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584422 < L_2818584423)) break Label3;
            command_2013269938 = commands_2013269906[chckIndx(i_2818584422, 0, (commands_2013269906).length - 1)];
            currentState_2013269915 = 0;
            var input_2013269939 = nimCopy(null, command_2013269938["Field0"], NTI33554449);
            var function_2013269940 = nimCopy(null, command_2013269938["Field1"], NTI33554449);
            if ((0 < (input_2013269939).length)) {
            handleNextInput_2013269800(result_2013269907, 0, toRunes_788536583(input_2013269939), function_2013269940, 0, 0, 0);
            }
            
            i_2818584422 = addInt(i_2818584422, 1);
            if (!(((commands_2013269906).length == L_2818584423))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2013269907[0];

}

function len_2113929330(t_2113929333) {
  var result_2113929334 = 0;

    result_2113929334 = t_2113929333.counter;

  return result_2113929334;

}

function buildDFA_2113929279(config_2113929280) {
  var result_2113929281 = null;

  BeforeRet: {
    var resultHEX60gensym2_2113929561 = [];
    Label1: {
      var xHEX60gensym2_2113929562 = {Field0: [], Field1: []};
      var L_2818584414 = len_2113929330(config_2113929280.commands);
      Label2: {
        var h_2818584416 = 0;
        var colontmp__2818584417 = 0;
        colontmp__2818584417 = (config_2113929280.commands.data).length - 1;
        var res_2818584418 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818584418 <= colontmp__2818584417)) break Label4;
              h_2818584416 = res_2818584418;
              if (isFilled_1308622880(config_2113929280.commands.data[chckIndx(h_2818584416, 0, (config_2113929280.commands.data).length - 1)].Field0)) {
              xHEX60gensym2_2113929562 = nimCopy(xHEX60gensym2_2113929562, {Field0: nimCopy(null, config_2113929280.commands.data[chckIndx(h_2818584416, 0, (config_2113929280.commands.data).length - 1)].Field1, NTI33554449), Field1: nimCopy(null, config_2113929280.commands.data[chckIndx(h_2818584416, 0, (config_2113929280.commands.data).length - 1)].Field2, NTI33554449)}, NTI2113929251);
              var Temporary5 = nimCopy(null, xHEX60gensym2_2113929562, NTI2113929251);
              resultHEX60gensym2_2113929561.push(Temporary5);;
              if (!((len_2113929330(config_2113929280.commands) == L_2818584414))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818584418 = addInt(res_2818584418, 1);
            }
        };
      };
    };
    result_2113929281 = buildDFA_2013269905(resultHEX60gensym2_2113929561);
    break BeforeRet;
  };

  return result_2113929281;

}

function invoke_2415919167(event_2415919169) {
    Label1: {
      var h_2415919192 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818584463 = 0;
      var L_2818584464 = (event_2415919169.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584463 < L_2818584464)) break Label3;
            h_2415919192 = event_2415919169.handlers[chckIndx(i_2818584463, 0, (event_2415919169.handlers).length - 1)];
            h_2415919192.Field1();
            i_2818584463 = addInt(i_2818584463, 1);
            if (!(((event_2415919169.handlers).length == L_2818584464))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function markDirty_2415919143(self_2415919144) {
    if (!(self_2415919144.mDirty)) {
    invoke_2415919167(self_2415919144.onMarkedDirty);
    }
    
    self_2415919144.mDirty = true;

  
}

function setMode_2818584222(self_2818584223, mode_2818584224) {
        
function HEX3Aanonymous_2818584250(actionHEX60gensym189HEX60gensym190_2818584251, argHEX60gensym189HEX60gensym190_2818584252) {
          var result_2818584253 = 0;

          BeforeRet: {
            if (handlerHEX60gensym189_2818584238.config.handleActions) {
            var action_2818584254 = nimCopy(null, actionHEX60gensym189HEX60gensym190_2818584251, NTI33554449);
            var arg_2818584255 = nimCopy(null, argHEX60gensym189HEX60gensym190_2818584252, NTI33554449);
            var responseHEX60gensym189HEX60gensym190_2818584256 = handleAction_2818572655(self_2818584223, action_2818584254, arg_2818584255);
            if (handlerHEX60gensym189_2818584238.config.consumeAllActions) {
            result_2818584253 = 3;
            break BeforeRet;
            }
            
            result_2818584253 = responseHEX60gensym189HEX60gensym190_2818584256;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym189_2818584238.config.consumeAllActions) {
            result_2818584253 = 3;
            break BeforeRet;
            }
            else {
              result_2818584253 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2818584253;

        }
        
function HEX3Aanonymous_2818584258(inputHEX60gensym189HEX60gensym191_2818584259) {
          var result_2818584260 = 0;

          BeforeRet: {
            if (handlerHEX60gensym189_2818584238.config.handleInputs) {
            var input_2818584261 = nimCopy(null, inputHEX60gensym189HEX60gensym191_2818584259, NTI33554449);
            result_2818584260 = handleInput_2818572663(self_2818584223, input_2818584261);
            break BeforeRet;
            }
            else {
              result_2818584260 = 1;
              break BeforeRet;
            }
            
          };

          return result_2818584260;

        }

  BeforeRet: {
    if (eqStrings(mode_2818584224, [99,111,109,112,108,101,116,105,111,110])) {
    var fmtRes_2818584229 = [mnewString(0)];
    fmtRes_2818584229[0].push.apply(fmtRes_2818584229[0], [67,97,110,39,116,32,115,101,116,32,109,111,100,101,32,116,111,32,39]);;
    formatValue_721420459(fmtRes_2818584229, 0, mode_2818584224, []);
    fmtRes_2818584229[0].push.apply(fmtRes_2818584229[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818584229[0], NTI33554449)]);
    break BeforeRet;
    }
    
    if (((mode_2818584224).length == 0)) {
    self_2818584223.modeEventHandler = null;
    }
    else {
      var config_2818584230 = getModeConfig_2818584034(self_2818584223, mode_2818584224);
      Label1: {
        var handlerHEX60gensym189_2818584238 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym189_2818584238.config = config_2818584230;
        handlerHEX60gensym189_2818584238.dfaInternal = buildDFA_2113929279(config_2818584230);
        handlerHEX60gensym189_2818584238.handleAction = HEX3Aanonymous_2818584250;
        handlerHEX60gensym189_2818584238.handleInput = HEX3Aanonymous_2818584258;
      };
      self_2818584223.modeEventHandler = handlerHEX60gensym189_2818584238;
    }
    
    self_2818584223.currentMode = nimCopy(null, mode_2818584224, NTI33554449);
    markDirty_2415919143(self_2818584223);
  };

  
}

function setModeJsWrapper_2818584184(self_2818584347, mode_2818584348) {
    setMode_2818584222(self_2818584347, mode_2818584348);

  
}
editor_text_prototype.setMode = function(mode_ /* : string */) { return (setModeJsWrapper_2818584184(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2818584471(self_2818584472) {
  var result_2818584473 = [];

  BeforeRet: {
    result_2818584473 = nimCopy(null, self_2818584472.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2818584473;

}

function modeJsWrapper_2818584468(self_2818584502) {
  var result_2818584503 = [];

    result_2818584503 = nimCopy(null, mode_2818584471(self_2818584502), NTI33554449);

  return result_2818584503;

}
editor_text_prototype.mode = function() { return toJSStr(modeJsWrapper_2818584468(this));};

function getContextWithMode_2818583609(self_2818583610, context_2818583611) {
  var result_2818584524 = [];

  BeforeRet: {
    result_2818584524 = nimCopy(null, (context_2818583611 || []).concat([46] || [],self_2818583610.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2818584524;

}

function getContextWithModeJsWrapper_2818584518(self_2818584554, context_2818584555) {
  var result_2818584556 = [];

    result_2818584556 = nimCopy(null, getContextWithMode_2818583609(self_2818584554, context_2818584555), NTI33554449);

  return result_2818584556;

}
editor_text_prototype.getContextWithMode = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper_2818584518(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function nimIdentNormalize_855638137(s_855638138) {
  var result_855638139 = [];

  BeforeRet: {
    result_855638139 = nimCopy(null, mnewString(chckRange((s_855638138).length, 0, 2147483647)), NTI33554449);
    if (((s_855638138).length == 0)) {
    break BeforeRet;
    }
    
    result_855638139[chckIndx(0, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(0, 0, (s_855638138).length - 1)];
    var j_855638140 = 1;
    Label1: {
      var i_855638145 = 0;
      var colontmp__1811939856 = 0;
      colontmp__1811939856 = subInt((s_855638138).length, 1);
      var res_1811939857 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_1811939857 <= colontmp__1811939856)) break Label3;
            i_855638145 = res_1811939857;
            if ((ConstSet20[s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)]] != undefined)) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = chckRange(addInt(s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)], 32), 0, 255);
            j_855638140 = addInt(j_855638140, 1);
            }
            else {
            if (!((s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)] == 95))) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)];
            j_855638140 = addInt(j_855638140, 1);
            }
            }
            res_1811939857 = addInt(res_1811939857, 1);
          }
      };
    };
    if (!((j_855638140 == (s_855638138).length))) {
    if (result_855638139.length < chckRange(j_855638140, 0, 2147483647)) { for (var i = result_855638139.length; i < chckRange(j_855638140, 0, 2147483647); ++i) result_855638139.push(0); }
         else {result_855638139.length = chckRange(j_855638140, 0, 2147483647); };
    }
    
  };

  return result_855638139;

}

function parseEnum_2818583669(s_2818583671, default_2818583672) {
    var Temporary1;

  var result_2818583673 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818583671))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      Temporary1 = default_2818583672;
      break;
    }
    result_2818583673 = Temporary1;

  return result_2818583673;

}

function rawGet_1627392619(t_1627392622, key_1627392623, hc_1627392624, hc_1627392624_Idx) {
  var result_1627392625 = 0;

  BeforeRet: {
    hc_1627392624[hc_1627392624_Idx] = hash_1325400491(key_1627392623);
    if ((hc_1627392624[hc_1627392624_Idx] == 0)) {
    hc_1627392624[hc_1627392624_Idx] = 314159265;
    }
    
    if (((t_1627392622.data).length == 0)) {
    result_1627392625 = -1;
    break BeforeRet;
    }
    
    var h_1627392676 = (hc_1627392624[hc_1627392624_Idx] & (t_1627392622.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0)) break Label2;
          if (((t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0 == hc_1627392624[hc_1627392624_Idx]) && eqStrings(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field2, key_1627392623))) {
          result_1627392625 = h_1627392676;
          break BeforeRet;
          }
          
          h_1627392676 = nextTry_1308622883(h_1627392676, (t_1627392622.data).length - 1);
        }
    };
    result_1627392625 = subInt(-1, h_1627392676);
  };

  return result_1627392625;

}

function getOrDefault_1627393397(t_1627393400, key_1627393401) {
  var result_1627393402 = null;

    var hcHEX60gensym59_1627393405 = [0];
    var indexHEX60gensym59_1627393412 = rawGet_1627392619(t_1627393400, key_1627393401, hcHEX60gensym59_1627393405, 0);
    if ((0 <= indexHEX60gensym59_1627393412)) {
    result_1627393402 = t_1627393400.data[chckIndx(indexHEX60gensym59_1627393412, 0, (t_1627393400.data).length - 1)].Field3;
    }
    

  return result_1627393402;

}

function HEX7BHEX7D_1627393316(node_1627393317, keys_1627393318) {
            var Temporary4;

  var result_1627393319 = null;

  BeforeRet: {
    result_1627393319 = node_1627393317;
    Label1: {
      var key_1627393323 = [];
      var i_2818584672 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584672 < (keys_1627393318).length)) break Label3;
            key_1627393323 = keys_1627393318[chckIndx(i_2818584672, 0, (keys_1627393318).length - 1)];
            if (((result_1627393319 == null) || !((result_1627393319.kind == 5)))) {
            result_1627393319 = null;
            break BeforeRet;
            }
            
            var Temporary4 = result_1627393319;
            if (ConstSet21[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
            result_1627393319 = getOrDefault_1627393397(Temporary4.fields, key_1627393323);
            i_2818584672 = addInt(i_2818584672, 1);
          }
      };
    };
  };

  return result_1627393319;

}

function substrEq_855638270(s_855638271, pos_855638272, substr_855638273) {
  var result_855638274 = false;

  BeforeRet: {
    var i_855638275 = 0;
    var length_855638276 = (substr_855638273).length;
    Label1: {
        Label2: while (true) {
        if (!(((i_855638275 < length_855638276) && (addInt(pos_855638272, i_855638275) < (s_855638271).length)) && (s_855638271[chckIndx(addInt(pos_855638272, i_855638275), 0, (s_855638271).length - 1)] == substr_855638273[chckIndx(i_855638275, 0, (substr_855638273).length - 1)]))) break Label2;
          i_855638275 = addInt(i_855638275, 1);
        }
    };
    result_855638274 = (i_855638275 == length_855638276);
    break BeforeRet;
  };

  return result_855638274;

}

function substr_33557821(s_33557822, first_33557823, last_33557824) {
  var result_33557825 = [];

    var first_33557826 = nimMax(first_33557823, 0);
    var L_33557827 = nimMax(addInt(subInt(nimMin(last_33557824, (s_33557822).length - 1), first_33557826), 1), 0);
    result_33557825 = nimCopy(null, mnewString(chckRange(L_33557827, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33557832 = 0;
      var colontmp__2684355097 = 0;
      colontmp__2684355097 = subInt(L_33557827, 1);
      var res_2684355098 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2684355098 <= colontmp__2684355097)) break Label3;
            i_33557832 = res_2684355098;
            result_33557825[chckIndx(i_33557832, 0, (result_33557825).length - 1)] = s_33557822[chckIndx(addInt(i_33557832, first_33557826), 0, (s_33557822).length - 1)];
            res_2684355098 = addInt(res_2684355098, 1);
          }
      };
    };

  return result_33557825;

}

function nsuSplitString(s_855638588, sep_855638589, maxsplit_855638590) {
  var result_855638591 = [];

    if (!((0 < (sep_855638589).length))) {
    failedAssertImpl_268435515([115,116,114,117,116,105,108,115,46,110,105,109,40,55,54,48,44,32,49,49,41,32,96,115,101,112,46,108,101,110,32,62,32,48,96,32]);
    }
    
    result_855638591 = nimCopy(null, [], NTI855638433);
    Label1: {
      var xHEX60gensym71_855638602 = [];
      var lastHEX60gensym40_2818584678 = 0;
      var splitsHEX60gensym40_2818584679 = maxsplit_855638590;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym40_2818584678 <= (s_855638588).length)) break Label3;
            var firstHEX60gensym40_2818584681 = lastHEX60gensym40_2818584678;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym40_2818584678 < (s_855638588).length) && !(substrEq_855638270(s_855638588, lastHEX60gensym40_2818584678, sep_855638589)))) break Label5;
                  lastHEX60gensym40_2818584678 = addInt(lastHEX60gensym40_2818584678, 1);
                }
            };
            if ((splitsHEX60gensym40_2818584679 == 0)) {
            lastHEX60gensym40_2818584678 = (s_855638588).length;
            }
            
            xHEX60gensym71_855638602 = substr_33557821(s_855638588, firstHEX60gensym40_2818584681, subInt(lastHEX60gensym40_2818584678, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym71_855638602, NTI33554449);
            result_855638591.push(Temporary6);;
            if ((splitsHEX60gensym40_2818584679 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym40_2818584679 = subInt(splitsHEX60gensym40_2818584679, 1);
            lastHEX60gensym40_2818584678 = addInt(lastHEX60gensym40_2818584678, (sep_855638589).length);
          }
      };
    };

  return result_855638591;

}

function getStr_1627390106(n_1627390107, default_1627390108) {
      var Temporary1;

  var result_1627390109 = [];

  BeforeRet: {
    if (((n_1627390107 == null) || !((n_1627390107.kind == 4)))) {
    result_1627390109 = nimCopy(null, default_1627390108, NTI33554449);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390107;
      if (ConstSet22[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390109 = nimCopy(null, Temporary1.str, NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_1627390109;

}

function getOption_2818583643(editor_2818583645, path_2818583646, default_2818583647) {
  var result_2818583653 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583645 == null)) {
      result_2818583653 = default_2818583647;
      break BeforeRet;
      }
      
      var nodeHEX60gensym166_2818583665 = HEX7BHEX7D_1627393316(editor_2818583645.options, nsuSplitString(path_2818583646, [46], -1));
      if ((nodeHEX60gensym166_2818583665 == null)) {
      result_2818583653 = default_2818583647;
      break BeforeRet;
      }
      
    };
    result_2818583653 = parseEnum_2818583669(getStr_1627390106(nodeHEX60gensym166_2818583665, []), default_2818583647);
    break BeforeRet;
  };

  return result_2818583653;

}

function selection_2818572805(self_2818572806) {
  var result_2818572807 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572807 = nimCopy(result_2818572807, self_2818572806.selectionsInternal[chckIndx((self_2818572806.selectionsInternal).length - 1, 0, (self_2818572806.selectionsInternal).length - 1)], NTI2449473548);

  return result_2818572807;

}

function getCursor_2818583639(self_2818583640, cursor_2818583641) {
  var result_2818583642 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (cursor_2818583641) {
    case 0:
      var configCursor_2818583703 = getOption_2818583643(self_2818583640.editor, getContextWithMode_2818583609(self_2818583640, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      result_2818583642 = nimCopy(result_2818583642, getCursor_2818583639(self_2818583640, configCursor_2818583703), NTI2449473546);
      break BeforeRet;
      break;
    case 1:
    case 3:
    case 4:
      result_2818583642 = nimCopy(result_2818583642, selection_2818572805(self_2818583640).Field1, NTI2449473546);
      break BeforeRet;
      break;
    case 2:
      result_2818583642 = nimCopy(result_2818583642, selection_2818572805(self_2818583640).Field0, NTI2449473546);
      break BeforeRet;
      break;
    }
  };

  return result_2818583642;

}

function updateTargetColumn_2818584579(self_2818584580, cursor_2818584581) {
    self_2818584580.targetColumn = getCursor_2818583639(self_2818584580, cursor_2818584581).Field1;

  
}

function updateTargetColumnJsWrapper_2818584576(self_2818584610, cursor_2818584611) {
    updateTargetColumn_2818584579(self_2818584610, cursor_2818584611);

  
}
editor_text_prototype.updateTargetColumn = function(cursor_ /* : SelectionCursor */) { return (updateTargetColumnJsWrapper_2818584576(this, cursor_));};

function HEX3DHEX3D_2449473612(x_2449473614, y_2449473615) {
  var result_2449473616 = false;

  BeforeRet: {
    if (!((x_2449473614["Field0"] == y_2449473615["Field0"]))) {
    result_2449473616 = false;
    break BeforeRet;
    }
    
    if (!((x_2449473614["Field1"] == y_2449473615["Field1"]))) {
    result_2449473616 = false;
    break BeforeRet;
    }
    
    result_2449473616 = true;
    break BeforeRet;
  };

  return result_2449473616;

}

function HEX3DHEX3D_2449473602(x_2449473604, y_2449473605) {
  var result_2449473606 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2449473612(x_2449473604["Field0"], y_2449473605["Field0"]))) {
    result_2449473606 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2449473612(x_2449473604["Field1"], y_2449473605["Field1"]))) {
    result_2449473606 = false;
    break BeforeRet;
    }
    
    result_2449473606 = true;
    break BeforeRet;
  };

  return result_2449473606;

}

function newSeq_2818572845(len_2818572847) {
  var result_2818572848 = [];

    result_2818572848 = new Array(len_2818572847); for (var i = 0 ; i < len_2818572847 ; ++i) { result_2818572848[i] = []; }
  return result_2818572848;

}

function expandIfNeeded_2818572835(deq_2818572837) {
              var Temporary5;
    var Temporary6;

    if ((deq_2818572837.mask == 0)) {
    var correctSizeHEX60gensym9_2818572839 = nextPowerOfTwo_872415437(4);
    deq_2818572837.mask = subInt(correctSizeHEX60gensym9_2818572839, 1);
    deq_2818572837.data = new Array(chckRange(correctSizeHEX60gensym9_2818572839, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_2818572839, 0, 2147483647) ; ++i) { deq_2818572837.data[i] = []; }    }
    
    var cap_2818572844 = addInt(deq_2818572837.mask, 1);
    if ((cap_2818572844 <= deq_2818572837.count)) {
    var n_2818572862 = newSeq_2818572845(chckRange(mulInt(cap_2818572844, 2), 0, 2147483647));
    var i_2818572863 = 0;
    Label1: {
      var x_2818572873 = null;
      var x_2818572873_Idx = 0;
      var i_2818584731 = deq_2818572837.head;
      Label2: {
        var c_2818584733 = 0;
        var i_2818584734 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2818584734 < deq_2818572837.count)) break Label4;
              c_2818584733 = i_2818584734;
              x_2818572873 = deq_2818572837.data; x_2818572873_Idx = chckIndx(i_2818584731, 0, (deq_2818572837.data).length - 1);
              Temporary5 = x_2818572873[x_2818572873_Idx];
              x_2818572873[x_2818572873_Idx] = genericReset(x_2818572873[x_2818572873_Idx], NTI2449473556);
              n_2818572862[chckIndx(i_2818572863, 0, (n_2818572862).length - 1)] = nimCopy(null, Temporary5, NTI2449473556);
              i_2818572863 = addInt(i_2818572863, 1);
              i_2818584731 = (addInt(i_2818584731, 1) & deq_2818572837.mask);
              i_2818584734 = addInt(i_2818584734, 1);
            }
        };
      };
    };
    Temporary6 = n_2818572862;
    n_2818572862 = genericReset(n_2818572862, NTI2818572694);
    deq_2818572837.data = nimCopy(null, Temporary6, NTI2818572694);
    deq_2818572837.mask = subInt(mulInt(cap_2818572844, 2), 1);
    deq_2818572837.tail = deq_2818572837.count;
    deq_2818572837.head = 0;
    }
    

  
}

function addLast_2818572826(deq_2818572828, item_2818572829) {
    expandIfNeeded_2818572835(deq_2818572828);
    deq_2818572828.count = addInt(deq_2818572828.count, 1);
    deq_2818572828.data[chckIndx(deq_2818572828.tail, 0, (deq_2818572828.data).length - 1)] = nimCopy(null, item_2818572829, NTI2449473556);
    deq_2818572828.tail = (addInt(deq_2818572828.tail, 1) & deq_2818572828.mask);

  
}

function len_2818572976(deq_2818572978) {
  var result_2818572979 = 0;

    result_2818572979 = deq_2818572978.count;

  return result_2818572979;

}

function popFirst_2818573048(deq_2818573050) {
    var Temporary1;

  var result_2818573051 = [];

    if ((deq_2818573050.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818573050.count = subInt(deq_2818573050.count, 1);
    Temporary1 = deq_2818573050.data[chckIndx(deq_2818573050.head, 0, (deq_2818573050.data).length - 1)];
    deq_2818573050.data[chckIndx(deq_2818573050.head, 0, (deq_2818573050.data).length - 1)] = genericReset(deq_2818573050.data[chckIndx(deq_2818573050.head, 0, (deq_2818573050.data).length - 1)], NTI2449473556);
    result_2818573051 = nimCopy(null, Temporary1, NTI2449473556);
    deq_2818573050.head = (addInt(deq_2818573050.head, 1) & deq_2818573050.mask);

  return result_2818573051;

}

function clamp_1660945119(x_1660945121, a_1660945122, b_1660945123) {
  var result_1660945124 = 0;

  BeforeRet: {
    if ((x_1660945121 < a_1660945122)) {
    result_1660945124 = a_1660945122;
    break BeforeRet;
    }
    
    if ((b_1660945123 < x_1660945121)) {
    result_1660945124 = b_1660945123;
    break BeforeRet;
    }
    
    result_1660945124 = x_1660945121;
    break BeforeRet;
  };

  return result_1660945124;

}

function lineLength_2818572673(self_2818572674, line_2818572675) {
  var result_2818572676 = 0;

  BeforeRet: {
    if ((line_2818572675 < (self_2818572674.lines).length)) {
    result_2818572676 = (self_2818572674.lines[chckIndx(line_2818572675, 0, (self_2818572674.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572676 = 0;
    break BeforeRet;
  };

  return result_2818572676;

}

function clampCursor_2818572687(self_2818572688, cursor_2818572689) {
  var result_2818572690 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818572691 = nimCopy(null, cursor_2818572689, NTI2449473546);
    if (((self_2818572688.lines).length == 0)) {
    var colontmp__2818584738 = 0;
    var colontmp__2818584739 = 0;
    result_2818572690 = nimCopy(result_2818572690, {Field0: colontmp__2818584738, Field1: colontmp__2818584739}, NTI2449473546);
    break BeforeRet;
    }
    
    cursor_2818572691.Field0 = clamp_1660945119(cursor_2818572691.Field0, 0, subInt((self_2818572688.lines).length, 1));
    cursor_2818572691.Field1 = clamp_1660945119(cursor_2818572691.Field1, 0, lineLength_2818572673(self_2818572688, cursor_2818572691.Field0));
    result_2818572690 = nimCopy(result_2818572690, cursor_2818572691, NTI2449473546);
    break BeforeRet;
  };

  return result_2818572690;

}

function clampSelection_2818572712(self_2818572713, selection_2818572714) {
  var result_2818572715 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818584736 = clampCursor_2818572687(self_2818572713, selection_2818572714.Field0);
    var colontmp__2818584737 = clampCursor_2818572687(self_2818572713, selection_2818572714.Field1);
    result_2818572715 = nimCopy(result_2818572715, {Field0: nimCopy(null, colontmp__2818584736, NTI2449473546), Field1: nimCopy(null, colontmp__2818584737, NTI2449473546)}, NTI2449473548);

  return result_2818572715;

}

function clampSelection_2818572716(self_2818572717, selection_2818572718) {
  var result_2818572719 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572719 = nimCopy(result_2818572719, clampSelection_2818572712(self_2818572717.document, selection_2818572718), NTI2449473548);

  return result_2818572719;

}

function selectionHEX3D_2818572811(self_2818572812, selection_2818572813) {
  BeforeRet: {
    if ((((self_2818572812.selectionsInternal).length == 1) && HEX3DHEX3D_2449473602(self_2818572812.selectionsInternal[chckIndx(0, 0, (self_2818572812.selectionsInternal).length - 1)], selection_2818572813))) {
    break BeforeRet;
    }
    
    addLast_2818572826(self_2818572812.selectionHistory, self_2818572812.selectionsInternal);
    if ((100 < len_2818572976(self_2818572812.selectionHistory))) {
    var _ = popFirst_2818573048(self_2818572812.selectionHistory);
    }
    
    self_2818572812.selectionsInternal = nimCopy(null, [nimCopy(null, clampSelection_2818572716(self_2818572812, selection_2818572813), NTI2449473548)], NTI2818572821);
    markDirty_2415919143(self_2818572812);
  };

  
}

function invertSelection_2818584689(self_2818584690) {
    selectionHEX3D_2818572811(self_2818584690, {Field0: nimCopy(null, selection_2818572805(self_2818584690).Field1, NTI2449473546), Field1: nimCopy(null, selection_2818572805(self_2818584690).Field0, NTI2449473546)});

  
}

function invertSelectionJsWrapper_2818584686(self_2818584718) {
    invertSelection_2818584689(self_2818584718);

  
}
editor_text_prototype.invertSelection = function() { return (invertSelectionJsWrapper_2818584686(this));};

function any_2449473972(s_2449473974, pred_2449473976) {
  var result_2449473977 = false;

  BeforeRet: {
    Label1: {
      var i_2449473990 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585178 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585178 < (s_2449473974).length)) break Label3;
            i_2449473990 = s_2449473974[chckIndx(i_2818585178, 0, (s_2449473974).length - 1)];
            if (pred_2449473976(i_2449473990)) {
            result_2449473977 = true;
            break BeforeRet;
            }
            
            i_2818585178 = addInt(i_2818585178, 1);
          }
      };
    };
    result_2449473977 = false;
  };

  return result_2449473977;

}

function cmp_33557727(x_33557729, y_33557730) {
  var result_33557731 = 0;

  BeforeRet: {
    if ((x_33557729 == y_33557730)) {
    result_33557731 = 0;
    break BeforeRet;
    }
    
    if ((x_33557729 < y_33557730)) {
    result_33557731 = -1;
    break BeforeRet;
    }
    
    result_33557731 = 1;
    break BeforeRet;
  };

  return result_33557731;

}

function HEX3CHEX3D_2449473882(x_2449473884, y_2449473885) {
  var result_2449473886 = false;

  BeforeRet: {
    var c_2449473896 = cmp_33557727(x_2449473884["Field0"], y_2449473885["Field0"]);
    if ((c_2449473896 < 0)) {
    result_2449473886 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473896)) {
    result_2449473886 = false;
    break BeforeRet;
    }
    
    var c_2449473901 = cmp_33557727(x_2449473884["Field1"], y_2449473885["Field1"]);
    if ((c_2449473901 < 0)) {
    result_2449473886 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473901)) {
    result_2449473886 = false;
    break BeforeRet;
    }
    
    result_2449473886 = true;
    break BeforeRet;
  };

  return result_2449473886;

}

function contains_2449473930(selection_2449473931, other_2449473932) {
  var result_2449473933 = false;

    result_2449473933 = (HEX3CHEX3D_2449473882(selection_2449473931.Field0, other_2449473932.Field0) && HEX3CHEX3D_2449473882(other_2449473932.Field1, selection_2449473931.Field1));

  return result_2449473933;

}

function contains_2449474009(self_2449474010, other_2449474011) {
    other_2449474011 = nimCopy(null, other_2449474011, NTI2449473548);
    
function HEX3Aanonymous_2449474013(s_2449474016) {
      var result_2449474019 = false;

        result_2449474019 = contains_2449473930(s_2449474016, other_2449474011);

      return result_2449474019;

    }

  var result_2449474012 = false;

    result_2449474012 = any_2449473972(self_2449474010, HEX3Aanonymous_2449474013);

  return result_2449474012;

}

function deduplicate_2818572757(s_2818572759, isSorted_2818572760) {
  var result_2818572761 = [];

    result_2818572761 = nimCopy(null, [], NTI2818572640);
    if ((0 < (s_2818572759).length)) {
    if (isSorted_2818572760) {
    var prev_2818572769 = nimCopy(null, s_2818572759[chckIndx(0, 0, (s_2818572759).length - 1)], NTI2449473548);
    var Temporary1 = nimCopy(null, prev_2818572769, NTI2449473548);
    result_2818572761.push(Temporary1);;
    Label2: {
      var i_2818572781 = 0;
      var colontmp__2818585170 = 0;
      colontmp__2818585170 = (s_2818572759).length - 1;
      var res_2818585171 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_2818585171 <= colontmp__2818585170)) break Label4;
            i_2818572781 = res_2818585171;
            if (!(HEX3DHEX3D_2449473602(s_2818572759[chckIndx(i_2818572781, 0, (s_2818572759).length - 1)], prev_2818572769))) {
            prev_2818572769 = nimCopy(prev_2818572769, s_2818572759[chckIndx(i_2818572781, 0, (s_2818572759).length - 1)], NTI2449473548);
            var Temporary5 = nimCopy(null, prev_2818572769, NTI2449473548);
            result_2818572761.push(Temporary5);;
            }
            
            res_2818585171 = addInt(res_2818585171, 1);
          }
      };
    };
    }
    else {
      Label6: {
        var itm_2818572793 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
        var i_2818585175 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_2818585175 < (s_2818572759).length)) break Label8;
              itm_2818572793 = s_2818572759[chckIndx(i_2818585175, 0, (s_2818572759).length - 1)];
              if (!(contains_2449474009(result_2818572761, itm_2818572793))) {
              var Temporary9 = nimCopy(null, itm_2818572793, NTI2449473548);
              result_2818572761.push(Temporary9);;
              }
              
              i_2818585175 = addInt(i_2818585175, 1);
            }
        };
      };
    }
    
    }
    

  return result_2818572761;

}

function map_2818572735(s_2818572738, op_2818572740) {
  var result_2818572741 = [];

    result_2818572741 = new Array(chckRange((s_2818572738).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818572738).length, 0, 2147483647) ; ++i) { result_2818572741[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818572756 = 0;
      var colontmp__2818585181 = 0;
      colontmp__2818585181 = (s_2818572738).length;
      var i_2818585182 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585182 < colontmp__2818585181)) break Label3;
            i_2818572756 = i_2818585182;
            result_2818572741[chckIndx(i_2818572756, 0, (result_2818572741).length - 1)] = nimCopy(result_2818572741[chckIndx(i_2818572756, 0, (result_2818572741).length - 1)], op_2818572740(s_2818572738[chckIndx(i_2818572756, 0, (s_2818572738).length - 1)]), NTI2449473548);
            i_2818585182 = addInt(i_2818585182, 1);
          }
      };
    };

  return result_2818572741;

}

function clampAndMergeSelections_2818572720(self_2818572721, selections_2818572722) {
    
function HEX3Aanonymous_2818572724(s_2818572731) {
      var result_2818572734 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818572734 = nimCopy(result_2818572734, clampSelection_2818572712(self_2818572721, s_2818572731), NTI2449473548);

      return result_2818572734;

    }

  var result_2818572723 = [];

    result_2818572723 = nimCopy(null, deduplicate_2818572757(map_2818572735(selections_2818572722, HEX3Aanonymous_2818572724), false), NTI2818572629);

  return result_2818572723;

}

function HEX40_2818579363(a_2818579365) {
  var result_2818579366 = [];

    result_2818579366 = new Array(chckRange((a_2818579365).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_2818579365).length, 0, 2147483647) ; ++i) { result_2818579366[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818579381 = 0;
      var colontmp__2818585185 = 0;
      colontmp__2818585185 = subInt((a_2818579365).length, 1);
      var res_2818585186 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585186 <= colontmp__2818585185)) break Label3;
            i_2818579381 = res_2818585186;
            result_2818579366[chckIndx(i_2818579381, 0, (result_2818579366).length - 1)] = nimCopy(result_2818579366[chckIndx(i_2818579381, 0, (result_2818579366).length - 1)], a_2818579365[chckIndx(i_2818579381, 0, (a_2818579365).length - 1)], NTI2449473548);
            res_2818585186 = addInt(res_2818585186, 1);
          }
      };
    };

  return result_2818579366;

}

function byteOffset_2818579343(self_2818579344, cursor_2818579345) {
  var result_2818579346 = 0;

    result_2818579346 = cursor_2818579345.Field1;
    Label1: {
      var i_2818579351 = 0;
      var i_2818585189 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585189 < cursor_2818579345.Field0)) break Label3;
            i_2818579351 = i_2818585189;
            result_2818579346 = addInt(result_2818579346, addInt((self_2818579344.lines[chckIndx(i_2818579351, 0, (self_2818579344.lines).length - 1)]).length, 1));
            i_2818585189 = addInt(i_2818585189, 1);
          }
      };
    };

  return result_2818579346;

}

function nsuFindChar(s_855639698, sub_855639699, start_855639700, last_855639701) {
    var Temporary1;

  var result_855639702 = 0;

  BeforeRet: {
    result_855639702 = -1;
    if ((last_855639701 < 0)) {
    Temporary1 = (s_855639698).length - 1;
    }
    else {
    Temporary1 = last_855639701;
    }
    
    var last_855639703 = Temporary1;
    Label2: {
      var iHEX60gensym176_855639717 = 0;
      var colontmp__2818584212 = 0;
      colontmp__2818584212 = start_855639700;
      var res_2818584213 = colontmp__2818584212;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584213 <= last_855639703)) break Label4;
            iHEX60gensym176_855639717 = res_2818584213;
            if ((s_855639698[chckIndx(iHEX60gensym176_855639717, 0, (s_855639698).length - 1)] == sub_855639699)) {
            result_855639702 = iHEX60gensym176_855639717;
            break BeforeRet;
            }
            
            res_2818584213 = addInt(res_2818584213, 1);
          }
      };
    };
  };

  return result_855639702;

}

function substr_33557833(s_33557834, first_33557835) {
  var result_33557836 = [];

    result_33557836 = nimCopy(null, substr_33557821(s_33557834, first_33557835, (s_33557834).length - 1), NTI33554449);

  return result_33557836;

}

function fill_855639634(a_855639636, value_855639637) {
    var xHEX60gensym172_855639643 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_855639643 <= (a_855639636).length - 1)) break Label2;
          a_855639636[chckIndx(xHEX60gensym172_855639643, 0, (a_855639636).length - 1)] = value_855639637;
          xHEX60gensym172_855639643 = addInt(xHEX60gensym172_855639643, 1);
        }
    };

  
}

function nsuInitSkipTable(a_855639631, sub_855639632) {
    var m_855639633 = (sub_855639632).length;
    fill_855639634(a_855639631, m_855639633);
    Label1: {
      var i_855639653 = 0;
      var colontmp__2818585192 = 0;
      colontmp__2818585192 = subInt(m_855639633, 1);
      var i_2818585193 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585193 < colontmp__2818585192)) break Label3;
            i_855639653 = i_2818585193;
            a_855639631[chckIndx(sub_855639632[chckIndx(i_855639653, 0, (sub_855639632).length - 1)], 0, (a_855639631).length - 1)] = subInt(subInt(m_855639633, 1), i_855639653);
            i_2818585193 = addInt(i_2818585193, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_855639673) {
  var result_855639674 = [new Int32Array(256)];

    nsuInitSkipTable(result_855639674[0], sub_855639673);

  return result_855639674[0];

}

function nsuFindStrA(a_855639676, s_855639677, sub_855639678, start_855639679, last_855639680) {
    var Temporary1;

  var result_855639681 = 0;

  BeforeRet: {
    if ((last_855639680 < 0)) {
    Temporary1 = (s_855639677).length - 1;
    }
    else {
    Temporary1 = last_855639680;
    }
    
    var last_855639682 = Temporary1;
    var subLast_855639683 = subInt((sub_855639678).length, 1);
    if ((subLast_855639683 == -1)) {
    result_855639681 = start_855639679;
    break BeforeRet;
    }
    
    result_855639681 = -1;
    var skip_855639684 = start_855639679;
    Label2: {
        Label3: while (true) {
        if (!(subLast_855639683 <= subInt(last_855639682, skip_855639684))) break Label3;
          var i_855639685 = subLast_855639683;
          Label4: {
              Label5: while (true) {
              if (!(s_855639677[chckIndx(addInt(skip_855639684, i_855639685), 0, (s_855639677).length - 1)] == sub_855639678[chckIndx(i_855639685, 0, (sub_855639678).length - 1)])) break Label5;
                if ((i_855639685 == 0)) {
                result_855639681 = skip_855639684;
                break BeforeRet;
                }
                
                i_855639685 = subInt(i_855639685, 1);
              }
          };
          skip_855639684 = addInt(skip_855639684, a_855639676[chckIndx(s_855639677[chckIndx(addInt(skip_855639684, subLast_855639683), 0, (s_855639677).length - 1)], 0, (a_855639676).length - 1)]);
        }
    };
  };

  return result_855639681;

}

function nsuReplaceStr(s_855639886, sub_855639887, by_855639888) {
  var result_855639889 = [];

    result_855639889 = nimCopy(null, [], NTI33554449);
    var subLen_855639890 = (sub_855639887).length;
    if ((subLen_855639890 == 0)) {
    result_855639889 = nimCopy(null, s_855639886, NTI33554449);
    }
    else {
    if ((subLen_855639890 == 1)) {
    var c_855639891 = sub_855639887[chckIndx(0, 0, (sub_855639887).length - 1)];
    var last_855639892 = (s_855639886).length - 1;
    var i_855639893 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_855639894 = nsuFindChar(s_855639886, c_855639891, chckRange(i_855639893, 0, 2147483647), last_855639892);
          if ((j_855639894 < 0)) {
          break Label1;
          }
          
          result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639893, subInt(j_855639894, 1)));;
          result_855639889.push.apply(result_855639889, by_855639888);;
          i_855639893 = addInt(j_855639894, subLen_855639890);
        }
    };
    result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639893));;
    }
    else {
      var a_855639895 = nsuInitNewSkipTable(sub_855639887);
      var last_855639896 = (s_855639886).length - 1;
      var i_855639897 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_855639898 = nsuFindStrA(a_855639895, s_855639886, sub_855639887, chckRange(i_855639897, 0, 2147483647), last_855639896);
            if ((j_855639898 < 0)) {
            break Label3;
            }
            
            result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639897, subInt(j_855639898, 1)));;
            result_855639889.push.apply(result_855639889, by_855639888);;
            i_855639897 = addInt(j_855639898, subLen_855639890);
          }
      };
      result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639897));;
    }
    }

  return result_855639889;

}

function insert_33557745(x_33557746, x_33557746_Idx, item_33557747, i_33557748) {
    var Temporary1;

    var xl_33557749 = (x_33557746[x_33557746_Idx]).length;
    if (x_33557746[x_33557746_Idx].length < (Temporary1 = chckRange(addInt(xl_33557749, (item_33557747).length), 0, 2147483647), Temporary1)) { for (var i = x_33557746[x_33557746_Idx].length; i < Temporary1; ++i) x_33557746[x_33557746_Idx].push(0); }
         else {x_33557746[x_33557746_Idx].length = Temporary1; };
    var j_33557750 = subInt(xl_33557749, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33557748 <= j_33557750)) break Label3;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, (item_33557747).length), 0, (x_33557746[x_33557746_Idx]).length - 1)] = x_33557746[x_33557746_Idx][chckIndx(j_33557750, 0, (x_33557746[x_33557746_Idx]).length - 1)];
          j_33557750 = subInt(j_33557750, 1);
        }
    };
    j_33557750 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33557750 < (item_33557747).length)) break Label5;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, i_33557748), 0, (x_33557746[x_33557746_Idx]).length - 1)] = item_33557747[chckIndx(j_33557750, 0, (item_33557747).length - 1)];
          j_33557750 = addInt(j_33557750, 1);
        }
    };

  
}

function insert_2818579918(x_2818579920, x_2818579920_Idx, item_2818579921, i_2818579922) {
    var it_2818579942 = [];
    x_2818579920[x_2818579920_Idx] = x_2818579920[x_2818579920_Idx] || []; x_2818579920[x_2818579920_Idx].splice(i_2818579922, 0, it_2818579942);
    x_2818579920[x_2818579920_Idx][chckIndx(i_2818579922, 0, (x_2818579920[x_2818579920_Idx]).length - 1)] = nimCopy(null, item_2818579921, NTI33554449);

  
}

function HEX24_855639412(x_855639415) {
  var result_855639416 = [];

    result_855639416 = nimCopy(null, HEX24_369098760(x_855639415.a), NTI33554449);
    result_855639416.push.apply(result_855639416, [32,46,46,32]);;
    result_855639416.push.apply(result_855639416, HEX24_369098760(x_855639415.b));;

  return result_855639416;

}

function addQuoted_855639404(s_855639406, s_855639406_Idx, x_855639407) {
    s_855639406[s_855639406_Idx].push.apply(s_855639406[s_855639406_Idx], HEX24_855639412(x_855639407));;

  
}

function addQuoted_855639425(s_855639427, s_855639427_Idx, x_855639428) {
    addInt_301990108(s_855639427, s_855639427_Idx, x_855639428);

  
}

function HEX24_855639371(x_855639373) {
  var result_855639374 = [[]];

    result_855639374[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym136_855639385 = 0;
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [115,108,105,99,101]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639404(result_855639374, 0, x_855639373["Field0"]);
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [108,101,110]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639425(result_855639374, 0, x_855639373["Field1"]);
    result_855639374[0].push.apply(result_855639374[0], [41]);;

  return result_855639374[0];

}

function delete_855639365(s_855639366, s_855639366_Idx, slice_855639368) {
    if (!((((slice_855639368.a < (s_855639366[s_855639366_Idx]).length) && (0 <= slice_855639368.a)) && (slice_855639368.b < (s_855639366[s_855639366_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_855639368, NTI805306392), Field1: (s_855639366[s_855639366_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_855639368.a <= slice_855639368.b)) {
    var i_855639431 = slice_855639368.a;
    var j_855639432 = addInt(slice_855639368.b, 1);
    var newLen_855639433 = addInt(subInt((s_855639366[s_855639366_Idx]).length, j_855639432), i_855639431);
    Label1: {
        Label2: while (true) {
        if (!(i_855639431 < newLen_855639433)) break Label2;
          s_855639366[s_855639366_Idx][chckIndx(i_855639431, 0, (s_855639366[s_855639366_Idx]).length - 1)] = s_855639366[s_855639366_Idx][chckIndx(j_855639432, 0, (s_855639366[s_855639366_Idx]).length - 1)];
          i_855639431 = addInt(i_855639431, 1);
          j_855639432 = addInt(j_855639432, 1);
        }
    };
    if (s_855639366[s_855639366_Idx].length < chckRange(newLen_855639433, 0, 2147483647)) { for (var i = s_855639366[s_855639366_Idx].length; i < chckRange(newLen_855639433, 0, 2147483647); ++i) s_855639366[s_855639366_Idx].push(0); }
         else {s_855639366[s_855639366_Idx].length = chckRange(newLen_855639433, 0, 2147483647); };
    }
    

  
}

function HEX2EHEX2E_805306418(a_805306421, b_805306422) {
  var result_805306423 = ({a: 0, b: 0});

    result_805306423 = nimCopy(result_805306423, {a: a_805306421, b: b_805306422}, NTI805306392);

  return result_805306423;

}

function toSelection_2449474032(cursor_2449474033) {
  var result_2449474034 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818585202 = nimCopy(null, cursor_2449474033, NTI2449473546);
    var colontmp__2818585203 = nimCopy(null, cursor_2449474033, NTI2449473546);
    result_2449474034 = nimCopy(result_2449474034, {Field0: nimCopy(null, colontmp__2818585202, NTI2449473546), Field1: nimCopy(null, colontmp__2818585203, NTI2449473546)}, NTI2449473548);

  return result_2449474034;

}

function add_2449474056(cursor_2449474057, selection_2449474058) {
  var result_2449474059 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473882(cursor_2449474057, selection_2449474058.Field0)) {
    result_2449474059 = nimCopy(result_2449474059, cursor_2449474057, NTI2449473546);
    break BeforeRet;
    }
    
    if ((selection_2449474058.Field0.Field0 == selection_2449474058.Field1.Field0)) {
    if ((cursor_2449474057.Field0 == selection_2449474058.Field0.Field0)) {
    var colontmp__2818585206 = cursor_2449474057.Field0;
    var colontmp__2818585207 = addInt(cursor_2449474057.Field1, subInt(selection_2449474058.Field1.Field1, selection_2449474058.Field0.Field1));
    result_2449474059 = nimCopy(result_2449474059, {Field0: colontmp__2818585206, Field1: colontmp__2818585207}, NTI2449473546);
    break BeforeRet;
    }
    else {
      result_2449474059 = nimCopy(result_2449474059, cursor_2449474057, NTI2449473546);
      break BeforeRet;
    }
    
    }
    else {
    if ((cursor_2449474057.Field0 == selection_2449474058.Field0.Field0)) {
    var colontmp__2818585208 = selection_2449474058.Field1.Field0;
    var colontmp__2818585209 = addInt(selection_2449474058.Field1.Field1, subInt(cursor_2449474057.Field1, selection_2449474058.Field0.Field1));
    result_2449474059 = nimCopy(result_2449474059, {Field0: colontmp__2818585208, Field1: colontmp__2818585209}, NTI2449473546);
    break BeforeRet;
    }
    else {
      var colontmp__2818585210 = addInt(cursor_2449474057.Field0, subInt(selection_2449474058.Field1.Field0, selection_2449474058.Field0.Field0));
      var colontmp__2818585211 = cursor_2449474057.Field1;
      result_2449474059 = nimCopy(result_2449474059, {Field0: colontmp__2818585210, Field1: colontmp__2818585211}, NTI2449473546);
      break BeforeRet;
    }
    }
  };

  return result_2449474059;

}

function add_2449474064(self_2449474065, other_2449474066) {
  var result_2449474067 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818585204 = add_2449474056(self_2449474065.Field0, other_2449474066);
    var colontmp__2818585205 = add_2449474056(self_2449474065.Field1, other_2449474066);
    result_2449474067 = nimCopy(result_2449474067, {Field0: nimCopy(null, colontmp__2818585204, NTI2449473546), Field1: nimCopy(null, colontmp__2818585205, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
  };

  return result_2449474067;

}

function nsuJoinSep(a_855639591, sep_855639592) {
  var result_855639593 = [];

    if ((0 < (a_855639591).length)) {
    var L_855639600 = mulInt((sep_855639592).length, subInt((a_855639591).length, 1));
    Label1: {
      var i_855639608 = 0;
      var colontmp__2818585213 = 0;
      colontmp__2818585213 = (a_855639591).length - 1;
      var res_2818585214 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585214 <= colontmp__2818585213)) break Label3;
            i_855639608 = res_2818585214;
            L_855639600 = addInt(L_855639600, (a_855639591[chckIndx(i_855639608, 0, (a_855639591).length - 1)]).length);
            res_2818585214 = addInt(res_2818585214, 1);
          }
      };
    };
    result_855639593 = nimCopy(null, mnewString(0), NTI33554449);
    result_855639593.push.apply(result_855639593, a_855639591[chckIndx(0, 0, (a_855639591).length - 1)]);;
    Label4: {
      var i_855639621 = 0;
      var colontmp__2818585217 = 0;
      colontmp__2818585217 = (a_855639591).length - 1;
      var res_2818585218 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_2818585218 <= colontmp__2818585217)) break Label6;
            i_855639621 = res_2818585218;
            result_855639593.push.apply(result_855639593, sep_855639592);;
            result_855639593.push.apply(result_855639593, a_855639591[chckIndx(i_855639621, 0, (a_855639591).length - 1)]);;
            res_2818585218 = addInt(res_2818585218, 1);
          }
      };
    };
    }
    else {
      result_855639593 = nimCopy(null, [], NTI33554449);
    }
    

  return result_855639593;

}

function isSome_2885681248(self_2885681250) {
  var result_2885681251 = false;

    result_2885681251 = !((self_2885681250.val == null));

  return result_2885681251;

}

function get_2885681239(self_2885681241, otherwise_2885681242) {
    var Temporary1;

  var result_2885681243 = null;

    if (isSome_2885681248(self_2885681241)) {
    Temporary1 = self_2885681241.val;
    }
    else {
    Temporary1 = otherwise_2885681242;
    }
    
    result_2885681243 = Temporary1;

  return result_2885681243;

}

function parseString_2885681211(self_2885681212, text_2885681213, oldTree_2885681225) {
  var result_2885681226 = null;

  BeforeRet: {
    result_2885681226 = self_2885681212.parse(toJSStr(text_2885681213), get_2885681239(oldTree_2885681225, null));
    break BeforeRet;
  };

  return result_2885681226;

}

function some_2818579537(val_2818579539) {
  var result_2818579540 = ({val: null});

    if (!(!((val_2818579539 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818579540.val = val_2818579539;

  return result_2818579540;

}

function invoke_2818580009(event_2818580011, arg_2818580012) {
    Label1: {
      var h_2818580035 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585222 = 0;
      var L_2818585223 = (event_2818580011.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585222 < L_2818585223)) break Label3;
            h_2818580035 = event_2818580011.handlers[chckIndx(i_2818585222, 0, (event_2818580011.handlers).length - 1)];
            h_2818580035.Field1(arg_2818580012);
            i_2818585222 = addInt(i_2818585222, 1);
            if (!(((event_2818580011.handlers).length == L_2818585223))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_2818573292(event_2818573294, arg_2818573295) {
    Label1: {
      var h_2818573318 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585227 = 0;
      var L_2818585228 = (event_2818573294.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585227 < L_2818585228)) break Label3;
            h_2818573318 = event_2818573294.handlers[chckIndx(i_2818585227, 0, (event_2818573294.handlers).length - 1)];
            h_2818573318.Field1(arg_2818573295);
            i_2818585227 = addInt(i_2818585227, 1);
            if (!(((event_2818573294.handlers).length == L_2818585228))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clear_2818573395(t_2818573398) {
    Label1: {
      var i_2818573467 = 0;
      var colontmp__2818585231 = 0;
      colontmp__2818585231 = (t_2818573398.data).length;
      var i_2818585232 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585232 < colontmp__2818585231)) break Label3;
            i_2818573467 = i_2818585232;
            t_2818573398.data[chckIndx(i_2818573467, 0, (t_2818573398.data).length - 1)].Field0 = 0;
            t_2818573398.data[chckIndx(i_2818573467, 0, (t_2818573398.data).length - 1)].Field1 = 0;
            t_2818573398.data[chckIndx(i_2818573467, 0, (t_2818573398.data).length - 1)].Field2 = null;
            i_2818585232 = addInt(i_2818585232, 1);
          }
      };
    };
    t_2818573398.counter = 0;

  
}

function notifyTextChanged_2818573268(self_2818573269) {
    invoke_2818573292(self_2818573269.textChanged, self_2818573269);
    clear_2818573395(self_2818573269.styledTextCache);

  
}

function insert_2818579853(self_2818579854, selections_2818579855, oldSelection_2818579856, text_2818579857, notify_2818579858, record_2818579859, autoIndent_2818579860) {
                      var Temporary10;
            var Temporary15;
      var Temporary16;
        var Temporary17;

  var result_2818579861 = [];

    var newEmptyLines_2818579862 = [];
    result_2818579861 = nimCopy(null, clampAndMergeSelections_2818572720(self_2818579854, selections_2818579855), NTI2449473556);
    var undoOp_2818579870 = {kind: 2, children: [], oldSelection: HEX40_2818579363(oldSelection_2818579856), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818579876 = 0;
      var selection_2818579877 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585166 = 0;
      var L_2818585167 = (result_2818579861).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585166 < L_2818585167)) break Label3;
            i_2818579876 = i_2818585166;
            selection_2818579877 = nimCopy(selection_2818579877, result_2818579861[chckIndx(i_2818585166, 0, (result_2818579861).length - 1)], NTI2449473548);
            var oldCursor_2818579878 = nimCopy(null, selection_2818579877.Field1, NTI2449473546);
            var cursor_2818579879 = nimCopy(null, selection_2818579877.Field1, NTI2449473546);
            var startByte_2818579880 = byteOffset_2818579343(self_2818579854, cursor_2818579879);
            var lineCounter_2818579881 = 0;
            if (self_2818579854.singleLine) {
            var text_2818579882 = nsuReplaceStr(text_2818579857, [10], [32]);
            if (((self_2818579854.lines).length == 0)) {
            var Temporary4 = nimCopy(null, text_2818579882, NTI33554449);
            self_2818579854.lines.push(Temporary4);;
            }
            else {
            insert_33557745(self_2818579854.lines, chckIndx(0, 0, (self_2818579854.lines).length - 1), text_2818579882, chckRange(cursor_2818579879.Field1, 0, 2147483647));
            }
            
            cursor_2818579879.Field1 = addInt(cursor_2818579879.Field1, (text_2818579882).length);
            }
            else {
              Label5: {
                var line_2818579894 = [];
                var first_2818585155 = 0;
                var last_2818585156 = 0;
                var eolpos_2818585157 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!true) break Label7;
                      Label8: {
                          Label9: while (true) {
                          if (!((last_2818585156 < (text_2818579857).length) && !((ConstSet23[text_2818579857[chckIndx(last_2818585156, 0, (text_2818579857).length - 1)]] != undefined)))) break Label9;
                            last_2818585156 = addInt(last_2818585156, 1);
                          }
                      };
                      eolpos_2818585157 = last_2818585156;
                      if ((last_2818585156 < (text_2818579857).length)) {
                      if ((text_2818579857[chckIndx(last_2818585156, 0, (text_2818579857).length - 1)] == 10)) {
                      last_2818585156 = addInt(last_2818585156, 1);
                      }
                      else {
                      if ((text_2818579857[chckIndx(last_2818585156, 0, (text_2818579857).length - 1)] == 13)) {
                      last_2818585156 = addInt(last_2818585156, 1);
                      if (((last_2818585156 < (text_2818579857).length) && (text_2818579857[chckIndx(last_2818585156, 0, (text_2818579857).length - 1)] == 10))) {
                      last_2818585156 = addInt(last_2818585156, 1);
                      }
                      
                      }
                      }
                      }
                      
                      if (false) {
                      Temporary10 = subInt(last_2818585156, 1);
                      }
                      else {
                      Temporary10 = subInt(eolpos_2818585157, 1);
                      }
                      
                      line_2818579894 = substr_33557821(text_2818579857, first_2818585155, Temporary10);
                      try {
                      if ((0 < lineCounter_2818579881)) {
                      insert_2818579918(self_2818579854, "lines", HEX5BHEX5D_855639319(self_2818579854.lines[chckIndx(cursor_2818579879.Field0, 0, (self_2818579854.lines).length - 1)], HEX2EHEX2E_1040187488(cursor_2818579879.Field1, 1)), chckRange(addInt(cursor_2818579879.Field0, 1), 0, 2147483647));
                      newEmptyLines_2818579862.push(addInt(cursor_2818579879.Field0, 1));;
                      if ((cursor_2818579879.Field1 < lineLength_2818572673(self_2818579854, cursor_2818579879.Field0))) {
                      delete_855639365(self_2818579854.lines, chckIndx(cursor_2818579879.Field0, 0, (self_2818579854.lines).length - 1), HEX2EHEX2E_805306418(cursor_2818579879.Field1, subInt(lineLength_2818572673(self_2818579854, cursor_2818579879.Field0), 1)));
                      }
                      
                      var colontmp__2818585151 = addInt(cursor_2818579879.Field0, 1);
                      var colontmp__2818585152 = 0;
                      cursor_2818579879 = nimCopy(cursor_2818579879, {Field0: colontmp__2818585151, Field1: colontmp__2818585152}, NTI2449473546);
                      }
                      
                      if ((0 < (line_2818579894).length)) {
                      insert_33557745(self_2818579854.lines, chckIndx(cursor_2818579879.Field0, 0, (self_2818579854.lines).length - 1), line_2818579894, chckRange(cursor_2818579879.Field1, 0, 2147483647));
                      cursor_2818579879.Field1 = addInt(cursor_2818579879.Field1, (line_2818579894).length);
                      }
                      
                      if ((eolpos_2818585157 == last_2818585156)) {
                      break Label6;
                      }
                      
                      first_2818585155 = last_2818585156;
                      } finally {
                      lineCounter_2818579881 = addInt(lineCounter_2818579881, 1);
                      }
                    }
                };
              };
            }
            
            result_2818579861[chckIndx(i_2818579876, 0, (result_2818579861).length - 1)] = nimCopy(result_2818579861[chckIndx(i_2818579876, 0, (result_2818579861).length - 1)], toSelection_2449474032(cursor_2818579879), NTI2449473548);
            Label12: {
              var k_2818579969 = 0;
              var colontmp__2818585161 = 0;
              var colontmp__2818585162 = 0;
              colontmp__2818585161 = addInt(i_2818579876, 1);
              colontmp__2818585162 = (result_2818579861).length - 1;
              var res_2818585163 = colontmp__2818585161;
              Label13: {
                  Label14: while (true) {
                  if (!(res_2818585163 <= colontmp__2818585162)) break Label14;
                    k_2818579969 = res_2818585163;
                    result_2818579861[chckIndx(k_2818579969, 0, (result_2818579861).length - 1)] = nimCopy(result_2818579861[chckIndx(k_2818579969, 0, (result_2818579861).length - 1)], add_2449474064(result_2818579861[chckIndx(k_2818579969, 0, (result_2818579861).length - 1)], {Field0: nimCopy(null, oldCursor_2818579878, NTI2449473546), Field1: nimCopy(null, cursor_2818579879, NTI2449473546)}), NTI2449473548);
                    res_2818585163 = addInt(res_2818585163, 1);
                  }
              };
            };
            if (!((self_2818579854.tsParser == null))) {
            var edit_2818579973 = {startIndex: startByte_2818579880, oldEndIndex: startByte_2818579880, newEndIndex: addInt(startByte_2818579880, (text_2818579857).length), startPosition: {row: oldCursor_2818579878.Field0, column: oldCursor_2818579878.Field1, m_type: NTI2885681166}, oldEndPosition: {row: oldCursor_2818579878.Field0, column: oldCursor_2818579878.Field1, m_type: NTI2885681166}, newEndPosition: {row: cursor_2818579879.Field0, column: cursor_2818579879.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
            var _ = self_2818579854.currentTree.edit(edit_2818579973);
            var strValue_2818579974 = nsuJoinSep(self_2818579854.lines, [10]);
            self_2818579854.currentTree = parseString_2885681211(self_2818579854.tsParser, strValue_2818579974, some_2818579537(self_2818579854.currentTree));
            }
            
            self_2818579854.version = addInt(self_2818579854.version, 1);
            if (record_2818579859) {
            var Temporary15 = undoOp_2818579870;
            if (ConstSet24[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI2818572291)); }
            Temporary15.children.push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, oldCursor_2818579878, NTI2449473546), Field1: nimCopy(null, cursor_2818579879, NTI2449473546)}, NTI2449473548), oldSelection: [], cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
            }
            
            if (notify_2818579858) {
            invoke_2818580009(self_2818579854.textInserted, {Field0: self_2818579854, Field1: nimCopy(null, oldCursor_2818579878, NTI2449473546), Field2: nimCopy(null, text_2818579857, NTI33554449)});
            }
            
            i_2818585166 = addInt(i_2818585166, 1);
            if (!(((result_2818579861).length == L_2818585167))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818579858) {
    notifyTextChanged_2818573268(self_2818579854);
    }
    
      if (!record_2818579859) Temporary16 = false; else {        var Temporary17 = undoOp_2818579870;
        if (ConstSet25[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2818572291)); }
        Temporary16 = (0 < (Temporary17.children).length);      }    if (Temporary16) {
    self_2818579854.undoOps.push(undoOp_2818579870);;
    self_2818579854.redoOps = nimCopy(null, [], NTI2818576104);
    }
    

  return result_2818579861;

}

function selections_2818572802(self_2818572803) {
  var result_2818572804 = [];

    result_2818572804 = nimCopy(null, self_2818572803.selectionsInternal, NTI2449473556);

  return result_2818572804;

}

function insert_2818584745(self_2818584746, selections_2818584747, text_2818584748, notify_2818584749, record_2818584750, autoIndent_2818584751) {
  var result_2818584752 = [];

  BeforeRet: {
    result_2818584752 = nimCopy(null, insert_2818579853(self_2818584746.document, selections_2818584747, selections_2818572802(self_2818584746), text_2818584748, notify_2818584749, record_2818584750, autoIndent_2818584751), NTI2818576430);
    break BeforeRet;
  };

  return result_2818584752;

}

function insertJsWrapper_2818584742(self_2818584786, selections_2818584787, text_2818584788, notify_2818584789, record_2818584790, autoIndent_2818584791) {
  var result_2818584792 = [];

    result_2818584792 = nimCopy(null, insert_2818584745(self_2818584786, selections_2818584787, text_2818584788, notify_2818584789, record_2818584790, autoIndent_2818584791), NTI2818579243);

  return result_2818584792;

}
editor_text_prototype.insert = function(selections_ /* : seq[Selection] */, text_ /* : string */, notify_ /* : bool */, record_ /* : bool */, autoIndent_ /* : bool */) { return (insertJsWrapper_2818584742(this, selections_, text_ == undefined ? undefined : cstrToNimstr(text_), notify_, record_, autoIndent_));};

function isEmpty_2449473911(selection_2449473912) {
  var result_2449473913 = false;

    result_2449473913 = HEX3DHEX3D_2449473612(selection_2449473912.Field0, selection_2449473912.Field1);

  return result_2449473913;

}

function HEX3E_2449473870(a_2449473871, b_2449473872) {
  var result_2449473873 = false;

  BeforeRet: {
    if ((b_2449473872.Field0 < a_2449473871.Field0)) {
    result_2449473873 = true;
    break BeforeRet;
    }
    else {
    if (((a_2449473871.Field0 == b_2449473872.Field0) && (b_2449473872.Field1 < a_2449473871.Field1))) {
    result_2449473873 = true;
    break BeforeRet;
    }
    else {
      result_2449473873 = false;
      break BeforeRet;
    }
    }
  };

  return result_2449473873;

}

function isBackwards_2449473902(selection_2449473903) {
  var result_2449473904 = false;

  BeforeRet: {
    result_2449473904 = HEX3E_2449473870(selection_2449473903.Field0, selection_2449473903.Field1);
    break BeforeRet;
  };

  return result_2449473904;

}

function normalized_2449473905(selection_2449473906) {
  var result_2449473907 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if (isBackwards_2449473902(selection_2449473906)) {
    var colontmp__2818585318 = nimCopy(null, selection_2449473906.Field1, NTI2449473546);
    var colontmp__2818585319 = nimCopy(null, selection_2449473906.Field0, NTI2449473546);
    result_2449473907 = nimCopy(result_2449473907, {Field0: nimCopy(null, colontmp__2818585318, NTI2449473546), Field1: nimCopy(null, colontmp__2818585319, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
    }
    else {
      result_2449473907 = nimCopy(result_2449473907, selection_2449473906, NTI2449473548);
      break BeforeRet;
    }
    
  };

  return result_2449473907;

}

function HEX5BHEX5D_855639291(s_855639294, x_855639295) {
  var result_855639296 = [];

    var a_855639298 = x_855639295.a;
    var L_855639300 = addInt(subInt(x_855639295.b, a_855639298), 1);
    result_855639296 = nimCopy(null, mnewString(chckRange(L_855639300, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639305 = 0;
      var i_2818585326 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585326 < L_855639300)) break Label3;
            i_855639305 = i_2818585326;
            result_855639296[chckIndx(i_855639305, 0, (result_855639296).length - 1)] = s_855639294[chckIndx(addInt(i_855639305, a_855639298), 0, (s_855639294).length - 1)];
            i_2818585326 = addInt(i_2818585326, 1);
          }
      };
    };

  return result_855639296;

}

function contentString_2818574091(self_2818574092, selection_2818574093) {
  var result_2818574094 = [];

  BeforeRet: {
    var colontmp__2818585324 = normalized_2449473905(selection_2818574093);
    var first_2818574095 = nimCopy(null, colontmp__2818585324["Field0"], NTI2449473546);
    var last_2818574096 = nimCopy(null, colontmp__2818585324["Field1"], NTI2449473546);
    if ((first_2818574095.Field0 == last_2818574096.Field0)) {
    result_2818574094 = nimCopy(null, HEX5BHEX5D_855639291(self_2818574092.lines[chckIndx(first_2818574095.Field0, 0, (self_2818574092.lines).length - 1)], HEX2EHEX2E_805306418(first_2818574095.Field1, subInt(last_2818574096.Field1, 1))), NTI33554449);
    break BeforeRet;
    }
    
    result_2818574094 = nimCopy(null, HEX5BHEX5D_855639319(self_2818574092.lines[chckIndx(first_2818574095.Field0, 0, (self_2818574092.lines).length - 1)], HEX2EHEX2E_1040187488(first_2818574095.Field1, 1)), NTI33554449);
    Label1: {
      var i_2818574143 = 0;
      var colontmp__2818585321 = 0;
      colontmp__2818585321 = addInt(first_2818574095.Field0, 1);
      var i_2818585322 = colontmp__2818585321;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585322 < last_2818574096.Field0)) break Label3;
            i_2818574143 = i_2818585322;
            result_2818574094.push.apply(result_2818574094, [10]);;
            result_2818574094.push.apply(result_2818574094, self_2818574092.lines[chckIndx(i_2818574143, 0, (self_2818574092.lines).length - 1)]);;
            i_2818585322 = addInt(i_2818585322, 1);
          }
      };
    };
    result_2818574094.push.apply(result_2818574094, [10]);;
    result_2818574094.push.apply(result_2818574094, HEX5BHEX5D_855639291(self_2818574092.lines[chckIndx(last_2818574096.Field0, 0, (self_2818574092.lines).length - 1)], HEX2EHEX2E_805306418(0, subInt(last_2818574096.Field1, 1))));;
  };

  return result_2818574094;

}

function delete_2818579472(s_2818579474, s_2818579474_Idx, slice_2818579475) {
    if (!((((slice_2818579475.a < (s_2818579474[s_2818579474_Idx]).length) && (0 <= slice_2818579475.a)) && (slice_2818579475.b < (s_2818579474[s_2818579474_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2818579475, NTI805306392), Field1: (s_2818579474[s_2818579474_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2818579475.a <= slice_2818579475.b)) {
    var n_2818579522 = addInt(subInt(slice_2818579475.b, slice_2818579475.a), 1);
    var first_2818579523 = slice_2818579475.a;
    s_2818579474[s_2818579474_Idx].splice(first_2818579523, n_2818579522);
    }
    

  
}

function subtract_2449474040(cursor_2449474041, selection_2449474042) {
  var result_2449474043 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473882(cursor_2449474041, selection_2449474042.Field0)) {
    result_2449474043 = nimCopy(result_2449474043, cursor_2449474041, NTI2449473546);
    break BeforeRet;
    }
    
    if (HEX3CHEX3D_2449473882(cursor_2449474041, selection_2449474042.Field1)) {
    result_2449474043 = nimCopy(result_2449474043, selection_2449474042.Field0, NTI2449473546);
    break BeforeRet;
    }
    
    if ((cursor_2449474041.Field0 == selection_2449474042.Field1.Field0)) {
    if ((selection_2449474042.Field0.Field0 == selection_2449474042.Field1.Field0)) {
    var colontmp__2818585332 = cursor_2449474041.Field0;
    var colontmp__2818585333 = subInt(cursor_2449474041.Field1, subInt(selection_2449474042.Field1.Field1, selection_2449474042.Field0.Field1));
    result_2449474043 = nimCopy(result_2449474043, {Field0: colontmp__2818585332, Field1: colontmp__2818585333}, NTI2449473546);
    break BeforeRet;
    }
    else {
      var colontmp__2818585334 = selection_2449474042.Field0.Field0;
      var colontmp__2818585335 = addInt(selection_2449474042.Field0.Field1, subInt(cursor_2449474041.Field1, selection_2449474042.Field1.Field1));
      result_2449474043 = nimCopy(result_2449474043, {Field0: colontmp__2818585334, Field1: colontmp__2818585335}, NTI2449473546);
      break BeforeRet;
    }
    
    }
    
    var colontmp__2818585336 = subInt(cursor_2449474041.Field0, subInt(selection_2449474042.Field1.Field0, selection_2449474042.Field0.Field0));
    var colontmp__2818585337 = cursor_2449474041.Field1;
    result_2449474043 = nimCopy(result_2449474043, {Field0: colontmp__2818585336, Field1: colontmp__2818585337}, NTI2449473546);
    break BeforeRet;
  };

  return result_2449474043;

}

function subtract_2449474052(self_2449474053, other_2449474054) {
  var result_2449474055 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818585330 = subtract_2449474040(self_2449474053.Field0, other_2449474054);
    var colontmp__2818585331 = subtract_2449474040(self_2449474053.Field1, other_2449474054);
    result_2449474055 = nimCopy(result_2449474055, {Field0: nimCopy(null, colontmp__2818585330, NTI2449473546), Field1: nimCopy(null, colontmp__2818585331, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
  };

  return result_2449474055;

}

function invoke_2818579581(event_2818579583, arg_2818579584) {
    Label1: {
      var h_2818579607 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585340 = 0;
      var L_2818585341 = (event_2818579583.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585340 < L_2818585341)) break Label3;
            h_2818579607 = event_2818579583.handlers[chckIndx(i_2818585340, 0, (event_2818579583.handlers).length - 1)];
            h_2818579607.Field1(arg_2818579584);
            i_2818585340 = addInt(i_2818585340, 1);
            if (!(((event_2818579583.handlers).length == L_2818585341))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function delete_2818579356(self_2818579357, selections_2818579358, oldSelection_2818579359, notify_2818579360, record_2818579361) {
              var Temporary8;
      var Temporary9;
        var Temporary10;

  var result_2818579362 = [];

    result_2818579362 = nimCopy(null, clampAndMergeSelections_2818572720(self_2818579357, selections_2818579358), NTI2449473556);
    var undoOp_2818579386 = {kind: 2, children: [], oldSelection: HEX40_2818579363(oldSelection_2818579359), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818579419 = 0;
      var selection_2818579420 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585315 = 0;
      var L_2818585316 = (result_2818579362).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585315 < L_2818585316)) break Label3;
            i_2818579419 = i_2818585315;
            selection_2818579420 = nimCopy(selection_2818579420, result_2818579362[chckIndx(i_2818585315, 0, (result_2818579362).length - 1)], NTI2449473548);
            Label4: {
              if (isEmpty_2449473911(selection_2818579420)) {
              break Label4;
              }
              
              var selection_2818579421 = normalized_2449473905(selection_2818579420);
              var startByte_2818579422 = byteOffset_2818579343(self_2818579357, selection_2818579421.Field0);
              var endByte_2818579423 = byteOffset_2818579343(self_2818579357, selection_2818579421.Field1);
              var deletedText_2818579424 = contentString_2818574091(self_2818579357, selection_2818579421);
              var colontmp__2818585328 = normalized_2449473905(selection_2818579421);
              var first_2818579425 = nimCopy(null, colontmp__2818585328["Field0"], NTI2449473546);
              var last_2818579426 = nimCopy(null, colontmp__2818585328["Field1"], NTI2449473546);
              if ((first_2818579425.Field0 == last_2818579426.Field0)) {
              delete_855639365(self_2818579357.lines, chckIndx(last_2818579426.Field0, 0, (self_2818579357.lines).length - 1), HEX2EHEX2E_805306418(first_2818579425.Field1, subInt(last_2818579426.Field1, 1)));
              }
              else {
                if ((first_2818579425.Field1 < lineLength_2818572673(self_2818579357, first_2818579425.Field0))) {
                delete_855639365(self_2818579357.lines, chckIndx(first_2818579425.Field0, 0, (self_2818579357.lines).length - 1), HEX2EHEX2E_805306418(first_2818579425.Field1, subInt(lineLength_2818572673(self_2818579357, first_2818579425.Field0), 1)));
                }
                
                self_2818579357.lines[chckIndx(first_2818579425.Field0, 0, (self_2818579357.lines).length - 1)].push.apply(self_2818579357.lines[chckIndx(first_2818579425.Field0, 0, (self_2818579357.lines).length - 1)], HEX5BHEX5D_855639319(self_2818579357.lines[chckIndx(last_2818579426.Field0, 0, (self_2818579357.lines).length - 1)], HEX2EHEX2E_1040187488(last_2818579426.Field1, 1)));;
                delete_2818579472(self_2818579357, "lines", HEX2EHEX2E_805306418(addInt(first_2818579425.Field0, 1), last_2818579426.Field0));
              }
              
              result_2818579362[chckIndx(i_2818579419, 0, (result_2818579362).length - 1)] = nimCopy(result_2818579362[chckIndx(i_2818579419, 0, (result_2818579362).length - 1)], toSelection_2449474032(selection_2818579421.Field0), NTI2449473548);
              Label5: {
                var k_2818579531 = 0;
                var colontmp__2818585311 = 0;
                var colontmp__2818585312 = 0;
                colontmp__2818585311 = addInt(i_2818579419, 1);
                colontmp__2818585312 = (result_2818579362).length - 1;
                var res_2818585313 = colontmp__2818585311;
                Label6: {
                    Label7: while (true) {
                    if (!(res_2818585313 <= colontmp__2818585312)) break Label7;
                      k_2818579531 = res_2818585313;
                      result_2818579362[chckIndx(k_2818579531, 0, (result_2818579362).length - 1)] = nimCopy(result_2818579362[chckIndx(k_2818579531, 0, (result_2818579362).length - 1)], subtract_2449474052(result_2818579362[chckIndx(k_2818579531, 0, (result_2818579362).length - 1)], selection_2818579421), NTI2449473548);
                      res_2818585313 = addInt(res_2818585313, 1);
                    }
                };
              };
              if (!((self_2818579357.tsParser == null))) {
              var edit_2818579535 = {startIndex: startByte_2818579422, oldEndIndex: endByte_2818579423, newEndIndex: startByte_2818579422, startPosition: {row: selection_2818579421.Field0.Field0, column: selection_2818579421.Field0.Field1, m_type: NTI2885681166}, oldEndPosition: {row: selection_2818579421.Field1.Field0, column: selection_2818579421.Field1.Field1, m_type: NTI2885681166}, newEndPosition: {row: selection_2818579421.Field0.Field0, column: selection_2818579421.Field0.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
              var _ = self_2818579357.currentTree.edit(edit_2818579535);
              var strValue_2818579536 = nsuJoinSep(self_2818579357.lines, [10]);
              self_2818579357.currentTree = parseString_2885681211(self_2818579357.tsParser, strValue_2818579536, some_2818579537(self_2818579357.currentTree));
              }
              
              self_2818579357.version = addInt(self_2818579357.version, 1);
              if (record_2818579361) {
              var Temporary8 = undoOp_2818579386;
              if (ConstSet26[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
              Temporary8.children.push({kind: 1, cursor: nimCopy(null, selection_2818579421.Field0, NTI2449473546), text: nimCopy(null, deletedText_2818579424, NTI33554449), oldSelection: [], selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
              }
              
              if (notify_2818579360) {
              invoke_2818579581(self_2818579357.textDeleted, {Field0: self_2818579357, Field1: nimCopy(null, selection_2818579421, NTI2449473548)});
              }
              
            };
            i_2818585315 = addInt(i_2818585315, 1);
            if (!(((result_2818579362).length == L_2818585316))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818579360) {
    notifyTextChanged_2818573268(self_2818579357);
    }
    
      if (!record_2818579361) Temporary9 = false; else {        var Temporary10 = undoOp_2818579386;
        if (ConstSet27[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2818572291)); }
        Temporary9 = (0 < (Temporary10.children).length);      }    if (Temporary9) {
    self_2818579357.undoOps.push(undoOp_2818579386);;
    self_2818579357.redoOps = nimCopy(null, [], NTI2818576104);
    }
    

  return result_2818579362;

}

function delete_2818585239(self_2818585240, selections_2818585241, notify_2818585242, record_2818585243) {
  var result_2818585244 = [];

  BeforeRet: {
    result_2818585244 = nimCopy(null, delete_2818579356(self_2818585240.document, selections_2818585241, selections_2818572802(self_2818585240), notify_2818585242, record_2818585243), NTI2818576075);
    break BeforeRet;
  };

  return result_2818585244;

}

function deleteJsWrapper_2818585236(self_2818585276, selections_2818585277, notify_2818585278, record_2818585279) {
  var result_2818585280 = [];

    result_2818585280 = nimCopy(null, delete_2818585239(self_2818585276, selections_2818585277, notify_2818585278, record_2818585279), NTI2818579744);

  return result_2818585280;

}
editor_text_prototype.delete = function(selections_ /* : seq[Selection] */, notify_ /* : bool */, record_ /* : bool */) { return (deleteJsWrapper_2818585236(this, selections_, notify_, record_));};

function popLast_2818585481(deq_2818585483) {
    var Temporary1;

  var result_2818585484 = [];

    if ((deq_2818585483.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818585483.count = subInt(deq_2818585483.count, 1);
    deq_2818585483.tail = (subInt(deq_2818585483.tail, 1) & deq_2818585483.mask);
    Temporary1 = deq_2818585483.data[chckIndx(deq_2818585483.tail, 0, (deq_2818585483.data).length - 1)];
    deq_2818585483.data[chckIndx(deq_2818585483.tail, 0, (deq_2818585483.data).length - 1)] = genericReset(deq_2818585483.data[chckIndx(deq_2818585483.tail, 0, (deq_2818585483.data).length - 1)], NTI2449473556);
    result_2818585484 = nimCopy(null, Temporary1, NTI2449473556);

  return result_2818585484;

}

function addFirst_2818585500(deq_2818585502, item_2818585503) {
    expandIfNeeded_2818572835(deq_2818585502);
    deq_2818585502.count = addInt(deq_2818585502.count, 1);
    deq_2818585502.head = (subInt(deq_2818585502.head, 1) & deq_2818585502.mask);
    deq_2818585502.data[chckIndx(deq_2818585502.head, 0, (deq_2818585502.data).length - 1)] = nimCopy(null, item_2818585503, NTI2449473556);

  
}

function totalLineHeight_2768240810(self_2768240811) {
  var result_2768240812 = 0.0;

    result_2768240812 = (lineHeight_2768240794(self_2768240811) + lineDistance_2768240789(self_2768240811));

  return result_2768240812;

}

function clamp_2634023065(x_2634023067, a_2634023068, b_2634023069) {
  var result_2634023070 = 0.0;

  BeforeRet: {
    if ((x_2634023067 < a_2634023068)) {
    result_2634023070 = a_2634023068;
    break BeforeRet;
    }
    
    if ((b_2634023069 < x_2634023067)) {
    result_2634023070 = b_2634023069;
    break BeforeRet;
    }
    
    result_2634023070 = x_2634023067;
    break BeforeRet;
  };

  return result_2634023070;

}

function getFloat_1627390140(n_1627390141, default_1627390142) {
      var Temporary1;
      var Temporary2;

  var result_1627390143 = 0.0;

  BeforeRet: {
    if ((n_1627390141 == null)) {
    result_1627390143 = default_1627390142;
    break BeforeRet;
    }
    
    switch (n_1627390141.kind) {
    case 3:
      var Temporary1 = n_1627390141;
      if (ConstSet28[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390143 = Temporary1.fnum;
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = n_1627390141;
      if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627390143 = Temporary2.num;
      break BeforeRet;
      break;
    default: 
      result_1627390143 = default_1627390142;
      break BeforeRet;
      break;
    }
  };

  return result_1627390143;

}

function getOption_2818583576(editor_2818583578, path_2818583579, default_2818583580) {
  var result_2818583586 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583578 == null)) {
      result_2818583586 = default_2818583580;
      break BeforeRet;
      }
      
      var nodeHEX60gensym163_2818583599 = HEX7BHEX7D_1627393316(editor_2818583578.options, nsuSplitString(path_2818583579, [46], -1));
      if ((nodeHEX60gensym163_2818583599 == null)) {
      result_2818583586 = default_2818583580;
      break BeforeRet;
      }
      
    };
    result_2818583586 = getFloat_1627390140(nodeHEX60gensym163_2818583599, default_2818583580);
    break BeforeRet;
  };

  return result_2818583586;

}

function scrollToCursor_2818583568(self_2818583569, cursor_2818583570, keepVerticalOffset_2818583571) {
  BeforeRet: {
    if (self_2818583569.disableScrolling) {
    break BeforeRet;
    }
    
    var targetLine_2818583572 = cursor_2818583570.Field0;
    var totalLineHeight_2818583573 = totalLineHeight_2768240810(self_2818583569.editor.platform);
    if (keepVerticalOffset_2818583571) {
    var currentLineY_2818583574 = ((subInt(selection_2818572805(self_2818583569).Field1.Field0, self_2818583569.previousBaseIndex) * totalLineHeight_2818583573) + self_2818583569.scrollOffset);
    self_2818583569.previousBaseIndex = targetLine_2818583572;
    self_2818583569.scrollOffset = currentLineY_2818583574;
    }
    else {
      var targetLineY_2818583575 = ((subInt(targetLine_2818583572, self_2818583569.previousBaseIndex) * totalLineHeight_2818583573) + self_2818583569.scrollOffset);
      var margin_2818583608 = clamp_2634023065(getOption_2818583576(self_2818583569.editor, [116,101,120,116,46,99,117,114,115,111,114,45,109,97,114,103,105,110], 25.0), 0.0, ((self_2818583569.lastContentBounds.h * 0.5) - (totalLineHeight_2818583573 * 0.5)));
      if ((targetLineY_2818583575 < margin_2818583608)) {
      self_2818583569.scrollOffset = margin_2818583608;
      self_2818583569.previousBaseIndex = targetLine_2818583572;
      }
      else {
      if (((self_2818583569.lastContentBounds.h - margin_2818583608) < (targetLineY_2818583575 + totalLineHeight_2818583573))) {
      self_2818583569.scrollOffset = ((self_2818583569.lastContentBounds.h - margin_2818583608) - totalLineHeight_2818583573);
      self_2818583569.previousBaseIndex = targetLine_2818583572;
      }
      }
    }
    
    markDirty_2415919143(self_2818583569);
  };

  
}

function selectPrev_2818585348(self_2818585349) {
    if ((0 < len_2818572976(self_2818585349.selectionHistory))) {
    var selection_2818585494 = popLast_2818585481(self_2818585349.selectionHistory);
    addFirst_2818585500(self_2818585349.selectionHistory, selections_2818572802(self_2818585349));
    self_2818585349.selectionsInternal = nimCopy(null, selection_2818585494, NTI2449473556);
    }
    
    scrollToCursor_2818583568(self_2818585349, selection_2818572805(self_2818585349).Field1, false);

  
}

function selectPrevJsWrapper_2818585345(self_2818585544) {
    selectPrev_2818585348(self_2818585544);

  
}
editor_text_prototype.selectPrev = function() { return (selectPrevJsWrapper_2818585345(this));};

function selectNext_2818585559(self_2818585560) {
    if ((0 < len_2818572976(self_2818585560.selectionHistory))) {
    var selection_2818585695 = popFirst_2818573048(self_2818585560.selectionHistory);
    addLast_2818572826(self_2818585560.selectionHistory, selections_2818572802(self_2818585560));
    self_2818585560.selectionsInternal = nimCopy(null, selection_2818585695, NTI2449473556);
    }
    
    scrollToCursor_2818583568(self_2818585560, selection_2818572805(self_2818585560).Field1, false);

  
}

function selectNextJsWrapper_2818585556(self_2818585732) {
    selectNext_2818585559(self_2818585732);

  
}
editor_text_prototype.selectNext = function() { return (selectNextJsWrapper_2818585556(this));};

function re_2852126779(text_2852126780) {
  var result_2852126781 = ({impl: null});

  BeforeRet: {
    result_2852126781 = nimCopy(result_2852126781, {impl: new RegExp(toJSStr(text_2852126780), "dg")}, NTI2852126723);
    break BeforeRet;
  };

  return result_2852126781;

}

function matchLen_2852126756(text_2852126757, regex_2852126758, start_2852126759) {
  var result_2852126760 = 0;

    regex_2852126758.impl.lastIndex = 0;
    result_2852126760 = ((regex_2852126758.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126757, HEX2EHEX2E_1040187488(start_2852126759, 1))))) || {index:-1}).index;

  return result_2852126760;

}

function selectInside_2818585746(self_2818585747, cursor_2818585748) {
    var regex_2818585749 = re_2852126779([91,97,45,122,65,45,90,48,45,57,95,93]);
    var first_2818585750 = cursor_2818585748.Field1;
    Label1: {
        Label2: while (true) {
        if (!((0 < first_2818585750) && (matchLen_2852126756(self_2818585747.document.lines[chckIndx(cursor_2818585748.Field0, 0, (self_2818585747.document.lines).length - 1)], regex_2818585749, subInt(first_2818585750, 1)) == 1))) break Label2;
          first_2818585750 = subInt(first_2818585750, 1);
        }
    };
    var last_2818585755 = cursor_2818585748.Field1;
    Label3: {
        Label4: while (true) {
        if (!((last_2818585755 < (self_2818585747.document.lines[chckIndx(cursor_2818585748.Field0, 0, (self_2818585747.document.lines).length - 1)]).length) && (matchLen_2852126756(self_2818585747.document.lines[chckIndx(cursor_2818585748.Field0, 0, (self_2818585747.document.lines).length - 1)], regex_2818585749, last_2818585755) == 1))) break Label4;
          last_2818585755 = addInt(last_2818585755, 1);
        }
    };
    selectionHEX3D_2818572811(self_2818585747, {Field0: {Field0: cursor_2818585748.Field0, Field1: first_2818585750}, Field1: {Field0: cursor_2818585748.Field0, Field1: last_2818585755}});

  
}

function selectInsideJsWrapper_2818585743(self_2818585788, cursor_2818585789) {
    selectInside_2818585746(self_2818585788, cursor_2818585789);

  
}
editor_text_prototype.selectInside = function(cursor_ /* : Cursor */) { return (selectInsideJsWrapper_2818585743(this, cursor_));};

function selectInsideCurrent_2818585816(self_2818585817) {
    selectInside_2818585746(self_2818585817, selection_2818572805(self_2818585817).Field1);

  
}

function selectInsideCurrentJsWrapper_2818585813(self_2818585845) {
    selectInsideCurrent_2818585816(self_2818585845);

  
}
editor_text_prototype.selectInsideCurrent = function() { return (selectInsideCurrentJsWrapper_2818585813(this));};

function lineLength_2818572680(self_2818572681, line_2818572682) {
  var result_2818572683 = 0;

  BeforeRet: {
    if ((line_2818572682 < (self_2818572681.document.lines).length)) {
    result_2818572683 = (self_2818572681.document.lines[chckIndx(line_2818572682, 0, (self_2818572681.document.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572683 = 0;
    break BeforeRet;
  };

  return result_2818572683;

}

function selectLine_2818585859(self_2818585860, line_2818585861) {
    selectionHEX3D_2818572811(self_2818585860, {Field0: {Field0: line_2818585861, Field1: 0}, Field1: {Field0: line_2818585861, Field1: lineLength_2818572680(self_2818585860, line_2818585861)}});

  
}

function selectLineJsWrapper_2818585856(self_2818585890, line_2818585891) {
    selectLine_2818585859(self_2818585890, line_2818585891);

  
}
editor_text_prototype.selectLine = function(line_ /* : int */) { return (selectLineJsWrapper_2818585856(this, line_));};

function selectLineCurrent_2818585910(self_2818585911) {
    selectLine_2818585859(self_2818585911, selection_2818572805(self_2818585911).Field1.Field0);

  
}

function selectLineCurrentJsWrapper_2818585907(self_2818585939) {
    selectLineCurrent_2818585910(self_2818585939);

  
}
editor_text_prototype.selectLineCurrent = function() { return (selectLineCurrentJsWrapper_2818585907(this));};

function toTsPoint_2885681339(cursor_2885681340) {
  var result_2885681341 = null;

    result_2885681341 = {row: cursor_2885681340.Field0, column: cursor_2885681340.Field1, m_type: NTI2885681166};

  return result_2885681341;

}

function descendantForRange_2885681405(node_2885681406, selection_2885681407) {
  var result_2885681408 = null;

    result_2885681408 = node_2885681406.descendantForPosition(toTsPoint_2885681339(selection_2885681407.Field0), toTsPoint_2885681339(selection_2885681407.Field1));

  return result_2885681408;

}

function startPoint_2885681328(node_2885681329) {
  var result_2885681330 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681331 = node_2885681329.startPosition;
    var colontmp__2818586020 = point_2885681331.row;
    var colontmp__2818586021 = point_2885681331.column;
    result_2885681330 = nimCopy(result_2885681330, {Field0: colontmp__2818586020, Field1: colontmp__2818586021}, NTI2449473546);
    break BeforeRet;
  };

  return result_2885681330;

}

function endPoint_2885681332(node_2885681333) {
  var result_2885681334 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681335 = node_2885681333.endPosition;
    var colontmp__2818586022 = point_2885681335.row;
    var colontmp__2818586023 = point_2885681335.column;
    result_2885681334 = nimCopy(result_2885681334, {Field0: colontmp__2818586022, Field1: colontmp__2818586023}, NTI2449473546);
    break BeforeRet;
  };

  return result_2885681334;

}

function getRange_2885681336(node_2885681337) {
  var result_2885681338 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818586018 = startPoint_2885681328(node_2885681337);
    var colontmp__2818586019 = endPoint_2885681332(node_2885681337);
    result_2885681338 = nimCopy(result_2885681338, {Field0: nimCopy(null, colontmp__2818586018, NTI2449473546), Field1: nimCopy(null, colontmp__2818586019, NTI2449473546)}, NTI2449473548);

  return result_2885681338;

}

function selectParentTs_2818585953(self_2818585954, selection_2818585955) {
  BeforeRet: {
    if ((self_2818585954.document.currentTree == null)) {
    break BeforeRet;
    }
    
    var node_2818585959 = descendantForRange_2885681405(self_2818585954.document.currentTree.rootNode, selection_2818585955);
    Label1: {
        Label2: while (true) {
        if (!(HEX3DHEX3D_2449473602(getRange_2885681336(node_2818585959), selection_2818585955) && !((node_2818585959 == self_2818585954.document.currentTree.rootNode)))) break Label2;
          node_2818585959 = node_2818585959.parent;
        }
    };
    selectionHEX3D_2818572811(self_2818585954, getRange_2885681336(node_2818585959));
  };

  
}

function selectParentTsJsWrapper_2818585950(self_2818585996, selection_2818585997) {
    selectParentTs_2818585953(self_2818585996, selection_2818585997);

  
}
editor_text_prototype.selectParentTs = function(selection_ /* : Selection */) { return (selectParentTsJsWrapper_2818585950(this, selection_));};

function selectParentCurrentTs_2818586029(self_2818586030) {
    selectParentTs_2818585953(self_2818586030, selection_2818572805(self_2818586030));

  
}

function selectParentCurrentTsJsWrapper_2818586026(self_2818586058) {
    selectParentCurrentTs_2818586029(self_2818586058);

  
}
editor_text_prototype.selectParentCurrentTs = function() { return (selectParentCurrentTsJsWrapper_2818586026(this));};

function newSeq_2449473685(len_2449473687) {
  var result_2449473688 = [];

    result_2449473688 = new Array(len_2449473687); for (var i = 0 ; i < len_2449473687 ; ++i) { result_2449473688[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }
  return result_2449473688;

}

function HEX2A_1023410184(x_1023410185, order_1023410186) {
  var result_1023410187 = 0;

    var y_1023410192 = subInt(order_1023410186, 1);
    result_1023410187 = subInt((x_1023410185 ^ y_1023410192), y_1023410192);

  return result_1023410187;

}

function mergeAlt_2449473714(a_2449473716, b_2449473717, lo_2449473718, m_2449473719, hi_2449473720, cmp_2449473723, order_2449473724) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2449473723(a_2449473716[chckIndx(m_2449473719, 0, (a_2449473716).length - 1)], a_2449473716[chckIndx(addInt(m_2449473719, 1), 0, (a_2449473716).length - 1)]), order_2449473724) <= 0)) {
    break BeforeRet;
    }
    
    var j_2449473725 = lo_2449473718;
    if (!((j_2449473725 <= m_2449473719))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2449473731 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2449473725 <= m_2449473719)) break Label2;
          b_2449473717[chckIndx(bb_2449473731, 0, (b_2449473717).length - 1)] = nimCopy(b_2449473717[chckIndx(bb_2449473731, 0, (b_2449473717).length - 1)], a_2449473716[chckIndx(j_2449473725, 0, (a_2449473716).length - 1)], NTI2449473548);
          bb_2449473731 = addInt(bb_2449473731, 1);
          j_2449473725 = addInt(j_2449473725, 1);
        }
    };
    var i_2449473742 = 0;
    var k_2449473743 = lo_2449473718;
    Label3: {
        Label4: while (true) {
        if (!((k_2449473743 < j_2449473725) && (j_2449473725 <= hi_2449473720))) break Label4;
          if ((HEX2A_1023410184(cmp_2449473723(b_2449473717[chckIndx(i_2449473742, 0, (b_2449473717).length - 1)], a_2449473716[chckIndx(j_2449473725, 0, (a_2449473716).length - 1)]), order_2449473724) <= 0)) {
          a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)] = nimCopy(a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)], b_2449473717[chckIndx(i_2449473742, 0, (b_2449473717).length - 1)], NTI2449473548);
          i_2449473742 = addInt(i_2449473742, 1);
          }
          else {
            a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)] = nimCopy(a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)], a_2449473716[chckIndx(j_2449473725, 0, (a_2449473716).length - 1)], NTI2449473548);
            j_2449473725 = addInt(j_2449473725, 1);
          }
          
          k_2449473743 = addInt(k_2449473743, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2449473743 < j_2449473725)) break Label6;
          a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)] = nimCopy(a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)], b_2449473717[chckIndx(i_2449473742, 0, (b_2449473717).length - 1)], NTI2449473548);
          k_2449473743 = addInt(k_2449473743, 1);
          i_2449473742 = addInt(i_2449473742, 1);
        }
    };
  };

  
}

function sort_2449473673(a_2449473675, cmp_2449473678, order_2449473679) {
    var n_2449473684 = (a_2449473675).length;
    var b_2449473711 = newSeq_2449473685(chckRange(divInt(n_2449473684, 2), 0, 2147483647));
    var s_2449473712 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2449473712 < n_2449473684)) break Label2;
          var m_2449473713 = subInt(subInt(n_2449473684, 1), s_2449473712);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2449473713)) break Label4;
                mergeAlt_2449473714(a_2449473675, b_2449473711, nimMax(addInt(subInt(m_2449473713, s_2449473712), 1), 0), m_2449473713, addInt(m_2449473713, s_2449473712), cmp_2449473678, order_2449473679);
                m_2449473713 = subInt(m_2449473713, mulInt(s_2449473712, 2));
              }
          };
          s_2449473712 = mulInt(s_2449473712, 2);
        }
    };

  
}

function sorted_2449473815(a_2449473817, cmp_2449473820, order_2449473821) {
  var result_2449473822 = [];

    result_2449473822 = nimCopy(null, newSeq_2449473685(chckRange((a_2449473817).length, 0, 2147483647)), NTI2449473596);
    Label1: {
      var i_2449473836 = 0;
      var colontmp__2818586123 = 0;
      colontmp__2818586123 = (a_2449473817).length - 1;
      var res_2818586124 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586124 <= colontmp__2818586123)) break Label3;
            i_2449473836 = res_2818586124;
            result_2449473822[chckIndx(i_2449473836, 0, (result_2449473822).length - 1)] = nimCopy(result_2449473822[chckIndx(i_2449473836, 0, (result_2449473822).length - 1)], a_2449473817[chckIndx(i_2449473836, 0, (a_2449473817).length - 1)], NTI2449473548);
            res_2818586124 = addInt(res_2818586124, 1);
          }
      };
    };
    sort_2449473673(result_2449473822, cmp_2449473820, order_2449473821);

  return result_2449473822;

}

function HEX3C_2449473645(x_2449473647, y_2449473648) {
  var result_2449473649 = false;

  BeforeRet: {
    var c_2449473659 = cmp_33557727(x_2449473647["Field0"], y_2449473648["Field0"]);
    if ((c_2449473659 < 0)) {
    result_2449473649 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473659)) {
    result_2449473649 = false;
    break BeforeRet;
    }
    
    var c_2449473664 = cmp_33557727(x_2449473647["Field1"], y_2449473648["Field1"]);
    if ((c_2449473664 < 0)) {
    result_2449473649 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473664)) {
    result_2449473649 = false;
    break BeforeRet;
    }
    
    result_2449473649 = false;
    break BeforeRet;
  };

  return result_2449473649;

}

function cmp_2449473636(x_2449473638, y_2449473639) {
  var result_2449473640 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2449473612(x_2449473638, y_2449473639)) {
    result_2449473640 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2449473645(x_2449473638, y_2449473639)) {
    result_2449473640 = -1;
    break BeforeRet;
    }
    
    result_2449473640 = 1;
    break BeforeRet;
  };

  return result_2449473640;

}

function HEX3C_2449473626(x_2449473628, y_2449473629) {
  var result_2449473630 = false;

  BeforeRet: {
    var c_2449473665 = cmp_2449473636(x_2449473628["Field0"], y_2449473629["Field0"]);
    if ((c_2449473665 < 0)) {
    result_2449473630 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473665)) {
    result_2449473630 = false;
    break BeforeRet;
    }
    
    var c_2449473670 = cmp_2449473636(x_2449473628["Field1"], y_2449473629["Field1"]);
    if ((c_2449473670 < 0)) {
    result_2449473630 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473670)) {
    result_2449473630 = false;
    break BeforeRet;
    }
    
    result_2449473630 = false;
    break BeforeRet;
  };

  return result_2449473630;

}

function cmp_2449473597(x_2449473599, y_2449473600) {
  var result_2449473601 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2449473602(x_2449473599, y_2449473600)) {
    result_2449473601 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2449473626(x_2449473599, y_2449473600)) {
    result_2449473601 = -1;
    break BeforeRet;
    }
    
    result_2449473601 = 1;
    break BeforeRet;
  };

  return result_2449473601;

}

function sorted_2449473804(a_2449473806, order_2449473807) {
  var result_2449473808 = [];

    result_2449473808 = nimCopy(null, sorted_2449473815(a_2449473806, cmp_2449473597, order_2449473807), NTI2449473676);

  return result_2449473808;

}

function normalized_2449473801(self_2449473802) {
  var result_2449473803 = [];

  BeforeRet: {
    result_2449473803 = nimCopy(null, sorted_2449473804(self_2449473802, 1), NTI2449473667);
    break BeforeRet;
  };

  return result_2449473803;

}

function HEX3DHEX3D_2818573086(x_2818573088, y_2818573089) {
  var result_2818573090 = false;

  BeforeRet: {
    var sameObject_2818573097 = false;
    sameObject_2818573097 = x_2818573088 === y_2818573089
    if (sameObject_2818573097) {
    result_2818573090 = true;
    break BeforeRet;
    }
    
    if (!(((x_2818573088).length == (y_2818573089).length))) {
    result_2818573090 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2818573111 = 0;
      var colontmp__2818586132 = 0;
      colontmp__2818586132 = subInt((x_2818573088).length, 1);
      var res_2818586133 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586133 <= colontmp__2818586132)) break Label3;
            i_2818573111 = res_2818586133;
            if (!(HEX3DHEX3D_2449473602(x_2818573088[chckIndx(i_2818573111, 0, (x_2818573088).length - 1)], y_2818573089[chckIndx(i_2818573111, 0, (y_2818573089).length - 1)]))) {
            result_2818573090 = false;
            break BeforeRet;
            }
            
            res_2818586133 = addInt(res_2818586133, 1);
          }
      };
    };
    result_2818573090 = true;
    break BeforeRet;
  };

  return result_2818573090;

}

function clampAndMergeSelections_2818572798(self_2818572799, selections_2818572800) {
  var result_2818572801 = [];

    result_2818572801 = nimCopy(null, clampAndMergeSelections_2818572720(self_2818572799.document, selections_2818572800), NTI2449473556);

  return result_2818572801;

}

function selectionsHEX3D_2818573083(self_2818573084, selections_2818573085) {
  BeforeRet: {
    if (HEX3DHEX3D_2818573086(self_2818573084.selectionsInternal, selections_2818573085)) {
    break BeforeRet;
    }
    
    addLast_2818572826(self_2818573084.selectionHistory, self_2818573084.selectionsInternal);
    if ((100 < len_2818572976(self_2818573084.selectionHistory))) {
    var _ = popFirst_2818573048(self_2818573084.selectionHistory);
    }
    
    self_2818573084.selectionsInternal = nimCopy(null, clampAndMergeSelections_2818572798(self_2818573084, selections_2818573085), NTI2449473556);
    if (((self_2818573084.selectionsInternal).length == 0)) {
    self_2818573084.selectionsInternal = nimCopy(null, [nimCopy(null, toSelection_2449474032({Field0: 0, Field1: 0}), NTI2449473548)], NTI2818572821);
    }
    
    markDirty_2415919143(self_2818573084);
  };

  
}

function edit_2818580070(self_2818580071, selections_2818580072, oldSelection_2818580073, text_2818580074, notify_2818580075) {
    
function HEX3Aanonymous_2818580077(s_2818580085) {
      var result_2818580088 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818580088 = nimCopy(result_2818580088, normalized_2449473905(s_2818580085), NTI2449473548);

      return result_2818580088;

    }

  var result_2818580076 = [];

    var selections_2818580096 = map_2818572735(selections_2818580072, HEX3Aanonymous_2818580077);
    result_2818580076 = nimCopy(null, delete_2818579356(self_2818580071, selections_2818580096, oldSelection_2818580073, false, true), NTI2818576075);
    result_2818580076 = nimCopy(null, insert_2818579853(self_2818580071, result_2818580076, oldSelection_2818580073, text_2818580074, true, true, true), NTI2818576430);

  return result_2818580076;

}

function insertText_2818586075(self_2818586076, text_2818586077) {
  BeforeRet: {
    if ((self_2818586076.document.singleLine && eqStrings(text_2818586077, [10]))) {
    break BeforeRet;
    }
    
    var selections_2818586078 = normalized_2449473801(selections_2818572802(self_2818586076));
    selectionsHEX3D_2818573083(self_2818586076, edit_2818580070(self_2818586076.document, selections_2818572802(self_2818586076), selections_2818572802(self_2818586076), text_2818586077, true));
    updateTargetColumn_2818584579(self_2818586076, 3);
    if ((!(self_2818586076.disableCompletions) && (eqStrings(text_2818586077, [46]) || eqStrings(text_2818586077, [44])))) {
    self_2818586076.showCompletions = true;
    var _ = getCompletionsAsync_2818586067(self_2818586076);
    }
    else {
    if (self_2818586076.showCompletions) {
    var _ = getCompletionsAsync_2818586067(self_2818586076);
    }
    }
  };

  
}

function insertTextJsWrapper_2818586072(self_2818586107, text_2818586108) {
    insertText_2818586075(self_2818586107, text_2818586108);

  
}
editor_text_prototype.insertText = function(text_ /* : string */) { return (insertTextJsWrapper_2818586072(this, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function none_2818580165() {
  var result_2818580172 = ({val: [], has: false});

  return result_2818580172;

}

function pop_2818580176(s_2818580178, s_2818580178_Idx) {
  var result_2818580179 = null;

    var L_2818580183 = subInt((s_2818580178[s_2818580178_Idx]).length, 1);
    result_2818580179 = s_2818580178[s_2818580178_Idx][chckIndx(L_2818580183, 0, (s_2818580178[s_2818580178_Idx]).length - 1)];
    if (s_2818580178[s_2818580178_Idx].length < chckRange(L_2818580183, 0, 2147483647)) { for (var i = s_2818580178[s_2818580178_Idx].length ; i < chckRange(L_2818580183, 0, 2147483647) ; ++i) s_2818580178[s_2818580178_Idx].push(null); }
               else { s_2818580178[s_2818580178_Idx].length = chckRange(L_2818580183, 0, 2147483647); };

  return result_2818580179;

}

function some_2818580189(val_2818580191) {
  var result_2818580192 = ({val: [], has: false});

    result_2818580192.has = true;
    result_2818580192.val = nimCopy(null, val_2818580191, NTI2818576615);

  return result_2818580192;

}

function doUndo_2818580106(document_2818580107, op_2818580108, oldSelection_2818580109, useOldSelection_2818580110, redoOps_2818580111, redoOps_2818580111_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary8;
              var Temporary11;
              var Temporary12;
              var Temporary13;

  var result_2818580112 = [];

    switch (op_2818580108.kind) {
    case 0:
      var Temporary1 = op_2818580108;
      if (ConstSet30[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818580113 = contentString_2818574091(document_2818580107, Temporary1.selection);
      var Temporary2 = op_2818580108;
      if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818580112 = nimCopy(null, delete_2818579356(document_2818580107, [nimCopy(null, Temporary2.selection, NTI2449473548)], op_2818580108.oldSelection, true, false), NTI2818576075);
      var Temporary3 = op_2818580108;
      if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      redoOps_2818580111[redoOps_2818580111_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2449473546), text: nimCopy(null, text_2818580113, NTI33554449), oldSelection: HEX40_2818579363(oldSelection_2818580109), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818580108;
      if (ConstSet33[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818580108;
      if (ConstSet34[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var selections_2818580121 = insert_2818579853(document_2818580107, [nimCopy(null, toSelection_2449474032(Temporary4.cursor), NTI2449473548)], op_2818580108.oldSelection, Temporary5.text, true, false, false);
      result_2818580112 = nimCopy(null, selections_2818580121, NTI2818576430);
      var Temporary6 = op_2818580108;
      if (ConstSet35[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      redoOps_2818580111[redoOps_2818580111_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary6.cursor, NTI2449473546), Field1: nimCopy(null, selections_2818580121[chckIndx(0, 0, (selections_2818580121).length - 1)].Field1, NTI2449473546)}, NTI2449473548), oldSelection: HEX40_2818579363(oldSelection_2818580109), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818580112 = nimCopy(null, op_2818580108.oldSelection, NTI2818572295);
      var redoOp_2818580132 = {kind: 2, oldSelection: HEX40_2818579363(oldSelection_2818580109), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label7: {
        var i_2818580141 = 0;
        var colontmp__2818586227 = 0;
        var Temporary8 = op_2818580108;
        if (ConstSet36[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
        colontmp__2818586227 = (Temporary8.children).length - 1;
        var res_2818586228 = colontmp__2818586227;
        Label9: {
            Label10: while (true) {
            if (!(0 <= res_2818586228)) break Label10;
              i_2818580141 = res_2818586228;
              var Temporary11 = op_2818580108;
              if (ConstSet37[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2818572291)); }
              var Temporary13 = redoOp_2818580132;
              if (ConstSet38[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2818572291)); }
              var _ = doUndo_2818580106(document_2818580107, (Temporary12 = Temporary11.children, Temporary12)[chckIndx(i_2818580141, 0, (Temporary12).length - 1)], oldSelection_2818580109, useOldSelection_2818580110, Temporary13, "children");
              res_2818586228 = subInt(res_2818586228, 1);
            }
        };
      };
      redoOps_2818580111[redoOps_2818580111_Idx].push(redoOp_2818580132);;
      break;
    }
    if (useOldSelection_2818580110) {
    result_2818580112 = nimCopy(null, op_2818580108.oldSelection, NTI2818572295);
    }
    

  return result_2818580112;

}

function undo_2818580155(document_2818580156, oldSelection_2818580157, useOldSelection_2818580158) {
  var result_2818580164 = ({val: [], has: false});

  BeforeRet: {
    result_2818580164 = nimCopy(result_2818580164, none_2818580165(), NTI2818576690);
    if (((document_2818580156.undoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818580188 = pop_2818580176(document_2818580156, "undoOps");
    result_2818580164 = nimCopy(result_2818580164, some_2818580189(doUndo_2818580106(document_2818580156, op_2818580188, oldSelection_2818580157, useOldSelection_2818580158, document_2818580156, "redoOps")), NTI2818576690);
    break BeforeRet;
  };

  return result_2818580164;

}

function isSome_2818586149(self_2818586151) {
  var result_2818586152 = false;

    result_2818586152 = self_2818586151.has;

  return result_2818586152;

}

function isNone_2818586174(self_2818586176) {
  var result_2818586177 = false;

    result_2818586177 = !(self_2818586176.has);

  return result_2818586177;

}

function get_2818586166(self_2818586168) {
  var result_2818586169 = [];

    if (isNone_2818586174(self_2818586168)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818586169 = self_2818586168["val"];

  return result_2818586169;

}

function undo_2818586140(self_2818586141) {
      var Temporary1;

      var oHEX60gensym362_2818586144 = undo_2818580155(self_2818586141.document, selections_2818572802(self_2818586141), true);
      if (!isSome_2818586149(oHEX60gensym362_2818586144)) Temporary1 = false; else {        var selections_2818586189 = nimCopy(null, get_2818586166(oHEX60gensym362_2818586144), NTI2818576685);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573083(self_2818586141, selections_2818586189);
    }
    

  
}

function undoJsWrapper_2818586137(self_2818586217) {
    undo_2818586140(self_2818586217);

  
}
editor_text_prototype.undo = function() { return (undoJsWrapper_2818586137(this));};

function doRedo_2818580203(document_2818580204, op_2818580205, oldSelection_2818580206, useOldSelection_2818580207, undoOps_2818580208, undoOps_2818580208_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary9;
              var Temporary12;
              var Temporary13;
              var Temporary14;

  var result_2818580209 = [];

    switch (op_2818580205.kind) {
    case 0:
      var Temporary1 = op_2818580205;
      if (ConstSet39[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818580210 = contentString_2818574091(document_2818580204, Temporary1.selection);
      var Temporary2 = op_2818580205;
      if (ConstSet40[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818580209 = nimCopy(null, delete_2818579356(document_2818580204, [nimCopy(null, Temporary2.selection, NTI2449473548)], op_2818580205.oldSelection, true, false), NTI2818576075);
      var Temporary3 = op_2818580205;
      if (ConstSet41[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      undoOps_2818580208[undoOps_2818580208_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2449473546), text: nimCopy(null, text_2818580210, NTI33554449), oldSelection: HEX40_2818579363(oldSelection_2818580206), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818580205;
      if (ConstSet42[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818580205;
      if (ConstSet43[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var Temporary6 = op_2818580205;
      if (ConstSet44[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      result_2818580209 = nimCopy(null, insert_2818579853(document_2818580204, [nimCopy(null, toSelection_2449474032(Temporary4.cursor), NTI2449473548)], [nimCopy(null, toSelection_2449474032(Temporary5.cursor), NTI2449473548)], Temporary6.text, true, false, false), NTI2818576430);
      var Temporary7 = op_2818580205;
      if (ConstSet45[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2818572291)); }
      undoOps_2818580208[undoOps_2818580208_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary7.cursor, NTI2449473546), Field1: nimCopy(null, result_2818580209[chckIndx(0, 0, (result_2818580209).length - 1)].Field1, NTI2449473546)}, NTI2449473548), oldSelection: HEX40_2818579363(oldSelection_2818580206), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818580209 = nimCopy(null, op_2818580205.oldSelection, NTI2818572295);
      var undoOp_2818580228 = {kind: 2, oldSelection: HEX40_2818579363(oldSelection_2818580206), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label8: {
        var i_2818580237 = 0;
        var colontmp__2818586300 = 0;
        var Temporary9 = op_2818580205;
        if (ConstSet46[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2818572291)); }
        colontmp__2818586300 = (Temporary9.children).length - 1;
        var res_2818586301 = colontmp__2818586300;
        Label10: {
            Label11: while (true) {
            if (!(0 <= res_2818586301)) break Label11;
              i_2818580237 = res_2818586301;
              var Temporary12 = op_2818580205;
              if (ConstSet47[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2818572291)); }
              var Temporary14 = undoOp_2818580228;
              if (ConstSet48[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI2818572291)); }
              var _ = doRedo_2818580203(document_2818580204, (Temporary13 = Temporary12.children, Temporary13)[chckIndx(i_2818580237, 0, (Temporary13).length - 1)], oldSelection_2818580206, useOldSelection_2818580207, Temporary14, "children");
              res_2818586301 = subInt(res_2818586301, 1);
            }
        };
      };
      undoOps_2818580208[undoOps_2818580208_Idx].push(undoOp_2818580228);;
      break;
    }
    if (useOldSelection_2818580207) {
    result_2818580209 = nimCopy(null, op_2818580205.oldSelection, NTI2818572295);
    }
    

  return result_2818580209;

}

function redo_2818580242(document_2818580243, oldSelection_2818580244, useOldSelection_2818580245) {
  var result_2818580247 = ({val: [], has: false});

  BeforeRet: {
    result_2818580247 = nimCopy(result_2818580247, none_2818580165(), NTI2818576690);
    if (((document_2818580243.redoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818580261 = pop_2818580176(document_2818580243, "redoOps");
    result_2818580247 = nimCopy(result_2818580247, some_2818580189(doRedo_2818580203(document_2818580243, op_2818580261, oldSelection_2818580244, useOldSelection_2818580245, document_2818580243, "undoOps")), NTI2818576690);
    break BeforeRet;
  };

  return result_2818580247;

}

function redo_2818586235(self_2818586236) {
      var Temporary1;

      var oHEX60gensym371_2818586239 = redo_2818580242(self_2818586236.document, selections_2818572802(self_2818586236), true);
      if (!isSome_2818586149(oHEX60gensym371_2818586239)) Temporary1 = false; else {        var selections_2818586262 = nimCopy(null, get_2818586166(oHEX60gensym371_2818586239), NTI2818576685);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573083(self_2818586236, selections_2818586262);
    }
    

  
}

function redoJsWrapper_2818586232(self_2818586290) {
    redo_2818586235(self_2818586290);

  
}
editor_text_prototype.redo = function() { return (redoJsWrapper_2818586232(this));};

function HEX2BHEX3D_855640304(x_855640306, x_855640306_Idx, y_855640307) {
    x_855640306[x_855640306_Idx] = (x_855640306[x_855640306_Idx] + y_855640307);

  
}

function scrollText_2818586308(self_2818586309, amount_2818586310) {
  BeforeRet: {
    if (self_2818586309.disableScrolling) {
    break BeforeRet;
    }
    
    HEX2BHEX3D_855640304(self_2818586309, "scrollOffset", amount_2818586310);
    markDirty_2415919143(self_2818586309);
  };

  
}

function scrollTextJsWrapper_2818586305(self_2818586343, amount_2818586344) {
    scrollText_2818586308(self_2818586343, amount_2818586344);

  
}
editor_text_prototype.scrollText = function(amount_ /* : float32 */) { return (scrollTextJsWrapper_2818586305(this, amount_));};

function clampCursor_2818572708(self_2818572709, cursor_2818572710) {
  var result_2818572711 = {Field0: 0, Field1: 0};

    result_2818572711 = nimCopy(result_2818572711, clampCursor_2818572687(self_2818572709.document, cursor_2818572710), NTI2449473546);

  return result_2818572711;

}

function doMoveCursorColumn_2818583517(self_2818583518, cursor_2818583519, offset_2818583520) {
  var result_2818583521 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818583522 = nimCopy(null, cursor_2818583519, NTI2449473546);
    var column_2818583523 = addInt(cursor_2818583522.Field1, offset_2818583520);
    if ((column_2818583523 < 0)) {
    if ((0 < cursor_2818583522.Field0)) {
    cursor_2818583522.Field0 = subInt(cursor_2818583522.Field0, 1);
    cursor_2818583522.Field1 = lineLength_2818572680(self_2818583518, cursor_2818583522.Field0);
    }
    else {
      cursor_2818583522.Field1 = 0;
    }
    
    }
    else {
    if ((lineLength_2818572680(self_2818583518, cursor_2818583522.Field0) < column_2818583523)) {
    if ((cursor_2818583522.Field0 < subInt((self_2818583518.document.lines).length, 1))) {
    cursor_2818583522.Field0 = addInt(cursor_2818583522.Field0, 1);
    cursor_2818583522.Field1 = 0;
    }
    else {
      cursor_2818583522.Field1 = lineLength_2818572680(self_2818583518, cursor_2818583522.Field0);
    }
    
    }
    else {
      cursor_2818583522.Field1 = column_2818583523;
    }
    }
    result_2818583521 = nimCopy(result_2818583521, clampCursor_2818572708(self_2818583518, cursor_2818583522), NTI2449473546);
    break BeforeRet;
  };

  return result_2818583521;

}

function HEX26_2818586431(x_2818586433, y_2818586434) {
  var result_2818586435 = [];

    result_2818586435 = new Array(chckRange(addInt((x_2818586433).length, (y_2818586434).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2818586433).length, (y_2818586434).length), 0, 2147483647) ; ++i) { result_2818586435[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818586453 = 0;
      var colontmp__2818586502 = 0;
      colontmp__2818586502 = subInt((x_2818586433).length, 1);
      var res_2818586503 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586503 <= colontmp__2818586502)) break Label3;
            i_2818586453 = res_2818586503;
            result_2818586435[chckIndx(i_2818586453, 0, (result_2818586435).length - 1)] = nimCopy(result_2818586435[chckIndx(i_2818586453, 0, (result_2818586435).length - 1)], x_2818586433[chckIndx(i_2818586453, 0, (x_2818586433).length - 1)], NTI2449473548);
            res_2818586503 = addInt(res_2818586503, 1);
          }
      };
    };
    Label4: {
      var i_2818586461 = 0;
      var colontmp__2818586506 = 0;
      colontmp__2818586506 = subInt((y_2818586434).length, 1);
      var res_2818586507 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2818586507 <= colontmp__2818586506)) break Label6;
            i_2818586461 = res_2818586507;
            result_2818586435[chckIndx(addInt(i_2818586461, (x_2818586433).length), 0, (result_2818586435).length - 1)] = nimCopy(result_2818586435[chckIndx(addInt(i_2818586461, (x_2818586433).length), 0, (result_2818586435).length - 1)], y_2818586434[chckIndx(i_2818586461, 0, (y_2818586434).length - 1)], NTI2449473548);
            res_2818586507 = addInt(res_2818586507, 1);
          }
      };
    };

  return result_2818586435;

}

function duplicateLastSelection_2818586421(self_2818586422) {
    var Temporary1;

    var newSelection_2818586426 = toSelection_2449474032(doMoveCursorColumn_2818583517(self_2818586422, (Temporary1 = selections_2818572802(self_2818586422), Temporary1)[chckIndx((selections_2818572802(self_2818586422)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    selectionsHEX3D_2818573083(self_2818586422, HEX26_2818586431(selections_2818572802(self_2818586422), [nimCopy(null, newSelection_2818586426, NTI2449473548)]));

  
}

function duplicateLastSelectionJsWrapper_2818586418(self_2818586492) {
    duplicateLastSelection_2818586421(self_2818586492);

  
}
editor_text_prototype.duplicateLastSelection = function() { return (duplicateLastSelectionJsWrapper_2818586418(this));};

function doMoveCursorLine_2818583527(self_2818583528, cursor_2818583529, offset_2818583530) {
  var result_2818583531 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818583532 = nimCopy(null, cursor_2818583529, NTI2449473546);
    var line_2818583533 = addInt(cursor_2818583532.Field0, offset_2818583530);
    if ((line_2818583533 < 0)) {
    var colontmp__2818586564 = 0;
    var colontmp__2818586565 = cursor_2818583532.Field1;
    cursor_2818583532 = nimCopy(cursor_2818583532, {Field0: colontmp__2818586564, Field1: colontmp__2818586565}, NTI2449473546);
    }
    else {
    if (((self_2818583528.document.lines).length <= line_2818583533)) {
    var colontmp__2818586566 = subInt((self_2818583528.document.lines).length, 1);
    var colontmp__2818586567 = cursor_2818583532.Field1;
    cursor_2818583532 = nimCopy(cursor_2818583532, {Field0: colontmp__2818586566, Field1: colontmp__2818586567}, NTI2449473546);
    }
    else {
      cursor_2818583532.Field0 = line_2818583533;
      cursor_2818583532.Field1 = self_2818583528.targetColumn;
    }
    }
    result_2818583531 = nimCopy(result_2818583531, clampCursor_2818572708(self_2818583528, cursor_2818583532), NTI2449473546);
    break BeforeRet;
  };

  return result_2818583531;

}

function addCursorBelow_2818586514(self_2818586515) {
    var Temporary1;

    var newCursor_2818586519 = toSelection_2449474032(doMoveCursorLine_2818583527(self_2818586515, (Temporary1 = selections_2818572802(self_2818586515), Temporary1)[chckIndx((selections_2818572802(self_2818586515)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    if (!(contains_2449474009(selections_2818572802(self_2818586515), newCursor_2818586519))) {
    selectionsHEX3D_2818573083(self_2818586515, HEX26_2818586431(selections_2818572802(self_2818586515), [nimCopy(null, newCursor_2818586519, NTI2449473548)]));
    }
    

  
}

function addCursorBelowJsWrapper_2818586511(self_2818586555) {
    addCursorBelow_2818586514(self_2818586555);

  
}
editor_text_prototype.addCursorBelow = function() { return (addCursorBelowJsWrapper_2818586511(this));};

function addCursorAbove_2818586573(self_2818586574) {
    var Temporary1;

    var newCursor_2818586578 = toSelection_2449474032(doMoveCursorLine_2818583527(self_2818586574, (Temporary1 = selections_2818572802(self_2818586574), Temporary1)[chckIndx((selections_2818572802(self_2818586574)).length - 1, 0, (Temporary1).length - 1)].Field1, -1));
    if (!(contains_2449474009(selections_2818572802(self_2818586574), newCursor_2818586578))) {
    selectionsHEX3D_2818573083(self_2818586574, HEX26_2818586431(selections_2818572802(self_2818586574), [nimCopy(null, newCursor_2818586578, NTI2449473548)]));
    }
    

  
}

function addCursorAboveJsWrapper_2818586570(self_2818586614) {
    addCursorAbove_2818586573(self_2818586614);

  
}
editor_text_prototype.addCursorAbove = function() { return (addCursorAboveJsWrapper_2818586570(this));};

function hash_1325400236(x_1325400238) {
  var result_1325400239 = 0;

    result_1325400239 = hashWangYi1_1325400244(x_1325400238);

  return result_1325400239;

}

function rawGet_2818581106(t_2818581109, key_2818581110, hc_2818581111, hc_2818581111_Idx) {
  var result_2818581112 = 0;

  BeforeRet: {
    hc_2818581111[hc_2818581111_Idx] = hash_1325400236(key_2818581110);
    if ((hc_2818581111[hc_2818581111_Idx] == 0)) {
    hc_2818581111[hc_2818581111_Idx] = 314159265;
    }
    
    if (((t_2818581109.data).length == 0)) {
    result_2818581112 = -1;
    break BeforeRet;
    }
    
    var h_2818581182 = (hc_2818581111[hc_2818581111_Idx] & (t_2818581109.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818581109.data[chckIndx(h_2818581182, 0, (t_2818581109.data).length - 1)].Field0)) break Label2;
          if (((t_2818581109.data[chckIndx(h_2818581182, 0, (t_2818581109.data).length - 1)].Field0 == hc_2818581111[hc_2818581111_Idx]) && (t_2818581109.data[chckIndx(h_2818581182, 0, (t_2818581109.data).length - 1)].Field1 == key_2818581110))) {
          result_2818581112 = h_2818581182;
          break BeforeRet;
          }
          
          h_2818581182 = nextTry_1308622883(h_2818581182, (t_2818581109.data).length - 1);
        }
    };
    result_2818581112 = subInt(-1, h_2818581182);
  };

  return result_2818581112;

}

function hasKey_2818586704(t_2818586707, key_2818586708) {
  var result_2818586709 = false;

    var hc_2818586710 = [0];
    result_2818586709 = (0 <= rawGet_2818581106(t_2818586707, key_2818586708, hc_2818586710, 0));

  return result_2818586709;

}

function contains_2818586698(t_2818586701, key_2818586702) {
  var result_2818586703 = false;

  BeforeRet: {
    result_2818586703 = hasKey_2818586704(t_2818586701, key_2818586702);
    break BeforeRet;
  };

  return result_2818586703;

}

function raiseKeyError_1291850850(key_1291850852) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1291850852) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2818586794(t_2818586797, key_2818586798) {
  var result_2818586799 = null;
  var result_2818586799_Idx = 0;

    var hcHEX60gensym22_2818586800 = [0];
    var indexHEX60gensym22_2818586807 = rawGet_2818581106(t_2818586797, key_2818586798, hcHEX60gensym22_2818586800, 0);
    if ((0 <= indexHEX60gensym22_2818586807)) {
    result_2818586799 = t_2818586797.data[chckIndx(indexHEX60gensym22_2818586807, 0, (t_2818586797.data).length - 1)]; result_2818586799_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_2818586798);
    }
    

  return [result_2818586799, result_2818586799_Idx];

}

function HEX3C_2449473866(a_2449473867, b_2449473868) {
  var result_2449473869 = false;

  BeforeRet: {
    if ((a_2449473867.Field0 < b_2449473868.Field0)) {
    result_2449473869 = true;
    break BeforeRet;
    }
    else {
    if (((a_2449473867.Field0 == b_2449473868.Field0) && (a_2449473867.Field1 < b_2449473868.Field1))) {
    result_2449473869 = true;
    break BeforeRet;
    }
    else {
      result_2449473869 = false;
      break BeforeRet;
    }
    }
  };

  return result_2449473869;

}

function getPrevFindResult_2818583550(self_2818583551, cursor_2818583552, offset_2818583553) {
            var Temporary4;

  var result_2818586632 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818586633 = 0;
    Label1: {
      var line_2818586639 = 0;
      var res_2818586964 = cursor_2818583552.Field0;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818586964)) break Label3;
            line_2818586639 = res_2818586964;
            if (contains_2818586698(self_2818583551.searchResults, line_2818586639)) {
            var selections_2818586888 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2818586794(self_2818583551.searchResults, line_2818586639), Temporary4)[0][Temporary4[1]], NTI2818572535);
            Label5: {
              var k_2818586897 = 0;
              var colontmp__2818586961 = 0;
              colontmp__2818586961 = (selections_2818586888).length - 1;
              var res_2818586962 = colontmp__2818586961;
              Label6: {
                  Label7: while (true) {
                  if (!(0 <= res_2818586962)) break Label7;
                    k_2818586897 = res_2818586962;
                    if (HEX3C_2449473866(selections_2818586888[chckIndx(k_2818586897, 0, (selections_2818586888).length - 1)].Field1, cursor_2818583552)) {
                    if ((i_2818586633 == offset_2818583553)) {
                    result_2818586632 = nimCopy(result_2818586632, selections_2818586888[chckIndx(k_2818586897, 0, (selections_2818586888).length - 1)], NTI2449473548);
                    break BeforeRet;
                    }
                    
                    i_2818586633 = addInt(i_2818586633, 1);
                    }
                    
                    res_2818586962 = subInt(res_2818586962, 1);
                  }
              };
            };
            }
            
            res_2818586964 = subInt(res_2818586964, 1);
          }
      };
    };
    result_2818586632 = nimCopy(result_2818586632, toSelection_2449474032(cursor_2818583552), NTI2449473548);
    break BeforeRet;
  };

  return result_2818586632;

}

function getPrevFindResultJsWrapper_2818586625(self_2818586933, cursor_2818586934, offset_2818586935) {
  var result_2818586936 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818586936 = nimCopy(result_2818586936, getPrevFindResult_2818583550(self_2818586933, cursor_2818586934, offset_2818586935), NTI2449473548);

  return result_2818586936;

}
editor_text_prototype.getPrevFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getPrevFindResultJsWrapper_2818586625(this, cursor_, offset_));};

function getNextFindResult_2818583554(self_2818583555, cursor_2818583556, offset_2818583557) {
              var Temporary5;

  var result_2818586976 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818586977 = 0;
    Label1: {
      var line_2818586985 = 0;
      var colontmp__2818587203 = 0;
      colontmp__2818587203 = (self_2818583555.document.lines).length - 1;
      var res_2818587204 = cursor_2818583556.Field0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818587204 <= colontmp__2818587203)) break Label3;
            line_2818586985 = res_2818587204;
            if (contains_2818586698(self_2818583555.searchResults, line_2818586985)) {
            Label4: {
              var selection_2818587134 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
              var colontmp__2818587198 = [];
              colontmp__2818587198 = (Temporary5 = HEX5BHEX5D_2818586794(self_2818583555.searchResults, line_2818586985), Temporary5)[0][Temporary5[1]];
              var i_2818587200 = 0;
              var L_2818587201 = (colontmp__2818587198).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_2818587200 < L_2818587201)) break Label7;
                    selection_2818587134 = colontmp__2818587198[chckIndx(i_2818587200, 0, (colontmp__2818587198).length - 1)];
                    if (HEX3C_2449473866(cursor_2818583556, selection_2818587134.Field0)) {
                    if ((i_2818586977 == offset_2818583557)) {
                    result_2818586976 = nimCopy(result_2818586976, selection_2818587134, NTI2449473548);
                    break BeforeRet;
                    }
                    
                    i_2818586977 = addInt(i_2818586977, 1);
                    }
                    
                    i_2818587200 = addInt(i_2818587200, 1);
                    if (!(((colontmp__2818587198).length == L_2818587201))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            
            res_2818587204 = addInt(res_2818587204, 1);
          }
      };
    };
    result_2818586976 = nimCopy(result_2818586976, toSelection_2449474032(cursor_2818583556), NTI2449473548);
    break BeforeRet;
  };

  return result_2818586976;

}

function getNextFindResultJsWrapper_2818586969(self_2818587170, cursor_2818587171, offset_2818587172) {
  var result_2818587173 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818587173 = nimCopy(result_2818587173, getNextFindResult_2818583554(self_2818587170, cursor_2818587171, offset_2818587172), NTI2449473548);

  return result_2818587173;

}
editor_text_prototype.getNextFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getNextFindResultJsWrapper_2818586969(this, cursor_, offset_));};

function addNextFindResultToSelection_2818587211(self_2818587212) {
    selectionsHEX3D_2818573083(self_2818587212, HEX26_2818586431(selections_2818572802(self_2818587212), [nimCopy(null, getNextFindResult_2818583554(self_2818587212, selection_2818572805(self_2818587212).Field1, 0), NTI2449473548)]));

  
}

function addNextFindResultToSelectionJsWrapper_2818587208(self_2818587248) {
    addNextFindResultToSelection_2818587211(self_2818587248);

  
}
editor_text_prototype.addNextFindResultToSelection = function() { return (addNextFindResultToSelectionJsWrapper_2818587208(this));};

function addPrevFindResultToSelection_2818587262(self_2818587263) {
    selectionsHEX3D_2818573083(self_2818587263, HEX26_2818586431(selections_2818572802(self_2818587263), [nimCopy(null, getPrevFindResult_2818583550(self_2818587263, selection_2818572805(self_2818587263).Field0, 0), NTI2449473548)]));

  
}

function addPrevFindResultToSelectionJsWrapper_2818587259(self_2818587299) {
    addPrevFindResultToSelection_2818587262(self_2818587299);

  
}
editor_text_prototype.addPrevFindResultToSelection = function() { return (addPrevFindResultToSelectionJsWrapper_2818587259(this));};

function len_2818587384(t_2818587387) {
  var result_2818587388 = 0;

    result_2818587388 = t_2818587387.counter;

  return result_2818587388;

}

function setAllFindResultToSelection_2818587313(self_2818587314) {
    var selections_2818587319 = [];
    Label1: {
      var searchResults_2818587621 = [];
      var L_2818587684 = len_2818587384(self_2818587314.searchResults);
      Label2: {
        var h_2818587686 = 0;
        var colontmp__2818587687 = 0;
        colontmp__2818587687 = (self_2818587314.searchResults.data).length - 1;
        var res_2818587688 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818587688 <= colontmp__2818587687)) break Label4;
              h_2818587686 = res_2818587688;
              if (isFilled_1308622880(self_2818587314.searchResults.data[chckIndx(h_2818587686, 0, (self_2818587314.searchResults.data).length - 1)].Field0)) {
              searchResults_2818587621 = self_2818587314.searchResults.data[chckIndx(h_2818587686, 0, (self_2818587314.searchResults.data).length - 1)]["Field2"];
              Label5: {
                var s_2818587625 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                var i_2818587677 = 0;
                var L_2818587678 = (searchResults_2818587621).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_2818587677 < L_2818587678)) break Label7;
                      s_2818587625 = searchResults_2818587621[chckIndx(i_2818587677, 0, (searchResults_2818587621).length - 1)];
                      var Temporary8 = nimCopy(null, s_2818587625, NTI2449473548);
                      selections_2818587319.push(Temporary8);;
                      i_2818587677 = addInt(i_2818587677, 1);
                      if (!(((searchResults_2818587621).length == L_2818587678))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_2818587384(self_2818587314.searchResults) == L_2818587684))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818587688 = addInt(res_2818587688, 1);
            }
        };
      };
    };
    selectionsHEX3D_2818573083(self_2818587314, selections_2818587319);

  
}

function setAllFindResultToSelectionJsWrapper_2818587310(self_2818587666) {
    setAllFindResultToSelection_2818587313(self_2818587666);

  
}
editor_text_prototype.setAllFindResultToSelection = function() { return (setAllFindResultToSelectionJsWrapper_2818587310(this));};

function clearSelections_2818587695(self_2818587696) {
    if ((1 < (selections_2818572802(self_2818587696)).length)) {
    selectionHEX3D_2818572811(self_2818587696, selection_2818572805(self_2818587696));
    }
    else {
    selectionHEX3D_2818572811(self_2818587696, toSelection_2449474032(selection_2818572805(self_2818587696).Field1));
    }
    

  
}

function clearSelectionsJsWrapper_2818587692(self_2818587730) {
    clearSelections_2818587695(self_2818587730);

  
}
editor_text_prototype.clearSelections = function() { return (clearSelectionsJsWrapper_2818587692(this));};

function map_2818583759(s_2818583762, op_2818583764) {
  var result_2818583765 = [];

    result_2818583765 = new Array(chckRange((s_2818583762).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818583762).length, 0, 2147483647) ; ++i) { result_2818583765[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818583780 = 0;
      var colontmp__2818587837 = 0;
      colontmp__2818587837 = (s_2818583762).length;
      var i_2818587838 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818587838 < colontmp__2818587837)) break Label3;
            i_2818583780 = i_2818587838;
            result_2818583765[chckIndx(i_2818583780, 0, (result_2818583765).length - 1)] = nimCopy(result_2818583765[chckIndx(i_2818583780, 0, (result_2818583765).length - 1)], op_2818583764(s_2818583762[chckIndx(i_2818583780, 0, (s_2818583762).length - 1)]), NTI2818578483);
            i_2818587838 = addInt(i_2818587838, 1);
          }
      };
    };

  return result_2818583765;

}

function moveCursor_2818583704(self_2818583705, cursor_2818583706, movement_2818583711, offset_2818583712, all_2818583713) {
      
function HEX3Aanonymous_2818583724(s_2818583731) {
        var result_2818583734 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818583734 = nimCopy(result_2818583734, toSelection_2449474032(movement_2818583711(self_2818583705, s_2818583731.Field1, offset_2818583712)), NTI2449473548);

        return result_2818583734;

      }
      
function HEX3Aanonymous_2818583748(s_2818583755) {
        var result_2818583758 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818587824 = movement_2818583711(self_2818583705, s_2818583755.Field0, offset_2818583712);
          var colontmp__2818587825 = nimCopy(null, s_2818583755.Field1, NTI2449473546);
          result_2818583758 = nimCopy(result_2818583758, {Field0: nimCopy(null, colontmp__2818587824, NTI2449473546), Field1: nimCopy(null, colontmp__2818587825, NTI2449473546)}, NTI2818578483);

        return result_2818583758;

      }
      
function HEX3Aanonymous_2818583791(s_2818583798) {
        var result_2818583801 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818587828 = nimCopy(null, s_2818583798.Field0, NTI2449473546);
          var colontmp__2818587829 = movement_2818583711(self_2818583705, s_2818583798.Field1, offset_2818583712);
          result_2818583801 = nimCopy(result_2818583801, {Field0: nimCopy(null, colontmp__2818587828, NTI2449473546), Field1: nimCopy(null, colontmp__2818587829, NTI2449473546)}, NTI2818578525);

        return result_2818583801;

      }
      
function HEX3Aanonymous_2818583818(s_2818583825) {
        var result_2818583828 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818587832 = nimCopy(null, s_2818583825.Field1, NTI2449473546);
          var colontmp__2818587833 = movement_2818583711(self_2818583705, s_2818583825.Field1, offset_2818583712);
          result_2818583828 = nimCopy(result_2818583828, {Field0: nimCopy(null, colontmp__2818587832, NTI2449473546), Field1: nimCopy(null, colontmp__2818587833, NTI2449473546)}, NTI2818578557);

        return result_2818583828;

      }

    switch (cursor_2818583706) {
    case 0:
      var configCursor_2818583723 = getOption_2818583643(self_2818583705.editor, getContextWithMode_2818583609(self_2818583705, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      moveCursor_2818583704(self_2818583705, configCursor_2818583723, movement_2818583711, offset_2818583712, all_2818583713);
      break;
    case 1:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818572735(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583724));
      }
      else {
        var selections_2818583741 = selections_2818572802(self_2818583705);
        selections_2818583741[chckIndx((selections_2818583741).length - 1, 0, (selections_2818583741).length - 1)] = nimCopy(selections_2818583741[chckIndx((selections_2818583741).length - 1, 0, (selections_2818583741).length - 1)], toSelection_2449474032(movement_2818583711(self_2818583705, selections_2818583741[chckIndx((selections_2818583741).length - 1, 0, (selections_2818583741).length - 1)].Field1, offset_2818583712)), NTI2449473548);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583741);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field1, false);
      break;
    case 2:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818583759(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583748));
      }
      else {
        var selections_2818583781 = selections_2818572802(self_2818583705);
        var colontmp__2818587826 = movement_2818583711(self_2818583705, selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)].Field0, offset_2818583712);
        var colontmp__2818587827 = nimCopy(null, selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)].Field1, NTI2449473546);
        selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)] = nimCopy(selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)], {Field0: nimCopy(null, colontmp__2818587826, NTI2449473546), Field1: nimCopy(null, colontmp__2818587827, NTI2449473546)}, NTI2449473548);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583781);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field0, false);
      break;
    case 3:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818583759(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583791));
      }
      else {
        var selections_2818583808 = selections_2818572802(self_2818583705);
        var colontmp__2818587830 = nimCopy(null, selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)].Field0, NTI2449473546);
        var colontmp__2818587831 = movement_2818583711(self_2818583705, selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)].Field1, offset_2818583712);
        selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)] = nimCopy(selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)], {Field0: nimCopy(null, colontmp__2818587830, NTI2449473546), Field1: nimCopy(null, colontmp__2818587831, NTI2449473546)}, NTI2449473548);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583808);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field1, false);
      break;
    case 4:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818583759(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583818));
      }
      else {
        var selections_2818583835 = selections_2818572802(self_2818583705);
        var colontmp__2818587834 = nimCopy(null, selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)].Field1, NTI2449473546);
        var colontmp__2818587835 = movement_2818583711(self_2818583705, selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)].Field1, offset_2818583712);
        selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)] = nimCopy(selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)], {Field0: nimCopy(null, colontmp__2818587834, NTI2449473546), Field1: nimCopy(null, colontmp__2818587835, NTI2449473546)}, NTI2449473548);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583835);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field1, false);
      break;
    }

  
}

function moveCursorColumn_2818587744(self_2818587745, distance_2818587746, cursor_2818587747, all_2818587748) {
    moveCursor_2818583704(self_2818587745, cursor_2818587747, doMoveCursorColumn_2818583517, distance_2818587746, all_2818587748);
    updateTargetColumn_2818584579(self_2818587745, cursor_2818587747);

  
}

function moveCursorColumnJsWrapper_2818587741(self_2818587797, distance_2818587798, cursor_2818587799, all_2818587800) {
    moveCursorColumn_2818587744(self_2818587797, distance_2818587798, cursor_2818587799, all_2818587800);

  
}
editor_text_prototype.moveCursorColumn = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorColumnJsWrapper_2818587741(this, distance_, cursor_, all_));};

function moveCursorLine_2818587845(self_2818587846, distance_2818587847, cursor_2818587848, all_2818587849) {
    moveCursor_2818583704(self_2818587846, cursor_2818587848, doMoveCursorLine_2818583527, distance_2818587847, all_2818587849);

  
}

function moveCursorLineJsWrapper_2818587842(self_2818587880, distance_2818587881, cursor_2818587882, all_2818587883) {
    moveCursorLine_2818587845(self_2818587880, distance_2818587881, cursor_2818587882, all_2818587883);

  
}
editor_text_prototype.moveCursorLine = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorLineJsWrapper_2818587842(this, distance_, cursor_, all_));};

function doMoveCursorHome_2818583540(self_2818583541, cursor_2818583542, offset_2818583543) {
  var result_2818583544 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818587966 = cursor_2818583542.Field0;
    var colontmp__2818587967 = 0;
    result_2818583544 = nimCopy(result_2818583544, {Field0: colontmp__2818587966, Field1: colontmp__2818587967}, NTI2449473546);
    break BeforeRet;
  };

  return result_2818583544;

}

function moveCursorHome_2818587912(self_2818587913, cursor_2818587914, all_2818587915) {
    moveCursor_2818583704(self_2818587913, cursor_2818587914, doMoveCursorHome_2818583540, 0, all_2818587915);
    updateTargetColumn_2818584579(self_2818587913, cursor_2818587914);

  
}

function moveCursorHomeJsWrapper_2818587909(self_2818587945, cursor_2818587946, all_2818587947) {
    moveCursorHome_2818587912(self_2818587945, cursor_2818587946, all_2818587947);

  
}
editor_text_prototype.moveCursorHome = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorHomeJsWrapper_2818587909(this, cursor_, all_));};

function doMoveCursorEnd_2818583545(self_2818583546, cursor_2818583547, offset_2818583548) {
  var result_2818583549 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818588027 = cursor_2818583547.Field0;
    var colontmp__2818588028 = lineLength_2818572673(self_2818583546.document, cursor_2818583547.Field0);
    result_2818583549 = nimCopy(result_2818583549, {Field0: colontmp__2818588027, Field1: colontmp__2818588028}, NTI2449473546);
    break BeforeRet;
  };

  return result_2818583549;

}

function moveCursorEnd_2818587973(self_2818587974, cursor_2818587975, all_2818587976) {
    moveCursor_2818583704(self_2818587974, cursor_2818587975, doMoveCursorEnd_2818583545, 0, all_2818587976);
    updateTargetColumn_2818584579(self_2818587974, cursor_2818587975);

  
}

function moveCursorEndJsWrapper_2818587970(self_2818588006, cursor_2818588007, all_2818588008) {
    moveCursorEnd_2818587973(self_2818588006, cursor_2818588007, all_2818588008);

  
}
editor_text_prototype.moveCursorEnd = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorEndJsWrapper_2818587970(this, cursor_, all_));};

function getLine_2818572666(self_2818572667, line_2818572668) {
  var result_2818572669 = [];

  BeforeRet: {
    if ((line_2818572668 < (self_2818572667.lines).length)) {
    result_2818572669 = nimCopy(null, self_2818572667.lines[chckIndx(line_2818572668, 0, (self_2818572667.lines).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    result_2818572669 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2818572669;

}

function nsuFindStr(s_855639735, sub_855639736, start_855639737, last_855639738) {
  var result_855639739 = 0;

  BeforeRet: {
    if ((subInt((s_855639735).length, start_855639737) < (sub_855639736).length)) {
    result_855639739 = -1;
    break BeforeRet;
    }
    
    if (((sub_855639736).length == 1)) {
    result_855639739 = nsuFindChar(s_855639735, sub_855639736[chckIndx(0, 0, (sub_855639736).length - 1)], start_855639737, last_855639738);
    break BeforeRet;
    }
    
    result_855639739 = nsuFindStrA(nsuInitNewSkipTable(sub_855639736), s_855639735, sub_855639736, start_855639737, last_855639738);
  };

  return result_855639739;

}

function moveCursorTo_2818588034(self_2818588035, str_2818588036, cursor_2818588037, all_2818588038) {
    str_2818588036 = nimCopy(null, str_2818588036, NTI33554449);
    
function doMoveCursorTo_2818588039(self_2818588040, cursor_2818588041, offset_2818588042) {
      var result_2818588043 = {Field0: 0, Field1: 0};

        var line_2818588044 = getLine_2818572666(self_2818588040.document, cursor_2818588041.Field0);
        result_2818588043 = nimCopy(result_2818588043, cursor_2818588041, NTI2449473546);
        var index_2818588045 = nsuFindStr(line_2818588044, str_2818588036, chckRange(addInt(cursor_2818588041.Field1, 1), 0, 2147483647), -1);
        if ((0 <= index_2818588045)) {
        var colontmp__2818588103 = cursor_2818588041.Field0;
        var colontmp__2818588104 = index_2818588045;
        result_2818588043 = nimCopy(result_2818588043, {Field0: colontmp__2818588103, Field1: colontmp__2818588104}, NTI2449473546);
        }
        

      return result_2818588043;

    }

    moveCursor_2818583704(self_2818588035, cursor_2818588037, doMoveCursorTo_2818588039, 0, all_2818588038);
    updateTargetColumn_2818584579(self_2818588035, cursor_2818588037);

  
}

function moveCursorToJsWrapper_2818588031(self_2818588076, str_2818588077, cursor_2818588078, all_2818588079) {
    moveCursorTo_2818588034(self_2818588076, str_2818588077, cursor_2818588078, all_2818588079);

  
}
editor_text_prototype.moveCursorTo = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorToJsWrapper_2818588031(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function moveCursorBefore_2818588110(self_2818588111, str_2818588112, cursor_2818588113, all_2818588114) {
    str_2818588112 = nimCopy(null, str_2818588112, NTI33554449);
    
function doMoveCursorBefore_2818588115(self_2818588116, cursor_2818588117, offset_2818588118) {
      var result_2818588119 = {Field0: 0, Field1: 0};

        var line_2818588120 = getLine_2818572666(self_2818588116.document, cursor_2818588117.Field0);
        result_2818588119 = nimCopy(result_2818588119, cursor_2818588117, NTI2449473546);
        var index_2818588121 = nsuFindStr(line_2818588120, str_2818588112, chckRange(cursor_2818588117.Field1, 0, 2147483647), -1);
        if ((0 < index_2818588121)) {
        var colontmp__2818588179 = cursor_2818588117.Field0;
        var colontmp__2818588180 = subInt(index_2818588121, 1);
        result_2818588119 = nimCopy(result_2818588119, {Field0: colontmp__2818588179, Field1: colontmp__2818588180}, NTI2449473546);
        }
        

      return result_2818588119;

    }

    moveCursor_2818583704(self_2818588111, cursor_2818588113, doMoveCursorBefore_2818588115, 0, all_2818588114);
    updateTargetColumn_2818584579(self_2818588111, cursor_2818588113);

  
}

function moveCursorBeforeJsWrapper_2818588107(self_2818588152, str_2818588153, cursor_2818588154, all_2818588155) {
    moveCursorBefore_2818588110(self_2818588152, str_2818588153, cursor_2818588154, all_2818588155);

  
}
editor_text_prototype.moveCursorBefore = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorBeforeJsWrapper_2818588107(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function doMoveCursorNextFindResult_2818583563(self_2818583564, cursor_2818583565, offset_2818583566) {
  var result_2818583567 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818583567 = nimCopy(result_2818583567, getNextFindResult_2818583554(self_2818583564, cursor_2818583565, offset_2818583566).Field0, NTI2449473546);
    break BeforeRet;
  };

  return result_2818583567;

}

function moveCursorNextFindResult_2818588186(self_2818588187, cursor_2818588188, all_2818588189) {
    moveCursor_2818583704(self_2818588187, cursor_2818588188, doMoveCursorNextFindResult_2818583563, 0, all_2818588189);
    updateTargetColumn_2818584579(self_2818588187, cursor_2818588188);

  
}

function moveCursorNextFindResultJsWrapper_2818588183(self_2818588219, cursor_2818588220, all_2818588221) {
    moveCursorNextFindResult_2818588186(self_2818588219, cursor_2818588220, all_2818588221);

  
}
editor_text_prototype.moveCursorNextFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorNextFindResultJsWrapper_2818588183(this, cursor_, all_));};

function doMoveCursorPrevFindResult_2818583558(self_2818583559, cursor_2818583560, offset_2818583561) {
  var result_2818583562 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818583562 = nimCopy(result_2818583562, getPrevFindResult_2818583550(self_2818583559, cursor_2818583560, offset_2818583561).Field0, NTI2449473546);
    break BeforeRet;
  };

  return result_2818583562;

}

function moveCursorPrevFindResult_2818588245(self_2818588246, cursor_2818588247, all_2818588248) {
    moveCursor_2818583704(self_2818588246, cursor_2818588247, doMoveCursorPrevFindResult_2818583558, 0, all_2818588248);
    updateTargetColumn_2818584579(self_2818588246, cursor_2818588247);

  
}

function moveCursorPrevFindResultJsWrapper_2818588242(self_2818588278, cursor_2818588279, all_2818588280) {
    moveCursorPrevFindResult_2818588245(self_2818588278, cursor_2818588279, all_2818588280);

  
}
editor_text_prototype.moveCursorPrevFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorPrevFindResultJsWrapper_2818588242(this, cursor_, all_));};

function scrollToCursor_2818584038(self_2818584039, cursor_2818584040) {
    scrollToCursor_2818583568(self_2818584039, getCursor_2818583639(self_2818584039, cursor_2818584040), false);

  
}

function scrollToCursorJsWrapper_2818588301(self_2818588335, cursor_2818588336) {
    scrollToCursor_2818584038(self_2818588335, cursor_2818588336);

  
}
editor_text_prototype.scrollToCursor = function(cursor_ /* : SelectionCursor */) { return (scrollToCursorJsWrapper_2818588301(this, cursor_));};

function deinit_2885681592(self_2885681593) {
  
}

function deinit_2885681594(self_2885681595) {
  
}

function nossplitFile(path_1426063614) {
            var Temporary4;

  var result_1426063618 = {Field0: [], Field1: [], Field2: []};

    var namePos_1426063619 = 0;
    var dotPos_1426063620 = 0;
    Label1: {
      var i_1426063627 = 0;
      var colontmp__2818588394 = 0;
      colontmp__2818588394 = subInt((path_1426063614).length, 1);
      var res_2818588395 = colontmp__2818588394;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818588395)) break Label3;
            i_1426063627 = res_2818588395;
            if (((ConstSet49[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined) || (i_1426063627 == 0))) {
            if ((ConstSet50[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined)) {
            if ((1 <= i_1426063627)) {
            Temporary4 = subInt(i_1426063627, 1);
            }
            else {
            Temporary4 = 0;
            }
            
            result_1426063618.Field0 = nimCopy(null, substr_33557821(path_1426063614, 0, Temporary4), NTI33554449);
            namePos_1426063619 = addInt(i_1426063627, 1);
            }
            
            if ((i_1426063627 < dotPos_1426063620)) {
            result_1426063618.Field1 = nimCopy(null, substr_33557821(path_1426063614, namePos_1426063619, subInt(dotPos_1426063620, 1)), NTI33554449);
            result_1426063618.Field2 = nimCopy(null, substr_33557833(path_1426063614, dotPos_1426063620), NTI33554449);
            }
            else {
              result_1426063618.Field1 = nimCopy(null, substr_33557833(path_1426063614, namePos_1426063619), NTI33554449);
            }
            
            break Label1;
            }
            else {
            if (((((((path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)] == 46) && (0 < i_1426063627)) && (i_1426063627 < subInt((path_1426063614).length, 1))) && !((ConstSet51[path_1426063614[chckIndx(subInt(i_1426063627, 1), 0, (path_1426063614).length - 1)]] != undefined))) && !((path_1426063614[chckIndx(addInt(i_1426063627, 1), 0, (path_1426063614).length - 1)] == 46))) && (dotPos_1426063620 == 0))) {
            dotPos_1426063620 = i_1426063627;
            }
            }
            res_2818588395 = subInt(res_2818588395, 1);
          }
      };
    };

  return result_1426063618;

}

function none_2348810263() {
  var result_2348810270 = ({val: [], has: false});

  return result_2348810270;

}

function some_2281701410(val_2281701412) {
  var result_2281701413 = ({val: [], has: false});

    result_2281701413.has = true;
    result_2281701413.val = nimCopy(null, val_2281701412, NTI33554449);

  return result_2281701413;

}

function getLanguageForFile_2902458372(filename_2902458373) {
    var Temporary1;

  var result_2902458375 = ({val: [], has: false});

  BeforeRet: {
    var extension_2902458376 = nimCopy(null, nossplitFile(filename_2902458373).Field2, NTI33554449);
    if ((0 < (extension_2902458376).length)) {
    extension_2902458376 = nimCopy(null, HEX5BHEX5D_855639319(extension_2902458376, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    switch (toJSStr(extension_2902458376)) {
    case "c":
    case "cc":
    case "inc":
      Temporary1 = [99];
      break;
    case "sh":
      Temporary1 = [98,97,115,104];
      break;
    case "cs":
      Temporary1 = [99,115,104,97,114,112];
      break;
    case "cpp":
    case "hpp":
    case "h":
      Temporary1 = [99,112,112];
      break;
    case "css":
      Temporary1 = [99,115,115];
      break;
    case "go":
      Temporary1 = [103,111];
      break;
    case "hs":
      Temporary1 = [104,97,115,107,101,108,108];
      break;
    case "html":
      Temporary1 = [104,116,109,108];
      break;
    case "java":
      Temporary1 = [106,97,118,97];
      break;
    case "js":
    case "jsx":
    case "json":
      Temporary1 = [106,97,118,97,115,99,114,105,112,116];
      break;
    case "ocaml":
      Temporary1 = [111,99,97,109,108];
      break;
    case "php":
      Temporary1 = [112,104,112];
      break;
    case "py":
      Temporary1 = [112,121,116,104,111,110];
      break;
    case "ruby":
      Temporary1 = [114,117,98,121];
      break;
    case "rs":
      Temporary1 = [114,117,115,116];
      break;
    case "scala":
      Temporary1 = [115,99,97,108,97];
      break;
    case "ts":
      Temporary1 = [116,121,112,101,115,99,114,105,112,116];
      break;
    case "nim":
    case "nims":
      Temporary1 = [110,105,109];
      break;
    case "zig":
      Temporary1 = [122,105,103];
      break;
    default: 
      var fmtRes_2902458399 = [mnewString(0)];
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [85,110,107,110,111,119,110,32,102,105,108,101,32,101,120,116,101,110,115,105,111,110,32,39]);;
      formatValue_721420459(fmtRes_2902458399, 0, extension_2902458376, []);
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [39]);;
      log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2902458399[0], NTI33554449)]);
      result_2902458375 = nimCopy(result_2902458375, none_2348810263(), NTI2348810261);
      break BeforeRet;
      break;
    }
    var languageId_2902458407 = nimCopy(null, Temporary1, NTI33554449);
    result_2902458375 = nimCopy(result_2902458375, some_2281701410(languageId_2902458407), NTI2348810261);
    break BeforeRet;
  };

  return result_2902458375;

}

function isSome_2348810304(self_2348810306) {
  var result_2348810307 = false;

    result_2348810307 = self_2348810306.has;

  return result_2348810307;

}

function isNone_2818578915(self_2818578917) {
  var result_2818578918 = false;

    result_2818578918 = !(self_2818578917.has);

  return result_2818578918;

}

function get_2818578907(self_2818578909) {
  var result_2818578910 = [];

    if (isNone_2818578915(self_2818578909)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578910 = self_2818578909["val"];

  return result_2818578910;

}

function getOption_2818578923(editor_2818578925, path_2818578926, default_2818578927) {
  var result_2818578933 = null;

  BeforeRet: {
    if ((editor_2818578925 == null)) {
    result_2818578933 = default_2818578927;
    break BeforeRet;
    }
    
    var node_2818578945 = HEX7BHEX7D_1627393316(editor_2818578925.options, nsuSplitString(path_2818578926, [46], -1));
    if ((node_2818578945 == null)) {
    result_2818578933 = default_2818578927;
    break BeforeRet;
    }
    
    result_2818578933 = node_2818578945;
    break BeforeRet;
  };

  return result_2818578933;

}

function initOrderedTable_1627390053(initialSize_1627390056) {
  var result_1627390057 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1627390059 = slotsNeeded_1308622891(chckRange(initialSize_1627390056, 0, 2147483647));
    result_1627390057.counter = 0;
    result_1627390057.data = new Array(chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647) ; ++i) { result_1627390057.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1627390057.first = -1;
    result_1627390057.last = -1;

  return result_1627390057;

}

function newJObject_1627390051() {
  var result_1627390052 = null;

    result_1627390052 = {kind: 5, fields: initOrderedTable_1627390053(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1627390052;

}

function rawGet_1627390328(t_1627390331, key_1627390332, hc_1627390333, hc_1627390333_Idx) {
  var result_1627390334 = 0;

  BeforeRet: {
    hc_1627390333[hc_1627390333_Idx] = hash_1325400491(key_1627390332);
    if ((hc_1627390333[hc_1627390333_Idx] == 0)) {
    hc_1627390333[hc_1627390333_Idx] = 314159265;
    }
    
    if (((t_1627390331.data).length == 0)) {
    result_1627390334 = -1;
    break BeforeRet;
    }
    
    var h_1627390385 = (hc_1627390333[hc_1627390333_Idx] & (t_1627390331.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0)) break Label2;
          if (((t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0 == hc_1627390333[hc_1627390333_Idx]) && eqStrings(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field2, key_1627390332))) {
          result_1627390334 = h_1627390385;
          break BeforeRet;
          }
          
          h_1627390385 = nextTry_1308622883(h_1627390385, (t_1627390331.data).length - 1);
        }
    };
    result_1627390334 = subInt(-1, h_1627390385);
  };

  return result_1627390334;

}

function hasKey_1627392538(t_1627392541, key_1627392542) {
  var result_1627392543 = false;

    var hc_1627392544 = [0];
    result_1627392543 = (0 <= rawGet_1627390328(t_1627392541, key_1627392542, hc_1627392544, 0));

  return result_1627392543;

}

function hasKey_1627393154(node_1627393155, key_1627393156) {
    var Temporary1;

  var result_1627393157 = false;

    if (!((node_1627393155.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,57,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393155;
    if (ConstSet52[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393157 = hasKey_1627392538(Temporary1.fields, key_1627393156);

  return result_1627393157;

}

function HEX5BHEX5D_1627392612(t_1627392615, key_1627392616) {
  var result_1627392617 = null;
  var result_1627392617_Idx = 0;

    var hcHEX60gensym89_1627392618 = [0];
    var indexHEX60gensym89_1627392839 = rawGet_1627392619(t_1627392615, key_1627392616, hcHEX60gensym89_1627392618, 0);
    if ((0 <= indexHEX60gensym89_1627392839)) {
    result_1627392617 = t_1627392615.data[chckIndx(indexHEX60gensym89_1627392839, 0, (t_1627392615.data).length - 1)]; result_1627392617_Idx = "Field3";
    }
    else {
    raiseKeyError_1627392893(key_1627392616);
    }
    

  return [result_1627392617, result_1627392617_Idx];

}

function HEX5BHEX5D_1627393037(node_1627393038, name_1627393039) {
    var Temporary1;
    var Temporary2;

  var result_1627393040 = null;

    if (!(!((node_1627393038 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393038.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393038;
    if (ConstSet53[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393040 = (Temporary2 = HEX5BHEX5D_1627392612(Temporary1.fields, name_1627393039), Temporary2)[0][Temporary2[1]];

  return result_1627393040;

}

function none_2885681453() {
  var result_2885681459 = ({val: null});

  return result_2885681459;

}

function some_2885681464(val_2885681466) {
  var result_2885681467 = ({val: null});

    if (!(!((val_2885681466 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2885681467.val = val_2885681466;

  return result_2885681467;

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentExceptionMsg_33556469() {
  var result_33556470 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556456()) {
    result_33556470 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556475 = null;
            if (lastJSError.message !== undefined) {
        msg_33556475 = lastJSError.message;
      }
      
      if (!((msg_33556475 == null))) {
      result_33556470 = nimCopy(null, cstrToNimstr(msg_33556475), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556470 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556470;

}
async function loadLanguageDynamically_2885681415(languageId_2885681416, config_2885681417) {
    var Temporary2;

  var result_2885681424 = null;

  BeforeRet: {
++excHandler;
    try {
    if (hasKey_1627393154(config_2885681417, [119,97,115,109])) {
    Temporary2 = getStr_1627390106(HEX5BHEX5D_1627393037(config_2885681417, [119,97,115,109]), []);
    }
    else {
      var fmtRes_2885681438 = [mnewString(0)];
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [108,97,110,103,117,97,103,101,115,47,116,114,101,101,45,115,105,116,116,101,114,45]);;
      formatValue_721420459(fmtRes_2885681438, 0, languageId_2885681416, []);
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [46,119,97,115,109]);;
    Temporary2 = fmtRes_2885681438[0];
    }
    
    var wasmPath_2885681439 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_2885681444 = [mnewString(0)];
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [84,114,121,105,110,103,32,116,111,32,108,111,97,100,32,116,114,101,101,115,105,116,116,101,114,32,102,114,111,109,32,39]);;
    formatValue_721420459(fmtRes_2885681444, 0, wasmPath_2885681439, []);
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2885681444[0], NTI33554449)]);
    var language_2885681449 = (await loadTreesitterLanguage(toJSStr(wasmPath_2885681439)));
    if ((language_2885681449 == null)) {
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    
    result_2885681424 = some_2885681464(language_2885681449);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2885681494 = [mnewString(0)];
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [91,116,101,120,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,108,97,110,103,117,97,103,101,32,102,114,111,109,32,119,97,115,109,58,32,39]);;
    formatValue_721420459(fmtRes_2885681494, 0, languageId_2885681416, []);
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [39,58,32]);;
    formatValue_721420459(fmtRes_2885681494, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2885681494[0], NTI33554449)]);
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2885681424;

}

function isSome_2885681559(self_2885681561) {
  var result_2885681562 = false;

    result_2885681562 = !((self_2885681561.val == null));

  return result_2885681562;

}
async function loadLanguage_2885681535(languageId_2885681536, config_2885681537) {
  var result_2885681540 = null;

  BeforeRet: {
    var language_2885681554 = (await loadLanguageDynamically_2885681415(languageId_2885681536, config_2885681537));
    if (isSome_2885681559(language_2885681554)) {
    result_2885681540 = language_2885681554;
    break BeforeRet;
    }
    
    result_2885681540 = none_2885681453();
    break BeforeRet;
  };

  return result_2885681540;

}

function isNone_2818578959(self_2818578961) {
  var result_2818578962 = false;

    result_2818578962 = (self_2818578961.val == null);

  return result_2818578962;

}

function createTsParser_2885681581() {
  var result_2885681582 = null;

  BeforeRet: {
    result_2885681582 = new Parser();
    break BeforeRet;
  };

  return result_2885681582;

}

function get_2818578992(self_2818578994) {
  var result_2818578995 = null;
  var result_2818578995_Idx = 0;

  BeforeRet: {
    if (isNone_2818578959(self_2818578994)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578995 = self_2818578994; result_2818578995_Idx = "val";
    break BeforeRet;
  };

  return [result_2818578995, result_2818578995_Idx];

}

function contentString_2818574088(document_2818574089) {
  var result_2818574090 = [];

  BeforeRet: {
    result_2818574090 = nimCopy(null, nsuJoinSep(document_2818574089.lines, [10]), NTI33554449);
    break BeforeRet;
  };

  return result_2818574090;

}

function none_2885681218() {
  var result_2885681224 = ({val: null});

  return result_2885681224;

}
async function initTreesitter_2818578870(self_2818578871) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary6;

  var result_2818578873 = null;

  BeforeRet: {
    if (!((self_2818578871.tsParser == null))) {
    deinit_2885681592(self_2818578871.tsParser);
    self_2818578871.tsParser = null;
    }
    
    if (!((self_2818578871.highlightQuery == null))) {
    deinit_2885681594(self_2818578871.highlightQuery);
    self_2818578871.highlightQuery = null;
    }
    
      var oHEX60gensym88_2818578887 = getLanguageForFile_2902458372(self_2818578871.filename);
      if (!isSome_2348810304(oHEX60gensym88_2818578887)) Temporary2 = false; else {        var languageId_2818578921 = nimCopy(null, get_2818578907(oHEX60gensym88_2818578887), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818578921;
    }
    else {
      result_2818578873 = undefined;
      break BeforeRet;
    }
    
    var languageId_2818578922 = nimCopy(null, Temporary1, NTI33554449);
    var config_2818578949 = getOption_2818578923(gEditor, ([101,100,105,116,111,114,46,116,101,120,116,46,116,114,101,101,115,105,116,116,101,114,46] || []).concat(languageId_2818578922 || []), newJObject_1627390051());
    var language_2818578954 = [(await loadLanguage_2885681535(languageId_2818578922, config_2818578949))];
    if (isNone_2818578959(language_2818578954[0])) {
    var fmtRes_2818578971 = [mnewString(0)];
    fmtRes_2818578971[0].push.apply(fmtRes_2818578971[0], [76,97,110,103,117,97,103,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,58,32,39]);;
    formatValue_721420459(fmtRes_2818578971, 0, languageId_2818578922, []);
    fmtRes_2818578971[0].push.apply(fmtRes_2818578971[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578971[0], NTI33554449)]);
    result_2818578873 = undefined;
    break BeforeRet;
    }
    
    self_2818578871.tsParser = createTsParser_2885681581();
    if ((self_2818578871.tsParser == null)) {
    var fmtRes_2818578979 = [mnewString(0)];
    fmtRes_2818578979[0].push.apply(fmtRes_2818578979[0], [70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,115,32,112,97,114,115,101,114,32,102,111,114,58,32,39]);;
    formatValue_721420459(fmtRes_2818578979, 0, languageId_2818578922, []);
    fmtRes_2818578979[0].push.apply(fmtRes_2818578979[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578979[0], NTI33554449)]);
    result_2818578873 = undefined;
    break BeforeRet;
    }
    
    self_2818578871.tsParser.setLanguage((Temporary3 = get_2818578992(language_2818578954[0]), Temporary3)[0][Temporary3[1]]);
    self_2818578871.tsLanguage = (Temporary4 = get_2818578992(language_2818578954[0]), Temporary4)[0][Temporary4[1]];
    self_2818578871.currentTree = parseString_2885681211(self_2818578871.tsParser, contentString_2818574088(self_2818578871), none_2885681218());
++excHandler;
    try {
    var fmtRes_2818579032 = [mnewString(0)];
    fmtRes_2818579032[0].push.apply(fmtRes_2818579032[0], [46,47,108,97,110,103,117,97,103,101,115,47]);;
    formatValue_721420459(fmtRes_2818579032, 0, languageId_2818578922, []);
    fmtRes_2818579032[0].push.apply(fmtRes_2818579032[0], [47,113,117,101,114,105,101,115,47,104,105,103,104,108,105,103,104,116,115,46,115,99,109]);;
    var queryString_2818579033 = loadFile_2365587463(fs_2365587509, fmtRes_2818579032[0]);
    self_2818578871.highlightQuery = (Temporary6 = get_2818578992(language_2818578954[0]), Temporary6)[0][Temporary6[1]].query(toJSStr(queryString_2818579033));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818579053 = [mnewString(0)];
    fmtRes_2818579053[0].push.apply(fmtRes_2818579053[0], [91,116,101,120,116,101,100,105,116,93,32,78,111,32,104,105,103,104,108,105,103,104,116,32,113,117,101,114,105,101,115,32,102,111,117,110,100,32,102,111,114,32,39]);;
    formatValue_721420459(fmtRes_2818579053, 0, languageId_2818578922, []);
    fmtRes_2818579053[0].push.apply(fmtRes_2818579053[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818579053[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    notifyTextChanged_2818573268(self_2818578871);
    requestRender_2768240746(gEditor.platform, false);
    result_2818578873 = undefined;
    break BeforeRet;
  };

  return result_2818578873;

}

function reloadTreesitter_2818588355(self_2818588356) {
    log_1174405220(logger_704643272[0], 2, [[114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114]]);
    var _ = initTreesitter_2818578870(self_2818588356.document);

  
}

function reloadTreesitterJsWrapper_2818588352(self_2818588384) {
    reloadTreesitter_2818588355(self_2818588384);

  
}
editor_text_prototype.reloadTreesitter = function() { return (reloadTreesitterJsWrapper_2818588352(this));};

function deleteLeft_2818588404(self_2818588405) {
    var selections_2818588406 = selections_2818572802(self_2818588405);
    Label1: {
      var i_2818588412 = 0;
      var selection_2818588413 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818588453 = 0;
      var L_2818588454 = (selections_2818588406).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588453 < L_2818588454)) break Label3;
            i_2818588412 = i_2818588453;
            selection_2818588413 = nimCopy(selection_2818588413, selections_2818588406[chckIndx(i_2818588453, 0, (selections_2818588406).length - 1)], NTI2449473548);
            if (isEmpty_2449473911(selection_2818588413)) {
            var colontmp__2818588451 = doMoveCursorColumn_2818583517(self_2818588405, selection_2818588413.Field0, -1);
            var colontmp__2818588452 = nimCopy(null, selection_2818588413.Field0, NTI2449473546);
            selections_2818588406[chckIndx(i_2818588412, 0, (selections_2818588406).length - 1)] = nimCopy(selections_2818588406[chckIndx(i_2818588412, 0, (selections_2818588406).length - 1)], {Field0: nimCopy(null, colontmp__2818588451, NTI2449473546), Field1: nimCopy(null, colontmp__2818588452, NTI2449473546)}, NTI2449473548);
            }
            
            i_2818588453 = addInt(i_2818588453, 1);
            if (!(((selections_2818588406).length == L_2818588454))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573083(self_2818588405, delete_2818579356(self_2818588405.document, selections_2818588406, selections_2818572802(self_2818588405), true, true));
    updateTargetColumn_2818584579(self_2818588405, 3);

  
}

function deleteLeftJsWrapper_2818588401(self_2818588441) {
    deleteLeft_2818588404(self_2818588441);

  
}
editor_text_prototype.deleteLeft = function() { return (deleteLeftJsWrapper_2818588401(this));};

function deleteRight_2818588461(self_2818588462) {
    var selections_2818588463 = selections_2818572802(self_2818588462);
    Label1: {
      var i_2818588469 = 0;
      var selection_2818588470 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818588510 = 0;
      var L_2818588511 = (selections_2818588463).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588510 < L_2818588511)) break Label3;
            i_2818588469 = i_2818588510;
            selection_2818588470 = nimCopy(selection_2818588470, selections_2818588463[chckIndx(i_2818588510, 0, (selections_2818588463).length - 1)], NTI2449473548);
            if (isEmpty_2449473911(selection_2818588470)) {
            var colontmp__2818588508 = nimCopy(null, selection_2818588470.Field0, NTI2449473546);
            var colontmp__2818588509 = doMoveCursorColumn_2818583517(self_2818588462, selection_2818588470.Field0, 1);
            selections_2818588463[chckIndx(i_2818588469, 0, (selections_2818588463).length - 1)] = nimCopy(selections_2818588463[chckIndx(i_2818588469, 0, (selections_2818588463).length - 1)], {Field0: nimCopy(null, colontmp__2818588508, NTI2449473546), Field1: nimCopy(null, colontmp__2818588509, NTI2449473546)}, NTI2449473548);
            }
            
            i_2818588510 = addInt(i_2818588510, 1);
            if (!(((selections_2818588463).length == L_2818588511))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573083(self_2818588462, delete_2818579356(self_2818588462.document, selections_2818588463, selections_2818572802(self_2818588462), true, true));
    updateTargetColumn_2818584579(self_2818588462, 3);

  
}

function deleteRightJsWrapper_2818588458(self_2818588498) {
    deleteRight_2818588461(self_2818588498);

  
}
editor_text_prototype.deleteRight = function() { return (deleteRightJsWrapper_2818588458(this));};

function getCommandCount_2818588518(self_2818588519) {
  var result_2818588520 = 0;

  BeforeRet: {
    result_2818588520 = self_2818588519.commandCount;
    break BeforeRet;
  };

  return result_2818588520;

}

function getCommandCountJsWrapper_2818588515(self_2818588549) {
  var result_2818588550 = 0;

    result_2818588550 = getCommandCount_2818588518(self_2818588549);

  return result_2818588550;

}
editor_text_prototype.getCommandCount = function() { return (getCommandCountJsWrapper_2818588515(this));};

function setCommandCount_2818588568(self_2818588569, count_2818588570) {
    self_2818588569.commandCount = count_2818588570;

  
}

function setCommandCountJsWrapper_2818588565(self_2818588599, count_2818588600) {
    setCommandCount_2818588568(self_2818588599, count_2818588600);

  
}
editor_text_prototype.setCommandCount = function(count_ /* : int */) { return (setCommandCountJsWrapper_2818588565(this, count_));};

function setCommandCountRestore_2818588619(self_2818588620, count_2818588621) {
    self_2818588620.commandCountRestore = count_2818588621;

  
}

function setCommandCountRestoreJsWrapper_2818588616(self_2818588650, count_2818588651) {
    setCommandCountRestore_2818588619(self_2818588650, count_2818588651);

  
}
editor_text_prototype.setCommandCountRestore = function(count_ /* : int */) { return (setCommandCountRestoreJsWrapper_2818588616(this, count_));};

function updateCommandCount_2818588670(self_2818588671, digit_2818588672) {
    self_2818588671.commandCount = addInt(mulInt(self_2818588671.commandCount, 10), digit_2818588672);

  
}

function updateCommandCountJsWrapper_2818588667(self_2818588701, digit_2818588702) {
    updateCommandCount_2818588670(self_2818588701, digit_2818588702);

  
}
editor_text_prototype.updateCommandCount = function(digit_ /* : int */) { return (updateCommandCountJsWrapper_2818588667(this, digit_));};

function setFlag_2818588721(self_2818588722, name_2818588723, value_2818588724) {
    setFlag_1291848951(self_2818588722.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818588723 || []), value_2818588724);
    markDirty_2415919143(self_2818588722);

  
}

function setFlagJsWrapper_2818588718(self_2818588754, name_2818588755, value_2818588756) {
    setFlag_2818588721(self_2818588754, name_2818588755, value_2818588756);

  
}
editor_text_prototype.setFlag = function(name_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper_2818588718(this, name_ == undefined ? undefined : cstrToNimstr(name_), value_));};

function getFlag_2818588780(self_2818588781, name_2818588782) {
  var result_2818588783 = false;

  BeforeRet: {
    result_2818588783 = getFlag_1291848874(self_2818588781.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818588782 || []), false);
    break BeforeRet;
  };

  return result_2818588783;

}

function getFlagJsWrapper_2818588777(self_2818588813, name_2818588814) {
  var result_2818588815 = false;

    result_2818588815 = getFlag_2818588780(self_2818588813, name_2818588814);

  return result_2818588815;

}
editor_text_prototype.getFlag = function(name_ /* : string */) { return (getFlagJsWrapper_2818588777(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runAction_2818588843(self_2818588844, action_2818588845, args_2818588846) {
  var result_2818588847 = false;

  BeforeRet: {
    result_2818588847 = (handleActionInternal_2818572659(self_2818588844, action_2818588845, args_2818588846) == 3);
    break BeforeRet;
  };

  return result_2818588847;

}

function runActionJsWrapper_2818588840(self_2818588882, action_2818588883, args_2818588884) {
  var result_2818588885 = false;

    result_2818588885 = runAction_2818588843(self_2818588882, action_2818588883, args_2818588884);

  return result_2818588885;

}
editor_text_prototype.runAction = function(action_ /* : string */, args_ /* : JsonNode */) { return (runActionJsWrapper_2818588840(this, action_ == undefined ? undefined : cstrToNimstr(action_), args_));};

function nsuIsAlphaNumericChar(c_855638061) {
  var result_855638062 = false;

  BeforeRet: {
    result_855638062 = (ConstSet54[c_855638061] != undefined);
    break BeforeRet;
  };

  return result_855638062;

}

function charCategory_2818588903(c_2818588904) {
  var result_2818588905 = 0;

  BeforeRet: {
    if ((nsuIsAlphaNumericChar(c_2818588904) || (c_2818588904 == 95))) {
    result_2818588905 = 0;
    break BeforeRet;
    }
    
    if (((c_2818588904 == 32) || (c_2818588904 == 9))) {
    result_2818588905 = 1;
    break BeforeRet;
    }
    
    result_2818588905 = 2;
    break BeforeRet;
  };

  return result_2818588905;

}

function findWordBoundary_2818588911(self_2818588912, cursor_2818588913) {
  var result_2818588914 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var line_2818588915 = getLine_2818572666(self_2818588912.document, cursor_2818588913.Field0);
    result_2818588914 = nimCopy(result_2818588914, toSelection_2449474032(cursor_2818588913), NTI2449473548);
    if ((result_2818588914.Field0.Field1 == (line_2818588915).length)) {
    result_2818588914.Field0.Field1 = subInt(result_2818588914.Field0.Field1, 1);
    result_2818588914.Field1.Field1 = subInt(result_2818588914.Field1.Field1, 1);
    }
    
    Label1: {
        Label2: while (true) {
        if (!((0 < result_2818588914.Field0.Field1) && (result_2818588914.Field0.Field1 < (line_2818588915).length))) break Label2;
          var leftCategory_2818588926 = charCategory_2818588903(line_2818588915[chckIndx(subInt(result_2818588914.Field0.Field1, 1), 0, (line_2818588915).length - 1)]);
          var rightCategory_2818588927 = charCategory_2818588903(line_2818588915[chckIndx(result_2818588914.Field0.Field1, 0, (line_2818588915).length - 1)]);
          if (!((leftCategory_2818588926 == rightCategory_2818588927))) {
          break Label1;
          }
          
          result_2818588914.Field0.Field1 = subInt(result_2818588914.Field0.Field1, 1);
        }
    };
    if ((result_2818588914.Field1.Field1 < (line_2818588915).length)) {
    result_2818588914.Field1.Field1 = addInt(result_2818588914.Field1.Field1, 1);
    }
    
    Label3: {
        Label4: while (true) {
        if (!((0 <= result_2818588914.Field1.Field1) && (result_2818588914.Field1.Field1 < (line_2818588915).length))) break Label4;
          var leftCategory_2818588936 = charCategory_2818588903(line_2818588915[chckIndx(subInt(result_2818588914.Field1.Field1, 1), 0, (line_2818588915).length - 1)]);
          var rightCategory_2818588937 = charCategory_2818588903(line_2818588915[chckIndx(result_2818588914.Field1.Field1, 0, (line_2818588915).length - 1)]);
          if (!((leftCategory_2818588936 == rightCategory_2818588937))) {
          break Label3;
          }
          
          result_2818588914.Field1.Field1 = addInt(result_2818588914.Field1.Field1, 1);
        }
    };

  return result_2818588914;

}

function findWordBoundaryJsWrapper_2818588908(self_2818588971, cursor_2818588972) {
  var result_2818588973 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818588973 = nimCopy(result_2818588973, findWordBoundary_2818588911(self_2818588971, cursor_2818588972), NTI2449473548);

  return result_2818588973;

}
editor_text_prototype.findWordBoundary = function(cursor_ /* : Cursor */) { return (findWordBoundaryJsWrapper_2818588908(this, cursor_));};

function min_2449473874(a_2449473875, b_2449473876) {
  var result_2449473877 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3C_2449473866(a_2449473875, b_2449473876)) {
    result_2449473877 = nimCopy(result_2449473877, a_2449473875, NTI2449473546);
    break BeforeRet;
    }
    
    result_2449473877 = nimCopy(result_2449473877, b_2449473876, NTI2449473546);
    break BeforeRet;
  };

  return result_2449473877;

}

function max_2449473878(a_2449473879, b_2449473880) {
  var result_2449473881 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473882(b_2449473880, a_2449473879)) {
    result_2449473881 = nimCopy(result_2449473881, a_2449473879, NTI2449473546);
    break BeforeRet;
    }
    
    result_2449473881 = nimCopy(result_2449473881, b_2449473880, NTI2449473546);
    break BeforeRet;
  };

  return result_2449473881;

}

function or_2449474026(a_2449474027, b_2449474028) {
  var result_2449474029 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var an_2449474030 = normalized_2449473905(a_2449474027);
    var bn_2449474031 = normalized_2449473905(b_2449474028);
    var colontmp__2818589202 = min_2449473874(an_2449474030.Field0, bn_2449474031.Field0);
    var colontmp__2818589203 = max_2449473878(an_2449474030.Field1, bn_2449474031.Field1);
    result_2449474029 = nimCopy(result_2449474029, {Field0: nimCopy(null, colontmp__2818589202, NTI2449473546), Field1: nimCopy(null, colontmp__2818589203, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
  };

  return result_2449474029;

}

function reverse_2449473908(selection_2449473909) {
  var result_2449473910 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818589204 = nimCopy(null, selection_2449473909.Field1, NTI2449473546);
    var colontmp__2818589205 = nimCopy(null, selection_2449473909.Field0, NTI2449473546);
    result_2449473910 = nimCopy(result_2449473910, {Field0: nimCopy(null, colontmp__2818589204, NTI2449473546), Field1: nimCopy(null, colontmp__2818589205, NTI2449473546)}, NTI2449473548);

  return result_2449473910;

}

function nsuStartsWith(s_855639466, prefix_855639467) {
  var result_855639468 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_855639473 = (prefix_855639467).length;
    var sLenHEX60gensym146_855639474 = (s_855639466).length;
    var iHEX60gensym146_855639475 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_855639473 <= iHEX60gensym146_855639475)) {
          result_855639468 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_855639474 <= iHEX60gensym146_855639475) || !((s_855639466[chckIndx(iHEX60gensym146_855639475, 0, (s_855639466).length - 1)] == prefix_855639467[chckIndx(iHEX60gensym146_855639475, 0, (prefix_855639467).length - 1)])))) {
          result_855639468 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_855639475 = addInt(iHEX60gensym146_855639475, 1);
        }
    };
  };

  return result_855639468;

}

function getSelectionForMove_2818588998(self_2818588999, cursor_2818589000, move_2818589001, count_2818589002) {
  var result_2818589003 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (toJSStr(move_2818589001)) {
    case "word":
      result_2818589003 = nimCopy(result_2818589003, findWordBoundary_2818588911(self_2818588999, cursor_2818589000), NTI2449473548);
      Label1: {
        var __2818589008 = 0;
        var i_2818589160 = 1;
        Label2: {
            Label3: while (true) {
            if (!(i_2818589160 < count_2818589002)) break Label3;
              __2818589008 = i_2818589160;
              result_2818589003 = nimCopy(result_2818589003, or_2449474026(or_2449474026(result_2818589003, findWordBoundary_2818588911(self_2818588999, result_2818589003.Field1)), findWordBoundary_2818588911(self_2818588999, result_2818589003.Field0)), NTI2449473548);
              i_2818589160 = addInt(i_2818589160, 1);
            }
        };
      };
      break;
    case "word-line":
      var line_2818589009 = getLine_2818572666(self_2818588999.document, cursor_2818589000.Field0);
      result_2818589003 = nimCopy(result_2818589003, findWordBoundary_2818588911(self_2818588999, cursor_2818589000), NTI2449473548);
      if (((cursor_2818589000.Field1 == 0) && (0 < cursor_2818589000.Field0))) {
      var colontmp__2818589162 = subInt(cursor_2818589000.Field0, 1);
      var colontmp__2818589163 = (getLine_2818572666(self_2818588999.document, subInt(cursor_2818589000.Field0, 1))).length;
      result_2818589003.Field0 = nimCopy(result_2818589003.Field0, {Field0: colontmp__2818589162, Field1: colontmp__2818589163}, NTI2449473546);
      }
      
      if (((cursor_2818589000.Field1 == (line_2818589009).length) && (cursor_2818589000.Field0 < subInt((self_2818588999.document.lines).length, 1)))) {
      var colontmp__2818589164 = addInt(cursor_2818589000.Field0, 1);
      var colontmp__2818589165 = 0;
      result_2818589003.Field1 = nimCopy(result_2818589003.Field1, {Field0: colontmp__2818589164, Field1: colontmp__2818589165}, NTI2449473546);
      }
      
      Label4: {
        var __2818589017 = 0;
        var i_2818589171 = 1;
        Label5: {
            Label6: while (true) {
            if (!(i_2818589171 < count_2818589002)) break Label6;
              __2818589017 = i_2818589171;
              result_2818589003 = nimCopy(result_2818589003, or_2449474026(or_2449474026(result_2818589003, findWordBoundary_2818588911(self_2818588999, result_2818589003.Field1)), findWordBoundary_2818588911(self_2818588999, result_2818589003.Field0)), NTI2449473548);
              var line_2818589018 = getLine_2818572666(self_2818588999.document, result_2818589003.Field1.Field0);
              if (((result_2818589003.Field0.Field1 == 0) && (0 < result_2818589003.Field0.Field0))) {
              var colontmp__2818589167 = subInt(result_2818589003.Field0.Field0, 1);
              var colontmp__2818589168 = (getLine_2818572666(self_2818588999.document, subInt(result_2818589003.Field0.Field0, 1))).length;
              result_2818589003.Field0 = nimCopy(result_2818589003.Field0, {Field0: colontmp__2818589167, Field1: colontmp__2818589168}, NTI2449473546);
              }
              
              if (((result_2818589003.Field1.Field1 == (line_2818589018).length) && (result_2818589003.Field1.Field0 < subInt((self_2818588999.document.lines).length, 1)))) {
              var colontmp__2818589169 = addInt(result_2818589003.Field1.Field0, 1);
              var colontmp__2818589170 = 0;
              result_2818589003.Field1 = nimCopy(result_2818589003.Field1, {Field0: colontmp__2818589169, Field1: colontmp__2818589170}, NTI2449473546);
              }
              
              i_2818589171 = addInt(i_2818589171, 1);
            }
        };
      };
      break;
    case "word-back":
      result_2818589003 = nimCopy(result_2818589003, reverse_2449473908(getSelectionForMove_2818588998(self_2818588999, {Field0: cursor_2818589000.Field0, Field1: nimMax(0, subInt(cursor_2818589000.Field1, 1))}, [119,111,114,100], count_2818589002)), NTI2449473548);
      break BeforeRet;
      break;
    case "word-line-back":
      result_2818589003 = nimCopy(result_2818589003, reverse_2449473908(getSelectionForMove_2818588998(self_2818588999, {Field0: cursor_2818589000.Field0, Field1: nimMax(0, subInt(cursor_2818589000.Field1, 1))}, [119,111,114,100,45,108,105,110,101], count_2818589002)), NTI2449473548);
      break BeforeRet;
      break;
    case "line":
      var colontmp__2818589173 = {Field0: cursor_2818589000.Field0, Field1: 0};
      var colontmp__2818589174 = {Field0: cursor_2818589000.Field0, Field1: (getLine_2818572666(self_2818588999.document, cursor_2818589000.Field0)).length};
      result_2818589003 = nimCopy(result_2818589003, {Field0: nimCopy(null, colontmp__2818589173, NTI2449473546), Field1: nimCopy(null, colontmp__2818589174, NTI2449473546)}, NTI2449473548);
      break;
    case "line-next":
      var colontmp__2818589175 = {Field0: cursor_2818589000.Field0, Field1: 0};
      var colontmp__2818589176 = {Field0: cursor_2818589000.Field0, Field1: (getLine_2818572666(self_2818588999.document, cursor_2818589000.Field0)).length};
      result_2818589003 = nimCopy(result_2818589003, {Field0: nimCopy(null, colontmp__2818589175, NTI2449473546), Field1: nimCopy(null, colontmp__2818589176, NTI2449473546)}, NTI2449473548);
      if ((addInt(result_2818589003.Field1.Field0, 1) < (self_2818588999.document.lines).length)) {
      var colontmp__2818589177 = addInt(result_2818589003.Field1.Field0, 1);
      var colontmp__2818589178 = 0;
      result_2818589003.Field1 = nimCopy(result_2818589003.Field1, {Field0: colontmp__2818589177, Field1: colontmp__2818589178}, NTI2449473546);
      }
      
      Label7: {
        var __2818589029 = 0;
        var i_2818589182 = 1;
        Label8: {
            Label9: while (true) {
            if (!(i_2818589182 < count_2818589002)) break Label9;
              __2818589029 = i_2818589182;
              result_2818589003 = nimCopy(result_2818589003, or_2449474026(result_2818589003, {Field0: {Field0: result_2818589003.Field1.Field0, Field1: 0}, Field1: {Field0: result_2818589003.Field1.Field0, Field1: (getLine_2818572666(self_2818588999.document, result_2818589003.Field1.Field0)).length}}), NTI2449473548);
              if ((addInt(result_2818589003.Field1.Field0, 1) < (self_2818588999.document.lines).length)) {
              var colontmp__2818589180 = addInt(result_2818589003.Field1.Field0, 1);
              var colontmp__2818589181 = 0;
              result_2818589003.Field1 = nimCopy(result_2818589003.Field1, {Field0: colontmp__2818589180, Field1: colontmp__2818589181}, NTI2449473546);
              }
              
              i_2818589182 = addInt(i_2818589182, 1);
            }
        };
      };
      break;
    case "file":
      var colontmp__2818589184 = 0;
      var colontmp__2818589185 = 0;
      result_2818589003.Field0 = nimCopy(result_2818589003.Field0, {Field0: colontmp__2818589184, Field1: colontmp__2818589185}, NTI2449473546);
      var line_2818589036 = subInt((self_2818588999.document.lines).length, 1);
      var colontmp__2818589186 = line_2818589036;
      var colontmp__2818589187 = (getLine_2818572666(self_2818588999.document, line_2818589036)).length;
      result_2818589003.Field1 = nimCopy(result_2818589003.Field1, {Field0: colontmp__2818589186, Field1: colontmp__2818589187}, NTI2449473546);
      break;
    case "prev-find-result":
      result_2818589003 = nimCopy(result_2818589003, getPrevFindResult_2818583550(self_2818588999, cursor_2818589000, count_2818589002), NTI2449473548);
      break;
    case "next-find-result":
      result_2818589003 = nimCopy(result_2818589003, getNextFindResult_2818583554(self_2818588999, cursor_2818589000, count_2818589002), NTI2449473548);
      break;
    default: 
      if (nsuStartsWith(move_2818589001, [109,111,118,101,45,116,111,32])) {
      var str_2818589055 = HEX5BHEX5D_855639319(move_2818589001, HEX2EHEX2E_1040187488(8, 1));
      var line_2818589056 = getLine_2818572666(self_2818588999.document, cursor_2818589000.Field0);
      result_2818589003 = nimCopy(result_2818589003, toSelection_2449474032(cursor_2818589000), NTI2449473548);
      var index_2818589057 = nsuFindStr(line_2818589056, str_2818589055, chckRange(cursor_2818589000.Field1, 0, 2147483647), -1);
      if ((0 <= index_2818589057)) {
      var colontmp__2818589188 = cursor_2818589000.Field0;
      var colontmp__2818589189 = addInt(index_2818589057, 1);
      result_2818589003.Field1 = nimCopy(result_2818589003.Field1, {Field0: colontmp__2818589188, Field1: colontmp__2818589189}, NTI2449473546);
      }
      
      Label10: {
        var __2818589062 = 0;
        var i_2818589193 = 1;
        Label11: {
            Label12: while (true) {
            if (!(i_2818589193 < count_2818589002)) break Label12;
              __2818589062 = i_2818589193;
              var index_2818589063 = nsuFindStr(line_2818589056, str_2818589055, chckRange(result_2818589003.Field1.Field1, 0, 2147483647), -1);
              if ((0 <= index_2818589063)) {
              var colontmp__2818589191 = result_2818589003.Field1.Field0;
              var colontmp__2818589192 = addInt(index_2818589063, 1);
              result_2818589003.Field1 = nimCopy(result_2818589003.Field1, {Field0: colontmp__2818589191, Field1: colontmp__2818589192}, NTI2449473546);
              }
              
              i_2818589193 = addInt(i_2818589193, 1);
            }
        };
      };
      }
      else {
      if (nsuStartsWith(move_2818589001, [109,111,118,101,45,98,101,102,111,114,101,32])) {
      var str_2818589082 = HEX5BHEX5D_855639319(move_2818589001, HEX2EHEX2E_1040187488(12, 1));
      var line_2818589083 = getLine_2818572666(self_2818588999.document, cursor_2818589000.Field0);
      result_2818589003 = nimCopy(result_2818589003, toSelection_2449474032(cursor_2818589000), NTI2449473548);
      var index_2818589084 = nsuFindStr(line_2818589083, str_2818589082, chckRange(addInt(cursor_2818589000.Field1, 1), 0, 2147483647), -1);
      if ((0 <= index_2818589084)) {
      var colontmp__2818589195 = cursor_2818589000.Field0;
      var colontmp__2818589196 = index_2818589084;
      result_2818589003.Field1 = nimCopy(result_2818589003.Field1, {Field0: colontmp__2818589195, Field1: colontmp__2818589196}, NTI2449473546);
      }
      
      Label13: {
        var __2818589089 = 0;
        var i_2818589200 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_2818589200 < count_2818589002)) break Label15;
              __2818589089 = i_2818589200;
              var index_2818589090 = nsuFindStr(line_2818589083, str_2818589082, chckRange(addInt(result_2818589003.Field1.Field1, 1), 0, 2147483647), -1);
              if ((0 <= index_2818589090)) {
              var colontmp__2818589198 = result_2818589003.Field1.Field0;
              var colontmp__2818589199 = index_2818589090;
              result_2818589003.Field1 = nimCopy(result_2818589003.Field1, {Field0: colontmp__2818589198, Field1: colontmp__2818589199}, NTI2449473546);
              }
              
              i_2818589200 = addInt(i_2818589200, 1);
            }
        };
      };
      }
      else {
        result_2818589003 = nimCopy(result_2818589003, toSelection_2449474032(cursor_2818589000), NTI2449473548);
        var fmtRes_2818589095 = [mnewString(0)];
        fmtRes_2818589095[0].push.apply(fmtRes_2818589095[0], [91,101,114,114,111,114,93,32,85,110,107,110,111,119,110,32,109,111,118,101,32,39]);;
        formatValue_721420459(fmtRes_2818589095, 0, move_2818589001, []);
        fmtRes_2818589095[0].push.apply(fmtRes_2818589095[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818589095[0], NTI33554449)]);
      }
      }
      break;
    }
  };

  return result_2818589003;

}

function getSelectionForMoveJsWrapper_2818588995(self_2818589127, cursor_2818589128, move_2818589129, count_2818589130) {
  var result_2818589131 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818589131 = nimCopy(result_2818589131, getSelectionForMove_2818588998(self_2818589127, cursor_2818589128, move_2818589129, count_2818589130), NTI2449473548);

  return result_2818589131;

}
editor_text_prototype.getSelectionForMove = function(cursor_ /* : Cursor */, move_ /* : string */, count_ /* : int */) { return (getSelectionForMoveJsWrapper_2818588995(this, cursor_, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function HEX5BHEX5D_2818589269(s_2818589273, x_2818589274) {
  var result_2818589275 = [];

    var a_2818589277 = x_2818589274.a;
    var L_2818589282 = addInt(subInt(subInt((s_2818589273).length, x_2818589274.b), a_2818589277), 1);
    result_2818589275 = new Array(chckRange(L_2818589282, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2818589282, 0, 2147483647) ; ++i) { result_2818589275[i] = []; }    Label1: {
      var i_2818589291 = 0;
      var i_2818589503 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589503 < L_2818589282)) break Label3;
            i_2818589291 = i_2818589503;
            result_2818589275[chckIndx(i_2818589291, 0, (result_2818589275).length - 1)] = nimCopy(null, s_2818589273[chckIndx(addInt(i_2818589291, a_2818589277), 0, (s_2818589273).length - 1)], NTI33554449);
            i_2818589503 = addInt(i_2818589503, 1);
          }
      };
    };

  return result_2818589275;

}

function contains_1627393212(node_1627393213, key_1627393214) {
    var Temporary1;

  var result_1627393215 = false;

    if (!((node_1627393213.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,54,52,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393213;
    if (ConstSet55[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393215 = hasKey_1627392538(Temporary1.fields, key_1627393214);

  return result_1627393215;

}

function mustRehash_1627390664(t_1627390666) {
  var result_1627390667 = false;

    if (!((t_1627390666.counter < (t_1627390666.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1627390667 = ((mulInt((t_1627390666.data).length, 2) < mulInt(t_1627390666.counter, 3)) || (subInt((t_1627390666.data).length, t_1627390666.counter) < 4));

  return result_1627390667;

}

function rawInsert_1627391242(t_1627391245, data_1627391246, data_1627391246_Idx, key_1627391247, val_1627391248, hc_1627391249, h_1627391250) {
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field2 = nimCopy(null, key_1627391247, NTI33554449);
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field3 = val_1627391248;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field0 = hc_1627391249;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = -1;
    if ((t_1627391245.first < 0)) {
    t_1627391245.first = h_1627391250;
    }
    
    if ((0 <= t_1627391245.last)) {
    data_1627391246[data_1627391246_Idx][chckIndx(t_1627391245.last, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = h_1627391250;
    }
    
    t_1627391245.last = h_1627391250;

  
}

function enlarge_1627390827(t_1627390830) {
          var Temporary6;
          var Temporary7;

    var n_1627390833 = [];
    n_1627390833 = new Array(chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647) ; ++i) { n_1627390833[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1627390885 = t_1627390830.first;
    t_1627390830.first = -1;
    t_1627390830.last = -1;
    var Temporary1 = t_1627390830.data; t_1627390830.data = n_1627390833; n_1627390833 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1627390885)) break Label3;
          var nxt_1627390943 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field1;
          var eh_1627390997 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0;
          if (isFilled_1308622880(eh_1627390997)) {
          var j_1627391001 = (eh_1627390997 & (t_1627390830.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1308622880(t_1627390830.data[chckIndx(j_1627391001, 0, (t_1627390830.data).length - 1)].Field0)) break Label5;
                j_1627391001 = nextTry_1308622883(j_1627391001, (t_1627390830.data).length - 1);
              }
          };
          Temporary6 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3, NTI1627389956);
          rawInsert_1627391242(t_1627390830, t_1627390830, "data", Temporary6, Temporary7, n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0, j_1627391001);
          }
          
          h_1627390885 = nxt_1627390943;
        }
    };

  
}

function rawGetKnownHC_1627391524(t_1627391527, key_1627391528, hc_1627391529) {
  var result_1627391530 = 0;

  BeforeRet: {
    if (((t_1627391527.data).length == 0)) {
    result_1627391530 = -1;
    break BeforeRet;
    }
    
    var h_1627391581 = (hc_1627391529 & (t_1627391527.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0)) break Label2;
          if (((t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0 == hc_1627391529) && eqStrings(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field2, key_1627391528))) {
          result_1627391530 = h_1627391581;
          break BeforeRet;
          }
          
          h_1627391581 = nextTry_1308622883(h_1627391581, (t_1627391527.data).length - 1);
        }
    };
    result_1627391530 = subInt(-1, h_1627391581);
  };

  return result_1627391530;

}

function HEX5BHEX5DHEX3D_1627390259(t_1627390262, key_1627390263, val_1627390264) {
    if (((t_1627390262.data).length == 0)) {
    var correctSizeHEX60gensym13_1627390314 = slotsNeeded_1308622891(32);
    t_1627390262.counter = 0;
    t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1627390262.first = -1;
    t_1627390262.last = -1;
    }
    
    var hc_1627390319 = [0];
    var index_1627390557 = rawGet_1627390328(t_1627390262, key_1627390263, hc_1627390319, 0);
    if ((0 <= index_1627390557)) {
    t_1627390262.data[chckIndx(index_1627390557, 0, (t_1627390262.data).length - 1)].Field3 = val_1627390264;
    }
    else {
      if (((t_1627390262.data).length == 0)) {
      var correctSizeHEX60gensym18_1627390659 = slotsNeeded_1308622891(32);
      t_1627390262.counter = 0;
      t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1627390262.first = -1;
      t_1627390262.last = -1;
      }
      
      if (mustRehash_1627390664(t_1627390262)) {
      enlarge_1627390827(t_1627390262);
      index_1627390557 = rawGetKnownHC_1627391524(t_1627390262, key_1627390263, hc_1627390319[0]);
      }
      
      index_1627390557 = subInt(-1, index_1627390557);
      rawInsert_1627391242(t_1627390262, t_1627390262, "data", key_1627390263, val_1627390264, hc_1627390319[0], index_1627390557);
      t_1627390262.counter = addInt(t_1627390262.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1627391903(obj_1627391904, key_1627391905, val_1627391906) {
    var Temporary1;

    if (!((obj_1627391904.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,57,48,44,32,57,41,32,96,111,98,106,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = obj_1627391904;
    if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    HEX5BHEX5DHEX3D_1627390259(Temporary1.fields, key_1627391905, val_1627391906);

  
}

function HEX5BHEX5D_2701132581(s_2701132583, i_2701132584) {
  var result_2701132585 = [];

    result_2701132585 = nimCopy(null, s_2701132583[chckIndx(subInt((s_2701132583).length, i_2701132584), 0, (s_2701132583).length - 1)], NTI33554449);

  return result_2701132585;

}

function newJInt_1627390040(n_1627390041) {
  var result_1627390042 = null;

    result_1627390042 = {kind: 2, num: n_1627390041, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390042;

}

function setOption_2818589239(editor_2818589241, path_2818589242, value_2818589243) {
  BeforeRet: {
    Label1: {
      if ((editor_2818589241 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym689_2818589258 = nsuSplitString(path_2818589242, [46], -1);
      var nodeHEX60gensym689_2818589259 = editor_2818589241.options;
      Label2: {
        var keyHEX60gensym689_2818589295 = [];
        var colontmp__2818589498 = [];
        colontmp__2818589498 = HEX5BHEX5D_2818589269(pathItemsHEX60gensym689_2818589258, HEX2EHEX2E_1040187488(0, 2));
        var i_2818589499 = 0;
        var L_2818589500 = (colontmp__2818589498).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818589499 < L_2818589500)) break Label4;
              keyHEX60gensym689_2818589295 = colontmp__2818589498[chckIndx(i_2818589499, 0, (colontmp__2818589498).length - 1)];
              if (!((nodeHEX60gensym689_2818589259.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym689_2818589259, keyHEX60gensym689_2818589295))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym689_2818589259, keyHEX60gensym689_2818589295, newJObject_1627390051());
              }
              
              nodeHEX60gensym689_2818589259 = HEX5BHEX5D_1627393037(nodeHEX60gensym689_2818589259, keyHEX60gensym689_2818589295);
              i_2818589499 = addInt(i_2818589499, 1);
              if (!(((colontmp__2818589498).length == L_2818589500))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym689_2818589259 == null) || !((nodeHEX60gensym689_2818589259.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym689_2818589259, HEX5BHEX5D_2701132581(pathItemsHEX60gensym689_2818589258, 1), newJInt_1627390040(value_2818589243));
    };
    requestRender_2768240746(editor_2818589241.platform, true);
  };

  
}

function getOption_2818589311(editor_2818589313, path_2818589314, default_2818589315) {
  var result_2818589320 = [];

  BeforeRet: {
    Label1: {
      if ((editor_2818589313 == null)) {
      result_2818589320 = nimCopy(null, default_2818589315, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym694_2818589333 = HEX7BHEX7D_1627393316(editor_2818589313.options, nsuSplitString(path_2818589314, [46], -1));
      if ((nodeHEX60gensym694_2818589333 == null)) {
      result_2818589320 = nimCopy(null, default_2818589315, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_2818589320 = nimCopy(null, getStr_1627390106(nodeHEX60gensym694_2818589333, default_2818589315), NTI33554449);
    break BeforeRet;
  };

  return result_2818589320;

}

function getInt_1627390118(n_1627390119, default_1627390120) {
      var Temporary1;

  var result_1627390121 = 0;

  BeforeRet: {
    if (((n_1627390119 == null) || !((n_1627390119.kind == 2)))) {
    result_1627390121 = default_1627390120;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390119;
      if (ConstSet57[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390121 = chckRange(Temporary1.num, -2147483648, 2147483647);
      break BeforeRet;
    }
    
  };

  return result_1627390121;

}

function getOption_2818589337(editor_2818589339, path_2818589340, default_2818589341) {
  var result_2818589346 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818589339 == null)) {
      result_2818589346 = default_2818589341;
      break BeforeRet;
      }
      
      var nodeHEX60gensym695_2818589358 = HEX7BHEX7D_1627393316(editor_2818589339.options, nsuSplitString(path_2818589340, [46], -1));
      if ((nodeHEX60gensym695_2818589358 == null)) {
      result_2818589346 = default_2818589341;
      break BeforeRet;
      }
      
    };
    result_2818589346 = getInt_1627390118(nodeHEX60gensym695_2818589358, default_2818589341);
    break BeforeRet;
  };

  return result_2818589346;

}

function newJString_1627389994(s_1627389995) {
  var result_1627389996 = null;

    result_1627389996 = {kind: 4, str: nimCopy(null, s_1627389995, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627389996;

}

function setOption_2818589371(editor_2818589373, path_2818589374, value_2818589375) {
  BeforeRet: {
    Label1: {
      if ((editor_2818589373 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym696_2818589391 = nsuSplitString(path_2818589374, [46], -1);
      var nodeHEX60gensym696_2818589392 = editor_2818589373.options;
      Label2: {
        var keyHEX60gensym696_2818589411 = [];
        var colontmp__2818589512 = [];
        colontmp__2818589512 = HEX5BHEX5D_2818589269(pathItemsHEX60gensym696_2818589391, HEX2EHEX2E_1040187488(0, 2));
        var i_2818589513 = 0;
        var L_2818589514 = (colontmp__2818589512).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818589513 < L_2818589514)) break Label4;
              keyHEX60gensym696_2818589411 = colontmp__2818589512[chckIndx(i_2818589513, 0, (colontmp__2818589512).length - 1)];
              if (!((nodeHEX60gensym696_2818589392.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym696_2818589392, keyHEX60gensym696_2818589411))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym696_2818589392, keyHEX60gensym696_2818589411, newJObject_1627390051());
              }
              
              nodeHEX60gensym696_2818589392 = HEX5BHEX5D_1627393037(nodeHEX60gensym696_2818589392, keyHEX60gensym696_2818589411);
              i_2818589513 = addInt(i_2818589513, 1);
              if (!(((colontmp__2818589512).length == L_2818589514))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym696_2818589392 == null) || !((nodeHEX60gensym696_2818589392.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym696_2818589392, HEX5BHEX5D_2701132581(pathItemsHEX60gensym696_2818589391, 1), newJString_1627389994(value_2818589375));
    };
    requestRender_2768240746(editor_2818589373.platform, true);
  };

  
}

function setMove_2818589236(self_2818589237, args_2818589238) {
    setOption_2818589239(self_2818589237.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], getCommandCount_2818588518(self_2818589237));
    setMode_2818584222(self_2818589237, getOption_2818589311(self_2818589237.editor, [116,101,120,116,46,109,111,118,101,45,110,101,120,116,45,109,111,100,101], []));
    setCommandCount_2818588568(self_2818589237, getOption_2818589337(self_2818589237.editor, [116,101,120,116,46,109,111,118,101,45,99,111,109,109,97,110,100,45,99,111,117,110,116], 0));
    var _ = runAction_2818588843(self_2818589237, getOption_2818589311(self_2818589237.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []), args_2818589238);
    setOption_2818589371(self_2818589237.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []);

  
}

function setMoveJsWrapper_2818589233(self_2818589455, args_2818589456) {
    setMove_2818589236(self_2818589455, args_2818589456);

  
}
editor_text_prototype.setMove = function(args_ /* : JsonNode */) { return (setMoveJsWrapper_2818589233(this, args_));};

function deleteMove_2818589521(self_2818589522, move_2818589523, which_2818589524, all_2818589525) {
    move_2818589523 = nimCopy(null, move_2818589523, NTI33554449);
    
function HEX3Aanonymous_2818589537(s_2818589544) {
        var Temporary1;

      var result_2818589547 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818589536) {
        Temporary1 = getSelectionForMove_2818588998(self_2818589522, s_2818589544.Field1, move_2818589523, count_2818589535);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818589544.Field1, NTI2449473546), Field1: nimCopy(null, getSelectionForMove_2818588998(self_2818589522, s_2818589544.Field1, move_2818589523, count_2818589535).Field1, NTI2449473546)};
        }
        
        result_2818589547 = nimCopy(result_2818589547, Temporary1, NTI2449473548);

      return result_2818589547;

    }

    var count_2818589535 = getOption_2818589337(self_2818589522.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818589536 = getFlag_2818588780(self_2818589522, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818589554 = map_2818572735(selections_2818572802(self_2818589522), HEX3Aanonymous_2818589537);
    selectionsHEX3D_2818573083(self_2818589522, delete_2818579356(self_2818589522.document, selections_2818589554, selections_2818572802(self_2818589522), true, true));
    scrollToCursor_2818584038(self_2818589522, 3);
    updateTargetColumn_2818584579(self_2818589522, 3);

  
}

function deleteMoveJsWrapper_2818589518(self_2818589586, move_2818589587, which_2818589588, all_2818589589) {
    deleteMove_2818589521(self_2818589586, move_2818589587, which_2818589588, all_2818589589);

  
}
editor_text_prototype.deleteMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (deleteMoveJsWrapper_2818589518(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function mapAllOrLast_2818589641(self_2818589643, all_2818589644, p_2818589646) {
    
function HEX3Aanonymous_2818589648(s_2818589655) {
      var result_2818589658 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818589658 = nimCopy(result_2818589658, p_2818589646(s_2818589655), NTI2449473548);

      return result_2818589658;

    }

  var result_2818589647 = [];

    if (all_2818589644) {
    result_2818589647 = nimCopy(null, map_2818572735(self_2818589643, HEX3Aanonymous_2818589648), NTI2818572615);
    }
    else {
      result_2818589647 = nimCopy(null, self_2818589643, NTI2818582729);
      if ((0 < (result_2818589647).length)) {
      result_2818589647[chckIndx((result_2818589647).length - 1, 0, (result_2818589647).length - 1)] = nimCopy(result_2818589647[chckIndx((result_2818589647).length - 1, 0, (result_2818589647).length - 1)], p_2818589646(result_2818589647[chckIndx((result_2818589647).length - 1, 0, (result_2818589647).length - 1)]), NTI2449473548);
      }
      
    }
    

  return result_2818589647;

}

function selectMove_2818589618(self_2818589619, move_2818589620, which_2818589621, all_2818589622) {
    move_2818589620 = nimCopy(null, move_2818589620, NTI33554449);
    
function HEX3Aanonymous_2818589633(s_2818589636) {
      var result_2818589639 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818589639 = nimCopy(result_2818589639, getSelectionForMove_2818588998(self_2818589619, s_2818589636.Field1, move_2818589620, count_2818589632), NTI2449473548);

      return result_2818589639;

    }

    var count_2818589632 = getOption_2818589337(self_2818589619.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    selectionsHEX3D_2818573083(self_2818589619, mapAllOrLast_2818589641(selections_2818572802(self_2818589619), all_2818589622, HEX3Aanonymous_2818589633));
    scrollToCursor_2818584038(self_2818589619, 3);
    updateTargetColumn_2818584579(self_2818589619, 3);

  
}

function selectMoveJsWrapper_2818589615(self_2818589708, move_2818589709, which_2818589710, all_2818589711) {
    selectMove_2818589618(self_2818589708, move_2818589709, which_2818589710, all_2818589711);

  
}
editor_text_prototype.selectMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (selectMoveJsWrapper_2818589615(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function changeMove_2818589740(self_2818589741, move_2818589742, which_2818589743, all_2818589744) {
    move_2818589742 = nimCopy(null, move_2818589742, NTI33554449);
    
function HEX3Aanonymous_2818589756(s_2818589763) {
        var Temporary1;

      var result_2818589766 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818589755) {
        Temporary1 = getSelectionForMove_2818588998(self_2818589741, s_2818589763.Field1, move_2818589742, count_2818589754);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818589763.Field1, NTI2449473546), Field1: nimCopy(null, getSelectionForMove_2818588998(self_2818589741, s_2818589763.Field1, move_2818589742, count_2818589754).Field1, NTI2449473546)};
        }
        
        result_2818589766 = nimCopy(result_2818589766, Temporary1, NTI2449473548);

      return result_2818589766;

    }

    var count_2818589754 = getOption_2818589337(self_2818589741.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818589755 = getFlag_2818588780(self_2818589741, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818589773 = map_2818572735(selections_2818572802(self_2818589741), HEX3Aanonymous_2818589756);
    selectionsHEX3D_2818573083(self_2818589741, delete_2818579356(self_2818589741.document, selections_2818589773, selections_2818572802(self_2818589741), true, true));
    scrollToCursor_2818584038(self_2818589741, 3);
    updateTargetColumn_2818584579(self_2818589741, 3);

  
}

function changeMoveJsWrapper_2818589737(self_2818589805, move_2818589806, which_2818589807, all_2818589808) {
    changeMove_2818589740(self_2818589805, move_2818589806, which_2818589807, all_2818589808);

  
}
editor_text_prototype.changeMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (changeMoveJsWrapper_2818589737(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function toSelection_2449474035(cursor_2449474036, default_2449474037, which_2449474038) {
  var result_2449474039 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (which_2449474038) {
    case 0:
      result_2449474039 = nimCopy(result_2449474039, default_2449474037, NTI2449473548);
      break BeforeRet;
      break;
    case 1:
      var colontmp__2818589944 = nimCopy(null, cursor_2449474036, NTI2449473546);
      var colontmp__2818589945 = nimCopy(null, cursor_2449474036, NTI2449473546);
      result_2449474039 = nimCopy(result_2449474039, {Field0: nimCopy(null, colontmp__2818589944, NTI2449473546), Field1: nimCopy(null, colontmp__2818589945, NTI2449473546)}, NTI2449473548);
      break BeforeRet;
      break;
    case 2:
      var colontmp__2818589946 = nimCopy(null, cursor_2449474036, NTI2449473546);
      var colontmp__2818589947 = nimCopy(null, default_2449474037.Field1, NTI2449473546);
      result_2449474039 = nimCopy(result_2449474039, {Field0: nimCopy(null, colontmp__2818589946, NTI2449473546), Field1: nimCopy(null, colontmp__2818589947, NTI2449473546)}, NTI2449473548);
      break BeforeRet;
      break;
    case 3:
      var colontmp__2818589948 = nimCopy(null, default_2449474037.Field0, NTI2449473546);
      var colontmp__2818589949 = nimCopy(null, cursor_2449474036, NTI2449473546);
      result_2449474039 = nimCopy(result_2449474039, {Field0: nimCopy(null, colontmp__2818589948, NTI2449473546), Field1: nimCopy(null, colontmp__2818589949, NTI2449473546)}, NTI2449473548);
      break BeforeRet;
      break;
    case 4:
      var colontmp__2818589950 = nimCopy(null, default_2449474037.Field1, NTI2449473546);
      var colontmp__2818589951 = nimCopy(null, cursor_2449474036, NTI2449473546);
      result_2449474039 = nimCopy(result_2449474039, {Field0: nimCopy(null, colontmp__2818589950, NTI2449473546), Field1: nimCopy(null, colontmp__2818589951, NTI2449473546)}, NTI2449473548);
      break BeforeRet;
      break;
    }
  };

  return result_2449474039;

}

function cursor_2818589217(self_2818589218, selection_2818589219, which_2818589220) {
  var result_2818589221 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (which_2818589220) {
    case 0:
      result_2818589221 = nimCopy(result_2818589221, cursor_2818589217(self_2818589218, selection_2818589219, getOption_2818583643(self_2818589218.editor, getContextWithMode_2818583609(self_2818589218, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473546);
      break BeforeRet;
      break;
    case 1:
      result_2818589221 = nimCopy(result_2818589221, selection_2818589219.Field1, NTI2449473546);
      break BeforeRet;
      break;
    case 2:
      result_2818589221 = nimCopy(result_2818589221, selection_2818589219.Field0, NTI2449473546);
      break BeforeRet;
      break;
    case 3:
    case 4:
      result_2818589221 = nimCopy(result_2818589221, selection_2818589219.Field1, NTI2449473546);
      break BeforeRet;
      break;
    }
  };

  return result_2818589221;

}

function moveLast_2818589837(self_2818589838, move_2818589839, which_2818589840, all_2818589841, count_2818589842) {
      move_2818589839 = nimCopy(null, move_2818589839, NTI33554449);
      
function HEX3Aanonymous_2818589843(s_2818589846) {
        var result_2818589849 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589849 = nimCopy(result_2818589849, toSelection_2449474035(getSelectionForMove_2818588998(self_2818589838, cursor_2818589217(self_2818589838, s_2818589846, which_2818589840), move_2818589839, count_2818589842).Field1, s_2818589846, getOption_2818583643(self_2818589838.editor, getContextWithMode_2818583609(self_2818589838, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473548);

        return result_2818589849;

      }
      
function HEX3Aanonymous_2818589866(s_2818589869) {
        var result_2818589872 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589872 = nimCopy(result_2818589872, toSelection_2449474035(getSelectionForMove_2818588998(self_2818589838, cursor_2818589217(self_2818589838, s_2818589869, which_2818589840), move_2818589839, count_2818589842).Field1, s_2818589869, which_2818589840), NTI2449473548);

        return result_2818589872;

      }

    switch (which_2818589840) {
    case 0:
      selectionsHEX3D_2818573083(self_2818589838, mapAllOrLast_2818589641(selections_2818572802(self_2818589838), all_2818589841, HEX3Aanonymous_2818589843));
      break;
    default: 
      selectionsHEX3D_2818573083(self_2818589838, mapAllOrLast_2818589641(selections_2818572802(self_2818589838), all_2818589841, HEX3Aanonymous_2818589866));
      break;
    }
    scrollToCursor_2818584038(self_2818589838, which_2818589840);
    updateTargetColumn_2818584579(self_2818589838, which_2818589840);

  
}

function moveLastJsWrapper_2818589834(self_2818589911, move_2818589912, which_2818589913, all_2818589914, count_2818589915) {
    moveLast_2818589837(self_2818589911, move_2818589912, which_2818589913, all_2818589914, count_2818589915);

  
}
editor_text_prototype.moveLast = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveLastJsWrapper_2818589834(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function moveFirst_2818589957(self_2818589958, move_2818589959, which_2818589960, all_2818589961, count_2818589962) {
      move_2818589959 = nimCopy(null, move_2818589959, NTI33554449);
      
function HEX3Aanonymous_2818589963(s_2818589966) {
        var result_2818589969 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589969 = nimCopy(result_2818589969, toSelection_2449474035(getSelectionForMove_2818588998(self_2818589958, cursor_2818589217(self_2818589958, s_2818589966, which_2818589960), move_2818589959, count_2818589962).Field0, s_2818589966, getOption_2818583643(self_2818589958.editor, getContextWithMode_2818583609(self_2818589958, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473548);

        return result_2818589969;

      }
      
function HEX3Aanonymous_2818589986(s_2818589989) {
        var result_2818589992 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589992 = nimCopy(result_2818589992, toSelection_2449474035(getSelectionForMove_2818588998(self_2818589958, cursor_2818589217(self_2818589958, s_2818589989, which_2818589960), move_2818589959, count_2818589962).Field0, s_2818589989, which_2818589960), NTI2449473548);

        return result_2818589992;

      }

    switch (which_2818589960) {
    case 0:
      selectionsHEX3D_2818573083(self_2818589958, mapAllOrLast_2818589641(selections_2818572802(self_2818589958), all_2818589961, HEX3Aanonymous_2818589963));
      break;
    default: 
      selectionsHEX3D_2818573083(self_2818589958, mapAllOrLast_2818589641(selections_2818572802(self_2818589958), all_2818589961, HEX3Aanonymous_2818589986));
      break;
    }
    scrollToCursor_2818584038(self_2818589958, which_2818589960);
    updateTargetColumn_2818584579(self_2818589958, which_2818589960);

  
}

function moveFirstJsWrapper_2818589954(self_2818590031, move_2818590032, which_2818590033, all_2818590034, count_2818590035) {
    moveFirst_2818589957(self_2818590031, move_2818590032, which_2818590033, all_2818590034, count_2818590035);

  
}
editor_text_prototype.moveFirst = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveFirstJsWrapper_2818589954(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function some_2818590072(val_2818590074) {
  var result_2818590075 = ({val: ({impl: null}), has: false});

    result_2818590075.has = true;
    result_2818590075.val = nimCopy(result_2818590075.val, val_2818590074, NTI2852126723);

  return result_2818590075;

}

function isNone_2818580300(self_2818580302) {
  var result_2818580303 = false;

    result_2818580303 = !(self_2818580302.has);

  return result_2818580303;

}

function clear_2818580361(t_2818580364) {
    Label1: {
      var i_2818580433 = 0;
      var colontmp__2818590136 = 0;
      colontmp__2818590136 = (t_2818580364.data).length;
      var i_2818590137 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818590137 < colontmp__2818590136)) break Label3;
            i_2818580433 = i_2818590137;
            t_2818580364.data[chckIndx(i_2818580433, 0, (t_2818580364.data).length - 1)].Field0 = 0;
            t_2818580364.data[chckIndx(i_2818580433, 0, (t_2818580364.data).length - 1)].Field1 = 0;
            t_2818580364.data[chckIndx(i_2818580433, 0, (t_2818580364.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            i_2818590137 = addInt(i_2818590137, 1);
          }
      };
    };
    t_2818580364.counter = 0;

  
}

function findBounds_2852126727(text_2852126728, regex_2852126729, start_2852126730) {
  var result_2852126733 = {Field0: 0, Field1: 0};

  BeforeRet: {
    regex_2852126729.impl.lastIndex = 0;
    var bounds_2852126752 = ((regex_2852126729.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126728, HEX2EHEX2E_1040187488(start_2852126730, 1))))) || {indices: [[-1, 0]]}).indices[0];
    var colontmp__2818590139 = bounds_2852126752[chckIndx(0, 0, (bounds_2852126752).length - 1)];
    var colontmp__2818590140 = subInt(bounds_2852126752[chckIndx(1, 0, (bounds_2852126752).length - 1)], 1);
    result_2852126733 = nimCopy(result_2852126733, {Field0: colontmp__2818590139, Field1: colontmp__2818590140}, NTI2852126727);
    break BeforeRet;
  };

  return result_2852126733;

}

function get_2818580957(self_2818580959) {
  var result_2818580960 = null;

  BeforeRet: {
    if (isNone_2818580300(self_2818580959)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818580960 = self_2818580959.val;
    break BeforeRet;
  };

  return result_2818580960;

}

function mustRehash_2818581582(t_2818581584) {
  var result_2818581585 = false;

    if (!((t_2818581584.counter < (t_2818581584.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818581585 = ((mulInt((t_2818581584.data).length, 2) < mulInt(t_2818581584.counter, 3)) || (subInt((t_2818581584.data).length, t_2818581584.counter) < 4));

  return result_2818581585;

}

function rawInsert_2818582191(t_2818582195, data_2818582196, data_2818582196_Idx, key_2818582197, val_2818582198, hc_2818582199, h_2818582200) {
    data_2818582196[data_2818582196_Idx][chckIndx(h_2818582200, 0, (data_2818582196[data_2818582196_Idx]).length - 1)].Field1 = key_2818582197;
    data_2818582196[data_2818582196_Idx][chckIndx(h_2818582200, 0, (data_2818582196[data_2818582196_Idx]).length - 1)].Field2 = nimCopy(null, val_2818582198, NTI2818572535);
    data_2818582196[data_2818582196_Idx][chckIndx(h_2818582200, 0, (data_2818582196[data_2818582196_Idx]).length - 1)].Field0 = hc_2818582199;

  
}

function enlarge_2818581785(t_2818581788) {
    var n_2818581791 = [];
    n_2818581791 = new Array(chckRange(mulInt((t_2818581788.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818581788.data).length, 2), 0, 2147483647) ; ++i) { n_2818581791[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2818581788.data; t_2818581788.data = n_2818581791; n_2818581791 = Temporary1;    Label2: {
      var i_2818581871 = 0;
      var colontmp__2818590143 = 0;
      colontmp__2818590143 = (n_2818581791).length - 1;
      var res_2818590144 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818590144 <= colontmp__2818590143)) break Label4;
            i_2818581871 = res_2818590144;
            var eh_2818581949 = n_2818581791[chckIndx(i_2818581871, 0, (n_2818581791).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818581949)) {
            var j_2818581953 = (eh_2818581949 & (t_2818581788.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818581788.data[chckIndx(j_2818581953, 0, (t_2818581788.data).length - 1)].Field0)) break Label6;
                  j_2818581953 = nextTry_1308622883(j_2818581953, (t_2818581788.data).length - 1);
                }
            };
            rawInsert_2818582191(t_2818581788, t_2818581788, "data", n_2818581791[chckIndx(i_2818581871, 0, (n_2818581791).length - 1)].Field1, n_2818581791[chckIndx(i_2818581871, 0, (n_2818581791).length - 1)].Field2, eh_2818581949, j_2818581953);
            }
            
            res_2818590144 = addInt(res_2818590144, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818582432(t_2818582435, key_2818582436, hc_2818582437) {
  var result_2818582438 = 0;

  BeforeRet: {
    if (((t_2818582435.data).length == 0)) {
    result_2818582438 = -1;
    break BeforeRet;
    }
    
    var h_2818582505 = (hc_2818582437 & (t_2818582435.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818582435.data[chckIndx(h_2818582505, 0, (t_2818582435.data).length - 1)].Field0)) break Label2;
          if (((t_2818582435.data[chckIndx(h_2818582505, 0, (t_2818582435.data).length - 1)].Field0 == hc_2818582437) && (t_2818582435.data[chckIndx(h_2818582505, 0, (t_2818582435.data).length - 1)].Field1 == key_2818582436))) {
          result_2818582438 = h_2818582505;
          break BeforeRet;
          }
          
          h_2818582505 = nextTry_1308622883(h_2818582505, (t_2818582435.data).length - 1);
        }
    };
    result_2818582438 = subInt(-1, h_2818582505);
  };

  return result_2818582438;

}

function HEX5BHEX5DHEX3D_2818581030(t_2818581033, key_2818581034, val_2818581035) {
    if (((t_2818581033.data).length == 0)) {
    var correctSizeHEX60gensym147_2818581100 = slotsNeeded_1308622891(32);
    t_2818581033.counter = 0;
    t_2818581033.data = new Array(chckRange(correctSizeHEX60gensym147_2818581100, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym147_2818581100, 0, 2147483647) ; ++i) { t_2818581033.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2818581105 = [0];
    var index_2818581435 = rawGet_2818581106(t_2818581033, key_2818581034, hc_2818581105, 0);
    if ((0 <= index_2818581435)) {
    t_2818581033.data[chckIndx(index_2818581435, 0, (t_2818581033.data).length - 1)].Field2 = nimCopy(null, val_2818581035, NTI2818572535);
    }
    else {
      if (((t_2818581033.data).length == 0)) {
      var correctSizeHEX60gensym152_2818581577 = slotsNeeded_1308622891(32);
      t_2818581033.counter = 0;
      t_2818581033.data = new Array(chckRange(correctSizeHEX60gensym152_2818581577, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym152_2818581577, 0, 2147483647) ; ++i) { t_2818581033.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2818581582(t_2818581033)) {
      enlarge_2818581785(t_2818581033);
      index_2818581435 = rawGetKnownHC_2818582432(t_2818581033, key_2818581034, hc_2818581105[0]);
      }
      
      index_2818581435 = subInt(-1, index_2818581435);
      rawInsert_2818582191(t_2818581033, t_2818581033, "data", key_2818581034, val_2818581035, hc_2818581105[0], index_2818581435);
      t_2818581033.counter = addInt(t_2818581033.counter, 1);
    }
    

  
}

function isEmpty_1308622877(hcode_1308622878) {
  var result_1308622879 = false;

    result_1308622879 = (hcode_1308622878 == 0);

  return result_1308622879;

}

function del_2818582798(t_2818582801, key_2818582802) {
    var hc_2818582803 = [0];
    var i_2818582810 = rawGet_2818581106(t_2818582801, key_2818582802, hc_2818582803, 0);
    var mskHEX60gensym36_2818582814 = (t_2818582801.data).length - 1;
    if ((0 <= i_2818582810)) {
    t_2818582801.counter = subInt(t_2818582801.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2818582821 = i_2818582810;
            var rHEX60gensym36_2818582822 = jHEX60gensym36_2818582821;
            t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field0 = 0;
            t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field1 = 0;
            t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2818582810 = (addInt(i_2818582810, 1) & mskHEX60gensym36_2818582814);
                  if (isEmpty_1308622877(t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2818582822 = (t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field0 & mskHEX60gensym36_2818582814);
                  if (!(((((rHEX60gensym36_2818582822 <= i_2818582810) && (jHEX60gensym36_2818582821 < rHEX60gensym36_2818582822)) || ((jHEX60gensym36_2818582821 < rHEX60gensym36_2818582822) && (i_2818582810 < jHEX60gensym36_2818582821))) || ((i_2818582810 < jHEX60gensym36_2818582821) && (rHEX60gensym36_2818582822 <= i_2818582810))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2818582801.data[chckIndx(jHEX60gensym36_2818582821, 0, (t_2818582801.data).length - 1)] = nimCopy(t_2818582801.data[chckIndx(jHEX60gensym36_2818582821, 0, (t_2818582801.data).length - 1)], t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)], NTI2818572547);
          }
      };
    };
    }
    

  
}

function updateSearchResults_2818580294(self_2818580295) {
  BeforeRet: {
    if (isNone_2818580300(self_2818580295.searchRegex)) {
    clear_2818580361(self_2818580295.searchResults);
    markDirty_2415919143(self_2818580295);
    break BeforeRet;
    }
    
    Label1: {
      var i_2818580937 = 0;
      var line_2818580938 = [];
      var i_2818590132 = 0;
      var L_2818590133 = (self_2818580295.document.lines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818590132 < L_2818590133)) break Label3;
            i_2818580937 = i_2818590132;
            line_2818580938 = self_2818580295.document.lines[chckIndx(i_2818590132, 0, (self_2818580295.document.lines).length - 1)];
            var selections_2818580943 = [];
            var start_2818580944 = 0;
            Label4: {
                Label5: while (true) {
                if (!(start_2818580944 < (line_2818580938).length)) break Label5;
                  var bounds_2818580969 = findBounds_2852126727(line_2818580938, get_2818580957(self_2818580295.searchRegex), start_2818580944);
                  if ((bounds_2818580969.Field0 == -1)) {
                  break Label4;
                  }
                  
                  selections_2818580943.push({Field0: {Field0: i_2818580937, Field1: bounds_2818580969.Field0}, Field1: {Field0: i_2818580937, Field1: addInt(bounds_2818580969.Field1, 1)}});;
                  start_2818580944 = nimMax(addInt(bounds_2818580969.Field1, 1), addInt(start_2818580944, 1));
                }
            };
            if ((0 < (selections_2818580943).length)) {
            HEX5BHEX5DHEX3D_2818581030(self_2818580295.searchResults, i_2818580937, selections_2818580943);
            }
            else {
            del_2818582798(self_2818580295.searchResults, i_2818580937);
            }
            
            i_2818590132 = addInt(i_2818590132, 1);
            if (!(((self_2818580295.document.lines).length == L_2818590133))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    markDirty_2415919143(self_2818580295);
  };

  
}

function setSearchQuery_2818590069(self_2818590070, query_2818590071) {
    self_2818590070.searchQuery = nimCopy(null, query_2818590071, NTI33554449);
    self_2818590070.searchRegex = nimCopy(self_2818590070.searchRegex, some_2818590072(re_2852126779(query_2818590071)), NTI2818572524);
    updateSearchResults_2818580294(self_2818590070);

  
}

function setSearchQueryJsWrapper_2818590066(self_2818590114, query_2818590115) {
    setSearchQuery_2818590069(self_2818590114, query_2818590115);

  
}
editor_text_prototype.setSearchQuery = function(query_ /* : string */) { return (setSearchQueryJsWrapper_2818590066(this, query_ == undefined ? undefined : cstrToNimstr(query_)));};

function setSearchQueryFromMove_2818590154(self_2818590155, move_2818590156, count_2818590157) {
    var selection_2818590158 = getSelectionForMove_2818588998(self_2818590155, selection_2818572805(self_2818590155).Field1, move_2818590156, count_2818590157);
    selectionHEX3D_2818572811(self_2818590155, selection_2818590158);
    setSearchQuery_2818590069(self_2818590155, contentString_2818574091(self_2818590155.document, selection_2818590158));

  
}

function setSearchQueryFromMoveJsWrapper_2818590151(self_2818590188, move_2818590189, count_2818590190) {
    setSearchQueryFromMove_2818590154(self_2818590188, move_2818590189, count_2818590190);

  
}
editor_text_prototype.setSearchQueryFromMove = function(move_ /* : string */, count_ /* : int */) { return (setSearchQueryFromMoveJsWrapper_2818590151(this, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function none_2936012824() {
  var result_2936012830 = ({val: null});

  return result_2936012830;

}

function isSome_2818579157(self_2818579159) {
  var result_2818579160 = false;

    result_2818579160 = !((self_2818579159.val == null));

  return result_2818579160;

}
async function getOrCreateLanguageServer_2936012808(languageId_2936012809, filename_2936012810) {
  var result_2936012814 = null;

  BeforeRet: {
    result_2936012814 = none_2936012824();
    break BeforeRet;
  };

  return result_2936012814;

}
async function saveTempFile_2818579064(self_2818579065, filename_2818579066) {
  var result_2818579068 = null;

  BeforeRet: {
    result_2818579068 = undefined;
    break BeforeRet;
  };

  return result_2818579068;

}

function hash_2919236192(x_2919236194) {
  var result_2919236195 = 0;

    result_2919236195 = hashWangYi1_1325400244(x_2919236194);

  return result_2919236195;

}

function rawGet_2919236185(t_2919236188, key_2919236189, hc_2919236190, hc_2919236190_Idx) {
  var result_2919236191 = 0;

  BeforeRet: {
    hc_2919236190[hc_2919236190_Idx] = hash_2919236192(key_2919236189);
    if ((hc_2919236190[hc_2919236190_Idx] == 0)) {
    hc_2919236190[hc_2919236190_Idx] = 314159265;
    }
    
    if (((t_2919236188.data).length == 0)) {
    result_2919236191 = -1;
    break BeforeRet;
    }
    
    var h_2919236254 = (hc_2919236190[hc_2919236190_Idx] & (t_2919236188.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0)) break Label2;
          if (((t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0 == hc_2919236190[hc_2919236190_Idx]) && (t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field1 == key_2919236189))) {
          result_2919236191 = h_2919236254;
          break BeforeRet;
          }
          
          h_2919236254 = nextTry_1308622883(h_2919236254, (t_2919236188.data).length - 1);
        }
    };
    result_2919236191 = subInt(-1, h_2919236254);
  };

  return result_2919236191;

}

function mustRehash_2919236752(t_2919236754) {
  var result_2919236755 = false;

    if (!((t_2919236754.counter < (t_2919236754.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919236755 = ((mulInt((t_2919236754.data).length, 2) < mulInt(t_2919236754.counter, 3)) || (subInt((t_2919236754.data).length, t_2919236754.counter) < 4));

  return result_2919236755;

}

function rawInsert_2919237201(t_2919237205, data_2919237206, data_2919237206_Idx, key_2919237207, val_2919237208, hc_2919237209, h_2919237210) {
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field1 = key_2919237207;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field2 = val_2919237208;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field0 = hc_2919237209;

  
}

function enlarge_2919236907(t_2919236910) {
    var n_2919236913 = [];
    n_2919236913 = new Array(chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647) ; ++i) { n_2919236913[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2919236910.data; t_2919236910.data = n_2919236913; n_2919236913 = Temporary1;    Label2: {
      var i_2919236977 = 0;
      var colontmp__2818592711 = 0;
      colontmp__2818592711 = (n_2919236913).length - 1;
      var res_2818592712 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818592712 <= colontmp__2818592711)) break Label4;
            i_2919236977 = res_2818592712;
            var eh_2919237031 = n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919237031)) {
            var j_2919237035 = (eh_2919237031 & (t_2919236910.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919236910.data[chckIndx(j_2919237035, 0, (t_2919236910.data).length - 1)].Field0)) break Label6;
                  j_2919237035 = nextTry_1308622883(j_2919237035, (t_2919236910.data).length - 1);
                }
            };
            rawInsert_2919237201(t_2919236910, t_2919236910, "data", n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field1, n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field2, eh_2919237031, j_2919237035);
            }
            
            res_2818592712 = addInt(res_2818592712, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919237388(t_2919237391, key_2919237392, hc_2919237393) {
  var result_2919237394 = 0;

  BeforeRet: {
    if (((t_2919237391.data).length == 0)) {
    result_2919237394 = -1;
    break BeforeRet;
    }
    
    var h_2919237445 = (hc_2919237393 & (t_2919237391.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0)) break Label2;
          if (((t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0 == hc_2919237393) && (t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field1 == key_2919237392))) {
          result_2919237394 = h_2919237445;
          break BeforeRet;
          }
          
          h_2919237445 = nextTry_1308622883(h_2919237445, (t_2919237391.data).length - 1);
        }
    };
    result_2919237394 = subInt(-1, h_2919237445);
  };

  return result_2919237394;

}

function HEX5BHEX5DHEX3D_2919236579(t_2919236582, key_2919236583, val_2919236584) {
    if (((t_2919236582.data).length == 0)) {
    var correctSizeHEX60gensym12_2919236633 = slotsNeeded_1308622891(32);
    t_2919236582.counter = 0;
    t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2919236638 = [0];
    var index_2919236645 = rawGet_2919236185(t_2919236582, key_2919236583, hc_2919236638, 0);
    if ((0 <= index_2919236645)) {
    t_2919236582.data[chckIndx(index_2919236645, 0, (t_2919236582.data).length - 1)].Field2 = val_2919236584;
    }
    else {
      if (((t_2919236582.data).length == 0)) {
      var correctSizeHEX60gensym15_2919236747 = slotsNeeded_1308622891(32);
      t_2919236582.counter = 0;
      t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2919236752(t_2919236582)) {
      enlarge_2919236907(t_2919236582);
      index_2919236645 = rawGetKnownHC_2919237388(t_2919236582, key_2919236583, hc_2919236638[0]);
      }
      
      index_2919236645 = subInt(-1, index_2919236645);
      rawInsert_2919237201(t_2919236582, t_2919236582, "data", key_2919236583, val_2919236584, hc_2919236638[0], index_2919236645);
      t_2919236582.counter = addInt(t_2919236582.counter, 1);
    }
    

  
}

function rawGet_2919235731(t_2919235734, key_2919235735, hc_2919235736, hc_2919235736_Idx) {
  var result_2919235737 = 0;

  BeforeRet: {
    hc_2919235736[hc_2919235736_Idx] = hash_1325400491(key_2919235735);
    if ((hc_2919235736[hc_2919235736_Idx] == 0)) {
    hc_2919235736[hc_2919235736_Idx] = 314159265;
    }
    
    if (((t_2919235734.data).length == 0)) {
    result_2919235737 = -1;
    break BeforeRet;
    }
    
    var h_2919235789 = (hc_2919235736[hc_2919235736_Idx] & (t_2919235734.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0)) break Label2;
          if (((t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0 == hc_2919235736[hc_2919235736_Idx]) && eqStrings(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field1, key_2919235735))) {
          result_2919235737 = h_2919235789;
          break BeforeRet;
          }
          
          h_2919235789 = nextTry_1308622883(h_2919235789, (t_2919235734.data).length - 1);
        }
    };
    result_2919235737 = subInt(-1, h_2919235789);
  };

  return result_2919235737;

}

function hasKey_2919235724(t_2919235727, key_2919235728) {
  var result_2919235729 = false;

    var hc_2919235730 = [0];
    result_2919235729 = (0 <= rawGet_2919235731(t_2919235727, key_2919235728, hc_2919235730, 0));

  return result_2919235729;

}

function contains_2919235718(t_2919235721, key_2919235722) {
  var result_2919235723 = false;

  BeforeRet: {
    result_2919235723 = hasKey_2919235724(t_2919235721, key_2919235722);
    break BeforeRet;
  };

  return result_2919235723;

}

function HEX5BHEX5D_2919236023(t_2919236026, key_2919236027) {
  var result_2919236028 = null;
  var result_2919236028_Idx = 0;

    var hcHEX60gensym22_2919236029 = [0];
    var indexHEX60gensym22_2919236036 = rawGet_2919235731(t_2919236026, key_2919236027, hcHEX60gensym22_2919236029, 0);
    if ((0 <= indexHEX60gensym22_2919236036)) {
    result_2919236028 = t_2919236026.data[chckIndx(indexHEX60gensym22_2919236036, 0, (t_2919236026.data).length - 1)]; result_2919236028_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_2919236027);
    }
    

  return [result_2919236028, result_2919236028_Idx];

}

function mustRehash_2919237952(t_2919237954) {
  var result_2919237955 = false;

    if (!((t_2919237954.counter < (t_2919237954.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919237955 = ((mulInt((t_2919237954.data).length, 2) < mulInt(t_2919237954.counter, 3)) || (subInt((t_2919237954.data).length, t_2919237954.counter) < 4));

  return result_2919237955;

}

function rawInsert_2919238401(t_2919238405, data_2919238406, data_2919238406_Idx, key_2919238407, val_2919238408, hc_2919238409, h_2919238410) {
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field1 = nimCopy(null, key_2919238407, NTI33554449);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field2 = nimCopy(null, val_2919238408, NTI2919235613);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field0 = hc_2919238409;

  
}

function enlarge_2919238107(t_2919238110) {
    var n_2919238113 = [];
    n_2919238113 = new Array(chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647) ; ++i) { n_2919238113[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_2919238110.data; t_2919238110.data = n_2919238113; n_2919238113 = Temporary1;    Label2: {
      var i_2919238177 = 0;
      var colontmp__2818592718 = 0;
      colontmp__2818592718 = (n_2919238113).length - 1;
      var res_2818592719 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818592719 <= colontmp__2818592718)) break Label4;
            i_2919238177 = res_2818592719;
            var eh_2919238231 = n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919238231)) {
            var j_2919238235 = (eh_2919238231 & (t_2919238110.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919238110.data[chckIndx(j_2919238235, 0, (t_2919238110.data).length - 1)].Field0)) break Label6;
                  j_2919238235 = nextTry_1308622883(j_2919238235, (t_2919238110.data).length - 1);
                }
            };
            rawInsert_2919238401(t_2919238110, t_2919238110, "data", n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field1, n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field2, eh_2919238231, j_2919238235);
            }
            
            res_2818592719 = addInt(res_2818592719, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919238570(t_2919238573, key_2919238574, hc_2919238575) {
  var result_2919238576 = 0;

  BeforeRet: {
    if (((t_2919238573.data).length == 0)) {
    result_2919238576 = -1;
    break BeforeRet;
    }
    
    var h_2919238627 = (hc_2919238575 & (t_2919238573.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0)) break Label2;
          if (((t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0 == hc_2919238575) && eqStrings(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field1, key_2919238574))) {
          result_2919238576 = h_2919238627;
          break BeforeRet;
          }
          
          h_2919238627 = nextTry_1308622883(h_2919238627, (t_2919238573.data).length - 1);
        }
    };
    result_2919238576 = subInt(-1, h_2919238627);
  };

  return result_2919238576;

}

function HEX5BHEX5DHEX3D_2919237779(t_2919237782, key_2919237783, val_2919237784) {
    if (((t_2919237782.data).length == 0)) {
    var correctSizeHEX60gensym24_2919237833 = slotsNeeded_1308622891(32);
    t_2919237782.counter = 0;
    t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_2919237838 = [0];
    var index_2919237845 = rawGet_2919235731(t_2919237782, key_2919237783, hc_2919237838, 0);
    if ((0 <= index_2919237845)) {
    t_2919237782.data[chckIndx(index_2919237845, 0, (t_2919237782.data).length - 1)].Field2 = nimCopy(null, val_2919237784, NTI2919235613);
    }
    else {
      if (((t_2919237782.data).length == 0)) {
      var correctSizeHEX60gensym27_2919237947 = slotsNeeded_1308622891(32);
      t_2919237782.counter = 0;
      t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_2919237952(t_2919237782)) {
      enlarge_2919238107(t_2919237782);
      index_2919237845 = rawGetKnownHC_2919238570(t_2919237782, key_2919237783, hc_2919237838[0]);
      }
      
      index_2919237845 = subInt(-1, index_2919237845);
      rawInsert_2919238401(t_2919237782, t_2919237782, "data", key_2919237783, val_2919237784, hc_2919237838[0], index_2919237845);
      t_2919237782.counter = addInt(t_2919237782.counter, 1);
    }
    

  
}

function addOnRequestSaveHandler_2919236526(self_2919236527, filename_2919236528, handler_2919236532) {
    var Temporary1;

  var result_2919236533 = 0;

    result_2919236533 = handleIdCounter_2919235663[0];
    handleIdCounter_2919235663[0] = addInt(handleIdCounter_2919235663[0], 1);
    HEX5BHEX5DHEX3D_2919236579(self_2919236527.onRequestSave, result_2919236533, handler_2919236532);
    if (contains_2919235718(self_2919236527.onRequestSaveIndex, filename_2919236528)) {
    (Temporary1 = HEX5BHEX5D_2919236023(self_2919236527.onRequestSaveIndex, filename_2919236528), Temporary1)[0][Temporary1[1]].push(result_2919236533);;
    }
    else {
    HEX5BHEX5DHEX3D_2919237779(self_2919236527.onRequestSaveIndex, filename_2919236528, [result_2919236533]);
    }
    

  return result_2919236533;

}

function isNone_2818579185(self_2818579187) {
  var result_2818579188 = false;

    result_2818579188 = (self_2818579187.val == null);

  return result_2818579188;

}

function get_2818579177(self_2818579179) {
  var result_2818579180 = null;
  var result_2818579180_Idx = 0;

  BeforeRet: {
    if (isNone_2818579185(self_2818579179)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818579180 = self_2818579179; result_2818579180_Idx = "val";
    break BeforeRet;
  };

  return [result_2818579180, result_2818579180_Idx];

}
async function getLanguageServer_2818590212(self_2818590213) {
    var Temporary1;
      var Temporary2;
      async function HEX3Aanonymous_2818590286(targetFilename_2818590287) {
        var result_2818590289 = null;

        BeforeRet: {
          (await saveTempFile_2818579064(self_2818590213.document, targetFilename_2818590287));
          result_2818590289 = undefined;
          break BeforeRet;
        };

        return result_2818590289;

      }
      var Temporary3;

  var result_2818590216 = null;

  BeforeRet: {
      var oHEX60gensym791_2818590228 = getLanguageForFile_2902458372(self_2818590213.document.filename);
      if (!isSome_2348810304(oHEX60gensym791_2818590228)) Temporary2 = false; else {        var languageId_2818590251 = nimCopy(null, get_2818578907(oHEX60gensym791_2818590228), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818590251;
    }
    else {
      result_2818590216 = none_2936012824();
      break BeforeRet;
    }
    
    var languageId_2818590262 = nimCopy(null, Temporary1, NTI33554449);
    if (isSome_2818579157(self_2818590213.document.languageServer)) {
    result_2818590216 = self_2818590213.document.languageServer;
    break BeforeRet;
    }
    else {
      self_2818590213.document.languageServer = nimCopy(self_2818590213.document.languageServer, (await getOrCreateLanguageServer_2936012808(languageId_2818590262, self_2818590213.document.filename)), NTI2818572486);
      if (isSome_2818579157(self_2818590213.document.languageServer)) {
      var callback_2818590300 = HEX3Aanonymous_2818590286;
      self_2818590213.document.onRequestSaveHandle = addOnRequestSaveHandler_2919236526((Temporary3 = get_2818579177(self_2818590213.document.languageServer), Temporary3)[0][Temporary3[1]], self_2818590213.document.filename, callback_2818590300);
      }
      
      result_2818590216 = self_2818590213.document.languageServer;
      break BeforeRet;
    }
    
  };

  return result_2818590216;

}

function get_2818590361(self_2818590363) {
  var result_2818590364 = null;

    if (isNone_2818579185(self_2818590363)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818590364 = self_2818590363["val"];

  return result_2818590364;

}

function isSome_2818590391(self_2818590393) {
  var result_2818590394 = false;

    result_2818590394 = self_2818590393.has;

  return result_2818590394;

}

function isNone_2818590416(self_2818590418) {
  var result_2818590419 = false;

    result_2818590419 = !(self_2818590418.has);

  return result_2818590419;

}

function get_2818590408(self_2818590410) {
  var result_2818590411 = ({location: {Field0: 0, Field1: 0}, filename: []});

    if (isNone_2818590416(self_2818590410)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818590411 = self_2818590410.val;

  return result_2818590411;

}
async function gotoDefinitionAsync_2818590321(self_2818590322) {
  var result_2818590324 = null;

  BeforeRet: {
    var languageServer_2818590334 = (await getLanguageServer_2818590212(self_2818590322));
    if (isNone_2818579185(languageServer_2818590334)) {
    result_2818590324 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2818579157(languageServer_2818590334)) {
    var definition_2818590386 = (await getDefinition_2919235651(get_2818590361(languageServer_2818590334), self_2818590322.document.filename, selection_2818572805(self_2818590322).Field1));
    if (isSome_2818590391(definition_2818590386)) {
    selectionHEX3D_2818572811(self_2818590322, toSelection_2449474032(get_2818590408(definition_2818590386).location));
    scrollToCursor_2818584038(self_2818590322, 0);
    }
    
    }
    
    result_2818590324 = undefined;
    break BeforeRet;
  };

  return result_2818590324;

}

function gotoDefinition_2818592670(self_2818592671) {
    var _ = gotoDefinitionAsync_2818590321(self_2818592671);

  
}

function gotoDefinitionJsWrapper_2818592667(self_2818592699) {
    gotoDefinition_2818592670(self_2818592699);

  
}
editor_text_prototype.gotoDefinition = function() { return (gotoDefinitionJsWrapper_2818592667(this));};

function slotsNeeded_1828716594(count_1828716595) {
  var result_1828716596 = 0;

    result_1828716596 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1828716595, 3), 2), 4));

  return result_1828716596;

}

function init_2818590464(s_2818590466, initialSize_2818590467) {
    var correctSizeHEX60gensym802_2818590469 = slotsNeeded_1828716594(chckRange(initialSize_2818590467, 0, 2147483647));
    s_2818590466.counter = 0;
    s_2818590466.data = new Array(chckRange(correctSizeHEX60gensym802_2818590469, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym802_2818590469, 0, 2147483647) ; ++i) { s_2818590466.data[i] = {Field0: 0, Field1: []}; }
  
}

function initHashSet_2818590452(initialSize_2818590454) {
  var result_2818590459 = [({data: [], counter: 0})];

    init_2818590464(result_2818590459[0], initialSize_2818590454);

  return result_2818590459[0];

}

function allCharsInSet_855639569(s_855639570, theSet_855639571) {
  var result_855639572 = false;

  BeforeRet: {
    Label1: {
      var c_855639573 = 0;
      var i_2818592792 = 0;
      var L_2818592793 = (s_855639570).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818592792 < L_2818592793)) break Label3;
            c_855639573 = s_855639570[chckIndx(i_2818592792, 0, (s_855639570).length - 1)];
            if (!((theSet_855639571[c_855639573] != undefined))) {
            result_855639572 = false;
            break BeforeRet;
            }
            
            i_2818592792 = addInt(i_2818592792, 1);
            if (!(((s_855639570).length == L_2818592793))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_855639572 = true;
    break BeforeRet;
  };

  return result_855639572;

}

function nsuIsEmptyOrWhitespace(s_855640546) {
  var result_855640547 = false;

    result_855640547 = allCharsInSet_855639569(s_855640546, ConstSet58);

  return result_855640547;

}

function nsuIsAlphaAsciiChar(c_855638054) {
  var result_855638055 = false;

  BeforeRet: {
    result_855638055 = (ConstSet59[c_855638054] != undefined);
    break BeforeRet;
  };

  return result_855638055;

}

function isFilled_1828716583(hcode_1828716584) {
  var result_1828716585 = false;

    result_1828716585 = !((hcode_1828716584 == 0));

  return result_1828716585;

}

function nextTry_1828716586(h_1828716587, maxHash_1828716588) {
  var result_1828716589 = 0;

    result_1828716589 = (addInt(h_1828716587, 1) & maxHash_1828716588);

  return result_1828716589;

}

function rawGet_2818590676(t_2818590679, key_2818590680, hc_2818590681, hc_2818590681_Idx) {
  var result_2818590682 = 0;

  BeforeRet: {
    hc_2818590681[hc_2818590681_Idx] = hash_1325400491(key_2818590680);
    if ((hc_2818590681[hc_2818590681_Idx] == 0)) {
    hc_2818590681[hc_2818590681_Idx] = 314159265;
    }
    
    if (((t_2818590679.data).length == 0)) {
    result_2818590682 = -1;
    break BeforeRet;
    }
    
    var h_2818590749 = (hc_2818590681[hc_2818590681_Idx] & (t_2818590679.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2818590679.data[chckIndx(h_2818590749, 0, (t_2818590679.data).length - 1)].Field0)) break Label2;
          if (((t_2818590679.data[chckIndx(h_2818590749, 0, (t_2818590679.data).length - 1)].Field0 == hc_2818590681[hc_2818590681_Idx]) && eqStrings(t_2818590679.data[chckIndx(h_2818590749, 0, (t_2818590679.data).length - 1)].Field1, key_2818590680))) {
          result_2818590682 = h_2818590749;
          break BeforeRet;
          }
          
          h_2818590749 = nextTry_1828716586(h_2818590749, (t_2818590679.data).length - 1);
        }
    };
    result_2818590682 = subInt(-1, h_2818590749);
  };

  return result_2818590682;

}

function mustRehash_2818590994(t_2818590996) {
  var result_2818590997 = false;

    if (!((t_2818590996.counter < (t_2818590996.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818590997 = ((mulInt((t_2818590996.data).length, 2) < mulInt(t_2818590996.counter, 3)) || (subInt((t_2818590996.data).length, t_2818590996.counter) < 4));

  return result_2818590997;

}

function rawGetKnownHC_2818591519(t_2818591522, key_2818591523, hc_2818591524) {
  var result_2818591525 = 0;

  BeforeRet: {
    if (((t_2818591522.data).length == 0)) {
    result_2818591525 = -1;
    break BeforeRet;
    }
    
    var h_2818591592 = (hc_2818591524 & (t_2818591522.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2818591522.data[chckIndx(h_2818591592, 0, (t_2818591522.data).length - 1)].Field0)) break Label2;
          if (((t_2818591522.data[chckIndx(h_2818591592, 0, (t_2818591522.data).length - 1)].Field0 == hc_2818591524) && eqStrings(t_2818591522.data[chckIndx(h_2818591592, 0, (t_2818591522.data).length - 1)].Field1, key_2818591523))) {
          result_2818591525 = h_2818591592;
          break BeforeRet;
          }
          
          h_2818591592 = nextTry_1828716586(h_2818591592, (t_2818591522.data).length - 1);
        }
    };
    result_2818591525 = subInt(-1, h_2818591592);
  };

  return result_2818591525;

}

function rawInsert_2818591986(s_2818591988, data_2818591989, data_2818591989_Idx, key_2818591990, hc_2818591991, h_2818591992) {
    if (((data_2818591989[data_2818591989_Idx]).length == 0)) {
    var correctSizeHEX60gensym817_2818592057 = slotsNeeded_1828716594(64);
    s_2818591988.counter = 0;
    s_2818591988.data = new Array(chckRange(correctSizeHEX60gensym817_2818592057, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym817_2818592057, 0, 2147483647) ; ++i) { s_2818591988.data[i] = {Field0: 0, Field1: []}; }    }
    
    data_2818591989[data_2818591989_Idx][chckIndx(h_2818591992, 0, (data_2818591989[data_2818591989_Idx]).length - 1)].Field1 = nimCopy(null, key_2818591990, NTI33554449);
    data_2818591989[data_2818591989_Idx][chckIndx(h_2818591992, 0, (data_2818591989[data_2818591989_Idx]).length - 1)].Field0 = hc_2818591991;

  
}

function enlarge_2818591203(s_2818591205) {
    var n_2818591207 = [];
    n_2818591207 = new Array(chckRange(mulInt((s_2818591205.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2818591205.data).length, 2), 0, 2147483647) ; ++i) { n_2818591207[i] = {Field0: 0, Field1: []}; }    var Temporary1 = s_2818591205.data; s_2818591205.data = n_2818591207; n_2818591207 = Temporary1;    Label2: {
      var i_2818591287 = 0;
      var colontmp__2818592797 = 0;
      colontmp__2818592797 = (n_2818591207).length - 1;
      var res_2818592798 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818592798 <= colontmp__2818592797)) break Label4;
            i_2818591287 = res_2818592798;
            if (isFilled_1828716583(n_2818591207[chckIndx(i_2818591287, 0, (n_2818591207).length - 1)].Field0)) {
            var j_2818591827 = subInt(-1, rawGetKnownHC_2818591519(s_2818591205, n_2818591207[chckIndx(i_2818591287, 0, (n_2818591207).length - 1)].Field1, n_2818591207[chckIndx(i_2818591287, 0, (n_2818591207).length - 1)].Field0));
            rawInsert_2818591986(s_2818591205, s_2818591205, "data", n_2818591207[chckIndx(i_2818591287, 0, (n_2818591207).length - 1)].Field1, n_2818591207[chckIndx(i_2818591287, 0, (n_2818591207).length - 1)].Field0, j_2818591827);
            }
            
            res_2818592798 = addInt(res_2818592798, 1);
          }
      };
    };

  
}

function incl_2818590584(s_2818590586, key_2818590587) {
    if (((s_2818590586.data).length == 0)) {
    var correctSizeHEX60gensym808_2818590653 = slotsNeeded_1828716594(64);
    s_2818590586.counter = 0;
    s_2818590586.data = new Array(chckRange(correctSizeHEX60gensym808_2818590653, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym808_2818590653, 0, 2147483647) ; ++i) { s_2818590586.data[i] = {Field0: 0, Field1: []}; }    }
    
    var hc_2818590668 = [0];
    var index_2818590993 = rawGet_2818590676(s_2818590586, key_2818590587, hc_2818590668, 0);
    if ((index_2818590993 < 0)) {
    if (mustRehash_2818590994(s_2818590586)) {
    enlarge_2818591203(s_2818590586);
    index_2818590993 = rawGetKnownHC_2818591519(s_2818590586, key_2818590587, hc_2818590668[0]);
    }
    
    rawInsert_2818591986(s_2818590586, s_2818590586, "data", key_2818590587, hc_2818590668[0], subInt(-1, index_2818590993));
    s_2818590586.counter = addInt(s_2818590586.counter, 1);
    }
    

  
}

function len_2818592318(s_2818592320) {
  var result_2818592321 = 0;

    result_2818592321 = s_2818592320.counter;

  return result_2818592321;

}

function getCompletionsFromContent_2818590449(self_2818590450) {
  var result_2818590451 = [];

    var s_2818590493 = [initHashSet_2818590452(64)];
    Label1: {
      var li_2818590527 = 0;
      var line_2818590528 = null;
      var i_2818592777 = 0;
      var L_2818592778 = (self_2818590450.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818592777 < L_2818592778)) break Label3;
            li_2818590527 = i_2818592777;
            line_2818590528 = self_2818590450.lastRenderedLines[chckIndx(i_2818592777, 0, (self_2818590450.lastRenderedLines).length - 1)];
            Label4: {
              var i_2818590561 = 0;
              var part_2818590562 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_2818592773 = 0;
              var L_2818592774 = (line_2818590528.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2818592773 < L_2818592774)) break Label6;
                    i_2818590561 = i_2818592773;
                    part_2818590562 = nimCopy(part_2818590562, line_2818590528.parts[chckIndx(i_2818592773, 0, (line_2818590528.parts).length - 1)], NTI2818572422);
                    Label7: {
                      if (((50 < (part_2818590562.text).length) || nsuIsEmptyOrWhitespace(part_2818590562.text))) {
                      break Label7;
                      }
                      
                      var use_2818590563 = false;
                      Label8: {
                        var c_2818590564 = 0;
                        var i_2818592769 = 0;
                        var L_2818592770 = (part_2818590562.text).length;
                        Label9: {
                            Label10: while (true) {
                            if (!(i_2818592769 < L_2818592770)) break Label10;
                              c_2818590564 = part_2818590562.text[chckIndx(i_2818592769, 0, (part_2818590562.text).length - 1)];
                              if (((((nsuIsAlphaAsciiChar(c_2818590564) || (c_2818590564 == 95)) || (c_2818590564 == 64)) || (c_2818590564 == 36)) || (c_2818590564 == 35))) {
                              use_2818590563 = true;
                              break Label8;
                              }
                              
                              i_2818592769 = addInt(i_2818592769, 1);
                              if (!(((part_2818590562.text).length == L_2818592770))) {
                              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      if (!(use_2818590563)) {
                      break Label7;
                      }
                      
                      incl_2818590584(s_2818590493[0], part_2818590562.text);
                    };
                    i_2818592773 = addInt(i_2818592773, 1);
                    if (!(((line_2818590528.parts).length == L_2818592774))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_2818592777 = addInt(i_2818592777, 1);
            if (!(((self_2818590450.lastRenderedLines).length == L_2818592778))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label11: {
      var text_2818592553 = [];
      var length_2818592785 = len_2818592318(s_2818590493[0]);
      Label12: {
        var h_2818592787 = 0;
        var colontmp__2818592788 = 0;
        colontmp__2818592788 = (s_2818590493[0].data).length - 1;
        var res_2818592789 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_2818592789 <= colontmp__2818592788)) break Label14;
              h_2818592787 = res_2818592789;
              if (isFilled_1828716583(s_2818590493[0].data[chckIndx(h_2818592787, 0, (s_2818590493[0].data).length - 1)].Field0)) {
              text_2818592553 = s_2818590493[0].data[chckIndx(h_2818592787, 0, (s_2818590493[0].data).length - 1)].Field1;
              result_2818590451.push({name: nimCopy(null, text_2818592553, NTI33554449), scope: [100,111,99,117,109,101,110,116], location: {Field0: 0, Field1: 0}, filename: [], kind: 0, typ: [], doc: []});;
              if (!((len_2818592318(s_2818590493[0]) == length_2818592785))) {
              failedAssertImpl_268435515(makeNimstrLit("sets.nim(269, 13) `len(s) == length` the length of the HashSet changed while iterating over it"));
              }
              
              }
              
              res_2818592789 = addInt(res_2818592789, 1);
            }
        };
      };
    };

  return result_2818590451;

}
async function getCompletionsAsync_2818586067(self_2818586068) {
  var result_2818592589 = null;

  BeforeRet: {
    if (self_2818586068.disableCompletions) {
    result_2818592589 = undefined;
    break BeforeRet;
    }
    
    var languageServer_2818592599 = (await getLanguageServer_2818590212(self_2818586068));
    if (isSome_2818579157(languageServer_2818592599)) {
    self_2818586068.completions = nimCopy(null, (await getCompletions_2919235661(get_2818590361(languageServer_2818592599), self_2818586068.document.languageId, self_2818586068.document.filename, selection_2818572805(self_2818586068).Field1)), NTI2919235662);
    }
    else {
      self_2818586068.completions = nimCopy(null, getCompletionsFromContent_2818590449(self_2818586068), NTI2818583360);
    }
    
    self_2818586068.selectedCompletion = clamp_1660945119(self_2818586068.selectedCompletion, 0, (self_2818586068.completions).length - 1);
    if (((self_2818586068.completions).length == 0)) {
    self_2818586068.showCompletions = false;
    }
    else {
      self_2818586068.showCompletions = true;
    }
    
    markDirty_2415919143(self_2818586068);
    result_2818592589 = undefined;
    break BeforeRet;
  };

  return result_2818592589;

}

function getCompletions_2818592727(self_2818592728) {
    var _ = getCompletionsAsync_2818586067(self_2818592728);

  
}

function getCompletionsJsWrapper_2818592724(self_2818592756) {
    getCompletions_2818592727(self_2818592756);

  
}
editor_text_prototype.getCompletions = function() { return (getCompletionsJsWrapper_2818592724(this));};

function hideCompletions_2818592806(self_2818592807) {
    self_2818592807.showCompletions = false;
    markDirty_2415919143(self_2818592807);

  
}

function hideCompletionsJsWrapper_2818592803(self_2818592835) {
    hideCompletions_2818592806(self_2818592835);

  
}
editor_text_prototype.hideCompletions = function() { return (hideCompletionsJsWrapper_2818592803(this));};

function some_1191184367(val_1191184369) {
  var result_1191184370 = ({val: 0, has: false});

    result_1191184370.has = true;
    result_1191184370.val = val_1191184369;

  return result_1191184370;

}

function selectPrevCompletion_2818592849(self_2818592850) {
    if ((0 < (self_2818592850.completions).length)) {
    self_2818592850.selectedCompletion = clamp_1660945119(subInt(self_2818592850.selectedCompletion, 1), 0, subInt((self_2818592850.completions).length, 1));
    }
    else {
      self_2818592850.selectedCompletion = 0;
    }
    
    self_2818592850.scrollToCompletion = nimCopy(self_2818592850.scrollToCompletion, some_1191184367(self_2818592850.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2818592850);

  
}

function selectPrevCompletionJsWrapper_2818592846(self_2818592895) {
    selectPrevCompletion_2818592849(self_2818592895);

  
}
editor_text_prototype.selectPrevCompletion = function() { return (selectPrevCompletionJsWrapper_2818592846(this));};

function selectNextCompletion_2818592909(self_2818592910) {
    if ((0 < (self_2818592910.completions).length)) {
    self_2818592910.selectedCompletion = clamp_1660945119(addInt(self_2818592910.selectedCompletion, 1), 0, subInt((self_2818592910.completions).length, 1));
    }
    else {
      self_2818592910.selectedCompletion = 0;
    }
    
    self_2818592910.scrollToCompletion = nimCopy(self_2818592910.scrollToCompletion, some_1191184367(self_2818592910.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2818592910);

  
}

function selectNextCompletionJsWrapper_2818592906(self_2818592955) {
    selectNextCompletion_2818592909(self_2818592955);

  
}
editor_text_prototype.selectNextCompletion = function() { return (selectNextCompletionJsWrapper_2818592906(this));};

function addEscapedChar_33557761(s_33557762, s_33557762_Idx, c_33557763) {
    switch (c_33557763) {
    case 7:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,97]);;
      break;
    case 8:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,98]);;
      break;
    case 9:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,116]);;
      break;
    case 10:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,110]);;
      break;
    case 11:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,118]);;
      break;
    case 12:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,102]);;
      break;
    case 13:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,114]);;
      break;
    case 27:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,101]);;
      break;
    case 92:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,92]);;
      break;
    case 39:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,39]);;
      break;
    case 34:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557762[s_33557762_Idx], c_33557763);;
      break;
    default: 
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,120]);;
      var n_33557773 = c_33557763;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33557773 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33557773 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_1593835572(s_1593835574, s_1593835574_Idx, x_1593835575) {
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;
    Label1: {
      var c_1593835576 = 0;
      var i_2818593142 = 0;
      var L_2818593143 = (x_1593835575).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818593142 < L_2818593143)) break Label3;
            c_1593835576 = x_1593835575[chckIndx(i_2818593142, 0, (x_1593835575).length - 1)];
            if ((c_1593835576 <= 127)) {
            addEscapedChar_33557761(s_1593835574, s_1593835574_Idx, c_1593835576);
            }
            else {
            addChar(s_1593835574[s_1593835574_Idx], c_1593835576);;
            }
            
            i_2818593142 = addInt(i_2818593142, 1);
            if (!(((x_1593835575).length == L_2818593143))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;

  
}

function HEX24_2449473860(cursor_2449473861) {
  var result_2449473862 = [];

  BeforeRet: {
    result_2449473862 = nimCopy(null, (HEX24_369098760(cursor_2449473861.Field0) || []).concat([58] || [],HEX24_369098760(cursor_2449473861.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2449473862;

}

function addQuoted_2818593035(s_2818593037, s_2818593037_Idx, x_2818593038) {
    s_2818593037[s_2818593037_Idx].push.apply(s_2818593037[s_2818593037_Idx], HEX24_2449473860(x_2818593038));;

  
}

function addQuoted_2818593064(s_2818593066, s_2818593066_Idx, x_2818593067) {
    s_2818593066[s_2818593066_Idx].push.apply(s_2818593066[s_2818593066_Idx], reprEnum(x_2818593067, NTI2919235627));;

  
}

function HEX24_2818592985(x_2818592987) {
  var result_2818592988 = [[]];

    result_2818592988[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym872_2818592999 = 0;
    if ((0 < countHEX60gensym872_2818592999)) {
    result_2818592988[0].push.apply(result_2818592988[0], [44,32]);;
    }
    
    result_2818592988[0].push.apply(result_2818592988[0], [110,97,109,101]);;
    result_2818592988[0].push.apply(result_2818592988[0], [58,32]);;
    countHEX60gensym872_2818592999 += 1;
    addQuoted_1593835572(result_2818592988, 0, x_2818592987.name);
    if ((0 < countHEX60gensym872_2818592999)) {
    result_2818592988[0].push.apply(result_2818592988[0], [44,32]);;
    }
    
    result_2818592988[0].push.apply(result_2818592988[0], [115,99,111,112,101]);;
    result_2818592988[0].push.apply(result_2818592988[0], [58,32]);;
    countHEX60gensym872_2818592999 += 1;
    addQuoted_1593835572(result_2818592988, 0, x_2818592987.scope);
    if ((0 < countHEX60gensym872_2818592999)) {
    result_2818592988[0].push.apply(result_2818592988[0], [44,32]);;
    }
    
    result_2818592988[0].push.apply(result_2818592988[0], [108,111,99,97,116,105,111,110]);;
    result_2818592988[0].push.apply(result_2818592988[0], [58,32]);;
    countHEX60gensym872_2818592999 += 1;
    addQuoted_2818593035(result_2818592988, 0, x_2818592987.location);
    if ((0 < countHEX60gensym872_2818592999)) {
    result_2818592988[0].push.apply(result_2818592988[0], [44,32]);;
    }
    
    result_2818592988[0].push.apply(result_2818592988[0], [102,105,108,101,110,97,109,101]);;
    result_2818592988[0].push.apply(result_2818592988[0], [58,32]);;
    countHEX60gensym872_2818592999 += 1;
    addQuoted_1593835572(result_2818592988, 0, x_2818592987.filename);
    if ((0 < countHEX60gensym872_2818592999)) {
    result_2818592988[0].push.apply(result_2818592988[0], [44,32]);;
    }
    
    result_2818592988[0].push.apply(result_2818592988[0], [107,105,110,100]);;
    result_2818592988[0].push.apply(result_2818592988[0], [58,32]);;
    countHEX60gensym872_2818592999 += 1;
    addQuoted_2818593064(result_2818592988, 0, x_2818592987.kind);
    if ((0 < countHEX60gensym872_2818592999)) {
    result_2818592988[0].push.apply(result_2818592988[0], [44,32]);;
    }
    
    result_2818592988[0].push.apply(result_2818592988[0], [116,121,112]);;
    result_2818592988[0].push.apply(result_2818592988[0], [58,32]);;
    countHEX60gensym872_2818592999 += 1;
    addQuoted_1593835572(result_2818592988, 0, x_2818592987.typ);
    if ((0 < countHEX60gensym872_2818592999)) {
    result_2818592988[0].push.apply(result_2818592988[0], [44,32]);;
    }
    
    result_2818592988[0].push.apply(result_2818592988[0], [100,111,99]);;
    result_2818592988[0].push.apply(result_2818592988[0], [58,32]);;
    countHEX60gensym872_2818592999 += 1;
    addQuoted_1593835572(result_2818592988, 0, x_2818592987.doc);
    result_2818592988[0].push.apply(result_2818592988[0], [41]);;

  return result_2818592988[0];

}

function formatValue_2818592980(result_2818592982, result_2818592982_Idx, value_2818592983, specifier_2818592984) {
    formatValue_721420459(result_2818592982, result_2818592982_Idx, HEX24_2818592985(value_2818592983), specifier_2818592984);

  
}

function applySelectedCompletion_2818592969(self_2818592970) {
  BeforeRet: {
    if (!(self_2818592970.showCompletions)) {
    break BeforeRet;
    }
    
    if (((self_2818592970.completions).length - 1 < self_2818592970.selectedCompletion)) {
    break BeforeRet;
    }
    
    var com_2818592974 = nimCopy(null, self_2818592970.completions[chckIndx(self_2818592970.selectedCompletion, 0, (self_2818592970.completions).length - 1)], NTI2919235630);
    var fmtRes_2818592979 = [mnewString(0)];
    fmtRes_2818592979[0].push.apply(fmtRes_2818592979[0], [65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2818592980(fmtRes_2818592979, 0, com_2818592974, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818592979[0], NTI33554449)]);
    var cursor_2818593097 = nimCopy(null, selection_2818572805(self_2818592970).Field1, NTI2449473546);
    if ((cursor_2818593097.Field1 == 0)) {
    selectionsHEX3D_2818573083(self_2818592970, insert_2818579853(self_2818592970.document, [nimCopy(null, toSelection_2449474032(cursor_2818593097), NTI2449473548)], selections_2818572802(self_2818592970), com_2818592974.name, true, true, false));
    }
    else {
      var line_2818593098 = getLine_2818572666(self_2818592970.document, cursor_2818593097.Field0);
      var column_2818593099 = cursor_2818593097.Field1;
      Label1: {
          Label2: while (true) {
          if (!(0 < column_2818593099)) break Label2;
            switch (line_2818593098[chckIndx(subInt(column_2818593099, 1), 0, (line_2818593098).length - 1)]) {
            case 32:
            case 9:
            case 46:
            case 44:
            case 40:
            case 41:
            case 91:
            case 93:
            case 123:
            case 125:
            case 58:
            case 59:
              break Label1;
              break;
            default: 
              column_2818593099 = subInt(column_2818593099, 1);
              break;
            }
          }
      };
      selectionsHEX3D_2818573083(self_2818592970, edit_2818580070(self_2818592970.document, [nimCopy(null, {Field0: {Field0: cursor_2818593097.Field0, Field1: column_2818593099}, Field1: nimCopy(null, cursor_2818593097, NTI2449473546)}, NTI2818584773)], selections_2818572802(self_2818592970), com_2818592974.name, true));
    }
    
  };

  
}

function applySelectedCompletionJsWrapper_2818592966(self_2818593131) {
    applySelectedCompletion_2818592969(self_2818593131);

  
}
editor_text_prototype.applySelectedCompletion = function() { return (applySelectedCompletionJsWrapper_2818592966(this));};

function handleHexChar_2046820364(c_2046820365) {
  var result_2046820366 = 0;

    switch (c_2046820365) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      result_2046820366 = subInt(c_2046820365, 48);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      result_2046820366 = addInt(subInt(c_2046820365, 97), 10);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      result_2046820366 = addInt(subInt(c_2046820365, 65), 10);
      break;
    default: 
      break;
    }

  return result_2046820366;

}

function hexbyte_2046820410(hex_2046820411) {
  var result_2046820412 = 0;

    result_2046820412 = handleHexChar_2046820364(hex_2046820411);

  return result_2046820412;

}

function hash_2046820393(x_2046820395) {
  var result_2046820396 = 0;

    result_2046820396 = hashWangYi1_1325400244(x_2046820395);

  return result_2046820396;

}

function hash_2046820389(oid_2046820390) {
  var result_2046820391 = 0;

    var h_2046820392 = 0;
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.time));
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.fuzz));
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.count));
    result_2046820391 = HEX21HEX24_1325400082(h_2046820392);

  return result_2046820391;

}

function parseOid_2046820433(str_2046820434) {
  var result_2046820435 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((str_2046820434).length == 24))) {
    break BeforeRet;
    }
    
    result_2046820435.time = 0;
    Label1: {
      var i_2046820440 = 0;
      var i_2986344541 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2986344541 < 4)) break Label3;
            i_2046820440 = i_2986344541;
            var hexValue_2046820445 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, i_2046820440), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, i_2046820440), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.time = (result_2046820435.time | (hexValue_2046820445 << mulInt(i_2046820440, 8)));
            i_2986344541 = addInt(i_2986344541, 1);
          }
      };
    };
    result_2046820435.fuzz = 0;
    Label4: {
      var i_2046820454 = 0;
      var i_2986344544 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_2986344544 < 4)) break Label6;
            i_2046820454 = i_2986344544;
            var hexValue_2046820459 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, addInt(i_2046820454, 4)), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, addInt(i_2046820454, 4)), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.fuzz = (result_2046820435.fuzz | (hexValue_2046820459 << mulInt(i_2046820454, 8)));
            i_2986344544 = addInt(i_2986344544, 1);
          }
      };
    };
    result_2046820435.count = 0;
    Label7: {
      var i_2046820468 = 0;
      var i_2986344547 = 0;
      Label8: {
          Label9: while (true) {
          if (!(i_2986344547 < 4)) break Label9;
            i_2046820468 = i_2986344547;
            var hexValue_2046820473 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, addInt(i_2046820468, 8)), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, addInt(i_2046820468, 8)), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.count = (result_2046820435.count | (hexValue_2046820473 << mulInt(i_2046820468, 8)));
            i_2986344547 = addInt(i_2986344547, 1);
          }
      };
    };
    result_2046820435.padding = hash_2046820389(result_2046820435);
  };

  return result_2046820435;

}

function parseId_2046820640(s_2046820641) {
  var result_2046820642 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((s_2046820641).length == 24))) {
    rawEcho([105,110,118,97,108,105,100,32,105,100,32,39], s_2046820641, [39]);
    result_2046820642 = nimCopy(result_2046820642, idNone_2046820633(), NTI2046820355);
    break BeforeRet;
    }
    
    result_2046820642 = nimCopy(result_2046820642, parseOid_2046820433(s_2046820641), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820642;

}
var IdPrint_2986344450 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,55]);
var IdAdd_2986344451 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,56]);
var IdSub_2986344452 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,57]);
var IdMul_2986344453 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,97]);
var IdDiv_2986344454 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,98]);
var IdMod_2986344455 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,99]);
var IdNegate_2986344456 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,100]);
var IdNot_2986344457 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,101]);
var IdDeref_2986344458 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,102]);
var IdAppendString_2986344459 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,48]);
var IdInt_2986344460 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,49]);
var IdString_2986344461 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,50]);
var IdVoid_2986344462 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,51]);
var IdLess_2986344463 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,52]);
var IdLessEqual_2986344464 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,53]);
var IdGreater_2986344465 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,54]);
var IdGreaterEqual_2986344466 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,55]);
var IdEqual_2986344467 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,56]);
var IdNotEqual_2986344468 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,57]);
var IdAnd_2986344469 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,97]);
var IdOr_2986344470 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,98]);
var IdOrder_2986344471 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,99]);
var IdBuildString_2986344472 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,100]);
var IdType_2986344473 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var IdBaseLanguage_2986344474 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,101]);
var IdFunctionType_2986344475 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,99]);
var IdFunctionTypeReturnType_2986344476 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,48]);
var IdFunctionTypeParameterTypes_2986344477 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,49]);
var IdPrintArguments_2986344478 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,56]);
var IdBuildArguments_2986344479 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,57]);
var IdUnaryExpression_2986344480 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,97]);
var IdUnaryExpressionChild_2986344481 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,98]);
var IdIDeclaration_2986344482 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,100]);
var Id62e5339b564d29f772934520_2986344483 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,48]);
var Id62e5339b564d29f772934521_2986344484 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,49]);
var Id62e5339b564d29f772934522_2986344485 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,50]);
var Id62e5339b564d29f772934523_2986344486 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,51]);
var Id62e5339b564d29f772934524_2986344487 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,52]);
var Id62e5339b564d29f772934525_2986344488 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,53]);
var IdEmptyLine_2986344489 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,54]);
var IdBlockChildren_2986344490 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,55]);
var IdBlock_2986344491 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,56]);
var IdINamedName_2986344492 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,57]);
var IdINamed_2986344493 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,97]);
var IdAssignmentValue_2986344494 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,98]);
var IdAssignmentTarget_2986344495 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,99]);
var IdAssignment_2986344496 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,100]);
var IdFunctionDefinitionBody_2986344497 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,101]);
var IdFunctionDefinitionReturnType_2986344498 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,102]);
var IdFunctionDefinitionParameters_2986344499 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,48]);
var IdFunctionDefinition_2986344500 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,49]);
var IdParameterDeclValue_2986344501 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,50]);
var IdParameterDeclType_2986344502 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,51]);
var IdParameterDecl_2986344503 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,53]);
var IdWhileExpressionBody_2986344504 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,54]);
var IdWhileExpressionCondition_2986344505 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,55]);
var IdWhileExpression_2986344506 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,56]);
var IdIfExpressionElseCase_2986344507 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,57]);
var IdIfExpressionThenCase_2986344508 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,97]);
var IdThenCase_2986344509 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,102]);
var IdThenCaseCondition_2986344510 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,98]);
var IdThenCaseBody_2986344511 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,101]);
var IdIfExpression_2986344512 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,99]);
var IdCallArguments_2986344513 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,100]);
var IdCallFunction_2986344514 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,101]);
var IdCall_2986344515 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,102]);
var IdNodeListChildren_2986344516 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,48]);
var IdNodeList_2986344517 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,49]);
var IdVarDeclValue_2986344518 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,50]);
var IdVarDeclType_2986344519 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,51]);
var IdVarDecl_2986344520 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,53]);
var IdLetDeclValue_2986344521 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,54]);
var IdLetDeclType_2986344522 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,55]);
var IdLetDecl_2986344523 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,57]);
var IdConstDeclValue_2986344524 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,97]);
var IdConstDeclType_2986344525 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,98]);
var IdConstDecl_2986344526 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,100]);
var IdEmpty_2986344527 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,101]);
var IdNodeReferenceTarget_2986344528 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,102]);
var IdNodeReference_2986344529 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,48]);
var IdBinaryExpressionLeft_2986344530 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,49]);
var IdBinaryExpressionRight_2986344531 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,50]);
var IdBinaryExpression_2986344532 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,51]);
var IdExpression_2986344533 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,52]);
var IdBoolLiteralValue_2986344534 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,53]);
var IdBoolLiteral_2986344535 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,54]);
var IdStringLiteralValue_2986344536 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,55]);
var IdStringLiteral_2986344537 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,56]);
var IdIntegerLiteralValue_2986344538 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,57]);
var IdIntegerLiteral_2986344539 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,97]);

function getIdAstNodeJs(node_3003123792) {
  var result_3003123793 = null;

    return toCString(node_3003123792.id);

  return result_3003123793;

}
var currentIndent_3036676112 = [0];

function getIdItemIdJs(item_3036676280) {
  var result_3036676281 = null;

    return '' + toCString(item_3036676280.Field0) + item_3036676280.Field1;

  return result_3036676281;

}

function getIdDependencyJs(dep_3036676283) {
  var result_3036676284 = null;

    return getIdItemIdJs(dep_3036676283.Field0) + dep_3036676283.Field1;

  return result_3036676284;

}
var dependencyGlobalRevision_3036676217 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,98]);

function getIdFunctionExecutionContextJs(fec_3087010823) {
  var result_3087010824 = null;

    return toCString(fec_3087010823.id);

  return result_3087010824;

}

function getIdSymbolJs(sym_3087010826) {
  var result_3087010827 = null;

    return toCString(sym_3087010826.id);

  return result_3087010827;

}

function getIdNodeLayoutInputJs(input_3087010829) {
  var result_3087010830 = null;

    return toCString(input_3087010829.id);

  return result_3087010830;

}
var config_3137339605 = [{fontSize: 20.0, fontRegular: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], fontBold: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], fontItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], fontBoldItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], indent: 20.0, colors: {separator: [112,117,110,99,116,117,97,116,105,111,110], separatorParen: [[109,101,116,97,46,98,114,97,99,101,46,114,111,117,110,100], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBrace: [[109,101,116,97,46,98,114,97,99,101,46,99,117,114,108,121], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBracket: [[109,101,116,97,46,98,114,97,99,101,46,115,113,117,97,114,101], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], empty: [115,116,114,105,110,103], keyword: [107,101,121,119,111,114,100], typ: [115,116,111,114,97,103,101,46,116,121,112,101]}, revision: 0}];

function pop_1291849132(s_1291849134, s_1291849134_Idx) {
  var result_1291849135 = null;

    var L_1291849139 = subInt((s_1291849134[s_1291849134_Idx]).length, 1);
    result_1291849135 = s_1291849134[s_1291849134_Idx][chckIndx(L_1291849139, 0, (s_1291849134[s_1291849134_Idx]).length - 1)];
    if (s_1291849134[s_1291849134_Idx].length < chckRange(L_1291849139, 0, 2147483647)) { for (var i = s_1291849134[s_1291849134_Idx].length ; i < chckRange(L_1291849139, 0, 2147483647) ; ++i) s_1291849134[s_1291849134_Idx].push(null); }
               else { s_1291849134[s_1291849134_Idx].length = chckRange(L_1291849139, 0, 2147483647); };

  return result_1291849135;

}

function popPopup_1291849115(self_1291849116, popup_1291849117) {
    if (((0 < (self_1291849116.popups).length) && (self_1291849116.popups[chckIndx((self_1291849116.popups).length - 1, 0, (self_1291849116.popups).length - 1)] == popup_1291849117))) {
    var _ = pop_1291849132(self_1291849116, "popups");
    }
    
    requestRender_2768240746(self_1291849116.platform, false);

  
}

function markDirty_2483027989(self_2483027990) {
    if (!(self_2483027990.mDirty)) {
    invoke_2415919167(self_2483027990.onMarkedDirty);
    }
    
    self_2483027990.mDirty = true;

  
}

function accept_3187671506(self_3187671507) {
    if ((!((self_3187671507.handleItemConfirmed == null)) && (self_3187671507.selected < (self_3187671507.completions).length))) {
    self_3187671507.handleItemConfirmed(self_3187671507.completions[chckIndx(self_3187671507.selected, 0, (self_3187671507.completions).length - 1)]);
    }
    
    popPopup_1291849115(self_3187671507.editor, self_3187671507);
    markDirty_2483027989(self_3187671507);

  
}

function acceptJsWrapper_3187671503(self_3187671566) {
    accept_3187671506(self_3187671566);

  
}
popup_selector_prototype.accept = function() { return (acceptJsWrapper_3187671503(this));};

function cancel_3187671601(self_3187671602) {
    if (!((self_3187671602.handleCanceled == null))) {
    self_3187671602.handleCanceled();
    }
    
    popPopup_1291849115(self_3187671602.editor, self_3187671602);
    markDirty_2483027989(self_3187671602);

  
}

function cancelJsWrapper_3187671598(self_3187671636) {
    cancel_3187671601(self_3187671636);

  
}
popup_selector_prototype.cancel = function() { return (cancelJsWrapper_3187671598(this));};

function prev_3187671650(self_3187671651) {
    var Temporary1;

    if (((self_3187671651.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_3187671651.selected, (self_3187671651.completions).length), 1), (self_3187671651.completions).length);
    }
    
    self_3187671651.selected = Temporary1;
    if (((0 < (self_3187671651.completions).length) && !((self_3187671651.handleItemSelected == null)))) {
    self_3187671651.handleItemSelected(self_3187671651.completions[chckIndx(self_3187671651.selected, 0, (self_3187671651.completions).length - 1)]);
    }
    
    markDirty_2483027989(self_3187671651);

  
}

function prevJsWrapper_3187671647(self_3187671697) {
    prev_3187671650(self_3187671697);

  
}
popup_selector_prototype.prev = function() { return (prevJsWrapper_3187671647(this));};

function next_3187671711(self_3187671712) {
    var Temporary1;

    if (((self_3187671712.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_3187671712.selected, 1), (self_3187671712.completions).length);
    }
    
    self_3187671712.selected = Temporary1;
    if (((0 < (self_3187671712.completions).length) && !((self_3187671712.handleItemSelected == null)))) {
    self_3187671712.handleItemSelected(self_3187671712.completions[chckIndx(self_3187671712.selected, 0, (self_3187671712.completions).length - 1)]);
    }
    
    markDirty_2483027989(self_3187671712);

  
}

function nextJsWrapper_3187671708(self_3187671755) {
    next_3187671711(self_3187671755);

  
}
popup_selector_prototype.next = function() { return (nextJsWrapper_3187671708(this));};

function rawGet_3036676563(t_3036676566, key_3036676567, hc_3036676568, hc_3036676568_Idx) {
  var result_3036676569 = 0;

  BeforeRet: {
    hc_3036676568[hc_3036676568_Idx] = hash_1325400236(key_3036676567);
    if ((hc_3036676568[hc_3036676568_Idx] == 0)) {
    hc_3036676568[hc_3036676568_Idx] = 314159265;
    }
    
    if (((t_3036676566.data).length == 0)) {
    result_3036676569 = -1;
    break BeforeRet;
    }
    
    var h_3036676657 = (hc_3036676568[hc_3036676568_Idx] & (t_3036676566.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036676566.data[chckIndx(h_3036676657, 0, (t_3036676566.data).length - 1)].Field0)) break Label2;
          if (((t_3036676566.data[chckIndx(h_3036676657, 0, (t_3036676566.data).length - 1)].Field0 == hc_3036676568[hc_3036676568_Idx]) && (t_3036676566.data[chckIndx(h_3036676657, 0, (t_3036676566.data).length - 1)].Field1 == key_3036676567))) {
          result_3036676569 = h_3036676657;
          break BeforeRet;
          }
          
          h_3036676657 = nextTry_1308622883(h_3036676657, (t_3036676566.data).length - 1);
        }
    };
    result_3036676569 = subInt(-1, h_3036676657);
  };

  return result_3036676569;

}

function mustRehash_3036677087(t_3036677089) {
  var result_3036677090 = false;

    if (!((t_3036677089.counter < (t_3036677089.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3036677090 = ((mulInt((t_3036677089.data).length, 2) < mulInt(t_3036677089.counter, 3)) || (subInt((t_3036677089.data).length, t_3036677089.counter) < 4));

  return result_3036677090;

}

function rawInsert_3036677780(t_3036677784, data_3036677785, data_3036677785_Idx, key_3036677786, val_3036677787, hc_3036677788, h_3036677789) {
    data_3036677785[data_3036677785_Idx][chckIndx(h_3036677789, 0, (data_3036677785[data_3036677785_Idx]).length - 1)].Field1 = key_3036677786;
    data_3036677785[data_3036677785_Idx][chckIndx(h_3036677789, 0, (data_3036677785[data_3036677785_Idx]).length - 1)].Field2 = nimCopy(null, val_3036677787, NTI33554449);
    data_3036677785[data_3036677785_Idx][chckIndx(h_3036677789, 0, (data_3036677785[data_3036677785_Idx]).length - 1)].Field0 = hc_3036677788;

  
}

function enlarge_3036677344(t_3036677347) {
    var n_3036677350 = [];
    n_3036677350 = new Array(chckRange(mulInt((t_3036677347.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3036677347.data).length, 2), 0, 2147483647) ; ++i) { n_3036677350[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_3036677347.data; t_3036677347.data = n_3036677350; n_3036677350 = Temporary1;    Label2: {
      var i_3036677448 = 0;
      var colontmp__2969567311 = 0;
      colontmp__2969567311 = (n_3036677350).length - 1;
      var res_2969567312 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567312 <= colontmp__2969567311)) break Label4;
            i_3036677448 = res_2969567312;
            var eh_3036677529 = n_3036677350[chckIndx(i_3036677448, 0, (n_3036677350).length - 1)].Field0;
            if (isFilled_1308622880(eh_3036677529)) {
            var j_3036677533 = (eh_3036677529 & (t_3036677347.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3036677347.data[chckIndx(j_3036677533, 0, (t_3036677347.data).length - 1)].Field0)) break Label6;
                  j_3036677533 = nextTry_1308622883(j_3036677533, (t_3036677347.data).length - 1);
                }
            };
            rawInsert_3036677780(t_3036677347, t_3036677347, "data", n_3036677350[chckIndx(i_3036677448, 0, (n_3036677350).length - 1)].Field1, n_3036677350[chckIndx(i_3036677448, 0, (n_3036677350).length - 1)].Field2, eh_3036677529, j_3036677533);
            }
            
            res_2969567312 = addInt(res_2969567312, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3036678030(t_3036678033, key_3036678034, hc_3036678035) {
  var result_3036678036 = 0;

  BeforeRet: {
    if (((t_3036678033.data).length == 0)) {
    result_3036678036 = -1;
    break BeforeRet;
    }
    
    var h_3036678121 = (hc_3036678035 & (t_3036678033.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036678033.data[chckIndx(h_3036678121, 0, (t_3036678033.data).length - 1)].Field0)) break Label2;
          if (((t_3036678033.data[chckIndx(h_3036678121, 0, (t_3036678033.data).length - 1)].Field0 == hc_3036678035) && (t_3036678033.data[chckIndx(h_3036678121, 0, (t_3036678033.data).length - 1)].Field1 == key_3036678034))) {
          result_3036678036 = h_3036678121;
          break BeforeRet;
          }
          
          h_3036678121 = nextTry_1308622883(h_3036678121, (t_3036678033.data).length - 1);
        }
    };
    result_3036678036 = subInt(-1, h_3036678121);
  };

  return result_3036678036;

}

function HEX5BHEX5DHEX3D_3036676468(t_3036676471, key_3036676472, val_3036676473) {
    if (((t_3036676471.data).length == 0)) {
    var correctSizeHEX60gensym3_3036676557 = slotsNeeded_1308622891(32);
    t_3036676471.counter = 0;
    t_3036676471.data = new Array(chckRange(correctSizeHEX60gensym3_3036676557, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3036676557, 0, 2147483647) ; ++i) { t_3036676471.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3036676562 = [0];
    var index_3036676919 = rawGet_3036676563(t_3036676471, key_3036676472, hc_3036676562, 0);
    if ((0 <= index_3036676919)) {
    t_3036676471.data[chckIndx(index_3036676919, 0, (t_3036676471.data).length - 1)].Field2 = nimCopy(null, val_3036676473, NTI33554449);
    }
    else {
      if (((t_3036676471.data).length == 0)) {
      var correctSizeHEX60gensym8_3036677082 = slotsNeeded_1308622891(32);
      t_3036676471.counter = 0;
      t_3036676471.data = new Array(chckRange(correctSizeHEX60gensym8_3036677082, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3036677082, 0, 2147483647) ; ++i) { t_3036676471.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_3036677087(t_3036676471)) {
      enlarge_3036677344(t_3036676471);
      index_3036676919 = rawGetKnownHC_3036678030(t_3036676471, key_3036676472, hc_3036676562[0]);
      }
      
      index_3036676919 = subInt(-1, index_3036676919);
      rawInsert_3036677780(t_3036676471, t_3036676471, "data", key_3036676472, val_3036676473, hc_3036676562[0], index_3036676919);
      t_3036676471.counter = addInt(t_3036676471.counter, 1);
    }
    

  
}

function newDependencyGraph_3036676400() {
  var result_3036676401 = null;

    result_3036676401 = ({verified: null, changed: null, fingerprints: null, dependencies: null, queryNames: ({data: [], counter: 0}), revision: 0});
    result_3036676401.revision = 0;
    HEX5BHEX5DHEX3D_3036676468(result_3036676401.queryNames, -1, []);
    result_3036676401.verified = (new Map());
    result_3036676401.changed = (new Map());
    result_3036676401.fingerprints = (new Map());
    result_3036676401.dependencies = (new Map());

  return result_3036676401;

}

function mapKeyJs_3019899588(key_3019899590) {
  var result_3019899591 = null;

    let temp = key_3019899590;
    let newId = getIdItemIdJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019899591;

}

function contains_3019899577(t_3019899580, key_3019899581) {
  var result_3019899582 = false;

    result_3019899582 = t_3019899580.has(mapKeyJs_3019899588(key_3019899581));

  return result_3019899582;

}

function HEX24_2046820617(id_2046820618) {
  var result_2046820619 = [];

  BeforeRet: {
    result_2046820619 = nimCopy(null, HEX24_2046820478(id_2046820618), NTI33554449);
    break BeforeRet;
  };

  return result_2046820619;

}

function formatValue_3036676344(result_3036676346, result_3036676346_Idx, value_3036676347, specifier_3036676348) {
    formatValue_721420459(result_3036676346, result_3036676346_Idx, HEX24_2046820617(value_3036676347), specifier_3036676348);

  
}

function mkDigit_721420293(v_721420294, typ_721420295) {
      var Temporary1;

  var result_721420296 = [];

    if (!((v_721420294 < 26))) {
    failedAssertImpl_268435515([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_721420294 < 10)) {
    result_721420296 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_721420294), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_721420295 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_721420296 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_721420294), 10), 0, 255)), NTI33554449);
    }
    

  return result_721420296;

}

function formatInt_2701131953(n_2701131955, radix_2701131956, spec_2701131957) {
    var Temporary1;

  var result_2701131958 = [];

    var n_2701131961 = n_2701131955;
    var negative_2701131962 = (n_2701131961 < 0);
    if (negative_2701131962) {
    Temporary1 = ((~(n_2701131961) + 1) );
    }
    else {
    Temporary1 = n_2701131961;
    }
    
    var v_2701131963 = Temporary1;
    var xx_2701131964 = [];
    if (spec_2701131957.alternateForm) {
    switch (spec_2701131957.typ) {
    case 88:
      xx_2701131964 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_2701131964 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_2701131964 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_2701131964 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_2701131963 == 0)) {
    result_2701131958 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_2701131958 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0 < v_2701131963)) break Label3;
            var d_2701131965 = (v_2701131963 % radix_2701131956);
            v_2701131963 = Math.trunc(((v_2701131963 / radix_2701131956) ));
            result_2701131958.push.apply(result_2701131958, mkDigit_721420293(chckRange(d_2701131965, -2147483648, 2147483647), spec_2701131957.typ));;
          }
      };
      Label4: {
        var idx_2701131970 = 0;
        var colontmp__2969567317 = 0;
        colontmp__2969567317 = divInt((result_2701131958).length, 2);
        var i_2969567318 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2969567318 < colontmp__2969567317)) break Label6;
              idx_2701131970 = i_2969567318;
              var Temporary7 = result_2701131958[chckIndx(idx_2701131970, 0, (result_2701131958).length - 1)]; result_2701131958[chckIndx(idx_2701131970, 0, (result_2701131958).length - 1)] = result_2701131958[chckIndx(subInt(subInt((result_2701131958).length, idx_2701131970), 1), 0, (result_2701131958).length - 1)]; result_2701131958[chckIndx(subInt(subInt((result_2701131958).length, idx_2701131970), 1), 0, (result_2701131958).length - 1)] = Temporary7;              i_2969567318 = addInt(i_2969567318, 1);
            }
        };
      };
    }
    
    if (spec_2701131957.padWithZero) {
    var sign_2701131975 = (negative_2701131962 || !((spec_2701131957.sign == 45)));
    var toFill_2701131979 = subInt(subInt(subInt(spec_2701131957.minimumWidth, (result_2701131958).length), (xx_2701131964).length), (sign_2701131975 ? 1 : 0));
    if ((0 < toFill_2701131979)) {
    result_2701131958 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2701131979, 0, 2147483647)) || []).concat(result_2701131958 || []), NTI33554449);
    }
    
    }
    
    if (negative_2701131962) {
    result_2701131958 = nimCopy(null, ([45] || []).concat(xx_2701131964 || [],result_2701131958 || []), NTI33554449);
    }
    else {
    if (!((spec_2701131957.sign == 45))) {
    result_2701131958 = nimCopy(null, [spec_2701131957.sign].concat(xx_2701131964 || [],result_2701131958 || []), NTI33554449);
    }
    else {
      result_2701131958 = nimCopy(null, (xx_2701131964 || []).concat(result_2701131958 || []), NTI33554449);
    }
    }
    if ((spec_2701131957.align == 60)) {
    Label8: {
      var i_2701131984 = 0;
      var colontmp__2969567321 = 0;
      colontmp__2969567321 = (result_2701131958).length;
      var i_2969567322 = colontmp__2969567321;
      Label9: {
          Label10: while (true) {
          if (!(i_2969567322 < spec_2701131957.minimumWidth)) break Label10;
            i_2701131984 = i_2969567322;
            addChar(result_2701131958, spec_2701131957.fill);;
            i_2969567322 = addInt(i_2969567322, 1);
          }
      };
    };
    }
    else {
      var toFill_2701131985 = subInt(spec_2701131957.minimumWidth, (result_2701131958).length);
      if ((spec_2701131957.align == 94)) {
      var half_2701131986 = divInt(toFill_2701131985, 2);
      result_2701131958 = nimCopy(null, (nsuRepeatChar(spec_2701131957.fill, chckRange(half_2701131986, 0, 2147483647)) || []).concat(result_2701131958 || [],nsuRepeatChar(spec_2701131957.fill, chckRange(subInt(toFill_2701131985, half_2701131986), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_2701131985)) {
        result_2701131958 = nimCopy(null, (nsuRepeatChar(spec_2701131957.fill, chckRange(toFill_2701131985, 0, 2147483647)) || []).concat(result_2701131958 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_2701131958;

}

function formatValue_2701131945(result_2701131947, result_2701131947_Idx, value_2701131948, specifier_2701131949) {
  BeforeRet: {
    if (((specifier_2701131949).length == 0)) {
    result_2701131947[result_2701131947_Idx].push.apply(result_2701131947[result_2701131947_Idx], HEX24_369098760(value_2701131948));;
    break BeforeRet;
    }
    
    var spec_2701131950 = parseStandardFormatSpecifier_721420346(specifier_2701131949, 0, false);
    var radix_2701131951 = 10;
    switch (spec_2701131950.typ) {
    case 120:
    case 88:
      radix_2701131951 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_2701131951 = 2;
      break;
    case 111:
      radix_2701131951 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_2701131950.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2701131947[result_2701131947_Idx].push.apply(result_2701131947[result_2701131947_Idx], formatInt_2701131953(value_2701131948, radix_2701131951, spec_2701131950));;
  };

  
}

function HEX24_3036676336(item_3036676337) {
  var result_3036676338 = [];

  BeforeRet: {
    var fmtRes_3036676343 = [mnewString(0)];
    fmtRes_3036676343[0].push.apply(fmtRes_3036676343[0], [40]);;
    formatValue_3036676344(fmtRes_3036676343, 0, item_3036676337.Field0, []);
    fmtRes_3036676343[0].push.apply(fmtRes_3036676343[0], [44,32]);;
    formatValue_2701131945(fmtRes_3036676343, 0, item_3036676337.Field1, []);
    fmtRes_3036676343[0].push.apply(fmtRes_3036676343[0], [41]);;
    result_3036676338 = nimCopy(null, fmtRes_3036676343[0], NTI33554449);
    break BeforeRet;
  };

  return result_3036676338;

}

function HEX5BHEX5D_3019899687(t_3019899690, key_3019899691) {
  var result_3019899692 = null;

    result_3019899692 = t_3019899690.get(mapKeyJs_3019899588(key_3019899691));

  return result_3019899692;

}

function nsuRepeatStr(s_855639142, n_855639143) {
  var result_855639144 = [];

    result_855639144 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_855639149 = 0;
      var colontmp__2969567352 = 0;
      colontmp__2969567352 = n_855639143;
      var res_2969567353 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567353 <= colontmp__2969567352)) break Label3;
            i_855639149 = res_2969567353;
            result_855639144.push.apply(result_855639144, s_855639142);;
            res_2969567353 = addInt(res_2969567353, 1);
          }
      };
    };

  return result_855639144;

}

function repeat2_3036676113(s_3036676114, n_3036676115) {
  var result_3036676116 = [];

    result_3036676116 = nimCopy(null, nsuRepeatStr(s_3036676114, n_3036676115), NTI33554449);

  return result_3036676116;

}

function symbolName_3003123674(a_3003123676) {
  var result_3003123677 = [];

    result_3003123677 = nimCopy(null, names_3003123684[chckIndx(subInt(a_3003123676, 0), 0, (names_3003123684).length - 1)], NTI33554449);

  return result_3003123677;

}

function HEX3DHEX3D_2046820385(oid1_2046820386, oid2_2046820387) {
  var result_2046820388 = false;

    result_2046820388 = (((oid1_2046820386.time == oid2_2046820387.time) && (oid1_2046820386.fuzz == oid2_2046820387.fuzz)) && (oid1_2046820386.count == oid2_2046820387.count));

  return result_2046820388;

}

function HEX3DHEX3D_2046820626(idA_2046820627, idB_2046820628) {
  var result_2046820629 = false;

  BeforeRet: {
    result_2046820629 = HEX3DHEX3D_2046820385(idA_2046820627, idB_2046820628);
    break BeforeRet;
  };

  return result_2046820629;

}

function len_3003121752(node_3003121753) {
  var result_3003121754 = 0;

  BeforeRet: {
    result_3003121754 = (node_3003121753.children).length;
    break BeforeRet;
  };

  return result_3003121754;

}

function collectionToString_3003123772(x_3003123774, prefix_3003123775, separator_3003123776, suffix_3003123777) {
  var result_3003123778 = [[]];

    result_3003123778[0] = nimCopy(null, prefix_3003123775, NTI33554449);
    var firstElement_3003123779 = true;
    Label1: {
      var value_3003123783 = 0;
      var i_2969567357 = 0;
      var L_2969567358 = (x_3003123774).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567357 < L_2969567358)) break Label3;
            value_3003123783 = x_3003123774[i_2969567357];
            if (firstElement_3003123779) {
            firstElement_3003123779 = false;
            }
            else {
            result_3003123778[0].push.apply(result_3003123778[0], separator_3003123776);;
            }
            
            addQuoted_855639425(result_3003123778, 0, value_3003123783);
            i_2969567357 += 1;
            if (!(((x_3003123774).length == L_2969567358))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3003123778[0].push.apply(result_3003123778[0], suffix_3003123777);;

  return result_3003123778[0];

}

function HEX24_3003123768(x_3003123770) {
  var result_3003123771 = [];

    result_3003123771 = nimCopy(null, collectionToString_3003123772(x_3003123770, [64,91], [44,32], [93]), NTI33554449);

  return result_3003123771;

}

function find_3003121779(a_3003121782, item_3003121783) {
  var result_3003121784 = 0;

  BeforeRet: {
    result_3003121784 = 0;
    Label1: {
      var i_3003121806 = null;
      var i_2969567362 = 0;
      var L_2969567363 = (a_3003121782).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567362 < L_2969567363)) break Label3;
            i_3003121806 = a_3003121782[chckIndx(i_2969567362, 0, (a_3003121782).length - 1)];
            if ((i_3003121806 == item_3003121783)) {
            break BeforeRet;
            }
            
            result_3003121784 = addInt(result_3003121784, 1);
            i_2969567362 = addInt(i_2969567362, 1);
            if (!(((a_3003121782).length == L_2969567363))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3003121784 = -1;
  };

  return result_3003121784;

}

function index_3003121772(node_3003121773) {
  var result_3003121774 = 0;

  BeforeRet: {
    if ((node_3003121773.parent == null)) {
    result_3003121774 = -1;
    break BeforeRet;
    }
    
    result_3003121774 = find_3003121779(node_3003121773.parent.children, node_3003121773);
    break BeforeRet;
  };

  return result_3003121774;

}

function reverse_3003123641(a_3003123643, first_3003123644, last_3003123645) {
    var x_3003123646 = first_3003123644;
    var y_3003123647 = last_3003123645;
    Label1: {
        Label2: while (true) {
        if (!(x_3003123646 < y_3003123647)) break Label2;
          var Temporary3 = a_3003123643[chckIndx(x_3003123646, 0, (a_3003123643).length - 1)]; a_3003123643[chckIndx(x_3003123646, 0, (a_3003123643).length - 1)] = a_3003123643[chckIndx(y_3003123647, 0, (a_3003123643).length - 1)]; a_3003123643[chckIndx(y_3003123647, 0, (a_3003123643).length - 1)] = Temporary3;          y_3003123647 = subInt(y_3003123647, 1);
          x_3003123646 = addInt(x_3003123646, 1);
        }
    };

  
}

function reverse_3003123635(a_3003123637) {
    reverse_3003123641(a_3003123637, 0, chckRange(nimMax(0, (a_3003123637).length - 1), 0, 2147483647));

  
}

function path_3003123619(node_3003123620) {
  var result_3003123621 = [];

    result_3003123621 = nimCopy(null, [], NTI3003122753);
    var node_3003123626 = node_3003123620;
    Label1: {
        Label2: while (true) {
        if (!!((node_3003123626.parent == null))) break Label2;
          result_3003123621.push(index_3003121772(node_3003123626));;
          node_3003123626 = node_3003123626.parent;
        }
    };
    reverse_3003123635(result_3003123621);

  return result_3003123621;

}

function HEX24_3003123671(node_3003123672) {
  var result_3003123673 = [];

    result_3003123673 = nimCopy(null, (symbolName_3003123674(node_3003123672.kind) || []).concat([40] || []), NTI33554449);
    if (!(HEX3DHEX3D_2046820626(node_3003123672.id, idNone_2046820633()))) {
    result_3003123673.push.apply(result_3003123673, (HEX24_2046820617(node_3003123672.id) || []).concat([44,32] || []));;
    }
    
    if (!(HEX3DHEX3D_2046820626(node_3003123672.reff, idNone_2046820633()))) {
    result_3003123673.push.apply(result_3003123673, ([114,101,102,102,58,32] || []).concat(HEX24_2046820617(node_3003123672.reff) || [],[44,32] || []));;
    }
    
    if ((0 < (node_3003123672.text).length)) {
    result_3003123673.push.apply(result_3003123673, ([39] || []).concat(node_3003123672.text || [],[39,44,32] || []));;
    }
    
    if ((0 < len_3003121752(node_3003123672))) {
    result_3003123673.push.apply(result_3003123673, (HEX24_369098760(len_3003121752(node_3003123672)) || []).concat([44,32] || []));;
    }
    
    result_3003123673.push.apply(result_3003123673, HEX24_3003123768(path_3003123619(node_3003123672)));;
    result_3003123673.push.apply(result_3003123673, [41]);;

  return result_3003123673;

}

function getTypeKey_3019913206(ctxHEX60gensym95_3019913207, itemIdHEX60gensym95_3019913208) {
  var result_3019913209 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2969567366 = nimCopy(null, itemIdHEX60gensym95_3019913208, NTI3036676201);
    var colontmp__2969567367 = 0;
    result_3019913209 = nimCopy(result_3019913209, {Field0: nimCopy(null, colontmp__2969567366, NTI3036676201), Field1: colontmp__2969567367}, NTI3036676204);
    break BeforeRet;
  };

  return result_3019913209;

}

function bigEndian32_2046820550(b_2046820551) {
  var result_2046820552 = 0;

    result_2046820552 = (((((b_2046820551 & 255) << 24) | ((b_2046820551 & 65280) << 8)) | ((b_2046820551 & 16711680) >> 8)) | (b_2046820551 >> 24));

  return result_2046820552;

}

function genOid_2046820580() {
  var result_2046820581 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var timeHEX60gensym1_2046820584 = Date.now();
    var iHEX60gensym1_2046820585 = 0;
    incr_2046820531[0] = addInt(incr_2046820531[0], 1);
    iHEX60gensym1_2046820585 = ((incr_2046820531[0]) | 0);
    result_2046820581.time = bigEndian32_2046820550(timeHEX60gensym1_2046820584);
    result_2046820581.fuzz = fuzz_2046820536;
    result_2046820581.count = bigEndian32_2046820550(iHEX60gensym1_2046820585);
    result_2046820581.padding = hash_2046820389(result_2046820581);

  return result_2046820581;

}

function newId_2046820597() {
  var result_2046820598 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820598 = nimCopy(result_2046820598, genOid_2046820580(), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820598;

}

function getItem_3019906357(selfHEX60gensym80_3019906358) {
  var result_3019906359 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym80_3019906358.id, null_2046820646)) {
    selfHEX60gensym80_3019906358.id = nimCopy(selfHEX60gensym80_3019906358.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym80_3019906358.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,48,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567368 = nimCopy(null, selfHEX60gensym80_3019906358.id, NTI2046820355);
    var colontmp__2969567369 = 0;
    result_3019906359 = nimCopy(result_3019906359, {Field0: nimCopy(null, colontmp__2969567368, NTI2046820355), Field1: colontmp__2969567369}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019906359;

}

function hash_2046820630(id_2046820631) {
  var result_2046820632 = 0;

  BeforeRet: {
    result_2046820632 = id_2046820631.padding;
    break BeforeRet;
  };

  return result_2046820632;

}

function hash_3019908340(x_3019908342) {
  var result_3019908343 = 0;

    result_3019908343 = HEX21HEX26_1325400067(result_3019908343, hash_2046820630(x_3019908342["Field0"]));
    result_3019908343 = HEX21HEX26_1325400067(result_3019908343, hash_1325400236(x_3019908342["Field1"]));
    result_3019908343 = HEX21HEX24_1325400082(result_3019908343);

  return result_3019908343;

}

function hash_3019908332(x_3019908334) {
  var result_3019908335 = 0;

    result_3019908335 = HEX21HEX26_1325400067(result_3019908335, hash_3019908340(x_3019908334["Field0"]));
    result_3019908335 = HEX21HEX26_1325400067(result_3019908335, hash_1325400236(x_3019908334["Field1"]));
    result_3019908335 = HEX21HEX24_1325400082(result_3019908335);

  return result_3019908335;

}

function HEX3DHEX3D_3019908690(x_3019908692, y_3019908693) {
  var result_3019908694 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2046820626(x_3019908692["Field0"], y_3019908693["Field0"]))) {
    result_3019908694 = false;
    break BeforeRet;
    }
    
    if (!((x_3019908692["Field1"] == y_3019908693["Field1"]))) {
    result_3019908694 = false;
    break BeforeRet;
    }
    
    result_3019908694 = true;
    break BeforeRet;
  };

  return result_3019908694;

}

function HEX3DHEX3D_3019908680(x_3019908682, y_3019908683) {
  var result_3019908684 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_3019908690(x_3019908682["Field0"], y_3019908683["Field0"]))) {
    result_3019908684 = false;
    break BeforeRet;
    }
    
    if (!((x_3019908682["Field1"] == y_3019908683["Field1"]))) {
    result_3019908684 = false;
    break BeforeRet;
    }
    
    result_3019908684 = true;
    break BeforeRet;
  };

  return result_3019908684;

}

function rawGet_3019940162(t_3019940165, key_3019940166, hc_3019940167, hc_3019940167_Idx) {
  var result_3019940168 = 0;

  BeforeRet: {
    hc_3019940167[hc_3019940167_Idx] = hash_3019908332(key_3019940166);
    if ((hc_3019940167[hc_3019940167_Idx] == 0)) {
    hc_3019940167[hc_3019940167_Idx] = 314159265;
    }
    
    if (((t_3019940165.data).length == 0)) {
    result_3019940168 = -1;
    break BeforeRet;
    }
    
    var h_3019940257 = (hc_3019940167[hc_3019940167_Idx] & (t_3019940165.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019940165.data[chckIndx(h_3019940257, 0, (t_3019940165.data).length - 1)].Field0)) break Label2;
          if (((t_3019940165.data[chckIndx(h_3019940257, 0, (t_3019940165.data).length - 1)].Field0 == hc_3019940167[hc_3019940167_Idx]) && HEX3DHEX3D_3019908680(t_3019940165.data[chckIndx(h_3019940257, 0, (t_3019940165.data).length - 1)].Field1, key_3019940166))) {
          result_3019940168 = h_3019940257;
          break BeforeRet;
          }
          
          h_3019940257 = nextTry_1308622883(h_3019940257, (t_3019940165.data).length - 1);
        }
    };
    result_3019940168 = subInt(-1, h_3019940257);
  };

  return result_3019940168;

}

function hasKey_3019940155(t_3019940158, key_3019940159) {
  var result_3019940160 = false;

    var hc_3019940161 = [0];
    result_3019940160 = (0 <= rawGet_3019940162(t_3019940158, key_3019940159, hc_3019940161, 0));

  return result_3019940160;

}

function contains_3019940149(t_3019940152, key_3019940153) {
  var result_3019940154 = false;

  BeforeRet: {
    result_3019940154 = hasKey_3019940155(t_3019940152, key_3019940153);
    break BeforeRet;
  };

  return result_3019940154;

}

function addQuoted_3019911830(s_3019911832, s_3019911832_Idx, x_3019911833) {
    s_3019911832[s_3019911832_Idx].push.apply(s_3019911832[s_3019911832_Idx], HEX24_3036676336(x_3019911833));;

  
}

function HEX24_3019911804(x_3019911806) {
  var result_3019911807 = [[]];

    result_3019911807[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym236_3019911818 = 0;
    if ((0 < countHEX60gensym236_3019911818)) {
    result_3019911807[0].push.apply(result_3019911807[0], [44,32]);;
    }
    
    result_3019911807[0].push.apply(result_3019911807[0], [105,116,101,109]);;
    result_3019911807[0].push.apply(result_3019911807[0], [58,32]);;
    countHEX60gensym236_3019911818 += 1;
    addQuoted_3019911830(result_3019911807, 0, x_3019911806["Field0"]);
    if ((0 < countHEX60gensym236_3019911818)) {
    result_3019911807[0].push.apply(result_3019911807[0], [44,32]);;
    }
    
    result_3019911807[0].push.apply(result_3019911807[0], [117,112,100,97,116,101]);;
    result_3019911807[0].push.apply(result_3019911807[0], [58,32]);;
    countHEX60gensym236_3019911818 += 1;
    addQuoted_855639425(result_3019911807, 0, x_3019911806["Field1"]);
    result_3019911807[0].push.apply(result_3019911807[0], [41]);;

  return result_3019911807[0];

}

function raiseKeyError_3019940688(key_3019940690) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3019911804(key_3019940690) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3019940594(t_3019940597, key_3019940598) {
  var result_3019940599 = null;
  var result_3019940599_Idx = 0;

    var hcHEX60gensym22_3019940600 = [0];
    var indexHEX60gensym22_3019940607 = rawGet_3019940162(t_3019940597, key_3019940598, hcHEX60gensym22_3019940600, 0);
    if ((0 <= indexHEX60gensym22_3019940607)) {
    result_3019940599 = t_3019940597.data[chckIndx(indexHEX60gensym22_3019940607, 0, (t_3019940597.data).length - 1)]; result_3019940599_Idx = "Field2";
    }
    else {
    raiseKeyError_3019940688(key_3019940598);
    }
    

  return [result_3019940599, result_3019940599_Idx];

}

function rawGet_3019941324(t_3019941327, key_3019941328, hc_3019941329, hc_3019941329_Idx) {
  var result_3019941330 = 0;

  BeforeRet: {
    hc_3019941329[hc_3019941329_Idx] = hash_3019908332(key_3019941328);
    if ((hc_3019941329[hc_3019941329_Idx] == 0)) {
    hc_3019941329[hc_3019941329_Idx] = 314159265;
    }
    
    if (((t_3019941327.data).length == 0)) {
    result_3019941330 = -1;
    break BeforeRet;
    }
    
    var h_3019941419 = (hc_3019941329[hc_3019941329_Idx] & (t_3019941327.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019941327.data[chckIndx(h_3019941419, 0, (t_3019941327.data).length - 1)].Field0)) break Label2;
          if (((t_3019941327.data[chckIndx(h_3019941419, 0, (t_3019941327.data).length - 1)].Field0 == hc_3019941329[hc_3019941329_Idx]) && HEX3DHEX3D_3019908680(t_3019941327.data[chckIndx(h_3019941419, 0, (t_3019941327.data).length - 1)].Field1, key_3019941328))) {
          result_3019941330 = h_3019941419;
          break BeforeRet;
          }
          
          h_3019941419 = nextTry_1308622883(h_3019941419, (t_3019941327.data).length - 1);
        }
    };
    result_3019941330 = subInt(-1, h_3019941419);
  };

  return result_3019941330;

}

function del_3019941318(t_3019941321, key_3019941322) {
    var hc_3019941323 = [0];
    var i_3019941685 = rawGet_3019941324(t_3019941321, key_3019941322, hc_3019941323, 0);
    var mskHEX60gensym36_3019941689 = (t_3019941321.data).length - 1;
    if ((0 <= i_3019941685)) {
    t_3019941321.counter = subInt(t_3019941321.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019941696 = i_3019941685;
            var rHEX60gensym36_3019941697 = jHEX60gensym36_3019941696;
            t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field0 = 0;
            t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field1 = nimCopy(t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
            t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field2 = nimCopy(null, [], NTI3019898888);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019941685 = (addInt(i_3019941685, 1) & mskHEX60gensym36_3019941689);
                  if (isEmpty_1308622877(t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019941697 = (t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field0 & mskHEX60gensym36_3019941689);
                  if (!(((((rHEX60gensym36_3019941697 <= i_3019941685) && (jHEX60gensym36_3019941696 < rHEX60gensym36_3019941697)) || ((jHEX60gensym36_3019941696 < rHEX60gensym36_3019941697) && (i_3019941685 < jHEX60gensym36_3019941696))) || ((i_3019941685 < jHEX60gensym36_3019941696) && (rHEX60gensym36_3019941697 <= i_3019941685))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019941321.data[chckIndx(jHEX60gensym36_3019941696, 0, (t_3019941321.data).length - 1)] = nimCopy(t_3019941321.data[chckIndx(jHEX60gensym36_3019941696, 0, (t_3019941321.data).length - 1)], t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)], NTI3019898900);
          }
      };
    };
    }
    

  
}

function rawGet_3019940817(t_3019940820, key_3019940821, hc_3019940822, hc_3019940822_Idx) {
  var result_3019940823 = 0;

  BeforeRet: {
    hc_3019940822[hc_3019940822_Idx] = hash_2046820630(key_3019940821);
    if ((hc_3019940822[hc_3019940822_Idx] == 0)) {
    hc_3019940822[hc_3019940822_Idx] = 314159265;
    }
    
    if (((t_3019940820.data).length == 0)) {
    result_3019940823 = -1;
    break BeforeRet;
    }
    
    var h_3019940909 = (hc_3019940822[hc_3019940822_Idx] & (t_3019940820.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019940820.data[chckIndx(h_3019940909, 0, (t_3019940820.data).length - 1)].Field0)) break Label2;
          if (((t_3019940820.data[chckIndx(h_3019940909, 0, (t_3019940820.data).length - 1)].Field0 == hc_3019940822[hc_3019940822_Idx]) && HEX3DHEX3D_2046820626(t_3019940820.data[chckIndx(h_3019940909, 0, (t_3019940820.data).length - 1)].Field1, key_3019940821))) {
          result_3019940823 = h_3019940909;
          break BeforeRet;
          }
          
          h_3019940909 = nextTry_1308622883(h_3019940909, (t_3019940820.data).length - 1);
        }
    };
    result_3019940823 = subInt(-1, h_3019940909);
  };

  return result_3019940823;

}

function raiseKeyError_3003123480(key_3003123482) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2046820617(key_3003123482) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3019940810(t_3019940813, key_3019940814) {
  var result_3019940815 = null;

    var hcHEX60gensym22_3019940816 = [0];
    var indexHEX60gensym22_3019941162 = rawGet_3019940817(t_3019940813, key_3019940814, hcHEX60gensym22_3019940816, 0);
    if ((0 <= indexHEX60gensym22_3019941162)) {
    result_3019940815 = t_3019940813.data[chckIndx(indexHEX60gensym22_3019941162, 0, (t_3019940813.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3019940814);
    }
    

  return result_3019940815;

}

function voidType_3087008167() {
  var result_3087008168 = null;

    result_3087008168 = {kind: 1, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008168;

}

function integerOutOfRangeError_771752261() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_771752263(s_771752264, b_771752265, b_771752265_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752266 = 0;

    var sign_771752267 = -1;
    var i_771752268 = 0;
    if ((i_771752268 < (s_771752264).length)) {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 43)) {
    i_771752268 += 1;
    }
    else {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 45)) {
    i_771752268 += 1;
    sign_771752267 = 1;
    }
    }
    }
    
      if (!(i_771752268 < (s_771752264).length)) Temporary1 = false; else {        Temporary1 = (ConstSet60[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752265[b_771752265_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752268 < (s_771752264).length)) Temporary4 = false; else {            Temporary4 = (ConstSet61[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752302 = (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_771752302) / 10) <= b_771752265[b_771752265_Idx])) {
          b_771752265[b_771752265_Idx] = ((b_771752265[b_771752265_Idx] * 10) - c_771752302);
          }
          else {
          integerOutOfRangeError_771752261();
          }
          
          i_771752268 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_771752268 < (s_771752264).length) && (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 95))) break Label6;
                i_771752268 += 1;
              }
          };
        }
    };
    if (((sign_771752267 == -1) && (b_771752265[b_771752265_Idx] == -9223372036854775808))) {
    integerOutOfRangeError_771752261();
    }
    else {
      b_771752265[b_771752265_Idx] = (b_771752265[b_771752265_Idx] * sign_771752267);
      result_771752266 = i_771752268;
    }
    
    }
    

  return result_771752266;

}

function npuParseBiggestInt(s_771752325, number_771752326, number_771752326_Idx) {
  var result_771752327 = 0;

    var res_771752328 = [0];
    result_771752327 = rawParseInt_771752263(s_771752325, res_771752328, 0);
    if (!((result_771752327 == 0))) {
    number_771752326[number_771752326_Idx] = res_771752328[0];
    }
    

  return result_771752327;

}

function npuParseInt(s_771752330, number_771752331, number_771752331_Idx) {
  var result_771752332 = 0;

    var res_771752333 = [0];
    result_771752332 = npuParseBiggestInt(s_771752330, res_771752333, 0);
    if (((res_771752333[0] < -2147483648) || (2147483647 < res_771752333[0]))) {
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752332 == 0))) {
    number_771752331[number_771752331_Idx] = chckRange(res_771752333[0], -2147483648, 2147483647);
    }
    

  return result_771752332;

}

function parseInt_771752724(s_771752725, number_771752726, number_771752726_Idx, start_771752727) {
  var result_771752728 = 0;

    result_771752728 = npuParseInt((s_771752725.slice(start_771752727, (s_771752725).length - 1 + 1)), number_771752726, number_771752726_Idx);

  return result_771752728;

}

function nsuParseInt(s_855638869) {
  var result_855638870 = [0];

    result_855638870[0] = 0;
    var L_855638871 = parseInt_771752724(s_855638869, result_855638870, 0, 0);
    if ((!((L_855638871 == (s_855638869).length)) || (L_855638871 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638869 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638870[0];

}

function intType_3087008169() {
  var result_3087008170 = null;

    result_3087008170 = {kind: 3, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008170;

}

function errorType_3087008131() {
  var result_3087008132 = null;

    result_3087008132 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008132;

}

function stringType_3087008171() {
  var result_3087008172 = null;

    result_3087008172 = {kind: 2, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008172;

}

function HEX5BHEX5D_3003121748(node_3003121749, index_3003121750) {
  var result_3003121751 = null;

  BeforeRet: {
    result_3003121751 = node_3003121749.children[chckIndx(index_3003121750, 0, (node_3003121749.children).length - 1)];
    break BeforeRet;
  };

  return result_3003121751;

}

function recordDependency_3019906144(ctxHEX60gensym77_3019906145, itemHEX60gensym77_3019906146, updateHEX60gensym77_3019906147) {
    if ((0 < (ctxHEX60gensym77_3019906145.dependencyStack).length)) {
    ctxHEX60gensym77_3019906145.dependencyStack[chckIndx((ctxHEX60gensym77_3019906145.dependencyStack).length - 1, 0, (ctxHEX60gensym77_3019906145.dependencyStack).length - 1)].push({Field0: nimCopy(null, itemHEX60gensym77_3019906146, NTI3036676201), Field1: updateHEX60gensym77_3019906147});;
    }
    

  
}

function mapKeyJs_3036678533(key_3036678535) {
  var result_3036678536 = null;

    let temp = key_3036678535;
    let newId = getIdDependencyJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3036678536;

}

function getOrDefault_3036678520(t_3036678523, key_3036678524, default_3036678525) {
  var result_3036678526 = 0;

    result_3036678526 = orDefaultJs((t_3036678523).get(mapKeyJs_3036678533(key_3036678524)), (default_3036678525));

  return result_3036678526;

}

function nodeColor_3036678426(graph_3036678427, key_3036678428, parentVerified_3036678429) {
  var result_3036678430 = 0;

  BeforeRet: {
    if ((key_3036678428.Field1 == -1)) {
    var inputChangedRevision_3036678547 = getOrDefault_3036678520(graph_3036678427.changed, key_3036678428, graph_3036678427.revision);
    if ((parentVerified_3036678429 < inputChangedRevision_3036678547)) {
    result_3036678430 = 1;
    break BeforeRet;
    }
    else {
      result_3036678430 = 2;
      break BeforeRet;
    }
    
    }
    
    var verified_3036678643 = getOrDefault_3036678520(graph_3036678427.verified, key_3036678428, 0);
    if (!((verified_3036678643 == graph_3036678427.revision))) {
    result_3036678430 = 0;
    break BeforeRet;
    }
    
    var changed_3036678739 = getOrDefault_3036678520(graph_3036678427.changed, key_3036678428, graph_3036678427.revision);
    if ((changed_3036678739 == graph_3036678427.revision)) {
    result_3036678430 = 1;
    break BeforeRet;
    }
    
    result_3036678430 = 2;
    break BeforeRet;
  };

  return result_3036678430;

}

function mapKeyJs_3019899778(key_3019899780) {
  var result_3019899781 = null;

    let temp = key_3019899780;
    let newId = getIdAstNodeJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019899781;

}

function contains_3019913294(t_3019913297, key_3019913298) {
  var result_3019913299 = false;

    result_3019913299 = t_3019913297.has(mapKeyJs_3019899778(key_3019913298));

  return result_3019913299;

}

function HEX5BHEX5D_3019908139(t_3019908142, key_3019908143) {
  var result_3019908144 = null;
  var result_3019908144_Idx = 0;

    var hcHEX60gensym22_3019908145 = [0];
    var indexHEX60gensym22_3019908152 = rawGet_3036676563(t_3019908142, key_3019908143, hcHEX60gensym22_3019908145, 0);
    if ((0 <= indexHEX60gensym22_3019908152)) {
    result_3019908144 = t_3019908142.data[chckIndx(indexHEX60gensym22_3019908152, 0, (t_3019908142.data).length - 1)]; result_3019908144_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3019908143);
    }
    

  return [result_3019908144, result_3019908144_Idx];

}

function rawGet_3019908325(t_3019908328, key_3019908329, hc_3019908330, hc_3019908330_Idx) {
  var result_3019908331 = 0;

  BeforeRet: {
    hc_3019908330[hc_3019908330_Idx] = hash_3019908332(key_3019908329);
    if ((hc_3019908330[hc_3019908330_Idx] == 0)) {
    hc_3019908330[hc_3019908330_Idx] = 314159265;
    }
    
    if (((t_3019908328.data).length == 0)) {
    result_3019908331 = -1;
    break BeforeRet;
    }
    
    var h_3019908439 = (hc_3019908330[hc_3019908330_Idx] & (t_3019908328.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019908328.data[chckIndx(h_3019908439, 0, (t_3019908328.data).length - 1)].Field0)) break Label2;
          if (((t_3019908328.data[chckIndx(h_3019908439, 0, (t_3019908328.data).length - 1)].Field0 == hc_3019908330[hc_3019908330_Idx]) && HEX3DHEX3D_3019908680(t_3019908328.data[chckIndx(h_3019908439, 0, (t_3019908328.data).length - 1)].Field1, key_3019908329))) {
          result_3019908331 = h_3019908439;
          break BeforeRet;
          }
          
          h_3019908439 = nextTry_1828716586(h_3019908439, (t_3019908328.data).length - 1);
        }
    };
    result_3019908331 = subInt(-1, h_3019908439);
  };

  return result_3019908331;

}

function contains_3019908312(s_3019908314, key_3019908315) {
  var result_3019908316 = false;

    var hc_3019908317 = [0];
    var index_3019908721 = rawGet_3019908325(s_3019908314, key_3019908315, hc_3019908317, 0);
    result_3019908316 = (0 <= index_3019908721);

  return result_3019908316;

}

function mustRehash_3019908857(t_3019908859) {
  var result_3019908860 = false;

    if (!((t_3019908859.counter < (t_3019908859.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019908860 = ((mulInt((t_3019908859.data).length, 2) < mulInt(t_3019908859.counter, 3)) || (subInt((t_3019908859.data).length, t_3019908859.counter) < 4));

  return result_3019908860;

}

function rawGetKnownHC_3019909463(t_3019909466, key_3019909467, hc_3019909468) {
  var result_3019909469 = 0;

  BeforeRet: {
    if (((t_3019909466.data).length == 0)) {
    result_3019909469 = -1;
    break BeforeRet;
    }
    
    var h_3019909554 = (hc_3019909468 & (t_3019909466.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019909466.data[chckIndx(h_3019909554, 0, (t_3019909466.data).length - 1)].Field0)) break Label2;
          if (((t_3019909466.data[chckIndx(h_3019909554, 0, (t_3019909466.data).length - 1)].Field0 == hc_3019909468) && HEX3DHEX3D_3019908680(t_3019909466.data[chckIndx(h_3019909554, 0, (t_3019909466.data).length - 1)].Field1, key_3019909467))) {
          result_3019909469 = h_3019909554;
          break BeforeRet;
          }
          
          h_3019909554 = nextTry_1828716586(h_3019909554, (t_3019909466.data).length - 1);
        }
    };
    result_3019909469 = subInt(-1, h_3019909554);
  };

  return result_3019909469;

}

function rawInsert_3019909967(s_3019909969, data_3019909970, data_3019909970_Idx, key_3019909971, hc_3019909972, h_3019909973) {
    if (((data_3019909970[data_3019909970_Idx]).length == 0)) {
    var correctSizeHEX60gensym222_3019910056 = slotsNeeded_1828716594(64);
    s_3019909969.counter = 0;
    s_3019909969.data = new Array(chckRange(correctSizeHEX60gensym222_3019910056, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym222_3019910056, 0, 2147483647) ; ++i) { s_3019909969.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    data_3019909970[data_3019909970_Idx][chckIndx(h_3019909973, 0, (data_3019909970[data_3019909970_Idx]).length - 1)].Field1 = nimCopy(data_3019909970[data_3019909970_Idx][chckIndx(h_3019909973, 0, (data_3019909970[data_3019909970_Idx]).length - 1)].Field1, key_3019909971, NTI3036676204);
    data_3019909970[data_3019909970_Idx][chckIndx(h_3019909973, 0, (data_3019909970[data_3019909970_Idx]).length - 1)].Field0 = hc_3019909972;

  
}

function enlarge_3019909120(s_3019909122) {
    var n_3019909124 = [];
    n_3019909124 = new Array(chckRange(mulInt((s_3019909122.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3019909122.data).length, 2), 0, 2147483647) ; ++i) { n_3019909124[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    var Temporary1 = s_3019909122.data; s_3019909122.data = n_3019909124; n_3019909124 = Temporary1;    Label2: {
      var i_3019909222 = 0;
      var colontmp__2969567383 = 0;
      colontmp__2969567383 = (n_3019909124).length - 1;
      var res_2969567384 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567384 <= colontmp__2969567383)) break Label4;
            i_3019909222 = res_2969567384;
            if (isFilled_1828716583(n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field0)) {
            var j_3019909802 = subInt(-1, rawGetKnownHC_3019909463(s_3019909122, n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field1, n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field0));
            rawInsert_3019909967(s_3019909122, s_3019909122, "data", n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field1, n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field0, j_3019909802);
            }
            
            res_2969567384 = addInt(res_2969567384, 1);
          }
      };
    };

  
}

function incl_3019908741(s_3019908743, key_3019908744) {
    if (((s_3019908743.data).length == 0)) {
    var correctSizeHEX60gensym215_3019908827 = slotsNeeded_1828716594(64);
    s_3019908743.counter = 0;
    s_3019908743.data = new Array(chckRange(correctSizeHEX60gensym215_3019908827, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym215_3019908827, 0, 2147483647) ; ++i) { s_3019908743.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    var hc_3019908842 = [0];
    var index_3019908856 = rawGet_3019908325(s_3019908743, key_3019908744, hc_3019908842, 0);
    if ((index_3019908856 < 0)) {
    if (mustRehash_3019908857(s_3019908743)) {
    enlarge_3019909120(s_3019908743);
    index_3019908856 = rawGetKnownHC_3019909463(s_3019908743, key_3019908744, hc_3019908842[0]);
    }
    
    rawInsert_3019909967(s_3019908743, s_3019908743, "data", key_3019908744, hc_3019908842[0], subInt(-1, index_3019908856));
    s_3019908743.counter = addInt(s_3019908743.counter, 1);
    }
    

  
}

function getOrDefault_3019910448(t_3019910451, key_3019910452) {
  var result_3019910453 = [];

    var hcHEX60gensym223_3019910456 = [0];
    var indexHEX60gensym223_3019910463 = rawGet_3036676563(t_3019910451, key_3019910452, hcHEX60gensym223_3019910456, 0);
    if ((0 <= indexHEX60gensym223_3019910463)) {
    result_3019910453 = nimCopy(null, t_3019910451.data[chckIndx(indexHEX60gensym223_3019910463, 0, (t_3019910451.data).length - 1)].Field2, NTI33554449);
    }
    

  return result_3019910453;

}

function rawGet_3019902960(t_3019902963, key_3019902964, hc_3019902965, hc_3019902965_Idx) {
  var result_3019902966 = 0;

  BeforeRet: {
    hc_3019902965[hc_3019902965_Idx] = hash_1325400236(key_3019902964);
    if ((hc_3019902965[hc_3019902965_Idx] == 0)) {
    hc_3019902965[hc_3019902965_Idx] = 314159265;
    }
    
    if (((t_3019902963.data).length == 0)) {
    result_3019902966 = -1;
    break BeforeRet;
    }
    
    var h_3019903054 = (hc_3019902965[hc_3019902965_Idx] & (t_3019902963.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019902963.data[chckIndx(h_3019903054, 0, (t_3019902963.data).length - 1)].Field0)) break Label2;
          if (((t_3019902963.data[chckIndx(h_3019903054, 0, (t_3019902963.data).length - 1)].Field0 == hc_3019902965[hc_3019902965_Idx]) && (t_3019902963.data[chckIndx(h_3019903054, 0, (t_3019902963.data).length - 1)].Field1 == key_3019902964))) {
          result_3019902966 = h_3019903054;
          break BeforeRet;
          }
          
          h_3019903054 = nextTry_1308622883(h_3019903054, (t_3019902963.data).length - 1);
        }
    };
    result_3019902966 = subInt(-1, h_3019903054);
  };

  return result_3019902966;

}

function hasKey_3019910626(t_3019910629, key_3019910630) {
  var result_3019910631 = false;

    var hc_3019910632 = [0];
    result_3019910631 = (0 <= rawGet_3019902960(t_3019910629, key_3019910630, hc_3019910632, 0));

  return result_3019910631;

}

function contains_3019910620(t_3019910623, key_3019910624) {
  var result_3019910625 = false;

  BeforeRet: {
    result_3019910625 = hasKey_3019910626(t_3019910623, key_3019910624);
    break BeforeRet;
  };

  return result_3019910625;

}

function HEX5BHEX5D_3019910719(t_3019910722, key_3019910723) {
  var result_3019910724 = null;
  var result_3019910724_Idx = 0;

    var hcHEX60gensym22_3019910725 = [0];
    var indexHEX60gensym22_3019910732 = rawGet_3019902960(t_3019910722, key_3019910723, hcHEX60gensym22_3019910725, 0);
    if ((0 <= indexHEX60gensym22_3019910732)) {
    result_3019910724 = t_3019910722.data[chckIndx(indexHEX60gensym22_3019910732, 0, (t_3019910722.data).length - 1)]; result_3019910724_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3019910723);
    }
    

  return [result_3019910724, result_3019910724_Idx];

}

function HEX5BHEX5DHEX3D_3036679291(t_3036679294, key_3036679295, val_3036679296) {
    t_3036679294.set(mapKeyJs_3036678533(key_3036679295), val_3036679296);

  
}

function HEX5BHEX5DHEX3D_3036679511(t_3036679514, key_3036679515, val_3036679516) {
    t_3036679514.set(mapKeyJs_3036678533(key_3036679515), val_3036679516);

  
}

function markRed_3036679306(graph_3036679307, key_3036679308, fingerprint_3036679309) {
    HEX5BHEX5DHEX3D_3036679291(graph_3036679307.verified, key_3036679308, graph_3036679307.revision);
    HEX5BHEX5DHEX3D_3036679291(graph_3036679307.changed, key_3036679308, graph_3036679307.revision);
    HEX5BHEX5DHEX3D_3036679511(graph_3036679307.fingerprints, key_3036679308, fingerprint_3036679309);

  
}

function HEX5BHEX5DHEX3D_3036678949(t_3036678952, key_3036678953, val_3036678954) {
    t_3036678952.set(mapKeyJs_3036678533(key_3036678953), val_3036678954);

  
}

function clearEdges_3036678879(graph_3036678880, key_3036678881) {
    HEX5BHEX5DHEX3D_3036678949(graph_3036678880.dependencies, key_3036678881, []);

  
}

function setDependencies_3036678964(graph_3036678965, key_3036678966, deps_3036678967) {
    HEX5BHEX5DHEX3D_3036678949(graph_3036678965.dependencies, key_3036678966, deps_3036678967);

  
}

function pop_3019910865(s_3019910867, s_3019910867_Idx) {
  var result_3019910868 = [];

    var L_3019910872 = subInt((s_3019910867[s_3019910867_Idx]).length, 1);
    result_3019910868 = nimCopy(null, s_3019910867[s_3019910867_Idx][chckIndx(L_3019910872, 0, (s_3019910867[s_3019910867_Idx]).length - 1)], NTI3019898908);
    if (s_3019910867[s_3019910867_Idx].length < chckRange(L_3019910872, 0, 2147483647)) { for (var i = s_3019910867[s_3019910867_Idx].length ; i < chckRange(L_3019910872, 0, 2147483647) ; ++i) s_3019910867[s_3019910867_Idx].push([]); }
               else { s_3019910867[s_3019910867_Idx].length = chckRange(L_3019910872, 0, 2147483647); };

  return result_3019910868;

}

function isEmpty_1828716580(hcode_1828716581) {
  var result_1828716582 = false;

    result_1828716582 = (hcode_1828716581 == 0);

  return result_1828716582;

}

function exclImpl_3019910907(s_3019910909, key_3019910910) {
          var Temporary5;

  var result_3019910911 = false;

  BeforeRet: {
    var hc_3019910912 = [0];
    var i_3019910919 = rawGet_3019908325(s_3019910909, key_3019910910, hc_3019910912, 0);
    var msk_3019910923 = (s_3019910909.data).length - 1;
    result_3019910911 = true;
    if ((0 <= i_3019910919)) {
    result_3019910911 = false;
    s_3019910909.counter = subInt(s_3019910909.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3019910929 = i_3019910919;
          var r_3019910930 = j_3019910929;
          s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field0 = 0;
          s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field1 = nimCopy(s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3019910919 = (addInt(i_3019910919, 1) & msk_3019910923);
                if (isEmpty_1828716580(s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3019910930 = (s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field0 & msk_3019910923);
                if (!(((((r_3019910930 <= i_3019910919) && (j_3019910929 < r_3019910930)) || ((j_3019910929 < r_3019910930) && (i_3019910919 < j_3019910929))) || ((i_3019910919 < j_3019910929) && (r_3019910930 <= i_3019910919))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)];
          s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)] = genericReset(s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)], NTI3019898919);
          s_3019910909.data[chckIndx(j_3019910929, 0, (s_3019910909.data).length - 1)] = nimCopy(s_3019910909.data[chckIndx(j_3019910929, 0, (s_3019910909.data).length - 1)], Temporary5, NTI3019898919);
        }
    };
    }
    
  };

  return result_3019910911;

}

function excl_3019910892(s_3019910894, key_3019910895) {
    var _ = exclImpl_3019910907(s_3019910894, key_3019910895);

  
}

function pop_3019911495(s_3019911497, s_3019911497_Idx) {
  var result_3019911498 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

    var L_3019911502 = subInt((s_3019911497[s_3019911497_Idx]).length, 1);
    result_3019911498 = nimCopy(result_3019911498, s_3019911497[s_3019911497_Idx][chckIndx(L_3019911502, 0, (s_3019911497[s_3019911497_Idx]).length - 1)], NTI3036676204);
    if (s_3019911497[s_3019911497_Idx].length < chckRange(L_3019911502, 0, 2147483647)) { for (var i = s_3019911497[s_3019911497_Idx].length ; i < chckRange(L_3019911502, 0, 2147483647) ; ++i) s_3019911497[s_3019911497_Idx].push({Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}); }
               else { s_3019911497[s_3019911497_Idx].length = chckRange(L_3019911502, 0, 2147483647); };

  return result_3019911498;

}

function contains_3036679117(t_3036679120, key_3036679121) {
  var result_3036679122 = false;

    result_3036679122 = t_3036679120.has(mapKeyJs_3036678533(key_3036679121));

  return result_3036679122;

}

function HEX5BHEX5D_3036679211(t_3036679214, key_3036679215) {
  var result_3036679216 = [];

    result_3036679216 = nimCopy(null, t_3036679214.get(mapKeyJs_3036678533(key_3036679215)), NTI3036676200);

  return result_3036679216;

}

function fingerprint_3036679037(graph_3036679038, key_3036679039) {
  var result_3036679040 = [];

  BeforeRet: {
    if (contains_3036679117(graph_3036679038.fingerprints, key_3036679039)) {
    result_3036679040 = nimCopy(null, HEX5BHEX5D_3036679211(graph_3036679038.fingerprints, key_3036679039), NTI3036676200);
    break BeforeRet;
    }
    
  };

  return result_3036679040;

}

function HEX3DHEX3D_3019911508(x_3019911510, y_3019911511) {
  var result_3019911512 = false;

  BeforeRet: {
    var sameObject_3019911519 = false;
    sameObject_3019911519 = x_3019911510 === y_3019911511
    if (sameObject_3019911519) {
    result_3019911512 = true;
    break BeforeRet;
    }
    
    if (!(((x_3019911510).length == (y_3019911511).length))) {
    result_3019911512 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3019911533 = 0;
      var colontmp__2969567391 = 0;
      colontmp__2969567391 = subInt((x_3019911510).length, 1);
      var res_2969567392 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567392 <= colontmp__2969567391)) break Label3;
            i_3019911533 = res_2969567392;
            if (!((x_3019911510[chckIndx(i_3019911533, 0, (x_3019911510).length - 1)] == y_3019911511[chckIndx(i_3019911533, 0, (y_3019911511).length - 1)]))) {
            result_3019911512 = false;
            break BeforeRet;
            }
            
            res_2969567392 = addInt(res_2969567392, 1);
          }
      };
    };
    result_3019911512 = true;
    break BeforeRet;
  };

  return result_3019911512;

}

function markGreen_3036679225(graph_3036679226, key_3036679227) {
    HEX5BHEX5DHEX3D_3036679291(graph_3036679226.verified, key_3036679227, graph_3036679226.revision);

  
}

function force_3019908046(ctxHEX60gensym93_3019908047, keyHEX60gensym93_3019908048) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
    var Temporary10;

  BeforeRet: {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary1);
    try {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [102,111,114,99,101,32], (Temporary3 = HEX5BHEX5D_3019908139(ctxHEX60gensym93_3019908047.depGraph.queryNames, keyHEX60gensym93_3019908048.Field1), Temporary3)[0][Temporary3[1]], HEX24_3036676336(keyHEX60gensym93_3019908048.Field0));
    }
    
    if (contains_3019908312(ctxHEX60gensym93_3019908047.activeQuerySet, keyHEX60gensym93_3019908048)) {
    incl_3019908741(ctxHEX60gensym93_3019908047.recursiveQueries, keyHEX60gensym93_3019908048);
    var itemHEX60gensym93_3019910260 = nimCopy(null, keyHEX60gensym93_3019908048.Field0, NTI3036676201);
    var queryHEX60gensym93_3019910346 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3019908139(ctxHEX60gensym93_3019908047.depGraph.queryNames, keyHEX60gensym93_3019908048.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3036676336(itemHEX60gensym93_3019910260), [32,40], queryHEX60gensym93_3019910346, [41]);
    Label5: {
      var kHEX60gensym93_3019910354 = 0;
      var colontmp__2969567378 = 0;
      colontmp__2969567378 = (ctxHEX60gensym93_3019908047.activeQueryStack).length - 1;
      var res_2969567379 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2969567379 <= colontmp__2969567378)) break Label7;
            kHEX60gensym93_3019910354 = res_2969567379;
            var iHEX60gensym93_3019910358 = subInt(subInt((ctxHEX60gensym93_3019908047.activeQueryStack).length, kHEX60gensym93_3019910354), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,91], HEX24_369098760(kHEX60gensym93_3019910354), [93,32,80,97,114,101,110,116,58,32], HEX24_3036676336(ctxHEX60gensym93_3019908047.activeQueryStack[chckIndx(iHEX60gensym93_3019910358, 0, (ctxHEX60gensym93_3019908047.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3019910448(ctxHEX60gensym93_3019908047.depGraph.queryNames, ctxHEX60gensym93_3019908047.activeQueryStack[chckIndx(iHEX60gensym93_3019910358, 0, (ctxHEX60gensym93_3019908047.activeQueryStack).length - 1)].Field1));
            res_2969567379 = addInt(res_2969567379, 1);
          }
      };
    };
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3019910620(ctxHEX60gensym93_3019908047.recoveryFunctions, keyHEX60gensym93_3019908048.Field1)) {
    (Temporary8 = HEX5BHEX5D_3019910719(ctxHEX60gensym93_3019908047.recoveryFunctions, keyHEX60gensym93_3019908048.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym93_3019908048);
    markRed_3036679306(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048, []);
    }
    
    break BeforeRet;
    }
    
    incl_3019908741(ctxHEX60gensym93_3019908047.activeQuerySet, keyHEX60gensym93_3019908048);
    var Temporary9 = nimCopy(null, keyHEX60gensym93_3019908048, NTI3036676204);
    ctxHEX60gensym93_3019908047.activeQueryStack.push(Temporary9);;
    clearEdges_3036678879(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048);
    ctxHEX60gensym93_3019908047.dependencyStack.push([]);;
    recordDependency_3019906144(ctxHEX60gensym93_3019908047, keyHEX60gensym93_3019908048.Field0, -1);
    var fingerprintHEX60gensym93_3019910864 = ctxHEX60gensym93_3019908047.updateFunctions[chckIndx(keyHEX60gensym93_3019908048.Field1, 0, (ctxHEX60gensym93_3019908047.updateFunctions).length - 1)](keyHEX60gensym93_3019908048.Field0);
    setDependencies_3036678964(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048, pop_3019910865(ctxHEX60gensym93_3019908047, "dependencyStack"));
    excl_3019910892(ctxHEX60gensym93_3019908047.activeQuerySet, keyHEX60gensym93_3019908048);
    var _ = pop_3019911495(ctxHEX60gensym93_3019908047, "activeQueryStack");
    var prevFingerprintHEX60gensym93_3019911507 = fingerprint_3036679037(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048);
    if (HEX3DHEX3D_3019911508(fingerprintHEX60gensym93_3019910864, prevFingerprintHEX60gensym93_3019911507)) {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3036679225(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048);
    }
    else {
      if (ctxHEX60gensym93_3019908047.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [109,97,114,107,32,114,101,100]);
      }
      
      markRed_3036679306(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048, fingerprintHEX60gensym93_3019910864);
    }
    
    } finally {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    Temporary10 = 1;
    }
    else {
    Temporary10 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary10);
    }
  };

  
}

function addQuoted_3087008238(s_3087008240, s_3087008240_Idx, x_3087008241) {
    s_3087008240[s_3087008240_Idx].push.apply(s_3087008240[s_3087008240_Idx], HEX24_3087008191(x_3087008241));;

  
}

function collectionToString_3087008198(x_3087008200, prefix_3087008201, separator_3087008202, suffix_3087008203) {
  var result_3087008204 = [[]];

    result_3087008204[0] = nimCopy(null, prefix_3087008201, NTI33554449);
    var firstElement_3087008205 = true;
    Label1: {
      var value_3087008228 = null;
      var i_2969567396 = 0;
      var L_2969567397 = (x_3087008200).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567396 < L_2969567397)) break Label3;
            value_3087008228 = x_3087008200[i_2969567396];
            if (firstElement_3087008205) {
            firstElement_3087008205 = false;
            }
            else {
            result_3087008204[0].push.apply(result_3087008204[0], separator_3087008202);;
            }
            
            if ((value_3087008228 == null)) {
            result_3087008204[0].push.apply(result_3087008204[0], [110,105,108]);;
            }
            else {
            addQuoted_3087008238(result_3087008204, 0, value_3087008228);
            }
            
            i_2969567396 += 1;
            if (!(((x_3087008200).length == L_2969567397))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008204[0].push.apply(result_3087008204[0], suffix_3087008203);;

  return result_3087008204[0];

}

function HEX24_3087008194(x_3087008196) {
  var result_3087008197 = [];

    result_3087008197 = nimCopy(null, collectionToString_3087008198(x_3087008196, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008197;

}

function formatValue_2785018306(result_2785018308, result_2785018308_Idx, value_2785018309, specifier_2785018310) {
    formatValue_721420459(result_2785018308, result_2785018308_Idx, nimBoolToStr(value_2785018309), specifier_2785018310);

  
}

function HEX24_3087008191(typ_3087008192) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008193 = [];

  BeforeRet: {
    switch (typ_3087008192.kind) {
    case 0:
      result_3087008193 = nimCopy(null, [101,114,114,111,114], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008193 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      result_3087008193 = nimCopy(null, [115,116,114,105,110,103], NTI33554449);
      break BeforeRet;
      break;
    case 3:
      result_3087008193 = nimCopy(null, [105,110,116], NTI33554449);
      break BeforeRet;
      break;
    case 4:
      var Temporary1 = typ_3087008192;
      if (ConstSet62[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      var Temporary2 = typ_3087008192;
      if (ConstSet63[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      result_3087008193 = nimCopy(null, (HEX24_3087008194(Temporary1.paramTypes) || []).concat([32,45,62,32] || [],HEX24_3087008191(Temporary2.returnType) || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      result_3087008193 = nimCopy(null, [116,121,112,101], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var fmtRes_3087008257 = [mnewString(0)];
      fmtRes_3087008257[0].push.apply(fmtRes_3087008257[0], [97,110,121,40]);;
      var Temporary3 = typ_3087008192;
      if (ConstSet64[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      formatValue_2785018306(fmtRes_3087008257, 0, Temporary3.open, []);
      fmtRes_3087008257[0].push.apply(fmtRes_3087008257[0], [41]);;
      result_3087008193 = nimCopy(null, fmtRes_3087008257[0], NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008193;

}

function HEX5BHEX5D_3019913388(t_3019913391, key_3019913392) {
  var result_3019913393 = null;

    result_3019913393 = t_3019913391.get(mapKeyJs_3019899778(key_3019913392));

  return result_3019913393;

}

function addQuoted_3019911798(s_3019911800, s_3019911800_Idx, x_3019911801) {
    s_3019911800[s_3019911800_Idx].push.apply(s_3019911800[s_3019911800_Idx], HEX24_3019911804(x_3019911801));;

  
}

function collectionToString_3019911765(x_3019911767, prefix_3019911768, separator_3019911769, suffix_3019911770) {
  var result_3019911771 = [[]];

    result_3019911771[0] = nimCopy(null, prefix_3019911768, NTI33554449);
    var firstElement_3019911772 = true;
    Label1: {
      var value_3019911794 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var i_2969567412 = 0;
      var L_2969567413 = (x_3019911767).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567412 < L_2969567413)) break Label3;
            value_3019911794 = x_3019911767[i_2969567412];
            if (firstElement_3019911772) {
            firstElement_3019911772 = false;
            }
            else {
            result_3019911771[0].push.apply(result_3019911771[0], separator_3019911769);;
            }
            
            addQuoted_3019911798(result_3019911771, 0, value_3019911794);
            i_2969567412 += 1;
            if (!(((x_3019911767).length == L_2969567413))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3019911771[0].push.apply(result_3019911771[0], suffix_3019911770);;

  return result_3019911771[0];

}

function HEX24_3019911761(x_3019911763) {
  var result_3019911764 = [];

    result_3019911764 = nimCopy(null, collectionToString_3019911765(x_3019911763, [64,91], [44,32], [93]), NTI33554449);

  return result_3019911764;

}

function getOrDefault_3036678846(t_3036678849, key_3036678850, default_3036678851) {
  var result_3036678852 = [];

    result_3036678852 = nimCopy(null, orDefaultJs((t_3036678849).get(mapKeyJs_3036678533(key_3036678850)), (default_3036678851)), NTI3036676235);

  return result_3036678852;

}

function getDependencies_3036678749(graph_3036678750, key_3036678751) {
  var result_3036678752 = [];

    result_3036678752 = nimCopy(null, getOrDefault_3036678846(graph_3036678750.dependencies, key_3036678751, []), NTI3036676235);
    if ((((result_3036678752).length == 0) && !((key_3036678751.Field1 == -1)))) {
    result_3036678752.push({Field0: nimCopy(null, key_3036678751.Field0, NTI3036676201), Field1: -1});;
    }
    

  return result_3036678752;

}

function tryMarkGreen_3019911565(ctxHEX60gensym94_3019911566, keyHEX60gensym94_3019911567, tryForceHEX60gensym94_3019911568) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
    var Temporary22;

  var result_3019911569 = 0;

  BeforeRet: {
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary1);
    try {
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [116,114,121,77,97,114,107,71,114,101,101,110,32], ((Temporary3 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, keyHEX60gensym94_3019911567.Field1), Temporary3)[0][Temporary3[1]] || []).concat([58] || [],HEX24_3036676336(keyHEX60gensym94_3019911567.Field0) || []), [44,32,100,101,112,115,58,32], HEX24_3019911761(getDependencies_3036678749(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567)));
    }
    
    if (contains_3019908312(ctxHEX60gensym94_3019911566.activeQuerySet, keyHEX60gensym94_3019911567)) {
    incl_3019908741(ctxHEX60gensym94_3019911566.recursiveQueries, keyHEX60gensym94_3019911567);
    var itemHEX60gensym94_3019911951 = nimCopy(null, keyHEX60gensym94_3019911567.Field0, NTI3036676201);
    var queryHEX60gensym94_3019912037 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, keyHEX60gensym94_3019911567.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3036676336(itemHEX60gensym94_3019911951), [32,40], queryHEX60gensym94_3019912037, [41]);
    Label5: {
      var kHEX60gensym94_3019912045 = 0;
      var colontmp__2969567400 = 0;
      colontmp__2969567400 = (ctxHEX60gensym94_3019911566.activeQueryStack).length - 1;
      var res_2969567401 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2969567401 <= colontmp__2969567400)) break Label7;
            kHEX60gensym94_3019912045 = res_2969567401;
            var iHEX60gensym94_3019912049 = subInt(subInt((ctxHEX60gensym94_3019911566.activeQueryStack).length, kHEX60gensym94_3019912045), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,91], HEX24_369098760(kHEX60gensym94_3019912045), [93,32,80,97,114,101,110,116,58,32], HEX24_3036676336(ctxHEX60gensym94_3019911566.activeQueryStack[chckIndx(iHEX60gensym94_3019912049, 0, (ctxHEX60gensym94_3019911566.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3019910448(ctxHEX60gensym94_3019911566.depGraph.queryNames, ctxHEX60gensym94_3019911566.activeQueryStack[chckIndx(iHEX60gensym94_3019912049, 0, (ctxHEX60gensym94_3019911566.activeQueryStack).length - 1)].Field1));
            res_2969567401 = addInt(res_2969567401, 1);
          }
      };
    };
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3019910620(ctxHEX60gensym94_3019911566.recoveryFunctions, keyHEX60gensym94_3019911567.Field1)) {
    (Temporary8 = HEX5BHEX5D_3019910719(ctxHEX60gensym94_3019911566.recoveryFunctions, keyHEX60gensym94_3019911567.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym94_3019911567);
    markRed_3036679306(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567, []);
    }
    
    result_3019911569 = 2;
    break BeforeRet;
    }
    
    incl_3019908741(ctxHEX60gensym94_3019911566.activeQuerySet, keyHEX60gensym94_3019911567);
    var Temporary9 = nimCopy(null, keyHEX60gensym94_3019911567, NTI3036676204);
    ctxHEX60gensym94_3019911566.activeQueryStack.push(Temporary9);;
    try {
    var verifiedHEX60gensym94_3019912458 = getOrDefault_3036678520(ctxHEX60gensym94_3019911566.depGraph.verified, keyHEX60gensym94_3019911567, 0);
    Label11: {
      var iHEX60gensym94_3019912482 = 0;
      var depHEX60gensym94_3019912483 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var colontmp__2969567405 = [];
      colontmp__2969567405 = getDependencies_3036678749(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567);
      var i_2969567407 = 0;
      var L_2969567408 = (colontmp__2969567405).length;
      Label12: {
          Label13: while (true) {
          if (!(i_2969567407 < L_2969567408)) break Label13;
            iHEX60gensym94_3019912482 = i_2969567407;
            depHEX60gensym94_3019912483 = nimCopy(depHEX60gensym94_3019912483, colontmp__2969567405[chckIndx(i_2969567407, 0, (colontmp__2969567405).length - 1)], NTI3036676204);
            Label14: {
              depHEX60gensym94_3019912483._id = undefined;
              depHEX60gensym94_3019912483.Field0._id = undefined;
              if (HEX3DHEX3D_2046820626(depHEX60gensym94_3019912483.Field0.Field0, null_2046820646)) {
              if (ctxHEX60gensym94_3019911566.enableLogging) {
              rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,103,111,116,32,100,101,108,101,116,101,100,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3019911569 = 1;
              break BeforeRet;
              }
              else {
              if (HEX3DHEX3D_2046820626(depHEX60gensym94_3019912483.Field0.Field0, dependencyGlobalRevision_3036676217)) {
              if ((verifiedHEX60gensym94_3019912458 < ctxHEX60gensym94_3019911566.depGraph.revision)) {
              if (ctxHEX60gensym94_3019911566.enableLogging) {
              rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3019911569 = 1;
              break BeforeRet;
              }
              else {
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
              }
              
              }
              }
              switch (nodeColor_3036678426(ctxHEX60gensym94_3019911566.depGraph, depHEX60gensym94_3019912483, verifiedHEX60gensym94_3019912458)) {
              case 2:
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary15 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary15)[0][Temporary15[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [32,105,115,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
                break;
              case 1:
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary16 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary16)[0][Temporary16[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [32,105,115,32,114,101,100,44,32,102,97,105,108,101,100]);
                }
                
                result_3019911569 = 1;
                break BeforeRet;
                break;
              case 0:
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary17 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary17)[0][Temporary17[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [32,105,115,32,103,114,101,121]);
                }
                
                switch (tryMarkGreen_3019911565(ctxHEX60gensym94_3019911566, depHEX60gensym94_3019912483, true)) {
                case 2:
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary18 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary18)[0][Temporary18[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,49,32] || []).concat(HEX24_3019911804(keyHEX60gensym94_3019911567) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3019911569 = 2;
                  break BeforeRet;
                  break;
                case 1:
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary19 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary19)[0][Temporary19[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [44,32,109,97,114,107,32,103,114,101,101,110,32,102,97,105,108,101,100]);
                  }
                  
                  if (tryForceHEX60gensym94_3019911568) {
                  force_3019908046(ctxHEX60gensym94_3019911566, depHEX60gensym94_3019912483);
                  }
                  else {
                    result_3019911569 = 1;
                    break BeforeRet;
                  }
                  
                  if (contains_3019908312(ctxHEX60gensym94_3019911566.recursiveQueries, keyHEX60gensym94_3019911567)) {
                  excl_3019910892(ctxHEX60gensym94_3019911566.recursiveQueries, keyHEX60gensym94_3019911567);
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary20 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary20)[0][Temporary20[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,50,32] || []).concat(HEX24_3019911804(keyHEX60gensym94_3019911567) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3019911569 = 1;
                  break BeforeRet;
                  }
                  
                  if ((nodeColor_3036678426(ctxHEX60gensym94_3019911566.depGraph, depHEX60gensym94_3019912483, verifiedHEX60gensym94_3019912458) == 1)) {
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary21 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary21)[0][Temporary21[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [44,32,118,97,108,117,101,32,99,104,97,110,103,101,100]);
                  }
                  
                  result_3019911569 = 1;
                  break BeforeRet;
                  }
                  
                  break Label14;
                  break;
                default: 
                  break;
                }
                break;
              }
            };
            i_2969567407 = addInt(i_2969567407, 1);
            if (!(((colontmp__2969567405).length == L_2969567408))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3036679225(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567);
    result_3019911569 = 0;
    break BeforeRet;
    } finally {
    excl_3019910892(ctxHEX60gensym94_3019911566.activeQuerySet, keyHEX60gensym94_3019911567);
    var _ = pop_3019911495(ctxHEX60gensym94_3019911566, "activeQueryStack");
    }
    } finally {
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    Temporary22 = 1;
    }
    else {
    Temporary22 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary22);
    }
  };

  return result_3019911569;

}

function clear_3019913516(s_3019913518) {
    s_3019913518.counter = 0;
    Label1: {
      var i_3019913604 = 0;
      var colontmp__2969567416 = 0;
      colontmp__2969567416 = (s_3019913518.data).length;
      var i_2969567417 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567417 < colontmp__2969567416)) break Label3;
            i_3019913604 = i_2969567417;
            s_3019913518.data[chckIndx(i_3019913604, 0, (s_3019913518.data).length - 1)].Field0 = 0;
            s_3019913518.data[chckIndx(i_3019913604, 0, (s_3019913518.data).length - 1)].Field1 = nimCopy(s_3019913518.data[chckIndx(i_3019913604, 0, (s_3019913518.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
            i_2969567417 = addInt(i_2969567417, 1);
          }
      };
    };

  
}

function getStackTrace_33556599(e_33556600) {
  var result_33556601 = [];

    result_33556601 = nimCopy(null, e_33556600.trace, NTI33554449);

  return result_33556601;

}

function getCurrentException() {
  var result_33556459 = null;

    if (isNimException_33556456()) {
    result_33556459 = lastJSError;
    }
    

  return result_33556459;

}

function computeType_3019913434(ctxHEX60gensym97_3019913435, inputHEX60gensym97_3019913436, recordDependencyHEX60gensym97_3019913437) {
    var Temporary3;
    var Temporary5;

  var result_3019913438 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym97_3019913849 = getItem_3019906357(inputHEX60gensym97_3019913436);
    var keyHEX60gensym97_3019913850 = {Field0: nimCopy(null, itemHEX60gensym97_3019913849, NTI3036676201), Field1: 0};
    if (recordDependencyHEX60gensym97_3019913437) {
    recordDependency_3019906144(ctxHEX60gensym97_3019913435, itemHEX60gensym97_3019913849, 0);
    }
    
    var colorHEX60gensym97_3019913851 = nodeColor_3036678426(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, 0);
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [84,121,112,101], [32], reprEnum(colorHEX60gensym97_3019913851, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym97_3019913849));
    }
    
    if ((colorHEX60gensym97_3019913851 == 2)) {
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
    if (false) {
    markRed_3036679306(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, []);
    }
    
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    }
    else {
      if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
      }
      
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym97_3019913851 == 0)) {
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
    if (false) {
    markRed_3036679306(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, []);
    }
    
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850, true) == 0)) {
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym97_3019913435.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
      if (false) {
      markRed_3036679306(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, []);
      }
      
      if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
      }
      
      if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
      raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym97_3019913851 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,55,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym97_3019913435.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym97_3019913435.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym97_3019913435.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019913438;

}

function formatValue_3019948837(result_3019948839, result_3019948839_Idx, value_3019948840, specifier_3019948841) {
    formatValue_721420459(result_3019948839, result_3019948839_Idx, HEX24_3087008191(value_3019948840), specifier_3019948841);

  
}

function contains_3019916420(t_3019916423, key_3019916424) {
  var result_3019916425 = false;

    result_3019916425 = t_3019916423.has(mapKeyJs_3019899778(key_3019916424));

  return result_3019916425;

}

function HEX24_3087008498(value_3087008499) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008500 = [];

  BeforeRet: {
    switch (value_3087008499.kind) {
    case 0:
      result_3087008500 = nimCopy(null, [60,118,107,69,114,114,111,114,62], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008500 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary1 = value_3087008499;
      if (ConstSet65[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, Temporary1.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 3:
      var Temporary2 = value_3087008499;
      if (ConstSet66[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, HEX24_369098760(Temporary2.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 4:
      result_3087008500 = nimCopy(null, [60,98,117,105,108,116,105,110,45,102,117,110,99,116,105,111,110,62], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008499;
      if (ConstSet67[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, ([60,97,115,116,45,102,117,110,99,116,105,111,110,32] || []).concat(HEX24_3003123671(Temporary3.node) || [],[62] || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008499;
      if (ConstSet68[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, HEX24_3087008191(Temporary4.typ), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008500;

}

function HEX5BHEX5D_3019916514(t_3019916517, key_3019916518) {
  var result_3019916519 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019916519 = nimCopy(result_3019916519, t_3019916517.get(mapKeyJs_3019899778(key_3019916518)), NTI3087007751);

  return result_3019916519;

}

function computeValue_3019916562(ctxHEX60gensym101_3019916563, inputHEX60gensym101_3019916564, recordDependencyHEX60gensym101_3019916565) {
    var Temporary3;
    var Temporary5;

  var result_3019916566 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym101_3019916647 = getItem_3019906357(inputHEX60gensym101_3019916564);
    var keyHEX60gensym101_3019916648 = {Field0: nimCopy(null, itemHEX60gensym101_3019916647, NTI3036676201), Field1: 1};
    if (recordDependencyHEX60gensym101_3019916565) {
    recordDependency_3019906144(ctxHEX60gensym101_3019916563, itemHEX60gensym101_3019916647, 1);
    }
    
    var colorHEX60gensym101_3019916649 = nodeColor_3036678426(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, 0);
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,117,101], [32], reprEnum(colorHEX60gensym101_3019916649, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym101_3019916647));
    }
    
    if ((colorHEX60gensym101_3019916649 == 2)) {
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
    if (false) {
    markRed_3036679306(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, []);
    }
    
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    }
    else {
      if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
      }
      
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym101_3019916649 == 0)) {
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
    if (false) {
    markRed_3036679306(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, []);
    }
    
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648, true) == 0)) {
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym101_3019916563.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
      if (false) {
      markRed_3036679306(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, []);
      }
      
      if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
      }
      
      if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym101_3019916649 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,49,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym101_3019916563.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym101_3019916563.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym101_3019916563.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019916566;

}

function formatValue_3154118047(result_3154118049, result_3154118049_Idx, value_3154118050, specifier_3154118051) {
    formatValue_721420459(result_3154118049, result_3154118049_Idx, HEX24_3087008498(value_3154118050), specifier_3154118051);

  
}

function newFunctionType_3087008173(paramTypes_3087008174, returnType_3087008175) {
  var result_3087008176 = null;

    result_3087008176 = {kind: 4, returnType: returnType_3087008175, paramTypes: nimCopy(null, paramTypes_3087008174, NTI3087008055), mHash: 0, open: false};

  return result_3087008176;

}

function HEX3DHEX3D_3087008331(x_3087008333, y_3087008334) {
  var result_3087008335 = false;

  BeforeRet: {
    var sameObject_3087008342 = false;
    sameObject_3087008342 = x_3087008333 === y_3087008334
    if (sameObject_3087008342) {
    result_3087008335 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008333).length == (y_3087008334).length))) {
    result_3087008335 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008356 = 0;
      var colontmp__2969567420 = 0;
      colontmp__2969567420 = subInt((x_3087008333).length, 1);
      var res_2969567421 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567421 <= colontmp__2969567420)) break Label3;
            i_3087008356 = res_2969567421;
            if (!(HEX3DHEX3D_3087008313(x_3087008333[chckIndx(i_3087008356, 0, (x_3087008333).length - 1)], y_3087008334[chckIndx(i_3087008356, 0, (y_3087008334).length - 1)]))) {
            result_3087008335 = false;
            break BeforeRet;
            }
            
            res_2969567421 = addInt(res_2969567421, 1);
          }
      };
    };
    result_3087008335 = true;
    break BeforeRet;
  };

  return result_3087008335;

}

function HEX3DHEX3D_3087008313(a_3087008314, b_3087008315) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_3087008316 = false;

  BeforeRet: {
    if ((a_3087008314 == null)) {
    result_3087008316 = (b_3087008315 == null);
    break BeforeRet;
    }
    
    if ((b_3087008315 == null)) {
    result_3087008316 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008314.kind == b_3087008315.kind))) {
    result_3087008316 = false;
    break BeforeRet;
    }
    
    switch (a_3087008314.kind) {
    case 4:
      var Temporary2 = a_3087008314;
      if (ConstSet71[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = b_3087008315;
      if (ConstSet72[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      if (!HEX3DHEX3D_3087008313(Temporary2.returnType, Temporary3.returnType)) Temporary1 = false; else {        var Temporary4 = a_3087008314;
        if (ConstSet73[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        var Temporary5 = b_3087008315;
        if (ConstSet74[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary1 = HEX3DHEX3D_3087008331(Temporary4.paramTypes, Temporary5.paramTypes);      }      result_3087008316 = Temporary1;
      break BeforeRet;
      break;
    case 5:
      var Temporary6 = a_3087008314;
      if (ConstSet75[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      var Temporary7 = b_3087008315;
      if (ConstSet76[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007747)); }
      result_3087008316 = (Temporary6.open == Temporary7.open);
      break BeforeRet;
      break;
    default: 
      result_3087008316 = true;
      break BeforeRet;
      break;
    }
  };

  return result_3087008316;

}

function anyType_3087008188(open_3087008189) {
  var result_3087008190 = null;

    result_3087008190 = {kind: 5, open: open_3087008189, mHash: 0, returnType: null, paramTypes: []};

  return result_3087008190;

}

function contains_3019922352(t_3019922355, key_3019922356) {
  var result_3019922357 = false;

    result_3019922357 = t_3019922355.has(mapKeyJs_3019899778(key_3019922356));

  return result_3019922357;

}

function len_3087009065(t_3087009068) {
  var result_3087009069 = 0;

    result_3087009069 = t_3087009068.counter;

  return result_3087009069;

}

function addQuoted_3019905691(s_3019905693, s_3019905693_Idx, x_3019905694) {
    s_3019905693[s_3019905693_Idx].push.apply(s_3019905693[s_3019905693_Idx], HEX24_2046820617(x_3019905694));;

  
}

function HEX24_3087008915(symbol_3087008916) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008917 = [];

  BeforeRet: {
    switch (symbol_3087008916.kind) {
    case 0:
      var Temporary1 = symbol_3087008916;
      if (ConstSet88[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008917 = nimCopy(null, ([83,121,109,40,65,115,116,78,111,100,101,44,32] || []).concat(HEX24_2046820617(symbol_3087008916.id) || [],[44,32] || [],HEX24_3003123671(Temporary1.node) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = symbol_3087008916;
      if (ConstSet89[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008916;
      if (ConstSet90[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3087008917 = nimCopy(null, ([83,121,109,40,66,117,105,108,116,105,110,44,32] || []).concat(HEX24_2046820617(symbol_3087008916.id) || [],[44,32] || [],HEX24_3087008191(Temporary2.typ) || [],[44,32] || [],HEX24_3087008498(Temporary3.value) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008917;

}

function addQuoted_3019905502(s_3019905504, s_3019905504_Idx, x_3019905505) {
    s_3019905504[s_3019905504_Idx].push.apply(s_3019905504[s_3019905504_Idx], HEX24_3087008915(x_3019905505));;

  
}

function HEX24_3019905598(t_3019905601) {
  var result_3019905602 = [[]];

    if ((len_3087009065(t_3019905601) == 0)) {
    result_3019905602[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_3019905602[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_3019905689 = ({padding: 0, time: 0, fuzz: 0, count: 0});
        var val_3019905690 = null;
        var L_2969567428 = len_3087009065(t_3019905601);
        Label2: {
          var h_2969567430 = 0;
          var colontmp__2969567431 = 0;
          colontmp__2969567431 = (t_3019905601.data).length - 1;
          var res_2969567432 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_2969567432 <= colontmp__2969567431)) break Label4;
                h_2969567430 = res_2969567432;
                if (isFilled_1308622880(t_3019905601.data[chckIndx(h_2969567430, 0, (t_3019905601.data).length - 1)].Field0)) {
                key_3019905689 = nimCopy(key_3019905689, t_3019905601.data[chckIndx(h_2969567430, 0, (t_3019905601.data).length - 1)].Field1, NTI2046820355);
                val_3019905690 = t_3019905601.data[chckIndx(h_2969567430, 0, (t_3019905601.data).length - 1)].Field2;
                if ((1 < (result_3019905602[0]).length)) {
                result_3019905602[0].push.apply(result_3019905602[0], [44,32]);;
                }
                
                addQuoted_3019905691(result_3019905602, 0, key_3019905689);
                result_3019905602[0].push.apply(result_3019905602[0], [58,32]);;
                addQuoted_3019905502(result_3019905602, 0, val_3019905690);
                if (!((len_3087009065(t_3019905601) == L_2969567428))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_2969567432 = addInt(res_2969567432, 1);
              }
          };
        };
      };
      result_3019905602[0].push.apply(result_3019905602[0], [125]);;
    }
    

  return result_3019905602[0];

}

function HEX5BHEX5D_3019922446(t_3019922449, key_3019922450) {
  var result_3019922451 = null;

    result_3019922451 = t_3019922449.get(mapKeyJs_3019899778(key_3019922450));

  return result_3019922451;

}

function computeSymbols_3019922496(ctxHEX60gensym109_3019922497, inputHEX60gensym109_3019922498, recordDependencyHEX60gensym109_3019922499) {
    var Temporary3;
    var Temporary5;

  var result_3019922502 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym109_3019922583 = getItem_3019906357(inputHEX60gensym109_3019922498);
    var keyHEX60gensym109_3019922584 = {Field0: nimCopy(null, itemHEX60gensym109_3019922583, NTI3036676201), Field1: 3};
    if (recordDependencyHEX60gensym109_3019922499) {
    recordDependency_3019906144(ctxHEX60gensym109_3019922497, itemHEX60gensym109_3019922583, 3);
    }
    
    var colorHEX60gensym109_3019922585 = nodeColor_3036678426(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, 0);
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,115], [32], reprEnum(colorHEX60gensym109_3019922585, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym109_3019922583));
    }
    
    if ((colorHEX60gensym109_3019922585 == 2)) {
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
    if (false) {
    markRed_3036679306(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, []);
    }
    
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    }
    else {
      if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
      }
      
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym109_3019922585 == 0)) {
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
    if (false) {
    markRed_3036679306(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, []);
    }
    
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584, true) == 0)) {
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym109_3019922497.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
      if (false) {
      markRed_3036679306(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, []);
      }
      
      if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
      }
      
      if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym109_3019922585 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,57,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym109_3019922497.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym109_3019922497.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym109_3019922497.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019922502;

}

function rawGet_3019938123(t_3019938126, key_3019938127, hc_3019938128, hc_3019938128_Idx) {
  var result_3019938129 = 0;

  BeforeRet: {
    hc_3019938128[hc_3019938128_Idx] = hash_2046820630(key_3019938127);
    if ((hc_3019938128[hc_3019938128_Idx] == 0)) {
    hc_3019938128[hc_3019938128_Idx] = 314159265;
    }
    
    if (((t_3019938126.data).length == 0)) {
    result_3019938129 = -1;
    break BeforeRet;
    }
    
    var h_3019938214 = (hc_3019938128[hc_3019938128_Idx] & (t_3019938126.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019938126.data[chckIndx(h_3019938214, 0, (t_3019938126.data).length - 1)].Field0)) break Label2;
          if (((t_3019938126.data[chckIndx(h_3019938214, 0, (t_3019938126.data).length - 1)].Field0 == hc_3019938128[hc_3019938128_Idx]) && HEX3DHEX3D_2046820626(t_3019938126.data[chckIndx(h_3019938214, 0, (t_3019938126.data).length - 1)].Field1, key_3019938127))) {
          result_3019938129 = h_3019938214;
          break BeforeRet;
          }
          
          h_3019938214 = nextTry_1308622883(h_3019938214, (t_3019938126.data).length - 1);
        }
    };
    result_3019938129 = subInt(-1, h_3019938214);
  };

  return result_3019938129;

}

function hasKey_3019950765(t_3019950768, key_3019950769) {
  var result_3019950770 = false;

    var hc_3019950771 = [0];
    result_3019950770 = (0 <= rawGet_3019938123(t_3019950768, key_3019950769, hc_3019950771, 0));

  return result_3019950770;

}

function hasKey_3019950639(t_3019950642, key_3019950643) {
  var result_3019950644 = false;

    result_3019950644 = hasKey_3019950765(t_3019950642, key_3019950643);

  return result_3019950644;

}

function contains_3019950603(t_3019950606, key_3019950607) {
  var result_3019950608 = false;

  BeforeRet: {
    result_3019950608 = hasKey_3019950639(t_3019950606, key_3019950607);
    break BeforeRet;
  };

  return result_3019950608;

}

function HEX5BHEX5D_3019951024(t_3019951027, key_3019951028) {
  var result_3019951029 = null;
  var result_3019951029_Idx = 0;

    var hcHEX60gensym22_3019951030 = [0];
    var indexHEX60gensym22_3019951037 = rawGet_3019938123(t_3019951027, key_3019951028, hcHEX60gensym22_3019951030, 0);
    if ((0 <= indexHEX60gensym22_3019951037)) {
    result_3019951029 = t_3019951027.data[chckIndx(indexHEX60gensym22_3019951037, 0, (t_3019951027.data).length - 1)]; result_3019951029_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3019951028);
    }
    

  return [result_3019951029, result_3019951029_Idx];

}

function HEX5BHEX5D_3019950858(t_3019950861, key_3019950862) {
    var Temporary1;

  var result_3019950863 = null;
  var result_3019950863_Idx = 0;

    result_3019950863 = (Temporary1 = HEX5BHEX5D_3019951024(t_3019950861, key_3019950862), Temporary1)[0]; result_3019950863_Idx = Temporary1[1];

  return [result_3019950863, result_3019950863_Idx];

}

function getItem_3019907143(selfHEX60gensym86_3019907144) {
  var result_3019907145 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym86_3019907144.id, null_2046820646)) {
    selfHEX60gensym86_3019907144.id = nimCopy(selfHEX60gensym86_3019907144.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym86_3019907144.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,54,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567435 = nimCopy(null, selfHEX60gensym86_3019907144.id, NTI2046820355);
    var colontmp__2969567436 = 2;
    result_3019907145 = nimCopy(result_3019907145, {Field0: nimCopy(null, colontmp__2969567435, NTI2046820355), Field1: colontmp__2969567436}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019907145;

}

function mapKeyJs_3019901554(key_3019901556) {
  var result_3019901557 = null;

    let temp = key_3019901556;
    let newId = getIdSymbolJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019901557;

}

function contains_3019928285(t_3019928288, key_3019928289) {
  var result_3019928290 = false;

    result_3019928290 = t_3019928288.has(mapKeyJs_3019901554(key_3019928289));

  return result_3019928290;

}

function HEX5BHEX5D_3019928379(t_3019928382, key_3019928383) {
  var result_3019928384 = null;

    result_3019928384 = t_3019928382.get(mapKeyJs_3019901554(key_3019928383));

  return result_3019928384;

}

function computeSymbolType_3019928398(ctxHEX60gensym117_3019928399, inputHEX60gensym117_3019928400, recordDependencyHEX60gensym117_3019928401) {
    var Temporary3;
    var Temporary5;

  var result_3019928402 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym117_3019928483 = getItem_3019907143(inputHEX60gensym117_3019928400);
    var keyHEX60gensym117_3019928484 = {Field0: nimCopy(null, itemHEX60gensym117_3019928483, NTI3036676201), Field1: 5};
    if (recordDependencyHEX60gensym117_3019928401) {
    recordDependency_3019906144(ctxHEX60gensym117_3019928399, itemHEX60gensym117_3019928483, 5);
    }
    
    var colorHEX60gensym117_3019928485 = nodeColor_3036678426(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, 0);
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,84,121,112,101], [32], reprEnum(colorHEX60gensym117_3019928485, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym117_3019928483));
    }
    
    if ((colorHEX60gensym117_3019928485 == 2)) {
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
    if (false) {
    markRed_3036679306(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, []);
    }
    
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    }
    else {
      if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
      }
      
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym117_3019928485 == 0)) {
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
    if (false) {
    markRed_3036679306(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, []);
    }
    
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484, true) == 0)) {
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym117_3019928399.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
      if (false) {
      markRed_3036679306(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, []);
      }
      
      if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
      }
      
      if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym117_3019928485 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,55,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym117_3019928399.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym117_3019928399.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym117_3019928399.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019928402;

}

function none_3019913418() {
  var result_3019913424 = ({val: null});

  return result_3019913424;

}

function none_3019913415() {
  var result_3019913417 = ({val: null});

    result_3019913417 = nimCopy(result_3019913417, none_3019913418(), NTI3019907400);

  return result_3019913417;

}

function isNone_3019951213(self_3019951215) {
  var result_3019951216 = false;

    result_3019951216 = (self_3019951215.val == null);

  return result_3019951216;

}

function get_3019951256(self_3019951258) {
  var result_3019951259 = null;
  var result_3019951259_Idx = 0;

  BeforeRet: {
    if (isNone_3019951213(self_3019951258)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3019951259 = self_3019951258; result_3019951259_Idx = "val";
    break BeforeRet;
  };

  return [result_3019951259, result_3019951259_Idx];

}

function some_3019913402(val_3019913404) {
  var result_3019913405 = ({val: null});

    if (!(!((val_3019913404 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3019913405.val = val_3019913404;

  return result_3019913405;

}

function last_3003121922(node_3003121923) {
  var result_3003121924 = null;

  BeforeRet: {
    if ((0 < len_3003121752(node_3003121923))) {
    result_3003121924 = HEX5BHEX5D_3003121748(node_3003121923, subInt(len_3003121752(node_3003121923), 1));
    break BeforeRet;
    }
    
    result_3003121924 = null;
    break BeforeRet;
  };

  return result_3003121924;

}

function isSome_3019951383(self_3019951385) {
  var result_3019951386 = false;

    result_3019951386 = !((self_3019951385.val == null));

  return result_3019951386;

}

function get_3019951374(self_3019951376, otherwise_3019951377) {
    var Temporary1;

  var result_3019951378 = null;

    if (isSome_3019951383(self_3019951376)) {
    Temporary1 = self_3019951376.val;
    }
    else {
    Temporary1 = otherwise_3019951377;
    }
    
    result_3019951378 = Temporary1;

  return result_3019951378;

}

function contains_3019919209(t_3019919212, key_3019919213) {
  var result_3019919214 = false;

    result_3019919214 = t_3019919212.has(mapKeyJs_3019899778(key_3019919213));

  return result_3019919214;

}

function isSome_3087009356(self_3087009358) {
  var result_3087009359 = false;

    result_3087009359 = !((self_3087009358.val == null));

  return result_3087009359;

}

function HEX24_3019905491(self_3019905493) {
  var result_3019905494 = [[]];

    if (isSome_3087009356(self_3019905493)) {
    result_3019905494[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_3019905502(result_3019905494, 0, self_3019905493.val);
    result_3019905494[0].push.apply(result_3019905494[0], [41]);;
    }
    else {
      result_3019905494[0] = nimCopy(null, [110,111,110,101,40,83,121,109,98,111,108,41], NTI33554449);
    }
    

  return result_3019905494[0];

}

function HEX5BHEX5D_3019919303(t_3019919306, key_3019919307) {
  var result_3019919308 = ({val: null});

    result_3019919308 = nimCopy(result_3019919308, t_3019919306.get(mapKeyJs_3019899778(key_3019919307)), NTI3087008909);

  return result_3019919308;

}

function computeSymbol_3019919344(ctxHEX60gensym105_3019919345, inputHEX60gensym105_3019919346, recordDependencyHEX60gensym105_3019919347) {
    var Temporary3;
    var Temporary5;

  var result_3019919349 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym105_3019919430 = getItem_3019906357(inputHEX60gensym105_3019919346);
    var keyHEX60gensym105_3019919431 = {Field0: nimCopy(null, itemHEX60gensym105_3019919430, NTI3036676201), Field1: 2};
    if (recordDependencyHEX60gensym105_3019919347) {
    recordDependency_3019906144(ctxHEX60gensym105_3019919345, itemHEX60gensym105_3019919430, 2);
    }
    
    var colorHEX60gensym105_3019919432 = nodeColor_3036678426(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, 0);
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108], [32], reprEnum(colorHEX60gensym105_3019919432, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym105_3019919430));
    }
    
    if ((colorHEX60gensym105_3019919432 == 2)) {
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
    if (false) {
    markRed_3036679306(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, []);
    }
    
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    }
    else {
      if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
      }
      
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym105_3019919432 == 0)) {
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
    if (false) {
    markRed_3036679306(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, []);
    }
    
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431, true) == 0)) {
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym105_3019919345.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
      if (false) {
      markRed_3036679306(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, []);
      }
      
      if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
      }
      
      if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym105_3019919432 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,53,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym105_3019919345.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym105_3019919345.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym105_3019919345.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019919349;

}

function isNone_3087009384(self_3087009386) {
  var result_3087009387 = false;

    result_3087009387 = (self_3087009386.val == null);

  return result_3087009387;

}

function get_3087009376(self_3087009378) {
  var result_3087009379 = null;

    if (isNone_3087009384(self_3087009378)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087009379 = self_3087009378["val"];

  return result_3087009379;

}

function formatValue_3019951529(result_3019951531, result_3019951531_Idx, value_3019951532, specifier_3019951533) {
    formatValue_721420459(result_3019951531, result_3019951531_Idx, HEX24_3087008915(value_3019951532), specifier_3019951533);

  
}

function mustRehash_3019942773(t_3019942775) {
  var result_3019942776 = false;

    if (!((t_3019942775.counter < (t_3019942775.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019942776 = ((mulInt((t_3019942775.data).length, 2) < mulInt(t_3019942775.counter, 3)) || (subInt((t_3019942775.data).length, t_3019942775.counter) < 4));

  return result_3019942776;

}

function rawInsert_3019943466(t_3019943470, data_3019943471, data_3019943471_Idx, key_3019943472, val_3019943473, hc_3019943474, h_3019943475) {
    data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field1 = nimCopy(data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field1, key_3019943472, NTI3036676204);
    data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field2 = nimCopy(null, val_3019943473, NTI3019898985);
    data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field0 = hc_3019943474;

  
}

function enlarge_3019943030(t_3019943033) {
    var n_3019943036 = [];
    n_3019943036 = new Array(chckRange(mulInt((t_3019943033.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019943033.data).length, 2), 0, 2147483647) ; ++i) { n_3019943036[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3019943033.data; t_3019943033.data = n_3019943036; n_3019943036 = Temporary1;    Label2: {
      var i_3019943134 = 0;
      var colontmp__2969567439 = 0;
      colontmp__2969567439 = (n_3019943036).length - 1;
      var res_2969567440 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567440 <= colontmp__2969567439)) break Label4;
            i_3019943134 = res_2969567440;
            var eh_3019943215 = n_3019943036[chckIndx(i_3019943134, 0, (n_3019943036).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019943215)) {
            var j_3019943219 = (eh_3019943215 & (t_3019943033.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019943033.data[chckIndx(j_3019943219, 0, (t_3019943033.data).length - 1)].Field0)) break Label6;
                  j_3019943219 = nextTry_1308622883(j_3019943219, (t_3019943033.data).length - 1);
                }
            };
            rawInsert_3019943466(t_3019943033, t_3019943033, "data", n_3019943036[chckIndx(i_3019943134, 0, (n_3019943036).length - 1)].Field1, n_3019943036[chckIndx(i_3019943134, 0, (n_3019943036).length - 1)].Field2, eh_3019943215, j_3019943219);
            }
            
            res_2969567440 = addInt(res_2969567440, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019943725(t_3019943728, key_3019943729, hc_3019943730) {
  var result_3019943731 = 0;

  BeforeRet: {
    if (((t_3019943728.data).length == 0)) {
    result_3019943731 = -1;
    break BeforeRet;
    }
    
    var h_3019943816 = (hc_3019943730 & (t_3019943728.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019943728.data[chckIndx(h_3019943816, 0, (t_3019943728.data).length - 1)].Field0)) break Label2;
          if (((t_3019943728.data[chckIndx(h_3019943816, 0, (t_3019943728.data).length - 1)].Field0 == hc_3019943730) && HEX3DHEX3D_3019908680(t_3019943728.data[chckIndx(h_3019943816, 0, (t_3019943728.data).length - 1)].Field1, key_3019943729))) {
          result_3019943731 = h_3019943816;
          break BeforeRet;
          }
          
          h_3019943816 = nextTry_1308622883(h_3019943816, (t_3019943728.data).length - 1);
        }
    };
    result_3019943731 = subInt(-1, h_3019943816);
  };

  return result_3019943731;

}

function HEX5BHEX5DHEX3D_3019942505(t_3019942508, key_3019942509, val_3019942510) {
    if (((t_3019942508.data).length == 0)) {
    var correctSizeHEX60gensym357_3019942593 = slotsNeeded_1308622891(32);
    t_3019942508.counter = 0;
    t_3019942508.data = new Array(chckRange(correctSizeHEX60gensym357_3019942593, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym357_3019942593, 0, 2147483647) ; ++i) { t_3019942508.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3019942598 = [0];
    var index_3019942605 = rawGet_3019940162(t_3019942508, key_3019942509, hc_3019942598, 0);
    if ((0 <= index_3019942605)) {
    t_3019942508.data[chckIndx(index_3019942605, 0, (t_3019942508.data).length - 1)].Field2 = nimCopy(null, val_3019942510, NTI3019898985);
    }
    else {
      if (((t_3019942508.data).length == 0)) {
      var correctSizeHEX60gensym360_3019942768 = slotsNeeded_1308622891(32);
      t_3019942508.counter = 0;
      t_3019942508.data = new Array(chckRange(correctSizeHEX60gensym360_3019942768, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym360_3019942768, 0, 2147483647) ; ++i) { t_3019942508.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3019942773(t_3019942508)) {
      enlarge_3019943030(t_3019942508);
      index_3019942605 = rawGetKnownHC_3019943725(t_3019942508, key_3019942509, hc_3019942598[0]);
      }
      
      index_3019942605 = subInt(-1, index_3019942605);
      rawInsert_3019943466(t_3019942508, t_3019942508, "data", key_3019942509, val_3019942510, hc_3019942598[0], index_3019942605);
      t_3019942508.counter = addInt(t_3019942508.counter, 1);
    }
    

  
}

function hasKey_3019944174(t_3019944177, key_3019944178) {
  var result_3019944179 = false;

    var hc_3019944180 = [0];
    result_3019944179 = (0 <= rawGet_3019940817(t_3019944177, key_3019944178, hc_3019944180, 0));

  return result_3019944179;

}

function contains_3019944168(t_3019944171, key_3019944172) {
  var result_3019944173 = false;

  BeforeRet: {
    result_3019944173 = hasKey_3019944174(t_3019944171, key_3019944172);
    break BeforeRet;
  };

  return result_3019944173;

}

function mustRehash_3019944518(t_3019944520) {
  var result_3019944521 = false;

    if (!((t_3019944520.counter < (t_3019944520.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019944521 = ((mulInt((t_3019944520.data).length, 2) < mulInt(t_3019944520.counter, 3)) || (subInt((t_3019944520.data).length, t_3019944520.counter) < 4));

  return result_3019944521;

}

function rawInsert_3019945211(t_3019945215, data_3019945216, data_3019945216_Idx, key_3019945217, val_3019945218, hc_3019945219, h_3019945220) {
    data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field1 = nimCopy(data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field1, key_3019945217, NTI2046820355);
    data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field2 = nimCopy(data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field2, val_3019945218, NTI3019898884);
    data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field0 = hc_3019945219;

  
}

function enlarge_3019944775(t_3019944778) {
    var n_3019944781 = [];
    n_3019944781 = new Array(chckRange(mulInt((t_3019944778.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019944778.data).length, 2), 0, 2147483647) ; ++i) { n_3019944781[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    var Temporary1 = t_3019944778.data; t_3019944778.data = n_3019944781; n_3019944781 = Temporary1;    Label2: {
      var i_3019944879 = 0;
      var colontmp__2969567445 = 0;
      colontmp__2969567445 = (n_3019944781).length - 1;
      var res_2969567446 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567446 <= colontmp__2969567445)) break Label4;
            i_3019944879 = res_2969567446;
            var eh_3019944960 = n_3019944781[chckIndx(i_3019944879, 0, (n_3019944781).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019944960)) {
            var j_3019944964 = (eh_3019944960 & (t_3019944778.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019944778.data[chckIndx(j_3019944964, 0, (t_3019944778.data).length - 1)].Field0)) break Label6;
                  j_3019944964 = nextTry_1308622883(j_3019944964, (t_3019944778.data).length - 1);
                }
            };
            rawInsert_3019945211(t_3019944778, t_3019944778, "data", n_3019944781[chckIndx(i_3019944879, 0, (n_3019944781).length - 1)].Field1, n_3019944781[chckIndx(i_3019944879, 0, (n_3019944781).length - 1)].Field2, eh_3019944960, j_3019944964);
            }
            
            res_2969567446 = addInt(res_2969567446, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019945470(t_3019945473, key_3019945474, hc_3019945475) {
  var result_3019945476 = 0;

  BeforeRet: {
    if (((t_3019945473.data).length == 0)) {
    result_3019945476 = -1;
    break BeforeRet;
    }
    
    var h_3019945561 = (hc_3019945475 & (t_3019945473.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019945473.data[chckIndx(h_3019945561, 0, (t_3019945473.data).length - 1)].Field0)) break Label2;
          if (((t_3019945473.data[chckIndx(h_3019945561, 0, (t_3019945473.data).length - 1)].Field0 == hc_3019945475) && HEX3DHEX3D_2046820626(t_3019945473.data[chckIndx(h_3019945561, 0, (t_3019945473.data).length - 1)].Field1, key_3019945474))) {
          result_3019945476 = h_3019945561;
          break BeforeRet;
          }
          
          h_3019945561 = nextTry_1308622883(h_3019945561, (t_3019945473.data).length - 1);
        }
    };
    result_3019945476 = subInt(-1, h_3019945561);
  };

  return result_3019945476;

}

function HEX5BHEX5DHEX3D_3019944250(t_3019944253, key_3019944254, val_3019944255) {
    if (((t_3019944253.data).length == 0)) {
    var correctSizeHEX60gensym369_3019944338 = slotsNeeded_1308622891(32);
    t_3019944253.counter = 0;
    t_3019944253.data = new Array(chckRange(correctSizeHEX60gensym369_3019944338, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym369_3019944338, 0, 2147483647) ; ++i) { t_3019944253.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    }
    
    var hc_3019944343 = [0];
    var index_3019944350 = rawGet_3019940817(t_3019944253, key_3019944254, hc_3019944343, 0);
    if ((0 <= index_3019944350)) {
    t_3019944253.data[chckIndx(index_3019944350, 0, (t_3019944253.data).length - 1)].Field2 = nimCopy(t_3019944253.data[chckIndx(index_3019944350, 0, (t_3019944253.data).length - 1)].Field2, val_3019944255, NTI3019898884);
    }
    else {
      if (((t_3019944253.data).length == 0)) {
      var correctSizeHEX60gensym372_3019944513 = slotsNeeded_1308622891(32);
      t_3019944253.counter = 0;
      t_3019944253.data = new Array(chckRange(correctSizeHEX60gensym372_3019944513, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym372_3019944513, 0, 2147483647) ; ++i) { t_3019944253.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_3019944518(t_3019944253)) {
      enlarge_3019944775(t_3019944253);
      index_3019944350 = rawGetKnownHC_3019945470(t_3019944253, key_3019944254, hc_3019944343[0]);
      }
      
      index_3019944350 = subInt(-1, index_3019944350);
      rawInsert_3019945211(t_3019944253, t_3019944253, "data", key_3019944254, val_3019944255, hc_3019944343[0], index_3019944350);
      t_3019944253.counter = addInt(t_3019944253.counter, 1);
    }
    

  
}

function hasKey_3019945990(t_3019945993, key_3019945994) {
  var result_3019945995 = false;

    var hc_3019945996 = [0];
    result_3019945995 = (0 <= rawGet_3019941324(t_3019945993, key_3019945994, hc_3019945996, 0));

  return result_3019945995;

}

function contains_3019945984(t_3019945987, key_3019945988) {
  var result_3019945989 = false;

  BeforeRet: {
    result_3019945989 = hasKey_3019945990(t_3019945987, key_3019945988);
    break BeforeRet;
  };

  return result_3019945989;

}

function mustRehash_3019946423(t_3019946425) {
  var result_3019946426 = false;

    if (!((t_3019946425.counter < (t_3019946425.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019946426 = ((mulInt((t_3019946425.data).length, 2) < mulInt(t_3019946425.counter, 3)) || (subInt((t_3019946425.data).length, t_3019946425.counter) < 4));

  return result_3019946426;

}

function rawInsert_3019947116(t_3019947120, data_3019947121, data_3019947121_Idx, key_3019947122, val_3019947123, hc_3019947124, h_3019947125) {
    data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field1 = nimCopy(data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field1, key_3019947122, NTI3036676204);
    data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field2 = nimCopy(null, val_3019947123, NTI3019898888);
    data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field0 = hc_3019947124;

  
}

function enlarge_3019946680(t_3019946683) {
    var n_3019946686 = [];
    n_3019946686 = new Array(chckRange(mulInt((t_3019946683.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019946683.data).length, 2), 0, 2147483647) ; ++i) { n_3019946686[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3019946683.data; t_3019946683.data = n_3019946686; n_3019946686 = Temporary1;    Label2: {
      var i_3019946784 = 0;
      var colontmp__2969567451 = 0;
      colontmp__2969567451 = (n_3019946686).length - 1;
      var res_2969567452 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567452 <= colontmp__2969567451)) break Label4;
            i_3019946784 = res_2969567452;
            var eh_3019946865 = n_3019946686[chckIndx(i_3019946784, 0, (n_3019946686).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019946865)) {
            var j_3019946869 = (eh_3019946865 & (t_3019946683.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019946683.data[chckIndx(j_3019946869, 0, (t_3019946683.data).length - 1)].Field0)) break Label6;
                  j_3019946869 = nextTry_1308622883(j_3019946869, (t_3019946683.data).length - 1);
                }
            };
            rawInsert_3019947116(t_3019946683, t_3019946683, "data", n_3019946686[chckIndx(i_3019946784, 0, (n_3019946686).length - 1)].Field1, n_3019946686[chckIndx(i_3019946784, 0, (n_3019946686).length - 1)].Field2, eh_3019946865, j_3019946869);
            }
            
            res_2969567452 = addInt(res_2969567452, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019947366(t_3019947369, key_3019947370, hc_3019947371) {
  var result_3019947372 = 0;

  BeforeRet: {
    if (((t_3019947369.data).length == 0)) {
    result_3019947372 = -1;
    break BeforeRet;
    }
    
    var h_3019947457 = (hc_3019947371 & (t_3019947369.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019947369.data[chckIndx(h_3019947457, 0, (t_3019947369.data).length - 1)].Field0)) break Label2;
          if (((t_3019947369.data[chckIndx(h_3019947457, 0, (t_3019947369.data).length - 1)].Field0 == hc_3019947371) && HEX3DHEX3D_3019908680(t_3019947369.data[chckIndx(h_3019947457, 0, (t_3019947369.data).length - 1)].Field1, key_3019947370))) {
          result_3019947372 = h_3019947457;
          break BeforeRet;
          }
          
          h_3019947457 = nextTry_1308622883(h_3019947457, (t_3019947369.data).length - 1);
        }
    };
    result_3019947372 = subInt(-1, h_3019947457);
  };

  return result_3019947372;

}

function HEX5BHEX5DHEX3D_3019946155(t_3019946158, key_3019946159, val_3019946160) {
    if (((t_3019946158.data).length == 0)) {
    var correctSizeHEX60gensym381_3019946243 = slotsNeeded_1308622891(32);
    t_3019946158.counter = 0;
    t_3019946158.data = new Array(chckRange(correctSizeHEX60gensym381_3019946243, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym381_3019946243, 0, 2147483647) ; ++i) { t_3019946158.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3019946248 = [0];
    var index_3019946255 = rawGet_3019941324(t_3019946158, key_3019946159, hc_3019946248, 0);
    if ((0 <= index_3019946255)) {
    t_3019946158.data[chckIndx(index_3019946255, 0, (t_3019946158.data).length - 1)].Field2 = nimCopy(null, val_3019946160, NTI3019898888);
    }
    else {
      if (((t_3019946158.data).length == 0)) {
      var correctSizeHEX60gensym384_3019946418 = slotsNeeded_1308622891(32);
      t_3019946158.counter = 0;
      t_3019946158.data = new Array(chckRange(correctSizeHEX60gensym384_3019946418, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym384_3019946418, 0, 2147483647) ; ++i) { t_3019946158.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3019946423(t_3019946158)) {
      enlarge_3019946680(t_3019946158);
      index_3019946255 = rawGetKnownHC_3019947366(t_3019946158, key_3019946159, hc_3019946248[0]);
      }
      
      index_3019946255 = subInt(-1, index_3019946255);
      rawInsert_3019947116(t_3019946158, t_3019946158, "data", key_3019946159, val_3019946160, hc_3019946248[0], index_3019946255);
      t_3019946158.counter = addInt(t_3019946158.counter, 1);
    }
    

  
}

function HEX5BHEX5D_3019947888(t_3019947891, key_3019947892) {
  var result_3019947893 = null;
  var result_3019947893_Idx = 0;

    var hcHEX60gensym22_3019947894 = [0];
    var indexHEX60gensym22_3019947901 = rawGet_3019941324(t_3019947891, key_3019947892, hcHEX60gensym22_3019947894, 0);
    if ((0 <= indexHEX60gensym22_3019947901)) {
    result_3019947893 = t_3019947891.data[chckIndx(indexHEX60gensym22_3019947901, 0, (t_3019947891.data).length - 1)]; result_3019947893_Idx = "Field2";
    }
    else {
    raiseKeyError_3019940688(key_3019947892);
    }
    

  return [result_3019947893, result_3019947893_Idx];

}

function del_3019948061(t_3019948064, key_3019948065) {
    var hc_3019948066 = [0];
    var i_3019948073 = rawGet_3019940162(t_3019948064, key_3019948065, hc_3019948066, 0);
    var mskHEX60gensym36_3019948077 = (t_3019948064.data).length - 1;
    if ((0 <= i_3019948073)) {
    t_3019948064.counter = subInt(t_3019948064.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019948084 = i_3019948073;
            var rHEX60gensym36_3019948085 = jHEX60gensym36_3019948084;
            t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field0 = 0;
            t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field1 = nimCopy(t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
            t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field2 = nimCopy(null, [], NTI3019898985);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019948073 = (addInt(i_3019948073, 1) & mskHEX60gensym36_3019948077);
                  if (isEmpty_1308622877(t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019948085 = (t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field0 & mskHEX60gensym36_3019948077);
                  if (!(((((rHEX60gensym36_3019948085 <= i_3019948073) && (jHEX60gensym36_3019948084 < rHEX60gensym36_3019948085)) || ((jHEX60gensym36_3019948084 < rHEX60gensym36_3019948085) && (i_3019948073 < jHEX60gensym36_3019948084))) || ((i_3019948073 < jHEX60gensym36_3019948084) && (rHEX60gensym36_3019948085 <= i_3019948073))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019948064.data[chckIndx(jHEX60gensym36_3019948084, 0, (t_3019948064.data).length - 1)] = nimCopy(t_3019948064.data[chckIndx(jHEX60gensym36_3019948084, 0, (t_3019948064.data).length - 1)], t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)], NTI3019898997);
          }
      };
    };
    }
    

  
}

function computeTypeImpl_3019899459(ctx_3019899460, node_3019899461) {
      var Temporary4;
      var Temporary17;
      var Temporary20;
      var Temporary21;
      var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
        var Temporary28;
      var Temporary30;
                  var Temporary35;
                    var Temporary36;
                  var Temporary37;
                  var Temporary38;
                var Temporary40;
                var Temporary41;
      var Temporary42;
      var Temporary45;
      var Temporary49;
      var Temporary51;
                var Temporary61;
        var Temporary62;
        var Temporary65;
        var Temporary67;
            var Temporary72;

  var result_3019948919 = null;

  BeforeRet: {
    var logQueryHEX60gensym404_3019948921 = (ctx_3019899460.enableLogging || ctx_3019899460.enableQueryLogging);
    if (logQueryHEX60gensym404_3019948921) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym404_3019948921) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899461) || []));
    }
    
    try {
    var key_3019948932 = nimCopy(null, getTypeKey_3019913206(ctx_3019899460, getItem_3019906357(node_3019899461)), NTI3036676204);
    if (contains_3019940149(ctx_3019899460.diagnosticsPerQuery, key_3019948932)) {
    Label3: {
      var idHEX60gensym405_3019949110 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2969567325 = [];
      colontmp__2969567325 = (Temporary4 = HEX5BHEX5D_3019940594(ctx_3019899460.diagnosticsPerQuery, key_3019948932), Temporary4)[0][Temporary4[1]];
      var i_2969567327 = 0;
      var L_2969567328 = (colontmp__2969567325).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567327 < L_2969567328)) break Label6;
            idHEX60gensym405_3019949110 = colontmp__2969567325[chckIndx(i_2969567327, 0, (colontmp__2969567325).length - 1)];
            del_3019941318(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949110).queries, key_3019948932);
            i_2969567327 = addInt(i_2969567327, 1);
            if (!(((colontmp__2969567325).length == L_2969567328))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnosticsHEX60gensym405_3019949268 = [];
    var idsHEX60gensym405_3019949273 = [];
    try {
    Label8: {
      var expr_3019950075 = node_3019899461;
      var pos_3019950076 = 0;
      var _ = pos_3019950076;
      if ((expr_3019950075.kind == 0)) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 2)) {
++excHandler;
      try {
      var _ = nsuParseInt(node_3019899461.text);
      result_3019948919 = intType_3087008169();
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      var Temporary10 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary10);;
      var fmtRes_3019950095 = mnewString(0);
      fmtRes_3019950095.push.apply(fmtRes_3019950095, [78,117,109,98,101,114,32,108,105,116,101,114,97,108,32,105,115,32,110,111,116,32,118,97,108,105,100,32,111,114,32,111,117,116,115,105,100,101,32,111,102,32,114,97,110,103,101]);;
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950095, NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      }
      else {
      if ((expr_3019950075.kind == 3)) {
      result_3019948919 = stringType_3087008171();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 12)) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 11)) {
      if ((len_3003121752(node_3019899461) < 3)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var params_3019950112 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      recordDependency_3019906144(ctx_3019899460, getItem_3019906357(params_3019950112), -1);
      var returnTypeNode_3019950113 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      var paramTypes_3019950118 = [];
      var ok_3019950119 = true;
      Label11: {
        var param_3019950123 = null;
        var i_2969567338 = 0;
        var L_2969567339 = (params_3019950112.children).length;
        Label12: {
            Label13: while (true) {
            if (!(i_2969567338 < L_2969567339)) break Label13;
              param_3019950123 = params_3019950112.children[chckIndx(i_2969567338, 0, (params_3019950112.children).length - 1)];
              Label14: {
                var paramType_3019950124 = computeType_3019913434(ctx_3019899460, param_3019950123, true);
                if ((paramType_3019950124.kind == 0)) {
                ok_3019950119 = false;
                break Label14;
                }
                
                paramTypes_3019950118.push(paramType_3019950124);;
              };
              i_2969567338 = addInt(i_2969567338, 1);
              if (!(((params_3019950112.children).length == L_2969567339))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var returnTypeType_3019950133 = computeType_3019913434(ctx_3019899460, returnTypeNode_3019950113, true);
      if ((returnTypeType_3019950133.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((returnTypeType_3019950133.kind == 6))) {
      var Temporary15 = nimCopy(null, returnTypeNode_3019950113.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary15);;
      var fmtRes_3019950150 = [mnewString(0)];
      fmtRes_3019950150[0].push.apply(fmtRes_3019950150[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950150, 0, returnTypeType_3019950133, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950150[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var returnTypeValue_3019950160 = computeValue_3019916562(ctx_3019899460, returnTypeNode_3019950113, true);
      if ((returnTypeValue_3019950160.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((returnTypeValue_3019950160.kind == 6))) {
      var Temporary16 = nimCopy(null, returnTypeNode_3019950113.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary16);;
      var fmtRes_3019950177 = [mnewString(0)];
      fmtRes_3019950177[0].push.apply(fmtRes_3019950177[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3154118047(fmtRes_3019950177, 0, returnTypeValue_3019950160, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950177[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary17 = returnTypeValue_3019950160;
      if (ConstSet69[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI3087007750)); }
      var returnType_3019950187 = Temporary17.typ;
      result_3019948919 = newFunctionType_3087008173(paramTypes_3019950118, returnType_3019950187);
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 8)) {
      if ((len_3003121752(node_3019899461) == 0)) {
      var Temporary18 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary18);;
      var fmtRes_3019950200 = mnewString(0);
      fmtRes_3019950200.push.apply(fmtRes_3019950200, [69,109,112,116,121,32,99,97,108,108,32,110,111,100,101]);;
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950200, NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var function_3019950205 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var functionType_3019950206 = computeType_3019913434(ctx_3019899460, function_3019950205, true);
      if ((functionType_3019950206.kind == 0)) {
      result_3019948919 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      if (!((functionType_3019950206.kind == 4))) {
      var Temporary19 = nimCopy(null, function_3019950205.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary19);;
      var fmtRes_3019950223 = [mnewString(0)];
      fmtRes_3019950223[0].push.apply(fmtRes_3019950223[0], [84,114,121,105,110,103,32,116,111,32,99,97,108,108,32,110,111,110,45,102,117,110,99,116,105,111,110,32,116,121,112,101,32]);;
      formatValue_3019948837(fmtRes_3019950223, 0, functionType_3019950206, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950223[0], NTI33554449)});;
      result_3019948919 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var numArgs_3019950233 = subInt(len_3003121752(node_3019899461), 1);
      var Temporary22 = functionType_3019950206;
      if (ConstSet70[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007747)); }
      if (!(0 < (Temporary22.paramTypes).length)) Temporary21 = false; else {        var Temporary23 = functionType_3019950206;
        if (ConstSet77[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI3087007747)); }
        var Temporary24 = functionType_3019950206;
        if (ConstSet78[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI3087007747)); }
        Temporary21 = HEX3DHEX3D_3087008313((Temporary25 = Temporary23.paramTypes, Temporary25)[chckIndx((Temporary24.paramTypes).length - 1, 0, (Temporary25).length - 1)], anyType_3087008188(true));      }      if (!Temporary21) Temporary20 = false; else {        var Temporary26 = functionType_3019950206;
        if (ConstSet79[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI3087007747)); }
        Temporary20 = (subInt((Temporary26.paramTypes).length, 1) <= numArgs_3019950233);      }      var isValidOpenAnyCall_3019950243 = Temporary20;
        var Temporary28 = functionType_3019950206;
        if (ConstSet80[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI3087007747)); }
        if (!!((numArgs_3019950233 == (Temporary28.paramTypes).length))) Temporary27 = false; else {          Temporary27 = !(isValidOpenAnyCall_3019950243);        }      if (Temporary27) {
      var Temporary29 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary29);;
      var fmtRes_3019950255 = [mnewString(0)];
      fmtRes_3019950255[0].push.apply(fmtRes_3019950255[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,69,120,112,101,99,116,101,100,32]);;
      var Temporary30 = functionType_3019950206;
      if (ConstSet81[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3087007747)); }
      formatValue_2701131945(fmtRes_3019950255, 0, (Temporary30.paramTypes).length, []);
      fmtRes_3019950255[0].push.apply(fmtRes_3019950255[0], [32,103,111,116,32]);;
      formatValue_2701131945(fmtRes_3019950255, 0, numArgs_3019950233, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950255[0], NTI33554449)});;
      result_3019948919 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var allArgsOk_3019950273 = true;
      Label31: {
        var i_3019950278 = 0;
        var res_2969567343 = 1;
        Label32: {
            Label33: while (true) {
            if (!(res_2969567343 <= numArgs_3019950233)) break Label33;
              i_3019950278 = res_2969567343;
              Label34: {
                var argType_3019950279 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, i_3019950278), true);
                if ((argType_3019950279.kind == 0)) {
                allArgsOk_3019950273 = false;
                break Label34;
                }
                
                  if (!isValidOpenAnyCall_3019950243) Temporary35 = false; else {                    var Temporary36 = functionType_3019950206;
                    if (ConstSet82[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI3087007747)); }
                    Temporary35 = ((Temporary36.paramTypes).length - 1 < i_3019950278);                  }                if (Temporary35) {
                break Label34;
                }
                
                  var Temporary37 = functionType_3019950206;
                  if (ConstSet83[Temporary37.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary37.kind, NTI3087007747)); }
                if (!(HEX3DHEX3D_3087008313(argType_3019950279, (Temporary38 = Temporary37.paramTypes, Temporary38)[chckIndx(subInt(i_3019950278, 1), 0, (Temporary38).length - 1)]))) {
                var Temporary39 = nimCopy(null, HEX5BHEX5D_3003121748(node_3019899461, i_3019950278).id, NTI2046820355);
                idsHEX60gensym405_3019949273.push(Temporary39);;
                var fmtRes_3019950295 = [mnewString(0)];
                fmtRes_3019950295[0].push.apply(fmtRes_3019950295[0], [65,114,103,117,109,101,110,116,32]);;
                formatValue_2701131945(fmtRes_3019950295, 0, i_3019950278, []);
                fmtRes_3019950295[0].push.apply(fmtRes_3019950295[0], [32,104,97,115,32,116,104,101,32,119,114,111,110,103,32,116,121,112,101,46,32,69,120,112,101,99,116,101,100,32]);;
                var Temporary40 = functionType_3019950206;
                if (ConstSet84[Temporary40.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary40.kind, NTI3087007747)); }
                formatValue_3019948837(fmtRes_3019950295, 0, (Temporary41 = Temporary40.paramTypes, Temporary41)[chckIndx(subInt(i_3019950278, 1), 0, (Temporary41).length - 1)], []);
                fmtRes_3019950295[0].push.apply(fmtRes_3019950295[0], [32,103,111,116,32]);;
                formatValue_3019948837(fmtRes_3019950295, 0, argType_3019950279, []);
                diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950295[0], NTI33554449)});;
                allArgsOk_3019950273 = false;
                }
                
              };
              res_2969567343 = addInt(res_2969567343, 1);
            }
        };
      };
      if (!(allArgsOk_3019950273)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary42 = functionType_3019950206;
      if (ConstSet85[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI3087007747)); }
      result_3019948919 = Temporary42.returnType;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 4)) {
      if ((len_3003121752(node_3019899461) == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      result_3019948919 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, 0), true);
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 5)) {
      if ((len_3003121752(node_3019899461) < 1)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNode_3019950323 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var typ_3019950324 = voidType_3087008167();
      if (!((typeNode_3019950323.kind == 0))) {
      var typeNodeType_3019950329 = computeType_3019913434(ctx_3019899460, typeNode_3019950323, true);
      if ((typeNodeType_3019950329.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3019950329.kind == 6))) {
      var Temporary43 = nimCopy(null, typeNode_3019950323.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary43);;
      var fmtRes_3019950346 = [mnewString(0)];
      fmtRes_3019950346[0].push.apply(fmtRes_3019950346[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950346, 0, typeNodeType_3019950329, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950346[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNodeValue_3019950356 = computeValue_3019916562(ctx_3019899460, typeNode_3019950323, true);
      if ((typeNodeValue_3019950356.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3019950356.kind == 6))) {
      var Temporary44 = nimCopy(null, typeNode_3019950323.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary44);;
      var fmtRes_3019950373 = [mnewString(0)];
      fmtRes_3019950373[0].push.apply(fmtRes_3019950373[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3154118047(fmtRes_3019950373, 0, typeNodeValue_3019950356, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950373[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary45 = typeNodeValue_3019950356;
      if (ConstSet86[Temporary45.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary45.kind, NTI3087007750)); }
      typ_3019950324 = Temporary45.typ;
      }
      
      if ((2 <= len_3003121752(node_3019899461))) {
      var valueNode_3019950383 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      if (!((valueNode_3019950383.kind == 0))) {
      var valueNodeType_3019950388 = computeType_3019913434(ctx_3019899460, valueNode_3019950383, true);
      if ((valueNodeType_3019950388.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if ((typ_3019950324.kind == 1)) {
      typ_3019950324 = valueNodeType_3019950388;
      }
      
      if (!(HEX3DHEX3D_3087008313(valueNodeType_3019950388, typ_3019950324))) {
      var Temporary46 = nimCopy(null, valueNode_3019950383.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary46);;
      var fmtRes_3019950405 = [mnewString(0)];
      fmtRes_3019950405[0].push.apply(fmtRes_3019950405[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3019948837(fmtRes_3019950405, 0, typ_3019950324, []);
      fmtRes_3019950405[0].push.apply(fmtRes_3019950405[0], [44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950405, 0, valueNodeType_3019950388, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950405[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3019948919 = typ_3019950324;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 6)) {
      if ((len_3003121752(node_3019899461) < 1)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNode_3019950424 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var typ_3019950425 = voidType_3087008167();
      if (!((typeNode_3019950424.kind == 0))) {
      var typeNodeType_3019950430 = computeType_3019913434(ctx_3019899460, typeNode_3019950424, true);
      if ((typeNodeType_3019950430.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3019950430.kind == 6))) {
      var Temporary47 = nimCopy(null, typeNode_3019950424.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary47);;
      var fmtRes_3019950447 = [mnewString(0)];
      fmtRes_3019950447[0].push.apply(fmtRes_3019950447[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950447, 0, typeNodeType_3019950430, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950447[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNodeValue_3019950457 = computeValue_3019916562(ctx_3019899460, typeNode_3019950424, true);
      if ((typeNodeValue_3019950457.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3019950457.kind == 6))) {
      var Temporary48 = nimCopy(null, typeNode_3019950424.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary48);;
      var fmtRes_3019950474 = [mnewString(0)];
      fmtRes_3019950474[0].push.apply(fmtRes_3019950474[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3154118047(fmtRes_3019950474, 0, typeNodeValue_3019950457, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950474[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary49 = typeNodeValue_3019950457;
      if (ConstSet87[Temporary49.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary49.kind, NTI3087007750)); }
      typ_3019950425 = Temporary49.typ;
      }
      
      if ((2 <= len_3003121752(node_3019899461))) {
      var valueNode_3019950484 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      if (!((valueNode_3019950484.kind == 0))) {
      var valueNodeType_3019950489 = computeType_3019913434(ctx_3019899460, valueNode_3019950484, true);
      if ((valueNodeType_3019950489.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if ((typ_3019950425.kind == 1)) {
      typ_3019950425 = valueNodeType_3019950489;
      }
      
      if (!(HEX3DHEX3D_3087008313(valueNodeType_3019950489, typ_3019950425))) {
      var Temporary50 = nimCopy(null, valueNode_3019950484.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary50);;
      var fmtRes_3019950506 = [mnewString(0)];
      fmtRes_3019950506[0].push.apply(fmtRes_3019950506[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3019948837(fmtRes_3019950506, 0, typ_3019950425, []);
      fmtRes_3019950506[0].push.apply(fmtRes_3019950506[0], [44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950506, 0, valueNodeType_3019950489, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950506[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3019948919 = typ_3019950425;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 1)) {
      var id_3019950525 = nimCopy(null, node_3019899461.reff, NTI2046820355);
      var symbols_3019950526 = computeSymbols_3019922496(ctx_3019899460, node_3019899461, true);
      if (contains_3019950603(symbols_3019950526, id_3019950525)) {
      var symbol_3019951130 = (Temporary51 = HEX5BHEX5D_3019950858(symbols_3019950526, id_3019950525), Temporary51)[0][Temporary51[1]];
      result_3019948919 = computeSymbolType_3019928398(ctx_3019899460, symbol_3019951130, true);
      break BeforeRet;
      }
      
      var Temporary52 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary52);;
      var fmtRes_3019951139 = [mnewString(0)];
      fmtRes_3019951139[0].push.apply(fmtRes_3019951139[0], [85,110,107,110,111,119,110,32,115,121,109,98,111,108,32,39]);;
      formatValue_3036676344(fmtRes_3019951139, 0, id_3019950525, []);
      fmtRes_3019951139[0].push.apply(fmtRes_3019951139[0], [39]);;
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951139[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 7)) {
      if ((len_3003121752(node_3019899461) == 0)) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      
      var lastType_3019951153 = null;
      Label53: {
        var child_3019951157 = null;
        var i_2969567346 = 0;
        var L_2969567347 = (node_3019899461.children).length;
        Label54: {
            Label55: while (true) {
            if (!(i_2969567346 < L_2969567347)) break Label55;
              child_3019951157 = node_3019899461.children[chckIndx(i_2969567346, 0, (node_3019899461.children).length - 1)];
              lastType_3019951153 = computeType_3019913434(ctx_3019899460, child_3019951157, true);
              if ((lastType_3019951153.kind == 0)) {
              result_3019948919 = errorType_3087008131();
              break BeforeRet;
              }
              
              i_2969567346 = addInt(i_2969567346, 1);
              if (!(((node_3019899461.children).length == L_2969567347))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3019948919 = lastType_3019951153;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 9)) {
      if ((len_3003121752(node_3019899461) < 2)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var ok_3019951166 = true;
      var commonType_3019951169 = [none_3019913415()];
      var index_3019951170 = 0;
      Label56: {
          Label57: while (true) {
          if (!(addInt(index_3019951170, 1) < len_3003121752(node_3019899461))) break Label57;
            Label58: {
              try {
              var condition_3019951175 = HEX5BHEX5D_3003121748(node_3019899461, index_3019951170);
              var trueCase_3019951176 = HEX5BHEX5D_3003121748(node_3019899461, addInt(index_3019951170, 1));
              var conditionType_3019951177 = computeType_3019913434(ctx_3019899460, condition_3019951175, true);
              if ((conditionType_3019951177.kind == 0)) {
              ok_3019951166 = false;
              }
              else {
              if (!((conditionType_3019951177.kind == 3))) {
              var Temporary60 = nimCopy(null, condition_3019951175.id, NTI2046820355);
              idsHEX60gensym405_3019949273.push(Temporary60);;
              var fmtRes_3019951194 = [mnewString(0)];
              fmtRes_3019951194[0].push.apply(fmtRes_3019951194[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
              formatValue_3019948837(fmtRes_3019951194, 0, conditionType_3019951177, []);
              diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951194[0], NTI33554449)});;
              ok_3019951166 = false;
              }
              }
              var trueCaseType_3019951204 = computeType_3019913434(ctx_3019899460, trueCase_3019951176, true);
              if ((trueCaseType_3019951204.kind == 0)) {
              ok_3019951166 = false;
              break Label58;
              }
              
              if ((isNone_3019951213(commonType_3019951169[0]) || HEX3DHEX3D_3087008313(trueCaseType_3019951204, (Temporary61 = get_3019951256(commonType_3019951169[0]), Temporary61)[0][Temporary61[1]]))) {
              commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(trueCaseType_3019951204), NTI3019907400);
              }
              else {
                commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(voidType_3087008167()), NTI3019907400);
              }
              
              } finally {
              index_3019951170 = addInt(index_3019951170, 2);
              }
            };
          }
      };
      if (!((modInt(len_3003121752(node_3019899461), 2) == 0))) {
      var falseCaseType_3019951283 = computeType_3019913434(ctx_3019899460, last_3003121922(node_3019899461), true);
      if ((falseCaseType_3019951283.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if ((isNone_3019951213(commonType_3019951169[0]) || HEX3DHEX3D_3087008313(falseCaseType_3019951283, (Temporary62 = get_3019951256(commonType_3019951169[0]), Temporary62)[0][Temporary62[1]]))) {
      commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(falseCaseType_3019951283), NTI3019907400);
      }
      else {
        commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(voidType_3087008167()), NTI3019907400);
      }
      
      }
      
      if (!(ok_3019951166)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      result_3019948919 = get_3019951374(commonType_3019951169[0], voidType_3087008167());
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 10)) {
      if ((len_3003121752(node_3019899461) < 2)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var ok_3019951395 = true;
      var conditionType_3019951396 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, 0), true);
      if ((conditionType_3019951396.kind == 0)) {
      ok_3019951395 = false;
      }
      else {
      if (!((conditionType_3019951396.kind == 3))) {
      var Temporary63 = nimCopy(null, HEX5BHEX5D_3003121748(node_3019899461, 0).id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary63);;
      var fmtRes_3019951413 = [mnewString(0)];
      fmtRes_3019951413[0].push.apply(fmtRes_3019951413[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
      formatValue_3019948837(fmtRes_3019951413, 0, conditionType_3019951396, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951413[0], NTI33554449)});;
      ok_3019951395 = false;
      }
      }
      var bodyType_3019951423 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, 1), true);
      if ((bodyType_3019951423.kind == 0)) {
      ok_3019951395 = false;
      }
      
      if (ok_3019951395) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
        result_3019948919 = errorType_3087008131();
        break BeforeRet;
      }
      
      }
      else {
      if ((expr_3019950075.kind == 13)) {
      if ((len_3003121752(node_3019899461) < 2)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var target_3019951432 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var value_3019951433 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      var targetType_3019951434 = computeType_3019913434(ctx_3019899460, target_3019951432, true);
      if ((targetType_3019951434.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var valueType_3019951439 = computeType_3019913434(ctx_3019899460, value_3019951433, true);
      if ((valueType_3019951439.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!(HEX3DHEX3D_3087008313(targetType_3019951434, valueType_3019951439))) {
      var Temporary64 = nimCopy(null, value_3019951433.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary64);;
      var fmtRes_3019951452 = [mnewString(0)];
      fmtRes_3019951452[0].push.apply(fmtRes_3019951452[0], [67,97,110,39,116,32,97,115,115,105,103,110,32]);;
      formatValue_3019948837(fmtRes_3019951452, 0, valueType_3019951439, []);
      fmtRes_3019951452[0].push.apply(fmtRes_3019951452[0], [32,116,111,32]);;
      formatValue_3019948837(fmtRes_3019951452, 0, targetType_3019951434, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951452[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
        var oHEX60gensym495_3019951469 = computeSymbol_3019919344(ctx_3019899460, target_3019951432, true);
        if (!isSome_3087009356(oHEX60gensym495_3019951469)) Temporary65 = false; else {          var sym_3019951515 = get_3087009376(oHEX60gensym495_3019951469);
          Temporary65 = true;        }      if (Temporary65) {
      if ((sym_3019951515.kind == 1)) {
      var Temporary66 = nimCopy(null, target_3019951432.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary66);;
      var fmtRes_3019951528 = [mnewString(0)];
      fmtRes_3019951528[0].push.apply(fmtRes_3019951528[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,98,117,105,108,116,105,110,32,115,121,109,98,111,108,32]);;
      formatValue_3019951529(fmtRes_3019951528, 0, sym_3019951515, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951528[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((sym_3019951515.kind == 0))) {
      failedAssertImpl_268435515([99,111,109,112,105,108,101,114,46,110,105,109,40,52,57,51,44,32,55,41,32,96,115,121,109,46,107,105,110,100,32,61,61,32,115,107,65,115,116,78,111,100,101,96,32]);
      }
      
        var Temporary67 = sym_3019951515;
        if (ConstSet91[Temporary67.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary67.kind, NTI3087007753)); }
      if (!((Temporary67.node.kind == 6))) {
      var Temporary68 = nimCopy(null, target_3019951432.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary68);;
      var fmtRes_3019951559 = [mnewString(0)];
      fmtRes_3019951559[0].push.apply(fmtRes_3019951559[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,110,111,110,45,109,117,116,97,98,108,101,32,115,121,109,98,111,108,32]);;
      formatValue_3019951529(fmtRes_3019951559, 0, sym_3019951515, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951559[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      }
      
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
        result_3019948919 = errorType_3087008131();
        break BeforeRet;
      }
      }}}}}}}}}}}}}
    };
    } finally {
    if ((0 < (diagnosticsHEX60gensym405_3019949268).length)) {
    HEX5BHEX5DHEX3D_3019942505(ctx_3019899460.diagnosticsPerQuery, key_3019948932, idsHEX60gensym405_3019949273);
    Label69: {
      var iHEX60gensym405_3019949353 = 0;
      var colontmp__2969567331 = 0;
      colontmp__2969567331 = (idsHEX60gensym405_3019949273).length - 1;
      var res_2969567332 = 0;
      Label70: {
          Label71: while (true) {
          if (!(res_2969567332 <= colontmp__2969567331)) break Label71;
            iHEX60gensym405_3019949353 = res_2969567332;
            var idHEX60gensym405_3019949354 = nimCopy(null, idsHEX60gensym405_3019949273[chckIndx(iHEX60gensym405_3019949353, 0, (idsHEX60gensym405_3019949273).length - 1)], NTI2046820355);
            var diagHEX60gensym405_3019949355 = nimCopy(null, diagnosticsHEX60gensym405_3019949268[chckIndx(iHEX60gensym405_3019949353, 0, (diagnosticsHEX60gensym405_3019949268).length - 1)], NTI3019898883);
            if (!(contains_3019944168(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354))) {
            HEX5BHEX5DHEX3D_3019944250(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3019945984(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354).queries, key_3019948932))) {
            HEX5BHEX5DHEX3D_3019946155(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354).queries, key_3019948932, []);
            }
            
            var Temporary73 = nimCopy(null, diagHEX60gensym405_3019949355, NTI3019898883);
            (Temporary72 = HEX5BHEX5D_3019947888(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354).queries, key_3019948932), Temporary72)[0][Temporary72[1]].push(Temporary73);;
            res_2969567332 = addInt(res_2969567332, 1);
          }
      };
    };
    }
    else {
    del_3019948061(ctx_3019899460.diagnosticsPerQuery, key_3019948932);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym404_3019948921 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008191(result_3019948919) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym404_3019948921) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019948919;

}

function HEX5BHEX5DHEX3D_3019899766(t_3019899769, key_3019899770, val_3019899771) {
    t_3019899769.set(mapKeyJs_3019899778(key_3019899770), val_3019899771);

  
}

function HEX26_3087008364(x_3087008366, y_3087008367) {
  var result_3087008368 = [];

    result_3087008368 = new Array(chckRange(addInt((x_3087008366).length, (y_3087008367).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3087008366).length, (y_3087008367).length), 0, 2147483647) ; ++i) { result_3087008368[i] = 0; }    Label1: {
      var i_3087008386 = 0;
      var colontmp__2969567463 = 0;
      colontmp__2969567463 = subInt((x_3087008366).length, 1);
      var res_2969567464 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567464 <= colontmp__2969567463)) break Label3;
            i_3087008386 = res_2969567464;
            result_3087008368[chckIndx(i_3087008386, 0, (result_3087008368).length - 1)] = x_3087008366[chckIndx(i_3087008386, 0, (x_3087008366).length - 1)];
            res_2969567464 = addInt(res_2969567464, 1);
          }
      };
    };
    Label4: {
      var i_3087008394 = 0;
      var colontmp__2969567467 = 0;
      colontmp__2969567467 = subInt((y_3087008367).length, 1);
      var res_2969567468 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2969567468 <= colontmp__2969567467)) break Label6;
            i_3087008394 = res_2969567468;
            result_3087008368[chckIndx(addInt(i_3087008394, (x_3087008366).length), 0, (result_3087008368).length - 1)] = y_3087008367[chckIndx(i_3087008394, 0, (y_3087008367).length - 1)];
            res_2969567468 = addInt(res_2969567468, 1);
          }
      };
    };

  return result_3087008368;

}

function add_3087008402(x_3087008404, x_3087008404_Idx, y_3087008405) {
    var Temporary1;

    var xl_3087008409 = (x_3087008404[x_3087008404_Idx]).length;
    if (x_3087008404[x_3087008404_Idx].length < (Temporary1 = chckRange(addInt(xl_3087008409, (y_3087008405).length), 0, 2147483647), Temporary1)) { for (var i = x_3087008404[x_3087008404_Idx].length ; i < Temporary1 ; ++i) x_3087008404[x_3087008404_Idx].push(0); }
               else { x_3087008404[x_3087008404_Idx].length = Temporary1; };
    Label2: {
      var i_3087008424 = 0;
      var colontmp__2969567471 = 0;
      colontmp__2969567471 = (y_3087008405).length - 1;
      var res_2969567472 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567472 <= colontmp__2969567471)) break Label4;
            i_3087008424 = res_2969567472;
            x_3087008404[x_3087008404_Idx][chckIndx(addInt(xl_3087008409, i_3087008424), 0, (x_3087008404[x_3087008404_Idx]).length - 1)] = y_3087008405[chckIndx(i_3087008424, 0, (y_3087008405).length - 1)];
            res_2969567472 = addInt(res_2969567472, 1);
          }
      };
    };

  
}

function fingerprint_3087008357(typ_3087008358) {
      var Temporary1;
        var Temporary3;
      var Temporary6;

  var result_3087008359 = [[]];

    switch (typ_3087008358.kind) {
    case 4:
      var Temporary1 = typ_3087008358;
      if (ConstSet92[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      result_3087008359[0] = nimCopy(null, HEX26_3087008364([typ_3087008358.kind], fingerprint_3087008357(Temporary1.returnType)), NTI3087008200);
      Label2: {
        var param_3087008401 = null;
        var colontmp__2969567458 = [];
        var Temporary3 = typ_3087008358;
        if (ConstSet93[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
        colontmp__2969567458 = Temporary3.paramTypes;
        var i_2969567459 = 0;
        var L_2969567460 = (colontmp__2969567458).length;
        Label4: {
            Label5: while (true) {
            if (!(i_2969567459 < L_2969567460)) break Label5;
              param_3087008401 = colontmp__2969567458[chckIndx(i_2969567459, 0, (colontmp__2969567458).length - 1)];
              add_3087008402(result_3087008359, 0, fingerprint_3087008357(param_3087008401));
              i_2969567459 = addInt(i_2969567459, 1);
              if (!(((colontmp__2969567458).length == L_2969567460))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 5:
      var Temporary6 = typ_3087008358;
      if (ConstSet94[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      result_3087008359[0] = nimCopy(null, [typ_3087008358.kind, Temporary6.open], NTI3036676328);
      break;
    default: 
      result_3087008359[0] = nimCopy(null, [typ_3087008358.kind], NTI3087008194);
      break;
    }

  return result_3087008359[0];

}

function init_3019899876(result_3019899879, result_3019899879_Idx, capacity_3019899880) {
    result_3019899879[result_3019899879_Idx] = (new Map());

  
}

function getValueKey_3019916331(ctxHEX60gensym99_3019916332, itemIdHEX60gensym99_3019916333) {
  var result_3019916334 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2969567490 = nimCopy(null, itemIdHEX60gensym99_3019916333, NTI3036676201);
    var colontmp__2969567491 = 1;
    result_3019916334 = nimCopy(result_3019916334, {Field0: nimCopy(null, colontmp__2969567490, NTI3036676201), Field1: colontmp__2969567491}, NTI3036676204);
    break BeforeRet;
  };

  return result_3019916334;

}

function errorValue_3087008442() {
  var result_3087008443 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008443 = nimCopy(result_3087008443, {kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008443;

}

function HEX5BHEX5D_3154118421(s_3154118425, x_3154118426) {
  var result_3154118427 = [];

    var a_3154118429 = x_3154118426.a;
    var L_3154118435 = addInt(subInt(subInt((s_3154118425).length, x_3154118426.b), a_3154118429), 1);
    result_3154118427 = new Array(chckRange(L_3154118435, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3154118435, 0, 2147483647) ; ++i) { result_3154118427[i] = null; }    Label1: {
      var i_3154118444 = 0;
      var i_2969567493 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567493 < L_3154118435)) break Label3;
            i_3154118444 = i_2969567493;
            result_3154118427[chckIndx(i_3154118444, 0, (result_3154118427).length - 1)] = s_3154118425[chckIndx(addInt(i_3154118444, a_3154118429), 0, (s_3154118425).length - 1)];
            i_2969567493 = addInt(i_2969567493, 1);
          }
      };
    };

  return result_3154118427;

}

function formatValue_3087008590(result_3087008592, result_3087008592_Idx, value_3087008593, specifier_3087008594) {
    formatValue_721420459(result_3087008592, result_3087008592_Idx, HEX24_3003123671(value_3087008593), specifier_3087008594);

  
}

function values_3019907567(t_3019907570) {
  var result_3019907571 = [];

    var iter_3019907576 = t_3019907570.values();
    for (var i in iter_3019907576) {result_3019907571.push(i);}

  return result_3019907571;

}

function hash_3003124022(node_3003124023) {
  var result_3003124024 = 0;

    result_3003124024 = node_3003124023;

  return result_3003124024;

}

function hash_3087008504(x_3087008506) {
  var result_3087008507 = 0;

    result_3087008507 = hashWangYi1_1325400244(x_3087008506);

  return result_3087008507;

}

function hash_3087008266(x_3087008268) {
  var result_3087008269 = 0;

    result_3087008269 = hashWangYi1_1325400244(x_3087008268);

  return result_3087008269;

}

function hash_3087008277(x_3087008279) {
  var result_3087008280 = 0;

    Label1: {
      var a_3087008294 = null;
      var i_2969567507 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567507 < (x_3087008279).length)) break Label3;
            a_3087008294 = x_3087008279[chckIndx(i_2969567507, 0, (x_3087008279).length - 1)];
            result_3087008280 = HEX21HEX26_1325400067(result_3087008280, hash_3087008263(a_3087008294));
            i_2969567507 = addInt(i_2969567507, 1);
          }
      };
    };
    result_3087008280 = HEX21HEX24_1325400082(result_3087008280);

  return result_3087008280;

}

function hash_2701134432(x_2701134434) {
  var result_2701134435 = 0;

    result_2701134435 = hashWangYi1_1325400244((x_2701134434 ? 1 : 0));

  return result_2701134435;

}

function hash_3087008263(typ_3087008264) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008265 = 0;

  BeforeRet: {
    if ((typ_3087008264.mHash == 0)) {
    switch (typ_3087008264.kind) {
    case 4:
      var Temporary2 = typ_3087008264;
      if (ConstSet100[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = typ_3087008264;
      if (ConstSet101[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      Temporary1 = ((hash_3087008266(typ_3087008264.kind) ^ hash_3087008263(Temporary2.returnType)) ^ hash_3087008277(Temporary3.paramTypes));
      break;
    case 5:
      var Temporary4 = typ_3087008264;
      if (ConstSet102[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
      Temporary1 = (hash_3087008266(typ_3087008264.kind) ^ hash_2701134432(Temporary4.open));
      break;
    default: 
      Temporary1 = hash_3087008266(typ_3087008264.kind);
      break;
    }
    typ_3087008264.mHash = Temporary1;
    }
    
    result_3087008265 = typ_3087008264.mHash;
    break BeforeRet;
  };

  return result_3087008265;

}

function hash_3087008501(value_3087008502) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008503 = 0;

  BeforeRet: {
    switch (value_3087008502.kind) {
    case 0:
      result_3087008503 = hash_3087008504(value_3087008502.kind);
      break BeforeRet;
      break;
    case 1:
      result_3087008503 = hash_3087008504(value_3087008502.kind);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008502;
      if (ConstSet97[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008503 = hash_1325400236(Temporary1.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008502;
      if (ConstSet98[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008503 = hash_1325400491(Temporary2.stringValue);
      break BeforeRet;
      break;
    case 4:
      result_3087008503 = 0;
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008502;
      if (ConstSet99[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008503 = hash_3003124022(Temporary3.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008502;
      if (ConstSet103[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008503 = hash_3087008263(Temporary4.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008503;

}

function hash_3087008735(x_3087008737) {
  var result_3087008738 = 0;

    Label1: {
      var a_3087008752 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567503 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567503 < (x_3087008737).length)) break Label3;
            a_3087008752 = x_3087008737[chckIndx(i_2969567503, 0, (x_3087008737).length - 1)];
            result_3087008738 = HEX21HEX26_1325400067(result_3087008738, hash_3087008501(a_3087008752));
            i_2969567503 = addInt(i_2969567503, 1);
          }
      };
    };
    result_3087008738 = HEX21HEX24_1325400082(result_3087008738);

  return result_3087008738;

}

function hash_3087008753(x_3087008755) {
  var result_3087008756 = 0;

    result_3087008756 = HEX21HEX26_1325400067(result_3087008756, hash_1325400236(x_3087008755.val));
    result_3087008756 = HEX21HEX26_1325400067(result_3087008756, hash_2701134432(x_3087008755.has));
    result_3087008756 = HEX21HEX24_1325400082(result_3087008756);

  return result_3087008756;

}

function hash_3087008732(fec_3087008733) {
  var result_3087008734 = 0;

  BeforeRet: {
    if ((fec_3087008733.mHash == 0)) {
    fec_3087008733.mHash = HEX21HEX26_1325400067(HEX21HEX26_1325400067(hash_3003124022(fec_3087008733.node), hash_3087008735(fec_3087008733.arguments)), hash_3087008753(fec_3087008733.maxLoopIterations));
    fec_3087008733.mHash = HEX21HEX24_1325400082(result_3087008734);
    }
    
    result_3087008734 = fec_3087008733.mHash;
    break BeforeRet;
  };

  return result_3087008734;

}

function HEX3DHEX3D_3087008521(a_3087008522, b_3087008523) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_3087008524 = false;

  BeforeRet: {
    if (!((a_3087008522.kind == b_3087008523.kind))) {
    result_3087008524 = false;
    break BeforeRet;
    }
    
    switch (a_3087008522.kind) {
    case 0:
      result_3087008524 = true;
      break BeforeRet;
      break;
    case 1:
      result_3087008524 = true;
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = a_3087008522;
      if (ConstSet104[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      var Temporary2 = b_3087008523;
      if (ConstSet105[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008524 = (Temporary1.intValue == Temporary2.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = a_3087008522;
      if (ConstSet106[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = b_3087008523;
      if (ConstSet107[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008524 = eqStrings(Temporary3.stringValue, Temporary4.stringValue);
      break BeforeRet;
      break;
    case 4:
      var Temporary5 = a_3087008522;
      if (ConstSet108[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      var Temporary6 = b_3087008523;
      if (ConstSet109[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007750)); }
      result_3087008524 = (Temporary5.impl == Temporary6.impl);
      break BeforeRet;
      break;
    case 5:
      var Temporary7 = a_3087008522;
      if (ConstSet110[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007750)); }
      var Temporary8 = b_3087008523;
      if (ConstSet111[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007750)); }
      result_3087008524 = (Temporary7.node == Temporary8.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary9 = a_3087008522;
      if (ConstSet112[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007750)); }
      var Temporary10 = b_3087008523;
      if (ConstSet113[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007750)); }
      result_3087008524 = HEX3DHEX3D_3087008313(Temporary9.typ, Temporary10.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008524;

}

function HEX3DHEX3D_3087008793(x_3087008795, y_3087008796) {
  var result_3087008797 = false;

  BeforeRet: {
    var sameObject_3087008804 = false;
    sameObject_3087008804 = x_3087008795 === y_3087008796
    if (sameObject_3087008804) {
    result_3087008797 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008795).length == (y_3087008796).length))) {
    result_3087008797 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008818 = 0;
      var colontmp__2969567510 = 0;
      colontmp__2969567510 = subInt((x_3087008795).length, 1);
      var res_2969567511 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567511 <= colontmp__2969567510)) break Label3;
            i_3087008818 = res_2969567511;
            if (!(HEX3DHEX3D_3087008521(x_3087008795[chckIndx(i_3087008818, 0, (x_3087008795).length - 1)], y_3087008796[chckIndx(i_3087008818, 0, (y_3087008796).length - 1)]))) {
            result_3087008797 = false;
            break BeforeRet;
            }
            
            res_2969567511 = addInt(res_2969567511, 1);
          }
      };
    };
    result_3087008797 = true;
    break BeforeRet;
  };

  return result_3087008797;

}

function isSome_1191185117(self_1191185119) {
  var result_1191185120 = false;

    result_1191185120 = self_1191185119.has;

  return result_1191185120;

}

function isNone_1191185194(self_1191185196) {
  var result_1191185197 = false;

    result_1191185197 = !(self_1191185196.has);

  return result_1191185197;

}

function HEX3DHEX3D_3087008881(a_3087008883, b_3087008884) {
  var result_3087008885 = false;

    result_3087008885 = (((isSome_1191185117(a_3087008883) && isSome_1191185117(b_3087008884)) && (a_3087008883.val == b_3087008884.val)) || (isNone_1191185194(a_3087008883) && isNone_1191185194(b_3087008884)));

  return result_3087008885;

}

function HEX3DHEX3D_3087008776(a_3087008777, b_3087008778) {
  var result_3087008779 = false;

  BeforeRet: {
    if ((a_3087008777 == null)) {
    result_3087008779 = (b_3087008778 == null);
    break BeforeRet;
    }
    
    if ((b_3087008778 == null)) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008777.node == b_3087008778.node))) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008793(a_3087008777.arguments, b_3087008778.arguments))) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008881(a_3087008777.maxLoopIterations, b_3087008778.maxLoopIterations))) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    result_3087008779 = true;
    break BeforeRet;
  };

  return result_3087008779;

}

function getItem_3019907554(selfHEX60gensym89_3019907555) {
  var result_3019907556 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym89_3019907555.id, null_2046820646)) {
    selfHEX60gensym89_3019907555.id = nimCopy(selfHEX60gensym89_3019907555.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym89_3019907555.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,57,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567513 = nimCopy(null, selfHEX60gensym89_3019907555.id, NTI2046820355);
    var colontmp__2969567514 = 3;
    result_3019907556 = nimCopy(result_3019907556, {Field0: nimCopy(null, colontmp__2969567513, NTI2046820355), Field1: colontmp__2969567514}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019907556;

}

function HEX5BHEX5DHEX3D_3019907734(t_3019907737, key_3019907738, val_3019907739) {
    t_3019907737.set(mapKeyJs_3019899588(key_3019907738), val_3019907739);

  
}

function getOrCreateFunctionExecutionContext_3019907563(ctxHEX60gensym90_3019907564, dataHEX60gensym90_3019907565) {
  var result_3019907566 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym90_3019907599 = null;
      var colontmp__2969567496 = [];
      colontmp__2969567496 = values_3019907567(ctxHEX60gensym90_3019907564.itemsFunctionExecutionContext);
      var i_2969567498 = 0;
      var L_2969567499 = (colontmp__2969567496).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567498 < L_2969567499)) break Label3;
            existingHEX60gensym90_3019907599 = colontmp__2969567496[chckIndx(i_2969567498, 0, (colontmp__2969567496).length - 1)];
            if (((hash_3087008732(existingHEX60gensym90_3019907599) == hash_3087008732(dataHEX60gensym90_3019907565)) && HEX3DHEX3D_3087008776(existingHEX60gensym90_3019907599, dataHEX60gensym90_3019907565))) {
            result_3019907566 = existingHEX60gensym90_3019907599;
            break BeforeRet;
            }
            
            i_2969567498 = addInt(i_2969567498, 1);
            if (!(((colontmp__2969567496).length == L_2969567499))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var itemHEX60gensym90_3019907600 = getItem_3019907554(dataHEX60gensym90_3019907565);
    var keyHEX60gensym90_3019907601 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym90_3019907600, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym90_3019907564.depGraph.changed, keyHEX60gensym90_3019907601, ctxHEX60gensym90_3019907564.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907734(ctxHEX60gensym90_3019907564.itemsFunctionExecutionContext, itemHEX60gensym90_3019907600, dataHEX60gensym90_3019907565);
    result_3019907566 = dataHEX60gensym90_3019907565;
    break BeforeRet;
  };

  return result_3019907566;

}

function mapKeyJs_3019902286(key_3019902288) {
  var result_3019902289 = null;

    let temp = key_3019902288;
    let newId = getIdFunctionExecutionContextJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019902289;

}

function contains_3019933795(t_3019933798, key_3019933799) {
  var result_3019933800 = false;

    result_3019933800 = t_3019933798.has(mapKeyJs_3019902286(key_3019933799));

  return result_3019933800;

}

function addQuoted_3087008638(s_3087008640, s_3087008640_Idx, x_3087008641) {
    s_3087008640[s_3087008640_Idx].push.apply(s_3087008640[s_3087008640_Idx], HEX24_3087008498(x_3087008641));;

  
}

function collectionToString_3087008604(x_3087008606, prefix_3087008607, separator_3087008608, suffix_3087008609) {
  var result_3087008610 = [[]];

    result_3087008610[0] = nimCopy(null, prefix_3087008607, NTI33554449);
    var firstElement_3087008611 = true;
    Label1: {
      var value_3087008634 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567517 = 0;
      var L_2969567518 = (x_3087008606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567517 < L_2969567518)) break Label3;
            value_3087008634 = x_3087008606[i_2969567517];
            if (firstElement_3087008611) {
            firstElement_3087008611 = false;
            }
            else {
            result_3087008610[0].push.apply(result_3087008610[0], separator_3087008608);;
            }
            
            addQuoted_3087008638(result_3087008610, 0, value_3087008634);
            i_2969567517 += 1;
            if (!(((x_3087008606).length == L_2969567518))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008610[0].push.apply(result_3087008610[0], suffix_3087008609);;

  return result_3087008610[0];

}

function HEX24_3087008600(x_3087008602) {
  var result_3087008603 = [];

    result_3087008603 = nimCopy(null, collectionToString_3087008604(x_3087008602, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008603;

}

function formatValue_3087008595(result_3087008597, result_3087008597_Idx, value_3087008598, specifier_3087008599) {
    formatValue_721420459(result_3087008597, result_3087008597_Idx, HEX24_3087008600(value_3087008598), specifier_3087008599);

  
}

function HEX24_3087008713(self_3087008715) {
  var result_3087008716 = [[]];

    if (isSome_1191185117(self_3087008715)) {
    result_3087008716[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_855639425(result_3087008716, 0, self_3087008715.val);
    result_3087008716[0].push.apply(result_3087008716[0], [41]);;
    }
    else {
      result_3087008716[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    

  return result_3087008716[0];

}

function formatValue_3087008662(result_3087008664, result_3087008664_Idx, value_3087008665, specifier_3087008666) {
    formatValue_721420459(result_3087008664, result_3087008664_Idx, HEX24_3087008713(value_3087008665), specifier_3087008666);

  
}

function HEX24_3087008582(fec_3087008583) {
  var result_3087008584 = [];

  BeforeRet: {
    var fmtRes_3087008589 = [mnewString(0)];
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [67,97,108,108,32]);;
    formatValue_3087008590(fmtRes_3087008589, 0, fec_3087008583.node, []);
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [40]);;
    formatValue_3087008595(fmtRes_3087008589, 0, fec_3087008583.arguments, []);
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [44,32,109,97,120,76,111,111,112,73,116,101,114,97,116,105,111,110,115,61]);;
    formatValue_3087008662(fmtRes_3087008589, 0, fec_3087008583.maxLoopIterations, []);
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [41]);;
    result_3087008584 = nimCopy(null, fmtRes_3087008589[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087008584;

}

function HEX5BHEX5D_3019933889(t_3019933892, key_3019933893) {
  var result_3019933894 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019933894 = nimCopy(result_3019933894, t_3019933892.get(mapKeyJs_3019902286(key_3019933893)), NTI3087007751);

  return result_3019933894;

}

function computeFunctionExecution_3019933908(ctxHEX60gensym125_3019933909, inputHEX60gensym125_3019933910) {
    var Temporary3;
    var Temporary5;

  var result_3019933911 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym125_3019933992 = getItem_3019907554(inputHEX60gensym125_3019933910);
    var keyHEX60gensym125_3019933993 = {Field0: nimCopy(null, itemHEX60gensym125_3019933992, NTI3036676201), Field1: 7};
    recordDependency_3019906144(ctxHEX60gensym125_3019933909, itemHEX60gensym125_3019933992, 7);
    if (ctxHEX60gensym125_3019933909.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym125_3019933909.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110], [44,32], HEX24_3036676336(itemHEX60gensym125_3019933992));
    }
    
    force_3019908046(ctxHEX60gensym125_3019933909, keyHEX60gensym125_3019933993);
    if (!(contains_3019933795(ctxHEX60gensym125_3019933909.queryCacheFunctionExecution, inputHEX60gensym125_3019933910))) {
    raiseException({message: ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3087008582(inputHEX60gensym125_3019933910) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019933911 = nimCopy(result_3019933911, HEX5BHEX5D_3019933889(ctxHEX60gensym125_3019933909.queryCacheFunctionExecution, inputHEX60gensym125_3019933910), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym125_3019933909.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym125_3019933909.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym125_3019933909.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym125_3019933909.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019933911;

}

function contains_3019931040(t_3019931043, key_3019931044) {
  var result_3019931045 = false;

    result_3019931045 = t_3019931043.has(mapKeyJs_3019901554(key_3019931044));

  return result_3019931045;

}

function HEX5BHEX5D_3019931134(t_3019931137, key_3019931138) {
  var result_3019931139 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019931139 = nimCopy(result_3019931139, t_3019931137.get(mapKeyJs_3019901554(key_3019931138)), NTI3087007751);

  return result_3019931139;

}

function computeSymbolValue_3019931153(ctxHEX60gensym121_3019931154, inputHEX60gensym121_3019931155, recordDependencyHEX60gensym121_3019931156) {
    var Temporary3;
    var Temporary5;

  var result_3019931157 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym121_3019931238 = getItem_3019907143(inputHEX60gensym121_3019931155);
    var keyHEX60gensym121_3019931239 = {Field0: nimCopy(null, itemHEX60gensym121_3019931238, NTI3036676201), Field1: 6};
    if (recordDependencyHEX60gensym121_3019931156) {
    recordDependency_3019906144(ctxHEX60gensym121_3019931154, itemHEX60gensym121_3019931238, 6);
    }
    
    var colorHEX60gensym121_3019931240 = nodeColor_3036678426(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, 0);
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,86,97,108,117,101], [32], reprEnum(colorHEX60gensym121_3019931240, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym121_3019931238));
    }
    
    if ((colorHEX60gensym121_3019931240 == 2)) {
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
    if (false) {
    markRed_3036679306(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, []);
    }
    
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    }
    else {
      if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
      }
      
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym121_3019931240 == 0)) {
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
    if (false) {
    markRed_3036679306(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, []);
    }
    
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239, true) == 0)) {
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym121_3019931154.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
      if (false) {
      markRed_3036679306(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, []);
      }
      
      if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
      }
      
      if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym121_3019931240 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,49,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym121_3019931154.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym121_3019931154.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym121_3019931154.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019931157;

}

function voidValue_3087008471() {
  var result_3087008472 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008472 = nimCopy(result_3087008472, {kind: 1, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008472;

}

function some_3019916528(val_3019916530) {
  var result_3019916531 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3019916531.has = true;
    result_3019916531.val = nimCopy(result_3019916531.val, val_3019916530, NTI3087007751);

  return result_3019916531;

}

function none_3019916536() {
  var result_3019916543 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  return result_3019916543;

}

function none_3019916533() {
  var result_3019916535 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3019916535 = nimCopy(result_3019916535, none_3019916536(), NTI3019909216);

  return result_3019916535;

}

function getValue_3019916335(ctxHEX60gensym100_3019916336, inputHEX60gensym100_3019916337) {
  var result_3019916343 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  BeforeRet: {
    if (contains_3019916420(ctxHEX60gensym100_3019916336.queryCacheValue, inputHEX60gensym100_3019916337)) {
    result_3019916343 = nimCopy(result_3019916343, some_3019916528(HEX5BHEX5D_3019916514(ctxHEX60gensym100_3019916336.queryCacheValue, inputHEX60gensym100_3019916337)), NTI3019909216);
    break BeforeRet;
    }
    
    result_3019916343 = nimCopy(result_3019916343, none_3019916533(), NTI3019909216);
    break BeforeRet;
  };

  return result_3019916343;

}

function isSome_3154116640(self_3154116642) {
  var result_3154116643 = false;

    result_3154116643 = self_3154116642.has;

  return result_3154116643;

}

function isNone_3154116665(self_3154116667) {
  var result_3154116668 = false;

    result_3154116668 = !(self_3154116667.has);

  return result_3154116668;

}

function get_3154116657(self_3154116659) {
  var result_3154116660 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    if (isNone_3154116665(self_3154116659)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3154116660 = self_3154116659.val;

  return result_3154116660;

}

function newAstFunctionValue_3087008494(node_3087008495, rev_3087008496) {
  var result_3087008497 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008497 = nimCopy(result_3087008497, {kind: 5, node: node_3087008495, rev: rev_3087008496, stringValue: [], intValue: 0, impl: null, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008497;

}

function computeValueImpl_3019899462(ctx_3019899463, node_3019899464) {
      var Temporary4;
      var Temporary9;
        var Temporary15;
      var Temporary16;
      var Temporary17;
      var Temporary18;
      var Temporary22;
        var Temporary23;
        var Temporary24;
      var Temporary25;
            var Temporary29;

  var result_3019951581 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym503_3019951583 = (ctx_3019899463.enableLogging || ctx_3019899463.enableQueryLogging);
    if (logQueryHEX60gensym503_3019951583) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym503_3019951583) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899464) || []));
    }
    
    try {
    var key_3019951594 = nimCopy(null, getValueKey_3019916331(ctx_3019899463, getItem_3019906357(node_3019899464)), NTI3036676204);
    if (contains_3019940149(ctx_3019899463.diagnosticsPerQuery, key_3019951594)) {
    Label3: {
      var idHEX60gensym504_3019951772 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2969567475 = [];
      colontmp__2969567475 = (Temporary4 = HEX5BHEX5D_3019940594(ctx_3019899463.diagnosticsPerQuery, key_3019951594), Temporary4)[0][Temporary4[1]];
      var i_2969567476 = 0;
      var L_2969567477 = (colontmp__2969567475).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567476 < L_2969567477)) break Label6;
            idHEX60gensym504_3019951772 = colontmp__2969567475[chckIndx(i_2969567476, 0, (colontmp__2969567475).length - 1)];
            del_3019941318(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019951772).queries, key_3019951594);
            i_2969567476 = addInt(i_2969567476, 1);
            if (!(((colontmp__2969567475).length == L_2969567477))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnosticsHEX60gensym504_3019951930 = [];
    var idsHEX60gensym504_3019951935 = [];
    try {
    Label8: {
      var expr_3019952737 = node_3019899464;
      var pos_3019952738 = 0;
      var _ = pos_3019952738;
      if ((expr_3019952737.kind == 2)) {
++excHandler;
      try {
      Temporary9 = nsuParseInt(node_3019899464.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3019952745 = Temporary9;
      result_3019951581 = nimCopy(result_3019951581, {kind: 3, intValue: value_3019952745, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 3)) {
      result_3019951581 = nimCopy(result_3019951581, {kind: 2, stringValue: nimCopy(null, node_3019899464.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 8)) {
      var function_3019952754 = HEX5BHEX5D_3003121748(node_3019899464, 0);
      var functionValue_3019952755 = computeValue_3019916562(ctx_3019899463, function_3019952754, true);
      if ((functionValue_3019952755.kind == 0)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var args_3019952764 = [];
      Label11: {
        var arg_3019952783 = null;
        var colontmp__2969567485 = [];
        colontmp__2969567485 = HEX5BHEX5D_3154118421(node_3019899464.children, HEX2EHEX2E_1040187488(1, 1));
        var i_2969567486 = 0;
        var L_2969567487 = (colontmp__2969567485).length;
        Label12: {
            Label13: while (true) {
            if (!(i_2969567486 < L_2969567487)) break Label13;
              arg_3019952783 = colontmp__2969567485[chckIndx(i_2969567486, 0, (colontmp__2969567485).length - 1)];
              var value_3019952784 = computeValue_3019916562(ctx_3019899463, arg_3019952783, true);
              if ((value_3019952784.kind == 0)) {
              result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
              break BeforeRet;
              }
              
              var Temporary14 = nimCopy(null, value_3019952784, NTI3087007751);
              args_3019952764.push(Temporary14);;
              i_2969567486 = addInt(i_2969567486, 1);
              if (!(((colontmp__2969567485).length == L_2969567487))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((functionValue_3019952755.kind == 4)) {
        var Temporary15 = functionValue_3019952755;
        if (ConstSet95[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI3087007750)); }
      if ((Temporary15.impl == null)) {
      var fmtRes_3019952805 = [mnewString(0)];
      fmtRes_3019952805[0].push.apply(fmtRes_3019952805[0], [91,99,111,109,112,105,108,101,114,93,58,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,32,39]);;
      formatValue_3036676344(fmtRes_3019952805, 0, function_3019952754.id, []);
      fmtRes_3019952805[0].push.apply(fmtRes_3019952805[0], [39,32,97,116,32]);;
      formatValue_3087008590(fmtRes_3019952805, 0, node_3019899464, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019952805[0], NTI33554449)]);
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var Temporary16 = functionValue_3019952755;
      if (ConstSet96[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
      result_3019951581 = nimCopy(result_3019951581, Temporary16.impl(args_3019952764), NTI3087007751);
      break BeforeRet;
      }
      
      if ((functionValue_3019952755.kind == 5)) {
      var Temporary17 = functionValue_3019952755;
      if (ConstSet114[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI3087007750)); }
      var fec_3019952820 = getOrCreateFunctionExecutionContext_3019907563(ctx_3019899463, {node: Temporary17.node, arguments: nimCopy(null, args_3019952764, NTI3019930420), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
      result_3019951581 = nimCopy(result_3019951581, computeFunctionExecution_3019933908(ctx_3019899463, fec_3019952820), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 7)) {
      if ((len_3003121752(node_3019899464) == 0)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, computeValue_3019916562(ctx_3019899463, last_3003121922(node_3019899464), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 4)) {
      if ((len_3003121752(node_3019899464) == 0)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, computeValue_3019916562(ctx_3019899463, HEX5BHEX5D_3003121748(node_3019899464, 0), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 1)) {
      var id_3019952833 = nimCopy(null, node_3019899464.reff, NTI2046820355);
      var symbols_3019952834 = computeSymbols_3019922496(ctx_3019899463, node_3019899464, true);
      if (contains_3019950603(symbols_3019952834, id_3019952833)) {
      var symbol_3019953001 = (Temporary18 = HEX5BHEX5D_3019950858(symbols_3019952834, id_3019952833), Temporary18)[0][Temporary18[1]];
      result_3019951581 = nimCopy(result_3019951581, computeSymbolValue_3019931153(ctx_3019899463, symbol_3019953001, true), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 9)) {
      if ((len_3003121752(node_3019899464) < 2)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3019953006 = 0;
      Label19: {
          Label20: while (true) {
          if (!(addInt(index_3019953006, 1) < len_3003121752(node_3019899464))) break Label20;
            try {
            var condition_3019953011 = HEX5BHEX5D_3003121748(node_3019899464, index_3019953006);
            var trueCase_3019953012 = HEX5BHEX5D_3003121748(node_3019899464, addInt(index_3019953006, 1));
            var conditionValue_3019953013 = computeValue_3019916562(ctx_3019899463, condition_3019953011, true);
            if ((conditionValue_3019953013.kind == 0)) {
            result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3019953013.kind == 3))) {
            var fmtRes_3019953026 = [mnewString(0)];
            fmtRes_3019953026[0].push.apply(fmtRes_3019953026[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3154118047(fmtRes_3019953026, 0, conditionValue_3019953013, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019953026[0], NTI33554449)]);
            result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3019953013.intValue == 0))) {
            var trueCaseValue_3019953032 = computeValue_3019916562(ctx_3019899463, trueCase_3019953012, true);
            result_3019951581 = nimCopy(result_3019951581, trueCaseValue_3019953032, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3019953006 = addInt(index_3019953006, 2);
            }
          }
      };
      if (!((modInt(len_3003121752(node_3019899464), 2) == 0))) {
      var falseCaseValue_3019953033 = computeValue_3019916562(ctx_3019899463, last_3003121922(node_3019899464), true);
      result_3019951581 = nimCopy(result_3019951581, falseCaseValue_3019953033, NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 11)) {
        var oHEX60gensym530_3019953040 = getValue_3019916335(ctx_3019899463, node_3019899464);
        if (!isSome_3154116640(oHEX60gensym530_3019953040)) Temporary24 = false; else {          var value_3019953086 = nimCopy(null, get_3154116657(oHEX60gensym530_3019953040), NTI3087007751);
          Temporary24 = true;        }        if (!Temporary24) Temporary23 = false; else {          Temporary23 = (value_3019953086.kind == 5);        }      if (Temporary23) {
      var Temporary25 = value_3019953086;
      if (ConstSet115[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI3087007750)); }
      Temporary22 = Temporary25.rev;
      }
      else {
      Temporary22 = 0;
      }
      
      var currentRev_3019953091 = Temporary22;
      result_3019951581 = nimCopy(result_3019951581, newAstFunctionValue_3087008494(node_3019899464, addInt(currentRev_3019953091, 1)), NTI3087007751);
      break BeforeRet;
      }
      else {
        result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}
    };
    } finally {
    if ((0 < (diagnosticsHEX60gensym504_3019951930).length)) {
    HEX5BHEX5DHEX3D_3019942505(ctx_3019899463.diagnosticsPerQuery, key_3019951594, idsHEX60gensym504_3019951935);
    Label26: {
      var iHEX60gensym504_3019952015 = 0;
      var colontmp__2969567480 = 0;
      colontmp__2969567480 = (idsHEX60gensym504_3019951935).length - 1;
      var res_2969567481 = 0;
      Label27: {
          Label28: while (true) {
          if (!(res_2969567481 <= colontmp__2969567480)) break Label28;
            iHEX60gensym504_3019952015 = res_2969567481;
            var idHEX60gensym504_3019952016 = nimCopy(null, idsHEX60gensym504_3019951935[chckIndx(iHEX60gensym504_3019952015, 0, (idsHEX60gensym504_3019951935).length - 1)], NTI2046820355);
            var diagHEX60gensym504_3019952017 = nimCopy(null, diagnosticsHEX60gensym504_3019951930[chckIndx(iHEX60gensym504_3019952015, 0, (diagnosticsHEX60gensym504_3019951930).length - 1)], NTI3019898883);
            if (!(contains_3019944168(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016))) {
            HEX5BHEX5DHEX3D_3019944250(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3019945984(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016).queries, key_3019951594))) {
            HEX5BHEX5DHEX3D_3019946155(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016).queries, key_3019951594, []);
            }
            
            var Temporary30 = nimCopy(null, diagHEX60gensym504_3019952017, NTI3019898883);
            (Temporary29 = HEX5BHEX5D_3019947888(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016).queries, key_3019951594), Temporary29)[0][Temporary29[1]].push(Temporary30);;
            res_2969567481 = addInt(res_2969567481, 1);
          }
      };
    };
    }
    else {
    del_3019948061(ctx_3019899463.diagnosticsPerQuery, key_3019951594);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym503_3019951583 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008498(result_3019951581) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym503_3019951583) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019951581;

}

function HEX5BHEX5DHEX3D_3019900124(t_3019900127, key_3019900128, val_3019900129) {
    t_3019900127.set(mapKeyJs_3019899778(key_3019900128), val_3019900129);

  
}

function fingerprint_3087008538(value_3087008539) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008540 = [];

  BeforeRet: {
    switch (value_3087008539.kind) {
    case 0:
      result_3087008540 = nimCopy(null, [value_3087008539.kind], NTI3087008194);
      break BeforeRet;
      break;
    case 1:
      result_3087008540 = nimCopy(null, [value_3087008539.kind], NTI3087008194);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008539;
      if (ConstSet116[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, [value_3087008539.kind, Temporary1.intValue], NTI3036676328);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008539;
      if (ConstSet117[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, [value_3087008539.kind, hash_1325400491(Temporary2.stringValue)], NTI3036676328);
      break BeforeRet;
      break;
    case 4:
      result_3087008540 = nimCopy(null, [], NTI2013268507);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008539;
      if (ConstSet118[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = value_3087008539;
      if (ConstSet119[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, [value_3087008539.kind, hash_3003124022(Temporary3.node), Temporary4.rev], NTI3087008384);
      break BeforeRet;
      break;
    case 6:
      var Temporary5 = value_3087008539;
      if (ConstSet120[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, HEX26_3087008364([value_3087008539.kind], fingerprint_3087008357(Temporary5.typ)), NTI3087008200);
      break BeforeRet;
      break;
    }
  };

  return result_3087008540;

}

function init_3019900223(result_3019900226, result_3019900226_Idx, capacity_3019900227) {
    result_3019900226[result_3019900226_Idx] = (new Map());

  
}

function some_3019907120(val_3019907122) {
  var result_3019907123 = ({val: null});

    if (!(!((val_3019907122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3019907123.val = val_3019907122;

  return result_3019907123;

}

function HEX5BHEX5DHEX3D_3019907323(t_3019907326, key_3019907327, val_3019907328) {
    t_3019907326.set(mapKeyJs_3019899588(key_3019907327), val_3019907328);

  
}

function newSymbol_3019907758(ctxHEX60gensym91_3019907759, dataHEX60gensym91_3019907760) {
  var result_3019907761 = null;

  BeforeRet: {
    var itemHEX60gensym91_3019907762 = getItem_3019907143(dataHEX60gensym91_3019907760);
    var keyHEX60gensym91_3019907763 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym91_3019907762, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym91_3019907759.depGraph.changed, keyHEX60gensym91_3019907763, ctxHEX60gensym91_3019907759.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907323(ctxHEX60gensym91_3019907759.itemsSymbol, itemHEX60gensym91_3019907762, dataHEX60gensym91_3019907760);
    result_3019907761 = dataHEX60gensym91_3019907760;
    break BeforeRet;
  };

  return result_3019907761;

}

function none_3019907136() {
  var result_3019907142 = ({val: null});

  return result_3019907142;

}

function none_3019907133() {
  var result_3019907135 = ({val: null});

    result_3019907135 = nimCopy(result_3019907135, none_3019907136(), NTI3087008909);

  return result_3019907135;

}

function computeSymbolImpl_3019899465(ctx_3019899466, node_3019899467) {
      var Temporary4;

  var result_3019953098 = ({val: null});

  BeforeRet: {
    var logQueryHEX60gensym531_3019953100 = (ctx_3019899466.enableLogging || ctx_3019899466.enableQueryLogging);
    if (logQueryHEX60gensym531_3019953100) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym531_3019953100) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899467) || []));
    }
    
    try {
    Label3: {
      var expr_3019953171 = node_3019899467;
      var pos_3019953172 = 0;
      var _ = pos_3019953172;
      if ((expr_3019953171.kind == 1)) {
      var symbols_3019953179 = computeSymbols_3019922496(ctx_3019899466, node_3019899467, true);
      if (contains_3019950603(symbols_3019953179, node_3019899467.reff)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120((Temporary4 = HEX5BHEX5D_3019950858(symbols_3019953179, node_3019899467.reff), Temporary4)[0][Temporary4[1]]), NTI3087008909);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3019953171.kind == 4)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120(newSymbol_3019907758(ctx_3019899466, {kind: 0, id: nimCopy(null, node_3019899467.id, NTI2046820355), node: node_3019899467, name: nimCopy(null, node_3019899467.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008909);
      break BeforeRet;
      }
      else {
      if ((expr_3019953171.kind == 5)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120(newSymbol_3019907758(ctx_3019899466, {kind: 0, id: nimCopy(null, node_3019899467.id, NTI2046820355), node: node_3019899467, name: nimCopy(null, node_3019899467.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008909);
      break BeforeRet;
      }
      else {
      if ((expr_3019953171.kind == 6)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120(newSymbol_3019907758(ctx_3019899466, {kind: 0, id: nimCopy(null, node_3019899467.id, NTI2046820355), node: node_3019899467, name: nimCopy(null, node_3019899467.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008909);
      break BeforeRet;
      }
      else {
        var fmtRes_3019953374 = [mnewString(0)];
        fmtRes_3019953374[0].push.apply(fmtRes_3019953374[0], [70,97,105,108,101,100,32,116,111,32,103,101,116,32,115,121,109,98,111,108,32,102,114,111,109,32,110,111,100,101,32]);;
        formatValue_3087008590(fmtRes_3019953374, 0, node_3019899467, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019953374[0], NTI33554449)]);
        result_3019953098 = nimCopy(result_3019953098, none_3019907133(), NTI3087008909);
        break BeforeRet;
      }
      }}}
    };
    } finally {
    if ((logQueryHEX60gensym531_3019953100 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3019905491(result_3019953098) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym531_3019953100) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019953098;

}

function HEX5BHEX5DHEX3D_3019900472(t_3019900475, key_3019900476, val_3019900477) {
    t_3019900475.set(mapKeyJs_3019899778(key_3019900476), val_3019900477);

  
}

function fingerprint_3087008948(symbol_3087008949) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008950 = [];

    switch (symbol_3087008949.kind) {
    case 0:
      var Temporary1 = symbol_3087008949;
      if (ConstSet121[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008950 = nimCopy(null, [hash_2046820630(symbol_3087008949.id), hash_1325400491(symbol_3087008949.name), symbol_3087008949.kind, hash_2046820630(Temporary1.node.id)], NTI3087008654);
      break;
    case 1:
      var Temporary2 = symbol_3087008949;
      if (ConstSet122[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008949;
      if (ConstSet123[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      var Temporary4 = symbol_3087008949;
      if (ConstSet124[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      var Temporary5 = symbol_3087008949;
      if (ConstSet125[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
      result_3087008950 = nimCopy(null, HEX26_3087008364(HEX26_3087008364([hash_2046820630(symbol_3087008949.id), hash_1325400491(symbol_3087008949.name), symbol_3087008949.kind, Temporary2.precedence, Temporary3.operatorNotation], fingerprint_3087008357(Temporary4.typ)), fingerprint_3087008538(Temporary5.value)), NTI3087008200);
      break;
    }

  return result_3087008950;

}

function fingerprint_3087009342(symbol_3087009347) {
      var Temporary1;

  var result_3087009348 = [];

  BeforeRet: {
      var oHEX60gensym27_3087009351 = nimCopy(null, symbol_3087009347, NTI3087008909);
      if (!isSome_3087009356(oHEX60gensym27_3087009351)) Temporary1 = false; else {        var s_3087009402 = get_3087009376(oHEX60gensym27_3087009351);
        Temporary1 = true;      }    if (Temporary1) {
    result_3087009348 = nimCopy(null, fingerprint_3087008948(s_3087009402), NTI3036676200);
    break BeforeRet;
    }
    
    result_3087009348 = nimCopy(null, [], NTI2013268507);
    break BeforeRet;
  };

  return result_3087009348;

}

function init_3019900571(result_3019900574, result_3019900574_Idx, capacity_3019900575) {
    result_3019900574[result_3019900574_Idx] = (new Map());

  
}

function initTable_3019905097(initialSize_3019905100) {
  var result_3019905101 = ({data: [], counter: 0});

    var correctSizeHEX60gensym154_3019905103 = slotsNeeded_1308622891(chckRange(initialSize_3019905100, 0, 2147483647));
    result_3019905101.counter = 0;
    result_3019905101.data = new Array(chckRange(correctSizeHEX60gensym154_3019905103, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym154_3019905103, 0, 2147483647) ; ++i) { result_3019905101.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3019905101;

}

function newTable_3019937829(initialSize_3019937832) {
  var result_3019937833 = null;

    result_3019937833 = ({data: [], counter: 0});
    result_3019937833 = nimCopy(result_3019937833, initTable_3019905097(initialSize_3019937832), NTI3087008713);

  return result_3019937833;

}

function none_3003121871() {
  var result_3003121877 = ({val: null});

  return result_3003121877;

}

function none_3003121868() {
  var result_3003121870 = ({val: null});

    result_3003121870 = nimCopy(result_3003121870, none_3003121871(), NTI3003121783);

  return result_3003121870;

}

function some_3003121890(val_3003121892) {
  var result_3003121893 = ({val: null});

    if (!(!((val_3003121892 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3003121893.val = val_3003121892;

  return result_3003121893;

}

function findWithParentRec_3003123589(node_3003123590, kind_3003123591) {
  var result_3003123593 = ({val: null});

  BeforeRet: {
    if ((node_3003123590.parent == null)) {
    result_3003123593 = nimCopy(result_3003123593, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    if ((node_3003123590.parent.kind == kind_3003123591)) {
    result_3003123593 = nimCopy(result_3003123593, some_3003121890(node_3003123590), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003123593 = nimCopy(result_3003123593, findWithParentRec_3003123589(node_3003123590.parent, kind_3003123591), NTI3003121783);
    break BeforeRet;
  };

  return result_3003123593;

}

function isSome_3003123546(self_3003123548) {
  var result_3003123549 = false;

    result_3003123549 = !((self_3003123548.val == null));

  return result_3003123549;

}

function isNone_3003123574(self_3003123576) {
  var result_3003123577 = false;

    result_3003123577 = (self_3003123576.val == null);

  return result_3003123577;

}

function get_3003123566(self_3003123568) {
  var result_3003123569 = null;

    if (isNone_3003123574(self_3003123568)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3003123569 = self_3003123568["val"];

  return result_3003123569;

}

function mustRehash_3019938626(t_3019938628) {
  var result_3019938629 = false;

    if (!((t_3019938628.counter < (t_3019938628.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019938629 = ((mulInt((t_3019938628.data).length, 2) < mulInt(t_3019938628.counter, 3)) || (subInt((t_3019938628.data).length, t_3019938628.counter) < 4));

  return result_3019938629;

}

function rawInsert_3019939319(t_3019939323, data_3019939324, data_3019939324_Idx, key_3019939325, val_3019939326, hc_3019939327, h_3019939328) {
    data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field1 = nimCopy(data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field1, key_3019939325, NTI2046820355);
    data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field2 = val_3019939326;
    data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field0 = hc_3019939327;

  
}

function enlarge_3019938883(t_3019938886) {
    var n_3019938889 = [];
    n_3019938889 = new Array(chckRange(mulInt((t_3019938886.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019938886.data).length, 2), 0, 2147483647) ; ++i) { n_3019938889[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3019938886.data; t_3019938886.data = n_3019938889; n_3019938889 = Temporary1;    Label2: {
      var i_3019938987 = 0;
      var colontmp__2969567559 = 0;
      colontmp__2969567559 = (n_3019938889).length - 1;
      var res_2969567560 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567560 <= colontmp__2969567559)) break Label4;
            i_3019938987 = res_2969567560;
            var eh_3019939068 = n_3019938889[chckIndx(i_3019938987, 0, (n_3019938889).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019939068)) {
            var j_3019939072 = (eh_3019939068 & (t_3019938886.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019938886.data[chckIndx(j_3019939072, 0, (t_3019938886.data).length - 1)].Field0)) break Label6;
                  j_3019939072 = nextTry_1308622883(j_3019939072, (t_3019938886.data).length - 1);
                }
            };
            rawInsert_3019939319(t_3019938886, t_3019938886, "data", n_3019938889[chckIndx(i_3019938987, 0, (n_3019938889).length - 1)].Field1, n_3019938889[chckIndx(i_3019938987, 0, (n_3019938889).length - 1)].Field2, eh_3019939068, j_3019939072);
            }
            
            res_2969567560 = addInt(res_2969567560, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019939569(t_3019939572, key_3019939573, hc_3019939574) {
  var result_3019939575 = 0;

  BeforeRet: {
    if (((t_3019939572.data).length == 0)) {
    result_3019939575 = -1;
    break BeforeRet;
    }
    
    var h_3019939660 = (hc_3019939574 & (t_3019939572.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019939572.data[chckIndx(h_3019939660, 0, (t_3019939572.data).length - 1)].Field0)) break Label2;
          if (((t_3019939572.data[chckIndx(h_3019939660, 0, (t_3019939572.data).length - 1)].Field0 == hc_3019939574) && HEX3DHEX3D_2046820626(t_3019939572.data[chckIndx(h_3019939660, 0, (t_3019939572.data).length - 1)].Field1, key_3019939573))) {
          result_3019939575 = h_3019939660;
          break BeforeRet;
          }
          
          h_3019939660 = nextTry_1308622883(h_3019939660, (t_3019939572.data).length - 1);
        }
    };
    result_3019939575 = subInt(-1, h_3019939660);
  };

  return result_3019939575;

}

function HEX5BHEX5DHEX3D_3019938028(t_3019938031, key_3019938032, val_3019938033) {
    if (((t_3019938031.data).length == 0)) {
    var correctSizeHEX60gensym329_3019938117 = slotsNeeded_1308622891(32);
    t_3019938031.counter = 0;
    t_3019938031.data = new Array(chckRange(correctSizeHEX60gensym329_3019938117, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym329_3019938117, 0, 2147483647) ; ++i) { t_3019938031.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3019938122 = [0];
    var index_3019938458 = rawGet_3019938123(t_3019938031, key_3019938032, hc_3019938122, 0);
    if ((0 <= index_3019938458)) {
    t_3019938031.data[chckIndx(index_3019938458, 0, (t_3019938031.data).length - 1)].Field2 = val_3019938033;
    }
    else {
      if (((t_3019938031.data).length == 0)) {
      var correctSizeHEX60gensym334_3019938621 = slotsNeeded_1308622891(32);
      t_3019938031.counter = 0;
      t_3019938031.data = new Array(chckRange(correctSizeHEX60gensym334_3019938621, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym334_3019938621, 0, 2147483647) ; ++i) { t_3019938031.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3019938626(t_3019938031)) {
      enlarge_3019938883(t_3019938031);
      index_3019938458 = rawGetKnownHC_3019939569(t_3019938031, key_3019938032, hc_3019938122[0]);
      }
      
      index_3019938458 = subInt(-1, index_3019938458);
      rawInsert_3019939319(t_3019938031, t_3019938031, "data", key_3019938032, val_3019938033, hc_3019938122[0], index_3019938458);
      t_3019938031.counter = addInt(t_3019938031.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_3019953618(t_3019953621, key_3019953622, val_3019953623) {
    HEX5BHEX5DHEX3D_3019938028(t_3019953621, key_3019953622, val_3019953623);

  
}

function base_3003121758(node_3003121759) {
  var result_3003121760 = null;

  BeforeRet: {
    if ((node_3003121759.parent == null)) {
    result_3003121760 = node_3003121759;
    break BeforeRet;
    }
    
    result_3003121760 = base_3003121758(node_3003121759.parent);
    break BeforeRet;
  };

  return result_3003121760;

}

function len_3019954306(t_3019954309) {
  var result_3019954310 = 0;

    result_3019954310 = t_3019954309.counter;

  return result_3019954310;

}

function computeSymbolsImpl_3019899469(ctx_3019899470, node_3019899471) {
      var Temporary3;
      var Temporary4;
                var Temporary13;
      var Temporary14;
              var Temporary18;
                var Temporary23;

  var result_3019953413 = null;

    var logQueryHEX60gensym542_3019953415 = (ctx_3019899470.enableLogging || ctx_3019899470.enableQueryLogging);
    if (logQueryHEX60gensym542_3019953415) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym542_3019953415) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899471) || []));
    }
    
    try {
    result_3019953413 = newTable_3019937829(32);
      var oHEX60gensym543_3019953497 = findWithParentRec_3003123589(node_3019899471, 7);
      if (!isSome_3003123546(oHEX60gensym543_3019953497)) Temporary4 = false; else {        var parentInNodeList_3019953543 = get_3003123566(oHEX60gensym543_3019953497);
        Temporary4 = true;      }      if (!Temporary4) Temporary3 = false; else {        Temporary3 = !((parentInNodeList_3019953543.parent.parent == null));      }    if (Temporary3) {
    var parentSymbols_3019953548 = computeSymbols_3019922496(ctx_3019899470, parentInNodeList_3019953543.parent, true);
    Label5: {
      var id_3019953553 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var sym_3019953554 = null;
      var L_2969567522 = len_3087009065(parentSymbols_3019953548);
      Label6: {
        var h_2969567524 = 0;
        var colontmp__2969567525 = 0;
        colontmp__2969567525 = (parentSymbols_3019953548.data).length - 1;
        var res_2969567526 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_2969567526 <= colontmp__2969567525)) break Label8;
              h_2969567524 = res_2969567526;
              if (isFilled_1308622880(parentSymbols_3019953548.data[chckIndx(h_2969567524, 0, (parentSymbols_3019953548.data).length - 1)].Field0)) {
              var colontmp__2969567529 = nimCopy(null, {Field0: nimCopy(null, parentSymbols_3019953548.data[chckIndx(h_2969567524, 0, (parentSymbols_3019953548.data).length - 1)].Field1, NTI2046820355), Field1: parentSymbols_3019953548.data[chckIndx(h_2969567524, 0, (parentSymbols_3019953548.data).length - 1)].Field2}, NTI3087008732);
              id_3019953553 = nimCopy(id_3019953553, colontmp__2969567529["Field0"], NTI2046820355);
              sym_3019953554 = colontmp__2969567529["Field1"];
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, id_3019953553, sym_3019953554);
              if (!((len_3087009065(parentSymbols_3019953548) == L_2969567522))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567526 = addInt(res_2969567526, 1);
            }
        };
      };
    };
    recordDependency_3019906144(ctx_3019899470, getItem_3019906357(parentInNodeList_3019953543.parent), -1);
    var bIsOrderDependent_3019953777 = !((parentInNodeList_3019953543.parent.parent == null));
    Label9: {
      var child_3019953781 = null;
      var i_2969567532 = 0;
      var L_2969567533 = (parentInNodeList_3019953543.parent.children).length;
      Label10: {
          Label11: while (true) {
          if (!(i_2969567532 < L_2969567533)) break Label11;
            child_3019953781 = parentInNodeList_3019953543.parent.children[chckIndx(i_2969567532, 0, (parentInNodeList_3019953543.parent.children).length - 1)];
            Label12: {
              if ((bIsOrderDependent_3019953777 && (child_3019953781 == parentInNodeList_3019953543))) {
              break Label9;
              }
              
              if (((!((child_3019953781.kind == 4)) && !((child_3019953781.kind == 5))) && !((child_3019953781.kind == 6)))) {
              break Label12;
              }
              
                var oHEX60gensym549_3019953800 = computeSymbol_3019919344(ctx_3019899470, child_3019953781, true);
                if (!isSome_3087009356(oHEX60gensym549_3019953800)) Temporary13 = false; else {                  var symbol_3019953846 = get_3087009376(oHEX60gensym549_3019953800);
                  Temporary13 = true;                }              if (Temporary13) {
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, symbol_3019953846.id, symbol_3019953846);
              }
              
            };
            i_2969567532 = addInt(i_2969567532, 1);
            if (!(((parentInNodeList_3019953543.parent.children).length == L_2969567533))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      var oHEX60gensym550_3019953918 = findWithParentRec_3003123589(node_3019899471, 11);
      if (!isSome_3003123546(oHEX60gensym550_3019953918)) Temporary14 = false; else {        var parentInFunctionDef_3019953964 = get_3003123566(oHEX60gensym550_3019953918);
        Temporary14 = true;      }    if (Temporary14) {
    var functionDefinition_3019953965 = parentInFunctionDef_3019953964.parent;
    if ((0 < len_3003121752(functionDefinition_3019953965))) {
    var params_3019953966 = HEX5BHEX5D_3003121748(functionDefinition_3019953965, 0);
    recordDependency_3019906144(ctx_3019899470, getItem_3019906357(params_3019953966), -1);
    Label15: {
      var param_3019953970 = null;
      var i_2969567536 = 0;
      var L_2969567537 = (params_3019953966.children).length;
      Label16: {
          Label17: while (true) {
          if (!(i_2969567536 < L_2969567537)) break Label17;
            param_3019953970 = params_3019953966.children[chckIndx(i_2969567536, 0, (params_3019953966.children).length - 1)];
            recordDependency_3019906144(ctx_3019899470, getItem_3019906357(param_3019953970), -1);
              var oHEX60gensym552_3019953973 = computeSymbol_3019919344(ctx_3019899470, param_3019953970, true);
              if (!isSome_3087009356(oHEX60gensym552_3019953973)) Temporary18 = false; else {                var symbol_3019954019 = get_3087009376(oHEX60gensym552_3019953973);
                Temporary18 = true;              }            if (Temporary18) {
            HEX5BHEX5DHEX3D_3019953618(result_3019953413, param_3019953970.id, symbol_3019954019);
            }
            
            i_2969567536 = addInt(i_2969567536, 1);
            if (!(((params_3019953966.children).length == L_2969567537))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    }
    }
    var root_3019954089 = base_3003121758(node_3019899471);
    recordDependency_3019906144(ctx_3019899470, getItem_3019906357(root_3019954089), -1);
    Label19: {
      var child_3019954093 = null;
      var i_2969567541 = 0;
      var L_2969567542 = (root_3019954089.children).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2969567541 < L_2969567542)) break Label21;
            child_3019954093 = root_3019954089.children[chckIndx(i_2969567541, 0, (root_3019954089.children).length - 1)];
            Label22: {
              if (((!((child_3019954093.kind == 4)) && !((child_3019954093.kind == 5))) && !((child_3019954093.kind == 6)))) {
              break Label22;
              }
              
                var oHEX60gensym556_3019954108 = computeSymbol_3019919344(ctx_3019899470, child_3019954093, true);
                if (!isSome_3087009356(oHEX60gensym556_3019954108)) Temporary23 = false; else {                  var symbol_3019954154 = get_3087009376(oHEX60gensym556_3019954108);
                  Temporary23 = true;                }              if (Temporary23) {
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, symbol_3019954154.id, symbol_3019954154);
              }
              
            };
            i_2969567541 = addInt(i_2969567541, 1);
            if (!(((root_3019954089.children).length == L_2969567542))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label24: {
      var key_3019954647 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3019954648 = null;
      var L_2969567549 = len_3019954306(ctx_3019899470.globalScope);
      Label25: {
        var h_2969567551 = 0;
        var colontmp__2969567552 = 0;
        colontmp__2969567552 = (ctx_3019899470.globalScope.data).length - 1;
        var res_2969567553 = 0;
        Label26: {
            Label27: while (true) {
            if (!(res_2969567553 <= colontmp__2969567552)) break Label27;
              h_2969567551 = res_2969567553;
              if (isFilled_1308622880(ctx_3019899470.globalScope.data[chckIndx(h_2969567551, 0, (ctx_3019899470.globalScope.data).length - 1)].Field0)) {
              var colontmp__2969567556 = nimCopy(null, {Field0: nimCopy(null, ctx_3019899470.globalScope.data[chckIndx(h_2969567551, 0, (ctx_3019899470.globalScope.data).length - 1)].Field1, NTI2046820355), Field1: ctx_3019899470.globalScope.data[chckIndx(h_2969567551, 0, (ctx_3019899470.globalScope.data).length - 1)].Field2}, NTI3019931331);
              key_3019954647 = nimCopy(key_3019954647, colontmp__2969567556["Field0"], NTI2046820355);
              symbol_3019954648 = colontmp__2969567556["Field1"];
              recordDependency_3019906144(ctx_3019899470, getItem_3019907143(symbol_3019954648), -1);
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, symbol_3019954648.id, symbol_3019954648);
              if (!((len_3019954306(ctx_3019899470.globalScope) == L_2969567549))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567553 = addInt(res_2969567553, 1);
            }
        };
      };
    };
    } finally {
    if ((logQueryHEX60gensym542_3019953415 && false)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3019905598(result_3019953413) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym542_3019953415) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }

  return result_3019953413;

}

function HEX5BHEX5DHEX3D_3019900821(t_3019900824, key_3019900825, val_3019900826) {
    t_3019900824.set(mapKeyJs_3019899778(key_3019900825), val_3019900826);

  
}

function fingerprint_3087009003(symbols_3087009011) {
  var result_3087009012 = [[]];

    result_3087009012[0] = nimCopy(null, [], NTI2013268507);
    Label1: {
      var key_3087009327 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var value_3087009328 = null;
      var L_2969567564 = len_3087009065(symbols_3087009011);
      Label2: {
        var h_2969567566 = 0;
        var colontmp__2969567567 = 0;
        colontmp__2969567567 = (symbols_3087009011.data).length - 1;
        var res_2969567568 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969567568 <= colontmp__2969567567)) break Label4;
              h_2969567566 = res_2969567568;
              if (isFilled_1308622880(symbols_3087009011.data[chckIndx(h_2969567566, 0, (symbols_3087009011.data).length - 1)].Field0)) {
              var colontmp__2969567571 = nimCopy(null, {Field0: nimCopy(null, symbols_3087009011.data[chckIndx(h_2969567566, 0, (symbols_3087009011.data).length - 1)].Field1, NTI2046820355), Field1: symbols_3087009011.data[chckIndx(h_2969567566, 0, (symbols_3087009011.data).length - 1)].Field2}, NTI3087008732);
              key_3087009327 = nimCopy(key_3087009327, colontmp__2969567571["Field0"], NTI2046820355);
              value_3087009328 = colontmp__2969567571["Field1"];
              add_3087008402(result_3087009012, 0, fingerprint_3087008948(value_3087009328));
              if (!((len_3087009065(symbols_3087009011) == L_2969567564))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567568 = addInt(res_2969567568, 1);
            }
        };
      };
    };

  return result_3087009012[0];

}

function init_3019900920(result_3019900923, result_3019900923_Idx, capacity_3019900924) {
    result_3019900923[result_3019900923_Idx] = (new Map());

  
}

function getValidationKey_3019925421(ctxHEX60gensym111_3019925422, itemIdHEX60gensym111_3019925423) {
  var result_3019925424 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2969567586 = nimCopy(null, itemIdHEX60gensym111_3019925423, NTI3036676201);
    var colontmp__2969567587 = 4;
    result_3019925424 = nimCopy(result_3019925424, {Field0: nimCopy(null, colontmp__2969567586, NTI3036676201), Field1: colontmp__2969567587}, NTI3036676204);
    break BeforeRet;
  };

  return result_3019925424;

}

function contains_3019925510(t_3019925513, key_3019925514) {
  var result_3019925515 = false;

    result_3019925515 = t_3019925513.has(mapKeyJs_3019899778(key_3019925514));

  return result_3019925515;

}

function HEX5BHEX5D_3019925604(t_3019925607, key_3019925608) {
  var result_3019925609 = false;

    result_3019925609 = t_3019925607.get(mapKeyJs_3019899778(key_3019925608));

  return result_3019925609;

}

function computeValidation_3019925643(ctxHEX60gensym113_3019925644, inputHEX60gensym113_3019925645, recordDependencyHEX60gensym113_3019925646) {
    var Temporary3;
    var Temporary5;

  var result_3019925647 = false;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym113_3019925728 = getItem_3019906357(inputHEX60gensym113_3019925645);
    var keyHEX60gensym113_3019925729 = {Field0: nimCopy(null, itemHEX60gensym113_3019925728, NTI3036676201), Field1: 4};
    if (recordDependencyHEX60gensym113_3019925646) {
    recordDependency_3019906144(ctxHEX60gensym113_3019925644, itemHEX60gensym113_3019925728, 4);
    }
    
    var colorHEX60gensym113_3019925730 = nodeColor_3036678426(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, 0);
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,105,100,97,116,105,111,110], [32], reprEnum(colorHEX60gensym113_3019925730, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym113_3019925728));
    }
    
    if ((colorHEX60gensym113_3019925730 == 2)) {
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
    if (false) {
    markRed_3036679306(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, []);
    }
    
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    }
    else {
      if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
      }
      
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym113_3019925730 == 0)) {
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
    if (false) {
    markRed_3036679306(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, []);
    }
    
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729, true) == 0)) {
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym113_3019925644.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
      if (false) {
      markRed_3036679306(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, []);
      }
      
      if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
      }
      
      if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym113_3019925730 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,51,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym113_3019925644.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym113_3019925644.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym113_3019925644.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019925647;

}

function computeValidationImpl_3019899474(ctx_3019899475, node_3019899476) {
      var Temporary4;
        var Temporary12;
            var Temporary20;

  var result_3019940051 = false;

  BeforeRet: {
    var logQueryHEX60gensym344_3019940053 = (ctx_3019899475.enableLogging || ctx_3019899475.enableQueryLogging);
    if (logQueryHEX60gensym344_3019940053) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym344_3019940053) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899476) || []));
    }
    
    try {
    var key_3019940064 = nimCopy(null, getValidationKey_3019925421(ctx_3019899475, getItem_3019906357(node_3019899476)), NTI3036676204);
    if (contains_3019940149(ctx_3019899475.diagnosticsPerQuery, key_3019940064)) {
    Label3: {
      var idHEX60gensym345_3019940729 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2969567573 = [];
      colontmp__2969567573 = (Temporary4 = HEX5BHEX5D_3019940594(ctx_3019899475.diagnosticsPerQuery, key_3019940064), Temporary4)[0][Temporary4[1]];
      var i_2969567574 = 0;
      var L_2969567575 = (colontmp__2969567573).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567574 < L_2969567575)) break Label6;
            idHEX60gensym345_3019940729 = colontmp__2969567573[chckIndx(i_2969567574, 0, (colontmp__2969567573).length - 1)];
            del_3019941318(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019940729).queries, key_3019940064);
            i_2969567574 = addInt(i_2969567574, 1);
            if (!(((colontmp__2969567573).length == L_2969567575))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnosticsHEX60gensym345_3019942432 = [];
    var idsHEX60gensym345_3019942437 = [];
    try {
    result_3019940051 = true;
    var typ_3019948810 = computeType_3019913434(ctx_3019899475, node_3019899476, true);
    if ((typ_3019948810.kind == 0)) {
    result_3019940051 = false;
    }
    
    Label8: {
      Label9: {
        var expr_3019948816 = node_3019899476;
        var pos_3019948817 = 0;
        var _ = pos_3019948817;
        if ((expr_3019948816.kind == 11)) {
        if (!((typ_3019948810.kind == 4))) {
        var Temporary10 = nimCopy(null, node_3019899476.id, NTI2046820355);
        idsHEX60gensym345_3019942437.push(Temporary10);;
        var fmtRes_3019948836 = [mnewString(0)];
        fmtRes_3019948836[0].push.apply(fmtRes_3019948836[0], [84,121,112,101,32,111,102,32,102,117,110,99,116,105,111,110,32,105,115,32,110,111,116,32,97,32,102,117,110,99,116,105,111,110,32,116,121,112,101,44,32,98,117,116,32]);;
        formatValue_3019948837(fmtRes_3019948836, 0, typ_3019948810, []);
        diagnosticsHEX60gensym345_3019942432.push({message: nimCopy(null, fmtRes_3019948836[0], NTI33554449)});;
        result_3019940051 = false;
        break BeforeRet;
        }
        
        if (!((len_3003121752(node_3019899476) == 3))) {
        var Temporary11 = nimCopy(null, node_3019899476.id, NTI2046820355);
        idsHEX60gensym345_3019942437.push(Temporary11);;
        var fmtRes_3019948854 = [mnewString(0)];
        fmtRes_3019948854[0].push.apply(fmtRes_3019948854[0], [70,117,110,99,116,105,111,110,32,110,111,100,101,32,109,117,115,116,32,104,97,118,101,32,51,32,99,104,105,108,100,114,101,110,44,32,98,117,116,32,104,97,115,32]);;
        formatValue_2701131945(fmtRes_3019948854, 0, len_3003121752(node_3019899476), []);
        diagnosticsHEX60gensym345_3019942432.push({message: nimCopy(null, fmtRes_3019948854[0], NTI33554449)});;
        result_3019940051 = false;
        break BeforeRet;
        }
        
        var Temporary12 = typ_3019948810;
        if (ConstSet126[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007747)); }
        var returnType_3019948864 = Temporary12.returnType;
        var body_3019948865 = HEX5BHEX5D_3003121748(node_3019899476, 2);
        var bodyType_3019948866 = computeType_3019913434(ctx_3019899475, body_3019948865, true);
        if ((bodyType_3019948866.kind == 0)) {
        result_3019940051 = false;
        break BeforeRet;
        }
        
        if (!(HEX3DHEX3D_3087008313(returnType_3019948864, bodyType_3019948866))) {
        var Temporary13 = nimCopy(null, body_3019948865.id, NTI2046820355);
        idsHEX60gensym345_3019942437.push(Temporary13);;
        var fmtRes_3019948879 = [mnewString(0)];
        fmtRes_3019948879[0].push.apply(fmtRes_3019948879[0], [70,117,110,99,116,105,111,110,32,114,101,116,117,114,110,32,116,121,112,101,32,105,115,32]);;
        formatValue_3019948837(fmtRes_3019948879, 0, returnType_3019948864, []);
        fmtRes_3019948879[0].push.apply(fmtRes_3019948879[0], [44,32,98,117,116,32,98,111,100,121,32,114,101,116,117,114,110,115,32]);;
        formatValue_3019948837(fmtRes_3019948879, 0, bodyType_3019948866, []);
        diagnosticsHEX60gensym345_3019942432.push({message: nimCopy(null, fmtRes_3019948879[0], NTI33554449)});;
        result_3019940051 = false;
        break BeforeRet;
        }
        
        }
        else {
        }
        
      };
    };
    if (result_3019940051) {
    Label14: {
      var c_3019948897 = null;
      var i_2969567583 = 0;
      var L_2969567584 = (node_3019899476.children).length;
      Label15: {
          Label16: while (true) {
          if (!(i_2969567583 < L_2969567584)) break Label16;
            c_3019948897 = node_3019899476.children[chckIndx(i_2969567583, 0, (node_3019899476.children).length - 1)];
            result_3019940051 = (result_3019940051 && computeValidation_3019925643(ctx_3019899475, c_3019948897, true));
            i_2969567583 = addInt(i_2969567583, 1);
            if (!(((node_3019899476.children).length == L_2969567584))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    } finally {
    if ((0 < (diagnosticsHEX60gensym345_3019942432).length)) {
    HEX5BHEX5DHEX3D_3019942505(ctx_3019899475.diagnosticsPerQuery, key_3019940064, idsHEX60gensym345_3019942437);
    Label17: {
      var iHEX60gensym345_3019944089 = 0;
      var colontmp__2969567578 = 0;
      colontmp__2969567578 = (idsHEX60gensym345_3019942437).length - 1;
      var res_2969567579 = 0;
      Label18: {
          Label19: while (true) {
          if (!(res_2969567579 <= colontmp__2969567578)) break Label19;
            iHEX60gensym345_3019944089 = res_2969567579;
            var idHEX60gensym345_3019944090 = nimCopy(null, idsHEX60gensym345_3019942437[chckIndx(iHEX60gensym345_3019944089, 0, (idsHEX60gensym345_3019942437).length - 1)], NTI2046820355);
            var diagHEX60gensym345_3019944091 = nimCopy(null, diagnosticsHEX60gensym345_3019942432[chckIndx(iHEX60gensym345_3019944089, 0, (diagnosticsHEX60gensym345_3019942432).length - 1)], NTI3019898883);
            if (!(contains_3019944168(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090))) {
            HEX5BHEX5DHEX3D_3019944250(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3019945984(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090).queries, key_3019940064))) {
            HEX5BHEX5DHEX3D_3019946155(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090).queries, key_3019940064, []);
            }
            
            var Temporary21 = nimCopy(null, diagHEX60gensym345_3019944091, NTI3019898883);
            (Temporary20 = HEX5BHEX5D_3019947888(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090).queries, key_3019940064), Temporary20)[0][Temporary20[1]].push(Temporary21);;
            res_2969567579 = addInt(res_2969567579, 1);
          }
      };
    };
    }
    else {
    del_3019948061(ctx_3019899475.diagnosticsPerQuery, key_3019940064);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym344_3019940053 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],nimBoolToStr(result_3019940051) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym344_3019940053) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019940051;

}

function HEX5BHEX5DHEX3D_3019901168(t_3019901171, key_3019901172, val_3019901173) {
    t_3019901171.set(mapKeyJs_3019899778(key_3019901172), val_3019901173);

  
}

function fingerprint_3087010815(val_3087010816) {
  var result_3087010817 = [];

    result_3087010817 = nimCopy(null, [val_3087010816], NTI3087008194);

  return result_3087010817;

}

function init_3019901276(result_3019901279, result_3019901279_Idx, capacity_3019901280) {
    result_3019901279[result_3019901279_Idx] = (new Map());

  
}

function contains_3019901364(t_3019901367, key_3019901368) {
  var result_3019901369 = false;

    result_3019901369 = t_3019901367.has(mapKeyJs_3019899588(key_3019901368));

  return result_3019901369;

}

function HEX5BHEX5D_3019901463(t_3019901466, key_3019901467) {
  var result_3019901468 = null;

    result_3019901468 = t_3019901466.get(mapKeyJs_3019899588(key_3019901467));

  return result_3019901468;

}

function computeSymbolTypeImpl_3019899477(ctx_3019899478, symbol_3019899479) {
      var Temporary3;
      var Temporary4;

  var result_3019940009 = null;

  BeforeRet: {
    var logQueryHEX60gensym342_3019940011 = (ctx_3019899478.enableLogging || ctx_3019899478.enableQueryLogging);
    if (logQueryHEX60gensym342_3019940011) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym342_3019940011) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3087008915(symbol_3019899479) || []));
    }
    
    try {
    switch (symbol_3019899479.kind) {
    case 0:
      var Temporary3 = symbol_3019899479;
      if (ConstSet127[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3019940009 = computeType_3019913434(ctx_3019899478, Temporary3.node, true);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3019899479;
      if (ConstSet128[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3019940009 = Temporary4.typ;
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym342_3019940011 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008191(result_3019940009) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym342_3019940011) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019940009;

}

function HEX5BHEX5DHEX3D_3019901542(t_3019901545, key_3019901546, val_3019901547) {
    t_3019901545.set(mapKeyJs_3019901554(key_3019901546), val_3019901547);

  
}

function init_3019901652(result_3019901655, result_3019901655_Idx, capacity_3019901656) {
    result_3019901655[result_3019901655_Idx] = (new Map());

  
}

function computeSymbolValueImpl_3019899480(ctx_3019899481, symbol_3019899482) {
      var Temporary3;
      var Temporary4;

  var result_3019940025 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym343_3019940027 = (ctx_3019899481.enableLogging || ctx_3019899481.enableQueryLogging);
    if (logQueryHEX60gensym343_3019940027) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym343_3019940027) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3087008915(symbol_3019899482) || []));
    }
    
    try {
    switch (symbol_3019899482.kind) {
    case 0:
      var Temporary3 = symbol_3019899482;
      if (ConstSet129[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3019940025 = nimCopy(result_3019940025, computeValue_3019916562(ctx_3019899481, Temporary3.node, true), NTI3087007751);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3019899482;
      if (ConstSet130[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3019940025 = nimCopy(result_3019940025, Temporary4.value, NTI3087007751);
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym343_3019940027 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008498(result_3019940025) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym343_3019940027) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019940025;

}

function HEX5BHEX5DHEX3D_3019901900(t_3019901903, key_3019901904, val_3019901905) {
    t_3019901903.set(mapKeyJs_3019901554(key_3019901904), val_3019901905);

  
}

function init_3019901999(result_3019902002, result_3019902002_Idx, capacity_3019902003) {
    result_3019902002[result_3019902002_Idx] = (new Map());

  
}

function contains_3019902087(t_3019902090, key_3019902091) {
  var result_3019902092 = false;

    result_3019902092 = t_3019902090.has(mapKeyJs_3019899588(key_3019902091));

  return result_3019902092;

}

function HEX5BHEX5D_3019902186(t_3019902189, key_3019902190) {
  var result_3019902191 = null;

    result_3019902191 = t_3019902189.get(mapKeyJs_3019899588(key_3019902190));

  return result_3019902191;

}

function initTable_3154118844(initialSize_3154118847) {
  var result_3154118848 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_3154118850 = slotsNeeded_1308622891(chckRange(initialSize_3154118847, 0, 2147483647));
    result_3154118848.counter = 0;
    result_3154118848.data = new Array(chckRange(correctSizeHEX60gensym58_3154118850, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_3154118850, 0, 2147483647) ; ++i) { result_3154118848.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }
  return result_3154118848;

}

function rawGet_3154116773(t_3154116776, key_3154116777, hc_3154116778, hc_3154116778_Idx) {
  var result_3154116779 = 0;

  BeforeRet: {
    hc_3154116778[hc_3154116778_Idx] = hash_2046820630(key_3154116777);
    if ((hc_3154116778[hc_3154116778_Idx] == 0)) {
    hc_3154116778[hc_3154116778_Idx] = 314159265;
    }
    
    if (((t_3154116776.data).length == 0)) {
    result_3154116779 = -1;
    break BeforeRet;
    }
    
    var h_3154116830 = (hc_3154116778[hc_3154116778_Idx] & (t_3154116776.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3154116776.data[chckIndx(h_3154116830, 0, (t_3154116776.data).length - 1)].Field0)) break Label2;
          if (((t_3154116776.data[chckIndx(h_3154116830, 0, (t_3154116776.data).length - 1)].Field0 == hc_3154116778[hc_3154116778_Idx]) && HEX3DHEX3D_2046820626(t_3154116776.data[chckIndx(h_3154116830, 0, (t_3154116776.data).length - 1)].Field1, key_3154116777))) {
          result_3154116779 = h_3154116830;
          break BeforeRet;
          }
          
          h_3154116830 = nextTry_1308622883(h_3154116830, (t_3154116776.data).length - 1);
        }
    };
    result_3154116779 = subInt(-1, h_3154116830);
  };

  return result_3154116779;

}

function mustRehash_3154117118(t_3154117120) {
  var result_3154117121 = false;

    if (!((t_3154117120.counter < (t_3154117120.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3154117121 = ((mulInt((t_3154117120.data).length, 2) < mulInt(t_3154117120.counter, 3)) || (subInt((t_3154117120.data).length, t_3154117120.counter) < 4));

  return result_3154117121;

}

function rawInsert_3154117567(t_3154117571, data_3154117572, data_3154117572_Idx, key_3154117573, val_3154117574, hc_3154117575, h_3154117576) {
    data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field1 = nimCopy(data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field1, key_3154117573, NTI2046820355);
    data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field2 = nimCopy(data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field2, val_3154117574, NTI3087007751);
    data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field0 = hc_3154117575;

  
}

function enlarge_3154117273(t_3154117276) {
    var n_3154117279 = [];
    n_3154117279 = new Array(chckRange(mulInt((t_3154117276.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3154117276.data).length, 2), 0, 2147483647) ; ++i) { n_3154117279[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    var Temporary1 = t_3154117276.data; t_3154117276.data = n_3154117279; n_3154117279 = Temporary1;    Label2: {
      var i_3154117343 = 0;
      var colontmp__2969567596 = 0;
      colontmp__2969567596 = (n_3154117279).length - 1;
      var res_2969567597 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567597 <= colontmp__2969567596)) break Label4;
            i_3154117343 = res_2969567597;
            var eh_3154117397 = n_3154117279[chckIndx(i_3154117343, 0, (n_3154117279).length - 1)].Field0;
            if (isFilled_1308622880(eh_3154117397)) {
            var j_3154117401 = (eh_3154117397 & (t_3154117276.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3154117276.data[chckIndx(j_3154117401, 0, (t_3154117276.data).length - 1)].Field0)) break Label6;
                  j_3154117401 = nextTry_1308622883(j_3154117401, (t_3154117276.data).length - 1);
                }
            };
            rawInsert_3154117567(t_3154117276, t_3154117276, "data", n_3154117279[chckIndx(i_3154117343, 0, (n_3154117279).length - 1)].Field1, n_3154117279[chckIndx(i_3154117343, 0, (n_3154117279).length - 1)].Field2, eh_3154117397, j_3154117401);
            }
            
            res_2969567597 = addInt(res_2969567597, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3154117736(t_3154117739, key_3154117740, hc_3154117741) {
  var result_3154117742 = 0;

  BeforeRet: {
    if (((t_3154117739.data).length == 0)) {
    result_3154117742 = -1;
    break BeforeRet;
    }
    
    var h_3154117793 = (hc_3154117741 & (t_3154117739.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3154117739.data[chckIndx(h_3154117793, 0, (t_3154117739.data).length - 1)].Field0)) break Label2;
          if (((t_3154117739.data[chckIndx(h_3154117793, 0, (t_3154117739.data).length - 1)].Field0 == hc_3154117741) && HEX3DHEX3D_2046820626(t_3154117739.data[chckIndx(h_3154117793, 0, (t_3154117739.data).length - 1)].Field1, key_3154117740))) {
          result_3154117742 = h_3154117793;
          break BeforeRet;
          }
          
          h_3154117793 = nextTry_1308622883(h_3154117793, (t_3154117739.data).length - 1);
        }
    };
    result_3154117742 = subInt(-1, h_3154117793);
  };

  return result_3154117742;

}

function HEX5BHEX5DHEX3D_3154116712(t_3154116715, key_3154116716, val_3154116717) {
    if (((t_3154116715.data).length == 0)) {
    var correctSizeHEX60gensym3_3154116767 = slotsNeeded_1308622891(32);
    t_3154116715.counter = 0;
    t_3154116715.data = new Array(chckRange(correctSizeHEX60gensym3_3154116767, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3154116767, 0, 2147483647) ; ++i) { t_3154116715.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    }
    
    var hc_3154116772 = [0];
    var index_3154117011 = rawGet_3154116773(t_3154116715, key_3154116716, hc_3154116772, 0);
    if ((0 <= index_3154117011)) {
    t_3154116715.data[chckIndx(index_3154117011, 0, (t_3154116715.data).length - 1)].Field2 = nimCopy(t_3154116715.data[chckIndx(index_3154117011, 0, (t_3154116715.data).length - 1)].Field2, val_3154116717, NTI3087007751);
    }
    else {
      if (((t_3154116715.data).length == 0)) {
      var correctSizeHEX60gensym8_3154117113 = slotsNeeded_1308622891(32);
      t_3154116715.counter = 0;
      t_3154116715.data = new Array(chckRange(correctSizeHEX60gensym8_3154117113, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3154117113, 0, 2147483647) ; ++i) { t_3154116715.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }      }
      
      if (mustRehash_3154117118(t_3154116715)) {
      enlarge_3154117273(t_3154116715);
      index_3154117011 = rawGetKnownHC_3154117736(t_3154116715, key_3154116716, hc_3154116772[0]);
      }
      
      index_3154117011 = subInt(-1, index_3154117011);
      rawInsert_3154117567(t_3154116715, t_3154116715, "data", key_3154116716, val_3154116717, hc_3154116772[0], index_3154117011);
      t_3154116715.counter = addInt(t_3154116715.counter, 1);
    }
    

  
}

function get_1191185108(self_1191185110, otherwise_1191185111) {
    var Temporary1;

  var result_1191185112 = 0;

    if (isSome_1191185117(self_1191185110)) {
    Temporary1 = self_1191185110.val;
    }
    else {
    Temporary1 = otherwise_1191185111;
    }
    
    result_1191185112 = Temporary1;

  return result_1191185112;

}

function hasKey_3154118174(t_3154118177, key_3154118178) {
  var result_3154118179 = false;

    var hc_3154118180 = [0];
    result_3154118179 = (0 <= rawGet_3154116773(t_3154118177, key_3154118178, hc_3154118180, 0));

  return result_3154118179;

}

function contains_3154118168(t_3154118171, key_3154118172) {
  var result_3154118173 = false;

  BeforeRet: {
    result_3154118173 = hasKey_3154118174(t_3154118171, key_3154118172);
    break BeforeRet;
  };

  return result_3154118173;

}

function HEX5BHEX5D_3154118240(t_3154118243, key_3154118244) {
  var result_3154118245 = null;

    var hcHEX60gensym22_3154118246 = [0];
    var indexHEX60gensym22_3154118253 = rawGet_3154116773(t_3154118243, key_3154118244, hcHEX60gensym22_3154118246, 0);
    if ((0 <= indexHEX60gensym22_3154118253)) {
    result_3154118245 = t_3154118243.data[chckIndx(indexHEX60gensym22_3154118253, 0, (t_3154118243.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3154118244);
    }
    

  return result_3154118245;

}

function newFunctionExecutionContext_3019907902(ctxHEX60gensym92_3019907903, dataHEX60gensym92_3019907904) {
  var result_3019907905 = null;

  BeforeRet: {
    var itemHEX60gensym92_3019907906 = getItem_3019907554(dataHEX60gensym92_3019907904);
    var keyHEX60gensym92_3019907907 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym92_3019907906, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym92_3019907903.depGraph.changed, keyHEX60gensym92_3019907907, ctxHEX60gensym92_3019907903.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907734(ctxHEX60gensym92_3019907903.itemsFunctionExecutionContext, itemHEX60gensym92_3019907906, dataHEX60gensym92_3019907904);
    result_3019907905 = dataHEX60gensym92_3019907904;
    break BeforeRet;
  };

  return result_3019907905;

}

function executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, node_3154117981, variables_3154117984) {
      var Temporary7;
              var Temporary12;
              var Temporary16;
        var Temporary17;
        var Temporary22;
        var Temporary27;
        var Temporary28;

  var result_3154117985 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (ctx_3154117979.enableExecutionLogging) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (ctx_3154117979.enableExecutionLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32], HEX24_3003123671(node_3154117981));
    }
    
    try {
    Label3: {
      var expr_3154117996 = node_3154117981;
      var pos_3154117997 = 0;
      var _ = pos_3154117997;
      if ((expr_3154117996.kind == 0)) {
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 7)) {
      var lastValue_3154118008 = errorValue_3087008442();
      Label4: {
        var child_3154118012 = null;
        var i_2969567602 = 0;
        var L_2969567603 = (node_3154117981.children).length;
        Label5: {
            Label6: while (true) {
            if (!(i_2969567602 < L_2969567603)) break Label6;
              child_3154118012 = node_3154117981.children[chckIndx(i_2969567602, 0, (node_3154117981.children).length - 1)];
              lastValue_3154118008 = nimCopy(lastValue_3154118008, executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, child_3154118012, variables_3154117984), NTI3087007751);
              i_2969567602 = addInt(i_2969567602, 1);
              if (!(((node_3154117981.children).length == L_2969567603))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3154117985 = nimCopy(result_3154117985, lastValue_3154118008, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 3)) {
      result_3154117985 = nimCopy(result_3154117985, {kind: 2, stringValue: nimCopy(null, node_3154117981.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 2)) {
++excHandler;
      try {
      Temporary7 = nsuParseInt(node_3154117981.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3154118021 = Temporary7;
      result_3154117985 = nimCopy(result_3154117985, {kind: 3, intValue: value_3154118021, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 9)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3154118026 = 0;
      Label9: {
          Label10: while (true) {
          if (!(addInt(index_3154118026, 1) < len_3003121752(node_3154117981))) break Label10;
            try {
            var condition_3154118031 = HEX5BHEX5D_3003121748(node_3154117981, index_3154118026);
            var trueCase_3154118032 = HEX5BHEX5D_3003121748(node_3154117981, addInt(index_3154118026, 1));
            var conditionValue_3154118033 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, condition_3154118031, variables_3154117984);
            if ((conditionValue_3154118033.kind == 0)) {
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3154118033.kind == 3))) {
            var fmtRes_3154118046 = [mnewString(0)];
            fmtRes_3154118046[0].push.apply(fmtRes_3154118046[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3154118047(fmtRes_3154118046, 0, conditionValue_3154118033, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118046[0], NTI33554449)]);
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary12 = conditionValue_3154118033;
              if (ConstSet131[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007750)); }
            if (!((Temporary12.intValue == 0))) {
            var trueCaseValue_3154118052 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, trueCase_3154118032, variables_3154117984);
            result_3154117985 = nimCopy(result_3154117985, trueCaseValue_3154118052, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3154118026 = addInt(index_3154118026, 2);
            }
          }
      };
      if (!((modInt(len_3003121752(node_3154117981), 2) == 0))) {
      var falseCaseValue_3154118053 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, last_3003121922(node_3154117981), variables_3154117984);
      result_3154117985 = nimCopy(result_3154117985, falseCaseValue_3154118053, NTI3087007751);
      break BeforeRet;
      }
      
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 10)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var condition_3154118058 = HEX5BHEX5D_3003121748(node_3154117981, 0);
      var body_3154118059 = HEX5BHEX5D_3003121748(node_3154117981, 1);
      var index_3154118060 = 0;
      Label13: {
          Label14: while (true) {
          if (!true) break Label14;
            try {
            var maxLoopIterations_3154118081 = get_1191185108(fec_3154117980.maxLoopIterations, 1000);
            if ((maxLoopIterations_3154118081 < index_3154118060)) {
            var fmtRes_3154118086 = [mnewString(0)];
            fmtRes_3154118086[0].push.apply(fmtRes_3154118086[0], [91,99,111,109,112,105,108,101,114,93,32,77,97,120,32,108,111,111,112,32,105,116,101,114,97,116,105,111,110,115,32,40]);;
            formatValue_2701131945(fmtRes_3154118086, 0, maxLoopIterations_3154118081, []);
            fmtRes_3154118086[0].push.apply(fmtRes_3154118086[0], [41,32,114,101,97,99,104,101,100,32,102,111,114,32]);;
            formatValue_3087008590(fmtRes_3154118086, 0, node_3154117981, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118086[0], NTI33554449)]);
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            var conditionValue_3154118097 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, condition_3154118058, variables_3154117984);
            if ((conditionValue_3154118097.kind == 0)) {
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3154118097.kind == 3))) {
            var fmtRes_3154118110 = [mnewString(0)];
            fmtRes_3154118110[0].push.apply(fmtRes_3154118110[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3154118047(fmtRes_3154118110, 0, conditionValue_3154118097, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118110[0], NTI33554449)]);
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary16 = conditionValue_3154118097;
              if (ConstSet132[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
            if ((Temporary16.intValue == 0)) {
            break Label13;
            }
            
            var bodyValue_3154118116 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, body_3154118059, variables_3154117984);
            if ((bodyValue_3154118116.kind == 0)) {
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3154118060 = addInt(index_3154118060, 1);
            }
          }
      };
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 1)) {
      var id_3154118125 = nimCopy(null, node_3154117981.reff, NTI2046820355);
      if (contains_3154118168(variables_3154117984, id_3154118125)) {
      result_3154117985 = nimCopy(result_3154117985, HEX5BHEX5D_3154118240(variables_3154117984, id_3154118125), NTI3087007751);
      break BeforeRet;
      }
      
        var oHEX60gensym44_3154118321 = computeSymbol_3019919344(ctx_3154117979, node_3154117981, true);
        if (!isSome_3087009356(oHEX60gensym44_3154118321)) Temporary17 = false; else {          var sym_3154118344 = get_3087009376(oHEX60gensym44_3154118321);
          Temporary17 = true;        }      if (Temporary17) {
      var value_3154118345 = computeSymbolValue_3019931153(ctx_3154117979, sym_3154118344, true);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, id_3154118125, value_3154118345);
      result_3154117985 = nimCopy(result_3154117985, value_3154118345, NTI3087007751);
      break BeforeRet;
      }
      
      var fmtRes_3154118396 = [mnewString(0)];
      fmtRes_3154118396[0].push.apply(fmtRes_3154118396[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
      formatValue_3087008590(fmtRes_3154118396, 0, node_3154117981, []);
      fmtRes_3154118396[0].push.apply(fmtRes_3154118396[0], [58,32,70,97,105,108,101,100,32,116,111,32,108,111,111,107,32,117,112,32,118,97,108,117,101,32,102,111,114,32,105,100,101,110,116,105,102,105,101,114]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118396[0], NTI33554449)]);
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 8)) {
      var function_3154118406 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, HEX5BHEX5D_3003121748(node_3154117981, 0), variables_3154117984);
      switch (function_3154118406.kind) {
      case 0:
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        break;
      case 4:
        var args_3154118411 = [];
        Label18: {
          var arg_3154118448 = null;
          var colontmp__2969567608 = [];
          colontmp__2969567608 = HEX5BHEX5D_3154118421(node_3154117981.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2969567609 = 0;
          var L_2969567610 = (colontmp__2969567608).length;
          Label19: {
              Label20: while (true) {
              if (!(i_2969567609 < L_2969567610)) break Label20;
                arg_3154118448 = colontmp__2969567608[chckIndx(i_2969567609, 0, (colontmp__2969567608).length - 1)];
                var value_3154118449 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, arg_3154118448, variables_3154117984);
                if ((value_3154118449.kind == 0)) {
                result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary21 = nimCopy(null, value_3154118449, NTI3087007751);
                args_3154118411.push(Temporary21);;
                i_2969567609 = addInt(i_2969567609, 1);
                if (!(((colontmp__2969567608).length == L_2969567610))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary22 = function_3154118406;
        if (ConstSet133[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007750)); }
        result_3154117985 = nimCopy(result_3154117985, Temporary22.impl(args_3154118411), NTI3087007751);
        break BeforeRet;
        break;
      case 5:
        var args_3154118462 = [];
        Label23: {
          var arg_3154118481 = null;
          var colontmp__2969567613 = [];
          colontmp__2969567613 = HEX5BHEX5D_3154118421(node_3154117981.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2969567614 = 0;
          var L_2969567615 = (colontmp__2969567613).length;
          Label24: {
              Label25: while (true) {
              if (!(i_2969567614 < L_2969567615)) break Label25;
                arg_3154118481 = colontmp__2969567613[chckIndx(i_2969567614, 0, (colontmp__2969567613).length - 1)];
                var value_3154118482 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, arg_3154118481, variables_3154117984);
                if ((value_3154118482.kind == 0)) {
                result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary26 = nimCopy(null, value_3154118482, NTI3087007751);
                args_3154118462.push(Temporary26);;
                i_2969567614 = addInt(i_2969567614, 1);
                if (!(((colontmp__2969567613).length == L_2969567615))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary27 = function_3154118406;
        if (ConstSet134[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007750)); }
        var fec_3154118491 = newFunctionExecutionContext_3019907902(ctx_3154117979, {node: Temporary27.node, arguments: nimCopy(null, args_3154118462, NTI3154117637), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
        result_3154117985 = nimCopy(result_3154117985, computeFunctionExecution_3019933908(ctx_3154117979, fec_3154118491), NTI3087007751);
        break BeforeRet;
        break;
      default: 
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        break;
      }
      }
      else {
      if ((expr_3154117996.kind == 5)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3154118496 = HEX5BHEX5D_3003121748(node_3154117981, 1);
      var value_3154118497 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, valueNode_3154118496, variables_3154117984);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, node_3154117981.id, value_3154118497);
      result_3154117985 = nimCopy(result_3154117985, value_3154118497, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 6)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3154118548 = HEX5BHEX5D_3003121748(node_3154117981, 1);
      var value_3154118549 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, valueNode_3154118548, variables_3154117984);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, node_3154117981.id, value_3154118549);
      result_3154117985 = nimCopy(result_3154117985, value_3154118549, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 4)) {
      var id_3154118600 = nimCopy(null, node_3154117981.id, NTI2046820355);
      if (contains_3154118168(variables_3154117984, id_3154118600)) {
      result_3154117985 = nimCopy(result_3154117985, HEX5BHEX5D_3154118240(variables_3154117984, id_3154118600), NTI3087007751);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3154117996.kind == 13)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var targetNode_3154118710 = HEX5BHEX5D_3003121748(node_3154117981, 0);
      var valueNode_3154118711 = HEX5BHEX5D_3003121748(node_3154117981, 1);
        var oHEX60gensym55_3154118714 = computeSymbol_3019919344(ctx_3154117979, targetNode_3154118710, true);
        if (!isSome_3087009356(oHEX60gensym55_3154118714)) Temporary28 = false; else {          var sym_3154118737 = get_3087009376(oHEX60gensym55_3154118714);
          Temporary28 = true;        }      if (Temporary28) {
      var value_3154118738 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, valueNode_3154118711, variables_3154117984);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, sym_3154118737.id, value_3154118738);
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
        var fmtRes_3154118789 = [mnewString(0)];
        fmtRes_3154118789[0].push.apply(fmtRes_3154118789[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
        formatValue_3087008590(fmtRes_3154118789, 0, node_3154117981, []);
        fmtRes_3154118789[0].push.apply(fmtRes_3154118789[0], [58,32,70,97,105,108,101,100,32,116,111,32,97,115,115,105,103,110,32,116,111,32]);;
        formatValue_3087008590(fmtRes_3154118789, 0, targetNode_3154118710, []);
        fmtRes_3154118789[0].push.apply(fmtRes_3154118789[0], [58,32,110,111,32,115,121,109,98,111,108,32,102,111,117,110,100]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118789[0], NTI33554449)]);
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
      }
      
      }
      else {
        var fmtRes_3154118804 = [mnewString(0)];
        fmtRes_3154118804[0].push.apply(fmtRes_3154118804[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3087008590(fmtRes_3154118804, 0, node_3154117981, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118804[0], NTI33554449)]);
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}}}}}
    };
    } finally {
    if (ctx_3154117979.enableExecutionLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [45,62,32], HEX24_3087008498(result_3154117985));
    }
    
    }
    } finally {
    if (ctx_3154117979.enableExecutionLogging) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3154117985;

}

function computeFunctionExecutionImpl2_3154118839(ctx_3154118840, fec_3154118841) {
      var Temporary4;
        var Temporary5;

  var result_3154118842 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var body_3154118843 = HEX5BHEX5D_3003121748(fec_3154118841.node, 2);
    var variables_3154118855 = [initTable_3154118844(32)];
    var params_3154118856 = HEX5BHEX5D_3003121748(fec_3154118841.node, 0);
    Label1: {
      var i_3154118898 = 0;
      var arg_3154118899 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567590 = 0;
      var L_2969567591 = (fec_3154118841.arguments).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567590 < L_2969567591)) break Label3;
            i_3154118898 = i_2969567590;
            arg_3154118899 = nimCopy(arg_3154118899, fec_3154118841.arguments[chckIndx(i_2969567590, 0, (fec_3154118841.arguments).length - 1)], NTI3087007751);
            if ((len_3003121752(params_3154118856) <= i_3154118898)) {
            var fmtRes_3154118904 = [mnewString(0)];
            fmtRes_3154118904[0].push.apply(fmtRes_3154118904[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,44,32,101,120,112,101,99,116,101,100,32]);;
            formatValue_2701131945(fmtRes_3154118904, 0, len_3003121752(params_3154118856), []);
            fmtRes_3154118904[0].push.apply(fmtRes_3154118904[0], [44,32,103,111,116,32]);;
            formatValue_2701131945(fmtRes_3154118904, 0, (fec_3154118841.arguments).length, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118904[0], NTI33554449)]);
            result_3154118842 = nimCopy(result_3154118842, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            var param_3154118918 = HEX5BHEX5D_3003121748(params_3154118856, i_3154118898);
            HEX5BHEX5DHEX3D_3154116712(variables_3154118855[0], param_3154118918.id, arg_3154118899);
            i_2969567590 = addInt(i_2969567590, 1);
            if (!(((fec_3154118841.arguments).length == L_2969567591))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var bodyResult_3154118965 = executeNodeRec_3154117978(ctx_3154118840, fec_3154118841, body_3154118843, variables_3154118855[0]);
    if ((bodyResult_3154118965.kind == 0)) {
    result_3154118842 = nimCopy(result_3154118842, errorValue_3087008442(), NTI3087007751);
    break BeforeRet;
    }
    
    var functionType_3154118970 = computeType_3019913434(ctx_3154118840, fec_3154118841.node, true);
      if (!(functionType_3154118970.kind == 4)) Temporary4 = false; else {        var Temporary5 = functionType_3154118970;
        if (ConstSet135[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary4 = (Temporary5.returnType.kind == 1);      }    if (Temporary4) {
    result_3154118842 = nimCopy(result_3154118842, voidValue_3087008471(), NTI3087007751);
    break BeforeRet;
    }
    
    result_3154118842 = nimCopy(result_3154118842, bodyResult_3154118965, NTI3087007751);
    break BeforeRet;
  };

  return result_3154118842;

}

function computeFunctionExecutionImpl_3019899483(ctx_3019899484, fec_3019899485) {
  var result_3019937316 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym319_3019937318 = (ctx_3019899484.enableLogging || ctx_3019899484.enableQueryLogging);
    if (logQueryHEX60gensym319_3019937318) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym319_3019937318) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3087008582(fec_3019899485) || []));
    }
    
    try {
    result_3019937316 = nimCopy(result_3019937316, computeFunctionExecutionImpl2_3154118839(ctx_3019899484, fec_3019899485), NTI3087007751);
    break BeforeRet;
    } finally {
    if ((logQueryHEX60gensym319_3019937318 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008498(result_3019937316) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym319_3019937318) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019937316;

}

function HEX5BHEX5DHEX3D_3019902274(t_3019902277, key_3019902278, val_3019902279) {
    t_3019902277.set(mapKeyJs_3019902286(key_3019902278), val_3019902279);

  
}

function init_3019902388(result_3019902391, result_3019902391_Idx, capacity_3019902392) {
    result_3019902391[result_3019902391_Idx] = (new Map());

  
}

function contains_3019902476(t_3019902479, key_3019902480) {
  var result_3019902481 = false;

    result_3019902481 = t_3019902479.has(mapKeyJs_3019899588(key_3019902480));

  return result_3019902481;

}

function HEX5BHEX5D_3019902575(t_3019902578, key_3019902579) {
  var result_3019902580 = null;

    result_3019902580 = t_3019902578.get(mapKeyJs_3019899588(key_3019902579));

  return result_3019902580;

}

function dependOnCurrentRevision_3019906168(ctxHEX60gensym78_3019906169) {
    if ((0 < (ctxHEX60gensym78_3019906169.dependencyStack).length)) {
    ctxHEX60gensym78_3019906169.dependencyStack[chckIndx((ctxHEX60gensym78_3019906169.dependencyStack).length - 1, 0, (ctxHEX60gensym78_3019906169.dependencyStack).length - 1)].push({Field0: {Field0: nimCopy(null, dependencyGlobalRevision_3036676217, NTI2046820355), Field1: -1}, Field1: -1});;
    }
    

  
}

function initTable_3137342870(initialSize_3137342873) {
  var result_3137342874 = ({data: [], counter: 0});

    var correctSizeHEX60gensym96_3137342876 = slotsNeeded_1308622891(chckRange(initialSize_3137342873, 0, 2147483647));
    result_3137342874.counter = 0;
    result_3137342874.data = new Array(chckRange(correctSizeHEX60gensym96_3137342876, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3137342876, 0, 2147483647) ; ++i) { result_3137342874.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }
  return result_3137342874;

}

function rawGet_3087010450(t_3087010453, key_3087010454, hc_3087010455, hc_3087010455_Idx) {
  var result_3087010456 = 0;

  BeforeRet: {
    hc_3087010455[hc_3087010455_Idx] = hash_2046820630(key_3087010454);
    if ((hc_3087010455[hc_3087010455_Idx] == 0)) {
    hc_3087010455[hc_3087010455_Idx] = 314159265;
    }
    
    if (((t_3087010453.data).length == 0)) {
    result_3087010456 = -1;
    break BeforeRet;
    }
    
    var h_3087010508 = (hc_3087010455[hc_3087010455_Idx] & (t_3087010453.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3087010453.data[chckIndx(h_3087010508, 0, (t_3087010453.data).length - 1)].Field0)) break Label2;
          if (((t_3087010453.data[chckIndx(h_3087010508, 0, (t_3087010453.data).length - 1)].Field0 == hc_3087010455[hc_3087010455_Idx]) && HEX3DHEX3D_2046820626(t_3087010453.data[chckIndx(h_3087010508, 0, (t_3087010453.data).length - 1)].Field1, key_3087010454))) {
          result_3087010456 = h_3087010508;
          break BeforeRet;
          }
          
          h_3087010508 = nextTry_1308622883(h_3087010508, (t_3087010453.data).length - 1);
        }
    };
    result_3087010456 = subInt(-1, h_3087010508);
  };

  return result_3087010456;

}

function hasKey_3087010443(t_3087010446, key_3087010447) {
  var result_3087010448 = false;

    var hc_3087010449 = [0];
    result_3087010448 = (0 <= rawGet_3087010450(t_3087010446, key_3087010447, hc_3087010449, 0));

  return result_3087010448;

}

function contains_3137339757(t_3137339760, key_3137339761) {
  var result_3137339762 = false;

  BeforeRet: {
    result_3137339762 = hasKey_3087010443(t_3137339760, key_3137339761);
    break BeforeRet;
  };

  return result_3137339762;

}

function map_3087009435(s_3087009438, op_3087009440) {
  var result_3087009441 = [];

    result_3087009441 = new Array(chckRange((s_3087009438).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3087009438).length, 0, 2147483647) ; ++i) { result_3087009441[i] = null; }    Label1: {
      var i_3087009457 = 0;
      var colontmp__2969567640 = 0;
      colontmp__2969567640 = (s_3087009438).length;
      var i_2969567641 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567641 < colontmp__2969567640)) break Label3;
            i_3087009457 = i_2969567641;
            result_3087009441[chckIndx(i_3087009457, 0, (result_3087009441).length - 1)] = op_3087009440(s_3087009438[chckIndx(i_3087009457, 0, (s_3087009438).length - 1)]);
            i_2969567641 = addInt(i_2969567641, 1);
          }
      };
    };

  return result_3087009441;

}

function clone_3087009416(node_3087009417) {
    
function HEX3Aanonymous_3087009422(c_3087009430) {
      var result_3087009433 = null;

        result_3087009433 = clone_3087009416(c_3087009430);

      return result_3087009433;

    }

  var result_3087009418 = null;

    result_3087009418 = ({mhash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, orientation: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false});
    result_3087009418.id = nimCopy(result_3087009418.id, newId_2046820597(), NTI2046820355);
    result_3087009418.parent = node_3087009417.parent;
    result_3087009418.node = node_3087009417.node;
    result_3087009418.text = nimCopy(null, node_3087009417.text, NTI33554449);
    result_3087009418.bounds = nimCopy(result_3087009418.bounds, node_3087009417.bounds, NTI2147483653);
    result_3087009418.indent = node_3087009417.indent;
    result_3087009418.font = nimCopy(null, node_3087009417.font, NTI33554449);
    result_3087009418.fontSize = node_3087009417.fontSize;
    result_3087009418.render = node_3087009417.render;
    result_3087009418.widgetTemplate = node_3087009417.widgetTemplate;
    result_3087009418.cloneWidget = node_3087009417.cloneWidget;
    result_3087009418.children = nimCopy(null, map_3087009435(node_3087009417.children, HEX3Aanonymous_3087009422), NTI3087009002);
    Label1: {
      var c_3087009461 = null;
      var i_2969567636 = 0;
      var L_2969567637 = (result_3087009418.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567636 < L_2969567637)) break Label3;
            c_3087009461 = result_3087009418.children[chckIndx(i_2969567636, 0, (result_3087009418.children).length - 1)];
            c_3087009461.parent = result_3087009418;
            i_2969567636 = addInt(i_2969567636, 1);
            if (!(((result_3087009418.children).length == L_2969567637))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3087009418;

}

function HEX5BHEX5D_3137339821(t_3137339824, key_3137339825) {
  var result_3137339826 = null;
  var result_3137339826_Idx = 0;

    var hcHEX60gensym22_3137339827 = [0];
    var indexHEX60gensym22_3137339834 = rawGet_3087010450(t_3137339824, key_3137339825, hcHEX60gensym22_3137339827, 0);
    if ((0 <= indexHEX60gensym22_3137339834)) {
    result_3137339826 = t_3137339824.data[chckIndx(indexHEX60gensym22_3137339834, 0, (t_3137339824.data).length - 1)]; result_3137339826_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3137339825);
    }
    

  return [result_3137339826, result_3137339826_Idx];

}

function rawGet_3137340002(t_3137340005, key_3137340006, hc_3137340007, hc_3137340007_Idx) {
  var result_3137340008 = 0;

  BeforeRet: {
    hc_3137340007[hc_3137340007_Idx] = hash_2046820630(key_3137340006);
    if ((hc_3137340007[hc_3137340007_Idx] == 0)) {
    hc_3137340007[hc_3137340007_Idx] = 314159265;
    }
    
    if (((t_3137340005.data).length == 0)) {
    result_3137340008 = -1;
    break BeforeRet;
    }
    
    var h_3137340059 = (hc_3137340007[hc_3137340007_Idx] & (t_3137340005.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137340005.data[chckIndx(h_3137340059, 0, (t_3137340005.data).length - 1)].Field0)) break Label2;
          if (((t_3137340005.data[chckIndx(h_3137340059, 0, (t_3137340005.data).length - 1)].Field0 == hc_3137340007[hc_3137340007_Idx]) && HEX3DHEX3D_2046820626(t_3137340005.data[chckIndx(h_3137340059, 0, (t_3137340005.data).length - 1)].Field1, key_3137340006))) {
          result_3137340008 = h_3137340059;
          break BeforeRet;
          }
          
          h_3137340059 = nextTry_1308622883(h_3137340059, (t_3137340005.data).length - 1);
        }
    };
    result_3137340008 = subInt(-1, h_3137340059);
  };

  return result_3137340008;

}

function mustRehash_3137340347(t_3137340349) {
  var result_3137340350 = false;

    if (!((t_3137340349.counter < (t_3137340349.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3137340350 = ((mulInt((t_3137340349.data).length, 2) < mulInt(t_3137340349.counter, 3)) || (subInt((t_3137340349.data).length, t_3137340349.counter) < 4));

  return result_3137340350;

}

function rawInsert_3137340796(t_3137340800, data_3137340801, data_3137340801_Idx, key_3137340802, val_3137340803, hc_3137340804, h_3137340805) {
    data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field1 = nimCopy(data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field1, key_3137340802, NTI2046820355);
    data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field2 = nimCopy(data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field2, val_3137340803, NTI3087007774);
    data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field0 = hc_3137340804;

  
}

function enlarge_3137340502(t_3137340505) {
    var n_3137340508 = [];
    n_3137340508 = new Array(chckRange(mulInt((t_3137340505.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3137340505.data).length, 2), 0, 2147483647) ; ++i) { n_3137340508[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    var Temporary1 = t_3137340505.data; t_3137340505.data = n_3137340508; n_3137340508 = Temporary1;    Label2: {
      var i_3137340572 = 0;
      var colontmp__2969567646 = 0;
      colontmp__2969567646 = (n_3137340508).length - 1;
      var res_2969567647 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567647 <= colontmp__2969567646)) break Label4;
            i_3137340572 = res_2969567647;
            var eh_3137340626 = n_3137340508[chckIndx(i_3137340572, 0, (n_3137340508).length - 1)].Field0;
            if (isFilled_1308622880(eh_3137340626)) {
            var j_3137340630 = (eh_3137340626 & (t_3137340505.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3137340505.data[chckIndx(j_3137340630, 0, (t_3137340505.data).length - 1)].Field0)) break Label6;
                  j_3137340630 = nextTry_1308622883(j_3137340630, (t_3137340505.data).length - 1);
                }
            };
            rawInsert_3137340796(t_3137340505, t_3137340505, "data", n_3137340508[chckIndx(i_3137340572, 0, (n_3137340508).length - 1)].Field1, n_3137340508[chckIndx(i_3137340572, 0, (n_3137340508).length - 1)].Field2, eh_3137340626, j_3137340630);
            }
            
            res_2969567647 = addInt(res_2969567647, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3137340965(t_3137340968, key_3137340969, hc_3137340970) {
  var result_3137340971 = 0;

  BeforeRet: {
    if (((t_3137340968.data).length == 0)) {
    result_3137340971 = -1;
    break BeforeRet;
    }
    
    var h_3137341022 = (hc_3137340970 & (t_3137340968.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137340968.data[chckIndx(h_3137341022, 0, (t_3137340968.data).length - 1)].Field0)) break Label2;
          if (((t_3137340968.data[chckIndx(h_3137341022, 0, (t_3137340968.data).length - 1)].Field0 == hc_3137340970) && HEX3DHEX3D_2046820626(t_3137340968.data[chckIndx(h_3137341022, 0, (t_3137340968.data).length - 1)].Field1, key_3137340969))) {
          result_3137340971 = h_3137341022;
          break BeforeRet;
          }
          
          h_3137341022 = nextTry_1308622883(h_3137341022, (t_3137340968.data).length - 1);
        }
    };
    result_3137340971 = subInt(-1, h_3137341022);
  };

  return result_3137340971;

}

function HEX5BHEX5DHEX3D_3137339941(t_3137339944, key_3137339945, val_3137339946) {
    if (((t_3137339944.data).length == 0)) {
    var correctSizeHEX60gensym21_3137339996 = slotsNeeded_1308622891(32);
    t_3137339944.counter = 0;
    t_3137339944.data = new Array(chckRange(correctSizeHEX60gensym21_3137339996, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_3137339996, 0, 2147483647) ; ++i) { t_3137339944.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    }
    
    var hc_3137340001 = [0];
    var index_3137340240 = rawGet_3137340002(t_3137339944, key_3137339945, hc_3137340001, 0);
    if ((0 <= index_3137340240)) {
    t_3137339944.data[chckIndx(index_3137340240, 0, (t_3137339944.data).length - 1)].Field2 = nimCopy(t_3137339944.data[chckIndx(index_3137340240, 0, (t_3137339944.data).length - 1)].Field2, val_3137339946, NTI3087007774);
    }
    else {
      if (((t_3137339944.data).length == 0)) {
      var correctSizeHEX60gensym26_3137340342 = slotsNeeded_1308622891(32);
      t_3137339944.counter = 0;
      t_3137339944.data = new Array(chckRange(correctSizeHEX60gensym26_3137340342, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_3137340342, 0, 2147483647) ; ++i) { t_3137339944.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }      }
      
      if (mustRehash_3137340347(t_3137339944)) {
      enlarge_3137340502(t_3137339944);
      index_3137340240 = rawGetKnownHC_3137340965(t_3137339944, key_3137339945, hc_3137340001[0]);
      }
      
      index_3137340240 = subInt(-1, index_3137340240);
      rawInsert_3137340796(t_3137339944, t_3137339944, "data", key_3137339945, val_3137339946, hc_3137340001[0], index_3137340240);
      t_3137339944.counter = addInt(t_3137339944.counter, 1);
    }
    

  
}

function min_33555609(x_33555610, y_33555611) {
    var Temporary1;

  var result_33555612 = 0.0;

    if (((x_33555610 <= y_33555611) || !((y_33555611 == y_33555611)))) {
    Temporary1 = x_33555610;
    }
    else {
    Temporary1 = y_33555611;
    }
    
    result_33555612 = Temporary1;

  return result_33555612;

}

function max_33555642(x_33555643, y_33555644) {
    var Temporary1;

  var result_33555645 = 0.0;

    if (((y_33555644 <= x_33555643) || !((y_33555644 == y_33555644)))) {
    Temporary1 = x_33555643;
    }
    else {
    Temporary1 = y_33555644;
    }
    
    result_33555645 = Temporary1;

  return result_33555645;

}

function or_2147483728(a_2147483729, b_2147483730) {
  var result_2147483731 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483731.x = min_33555609(a_2147483729.x, b_2147483730.x);
    result_2147483731.y = min_33555609(a_2147483729.y, b_2147483730.y);
    result_2147483731.w = (max_33555642((a_2147483729.x + a_2147483729.w), (b_2147483730.x + b_2147483730.w)) - result_2147483731.x);
    result_2147483731.h = (max_33555642((a_2147483729.y + a_2147483729.h), (b_2147483730.y + b_2147483730.h)) - result_2147483731.y);

  return result_2147483731;

}

function HEX2B_2130706587(a_2130706588, b_2130706589) {
  var result_2130706590 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2130706590.x = (a_2130706588.x + b_2130706589.x);
    result_2130706590.y = (a_2130706588.y + b_2130706589.y);
    result_2130706590.w = a_2130706588.w;
    result_2130706590.h = a_2130706588.h;

  return result_2130706590;

}

function vec2_2164261725(xHEX60gensym45_2164261726, yHEX60gensym45_2164261727) {
  var result_2164261728 = ({x: 0.0, y: 0.0});

    result_2164261728 = nimCopy(result_2164261728, {x: xHEX60gensym45_2164261726, y: yHEX60gensym45_2164261727}, NTI2164261152);

  return result_2164261728;

}

function xy_2147483680(rect_2147483681) {
  var result_2147483682 = ({x: 0.0, y: 0.0});

    result_2147483682 = nimCopy(result_2147483682, vec2_2164261725(rect_2147483681.x, rect_2147483681.y), NTI2164261152);

  return result_2147483682;

}

function add_3087009897(node_3087009898, node_3087009898_Idx, child_3087009899) {
  var result_3087009900 = ({parent: null, first: 0, last: 0});

  BeforeRet: {
    node_3087009898[node_3087009898_Idx].children.push(child_3087009899);;
    child_3087009899.depth = addInt(node_3087009898[node_3087009898_Idx].depth, 1);
    child_3087009899.parent = node_3087009898[node_3087009898_Idx];
    child_3087009899.bounds.x = node_3087009898[node_3087009898_Idx].bounds.w;
    node_3087009898[node_3087009898_Idx].bounds = nimCopy(node_3087009898[node_3087009898_Idx].bounds, or_2147483728(node_3087009898[node_3087009898_Idx].bounds, HEX2B_2130706587(child_3087009899.bounds, xy_2147483680(node_3087009898[node_3087009898_Idx].bounds))), NTI2147483653);
    result_3087009900 = nimCopy(result_3087009900, {parent: node_3087009898[node_3087009898_Idx], first: (node_3087009898[node_3087009898_Idx].children).length - 1, last: (node_3087009898[node_3087009898_Idx].children).length}, NTI3087007774);
    break BeforeRet;
  };

  return result_3087009900;

}

function createReplacement_3137339709(input_3137339710, node_3137339711, layout_3137339712, layout_3137339712_Idx, line_3137339713, line_3137339713_Idx) {
    var Temporary1;
    var Temporary2;

  var result_3137339714 = false;

  BeforeRet: {
    if (contains_3137339757(input_3137339710.replacements, node_3137339711.id)) {
    var n_3137339900 = clone_3087009416((Temporary1 = HEX5BHEX5D_3137339821(input_3137339710.replacements, node_3137339711.id), Temporary1)[0][Temporary1[1]]);
    n_3137339900.cloneWidget = false;
    HEX5BHEX5DHEX3D_3137339941(layout_3137339712[layout_3137339712_Idx].nodeToVisualNode, node_3137339711.id, add_3087009897(line_3137339713, line_3137339713_Idx, n_3137339900));
    result_3137339714 = true;
    break BeforeRet;
    }
    
    if (contains_3137339757(input_3137339710.replacements, node_3137339711.reff)) {
    var n_3137341308 = clone_3087009416((Temporary2 = HEX5BHEX5D_3137339821(input_3137339710.replacements, node_3137339711.reff), Temporary2)[0][Temporary2[1]]);
    n_3137341308.cloneWidget = true;
    HEX5BHEX5DHEX3D_3137339941(layout_3137339712[layout_3137339712_Idx].nodeToVisualNode, node_3137339711.id, add_3087009897(line_3137339713, line_3137339713_Idx, n_3137341308));
    result_3137339714 = true;
    break BeforeRet;
    }
    
    result_3137339714 = false;
    break BeforeRet;
  };

  return result_3137339714;

}

function rect_2147483672(pos_2147483673, size_2147483674) {
  var result_2147483675 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483675.x = pos_2147483673.x;
    result_2147483675.y = pos_2147483673.y;
    result_2147483675.w = size_2147483674.x;
    result_2147483675.h = size_2147483674.y;

  return result_2147483675;

}

function vec2_2164261686() {
  var result_2164261687 = ({x: 0.0, y: 0.0});

    result_2164261687 = nimCopy(result_2164261687, {x: 0.0, y: 0.0}, NTI2164261152);

  return result_2164261687;

}

function whHEX3D_2147483689(rect_2147483690, v_2147483691) {
    rect_2147483690.w = v_2147483691.x;
    rect_2147483690.h = v_2147483691.y;

  
}

function newTextNode_3137339636(text_3137339637, color_3137339638, font_3137339639, measureText_3137339642, node_3137339643) {
  var result_3137339644 = null;

    result_3137339644 = {id: newId_2046820597(), text: nimCopy(null, text_3137339637, NTI33554449), colors: [nimCopy(null, color_3137339638, NTI33554449)], font: nimCopy(null, font_3137339639, NTI33554449), fontSize: config_3137339605[0].fontSize, node: node_3137339643, mhash: 0, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false};
    whHEX3D_2147483689(result_3137339644.bounds, measureText_3137339642(text_3137339637));

  return result_3137339644;

}

function newTextNode_3137339649(text_3137339650, colors_3137339651, font_3137339652, measureText_3137339655, node_3137339656, styleOverride_3137339666) {
  var result_3137339667 = null;

    result_3137339667 = {id: newId_2046820597(), text: nimCopy(null, text_3137339650, NTI33554449), colors: nimCopy(null, colors_3137339651, NTI3137339575), font: nimCopy(null, font_3137339652, NTI33554449), fontSize: config_3137339605[0].fontSize, node: node_3137339656, styleOverride: nimCopy(null, styleOverride_3137339666, NTI3087007788), mhash: 0, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false};
    whHEX3D_2147483689(result_3137339667.bounds, measureText_3137339655(text_3137339650));

  return result_3137339667;

}

function none_3137339658() {
  var result_3137339665 = ({val: {}, has: false});

  return result_3137339665;

}

function getColorForSymbol_3137341355(ctx_3137341356, sym_3137341357) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
        var Temporary6;

  var result_3137341358 = [];

  BeforeRet: {
    var typ_3137341359 = computeSymbolType_3019928398(ctx_3137341356, sym_3137341357, false);
    switch (typ_3137341359.kind) {
    case 0:
      result_3137341358 = nimCopy(null, [[105,110,118,97,108,105,100]], NTI1560281203);
      break BeforeRet;
      break;
    case 6:
      result_3137341358 = nimCopy(null, [[115,116,111,114,97,103,101,46,116,121,112,101]], NTI1560281203);
      break BeforeRet;
      break;
    case 4:
      if ((sym_3137341357.kind == 1)) {
      var Temporary1 = sym_3137341357;
      if (ConstSet138[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      switch (Temporary1.operatorNotation) {
      case 1:
      case 3:
      case 2:
        result_3137341358 = nimCopy(null, [[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], NTI1560281203);
        break BeforeRet;
        break;
      default: 
        result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3137340486);
        break BeforeRet;
        break;
      }
      }
      
      result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3137340486);
      break BeforeRet;
      break;
    default: 
      if ((sym_3137341357.kind == 0)) {
        var Temporary2 = sym_3137341357;
        if (ConstSet139[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      if ((Temporary2.node.kind == 4)) {
      result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114,46,99,111,110,115,116,97,110,116], [118,97,114,105,97,98,108,101]], NTI3137340486);
      break BeforeRet;
      }
      else {
        var Temporary4 = sym_3137341357;
        if (ConstSet140[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
        if ((Temporary4.node.kind == 6)) Temporary3 = true; else {          var Temporary5 = sym_3137341357;
          if (ConstSet141[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
          Temporary3 = (Temporary5.node.kind == 5);        }      if (Temporary3) {
        var Temporary6 = sym_3137341357;
        if (ConstSet142[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007753)); }
      if ((Temporary6.node.parent.kind == 12)) {
      result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,112,97,114,97,109,101,116,101,114], [118,97,114,105,97,98,108,101]], NTI3137340486);
      break BeforeRet;
      }
      else {
        result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101]], NTI1560281203);
        break BeforeRet;
      }
      
      }
      else {
        result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3137340486);
        break BeforeRet;
      }
      }
      }
      
      break;
    }
    result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3137340486);
    break BeforeRet;
  };

  return result_3137341358;

}

function some_3137341475(val_3137341477) {
  var result_3137341478 = ({val: {}, has: false});

    result_3137341478.has = true;
    result_3137341478.val = nimCopy(result_3137341478.val, val_3137341477, NTI3087007783);

  return result_3137341478;

}

function getStyleForSymbol_3137341424(ctx_3137341425, sym_3137341426) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3137341428 = ({val: {}, has: false});

    var style_3137341429 = nimCopy(null, ConstSet143, NTI3137340550);
    if ((sym_3137341426.kind == 0)) {
      var Temporary1 = sym_3137341426;
      if (ConstSet144[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    if ((Temporary1.node.kind == 6)) {
    style_3137341429 = nimCopy(style_3137341429, SetPlus(style_3137341429, ConstSet145), NTI3137340550);
    }
    
      var Temporary2 = sym_3137341426;
      if (ConstSet146[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    if ((Temporary2.node.kind == 4)) {
    var typ_3137341448 = computeSymbolType_3019928398(ctx_3137341425, sym_3137341426, false);
    if (!((typ_3137341448.kind == 4))) {
    style_3137341429 = nimCopy(style_3137341429, SetPlus(style_3137341429, ConstSet147), NTI3137340550);
    }
    
    }
    
    }
    else {
    if ((sym_3137341426.kind == 1)) {
      var Temporary3 = sym_3137341426;
      if (ConstSet148[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    if ((Temporary3.operatorNotation == 0)) {
    style_3137341429[1] = true;
    }
    
    }
    }
    if (!(SetEq(style_3137341429, ConstSet149))) {
    result_3137341428 = nimCopy(result_3137341428, some_3137341475(style_3137341429), NTI3087007788);
    }
    

  return result_3137341428;

}

function len_3087007980(node_3087007981) {
  var result_3087007982 = 0;

  BeforeRet: {
    result_3087007982 = (node_3087007981.children).length;
    break BeforeRet;
  };

  return result_3087007982;

}

function addLine_3087009929(node_3087009930, node_3087009930_Idx, child_3087009931, child_3087009931_Idx) {
    node_3087009930[node_3087009930_Idx].children.push(child_3087009931[child_3087009931_Idx]);;
    child_3087009931[child_3087009931_Idx].depth = addInt(node_3087009930[node_3087009930_Idx].depth, 1);
    child_3087009931[child_3087009931_Idx].parent = node_3087009930[node_3087009930_Idx];
    child_3087009931[child_3087009931_Idx].bounds.y = node_3087009930[node_3087009930_Idx].bounds.h;
    node_3087009930[node_3087009930_Idx].bounds = nimCopy(node_3087009930[node_3087009930_Idx].bounds, or_2147483728(node_3087009930[node_3087009930_Idx].bounds, HEX2B_2130706587(child_3087009931[child_3087009931_Idx].bounds, xy_2147483680(node_3087009930[node_3087009930_Idx].bounds))), NTI2147483653);

  
}

function rect_2147483666(x_2147483667, y_2147483668, w_2147483669, h_2147483670) {
  var result_2147483671 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483671.x = x_2147483667;
    result_2147483671.y = y_2147483668;
    result_2147483671.w = w_2147483669;
    result_2147483671.h = h_2147483670;

  return result_2147483671;

}

function getPrecedenceForNode_3137339406(ctx_3137339407, node_3137339408) {
      var Temporary1;
      var Temporary2;

  var result_3137339409 = 0;

  BeforeRet: {
    if ((!((node_3137339408.kind == 8)) || (len_3003121752(node_3137339408) == 0))) {
    result_3137339409 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym1_3137339416 = computeSymbol_3019919344(ctx_3137339407, HEX5BHEX5D_3003121748(node_3137339408, 0), false);
      if (!isSome_3087009356(oHEX60gensym1_3137339416)) Temporary1 = false; else {        var symbol_3137339439 = get_3087009376(oHEX60gensym1_3137339416);
        Temporary1 = true;      }    if (Temporary1) {
    switch (symbol_3137339439.kind) {
    case 1:
      var Temporary2 = symbol_3137339439;
      if (ConstSet152[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      result_3137339409 = Temporary2.precedence;
      break BeforeRet;
      break;
    case 0:
      break;
    }
    }
    
    result_3137339409 = 0;
    break BeforeRet;
  };

  return result_3137339409;

}

function some_3137339691(val_3137339693) {
  var result_3137339694 = ({val: [], has: false});

    result_3137339694.has = true;
    result_3137339694.val = nimCopy(null, val_3137339693, NTI3137339604);

  return result_3137339694;

}

function newBlockNode_3137339677(colors_3137339678, size_3137339679, node_3137339680, styleOverride_3137339689) {
  var result_3137339690 = null;

    result_3137339690 = {id: newId_2046820597(), node: node_3137339680, styleOverride: nimCopy(null, styleOverride_3137339689, NTI3087007788), background: some_3137339691(colors_3137339678), mhash: 0, parent: null, orientation: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], depth: 0, widgetTemplate: null, cloneWidget: false};
    whHEX3D_2147483689(result_3137339690.bounds, size_3137339679);

  return result_3137339690;

}

function HEX2BHEX3D_2147483761(x_2147483763, x_2147483763_Idx, y_2147483764) {
    x_2147483763[x_2147483763_Idx] = (x_2147483763[x_2147483763_Idx] + y_2147483764);

  
}

function formatValue_3137342818(result_3137342820, result_3137342820_Idx, value_3137342821, specifier_3137342822) {
    formatValue_721420459(result_3137342820, result_3137342820_Idx, reprEnum(value_3137342821, NTI3003121667), specifier_3137342822);

  
}

function createLayoutLineForRemainingChildren_3137341493(ctx_3137341494, input_3137341495, node_3137341496, firstChildIndex_3137341497, result_3137341498, result_3137341498_Idx, line_3137341499, line_3137341499_Idx) {
  BeforeRet: {
    if ((len_3003121752(node_3137341496) <= firstChildIndex_3137341497)) {
    break BeforeRet;
    }
    
    var _ = add_3087009897(line_3137341499, line_3137341499_Idx, newTextNode_3137339649([60], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341495.measureText, null, none_3137339658()));
    Label1: {
      var i_3137341508 = 0;
      var colontmp__2969567653 = 0;
      colontmp__2969567653 = len_3003121752(node_3137341496);
      var i_2969567654 = firstChildIndex_3137341497;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567654 < colontmp__2969567653)) break Label3;
            i_3137341508 = i_2969567654;
            if ((firstChildIndex_3137341497 < i_3137341508)) {
            var _ = add_3087009897(line_3137341499, line_3137341499_Idx, newTextNode_3137339649([44,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341495.measureText, null, none_3137339658()));
            }
            
            createLayoutLineForNode_3137341487(ctx_3137341494, input_3137341495, HEX5BHEX5D_3003121748(node_3137341496, i_3137341508), result_3137341498, result_3137341498_Idx, line_3137341499, line_3137341499_Idx);
            i_2969567654 = addInt(i_2969567654, 1);
          }
      };
    };
    var _ = add_3087009897(line_3137341499, line_3137341499_Idx, newTextNode_3137339649([62], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341495.measureText, null, none_3137339658()));
  };

  
}

function createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx) {
        var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;

  BeforeRet: {
    var renderInline_3137341532 = (((ConstSet136[node_3137341490.kind] != undefined) && (ConstSet137[node_3137341490.parent.kind] != undefined)) && input_3137341489.inlineBlocks);
    var prevLine_3137341533 = line_3137341492[line_3137341492_Idx];
    var first_3137341537 = (prevLine_3137341533.children).length;
    try {
    var oldLineHEX60gensym42_3137341592 = [line_3137341492[line_3137341492_Idx]];
    var containerLineHEX60gensym42_3137341593 = [{id: newId_2046820597(), node: node_3137341490, parent: line_3137341492[line_3137341492_Idx], orientation: 1, depth: addInt(line_3137341492[line_3137341492_Idx].depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false}];
    if (renderInline_3137341532) {
    line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: containerLineHEX60gensym42_3137341593[0], orientation: 0, depth: addInt(containerLineHEX60gensym42_3137341593[0].depth, 1), mhash: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
    }
    
    try {
    var _ = computeType_3019913434(ctx_3137341488, node_3137341490, false);
    var lastUsedChild_3137341640 = -1;
    try {
    Label4: {
      var expr_3137341641 = node_3137341490;
      var pos_3137341642 = 0;
      var _ = pos_3137341642;
      if ((expr_3137341641.kind == 0)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
      var bounds_3137341649 = input_3137341489.measureText([32]);
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, {id: newId_2046820597(), colors: [nimCopy(null, config_3137339605[0].colors.empty, NTI33554449)], node: node_3137341490, bounds: rect_2147483672(vec2_2164261686(), bounds_3137341649), mhash: 0, parent: null, orientation: 0, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false}));
      }
      
      }
      else {
      if ((expr_3137341641.kind == 2)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(node_3137341490.text, [99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99], config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490)));
      }
      
      }
      else {
      if ((expr_3137341641.kind == 3)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(node_3137341490.text, [115,116,114,105,110,103], config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490));
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      }
      else {
      if ((expr_3137341641.kind == 1)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym61_3137341768 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym61_3137341768)) Temporary5 = false; else {          var sym_3137341791 = get_3087009376(oHEX60gensym61_3137341768);
          Temporary5 = true;        }      if (Temporary5) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(sym_3137341791.name, getColorForSymbol_3137341355(ctx_3137341488, sym_3137341791), config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, getStyleForSymbol_3137341424(ctx_3137341488, sym_3137341791))));
      }
      else {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_2046820617(node_3137341490.reff), [118,97,114,105,97,98,108,101], config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490)));
      }
      
      }
      
      }
      else {
      if ((expr_3137341641.kind == 4)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym63_3137341890 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym63_3137341890)) Temporary7 = false; else {          var sym_3137341913 = get_3087009376(oHEX60gensym63_3137341890);
          Temporary7 = true;        }      if (Temporary7) {
      Temporary6 = getColorForSymbol_3137341355(ctx_3137341488, sym_3137341913);
      }
      else {
      Temporary6 = [[101,110,116,105,116,121,46,110,97,109,101,46,99,111,110,115,116,97,110,116]];
      }
      
      var color_3137341918 = nimCopy(null, Temporary6, NTI3137340452);
        var oHEX60gensym64_3137341921 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym64_3137341921)) Temporary8 = false; else {          var sym_3137341944 = get_3087009376(oHEX60gensym64_3137341921);
          Temporary8 = true;        }      if (Temporary8) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(sym_3137341944.name, color_3137341918, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, getStyleForSymbol_3137341424(ctx_3137341488, sym_3137341944)));
      }
      else {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(HEX24_2046820617(node_3137341490.id), color_3137341918, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, none_3137339658()));
      }
      
      }
      
      var typ_3137341945 = computeType_3019913434(ctx_3137341488, node_3137341490, false);
      if ((typ_3137341945.kind == 4)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      }
      else {
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008191(typ_3137341945), config_3137339605[0].colors.typ, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      }
      
      if ((0 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      var value_3137341962 = computeValue_3019916562(ctx_3137341488, node_3137341490, false);
      switch (value_3137341962.kind) {
      case 5:
      case 4:
      case 1:
        break;
      default: 
        switch (HEX5BHEX5D_3003121748(node_3137341490, 0).kind) {
        case 3:
        case 2:
          break;
        default: 
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008498(value_3137341962), [115,116,114,105,110,103], config_3137339605[0].fontRegular, input_3137341489.measureText, null));
          break;
        }
        break;
      }
      }
      
      lastUsedChild_3137341640 = 0;
      }
      else {
      if ((expr_3137341641.kind == 5)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym67_3137341973 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym67_3137341973)) Temporary10 = false; else {          var sym_3137341996 = get_3087009376(oHEX60gensym67_3137341973);
          Temporary10 = true;        }      if (Temporary10) {
      Temporary9 = {Field0: getColorForSymbol_3137341355(ctx_3137341488, sym_3137341996), Field1: getStyleForSymbol_3137341424(ctx_3137341488, sym_3137341996)};
      }
      else {
      Temporary9 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3137339658()};
      }
      
      var colontmp__2969567650 = nimCopy(null, Temporary9, NTI3137340922);
      var color_3137342008 = nimCopy(null, colontmp__2969567650["Field0"], NTI3137340452);
      var style_3137342009 = nimCopy(null, colontmp__2969567650["Field1"], NTI3087007788);
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(node_3137341490.text, color_3137342008, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, style_3137342009));
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      if ((((HEX5BHEX5D_3003121748(node_3137341490, 0).kind == 0) && ((HEX5BHEX5D_3003121748(node_3137341490, 0).text).length == 0)) && !(contains_3137339757(input_3137341489.replacements, HEX5BHEX5D_3003121748(node_3137341490, 0).id)))) {
      var typ_3137342065 = computeType_3019913434(ctx_3137341488, node_3137341490, false);
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008191(typ_3137342065), config_3137339605[0].colors.typ, config_3137339605[0].fontRegular, input_3137341489.measureText, HEX5BHEX5D_3003121748(node_3137341490, 0))));
      }
      else {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      }
      
      if ((1 < len_3003121752(node_3137341490))) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 6)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym71_3137342122 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym71_3137342122)) Temporary12 = false; else {          var sym_3137342145 = get_3087009376(oHEX60gensym71_3137342122);
          Temporary12 = true;        }      if (Temporary12) {
      Temporary11 = {Field0: getColorForSymbol_3137341355(ctx_3137341488, sym_3137342145), Field1: getStyleForSymbol_3137341424(ctx_3137341488, sym_3137342145)};
      }
      else {
      Temporary11 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3137339658()};
      }
      
      var colontmp__2969567651 = nimCopy(null, Temporary11, NTI3137341025);
      var color_3137342157 = nimCopy(null, colontmp__2969567651["Field0"], NTI3137340452);
      var style_3137342158 = nimCopy(null, colontmp__2969567651["Field1"], NTI3087007788);
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(node_3137341490.text, color_3137342157, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, style_3137342158));
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32,109,117,116,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      if ((((HEX5BHEX5D_3003121748(node_3137341490, 0).kind == 0) && ((HEX5BHEX5D_3003121748(node_3137341490, 0).text).length == 0)) && !(contains_3137339757(input_3137341489.replacements, HEX5BHEX5D_3003121748(node_3137341490, 0).id)))) {
      var typ_3137342214 = computeType_3019913434(ctx_3137341488, node_3137341490, false);
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008191(typ_3137342214), config_3137339605[0].colors.typ, config_3137339605[0].fontRegular, input_3137341489.measureText, HEX5BHEX5D_3003121748(node_3137341490, 0))));
      }
      else {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      }
      
      if ((1 < len_3003121752(node_3137341490))) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 11)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([102,110], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([40], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      var parent_3137342269 = line_3137341492[line_3137341492_Idx];
      var first_3137342270 = len_3087007980(parent_3137342269);
      Label13: {
        var i_3137342294 = 0;
        var param_3137342295 = null;
        var colontmp__2969567619 = [];
        colontmp__2969567619 = HEX5BHEX5D_3003121748(node_3137341490, 0).children;
        var i_2969567621 = 0;
        var L_2969567622 = (colontmp__2969567619).length;
        Label14: {
            Label15: while (true) {
            if (!(i_2969567621 < L_2969567622)) break Label15;
              i_3137342294 = i_2969567621;
              param_3137342295 = colontmp__2969567619[chckIndx(i_2969567621, 0, (colontmp__2969567619).length - 1)];
              if ((0 < i_3137342294)) {
              var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([44,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
              }
              
              createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, param_3137342295, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
              i_2969567621 = addInt(i_2969567621, 1);
              if (!(((colontmp__2969567619).length == L_2969567622))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((len_3003121752(HEX5BHEX5D_3003121748(node_3137341490, 0)) == 0)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([32], config_3137339605[0].colors.empty, config_3137339605[0].fontRegular, input_3137341489.measureText, HEX5BHEX5D_3003121748(node_3137341490, 0))));
      }
      else {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, {parent: parent_3137342269, first: first_3137342270, last: len_3087007980(parent_3137342269)});
      }
      
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([41,32], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((1 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((2 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 2), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 2;
      }
      else {
      if ((expr_3137341641.kind == 9)) {
      var parent_3137342400 = [line_3137341492[line_3137341492_Idx].parent];
      var prevIndent_3137342401 = line_3137341492[line_3137341492_Idx].indent;
      var first_3137342405 = (parent_3137342400[0].children).length;
      try {
      var i_3137342458 = 0;
      Label17: {
          Label18: while (true) {
          if (!(addInt(i_3137342458, 1) < len_3003121752(node_3137341490))) break Label18;
            try {
            if ((i_3137342458 == 0)) {
            var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([105,102,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
            }
            else {
              addLine_3087009929(parent_3137342400, 0, line_3137341492, line_3137341492_Idx);
              line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342400[0], bounds: rect_2147483666((prevIndent_3137342401 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342401, depth: addInt(parent_3137342400[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
              var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([101,108,105,102,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
            }
            
            createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, i_3137342458), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
            var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
            createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, addInt(i_3137342458, 1)), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
            } finally {
            i_3137342458 = addInt(i_3137342458, 2);
            }
          }
      };
      if ((modInt(len_3003121752(node_3137341490), 2) == 1)) {
      addLine_3087009929(parent_3137342400, 0, line_3137341492, line_3137341492_Idx);
      line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342400[0], bounds: rect_2147483666((prevIndent_3137342401 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342401, depth: addInt(parent_3137342400[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([101,108,115,101,58,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, last_3003121922(node_3137341490), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      addLine_3087009929(parent_3137342400, 0, line_3137341492, line_3137341492_Idx);
      line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342400[0], bounds: rect_2147483666((prevIndent_3137342401 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342401, depth: addInt(parent_3137342400[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
      lastUsedChild_3137341640 = subInt(len_3003121752(node_3137341490), 1);
      } finally {
      if ((first_3137342405 < (parent_3137342400[0].children).length)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: parent_3137342400[0], first: first_3137342405, last: (parent_3137342400[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3137341641.kind == 10)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([119,104,105,108,101,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
      if ((1 <= len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((2 <= len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 7)) {
      var parent_3137342479 = [line_3137341492[line_3137341492_Idx].parent];
      var first_3137342483 = addInt((parent_3137342479[0].children).length, 1);
      try {
      var prevIndent_3137342536 = line_3137341492[line_3137341492_Idx].indent;
      Label21: {
        var child_3137342540 = null;
        var i_2969567626 = 0;
        var L_2969567627 = (node_3137341490.children).length;
        Label22: {
            Label23: while (true) {
            if (!(i_2969567626 < L_2969567627)) break Label23;
              child_3137342540 = node_3137341490.children[chckIndx(i_2969567626, 0, (node_3137341490.children).length - 1)];
              addLine_3087009929(parent_3137342479, 0, line_3137341492, line_3137341492_Idx);
              line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342479[0], bounds: rect_2147483666((prevIndent_3137342536 * input_3137341489.indent), 0.0, input_3137341489.indent, 0.0), indent: addInt(prevIndent_3137342536, 1), node: child_3137342540, depth: addInt(parent_3137342479[0].depth, 1), mhash: 0, orientation: 0, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
              createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, child_3137342540, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
              i_2969567626 = addInt(i_2969567626, 1);
              if (!(((node_3137341490.children).length == L_2969567627))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      addLine_3087009929(parent_3137342479, 0, line_3137341492, line_3137341492_Idx);
      line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342479[0], bounds: rect_2147483666((prevIndent_3137342536 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342536, depth: addInt(parent_3137342479[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
      lastUsedChild_3137341640 = subInt(len_3003121752(node_3137341490), 1);
      } finally {
      if ((first_3137342483 < (parent_3137342479[0].children).length)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: parent_3137342479[0], first: first_3137342483, last: (parent_3137342479[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3137341641.kind == 13)) {
      if ((0 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 8)) {
      if ((len_3003121752(node_3137341490) == 0)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([60,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,99,97,108,108,62], config_3137339605[0].colors.empty, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490)));
      break BeforeRet;
      }
      
      var isDivision_3137342599 = false;
        var oHEX60gensym90_3137342602 = computeSymbol_3019919344(ctx_3137341488, HEX5BHEX5D_3003121748(node_3137341490, 0), false);
        if (!isSome_3087009356(oHEX60gensym90_3137342602)) Temporary26 = false; else {          var sym_3137342625 = get_3087009376(oHEX60gensym90_3137342602);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_3137342625.kind == 1);        }      if (Temporary25) {
      if (HEX3DHEX3D_2046820626(sym_3137342625.id, IdDiv_2986344454)) {
      isDivision_3137342599 = true;
      }
      
      var Temporary27 = sym_3137342625;
      if (ConstSet150[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      switch (Temporary27.operatorNotation) {
      case 3:
        Temporary28 = 2;
        break;
      case 1:
      case 2:
        Temporary28 = 1;
        break;
      default: 
        Temporary28 = -1;
        break;
      }
      var arity_3137342630 = Temporary28;
      if ((len_3003121752(node_3137341490) == addInt(arity_3137342630, 1))) {
      var Temporary30 = sym_3137342625;
      if (ConstSet151[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3087007753)); }
      Temporary29 = Temporary30.operatorNotation;
      }
      else {
      Temporary29 = 0;
      }
      
      Temporary24 = Temporary29;
      }
      else {
      Temporary24 = 0;
      }
      
      var operatorNotation_3137342631 = Temporary24;
      switch (operatorNotation_3137342631) {
      case 3:
        var parentPrecedence_3137342632 = getPrecedenceForNode_3137339406(ctx_3137341488, node_3137341490.parent);
        var precedence_3137342633 = getPrecedenceForNode_3137339406(ctx_3137341488, node_3137341490);
        var renderParens_3137342634 = (precedence_3137342633 < parentPrecedence_3137342632);
        if (((isDivision_3137342599 && input_3137341489.renderDivisionVertically) && input_3137341489.inlineBlocks)) {
        var oldLineHEX60gensym91_3137342637 = [line_3137341492[line_3137341492_Idx]];
        var containerLineHEX60gensym91_3137342638 = [{id: newId_2046820597(), node: node_3137341490, parent: line_3137341492[line_3137341492_Idx], orientation: 1, depth: addInt(line_3137341492[line_3137341492_Idx].depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false}];
        if (true) {
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: containerLineHEX60gensym91_3137342638[0], orientation: 0, depth: addInt(containerLineHEX60gensym91_3137342638[0].depth, 1), mhash: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        }
        
        try {
        var parent_3137342685 = [line_3137341492[line_3137341492_Idx].parent];
        var prevIndent_3137342686 = line_3137341492[line_3137341492_Idx].indent;
        var first_3137342690 = (parent_3137342685[0].children).length;
        try {
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        addLine_3087009929(parent_3137342685, 0, line_3137341492, line_3137341492_Idx);
        var line1_3137342743 = line_3137341492[line_3137341492_Idx];
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342685[0], bounds: rect_2147483666((prevIndent_3137342686 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342686, depth: addInt(parent_3137342685[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        var fontSize_3137342744 = input_3137341489.measureText([32]).y;
        var divLine_3137342749 = newBlockNode_3137339677([[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], vec2_2164261725(0.0, (fontSize_3137342744 * 0.1)), HEX5BHEX5D_3003121748(node_3137341490, 0), none_3137339658());
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, divLine_3137342749);
        HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, {parent: line_3137341492[line_3137341492_Idx], first: 0, last: 1});
        addLine_3087009929(parent_3137342685, 0, line_3137341492, line_3137341492_Idx);
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342685[0], bounds: rect_2147483666((prevIndent_3137342686 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342686, depth: addInt(parent_3137342685[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 2), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        addLine_3087009929(parent_3137342685, 0, line_3137341492, line_3137341492_Idx);
        var line2_3137342796 = line_3137341492[line_3137341492_Idx];
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342685[0], bounds: rect_2147483666((prevIndent_3137342686 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342686, depth: addInt(parent_3137342685[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        divLine_3137342749.bounds.w = max_33555642(line1_3137342743.bounds.w, line2_3137342796.bounds.w);
        divLine_3137342749.parent.bounds.w = divLine_3137342749.bounds.w;
        var shorterLine_3137342797 = line1_3137342743;
        var longerLine_3137342798 = line2_3137342796;
        if ((longerLine_3137342798.bounds.w < shorterLine_3137342797.bounds.w)) {
        shorterLine_3137342797 = line2_3137342796;
        longerLine_3137342798 = line1_3137342743;
        }
        
        var lengthDiff_3137342799 = (longerLine_3137342798.bounds.w - shorterLine_3137342797.bounds.w);
        HEX2BHEX3D_2147483761(shorterLine_3137342797.bounds, "x", (lengthDiff_3137342799 / 2.0));
        lastUsedChild_3137341640 = 2;
        } finally {
        if ((first_3137342690 < (parent_3137342685[0].children).length)) {
        HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: parent_3137342685[0], first: first_3137342690, last: (parent_3137342685[0].children).length});
        }
        
        }
        } finally {
        if (true) {
        addLine_3087009929(containerLineHEX60gensym91_3137342638, 0, line_3137341492, line_3137341492_Idx);
        HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(oldLineHEX60gensym91_3137342637, 0, containerLineHEX60gensym91_3137342638[0]));
        line_3137341492[line_3137341492_Idx] = oldLineHEX60gensym91_3137342637[0];
        }
        
        }
        }
        else {
          if (renderParens_3137342634) {
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([40], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
          }
          
          createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([32], config_3137339605[0].colors.separator, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
          createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([32], config_3137339605[0].colors.separator, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
          createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 2), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
          if (renderParens_3137342634) {
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([41], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
          }
          
          lastUsedChild_3137341640 = 2;
        }
        
        break;
      case 1:
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        lastUsedChild_3137341640 = 1;
        break;
      case 2:
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        lastUsedChild_3137341640 = 1;
        break;
      default: 
        if ((0 < len_3003121752(node_3137341490))) {
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        }
        
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([40], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
        Label33: {
          var i_3137342808 = 0;
          var colontmp__2969567630 = 0;
          colontmp__2969567630 = len_3003121752(node_3137341490);
          var i_2969567631 = 1;
          Label34: {
              Label35: while (true) {
              if (!(i_2969567631 < colontmp__2969567630)) break Label35;
                i_3137342808 = i_2969567631;
                if ((1 < i_3137342808)) {
                var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([44,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
                }
                
                createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, i_3137342808), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
                i_2969567631 = addInt(i_2969567631, 1);
              }
          };
        };
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([41], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
        lastUsedChild_3137341640 = subInt(len_3003121752(node_3137341490), 1);
        break;
      }
      }
      else {
        var fmtRes_3137342817 = [mnewString(0)];
        fmtRes_3137342817[0].push.apply(fmtRes_3137342817[0], [99,114,101,97,116,101,76,97,121,111,117,116,76,105,110,101,70,111,114,78,111,100,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3137342818(fmtRes_3137342817, 0, node_3137341490.kind, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137342817[0], NTI33554449)]);
      }
      }}}}}}}}}}}}
    };
    } finally {
    createLayoutLineForRemainingChildren_3137341493(ctx_3137341488, input_3137341489, node_3137341490, addInt(lastUsedChild_3137341640, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
    }
    } finally {
    if (renderInline_3137341532) {
    addLine_3087009929(containerLineHEX60gensym42_3137341593, 0, line_3137341492, line_3137341492_Idx);
    HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(oldLineHEX60gensym42_3137341592, 0, containerLineHEX60gensym42_3137341593[0]));
    line_3137341492[line_3137341492_Idx] = oldLineHEX60gensym42_3137341592[0];
    }
    
    }
    } finally {
    if ((first_3137341537 < (prevLine_3137341533.children).length)) {
    HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: prevLine_3137341533, first: first_3137341537, last: (prevLine_3137341533.children).length});
    }
    
    }
  };

  
}

function centerChildrenVertically_3137342848(vnode_3137342849) {
    var height_3137342850 = vnode_3137342849.bounds.h;
    Label1: {
      var child_3137342854 = null;
      var i_2969567657 = 0;
      var L_2969567658 = (vnode_3137342849.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567657 < L_2969567658)) break Label3;
            child_3137342854 = vnode_3137342849.children[chckIndx(i_2969567657, 0, (vnode_3137342849.children).length - 1)];
            if ((vnode_3137342849.orientation == 0)) {
            var heightDiff_3137342860 = (height_3137342850 - child_3137342854.bounds.h);
            HEX2BHEX3D_2147483761(child_3137342854.bounds, "y", (heightDiff_3137342860 * 0.5));
            }
            
            centerChildrenVertically_3137342848(child_3137342854);
            i_2969567657 = addInt(i_2969567657, 1);
            if (!(((vnode_3137342849.children).length == L_2969567658))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function computeNodeLayoutImpl2_3137342865(ctx_3137342866, input_3137342867) {
  var result_3137342868 = [null];

    var node_3137342869 = input_3137342867.node;
    result_3137342868[0] = {node: node_3137342869, root: {id: newId_2046820597(), orientation: 1, mhash: 0, parent: null, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false}, nodeToVisualNode: initTable_3137342870(32)};
    var line_3137342881 = [{id: newId_2046820597(), node: node_3137342869, parent: result_3137342868[0].root, orientation: 0, depth: addInt(result_3137342868[0].root.depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false}];
    createLayoutLineForNode_3137341487(ctx_3137342866, input_3137342867, node_3137342869, result_3137342868, 0, line_3137342881, 0);
    addLine_3087009929(line_3137342881[0], "parent", line_3137342881, 0);
    centerChildrenVertically_3137342848(result_3137342868[0].root);

  return result_3137342868[0];

}

function computeNodeLayoutImpl_3019899486(ctx_3019899487, nodeLayoutInput_3019899488) {
  var result_3019937312 = null;

  BeforeRet: {
    dependOnCurrentRevision_3019906168(ctx_3019899487);
    var _ = computeValidation_3019925643(ctx_3019899487, nodeLayoutInput_3019899488.node, true);
    result_3019937312 = computeNodeLayoutImpl2_3137342865(ctx_3019899487, nodeLayoutInput_3019899488);
    break BeforeRet;
  };

  return result_3019937312;

}

function mapKeyJs_3019902675(key_3019902677) {
  var result_3019902678 = null;

    let temp = key_3019902677;
    let newId = getIdNodeLayoutInputJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019902678;

}

function HEX5BHEX5DHEX3D_3019902663(t_3019902666, key_3019902667, val_3019902668) {
    t_3019902666.set(mapKeyJs_3019902675(key_3019902667), val_3019902668);

  
}

function init_3019902786(result_3019902789, result_3019902789_Idx, capacity_3019902790) {
    result_3019902789[result_3019902789_Idx] = (new Map());

  
}

function mustRehash_3019903484(t_3019903486) {
  var result_3019903487 = false;

    if (!((t_3019903486.counter < (t_3019903486.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019903487 = ((mulInt((t_3019903486.data).length, 2) < mulInt(t_3019903486.counter, 3)) || (subInt((t_3019903486.data).length, t_3019903486.counter) < 4));

  return result_3019903487;

}

function rawInsert_3019904177(t_3019904181, data_3019904182, data_3019904182_Idx, key_3019904183, val_3019904184, hc_3019904185, h_3019904186) {
    data_3019904182[data_3019904182_Idx][chckIndx(h_3019904186, 0, (data_3019904182[data_3019904182_Idx]).length - 1)].Field1 = key_3019904183;
    data_3019904182[data_3019904182_Idx][chckIndx(h_3019904186, 0, (data_3019904182[data_3019904182_Idx]).length - 1)].Field2 = val_3019904184;
    data_3019904182[data_3019904182_Idx][chckIndx(h_3019904186, 0, (data_3019904182[data_3019904182_Idx]).length - 1)].Field0 = hc_3019904185;

  
}

function enlarge_3019903741(t_3019903744) {
    var n_3019903747 = [];
    n_3019903747 = new Array(chckRange(mulInt((t_3019903744.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019903744.data).length, 2), 0, 2147483647) ; ++i) { n_3019903747[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3019903744.data; t_3019903744.data = n_3019903747; n_3019903747 = Temporary1;    Label2: {
      var i_3019903845 = 0;
      var colontmp__2969567662 = 0;
      colontmp__2969567662 = (n_3019903747).length - 1;
      var res_2969567663 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567663 <= colontmp__2969567662)) break Label4;
            i_3019903845 = res_2969567663;
            var eh_3019903926 = n_3019903747[chckIndx(i_3019903845, 0, (n_3019903747).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019903926)) {
            var j_3019903930 = (eh_3019903926 & (t_3019903744.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019903744.data[chckIndx(j_3019903930, 0, (t_3019903744.data).length - 1)].Field0)) break Label6;
                  j_3019903930 = nextTry_1308622883(j_3019903930, (t_3019903744.data).length - 1);
                }
            };
            rawInsert_3019904177(t_3019903744, t_3019903744, "data", n_3019903747[chckIndx(i_3019903845, 0, (n_3019903747).length - 1)].Field1, n_3019903747[chckIndx(i_3019903845, 0, (n_3019903747).length - 1)].Field2, eh_3019903926, j_3019903930);
            }
            
            res_2969567663 = addInt(res_2969567663, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019904436(t_3019904439, key_3019904440, hc_3019904441) {
  var result_3019904442 = 0;

  BeforeRet: {
    if (((t_3019904439.data).length == 0)) {
    result_3019904442 = -1;
    break BeforeRet;
    }
    
    var h_3019904527 = (hc_3019904441 & (t_3019904439.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019904439.data[chckIndx(h_3019904527, 0, (t_3019904439.data).length - 1)].Field0)) break Label2;
          if (((t_3019904439.data[chckIndx(h_3019904527, 0, (t_3019904439.data).length - 1)].Field0 == hc_3019904441) && (t_3019904439.data[chckIndx(h_3019904527, 0, (t_3019904439.data).length - 1)].Field1 == key_3019904440))) {
          result_3019904442 = h_3019904527;
          break BeforeRet;
          }
          
          h_3019904527 = nextTry_1308622883(h_3019904527, (t_3019904439.data).length - 1);
        }
    };
    result_3019904442 = subInt(-1, h_3019904527);
  };

  return result_3019904442;

}

function HEX5BHEX5DHEX3D_3019902865(t_3019902868, key_3019902869, val_3019902870) {
    if (((t_3019902868.data).length == 0)) {
    var correctSizeHEX60gensym141_3019902954 = slotsNeeded_1308622891(32);
    t_3019902868.counter = 0;
    t_3019902868.data = new Array(chckRange(correctSizeHEX60gensym141_3019902954, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym141_3019902954, 0, 2147483647) ; ++i) { t_3019902868.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3019902959 = [0];
    var index_3019903316 = rawGet_3019902960(t_3019902868, key_3019902869, hc_3019902959, 0);
    if ((0 <= index_3019903316)) {
    t_3019902868.data[chckIndx(index_3019903316, 0, (t_3019902868.data).length - 1)].Field2 = val_3019902870;
    }
    else {
      if (((t_3019902868.data).length == 0)) {
      var correctSizeHEX60gensym146_3019903479 = slotsNeeded_1308622891(32);
      t_3019902868.counter = 0;
      t_3019902868.data = new Array(chckRange(correctSizeHEX60gensym146_3019903479, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym146_3019903479, 0, 2147483647) ; ++i) { t_3019902868.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3019903484(t_3019902868)) {
      enlarge_3019903741(t_3019902868);
      index_3019903316 = rawGetKnownHC_3019904436(t_3019902868, key_3019902869, hc_3019902959[0]);
      }
      
      index_3019903316 = subInt(-1, index_3019903316);
      rawInsert_3019904177(t_3019902868, t_3019902868, "data", key_3019902869, val_3019902870, hc_3019902959[0], index_3019903316);
      t_3019902868.counter = addInt(t_3019902868.counter, 1);
    }
    

  
}

function formatValue_3019937337(result_3019937339, result_3019937339_Idx, value_3019937340, specifier_3019937341) {
    formatValue_721420459(result_3019937339, result_3019937339_Idx, HEX24_3019911804(value_3019937340), specifier_3019937341);

  
}

function getAstNode_3019906180(ctxHEX60gensym79_3019906181, idHEX60gensym79_3019906182) {
  var result_3019906184 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym79_3019906185 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym79_3019906182, NTI2046820355), Field1: 0}, NTI3036676201);
    if (contains_3019899577(ctxHEX60gensym79_3019906181.itemsAstNode, itemHEX60gensym79_3019906185)) {
    result_3019906184 = nimCopy(result_3019906184, some_3003121890(HEX5BHEX5D_3019899687(ctxHEX60gensym79_3019906181.itemsAstNode, itemHEX60gensym79_3019906185)), NTI3003121783);
    break BeforeRet;
    }
    
    result_3019906184 = nimCopy(result_3019906184, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_3019906184;

}

function recoverValue_3019899447(ctx_3019899448, key_3019899449) {
      var Temporary1;

    var fmtRes_3019937336 = [mnewString(0)];
    fmtRes_3019937336[0].push.apply(fmtRes_3019937336[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,118,97,108,117,101,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937336, 0, key_3019899449, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937336[0], NTI33554449)]);
      var oHEX60gensym321_3019937347 = getAstNode_3019906180(ctx_3019899448, key_3019899449.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym321_3019937347)) Temporary1 = false; else {        var node_3019937393 = get_3003123566(oHEX60gensym321_3019937347);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900124(ctx_3019899448.queryCacheValue, node_3019937393, errorValue_3087008442());
    }
    

  
}

function recoverType_3019899450(ctx_3019899451, key_3019899452) {
      var Temporary1;

    var fmtRes_3019937470 = [mnewString(0)];
    fmtRes_3019937470[0].push.apply(fmtRes_3019937470[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,116,121,112,101,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937470, 0, key_3019899452, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937470[0], NTI33554449)]);
      var oHEX60gensym323_3019937478 = getAstNode_3019906180(ctx_3019899451, key_3019899452.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym323_3019937478)) Temporary1 = false; else {        var node_3019937524 = get_3003123566(oHEX60gensym323_3019937478);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019899766(ctx_3019899451.queryCacheType, node_3019937524, errorType_3087008131());
    }
    

  
}

function recoverSymbol_3019899453(ctx_3019899454, key_3019899455) {
      var Temporary1;

    var fmtRes_3019937601 = [mnewString(0)];
    fmtRes_3019937601[0].push.apply(fmtRes_3019937601[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937601, 0, key_3019899455, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937601[0], NTI33554449)]);
      var oHEX60gensym325_3019937609 = getAstNode_3019906180(ctx_3019899454, key_3019899455.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym325_3019937609)) Temporary1 = false; else {        var node_3019937655 = get_3003123566(oHEX60gensym325_3019937609);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900472(ctx_3019899454.queryCacheSymbol, node_3019937655, none_3019907133());
    }
    

  
}

function recoverSymbols_3019899456(ctx_3019899457, key_3019899458) {
      var Temporary1;

    var fmtRes_3019937734 = [mnewString(0)];
    fmtRes_3019937734[0].push.apply(fmtRes_3019937734[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,115,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937734, 0, key_3019899458, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937734[0], NTI33554449)]);
      var oHEX60gensym327_3019937742 = getAstNode_3019906180(ctx_3019899457, key_3019899458.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym327_3019937742)) Temporary1 = false; else {        var node_3019937788 = get_3003123566(oHEX60gensym327_3019937742);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900821(ctx_3019899457.queryCacheSymbols, node_3019937788, newTable_3019937829(32));
    }
    

  
}

function init_3019905028(result_3019905031, result_3019905031_Idx, capacity_3019905032) {
    result_3019905031[result_3019905031_Idx] = (new Map());

  
}

function init_3019905048(result_3019905051, result_3019905051_Idx, capacity_3019905052) {
    result_3019905051[result_3019905051_Idx] = (new Map());

  
}

function init_3019905068(result_3019905071, result_3019905071_Idx, capacity_3019905072) {
    result_3019905071[result_3019905071_Idx] = (new Map());

  
}

function init_3019905088(result_3019905091, result_3019905091_Idx, capacity_3019905092) {
    result_3019905091[result_3019905091_Idx] = (new Map());

  
}

function initTable_3019905108(initialSize_3019905111) {
  var result_3019905112 = ({data: [], counter: 0});

    var correctSizeHEX60gensym156_3019905114 = slotsNeeded_1308622891(chckRange(initialSize_3019905111, 0, 2147483647));
    result_3019905112.counter = 0;
    result_3019905112.data = new Array(chckRange(correctSizeHEX60gensym156_3019905114, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym156_3019905114, 0, 2147483647) ; ++i) { result_3019905112.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }
  return result_3019905112;

}

function initTable_3019905128(initialSize_3019905131) {
  var result_3019905132 = ({data: [], counter: 0});

    var correctSizeHEX60gensym158_3019905134 = slotsNeeded_1308622891(chckRange(initialSize_3019905131, 0, 2147483647));
    result_3019905132.counter = 0;
    result_3019905132.data = new Array(chckRange(correctSizeHEX60gensym158_3019905134, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym158_3019905134, 0, 2147483647) ; ++i) { result_3019905132.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }
  return result_3019905132;

}

function newContext_3019899489() {
    
function HEX3Aanonymous_3019899498(itemHEX60gensym30_3019899499) {
      var result_3019899500 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym30_3019899499))) {
        raiseException({message: ([117,112,100,97,116,101,84,121,112,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym30_3019899499) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsType.forcedCalls = addInt(ctx_3019899065.statsType.forcedCalls, 1);
        var argHEX60gensym30_3019899701 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym30_3019899499);
        var valueHEX60gensym30_3019899702 = computeTypeImpl_3019899459(ctx_3019899065, argHEX60gensym30_3019899701);
        HEX5BHEX5DHEX3D_3019899766(ctx_3019899065.queryCacheType, argHEX60gensym30_3019899701, valueHEX60gensym30_3019899702);
        result_3019899500 = nimCopy(null, fingerprint_3087008357(valueHEX60gensym30_3019899702), NTI3036676200);
        break BeforeRet;
      };

      return result_3019899500;

    }
    
function HEX3Aanonymous_3019899885(itemHEX60gensym31_3019899886) {
      var result_3019899887 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym31_3019899886))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,117,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym31_3019899886) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsValue.forcedCalls = addInt(ctx_3019899065.statsValue.forcedCalls, 1);
        var argHEX60gensym31_3019900059 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym31_3019899886);
        var valueHEX60gensym31_3019900060 = computeValueImpl_3019899462(ctx_3019899065, argHEX60gensym31_3019900059);
        HEX5BHEX5DHEX3D_3019900124(ctx_3019899065.queryCacheValue, argHEX60gensym31_3019900059, valueHEX60gensym31_3019900060);
        result_3019899887 = nimCopy(null, fingerprint_3087008538(valueHEX60gensym31_3019900060), NTI3036676200);
        break BeforeRet;
      };

      return result_3019899887;

    }
    
function HEX3Aanonymous_3019900232(itemHEX60gensym32_3019900233) {
      var result_3019900234 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym32_3019900233))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3036676336(itemHEX60gensym32_3019900233) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbol.forcedCalls = addInt(ctx_3019899065.statsSymbol.forcedCalls, 1);
        var argHEX60gensym32_3019900406 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym32_3019900233);
        var valueHEX60gensym32_3019900408 = computeSymbolImpl_3019899465(ctx_3019899065, argHEX60gensym32_3019900406);
        HEX5BHEX5DHEX3D_3019900472(ctx_3019899065.queryCacheSymbol, argHEX60gensym32_3019900406, valueHEX60gensym32_3019900408);
        result_3019900234 = nimCopy(null, fingerprint_3087009342(valueHEX60gensym32_3019900408), NTI3036676200);
        break BeforeRet;
      };

      return result_3019900234;

    }
    
function HEX3Aanonymous_3019900580(itemHEX60gensym33_3019900581) {
      var result_3019900582 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym33_3019900581))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3036676336(itemHEX60gensym33_3019900581) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbols.forcedCalls = addInt(ctx_3019899065.statsSymbols.forcedCalls, 1);
        var argHEX60gensym33_3019900754 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym33_3019900581);
        var valueHEX60gensym33_3019900757 = computeSymbolsImpl_3019899469(ctx_3019899065, argHEX60gensym33_3019900754);
        HEX5BHEX5DHEX3D_3019900821(ctx_3019899065.queryCacheSymbols, argHEX60gensym33_3019900754, valueHEX60gensym33_3019900757);
        result_3019900582 = nimCopy(null, fingerprint_3087009003(valueHEX60gensym33_3019900757), NTI3036676200);
        break BeforeRet;
      };

      return result_3019900582;

    }
    
function HEX3Aanonymous_3019900929(itemHEX60gensym34_3019900930) {
      var result_3019900931 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym34_3019900930))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3036676336(itemHEX60gensym34_3019900930) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsValidation.forcedCalls = addInt(ctx_3019899065.statsValidation.forcedCalls, 1);
        var argHEX60gensym34_3019901103 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym34_3019900930);
        var valueHEX60gensym34_3019901104 = computeValidationImpl_3019899474(ctx_3019899065, argHEX60gensym34_3019901103);
        HEX5BHEX5DHEX3D_3019901168(ctx_3019899065.queryCacheValidation, argHEX60gensym34_3019901103, valueHEX60gensym34_3019901104);
        result_3019900931 = nimCopy(null, fingerprint_3087010815(valueHEX60gensym34_3019901104), NTI3036676200);
        break BeforeRet;
      };

      return result_3019900931;

    }
    
function HEX3Aanonymous_3019901285(itemHEX60gensym35_3019901286) {
      var result_3019901287 = [];

      BeforeRet: {
        if (!(contains_3019901364(ctx_3019899065.itemsSymbol, itemHEX60gensym35_3019901286))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym35_3019901286) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbolType.forcedCalls = addInt(ctx_3019899065.statsSymbolType.forcedCalls, 1);
        var argHEX60gensym35_3019901477 = HEX5BHEX5D_3019901463(ctx_3019899065.itemsSymbol, itemHEX60gensym35_3019901286);
        var valueHEX60gensym35_3019901478 = computeSymbolTypeImpl_3019899477(ctx_3019899065, argHEX60gensym35_3019901477);
        HEX5BHEX5DHEX3D_3019901542(ctx_3019899065.queryCacheSymbolType, argHEX60gensym35_3019901477, valueHEX60gensym35_3019901478);
        result_3019901287 = nimCopy(null, fingerprint_3087008357(valueHEX60gensym35_3019901478), NTI3036676200);
        break BeforeRet;
      };

      return result_3019901287;

    }
    
function HEX3Aanonymous_3019901661(itemHEX60gensym36_3019901662) {
      var result_3019901663 = [];

      BeforeRet: {
        if (!(contains_3019901364(ctx_3019899065.itemsSymbol, itemHEX60gensym36_3019901662))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym36_3019901662) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbolValue.forcedCalls = addInt(ctx_3019899065.statsSymbolValue.forcedCalls, 1);
        var argHEX60gensym36_3019901835 = HEX5BHEX5D_3019901463(ctx_3019899065.itemsSymbol, itemHEX60gensym36_3019901662);
        var valueHEX60gensym36_3019901836 = computeSymbolValueImpl_3019899480(ctx_3019899065, argHEX60gensym36_3019901835);
        HEX5BHEX5DHEX3D_3019901900(ctx_3019899065.queryCacheSymbolValue, argHEX60gensym36_3019901835, valueHEX60gensym36_3019901836);
        result_3019901663 = nimCopy(null, fingerprint_3087008538(valueHEX60gensym36_3019901836), NTI3036676200);
        break BeforeRet;
      };

      return result_3019901663;

    }
    
function HEX3Aanonymous_3019902008(itemHEX60gensym37_3019902009) {
      var result_3019902010 = [];

      BeforeRet: {
        if (!(contains_3019902087(ctx_3019899065.itemsFunctionExecutionContext, itemHEX60gensym37_3019902009))) {
        raiseException({message: ([117,112,100,97,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3036676336(itemHEX60gensym37_3019902009) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsFunctionExecution.forcedCalls = addInt(ctx_3019899065.statsFunctionExecution.forcedCalls, 1);
        var argHEX60gensym37_3019902209 = HEX5BHEX5D_3019902186(ctx_3019899065.itemsFunctionExecutionContext, itemHEX60gensym37_3019902009);
        var valueHEX60gensym37_3019902210 = computeFunctionExecutionImpl_3019899483(ctx_3019899065, argHEX60gensym37_3019902209);
        HEX5BHEX5DHEX3D_3019902274(ctx_3019899065.queryCacheFunctionExecution, argHEX60gensym37_3019902209, valueHEX60gensym37_3019902210);
        result_3019902010 = nimCopy(null, [], NTI3019900729);
        break BeforeRet;
      };

      return result_3019902010;

    }
    
function HEX3Aanonymous_3019902397(itemHEX60gensym38_3019902398) {
      var result_3019902399 = [];

      BeforeRet: {
        if (!(contains_3019902476(ctx_3019899065.itemsNodeLayoutInput, itemHEX60gensym38_3019902398))) {
        raiseException({message: ([117,112,100,97,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3036676336(itemHEX60gensym38_3019902398) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsNodeLayout.forcedCalls = addInt(ctx_3019899065.statsNodeLayout.forcedCalls, 1);
        var argHEX60gensym38_3019902598 = HEX5BHEX5D_3019902575(ctx_3019899065.itemsNodeLayoutInput, itemHEX60gensym38_3019902398);
        var valueHEX60gensym38_3019902599 = computeNodeLayoutImpl_3019899486(ctx_3019899065, argHEX60gensym38_3019902598);
        HEX5BHEX5DHEX3D_3019902663(ctx_3019899065.queryCacheNodeLayout, argHEX60gensym38_3019902598, valueHEX60gensym38_3019902599);
        result_3019902399 = nimCopy(null, [], NTI3019900968);
        break BeforeRet;
      };

      return result_3019902399;

    }
    
function HEX3Aanonymous_3019902800(keyHEX60gensym39_3019902801) {
        recoverValue_3019899447(ctx_3019899065, keyHEX60gensym39_3019902801);

      
    }
    
function HEX3Aanonymous_3019904794(keyHEX60gensym40_3019904795) {
        recoverType_3019899450(ctx_3019899065, keyHEX60gensym40_3019904795);

      
    }
    
function HEX3Aanonymous_3019904870(keyHEX60gensym41_3019904871) {
        recoverSymbol_3019899453(ctx_3019899065, keyHEX60gensym41_3019904871);

      
    }
    
function HEX3Aanonymous_3019904946(keyHEX60gensym42_3019904947) {
        recoverSymbols_3019899456(ctx_3019899065, keyHEX60gensym42_3019904947);

      
    }

  var result_3019899490 = null;

  BeforeRet: {
    var ctx_3019899065 = null;
    ctx_3019899065 = ({depGraph: null, dependencyStack: [], activeQuerySet: ({data: [], counter: 0}), activeQueryStack: [], recursiveQueries: ({data: [], counter: 0}), updateFunctions: [], recoveryFunctions: ({data: [], counter: 0}), enableLogging: false, itemsAstNode: null, itemsNodeLayoutInput: null, itemsSymbol: null, itemsFunctionExecutionContext: null, globalScope: ({data: [], counter: 0}), enableQueryLogging: false, enableExecutionLogging: false, diagnosticsPerNode: ({data: [], counter: 0}), diagnosticsPerQuery: ({data: [], counter: 0}), queryCacheType: null, updateType: null, statsType: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheValue: null, updateValue: null, statsValue: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbol: null, updateSymbol: null, statsSymbol: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbols: null, updateSymbols: null, statsSymbols: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheValidation: null, updateValidation: null, statsValidation: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolType: null, updateSymbolType: null, statsSymbolType: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolValue: null, updateSymbolValue: null, statsSymbolValue: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheFunctionExecution: null, updateFunctionExecution: null, statsFunctionExecution: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheNodeLayout: null, updateNodeLayout: null, statsNodeLayout: ({time: 0.0, totalCalls: 0, forcedCalls: 0})});
    ctx_3019899065.depGraph = newDependencyGraph_3036676400();
    ctx_3019899065.dependencyStack = nimCopy(null, [], NTI3019899118);
    ctx_3019899065.updateType = HEX3Aanonymous_3019899498;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateType);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 0, [84,121,112,101]);
    init_3019899876(ctx_3019899065, "queryCacheType", 2000);
    ctx_3019899065.updateValue = HEX3Aanonymous_3019899885;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateValue);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 1, [86,97,108,117,101]);
    init_3019900223(ctx_3019899065, "queryCacheValue", 2000);
    ctx_3019899065.updateSymbol = HEX3Aanonymous_3019900232;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbol);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 2, [83,121,109,98,111,108]);
    init_3019900571(ctx_3019899065, "queryCacheSymbol", 2000);
    ctx_3019899065.updateSymbols = HEX3Aanonymous_3019900580;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbols);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 3, [83,121,109,98,111,108,115]);
    init_3019900920(ctx_3019899065, "queryCacheSymbols", 2000);
    ctx_3019899065.updateValidation = HEX3Aanonymous_3019900929;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateValidation);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 4, [86,97,108,105,100,97,116,105,111,110]);
    init_3019901276(ctx_3019899065, "queryCacheValidation", 2000);
    ctx_3019899065.updateSymbolType = HEX3Aanonymous_3019901285;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbolType);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 5, [83,121,109,98,111,108,84,121,112,101]);
    init_3019901652(ctx_3019899065, "queryCacheSymbolType", 2000);
    ctx_3019899065.updateSymbolValue = HEX3Aanonymous_3019901661;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbolValue);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 6, [83,121,109,98,111,108,86,97,108,117,101]);
    init_3019901999(ctx_3019899065, "queryCacheSymbolValue", 2000);
    ctx_3019899065.updateFunctionExecution = HEX3Aanonymous_3019902008;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateFunctionExecution);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 7, [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110]);
    init_3019902388(ctx_3019899065, "queryCacheFunctionExecution", 2000);
    ctx_3019899065.updateNodeLayout = HEX3Aanonymous_3019902397;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateNodeLayout);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 8, [78,111,100,101,76,97,121,111,117,116]);
    init_3019902786(ctx_3019899065, "queryCacheNodeLayout", 2000);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 1, HEX3Aanonymous_3019902800);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 0, HEX3Aanonymous_3019904794);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 2, HEX3Aanonymous_3019904870);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 3, HEX3Aanonymous_3019904946);
    init_3019905028(ctx_3019899065, "itemsAstNode", 2000);
    init_3019905048(ctx_3019899065, "itemsNodeLayoutInput", 2000);
    init_3019905068(ctx_3019899065, "itemsSymbol", 2000);
    init_3019905088(ctx_3019899065, "itemsFunctionExecutionContext", 2000);
    ctx_3019899065.globalScope = nimCopy(ctx_3019899065.globalScope, initTable_3019905097(32), NTI3087008713);
    ctx_3019899065.enableQueryLogging = false;
    ctx_3019899065.enableExecutionLogging = false;
    ctx_3019899065.diagnosticsPerNode = nimCopy(ctx_3019899065.diagnosticsPerNode, initTable_3019905108(32), NTI3019898974);
    ctx_3019899065.diagnosticsPerQuery = nimCopy(ctx_3019899065.diagnosticsPerQuery, initTable_3019905128(32), NTI3019898991);
    result_3019899490 = ctx_3019899065;
    break BeforeRet;
  };

  return result_3019899490;

}
var executionOutput_2969567288 = [{lines: [], scroll: 0}];
var ctx_2969567289 = newContext_3019899489();
ctx_2969567289.enableLogging = false;
ctx_2969567289.enableQueryLogging = false;

function newFunctionValue_3087008482(impl_3087008483) {
  var result_3087008484 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008484 = nimCopy(result_3087008484, {kind: 4, impl: impl_3087008483, stringValue: [], intValue: 0, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008484;

}

function createBinaryIntOperator_2969567666(operator_2969567670) {
    
function HEX3Aanonymous_2969567672(values_2969567673) {
        var Temporary1;
        var Temporary2;

      var result_2969567674 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2969567673).length < 2)) {
        result_2969567674 = nimCopy(result_2969567674, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        if ((!((values_2969567673[chckIndx(0, 0, (values_2969567673).length - 1)].kind == 3)) || !((values_2969567673[chckIndx(1, 0, (values_2969567673).length - 1)].kind == 3)))) {
        result_2969567674 = nimCopy(result_2969567674, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = values_2969567673[chckIndx(0, 0, (values_2969567673).length - 1)];
        if (ConstSet153[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        var Temporary2 = values_2969567673[chckIndx(1, 0, (values_2969567673).length - 1)];
        if (ConstSet154[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
        result_2969567674 = nimCopy(result_2969567674, {kind: 3, intValue: operator_2969567670(Temporary1.intValue, Temporary2.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2969567674;

    }

  var result_2969567671 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567671 = nimCopy(result_2969567671, newFunctionValue_3087008482(HEX3Aanonymous_2969567672), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567671;

}

function createUnityIntOperator_2969567686(operator_2969567689) {
    
function HEX3Aanonymous_2969567691(values_2969567692) {
        var Temporary1;

      var result_2969567693 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2969567692).length < 1)) {
        result_2969567693 = nimCopy(result_2969567693, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        var value_2969567697 = nimCopy(null, values_2969567692[chckIndx(0, 0, (values_2969567692).length - 1)], NTI3087007751);
        if (!((value_2969567697.kind == 3))) {
        result_2969567693 = nimCopy(result_2969567693, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = value_2969567697;
        if (ConstSet155[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        result_2969567693 = nimCopy(result_2969567693, {kind: 3, intValue: operator_2969567689(Temporary1.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2969567693;

    }

  var result_2969567690 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567690 = nimCopy(result_2969567690, newFunctionValue_3087008482(HEX3Aanonymous_2969567691), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567690;

}

function stringValue_3087008476(value_3087008477) {
  var result_3087008478 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008478 = nimCopy(result_3087008478, {kind: 2, stringValue: nimCopy(null, value_3087008477, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008478;

}

function join_2969567841(a_2969567843, sep_2969567844) {
  var result_2969567845 = [];

    result_2969567845 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2969567860 = 0;
      var x_2969567861 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969569596 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969569596 < (a_2969567843).length)) break Label3;
            i_2969567860 = i_2969569596;
            x_2969567861 = nimCopy(x_2969567861, a_2969567843[chckIndx(i_2969569596, 0, (a_2969567843).length - 1)], NTI3087007751);
            if ((0 < i_2969567860)) {
            result_2969567845.push.apply(result_2969567845, sep_2969567844);;
            }
            
            result_2969567845.push.apply(result_2969567845, HEX24_3087008498(x_2969567861));;
            i_2969569596 = addInt(i_2969569596, 1);
          }
      };
    };

  return result_2969567845;

}

function delete_2969567879(s_2969567881, s_2969567881_Idx, slice_2969567882) {
    if (!((((slice_2969567882.a < (s_2969567881[s_2969567881_Idx]).length) && (0 <= slice_2969567882.a)) && (slice_2969567882.b < (s_2969567881[s_2969567881_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2969567882, NTI805306392), Field1: (s_2969567881[s_2969567881_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2969567882.a <= slice_2969567882.b)) {
    var n_2969567929 = addInt(subInt(slice_2969567882.b, slice_2969567882.a), 1);
    var first_2969567930 = slice_2969567882.a;
    s_2969567881[s_2969567881_Idx].splice(first_2969567930, n_2969567929);
    }
    

  
}

function color_2634023294(c_2634023295) {
  var result_2634023296 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634023296 = nimCopy(result_2634023296, c_2634023295, NTI2550136835);

  return result_2634023296;

}

function addOutput_2969567862(self_2969567864, line_2969567865, color_2969567866) {
    if ((1500 <= (self_2969567864.lines).length)) {
    delete_2969567879(self_2969567864, "lines", HEX2EHEX2E_805306418(0, subInt((self_2969567864.lines).length, 1000)));
    }
    
    if ((0 < self_2969567864.scroll)) {
    self_2969567864.scroll = addInt(self_2969567864.scroll, 1);
    }
    
    self_2969567864.lines.push({Field0: nimCopy(null, line_2969567865, NTI33554449), Field1: color_2634023294(color_2969567866)});;

  
}

function typeType_3087008186() {
  var result_3087008187 = null;

    result_3087008187 = {kind: 6, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008187;

}

function typeValue_3087008479(typ_3087008480) {
  var result_3087008481 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008481 = nimCopy(result_3087008481, {kind: 6, typ: typ_3087008480, stringValue: [], intValue: 0, impl: null, node: null, rev: 0}, NTI3087007751);

  return result_3087008481;

}

function HEX3Aanonymous_2969567747(a_2969567748, b_2969567749) {
  var result_2969567750 = 0;

    result_2969567750 = addInt(a_2969567748, b_2969567749);

  return result_2969567750;

}

function HEX3Aanonymous_2969567752(a_2969567753, b_2969567754) {
  var result_2969567755 = 0;

    result_2969567755 = subInt(a_2969567753, b_2969567754);

  return result_2969567755;

}

function HEX3Aanonymous_2969567757(a_2969567758, b_2969567759) {
  var result_2969567760 = 0;

    result_2969567760 = mulInt(a_2969567758, b_2969567759);

  return result_2969567760;

}

function HEX3Aanonymous_2969567762(a_2969567763, b_2969567764) {
  var result_2969567765 = 0;

    result_2969567765 = divInt(a_2969567763, b_2969567764);

  return result_2969567765;

}

function HEX3Aanonymous_2969567767(a_2969567768, b_2969567769) {
  var result_2969567770 = 0;

    result_2969567770 = modInt(a_2969567768, b_2969567769);

  return result_2969567770;

}

function HEX3Aanonymous_2969567772(a_2969567773) {
  var result_2969567774 = 0;

    result_2969567774 = negInt(a_2969567773);

  return result_2969567774;

}

function HEX3Aanonymous_2969567776(a_2969567777) {
    var Temporary1;

  var result_2969567778 = 0;

    if (!((a_2969567777 == 0))) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_2969567778 = Temporary1;

  return result_2969567778;

}

function HEX3Aanonymous_2969567780(a_2969567781, b_2969567782) {
    var Temporary1;

  var result_2969567783 = 0;

    if ((a_2969567781 < b_2969567782)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567783 = Temporary1;

  return result_2969567783;

}

function HEX3Aanonymous_2969567785(a_2969567786, b_2969567787) {
    var Temporary1;

  var result_2969567788 = 0;

    if ((a_2969567786 <= b_2969567787)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567788 = Temporary1;

  return result_2969567788;

}

function HEX3Aanonymous_2969567790(a_2969567791, b_2969567792) {
    var Temporary1;

  var result_2969567793 = 0;

    if ((b_2969567792 < a_2969567791)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567793 = Temporary1;

  return result_2969567793;

}

function HEX3Aanonymous_2969567795(a_2969567796, b_2969567797) {
    var Temporary1;

  var result_2969567798 = 0;

    if ((b_2969567797 <= a_2969567796)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567798 = Temporary1;

  return result_2969567798;

}

function HEX3Aanonymous_2969567800(a_2969567801, b_2969567802) {
    var Temporary1;

  var result_2969567803 = 0;

    if ((a_2969567801 == b_2969567802)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567803 = Temporary1;

  return result_2969567803;

}

function HEX3Aanonymous_2969567805(a_2969567806, b_2969567807) {
    var Temporary1;

  var result_2969567808 = 0;

    if (!((a_2969567806 == b_2969567807))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567808 = Temporary1;

  return result_2969567808;

}

function HEX3Aanonymous_2969567810(a_2969567811, b_2969567812) {
    var Temporary1;

  var result_2969567813 = 0;

    if ((!((a_2969567811 == 0)) && !((b_2969567812 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567813 = Temporary1;

  return result_2969567813;

}

function HEX3Aanonymous_2969567815(a_2969567816, b_2969567817) {
    var Temporary1;

  var result_2969567818 = 0;

    if ((!((a_2969567816 == 0)) || !((b_2969567817 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567818 = Temporary1;

  return result_2969567818;

}

function HEX3Aanonymous_2969567820(a_2969567821, b_2969567822) {
    var Temporary1;

  var result_2969567823 = 0;

    if ((a_2969567821 < b_2969567822)) {
    Temporary1 = -1;
    }
    else {
    if ((b_2969567822 < a_2969567821)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    }
    result_2969567823 = Temporary1;

  return result_2969567823;

}

function HEX3Aanonymous_2969567825(values_2969567826) {
    var Temporary1;

  var result_2969567827 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (((values_2969567826).length < 2)) {
    result_2969567827 = nimCopy(result_2969567827, errorValue_3087008442(), NTI3087007751);
    break BeforeRet;
    }
    
    var leftValue_2969567831 = nimCopy(null, values_2969567826[chckIndx(0, 0, (values_2969567826).length - 1)], NTI3087007751);
    var rightValue_2969567832 = nimCopy(null, values_2969567826[chckIndx(1, 0, (values_2969567826).length - 1)], NTI3087007751);
    if (!((leftValue_2969567831.kind == 2))) {
    result_2969567827 = nimCopy(result_2969567827, errorValue_3087008442(), NTI3087007751);
    break BeforeRet;
    }
    
    var Temporary1 = leftValue_2969567831;
    if (ConstSet156[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
    result_2969567827 = nimCopy(result_2969567827, {kind: 2, stringValue: (Temporary1.stringValue || []).concat(HEX24_3087008498(rightValue_2969567832) || []), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_2969567827;

}

function HEX3Aanonymous_2969567838(values_2969567839) {
  var result_2969567840 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567840 = nimCopy(result_2969567840, stringValue_3087008476(join_2969567841(values_2969567839, [])), NTI3087007751);
    addOutput_2969567862(executionOutput_2969567288[0], HEX24_3087008498(result_2969567840), {r: 1.0, g: 1.0, b: 1.0, a: 1.0});
    log_1174405220(logger_704643272[0], 2, [HEX24_3087008498(result_2969567840)]);
    result_2969567840 = nimCopy(result_2969567840, voidValue_3087008471(), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567840;

}

function HEX3Aanonymous_2969567949(values_2969567952) {
  var result_2969567955 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2969567955 = nimCopy(result_2969567955, stringValue_3087008476(join_2969567841(values_2969567952, [])), NTI3087007751);

  return result_2969567955;

}
var typeAddIntInt_2969567706 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeSubIntInt_2969567711 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeMulIntInt_2969567716 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeDivIntInt_2969567721 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeModIntInt_2969567726 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeAddStringInt_2969567731 = newFunctionType_3087008173([stringType_3087008171(), intType_3087008169()], stringType_3087008171());
var typeNegInt_2969567736 = newFunctionType_3087008173([intType_3087008169()], intType_3087008169());
var typeNotInt_2969567741 = newFunctionType_3087008173([intType_3087008169()], intType_3087008169());
var typeFnIntIntInt_2969567746 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var funcAddIntInt_2969567751 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567747);
var funcSubIntInt_2969567756 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567752);
var funcMulIntInt_2969567761 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567757);
var funcDivIntInt_2969567766 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567762);
var funcModIntInt_2969567771 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567767);
var funcNegInt_2969567775 = createUnityIntOperator_2969567686(HEX3Aanonymous_2969567772);
var funcNotInt_2969567779 = createUnityIntOperator_2969567686(HEX3Aanonymous_2969567776);
var funcLessIntInt_2969567784 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567780);
var funcLessEqualIntInt_2969567789 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567785);
var funcGreaterIntInt_2969567794 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567790);
var funcGreaterEqualIntInt_2969567799 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567795);
var funcEqualIntInt_2969567804 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567800);
var funcNotEqualIntInt_2969567809 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567805);
var funcAndIntInt_2969567814 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567810);
var funcOrIntInt_2969567819 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567815);
var funcOrderIntInt_2969567824 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567820);
var funcAddStringInt_2969567837 = newFunctionValue_3087008482(HEX3Aanonymous_2969567825);
var funcPrintAny_2969567948 = newFunctionValue_3087008482(HEX3Aanonymous_2969567838);
var funcBuildStringAny_2969567960 = newFunctionValue_3087008482(HEX3Aanonymous_2969567949);
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdAdd_2986344451, {id: nimCopy(null, IdAdd_2986344451, NTI2046820355), name: [43], kind: 1, typ: typeAddIntInt_2969567706, value: nimCopy(null, funcAddIntInt_2969567751, NTI3087007751), operatorNotation: 3, precedence: 10, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdSub_2986344452, {id: nimCopy(null, IdSub_2986344452, NTI2046820355), name: [45], kind: 1, typ: typeSubIntInt_2969567711, value: nimCopy(null, funcSubIntInt_2969567756, NTI3087007751), operatorNotation: 3, precedence: 10, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdMul_2986344453, {id: nimCopy(null, IdMul_2986344453, NTI2046820355), name: [42], kind: 1, typ: typeMulIntInt_2969567716, value: nimCopy(null, funcMulIntInt_2969567761, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdDiv_2986344454, {id: nimCopy(null, IdDiv_2986344454, NTI2046820355), name: [47], kind: 1, typ: typeDivIntInt_2969567721, value: nimCopy(null, funcDivIntInt_2969567766, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdMod_2986344455, {id: nimCopy(null, IdMod_2986344455, NTI2046820355), name: [37], kind: 1, typ: typeModIntInt_2969567726, value: nimCopy(null, funcModIntInt_2969567771, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdNegate_2986344456, {id: nimCopy(null, IdNegate_2986344456, NTI2046820355), name: [45], kind: 1, typ: typeNegInt_2969567736, value: nimCopy(null, funcNegInt_2969567775, NTI3087007751), operatorNotation: 1, mHash: 0, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdNot_2986344457, {id: nimCopy(null, IdNot_2986344457, NTI2046820355), name: [33], kind: 1, typ: typeNotInt_2969567741, value: nimCopy(null, funcNotInt_2969567779, NTI3087007751), operatorNotation: 1, mHash: 0, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdAppendString_2986344459, {id: nimCopy(null, IdAppendString_2986344459, NTI2046820355), name: [38], kind: 1, typ: typeAddStringInt_2969567731, value: nimCopy(null, funcAddStringInt_2969567837, NTI3087007751), operatorNotation: 3, precedence: 0, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdLess_2986344463, {id: nimCopy(null, IdLess_2986344463, NTI2046820355), name: [60], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcLessIntInt_2969567784, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdLessEqual_2986344464, {id: nimCopy(null, IdLessEqual_2986344464, NTI2046820355), name: [60,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcLessEqualIntInt_2969567789, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdGreater_2986344465, {id: nimCopy(null, IdGreater_2986344465, NTI2046820355), name: [62], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcGreaterIntInt_2969567794, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdGreaterEqual_2986344466, {id: nimCopy(null, IdGreaterEqual_2986344466, NTI2046820355), name: [62,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcGreaterEqualIntInt_2969567799, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdEqual_2986344467, {id: nimCopy(null, IdEqual_2986344467, NTI2046820355), name: [61,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcEqualIntInt_2969567804, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdNotEqual_2986344468, {id: nimCopy(null, IdNotEqual_2986344468, NTI2046820355), name: [33,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcNotEqualIntInt_2969567809, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdAnd_2986344469, {id: nimCopy(null, IdAnd_2986344469, NTI2046820355), name: [97,110,100], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcAndIntInt_2969567814, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdOr_2986344470, {id: nimCopy(null, IdOr_2986344470, NTI2046820355), name: [111,114], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcOrIntInt_2969567819, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdOrder_2986344471, {id: nimCopy(null, IdOrder_2986344471, NTI2046820355), name: [60,61,62], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcOrderIntInt_2969567824, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdInt_2986344460, {id: nimCopy(null, IdInt_2986344460, NTI2046820355), name: [105,110,116], kind: 1, typ: typeType_3087008186(), value: typeValue_3087008479(intType_3087008169()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdString_2986344461, {id: nimCopy(null, IdString_2986344461, NTI2046820355), name: [115,116,114,105,110,103], kind: 1, typ: typeType_3087008186(), value: typeValue_3087008479(stringType_3087008171()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdVoid_2986344462, {id: nimCopy(null, IdVoid_2986344462, NTI2046820355), name: [118,111,105,100], kind: 1, typ: typeType_3087008186(), value: typeValue_3087008479(voidType_3087008167()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdPrint_2986344450, {id: nimCopy(null, IdPrint_2986344450, NTI2046820355), name: [112,114,105,110,116], kind: 1, typ: newFunctionType_3087008173([anyType_3087008188(true)], voidType_3087008167()), value: nimCopy(null, funcPrintAny_2969567948, NTI3087007751), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdBuildString_2986344472, {id: nimCopy(null, IdBuildString_2986344472, NTI2046820355), name: [98,117,105,108,100], kind: 1, typ: newFunctionType_3087008173([anyType_3087008188(true)], stringType_3087008171()), value: nimCopy(null, funcBuildStringAny_2969567960, NTI3087007751), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
Label153: {
  var symbol_2969569501 = [null];
  var L_2969569588 = len_3019954306(ctx_2969567289.globalScope);
  Label154: {
    var h_2969569590 = 0;
    var colontmp__2969569591 = 0;
    colontmp__2969569591 = (ctx_2969567289.globalScope.data).length - 1;
    var res_2969569592 = 0;
    Label155: {
        Label156: while (true) {
        if (!(res_2969569592 <= colontmp__2969569591)) break Label156;
          h_2969569590 = res_2969569592;
          if (isFilled_1308622880(ctx_2969567289.globalScope.data[chckIndx(h_2969569590, 0, (ctx_2969567289.globalScope.data).length - 1)].Field0)) {
          symbol_2969569501[0] = ctx_2969567289.globalScope.data[chckIndx(h_2969569590, 0, (ctx_2969567289.globalScope.data).length - 1)]["Field2"];
          var _ = newSymbol_3019907758(ctx_2969567289, symbol_2969569501[0]);
          if (!((len_3019954306(ctx_2969567289.globalScope) == L_2969569588))) {
          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
          }
          
          }
          
          res_2969569592 = addInt(res_2969569592, 1);
        }
    };
  };
};

function isEditing_2969575154(self_2969575155) {
  var result_2969575156 = false;

    result_2969575156 = !((self_2969575155.textEditor == null));

  return result_2969575156;

}

function node_2969569752(editor_2969569753) {
  var result_2969569754 = null;

  BeforeRet: {
    result_2969569754 = editor_2969569753.selectedNode;
    break BeforeRet;
  };

  return result_2969569754;

}

function newSeq_2969570872(len_2969570874) {
  var result_2969570875 = [];

    result_2969570875 = new Array(len_2969570874); for (var i = 0 ; i < len_2969570874 ; ++i) { result_2969570875[i] = null; }
  return result_2969570875;

}

function expandIfNeeded_2969570862(deq_2969570864) {
              var Temporary5;
    var Temporary6;

    if ((deq_2969570864.mask == 0)) {
    var correctSizeHEX60gensym42_2969570866 = nextPowerOfTwo_872415437(4);
    deq_2969570864.mask = subInt(correctSizeHEX60gensym42_2969570866, 1);
    deq_2969570864.data = new Array(chckRange(correctSizeHEX60gensym42_2969570866, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2969570866, 0, 2147483647) ; ++i) { deq_2969570864.data[i] = null; }    }
    
    var cap_2969570871 = addInt(deq_2969570864.mask, 1);
    if ((cap_2969570871 <= deq_2969570864.count)) {
    var n_2969570880 = newSeq_2969570872(chckRange(mulInt(cap_2969570871, 2), 0, 2147483647));
    var i_2969570881 = 0;
    Label1: {
      var x_2969570891 = null;
      var x_2969570891_Idx = 0;
      var i_2969578927 = deq_2969570864.head;
      Label2: {
        var c_2969578929 = 0;
        var i_2969578930 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2969578930 < deq_2969570864.count)) break Label4;
              c_2969578929 = i_2969578930;
              x_2969570891 = deq_2969570864.data; x_2969570891_Idx = chckIndx(i_2969578927, 0, (deq_2969570864.data).length - 1);
              Temporary5 = x_2969570891[x_2969570891_Idx];
              x_2969570891[x_2969570891_Idx] = genericReset(x_2969570891[x_2969570891_Idx], NTI3003121668);
              n_2969570880[chckIndx(i_2969570881, 0, (n_2969570880).length - 1)] = Temporary5;
              i_2969570881 = addInt(i_2969570881, 1);
              i_2969578927 = (addInt(i_2969578927, 1) & deq_2969570864.mask);
              i_2969578930 = addInt(i_2969578930, 1);
            }
        };
      };
    };
    Temporary6 = n_2969570880;
    n_2969570880 = genericReset(n_2969570880, NTI2969569217);
    deq_2969570864.data = nimCopy(null, Temporary6, NTI2969569217);
    deq_2969570864.mask = subInt(mulInt(cap_2969570871, 2), 1);
    deq_2969570864.tail = deq_2969570864.count;
    deq_2969570864.head = 0;
    }
    

  
}

function addLast_2969570853(deq_2969570855, item_2969570856) {
    expandIfNeeded_2969570862(deq_2969570855);
    deq_2969570855.count = addInt(deq_2969570855.count, 1);
    deq_2969570855.data[chckIndx(deq_2969570855.tail, 0, (deq_2969570855.data).length - 1)] = item_2969570856;
    deq_2969570855.tail = (addInt(deq_2969570855.tail, 1) & deq_2969570855.mask);

  
}

function len_2969570994(deq_2969570996) {
  var result_2969570997 = 0;

    result_2969570997 = deq_2969570996.count;

  return result_2969570997;

}

function popFirst_2969571003(deq_2969571005) {
    var Temporary1;

  var result_2969571006 = null;

    if ((deq_2969571005.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2969571005.count = subInt(deq_2969571005.count, 1);
    Temporary1 = deq_2969571005.data[chckIndx(deq_2969571005.head, 0, (deq_2969571005.data).length - 1)];
    deq_2969571005.data[chckIndx(deq_2969571005.head, 0, (deq_2969571005.data).length - 1)] = genericReset(deq_2969571005.data[chckIndx(deq_2969571005.head, 0, (deq_2969571005.data).length - 1)], NTI3003121668);
    result_2969571006 = Temporary1;
    deq_2969571005.head = (addInt(deq_2969571005.head, 1) & deq_2969571005.mask);

  return result_2969571006;

}

function getBool_1627390147(n_1627390148, default_1627390149) {
      var Temporary1;

  var result_1627390150 = false;

  BeforeRet: {
    if (((n_1627390148 == null) || !((n_1627390148.kind == 1)))) {
    result_1627390150 = default_1627390149;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390148;
      if (ConstSet157[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390150 = Temporary1.bval;
      break BeforeRet;
    }
    
  };

  return result_1627390150;

}

function getOption_2818583615(editor_2818583617, path_2818583618, default_2818583619) {
  var result_2818583624 = false;

  BeforeRet: {
    Label1: {
      if ((editor_2818583617 == null)) {
      result_2818583624 = default_2818583619;
      break BeforeRet;
      }
      
      var nodeHEX60gensym165_2818583635 = HEX7BHEX7D_1627393316(editor_2818583617.options, nsuSplitString(path_2818583618, [46], -1));
      if ((nodeHEX60gensym165_2818583635 == null)) {
      result_2818583624 = default_2818583619;
      break BeforeRet;
      }
      
    };
    result_2818583624 = getBool_1627390147(nodeHEX60gensym165_2818583635, default_2818583619);
    break BeforeRet;
  };

  return result_2818583624;

}

function hasKey_2969569869(t_2969569872, key_2969569873) {
  var result_2969569874 = false;

    var hc_2969569875 = [0];
    result_2969569874 = (0 <= rawGet_3137340002(t_2969569872, key_2969569873, hc_2969569875, 0));

  return result_2969569874;

}

function contains_2969569863(t_2969569866, key_2969569867) {
  var result_2969569868 = false;

  BeforeRet: {
    result_2969569868 = hasKey_2969569869(t_2969569866, key_2969569867);
    break BeforeRet;
  };

  return result_2969569868;

}

function HEX5BHEX5D_2969569959(t_2969569962, key_2969569963) {
  var result_2969569964 = null;

    var hcHEX60gensym22_2969569965 = [0];
    var indexHEX60gensym22_2969569972 = rawGet_3137340002(t_2969569962, key_2969569963, hcHEX60gensym22_2969569965, 0);
    if ((0 <= indexHEX60gensym22_2969569972)) {
    result_2969569964 = t_2969569962.data[chckIndx(indexHEX60gensym22_2969569972, 0, (t_2969569962.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_2969569963);
    }
    

  return result_2969569964;

}

function xyHEX3D_2147483683(rect_2147483684, v_2147483685) {
    rect_2147483684.x = v_2147483685.x;
    rect_2147483684.y = v_2147483685.y;

  
}

function HEX2B_2147484403(aHEX60gensym72_2147484405, bHEX60gensym72_2147484406) {
  var result_2147484407 = ({x: 0.0, y: 0.0});

    result_2147484407 = nimCopy(result_2147484407, {x: (aHEX60gensym72_2147484405.x + bHEX60gensym72_2147484406.x), y: (aHEX60gensym72_2147484405.y + bHEX60gensym72_2147484406.y)}, NTI2164261152);

  return result_2147484407;

}

function wh_2147483686(rect_2147483687) {
  var result_2147483688 = ({x: 0.0, y: 0.0});

    result_2147483688 = nimCopy(result_2147483688, vec2_2164261725(rect_2147483687.w, rect_2147483687.h), NTI2164261152);

  return result_2147483688;

}

function absoluteBounds_3087009545(node_3087009546) {
  var result_3087009547 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    if ((node_3087009546.parent == null)) {
    result_3087009547 = nimCopy(result_3087009547, node_3087009546.bounds, NTI2147483653);
    }
    else {
      result_3087009547 = nimCopy(result_3087009547, rect_2147483672(HEX2B_2147484403(xy_2147483680(absoluteBounds_3087009545(node_3087009546.parent)), xy_2147483680(node_3087009546.bounds)), wh_2147483686(node_3087009546.bounds)), NTI2147483653);
    }
    

  return result_3087009547;

}

function absoluteBounds_3087009583(nodeRange_3087009584) {
  var result_3087009585 = [({x: 0.0, y: 0.0, w: 0.0, h: 0.0})];

    result_3087009585[0] = nimCopy(result_3087009585[0], nodeRange_3087009584.parent.children[chckIndx(nodeRange_3087009584.first, 0, (nodeRange_3087009584.parent.children).length - 1)].bounds, NTI2147483653);
    Label1: {
      var i_3087009590 = 0;
      var colontmp__2969578946 = 0;
      colontmp__2969578946 = addInt(nodeRange_3087009584.first, 1);
      var i_2969578947 = colontmp__2969578946;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578947 < nodeRange_3087009584.last)) break Label3;
            i_3087009590 = i_2969578947;
            result_3087009585[0] = nimCopy(result_3087009585[0], or_2147483728(result_3087009585[0], nodeRange_3087009584.parent.children[chckIndx(i_3087009590, 0, (nodeRange_3087009584.parent.children).length - 1)].bounds), NTI2147483653);
            i_2969578947 = addInt(i_2969578947, 1);
          }
      };
    };
    xyHEX3D_2147483683(result_3087009585[0], HEX2B_2147484403(xy_2147483680(result_3087009585[0]), xy_2147483680(absoluteBounds_3087009545(nodeRange_3087009584.parent))));

  return result_3087009585[0];

}

function and_2147483732(a_2147483733, b_2147483734) {
  var result_2147483735 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483735.x = max_33555642(a_2147483733.x, b_2147483734.x);
    result_2147483735.y = max_33555642(a_2147483733.y, b_2147483734.y);
    result_2147483735.w = (min_33555609((a_2147483733.x + a_2147483733.w), (b_2147483734.x + b_2147483734.w)) - result_2147483735.x);
    result_2147483735.h = (min_33555609((a_2147483733.y + a_2147483733.h), (b_2147483734.y + b_2147483734.h)) - result_2147483735.y);

  return result_2147483735;

}

function intersects_2130706609(a_2130706610, b_2130706611) {
  var result_2130706612 = false;

  BeforeRet: {
    var intersection_2130706613 = and_2147483732(a_2130706610, b_2130706611);
    result_2130706612 = ((0.0 < intersection_2130706613.w) && (0.0 < intersection_2130706613.h));
    break BeforeRet;
  };

  return result_2130706612;

}

function subbase_3003121765(node_3003121766) {
  var result_3003121767 = null;

  BeforeRet: {
    if ((node_3003121766.parent.parent == null)) {
    result_3003121767 = node_3003121766;
    break BeforeRet;
    }
    
    result_3003121767 = subbase_3003121765(node_3003121766.parent);
    break BeforeRet;
  };

  return result_3003121767;

}

function values_3019906757(t_3019906760) {
  var result_3019906761 = [];

    var iter_3019906766 = t_3019906760.values();
    for (var i in iter_3019906766) {result_3019906761.push(i);}

  return result_3019906761;

}

function hash_3087010010(input_3087010011) {
  var result_3087010012 = 0;

  BeforeRet: {
    if ((input_3087010011.mHash == 0)) {
    input_3087010011.mHash = HEX21HEX26_1325400067(hash_3003124022(input_3087010011.node), hash_2046820630(input_3087010011.selectedNode));
    input_3087010011.mHash = HEX21HEX24_1325400082(input_3087010011.mHash);
    }
    
    result_3087010012 = input_3087010011.mHash;
    break BeforeRet;
  };

  return result_3087010012;

}

function len_3087010148(t_3087010151) {
  var result_3087010152 = 0;

    result_3087010152 = t_3087010151.counter;

  return result_3087010152;

}

function HEX3DHEX3D_3087009833(x_3087009835, y_3087009836) {
  var result_3087009837 = false;

  BeforeRet: {
    var sameObject_3087009844 = false;
    sameObject_3087009844 = x_3087009835 === y_3087009836
    if (sameObject_3087009844) {
    result_3087009837 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009835).length == (y_3087009836).length))) {
    result_3087009837 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009858 = 0;
      var colontmp__2969578967 = 0;
      colontmp__2969578967 = subInt((x_3087009835).length, 1);
      var res_2969578968 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969578968 <= colontmp__2969578967)) break Label3;
            i_3087009858 = res_2969578968;
            if (!(eqStrings(x_3087009835[chckIndx(i_3087009858, 0, (x_3087009835).length - 1)], y_3087009836[chckIndx(i_3087009858, 0, (y_3087009836).length - 1)]))) {
            result_3087009837 = false;
            break BeforeRet;
            }
            
            res_2969578968 = addInt(res_2969578968, 1);
          }
      };
    };
    result_3087009837 = true;
    break BeforeRet;
  };

  return result_3087009837;

}

function HEX3DHEX3D_2785018609(x_2785018611, y_2785018612) {
  var result_2785018613 = false;

  BeforeRet: {
    if (!((x_2785018611.x == y_2785018612.x))) {
    result_2785018613 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018611.y == y_2785018612.y))) {
    result_2785018613 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018611.w == y_2785018612.w))) {
    result_2785018613 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018611.h == y_2785018612.h))) {
    result_2785018613 = false;
    break BeforeRet;
    }
    
    result_2785018613 = true;
    break BeforeRet;
  };

  return result_2785018613;

}

function HEX3DHEX3D_3087009871(x_3087009873, y_3087009874) {
  var result_3087009875 = false;

  BeforeRet: {
    var sameObject_3087009882 = false;
    sameObject_3087009882 = x_3087009873 === y_3087009874
    if (sameObject_3087009882) {
    result_3087009875 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009873).length == (y_3087009874).length))) {
    result_3087009875 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009896 = 0;
      var colontmp__2969578971 = 0;
      colontmp__2969578971 = subInt((x_3087009873).length, 1);
      var res_2969578972 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969578972 <= colontmp__2969578971)) break Label3;
            i_3087009896 = res_2969578972;
            if (!(HEX3DHEX3D_3087009816(x_3087009873[chckIndx(i_3087009896, 0, (x_3087009873).length - 1)], y_3087009874[chckIndx(i_3087009896, 0, (y_3087009874).length - 1)]))) {
            result_3087009875 = false;
            break BeforeRet;
            }
            
            res_2969578972 = addInt(res_2969578972, 1);
          }
      };
    };
    result_3087009875 = true;
    break BeforeRet;
  };

  return result_3087009875;

}

function HEX3DHEX3D_3087009816(a_3087009817, b_3087009818) {
  var result_3087009819 = false;

  BeforeRet: {
    if ((a_3087009817 == null)) {
    result_3087009819 = (b_3087009818 == null);
    break BeforeRet;
    }
    
    if ((b_3087009818 == null)) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3087009817.text, b_3087009818.text))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.node == b_3087009818.node))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087009833(a_3087009817.colors, b_3087009818.colors))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2785018609(a_3087009817.bounds, b_3087009818.bounds))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.render == b_3087009818.render))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.widgetTemplate == b_3087009818.widgetTemplate))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.cloneWidget == b_3087009818.cloneWidget))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    result_3087009819 = HEX3DHEX3D_3087009871(a_3087009817.children, b_3087009818.children);
    break BeforeRet;
  };

  return result_3087009819;

}

function getOrDefault_3087010737(t_3087010740, key_3087010741) {
  var result_3087010742 = null;

    var hcHEX60gensym53_3087010745 = [0];
    var indexHEX60gensym53_3087010752 = rawGet_3087010450(t_3087010740, key_3087010741, hcHEX60gensym53_3087010745, 0);
    if ((0 <= indexHEX60gensym53_3087010752)) {
    result_3087010742 = t_3087010740.data[chckIndx(indexHEX60gensym53_3087010752, 0, (t_3087010740.data).length - 1)].Field2;
    }
    

  return result_3087010742;

}

function HEX3DHEX3D_3087010092(s_3087010095, t_3087010096) {
  var result_3087010097 = false;

  BeforeRet: {
    if ((s_3087010095.counter == t_3087010096.counter)) {
    Label1: {
      var keyHEX60gensym47_3087010401 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var valHEX60gensym47_3087010402 = null;
      var L_2969578960 = len_3087010148(s_3087010095);
      Label2: {
        var h_2969578962 = 0;
        var colontmp__2969578963 = 0;
        colontmp__2969578963 = (s_3087010095.data).length - 1;
        var res_2969578964 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969578964 <= colontmp__2969578963)) break Label4;
              h_2969578962 = res_2969578964;
              if (isFilled_1308622880(s_3087010095.data[chckIndx(h_2969578962, 0, (s_3087010095.data).length - 1)].Field0)) {
              keyHEX60gensym47_3087010401 = nimCopy(keyHEX60gensym47_3087010401, s_3087010095.data[chckIndx(h_2969578962, 0, (s_3087010095.data).length - 1)].Field1, NTI2046820355);
              valHEX60gensym47_3087010402 = s_3087010095.data[chckIndx(h_2969578962, 0, (s_3087010095.data).length - 1)].Field2;
              if (!(hasKey_3087010443(t_3087010096, keyHEX60gensym47_3087010401))) {
              result_3087010097 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D_3087009816(getOrDefault_3087010737(t_3087010096, keyHEX60gensym47_3087010401), valHEX60gensym47_3087010402))) {
              result_3087010097 = false;
              break BeforeRet;
              }
              
              if (!((len_3087010148(s_3087010095) == L_2969578960))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969578964 = addInt(res_2969578964, 1);
            }
        };
      };
    };
    result_3087010097 = true;
    break BeforeRet;
    }
    
  };

  return result_3087010097;

}

function HEX3DHEX3D_3087010013(a_3087010014, b_3087010015) {
  var result_3087010016 = false;

  BeforeRet: {
    if ((a_3087010014 == null)) {
    result_3087010016 = (b_3087010015 == null);
    break BeforeRet;
    }
    
    if ((b_3087010015 == null)) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.revision == b_3087010015.revision))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.node == b_3087010015.node))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2046820626(a_3087010014.selectedNode, b_3087010015.selectedNode))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087010092(a_3087010014.replacements, b_3087010015.replacements))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.renderDivisionVertically == b_3087010015.renderDivisionVertically))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.inlineBlocks == b_3087010015.inlineBlocks))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.indent == b_3087010015.indent))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    result_3087010016 = true;
    break BeforeRet;
  };

  return result_3087010016;

}

function getItem_3019906744(selfHEX60gensym83_3019906745) {
  var result_3019906746 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym83_3019906745.id, null_2046820646)) {
    selfHEX60gensym83_3019906745.id = nimCopy(selfHEX60gensym83_3019906745.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym83_3019906745.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,51,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969578974 = nimCopy(null, selfHEX60gensym83_3019906745.id, NTI2046820355);
    var colontmp__2969578975 = 1;
    result_3019906746 = nimCopy(result_3019906746, {Field0: nimCopy(null, colontmp__2969578974, NTI2046820355), Field1: colontmp__2969578975}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019906746;

}

function HEX5BHEX5DHEX3D_3019906924(t_3019906927, key_3019906928, val_3019906929) {
    t_3019906927.set(mapKeyJs_3019899588(key_3019906928), val_3019906929);

  
}

function getOrCreateNodeLayoutInput_3019906753(ctxHEX60gensym84_3019906754, dataHEX60gensym84_3019906755) {
  var result_3019906756 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym84_3019906789 = null;
      var colontmp__2969578950 = [];
      colontmp__2969578950 = values_3019906757(ctxHEX60gensym84_3019906754.itemsNodeLayoutInput);
      var i_2969578952 = 0;
      var L_2969578953 = (colontmp__2969578950).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578952 < L_2969578953)) break Label3;
            existingHEX60gensym84_3019906789 = colontmp__2969578950[chckIndx(i_2969578952, 0, (colontmp__2969578950).length - 1)];
            if (((hash_3087010010(existingHEX60gensym84_3019906789) == hash_3087010010(dataHEX60gensym84_3019906755)) && HEX3DHEX3D_3087010013(existingHEX60gensym84_3019906789, dataHEX60gensym84_3019906755))) {
            result_3019906756 = existingHEX60gensym84_3019906789;
            break BeforeRet;
            }
            
            i_2969578952 = addInt(i_2969578952, 1);
            if (!(((colontmp__2969578950).length == L_2969578953))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var itemHEX60gensym84_3019906790 = getItem_3019906744(dataHEX60gensym84_3019906755);
    var keyHEX60gensym84_3019906791 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym84_3019906790, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym84_3019906754.depGraph.changed, keyHEX60gensym84_3019906791, ctxHEX60gensym84_3019906754.depGraph.revision);
    HEX5BHEX5DHEX3D_3019906924(ctxHEX60gensym84_3019906754.itemsNodeLayoutInput, itemHEX60gensym84_3019906790, dataHEX60gensym84_3019906755);
    result_3019906756 = dataHEX60gensym84_3019906755;
    break BeforeRet;
  };

  return result_3019906756;

}

function contains_3019934605(t_3019934608, key_3019934609) {
  var result_3019934610 = false;

    result_3019934610 = t_3019934608.has(mapKeyJs_3019902675(key_3019934609));

  return result_3019934610;

}

function nimFloatToString_385876087(a_385876088) {
  var result_385876089 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876088))
      result_385876089 = a_385876088 === 0 && 1 / a_385876088 < 0 ? "-0.0" : a_385876088+".0"
    else {
      result_385876089 = a_385876088+""
      if(nimOnlyDigitsOrMinus(result_385876089)){
        result_385876089 = a_385876088+".0"
      }
    }
  

  return result_385876089;

}

function addFloat_2164261798(result_2164261800, result_2164261800_Idx, x_2164261801) {
    add_33556386(result_2164261800, result_2164261800_Idx, nimFloatToString_385876087(x_2164261801));

  
}

function HEX24_2164261794(x_2164261796) {
  var result_2164261797 = [[]];

    addFloat_2164261798(result_2164261797, 0, x_2164261796);

  return result_2164261797[0];

}

function HEX24_2147483713(a_2147483714) {
  var result_2147483715 = [];

    result_2147483715 = nimCopy(null, ([40] || []).concat(HEX24_2164261794(a_2147483714.x) || [],[44,32] || [],HEX24_2164261794(a_2147483714.y) || [],[58,32] || [],HEX24_2164261794(a_2147483714.w) || [],[32,120,32] || [],HEX24_2164261794(a_2147483714.h) || [],[41] || []), NTI33554449);

  return result_2147483715;

}

function collectionToString_3087009633(x_3087009635, prefix_3087009636, separator_3087009637, suffix_3087009638) {
  var result_3087009639 = [[]];

    result_3087009639[0] = nimCopy(null, prefix_3087009636, NTI33554449);
    var firstElement_3087009640 = true;
    Label1: {
      var value_3087009644 = [];
      var i_2969578981 = 0;
      var L_2969578982 = (x_3087009635).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578981 < L_2969578982)) break Label3;
            value_3087009644 = x_3087009635[i_2969578981];
            if (firstElement_3087009640) {
            firstElement_3087009640 = false;
            }
            else {
            result_3087009639[0].push.apply(result_3087009639[0], separator_3087009637);;
            }
            
            addQuoted_1593835572(result_3087009639, 0, value_3087009644);
            i_2969578981 += 1;
            if (!(((x_3087009635).length == L_2969578982))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087009639[0].push.apply(result_3087009639[0], suffix_3087009638);;

  return result_3087009639[0];

}

function HEX24_3087009629(x_3087009631) {
  var result_3087009632 = [];

    result_3087009632 = nimCopy(null, collectionToString_3087009633(x_3087009631, [64,91], [44,32], [93]), NTI33554449);

  return result_3087009632;

}

function HEX24_3087009622(vnode_3087009623) {
  var result_3087009624 = [];

    result_3087009624 = nimCopy(null, [86,78,111,100,101,40,39], NTI33554449);
    result_3087009624.push.apply(result_3087009624, (vnode_3087009623.text || []).concat([39,44,32] || []));;
    result_3087009624.push.apply(result_3087009624, (HEX24_2147483713(vnode_3087009623.bounds) || []).concat([44,32] || []));;
    if (!((vnode_3087009623.node == null))) {
    result_3087009624.push.apply(result_3087009624, (HEX24_3003123671(vnode_3087009623.node) || []).concat([44,32] || []));;
    }
    
    result_3087009624.push.apply(result_3087009624, (HEX24_3087009629(vnode_3087009623.colors) || []).concat([44,32] || []));;
    result_3087009624.push.apply(result_3087009624, [41]);;

  return result_3087009624;

}

function join_3087009948(a_3087009950, sep_3087009951) {
  var result_3087009952 = [];

    result_3087009952 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3087009967 = 0;
      var x_3087009968 = null;
      var i_2969578978 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578978 < (a_3087009950).length)) break Label3;
            i_3087009967 = i_2969578978;
            x_3087009968 = a_3087009950[chckIndx(i_2969578978, 0, (a_3087009950).length - 1)];
            if ((0 < i_3087009967)) {
            result_3087009952.push.apply(result_3087009952, sep_3087009951);;
            }
            
            result_3087009952.push.apply(result_3087009952, HEX24_3087009622(x_3087009968));;
            i_2969578978 = addInt(i_2969578978, 1);
          }
      };
    };

  return result_3087009952;

}

function HEX24_3087009945(nodeLayout_3087009946) {
  var result_3087009947 = [];

    result_3087009947 = nimCopy(null, join_3087009948(nodeLayout_3087009946.root.children, [10]), NTI33554449);

  return result_3087009947;

}

function HEX5BHEX5D_3019934699(t_3019934702, key_3019934703) {
  var result_3019934704 = null;

    result_3019934704 = t_3019934702.get(mapKeyJs_3019902675(key_3019934703));

  return result_3019934704;

}

function HEX24_3087009982(input_3087009983) {
  var result_3087009984 = [];

  BeforeRet: {
    var fmtRes_3087009989 = [mnewString(0)];
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,40]);;
    formatValue_3036676344(fmtRes_3087009989, 0, input_3087009983.id, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [44,32,110,111,100,101,58,32]);;
    formatValue_3087008590(fmtRes_3087009989, 0, input_3087009983.node, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [44,32,115,101,108,101,99,116,101,100,58,32]);;
    formatValue_3036676344(fmtRes_3087009989, 0, input_3087009983.selectedNode, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [44,32,114,101,118,105,115,105,111,110,58,32]);;
    formatValue_2701131945(fmtRes_3087009989, 0, input_3087009983.revision, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [41]);;
    result_3087009984 = nimCopy(null, fmtRes_3087009989[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087009984;

}

function computeNodeLayout_3019934745(ctxHEX60gensym129_3019934746, inputHEX60gensym129_3019934747, recordDependencyHEX60gensym129_3019934748) {
    var Temporary3;
    var Temporary5;

  var result_3019934749 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym129_3019934830 = getItem_3019906744(inputHEX60gensym129_3019934747);
    var keyHEX60gensym129_3019934831 = {Field0: nimCopy(null, itemHEX60gensym129_3019934830, NTI3036676201), Field1: 8};
    if (recordDependencyHEX60gensym129_3019934748) {
    recordDependency_3019906144(ctxHEX60gensym129_3019934746, itemHEX60gensym129_3019934830, 8);
    }
    
    var colorHEX60gensym129_3019934832 = nodeColor_3036678426(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, 0);
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [78,111,100,101,76,97,121,111,117,116], [32], reprEnum(colorHEX60gensym129_3019934832, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym129_3019934830));
    }
    
    if ((colorHEX60gensym129_3019934832 == 2)) {
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
    if (true) {
    markRed_3036679306(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, []);
    }
    
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    }
    else {
      if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
      }
      
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym129_3019934832 == 0)) {
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
    if (true) {
    markRed_3036679306(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, []);
    }
    
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831, true) == 0)) {
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym129_3019934746.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
      if (true) {
      markRed_3036679306(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, []);
      }
      
      if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
      }
      
      if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
      raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym129_3019934832 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,57,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym129_3019934746.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym129_3019934746.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym129_3019934746.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019934749;

}

function prev_3003121903(node_3003121904) {
  var result_3003121906 = ({val: null});

  BeforeRet: {
    if ((node_3003121904.parent == null)) {
    result_3003121906 = nimCopy(result_3003121906, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var i_3003121913 = index_3003121772(node_3003121904);
    if ((i_3003121913 <= 0)) {
    result_3003121906 = nimCopy(result_3003121906, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003121906 = nimCopy(result_3003121906, some_3003121890(HEX5BHEX5D_3003121748(node_3003121904.parent, subInt(i_3003121913, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_3003121906;

}

function HEX2BHEX3D_2969570284(aHEX60gensym79_2969570286, bHEX60gensym79_2969570287) {
    HEX2BHEX3D_2147483761(aHEX60gensym79_2969570286, "x", bHEX60gensym79_2969570287);
    HEX2BHEX3D_2147483761(aHEX60gensym79_2969570286, "y", bHEX60gensym79_2969570287);

  
}

function bounds_3087009979(nodeLayout_3087009980) {
  var result_3087009981 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

  BeforeRet: {
    result_3087009981 = nimCopy(result_3087009981, nodeLayout_3087009980.root.bounds, NTI2147483653);
    break BeforeRet;
  };

  return result_3087009981;

}

function insert_2969570296(x_2969570298, x_2969570298_Idx, item_2969570299, i_2969570300) {
    var it_2969570320 = {Field0: null, Field1: ({x: 0.0, y: 0.0})};
    x_2969570298[x_2969570298_Idx] = x_2969570298[x_2969570298_Idx] || []; x_2969570298[x_2969570298_Idx].splice(i_2969570300, 0, it_2969570320);
    x_2969570298[x_2969570298_Idx][chckIndx(i_2969570300, 0, (x_2969570298[x_2969570298_Idx]).length - 1)] = nimCopy(x_2969570298[x_2969570298_Idx][chckIndx(i_2969570300, 0, (x_2969570298[x_2969570298_Idx]).length - 1)], item_2969570299, NTI2969568663);

  
}

function next_3003121857(node_3003121858) {
  var result_3003121863 = ({val: null});

  BeforeRet: {
    if ((node_3003121858.parent == null)) {
    result_3003121863 = nimCopy(result_3003121863, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var i_3003121887 = index_3003121772(node_3003121858);
    if ((subInt(len_3003121752(node_3003121858.parent), 1) <= i_3003121887)) {
    result_3003121863 = nimCopy(result_3003121863, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003121863 = nimCopy(result_3003121863, some_3003121890(HEX5BHEX5D_3003121748(node_3003121858.parent, addInt(i_3003121887, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_3003121863;

}

function handleSelectedNodeChanged_2969569755(editor_2969569756) {
          
function HEX3Aanonymous_2969570157(t_2969570160) {
            var result_2969570163 = ({x: 0.0, y: 0.0});

              result_2969570163 = nimCopy(result_2969570163, measureText_2768240805(gEditor.platform, t_2969570160), NTI2164261152);

            return result_2969570163;

          }
            var Temporary9;
            var Temporary10;
              var Temporary11;
          
function HEX3Aanonymous_2969570258(t_2969570261) {
            var result_2969570264 = ({x: 0.0, y: 0.0});

              result_2969570264 = nimCopy(result_2969570264, measureText_2768240805(gEditor.platform, t_2969570261), NTI2164261152);

            return result_2969570264;

          }
            var Temporary15;
            var Temporary16;
              var Temporary17;
          
function HEX3Aanonymous_2969570435(t_2969570438) {
            var result_2969570441 = ({x: 0.0, y: 0.0});

              result_2969570441 = nimCopy(result_2969570441, measureText_2768240805(gEditor.platform, t_2969570438), NTI2164261152);

            return result_2969570441;

          }
    
function HEX3Aanonymous_2969570619(t_2969570622) {
      var result_2969570625 = ({x: 0.0, y: 0.0});

        result_2969570625 = nimCopy(result_2969570625, measureText_2768240805(gEditor.platform, t_2969570622), NTI2164261152);

      return result_2969570625;

    }

  BeforeRet: {
    if ((editor_2969569756.editor == null)) {
    break BeforeRet;
    }
    
    markDirty_2415919143(editor_2969569756);
    var indent_2969569769 = getOption_2818583576(editor_2969569756.editor, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_2969569779 = getOption_2818583615(editor_2969569756.editor, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_2969569789 = getOption_2818583615(editor_2969569756.editor, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    var node_2969569790 = node_2969569752(editor_2969569756);
    var margin_2969569791 = (5.0 * totalLineHeight_2768240810(editor_2969569756.editor.platform));
    var foundNode_2969569792 = false;
    var i_2969569793 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_2969569793 < (editor_2969569756.lastLayouts).length)) break Label2;
          try {
          var layout_2969569803 = editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field0;
          var offset_2969569804 = nimCopy(null, editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, NTI2164261152);
          if (contains_2969569863(layout_2969569803.nodeToVisualNode, node_2969569790.id)) {
          var visualNode_2969570062 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969569803.nodeToVisualNode, node_2969569790.id), NTI3087007774);
          var bounds_2969570072 = HEX2B_2130706587(absoluteBounds_3087009583(visualNode_2969570062), vec2_2164261725(0.0, offset_2969569804.y));
          if (!(intersects_2130706609(bounds_2969570072, editor_2969569756.lastBounds))) {
          break Label1;
          }
          
          if (((bounds_2969570072.y + bounds_2969570072.h) < margin_2969569791)) {
          var subbase_2969570073 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570073);
          editor_2969569756.scrollOffset = (margin_2969569791 - ((bounds_2969570072.y + bounds_2969570072.h) - offset_2969569804.y));
          }
          else {
          if (((editor_2969569756.lastBounds.h - margin_2969569791) < bounds_2969570072.y)) {
          var subbase_2969570074 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570074);
          editor_2969569756.scrollOffset = ((-((bounds_2969570072.y - offset_2969569804.y)) + editor_2969569756.lastBounds.h) - margin_2969569791);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2969569793 = addInt(i_2969569793, 1);
          }
        }
    };
    i_2969569793 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_2969569793 < (editor_2969569756.lastLayouts).length)) break Label5;
          try {
          var layout_2969570083 = editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field0;
          var offset_2969570084 = [nimCopy(null, editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, NTI2164261152)];
          var targetNode_2969570085 = node_2969569790;
          Label7: {
              Label8: while (true) {
              if (!(!((targetNode_2969570085 == null)) && !(contains_2969569863(layout_2969570083.nodeToVisualNode, targetNode_2969570085.id)))) break Label8;
                targetNode_2969570085 = targetNode_2969570085.parent;
              }
          };
          if (!((targetNode_2969570085 == null))) {
          var input_2969570164 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_3003121765(targetNode_2969570085), selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570157, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570083 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570164, true);
          foundNode_2969569792 = true;
          }
          else {
            if (!(node_2969569790.parent == editor_2969569756.document.rootNode)) Temporary10 = false; else {              var oHEX60gensym31_2969570171 = prev_3003121903(node_2969569790);
              if (!isSome_3003123546(oHEX60gensym31_2969570171)) Temporary11 = false; else {                var prev_2969570194 = get_3003123566(oHEX60gensym31_2969570171);
                Temporary11 = true;              }              Temporary10 = Temporary11;            }            if (!Temporary10) Temporary9 = false; else {              Temporary9 = contains_2969569863(layout_2969570083.nodeToVisualNode, prev_2969570194.id);            }          if (Temporary9) {
          var input_2969570265 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_3003121765(node_2969569790), selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570258, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570083 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570265, true);
          HEX2BHEX3D_2969570284(offset_2969570084[0], bounds_3087009979(layout_2969570083).h);
          insert_2969570296(editor_2969569756, "lastLayouts", {Field0: layout_2969570083, Field1: nimCopy(null, offset_2969570084[0], NTI2164261152)}, chckRange(addInt(i_2969569793, 1), 0, 2147483647));
          Label12: {
            var k_2969570337 = 0;
            var colontmp__2969578936 = 0;
            var colontmp__2969578937 = 0;
            colontmp__2969578936 = addInt(i_2969569793, 1);
            colontmp__2969578937 = (editor_2969569756.lastLayouts).length - 1;
            var res_2969578938 = colontmp__2969578936;
            Label13: {
                Label14: while (true) {
                if (!(res_2969578938 <= colontmp__2969578937)) break Label14;
                  k_2969570337 = res_2969578938;
                  HEX2BHEX3D_2147483761(editor_2969569756.lastLayouts[chckIndx(k_2969570337, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, "y", bounds_3087009979(layout_2969570083).h);
                  res_2969578938 = addInt(res_2969578938, 1);
                }
            };
          };
          foundNode_2969569792 = true;
          }
          else {
            if (!(node_2969569790.parent == editor_2969569756.document.rootNode)) Temporary16 = false; else {              var oHEX60gensym34_2969570348 = next_3003121857(node_2969569790);
              if (!isSome_3003123546(oHEX60gensym34_2969570348)) Temporary17 = false; else {                var next_2969570371 = get_3003123566(oHEX60gensym34_2969570348);
                Temporary17 = true;              }              Temporary16 = Temporary17;            }            if (!Temporary16) Temporary15 = false; else {              Temporary15 = contains_2969569863(layout_2969570083.nodeToVisualNode, next_2969570371.id);            }          if (Temporary15) {
          var input_2969570442 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_3003121765(node_2969569790), selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570435, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570083 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570442, true);
          insert_2969570296(editor_2969569756, "lastLayouts", {Field0: layout_2969570083, Field1: nimCopy(null, offset_2969570084[0], NTI2164261152)}, chckRange(i_2969569793, 0, 2147483647));
          Label18: {
            var k_2969570455 = 0;
            var colontmp__2969578941 = 0;
            colontmp__2969578941 = (editor_2969569756.lastLayouts).length - 1;
            var res_2969578942 = i_2969569793;
            Label19: {
                Label20: while (true) {
                if (!(res_2969578942 <= colontmp__2969578941)) break Label20;
                  k_2969570455 = res_2969578942;
                  HEX2BHEX3D_2147483761(editor_2969569756.lastLayouts[chckIndx(k_2969570455, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, "y", bounds_3087009979(layout_2969570083).h);
                  res_2969578942 = addInt(res_2969578942, 1);
                }
            };
          };
          foundNode_2969569792 = true;
          }
          }}
          if ((foundNode_2969569792 && contains_2969569863(layout_2969570083.nodeToVisualNode, node_2969569790.id))) {
          var visualNode_2969570605 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969570083.nodeToVisualNode, node_2969569790.id), NTI3087007774);
          var bounds_2969570615 = HEX2B_2130706587(absoluteBounds_3087009583(visualNode_2969570605), vec2_2164261725(0.0, offset_2969570084[0].y));
          if (!(intersects_2130706609(bounds_2969570615, rect_2147483666(0.0, 0.0, editor_2969569756.lastBounds.w, editor_2969569756.lastBounds.h)))) {
          break Label4;
          }
          
          if (((bounds_2969570615.y + bounds_2969570615.h) < margin_2969569791)) {
          var subbase_2969570616 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570616);
          editor_2969569756.scrollOffset = (margin_2969569791 - ((bounds_2969570615.y + bounds_2969570615.h) - offset_2969570084[0].y));
          }
          else {
          if (((editor_2969569756.lastBounds.h - margin_2969569791) < bounds_2969570615.y)) {
          var subbase_2969570617 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570617);
          editor_2969569756.scrollOffset = ((-((bounds_2969570615.y - offset_2969570084[0].y)) + editor_2969569756.lastBounds.h) - margin_2969569791);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2969569793 = addInt(i_2969569793, 1);
          }
        }
    };
    var subbase_2969570618 = subbase_3003121765(node_2969569790);
    var input_2969570626 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_2969570618, selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570619, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
    var layout_2969570627 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570626, true);
    if (contains_2969569863(layout_2969570627.nodeToVisualNode, node_2969569790.id)) {
    var visualNode_2969570773 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969570627.nodeToVisualNode, node_2969569790.id), NTI3087007774);
    var bounds_2969570774 = absoluteBounds_3087009583(visualNode_2969570773);
    editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570618);
    editor_2969569756.scrollOffset = (-(bounds_2969570774.y) + (editor_2969569756.lastBounds.h * 0.5));
    }
    
  };

  
}

function nodeHEX3D_2969570829(editor_2969570830, node_2969570831) {
  BeforeRet: {
    if ((node_2969570831 == editor_2969570830.selectedNode)) {
    break BeforeRet;
    }
    
    if (((node_2969570831.parent == null) || !((base_3003121758(node_2969570831) == editor_2969570830.document.rootNode)))) {
    break BeforeRet;
    }
    
    if (!((editor_2969570830.selectedNode == null))) {
    addLast_2969570853(editor_2969570830.selectionHistory, editor_2969570830.selectedNode);
    }
    
    if ((100 < len_2969570994(editor_2969570830.selectionHistory))) {
    var _ = popFirst_2969571003(editor_2969570830.selectionHistory);
    }
    
    editor_2969570830.selectedNode = node_2969570831;
    handleSelectedNodeChanged_2969569755(editor_2969570830);
  };

  
}

function moveCursor_2969578831(self_2969578832, direction_2969578833) {
  BeforeRet: {
    if ((direction_2969578833 < 0)) {
    if (isEditing_2969575154(self_2969578832)) {
    break BeforeRet;
    }
    
    var index_2969578834 = index_3003121772(node_2969569752(self_2969578832));
    if ((0 < index_2969578834)) {
    nodeHEX3D_2969570829(self_2969578832, HEX5BHEX5D_3003121748(node_2969569752(self_2969578832).parent, subInt(index_2969578834, 1)));
    }
    
    }
    else {
      if (isEditing_2969575154(self_2969578832)) {
      break BeforeRet;
      }
      
      var index_2969578835 = index_3003121772(node_2969569752(self_2969578832));
      if (((0 <= index_2969578835) && (index_2969578835 < subInt(len_3003121752(node_2969569752(self_2969578832).parent), 1)))) {
      nodeHEX3D_2969570829(self_2969578832, HEX5BHEX5D_3003121748(node_2969569752(self_2969578832).parent, addInt(index_2969578835, 1)));
      }
      
    }
    
  };

  
}

function moveCursorJsWrapper_2969578828(self_2969578887, direction_2969578888) {
    moveCursor_2969578831(self_2969578887, direction_2969578888);

  
}
editor_ast_prototype.moveCursor = function(direction_ /* : int */) { return (moveCursorJsWrapper_2969578828(this, direction_));};

function moveCursorUp_2969578990(self_2969578991) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969578991)) {
    break BeforeRet;
    }
    
    if (((!((node_2969569752(self_2969578991) == self_2969578991.document.rootNode)) && !((node_2969569752(self_2969578991).parent == self_2969578991.document.rootNode))) && !((node_2969569752(self_2969578991).parent == null)))) {
    nodeHEX3D_2969570829(self_2969578991, node_2969569752(self_2969578991).parent);
    }
    
  };

  
}

function moveCursorUpJsWrapper_2969578987(self_2969579031) {
    moveCursorUp_2969578990(self_2969579031);

  
}
editor_ast_prototype.moveCursorUp = function() { return (moveCursorUpJsWrapper_2969578987(this));};

function moveCursorDown_2969579045(self_2969579046) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969579046)) {
    break BeforeRet;
    }
    
    if ((0 < len_3003121752(node_2969569752(self_2969579046)))) {
    nodeHEX3D_2969570829(self_2969579046, HEX5BHEX5D_3003121748(node_2969569752(self_2969579046), 0));
    }
    
  };

  
}

function moveCursorDownJsWrapper_2969579042(self_2969579074) {
    moveCursorDown_2969579045(self_2969579074);

  
}
editor_ast_prototype.moveCursorDown = function() { return (moveCursorDownJsWrapper_2969579042(this));};

function getNextChild_2969569747(document_2969569748, node_2969569749, min_2969569750) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2969575793 = ({val: null});

  BeforeRet: {
    if ((len_3003121752(node_2969569749) == 0)) {
    result_2969575793 = nimCopy(result_2969575793, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2969575796 = node_2969569749;
      var pos_2969575797 = 0;
      var _ = pos_2969575797;
      if ((expr_2969575796.kind == 8)) {
        var oHEX60gensym128_2969575806 = computeSymbol_3019919344(ctx_2969567289, HEX5BHEX5D_3003121748(node_2969569749, 0), true);
        if (!isSome_3087009356(oHEX60gensym128_2969575806)) Temporary3 = false; else {          var sym_2969575829 = get_3087009376(oHEX60gensym128_2969575806);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2969575829.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2969575829;
      if (ConstSet158[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_3003121752(node_2969569749) == 3)) {
        if ((min_2969569750 == 0)) {
        result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 2)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569750 == 1)) {
        result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569750 == 2)) {
        result_2969575793 = nimCopy(result_2969575793, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_3003121752(node_2969569749) == 2)) {
        if ((min_2969569750 == 0)) {
        result_2969575793 = nimCopy(result_2969575793, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569750 == 1)) {
        result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((min_2969569750 < 0)) {
    result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 0)), NTI3003121783);
    break BeforeRet;
    }
    
    if ((subInt(len_3003121752(node_2969569749), 1) <= min_2969569750)) {
    result_2969575793 = nimCopy(result_2969575793, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, addInt(min_2969569750, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_2969575793;

}

function shouldSelectNode_2969575861(node_2969575862) {
  var result_2969575863 = false;

  BeforeRet: {
    switch (node_2969575862.kind) {
    case 8:
    case 7:
    case 12:
    case 13:
      result_2969575863 = (len_3003121752(node_2969575862) == 0);
      break BeforeRet;
      break;
    default: 
      result_2969575863 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2969575863;

}

function moveCursorNext_2969579088(self_2969579089) {
              var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579089)) {
    break BeforeRet;
    }
    
    var node_2969579090 = node_2969569752(self_2969579089);
    Label1: {
      var __2969579091 = 0;
      var n_2969579092 = null;
      var colontmp__2969579135 = null;
      colontmp__2969579135 = node_2969569752(self_2969579089);
      var n_2969579137 = colontmp__2969579135;
      var i_2969579138 = 0;
      var gotoChild_2969579139 = true;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579137 == null))) break Label3;
            if ((gotoChild_2969579139 && (0 < len_3003121752(n_2969579137)))) {
            n_2969579137 = get_3003123566(getNextChild_2969569747(self_2969579089.document, n_2969579137, -1));
            __2969579091 = i_2969579138;
            n_2969579092 = n_2969579137;
            Label4: {
              if (!(shouldSelectNode_2969575861(n_2969579092))) {
              break Label4;
              }
              
              if (!((n_2969579092 == node_2969569752(self_2969579089)))) {
              nodeHEX3D_2969570829(self_2969579089, n_2969579092);
              break Label1;
              }
              
            };
            gotoChild_2969579139 = true;
            }
            else {
              if (!!((n_2969579137.parent == null))) Temporary5 = false; else {                var oHEX60gensym66_2969579141 = getNextChild_2969569747(self_2969579089.document, n_2969579137.parent, index_3003121772(n_2969579137));
                if (!isSome_3003123546(oHEX60gensym66_2969579141)) Temporary6 = false; else {                  var ne_2969579142 = get_3003123566(oHEX60gensym66_2969579141);
                  Temporary6 = true;                }                Temporary5 = Temporary6;              }            if (Temporary5) {
            n_2969579137 = ne_2969579142;
            __2969579091 = i_2969579138;
            n_2969579092 = n_2969579137;
            Label7: {
              if (!(shouldSelectNode_2969575861(n_2969579092))) {
              break Label7;
              }
              
              if (!((n_2969579092 == node_2969569752(self_2969579089)))) {
              nodeHEX3D_2969570829(self_2969579089, n_2969579092);
              break Label1;
              }
              
            };
            gotoChild_2969579139 = true;
            }
            else {
              gotoChild_2969579139 = false;
              n_2969579137 = n_2969579137.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorNextJsWrapper_2969579085(self_2969579124) {
    moveCursorNext_2969579088(self_2969579124);

  
}
editor_ast_prototype.moveCursorNext = function() { return (moveCursorNextJsWrapper_2969579085(this));};

function getPrevChild_2969569742(document_2969569743, node_2969569744, max_2969569745) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2969575943 = ({val: null});

  BeforeRet: {
    if ((len_3003121752(node_2969569744) == 0)) {
    result_2969575943 = nimCopy(result_2969575943, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2969575946 = node_2969569744;
      var pos_2969575947 = 0;
      var _ = pos_2969575947;
      if ((expr_2969575946.kind == 8)) {
        var oHEX60gensym137_2969575956 = computeSymbol_3019919344(ctx_2969567289, HEX5BHEX5D_3003121748(node_2969569744, 0), true);
        if (!isSome_3087009356(oHEX60gensym137_2969575956)) Temporary3 = false; else {          var sym_2969575979 = get_3087009376(oHEX60gensym137_2969575956);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2969575979.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2969575979;
      if (ConstSet159[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_3003121752(node_2969569744) == 3)) {
        if ((max_2969569745 == 0)) {
        result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569745 == 1)) {
        result_2969575943 = nimCopy(result_2969575943, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569745 == 2)) {
        result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 2)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_3003121752(node_2969569744) == 2)) {
        if ((max_2969569745 == 0)) {
        result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569745 == 1)) {
        result_2969575943 = nimCopy(result_2969575943, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((max_2969569745 < 0)) {
    result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, subInt(len_3003121752(node_2969569744), 1))), NTI3003121783);
    break BeforeRet;
    }
    else {
    if ((max_2969569745 == 0)) {
    result_2969575943 = nimCopy(result_2969575943, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    }
    result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, subInt(max_2969569745, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_2969575943;

}

function moveCursorPrev_2969579149(self_2969579150) {
              var Temporary4;
                var Temporary5;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579150)) {
    break BeforeRet;
    }
    
    var node_2969579151 = node_2969569752(self_2969579150);
    Label1: {
      var n_2969579152 = null;
      var colontmp__2969579195 = null;
      colontmp__2969579195 = node_2969569752(self_2969579150);
      var gotoChild_2969579197 = false;
      var n_2969579198 = colontmp__2969579195;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579198 == null))) break Label3;
            if ((gotoChild_2969579197 && (0 < len_3003121752(n_2969579198)))) {
            n_2969579198 = get_3003123566(getPrevChild_2969569742(self_2969579150.document, n_2969579198, -1));
            gotoChild_2969579197 = true;
            }
            else {
              if (!!((n_2969579198.parent == null))) Temporary4 = false; else {                var oHEX60gensym70_2969579200 = getPrevChild_2969569742(self_2969579150.document, n_2969579198.parent, index_3003121772(n_2969579198));
                if (!isSome_3003123546(oHEX60gensym70_2969579200)) Temporary5 = false; else {                  var ne_2969579201 = get_3003123566(oHEX60gensym70_2969579200);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            n_2969579152 = n_2969579198;
            Label6: {
              if (!(shouldSelectNode_2969575861(n_2969579152))) {
              break Label6;
              }
              
              if (!((n_2969579152 == node_2969569752(self_2969579150)))) {
              nodeHEX3D_2969570829(self_2969579150, n_2969579152);
              break Label1;
              }
              
            };
            n_2969579198 = ne_2969579201;
            gotoChild_2969579197 = true;
            }
            else {
              n_2969579152 = n_2969579198;
              Label7: {
                if (!(shouldSelectNode_2969575861(n_2969579152))) {
                break Label7;
                }
                
                if (!((n_2969579152 == node_2969569752(self_2969579150)))) {
                nodeHEX3D_2969570829(self_2969579150, n_2969579152);
                break Label1;
                }
                
              };
              gotoChild_2969579197 = false;
              n_2969579198 = n_2969579198.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorPrevJsWrapper_2969579146(self_2969579184) {
    moveCursorPrev_2969579149(self_2969579184);

  
}
editor_ast_prototype.moveCursorPrev = function() { return (moveCursorPrevJsWrapper_2969579146(this));};

function getNextLine_2969576027(document_2969576028, node_2969576029) {
              var Temporary6;
              var Temporary7;

  var result_2969576031 = ({val: null});

  BeforeRet: {
    Label1: {
      var __2969576032 = 0;
      var n_2969576033 = null;
      var n_2969579275 = node_2969576029;
      var idx_2969579276 = -1;
      var i_2969579277 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969579276 == -1)) {
            __2969576032 = i_2969579277;
            n_2969576033 = n_2969579275;
            Label5: {
              if (((n_2969576033 == node_2969576029) || (n_2969576033.parent == null))) {
              break Label5;
              }
              
              if ((n_2969576033.parent.kind == 7)) {
              if (((n_2969576033.kind == 7) && (len_3003121752(n_2969576033) == 0))) {
              result_2969576031 = nimCopy(result_2969576031, some_3003121890(n_2969576033), NTI3003121783);
              break BeforeRet;
              }
              else {
              if (!((n_2969576033.kind == 7))) {
              result_2969576031 = nimCopy(result_2969576031, some_3003121890(n_2969576033), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576033.parent.kind == 9)) {
              var isElse_2969576068 = ((n_2969576033 == last_3003121922(n_2969576033.parent)) && !((modInt(len_3003121752(n_2969576033.parent), 2) == 0)));
              var isCondition_2969576069 = (!(isElse_2969576068) && (modInt(index_3003121772(n_2969576033), 2) == 0));
              if (((n_2969576033.kind == 7) && (len_3003121752(n_2969576033) == 0))) {
              result_2969576031 = nimCopy(result_2969576031, some_3003121890(n_2969576033), NTI3003121783);
              break BeforeRet;
              }
              else {
              if ((!((n_2969576033.kind == 7)) && (!(isCondition_2969576069) || (0 < index_3003121772(n_2969576033))))) {
              result_2969576031 = nimCopy(result_2969576031, some_3003121890(n_2969576033), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
            };
            }
            
            if ((addInt(idx_2969579276, 1) < len_3003121752(n_2969579275))) {
            n_2969579275 = HEX5BHEX5D_3003121748(n_2969579275, addInt(idx_2969579276, 1));
            idx_2969579276 = -1;
            }
            else {
              var oHEX60gensym55_2969579279 = next_3003121857(n_2969579275);
              if (!isSome_3003123546(oHEX60gensym55_2969579279)) Temporary7 = false; else {                var ne_2969579280 = get_3003123566(oHEX60gensym55_2969579279);
                Temporary7 = true;              }              if (!Temporary7) Temporary6 = false; else {                Temporary6 = !((n_2969579275 == null));              }            if (Temporary6) {
            n_2969579275 = ne_2969579280;
            idx_2969579276 = -1;
            }
            else {
            if (((!((n_2969579275.parent == null)) && !((n_2969579275 == null))) && !((n_2969579275.parent == null)))) {
            idx_2969579276 = index_3003121772(n_2969579275);
            n_2969579275 = n_2969579275.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2969579277 = addInt(i_2969579277, 1);
            }
          }
      };
    };
    result_2969576031 = nimCopy(result_2969576031, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576031;

}

function moveCursorNextLine_2969579208(self_2969579209) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579209)) {
    break BeforeRet;
    }
    
      var oHEX60gensym587_2969579212 = getNextLine_2969576027(self_2969579209.document, node_2969569752(self_2969579209));
      if (!isSome_3003123546(oHEX60gensym587_2969579212)) Temporary1 = false; else {        var next_2969579235 = get_3003123566(oHEX60gensym587_2969579212);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969579209, next_2969579235);
    }
    
  };

  
}

function moveCursorNextLineJsWrapper_2969579205(self_2969579263) {
    moveCursorNextLine_2969579208(self_2969579263);

  
}
editor_ast_prototype.moveCursorNextLine = function() { return (moveCursorNextLineJsWrapper_2969579205(this));};

function contains_1191183809(s_1191183813, value_1191183814) {
  var result_1191183815 = false;

    result_1191183815 = ((s_1191183813.a <= value_1191183814) && (value_1191183814 <= s_1191183813.b));

  return result_1191183815;

}

function getPrevLine_2969576086(document_2969576087, node_2969576088) {
              var Temporary4;

  var result_2969576090 = ({val: null});

  BeforeRet: {
    Label1: {
      var n_2969576091 = null;
      var idx_2969579353 = 0;
      var n_2969579354 = node_2969576088;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579354 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969579354), 1)), subInt(idx_2969579353, 1))) {
            n_2969579354 = HEX5BHEX5D_3003121748(n_2969579354, subInt(idx_2969579353, 1));
            idx_2969579353 = len_3003121752(n_2969579354);
            }
            else {
              var oHEX60gensym74_2969579356 = prev_3003121903(n_2969579354);
              if (!isSome_3003123546(oHEX60gensym74_2969579356)) Temporary4 = false; else {                var ne_2969579357 = get_3003123566(oHEX60gensym74_2969579356);
                Temporary4 = true;              }            if (Temporary4) {
            n_2969576091 = n_2969579354;
            Label5: {
              if (((n_2969576091 == node_2969576088) || (n_2969576091.parent == null))) {
              break Label5;
              }
              
              if ((n_2969576091.parent.kind == 7)) {
              if (((n_2969576091.kind == 7) && (len_3003121752(n_2969576091) == 0))) {
              result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
              break BeforeRet;
              }
              else {
              if (!((n_2969576091.kind == 7))) {
              result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576091.parent.kind == 9)) {
              var isElse_2969576126 = ((n_2969576091 == last_3003121922(n_2969576091.parent)) && !((modInt(len_3003121752(n_2969576091.parent), 2) == 0)));
              var isCondition_2969576127 = (!(isElse_2969576126) && (modInt(index_3003121772(n_2969576091), 2) == 0));
              if (((n_2969576091.kind == 7) && (len_3003121752(n_2969576091) == 0))) {
              result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
              break BeforeRet;
              }
              else {
              if ((!((n_2969576091.kind == 7)) && (!(isCondition_2969576127) || (0 < index_3003121772(n_2969576091))))) {
              result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576091.kind == 9)) {
              result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
              break BeforeRet;
              }
              
            };
            n_2969579354 = ne_2969579357;
            idx_2969579353 = len_3003121752(n_2969579354);
            }
            else {
              n_2969576091 = n_2969579354;
              Label6: {
                if (((n_2969576091 == node_2969576088) || (n_2969576091.parent == null))) {
                break Label6;
                }
                
                if ((n_2969576091.parent.kind == 7)) {
                if (((n_2969576091.kind == 7) && (len_3003121752(n_2969576091) == 0))) {
                result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
                break BeforeRet;
                }
                else {
                if (!((n_2969576091.kind == 7))) {
                result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2969576091.parent.kind == 9)) {
                var isElse_2969579358 = ((n_2969576091 == last_3003121922(n_2969576091.parent)) && !((modInt(len_3003121752(n_2969576091.parent), 2) == 0)));
                var isCondition_2969579359 = (!(isElse_2969579358) && (modInt(index_3003121772(n_2969576091), 2) == 0));
                if (((n_2969576091.kind == 7) && (len_3003121752(n_2969576091) == 0))) {
                result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
                break BeforeRet;
                }
                else {
                if ((!((n_2969576091.kind == 7)) && (!(isCondition_2969579359) || (0 < index_3003121772(n_2969576091))))) {
                result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2969576091.kind == 9)) {
                result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
                break BeforeRet;
                }
                
              };
              idx_2969579353 = index_3003121772(n_2969579354);
              n_2969579354 = n_2969579354.parent;
            }
            }
          }
      };
    };
    result_2969576090 = nimCopy(result_2969576090, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576090;

}

function moveCursorPrevLine_2969579286(self_2969579287) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579287)) {
    break BeforeRet;
    }
    
      var oHEX60gensym595_2969579290 = getPrevLine_2969576086(self_2969579287.document, node_2969569752(self_2969579287));
      if (!isSome_3003123546(oHEX60gensym595_2969579290)) Temporary1 = false; else {        var prev_2969579313 = get_3003123566(oHEX60gensym595_2969579290);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969579287, prev_2969579313);
    }
    
  };

  
}

function moveCursorPrevLineJsWrapper_2969579283(self_2969579341) {
    moveCursorPrevLine_2969579286(self_2969579341);

  
}
editor_ast_prototype.moveCursorPrevLine = function() { return (moveCursorPrevLineJsWrapper_2969579283(this));};

function selectContaining_2969579365(self_2969579366, container_2969579367) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579366)) {
    break BeforeRet;
    }
    
    switch (toJSStr(container_2969579367)) {
    case "function":
        var oHEX60gensym604_2969579370 = findWithParentRec_3003123589(node_2969569752(self_2969579366), 11);
        if (!isSome_3003123546(oHEX60gensym604_2969579370)) Temporary1 = false; else {          var child_2969579393 = get_3003123566(oHEX60gensym604_2969579370);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2969570829(self_2969579366, child_2969579393.parent);
      }
      
      break;
    case "const-decl":
        var oHEX60gensym605_2969579396 = findWithParentRec_3003123589(node_2969569752(self_2969579366), 4);
        if (!isSome_3003123546(oHEX60gensym605_2969579396)) Temporary2 = false; else {          var child_2969579419 = get_3003123566(oHEX60gensym605_2969579396);
          Temporary2 = true;        }      if (Temporary2) {
      nodeHEX3D_2969570829(self_2969579366, child_2969579419.parent);
      }
      
      break;
    case "line":
        var oHEX60gensym606_2969579422 = findWithParentRec_3003123589(node_2969569752(self_2969579366), 7);
        if (!isSome_3003123546(oHEX60gensym606_2969579422)) Temporary3 = false; else {          var child_2969579445 = get_3003123566(oHEX60gensym606_2969579422);
          Temporary3 = true;        }      if (Temporary3) {
      nodeHEX3D_2969570829(self_2969579366, child_2969579445);
      }
      
      break;
    case "node-list":
        var oHEX60gensym607_2969579448 = findWithParentRec_3003123589(node_2969569752(self_2969579366), 7);
        if (!isSome_3003123546(oHEX60gensym607_2969579448)) Temporary4 = false; else {          var child_2969579471 = get_3003123566(oHEX60gensym607_2969579448);
          Temporary4 = true;        }      if (Temporary4) {
      nodeHEX3D_2969570829(self_2969579366, child_2969579471.parent);
      }
      
      break;
    case "if":
        var oHEX60gensym608_2969579474 = findWithParentRec_3003123589(node_2969569752(self_2969579366), 9);
        if (!isSome_3003123546(oHEX60gensym608_2969579474)) Temporary5 = false; else {          var child_2969579497 = get_3003123566(oHEX60gensym608_2969579474);
          Temporary5 = true;        }      if (Temporary5) {
      nodeHEX3D_2969570829(self_2969579366, child_2969579497.parent);
      }
      
      break;
    case "while":
        var oHEX60gensym609_2969579500 = findWithParentRec_3003123589(node_2969569752(self_2969579366), 10);
        if (!isSome_3003123546(oHEX60gensym609_2969579500)) Temporary6 = false; else {          var child_2969579523 = get_3003123566(oHEX60gensym609_2969579500);
          Temporary6 = true;        }      if (Temporary6) {
      nodeHEX3D_2969570829(self_2969579366, child_2969579523.parent);
      }
      
      break;
    default: 
      break;
    }
  };

  
}

function selectContainingJsWrapper_2969579362(self_2969579552, container_2969579553) {
    selectContaining_2969579365(self_2969579552, container_2969579553);

  
}
editor_ast_prototype.selectContaining = function(container_ /* : string */) { return (selectContainingJsWrapper_2969579362(this, container_ == undefined ? undefined : cstrToNimstr(container_)));};

function del_3019955566(t_3019955569, key_3019955570) {
    t_3019955569.delete(mapKeyJs_3036678533(key_3019955570));

  
}

function deleteNode_3019955496(ctx_3019955497, node_3019955498) {
          var Temporary3;
            var Temporary4;

    ctx_3019955497.depGraph.revision = addInt(ctx_3019955497.depGraph.revision, 1);
    del_3019955566(ctx_3019955497.depGraph.changed, {Field0: getItem_3019906357(node_3019955498), Field1: -1});
    if (!((node_3019955498.parent == null))) {
    HEX5BHEX5DHEX3D_3036679291(ctx_3019955497.depGraph.changed, {Field0: getItem_3019906357(node_3019955498.parent), Field1: -1}, ctx_3019955497.depGraph.revision);
    }
    
    var parent_3019955652 = node_3019955498.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3019955652 == null))) Temporary3 = false; else {            var oHEX60gensym568_3019955659 = findWithParentRec_3003123589(parent_3019955652, 11);
            if (!isSome_3003123546(oHEX60gensym568_3019955659)) Temporary4 = false; else {              var child_3019955705 = get_3003123566(oHEX60gensym568_3019955659);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3019955706 = child_3019955705.parent;
          HEX5BHEX5DHEX3D_3036679291(ctx_3019955497.depGraph.changed, {Field0: getItem_3019906357(functionDefinition_3019955706), Field1: -1}, ctx_3019955497.depGraph.revision);
          parent_3019955652 = functionDefinition_3019955706.parent;
        }
    };

  
}

function rawGet_3221225549(t_3221225552, key_3221225553, hc_3221225554, hc_3221225554_Idx) {
  var result_3221225555 = 0;

  BeforeRet: {
    hc_3221225554[hc_3221225554_Idx] = hash_2046820630(key_3221225553);
    if ((hc_3221225554[hc_3221225554_Idx] == 0)) {
    hc_3221225554[hc_3221225554_Idx] = 314159265;
    }
    
    if (((t_3221225552.data).length == 0)) {
    result_3221225555 = -1;
    break BeforeRet;
    }
    
    var h_3221225607 = (hc_3221225554[hc_3221225554_Idx] & (t_3221225552.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3221225552.data[chckIndx(h_3221225607, 0, (t_3221225552.data).length - 1)].Field0)) break Label2;
          if (((t_3221225552.data[chckIndx(h_3221225607, 0, (t_3221225552.data).length - 1)].Field0 == hc_3221225554[hc_3221225554_Idx]) && HEX3DHEX3D_2046820626(t_3221225552.data[chckIndx(h_3221225607, 0, (t_3221225552.data).length - 1)].Field1, key_3221225553))) {
          result_3221225555 = h_3221225607;
          break BeforeRet;
          }
          
          h_3221225607 = nextTry_1308622883(h_3221225607, (t_3221225552.data).length - 1);
        }
    };
    result_3221225555 = subInt(-1, h_3221225607);
  };

  return result_3221225555;

}

function del_2969574288(t_2969574291, key_2969574292) {
    var hc_2969574293 = [0];
    var i_2969574300 = rawGet_3221225549(t_2969574291, key_2969574292, hc_2969574293, 0);
    var mskHEX60gensym36_2969574304 = (t_2969574291.data).length - 1;
    if ((0 <= i_2969574300)) {
    t_2969574291.counter = subInt(t_2969574291.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2969574311 = i_2969574300;
            var rHEX60gensym36_2969574312 = jHEX60gensym36_2969574311;
            t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field0 = 0;
            t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field1 = nimCopy(t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2969574300 = (addInt(i_2969574300, 1) & mskHEX60gensym36_2969574304);
                  if (isEmpty_1308622877(t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2969574312 = (t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field0 & mskHEX60gensym36_2969574304);
                  if (!(((((rHEX60gensym36_2969574312 <= i_2969574300) && (jHEX60gensym36_2969574311 < rHEX60gensym36_2969574312)) || ((jHEX60gensym36_2969574311 < rHEX60gensym36_2969574312) && (i_2969574300 < jHEX60gensym36_2969574311))) || ((i_2969574300 < jHEX60gensym36_2969574311) && (rHEX60gensym36_2969574312 <= i_2969574300))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2969574291.data[chckIndx(jHEX60gensym36_2969574311, 0, (t_2969574291.data).length - 1)] = nimCopy(t_2969574291.data[chckIndx(jHEX60gensym36_2969574311, 0, (t_2969574291.data).length - 1)], t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)], NTI2969568631);
          }
      };
    };
    }
    

  
}

function handleNodeDelete_2969573874(doc_2969573875, node_2969573876) {
              var Temporary8;

    var fmtRes_2969573881 = [mnewString(0)];
    fmtRes_2969573881[0].push.apply(fmtRes_2969573881[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,100,101,108,101,116,101,100,58,32]);;
    formatValue_3087008590(fmtRes_2969573881, 0, node_2969573876, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969573881[0], NTI33554449)]);
    Label1: {
      var child_2969573890 = null;
      var i_2969579614 = 0;
      var L_2969579615 = (node_2969573876.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579614 < L_2969579615)) break Label3;
            child_2969573890 = node_2969573876.children[chckIndx(i_2969579614, 0, (node_2969573876.children).length - 1)];
            handleNodeDelete_2969573874(doc_2969573875, child_2969573890);
            i_2969579614 = addInt(i_2969579614, 1);
            if (!(((node_2969573876.children).length == L_2969579615))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    deleteNode_3019955496(ctx_2969567289, node_2969573876);
    Label4: {
      var i_2969573924 = 0;
      var update_2969573925 = null;
      var i_2969579624 = 0;
      var L_2969579625 = (ctx_2969567289.updateFunctions).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969579624 < L_2969579625)) break Label6;
            i_2969573924 = i_2969579624;
            update_2969573925 = ctx_2969567289.updateFunctions[chckIndx(i_2969579624, 0, (ctx_2969567289.updateFunctions).length - 1)];
            var key_2969573926 = {Field0: getItem_3019906357(node_2969573876), Field1: i_2969573924};
            if (contains_3019940149(ctx_2969567289.diagnosticsPerQuery, key_2969573926)) {
            Label7: {
              var id_2969574075 = ({padding: 0, time: 0, fuzz: 0, count: 0});
              var colontmp__2969579619 = [];
              colontmp__2969579619 = (Temporary8 = HEX5BHEX5D_3019940594(ctx_2969567289.diagnosticsPerQuery, key_2969573926), Temporary8)[0][Temporary8[1]];
              var i_2969579620 = 0;
              var L_2969579621 = (colontmp__2969579619).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_2969579620 < L_2969579621)) break Label10;
                    id_2969574075 = colontmp__2969579619[chckIndx(i_2969579620, 0, (colontmp__2969579619).length - 1)];
                    del_3019941318(HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, id_2969574075).queries, key_2969573926);
                    i_2969579620 = addInt(i_2969579620, 1);
                    if (!(((colontmp__2969579619).length == L_2969579621))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            del_3019948061(ctx_2969567289.diagnosticsPerQuery, key_2969573926);
            }
            
            i_2969579624 = addInt(i_2969579624, 1);
            if (!(((ctx_2969567289.updateFunctions).length == L_2969579625))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    del_2969574288(doc_2969573875.nodes, node_2969573876.id);

  
}

function HEX5BHEX5DHEX3D_3003121928(node_3003121929, index_3003121930, newNode_3003121931) {
    newNode_3003121931.parent = node_3003121929;
    node_3003121929.children[chckIndx(index_3003121930, 0, (node_3003121929.children).length - 1)].parent = null;
    node_3003121929.children[chckIndx(index_3003121930, 0, (node_3003121929.children).length - 1)] = newNode_3003121931;

  
}

function HEX5BHEX5DHEX3D_3019906522(t_3019906525, key_3019906526, val_3019906527) {
    t_3019906525.set(mapKeyJs_3019899588(key_3019906526), val_3019906527);

  
}

function insertNode_3019954804(ctx_3019954805, node_3019954806) {
              var Temporary5;
          var Temporary8;
            var Temporary9;

    ctx_3019954805.depGraph.revision = addInt(ctx_3019954805.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(node_3019954806), Field1: -1}, ctx_3019954805.depGraph.revision);
    if (!((node_3019954806.parent == null))) {
    HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(node_3019954806.parent), Field1: -1}, ctx_3019954805.depGraph.revision);
    }
    
    HEX5BHEX5DHEX3D_3019906522(ctx_3019954805.itemsAstNode, getItem_3019906357(node_3019954806), node_3019954806);
    Label1: {
      var key_3019955022 = 0;
      var child_3019955023 = null;
      var n_2969579647 = node_3019954806;
      var idx_2969579648 = -1;
      var i_2969579649 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969579648 == -1)) {
            var colontmp__2969579652 = nimCopy(null, {Field0: i_2969579649, Field1: n_2969579647}, NTI3003123002);
            key_3019955022 = colontmp__2969579652["Field0"];
            child_3019955023 = colontmp__2969579652["Field1"];
            HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(child_3019955023), Field1: -1}, ctx_3019954805.depGraph.revision);
            HEX5BHEX5DHEX3D_3019906522(ctx_3019954805.itemsAstNode, getItem_3019906357(child_3019955023), child_3019955023);
            }
            
            if ((addInt(idx_2969579648, 1) < len_3003121752(n_2969579647))) {
            n_2969579647 = HEX5BHEX5D_3003121748(n_2969579647, addInt(idx_2969579648, 1));
            idx_2969579648 = -1;
            }
            else {
              var oHEX60gensym74_2969579653 = next_3003121857(n_2969579647);
              if (!isSome_3003123546(oHEX60gensym74_2969579653)) Temporary5 = false; else {                var ne_2969579654 = get_3003123566(oHEX60gensym74_2969579653);
                Temporary5 = true;              }            if (Temporary5) {
            n_2969579647 = ne_2969579654;
            idx_2969579648 = -1;
            }
            else {
            if ((!((n_2969579647.parent == null)) && !((n_2969579647.parent == node_3019954806)))) {
            idx_2969579648 = index_3003121772(n_2969579647);
            n_2969579647 = n_2969579647.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2969579649 = addInt(i_2969579649, 1);
            }
          }
      };
    };
    var parent_3019955162 = node_3019954806.parent;
    Label6: {
        Label7: while (true) {
          if (!!((parent_3019955162 == null))) Temporary8 = false; else {            var oHEX60gensym562_3019955169 = findWithParentRec_3003123589(parent_3019955162, 11);
            if (!isSome_3003123546(oHEX60gensym562_3019955169)) Temporary9 = false; else {              var child_3019955215 = get_3003123566(oHEX60gensym562_3019955169);
              Temporary9 = true;            }            Temporary8 = Temporary9;          }        if (!Temporary8) break Label7;
          var functionDefinition_3019955216 = child_3019955215.parent;
          HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(functionDefinition_3019955216), Field1: -1}, ctx_3019954805.depGraph.revision);
          parent_3019955162 = functionDefinition_3019955216.parent;
        }
    };

  
}

function mustRehash_2969572614(t_2969572616) {
  var result_2969572617 = false;

    if (!((t_2969572616.counter < (t_2969572616.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2969572617 = ((mulInt((t_2969572616.data).length, 2) < mulInt(t_2969572616.counter, 3)) || (subInt((t_2969572616.data).length, t_2969572616.counter) < 4));

  return result_2969572617;

}

function rawInsert_2969573223(t_2969573227, data_2969573228, data_2969573228_Idx, key_2969573229, val_2969573230, hc_2969573231, h_2969573232) {
    data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field1 = nimCopy(data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field1, key_2969573229, NTI2046820355);
    data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field2 = val_2969573230;
    data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field0 = hc_2969573231;

  
}

function enlarge_2969572817(t_2969572820) {
    var n_2969572823 = [];
    n_2969572823 = new Array(chckRange(mulInt((t_2969572820.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2969572820.data).length, 2), 0, 2147483647) ; ++i) { n_2969572823[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2969572820.data; t_2969572820.data = n_2969572823; n_2969572823 = Temporary1;    Label2: {
      var i_2969572903 = 0;
      var colontmp__2969579658 = 0;
      colontmp__2969579658 = (n_2969572823).length - 1;
      var res_2969579659 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969579659 <= colontmp__2969579658)) break Label4;
            i_2969572903 = res_2969579659;
            var eh_2969572981 = n_2969572823[chckIndx(i_2969572903, 0, (n_2969572823).length - 1)].Field0;
            if (isFilled_1308622880(eh_2969572981)) {
            var j_2969572985 = (eh_2969572981 & (t_2969572820.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2969572820.data[chckIndx(j_2969572985, 0, (t_2969572820.data).length - 1)].Field0)) break Label6;
                  j_2969572985 = nextTry_1308622883(j_2969572985, (t_2969572820.data).length - 1);
                }
            };
            rawInsert_2969573223(t_2969572820, t_2969572820, "data", n_2969572823[chckIndx(i_2969572903, 0, (n_2969572823).length - 1)].Field1, n_2969572823[chckIndx(i_2969572903, 0, (n_2969572823).length - 1)].Field2, eh_2969572981, j_2969572985);
            }
            
            res_2969579659 = addInt(res_2969579659, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2969573464(t_2969573467, key_2969573468, hc_2969573469) {
  var result_2969573470 = 0;

  BeforeRet: {
    if (((t_2969573467.data).length == 0)) {
    result_2969573470 = -1;
    break BeforeRet;
    }
    
    var h_2969573537 = (hc_2969573469 & (t_2969573467.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2969573467.data[chckIndx(h_2969573537, 0, (t_2969573467.data).length - 1)].Field0)) break Label2;
          if (((t_2969573467.data[chckIndx(h_2969573537, 0, (t_2969573467.data).length - 1)].Field0 == hc_2969573469) && HEX3DHEX3D_2046820626(t_2969573467.data[chckIndx(h_2969573537, 0, (t_2969573467.data).length - 1)].Field1, key_2969573468))) {
          result_2969573470 = h_2969573537;
          break BeforeRet;
          }
          
          h_2969573537 = nextTry_1308622883(h_2969573537, (t_2969573467.data).length - 1);
        }
    };
    result_2969573470 = subInt(-1, h_2969573537);
  };

  return result_2969573470;

}

function HEX5BHEX5DHEX3D_2969572385(t_2969572388, key_2969572389, val_2969572390) {
    if (((t_2969572388.data).length == 0)) {
    var correctSizeHEX60gensym97_2969572455 = slotsNeeded_1308622891(32);
    t_2969572388.counter = 0;
    t_2969572388.data = new Array(chckRange(correctSizeHEX60gensym97_2969572455, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym97_2969572455, 0, 2147483647) ; ++i) { t_2969572388.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2969572460 = [0];
    var index_2969572467 = rawGet_3221225549(t_2969572388, key_2969572389, hc_2969572460, 0);
    if ((0 <= index_2969572467)) {
    t_2969572388.data[chckIndx(index_2969572467, 0, (t_2969572388.data).length - 1)].Field2 = val_2969572390;
    }
    else {
      if (((t_2969572388.data).length == 0)) {
      var correctSizeHEX60gensym100_2969572609 = slotsNeeded_1308622891(32);
      t_2969572388.counter = 0;
      t_2969572388.data = new Array(chckRange(correctSizeHEX60gensym100_2969572609, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym100_2969572609, 0, 2147483647) ; ++i) { t_2969572388.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2969572614(t_2969572388)) {
      enlarge_2969572817(t_2969572388);
      index_2969572467 = rawGetKnownHC_2969573464(t_2969572388, key_2969572389, hc_2969572460[0]);
      }
      
      index_2969572467 = subInt(-1, index_2969572467);
      rawInsert_2969573223(t_2969572388, t_2969572388, "data", key_2969572389, val_2969572390, hc_2969572460[0], index_2969572467);
      t_2969572388.counter = addInt(t_2969572388.counter, 1);
    }
    

  
}

function handleNodeInserted_2969571616(doc_2969571617, node_2969571618) {
              var Temporary8;

    var fmtRes_2969572306 = [mnewString(0)];
    fmtRes_2969572306[0].push.apply(fmtRes_2969572306[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008590(fmtRes_2969572306, 0, node_2969571618, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969572306[0], NTI33554449)]);
    insertNode_3019954804(ctx_2969567289, node_2969571618);
    Label1: {
      var handler_2969572334 = null;
      var i_2969579633 = 0;
      var L_2969579634 = (doc_2969571617.onNodeInserted).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579633 < L_2969579634)) break Label3;
            handler_2969572334 = doc_2969571617.onNodeInserted[chckIndx(i_2969579633, 0, (doc_2969571617.onNodeInserted).length - 1)];
            handler_2969572334(doc_2969571617, node_2969571618);
            i_2969579633 = addInt(i_2969579633, 1);
            if (!(((doc_2969571617.onNodeInserted).length == L_2969579634))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_2969572385(doc_2969571617.nodes, node_2969571618.id, node_2969571618);
    Label4: {
      var key_2969573790 = 0;
      var child_2969573791 = null;
      var n_2969579638 = node_2969571618;
      var idx_2969579639 = -1;
      var i_2969579640 = 0;
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            try {
            if ((idx_2969579639 == -1)) {
            var colontmp__2969579643 = nimCopy(null, {Field0: i_2969579640, Field1: n_2969579638}, NTI3003123002);
            key_2969573790 = colontmp__2969579643["Field0"];
            child_2969573791 = colontmp__2969579643["Field1"];
            HEX5BHEX5DHEX3D_2969572385(doc_2969571617.nodes, child_2969573791.id, child_2969573791);
            }
            
            if ((addInt(idx_2969579639, 1) < len_3003121752(n_2969579638))) {
            n_2969579638 = HEX5BHEX5D_3003121748(n_2969579638, addInt(idx_2969579639, 1));
            idx_2969579639 = -1;
            }
            else {
              var oHEX60gensym74_2969579644 = next_3003121857(n_2969579638);
              if (!isSome_3003123546(oHEX60gensym74_2969579644)) Temporary8 = false; else {                var ne_2969579645 = get_3003123566(oHEX60gensym74_2969579644);
                Temporary8 = true;              }            if (Temporary8) {
            n_2969579638 = ne_2969579645;
            idx_2969579639 = -1;
            }
            else {
            if ((!((n_2969579638.parent == null)) && !((n_2969579638.parent == node_2969571618)))) {
            idx_2969579639 = index_3003121772(n_2969579638);
            n_2969579638 = n_2969579638.parent;
            }
            else {
              break Label5;
            }
            }}
            } finally {
            i_2969579640 = addInt(i_2969579640, 1);
            }
          }
      };
    };

  
}

function replaceNode_2969576151(document_2969576152, node_2969576153, newNode_2969576154) {
  var result_2969576155 = null;

  BeforeRet: {
    if ((node_2969576153.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    var idx_2969576161 = index_3003121772(node_2969576153);
    document_2969576152.undoOps.push({kind: 1, parent: node_2969576153.parent, idx: idx_2969576161, node: node_2969576153, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969576152.redoOps = nimCopy(null, [], NTI2969572196);
    handleNodeDelete_2969573874(document_2969576152, node_2969576153);
    HEX5BHEX5DHEX3D_3003121928(node_2969576153.parent, idx_2969576161, newNode_2969576154);
    handleNodeInserted_2969571616(document_2969576152, newNode_2969576154);
    result_2969576155 = newNode_2969576154;
    break BeforeRet;
  };

  return result_2969576155;

}

function delete_3003121936(x_3003121938, x_3003121938_Idx, i_3003121939) {
    x_3003121938[x_3003121938_Idx].splice(i_3003121939, 1);

  
}

function delete_3003121932(node_3003121933, index_3003121934) {
  var result_3003121935 = null;

  BeforeRet: {
    if (((index_3003121934 < 0) || (len_3003121752(node_3003121933) <= index_3003121934))) {
    result_3003121935 = node_3003121933;
    break BeforeRet;
    }
    
    HEX5BHEX5D_3003121748(node_3003121933, index_3003121934).parent = null;
    delete_3003121936(node_3003121933, "children", chckRange(index_3003121934, 0, 2147483647));
    if ((index_3003121934 < len_3003121752(node_3003121933))) {
    result_3003121935 = HEX5BHEX5D_3003121748(node_3003121933, index_3003121934);
    break BeforeRet;
    }
    else {
    if ((0 < len_3003121752(node_3003121933))) {
    result_3003121935 = HEX5BHEX5D_3003121748(node_3003121933, subInt(index_3003121934, 1));
    break BeforeRet;
    }
    else {
      result_3003121935 = node_3003121933;
      break BeforeRet;
    }
    }
  };

  return result_3003121935;

}

function deleteNode_2969576215(document_2969576216, node_2969576217) {
  var result_2969576218 = null;

  BeforeRet: {
    if ((node_2969576217.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    if (((node_2969576217.parent == document_2969576216.rootNode) && (len_3003121752(document_2969576216.rootNode) == 1))) {
    result_2969576218 = replaceNode_2969576151(document_2969576216, node_2969576217, {kind: 0, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []});
    break BeforeRet;
    }
    
    document_2969576216.undoOps.push({kind: 0, parent: node_2969576217.parent, idx: index_3003121772(node_2969576217), node: node_2969576217, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969576216.redoOps = nimCopy(null, [], NTI2969572196);
    handleNodeDelete_2969573874(document_2969576216, node_2969576217);
    result_2969576218 = delete_3003121932(node_2969576217.parent, index_3003121772(node_2969576217));
    break BeforeRet;
  };

  return result_2969576218;

}

function deleteSelected_2969579572(self_2969579573) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969579573)) {
    break BeforeRet;
    }
    
    self_2969579573.deletedNode = nimCopy(self_2969579573.deletedNode, some_3003121890(node_2969569752(self_2969579573)), NTI3003121783);
    nodeHEX3D_2969570829(self_2969579573, deleteNode_2969576215(self_2969579573.document, node_2969569752(self_2969579573)));
  };

  
}

function deleteSelectedJsWrapper_2969579569(self_2969579604) {
    deleteSelected_2969579572(self_2969579604);

  
}
editor_ast_prototype.deleteSelected = function() { return (deleteSelectedJsWrapper_2969579569(this));};

function initTable_3003123500(initialSize_3003123503) {
  var result_3003123504 = ({data: [], counter: 0});

    var correctSizeHEX60gensym29_3003123506 = slotsNeeded_1308622891(chckRange(initialSize_3003123503, 0, 2147483647));
    result_3003123504.counter = 0;
    result_3003123504.data = new Array(chckRange(correctSizeHEX60gensym29_3003123506, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym29_3003123506, 0, 2147483647) ; ++i) { result_3003123504.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }
  return result_3003123504;

}

function rawGet_3003122071(t_3003122074, key_3003122075, hc_3003122076, hc_3003122076_Idx) {
  var result_3003122077 = 0;

  BeforeRet: {
    hc_3003122076[hc_3003122076_Idx] = hash_2046820630(key_3003122075);
    if ((hc_3003122076[hc_3003122076_Idx] == 0)) {
    hc_3003122076[hc_3003122076_Idx] = 314159265;
    }
    
    if (((t_3003122074.data).length == 0)) {
    result_3003122077 = -1;
    break BeforeRet;
    }
    
    var h_3003122128 = (hc_3003122076[hc_3003122076_Idx] & (t_3003122074.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field0)) break Label2;
          if (((t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field0 == hc_3003122076[hc_3003122076_Idx]) && HEX3DHEX3D_2046820626(t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field1, key_3003122075))) {
          result_3003122077 = h_3003122128;
          break BeforeRet;
          }
          
          h_3003122128 = nextTry_1308622883(h_3003122128, (t_3003122074.data).length - 1);
        }
    };
    result_3003122077 = subInt(-1, h_3003122128);
  };

  return result_3003122077;

}

function mustRehash_3003122416(t_3003122418) {
  var result_3003122419 = false;

    if (!((t_3003122418.counter < (t_3003122418.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003122419 = ((mulInt((t_3003122418.data).length, 2) < mulInt(t_3003122418.counter, 3)) || (subInt((t_3003122418.data).length, t_3003122418.counter) < 4));

  return result_3003122419;

}

function rawInsert_3003122865(t_3003122869, data_3003122870, data_3003122870_Idx, key_3003122871, val_3003122872, hc_3003122873, h_3003122874) {
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field1 = nimCopy(data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field1, key_3003122871, NTI2046820355);
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field2 = nimCopy(data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field2, val_3003122872, NTI2046820355);
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field0 = hc_3003122873;

  
}

function enlarge_3003122571(t_3003122574) {
    var n_3003122577 = [];
    n_3003122577 = new Array(chckRange(mulInt((t_3003122574.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003122574.data).length, 2), 0, 2147483647) ; ++i) { n_3003122577[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    var Temporary1 = t_3003122574.data; t_3003122574.data = n_3003122577; n_3003122577 = Temporary1;    Label2: {
      var i_3003122641 = 0;
      var colontmp__2969579720 = 0;
      colontmp__2969579720 = (n_3003122577).length - 1;
      var res_2969579721 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969579721 <= colontmp__2969579720)) break Label4;
            i_3003122641 = res_2969579721;
            var eh_3003122695 = n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003122695)) {
            var j_3003122699 = (eh_3003122695 & (t_3003122574.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003122574.data[chckIndx(j_3003122699, 0, (t_3003122574.data).length - 1)].Field0)) break Label6;
                  j_3003122699 = nextTry_1308622883(j_3003122699, (t_3003122574.data).length - 1);
                }
            };
            rawInsert_3003122865(t_3003122574, t_3003122574, "data", n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field1, n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field2, eh_3003122695, j_3003122699);
            }
            
            res_2969579721 = addInt(res_2969579721, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003123034(t_3003123037, key_3003123038, hc_3003123039) {
  var result_3003123040 = 0;

  BeforeRet: {
    if (((t_3003123037.data).length == 0)) {
    result_3003123040 = -1;
    break BeforeRet;
    }
    
    var h_3003123091 = (hc_3003123039 & (t_3003123037.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field0)) break Label2;
          if (((t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field0 == hc_3003123039) && HEX3DHEX3D_2046820626(t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field1, key_3003123038))) {
          result_3003123040 = h_3003123091;
          break BeforeRet;
          }
          
          h_3003123091 = nextTry_1308622883(h_3003123091, (t_3003123037.data).length - 1);
        }
    };
    result_3003123040 = subInt(-1, h_3003123091);
  };

  return result_3003123040;

}

function HEX5BHEX5DHEX3D_3003122010(t_3003122013, key_3003122014, val_3003122015) {
    if (((t_3003122013.data).length == 0)) {
    var correctSizeHEX60gensym15_3003122065 = slotsNeeded_1308622891(32);
    t_3003122013.counter = 0;
    t_3003122013.data = new Array(chckRange(correctSizeHEX60gensym15_3003122065, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_3003122065, 0, 2147483647) ; ++i) { t_3003122013.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    }
    
    var hc_3003122070 = [0];
    var index_3003122309 = rawGet_3003122071(t_3003122013, key_3003122014, hc_3003122070, 0);
    if ((0 <= index_3003122309)) {
    t_3003122013.data[chckIndx(index_3003122309, 0, (t_3003122013.data).length - 1)].Field2 = nimCopy(t_3003122013.data[chckIndx(index_3003122309, 0, (t_3003122013.data).length - 1)].Field2, val_3003122015, NTI2046820355);
    }
    else {
      if (((t_3003122013.data).length == 0)) {
      var correctSizeHEX60gensym20_3003122411 = slotsNeeded_1308622891(32);
      t_3003122013.counter = 0;
      t_3003122013.data = new Array(chckRange(correctSizeHEX60gensym20_3003122411, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_3003122411, 0, 2147483647) ; ++i) { t_3003122013.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }      }
      
      if (mustRehash_3003122416(t_3003122013)) {
      enlarge_3003122571(t_3003122013);
      index_3003122309 = rawGetKnownHC_3003123034(t_3003122013, key_3003122014, hc_3003122070[0]);
      }
      
      index_3003122309 = subInt(-1, index_3003122309);
      rawInsert_3003122865(t_3003122013, t_3003122013, "data", key_3003122014, val_3003122015, hc_3003122070[0], index_3003122309);
      t_3003122013.counter = addInt(t_3003122013.counter, 1);
    }
    

  
}

function add_3003121702(node_3003121703, child_3003121704) {
    if (HEX3DHEX3D_2046820626(node_3003121703.id, null_2046820646)) {
    node_3003121703.id = nimCopy(node_3003121703.id, newId_2046820597(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820626(child_3003121704.id, null_2046820646)) {
    child_3003121704.id = nimCopy(child_3003121704.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3003121704.parent = node_3003121703;
    node_3003121703.children.push(child_3003121704);;

  
}

function clone_3003121958(node_3003121959, idMap_3003121967) {
  var result_3003121968 = null;

    var newNodeId_3003121969 = newId_2046820597();
    result_3003121968 = {kind: node_3003121959.kind, id: nimCopy(null, newNodeId_3003121969, NTI2046820355), reff: nimCopy(null, node_3003121959.reff, NTI2046820355), text: nimCopy(null, node_3003121959.text, NTI33554449), parent: null, children: []};
    HEX5BHEX5DHEX3D_3003122010(idMap_3003121967, node_3003121959.id, newNodeId_3003121969);
    Label1: {
      var child_3003123275 = null;
      var i_2969579714 = 0;
      var L_2969579715 = (node_3003121959.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579714 < L_2969579715)) break Label3;
            child_3003123275 = node_3003121959.children[chckIndx(i_2969579714, 0, (node_3003121959.children).length - 1)];
            add_3003121702(result_3003121968, clone_3003121958(child_3003123275, idMap_3003121967));
            i_2969579714 = addInt(i_2969579714, 1);
            if (!(((node_3003121959.children).length == L_2969579715))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3003121968;

}

function hasKey_3003123347(t_3003123350, key_3003123351) {
  var result_3003123352 = false;

    var hc_3003123353 = [0];
    result_3003123352 = (0 <= rawGet_3003122071(t_3003123350, key_3003123351, hc_3003123353, 0));

  return result_3003123352;

}

function contains_3003123341(t_3003123344, key_3003123345) {
  var result_3003123346 = false;

  BeforeRet: {
    result_3003123346 = hasKey_3003123347(t_3003123344, key_3003123345);
    break BeforeRet;
  };

  return result_3003123346;

}

function HEX5BHEX5D_3003123413(t_3003123416, key_3003123417) {
  var result_3003123418 = null;

    var hcHEX60gensym22_3003123419 = [0];
    var indexHEX60gensym22_3003123426 = rawGet_3003122071(t_3003123416, key_3003123417, hcHEX60gensym22_3003123419, 0);
    if ((0 <= indexHEX60gensym22_3003123426)) {
    result_3003123418 = t_3003123416.data[chckIndx(indexHEX60gensym22_3003123426, 0, (t_3003123416.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3003123417);
    }
    

  return result_3003123418;

}

function replaceReferences_3003123294(node_3003123295, idMap_3003123298) {
    if (contains_3003123341(idMap_3003123298, node_3003123295.reff)) {
    node_3003123295.reff = nimCopy(node_3003123295.reff, HEX5BHEX5D_3003123413(idMap_3003123298, node_3003123295.reff), NTI2046820355);
    }
    
    Label1: {
      var child_3003123496 = null;
      var i_2969579725 = 0;
      var L_2969579726 = (node_3003123295.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579725 < L_2969579726)) break Label3;
            child_3003123496 = node_3003123295.children[chckIndx(i_2969579725, 0, (node_3003123295.children).length - 1)];
            replaceReferences_3003123294(child_3003123496, idMap_3003123298);
            i_2969579725 = addInt(i_2969579725, 1);
            if (!(((node_3003123295.children).length == L_2969579726))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function cloneAndMapIds_3003123497(node_3003123498) {
  var result_3003123499 = null;

  BeforeRet: {
    var idMap_3003123511 = [initTable_3003123500(32)];
    var newNode_3003123512 = clone_3003121958(node_3003123498, idMap_3003123511[0]);
    replaceReferences_3003123294(newNode_3003123512, idMap_3003123511[0]);
    result_3003123499 = newNode_3003123512;
    break BeforeRet;
  };

  return result_3003123499;

}

function copySelected_2969579672(self_2969579673) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969579673)) {
    break BeforeRet;
    }
    
    self_2969579673.deletedNode = nimCopy(self_2969579673.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969569752(self_2969579673))), NTI3003121783);
  };

  
}

function copySelectedJsWrapper_2969579669(self_2969579704) {
    copySelected_2969579672(self_2969579704);

  
}
editor_ast_prototype.copySelected = function() { return (copySelectedJsWrapper_2969579669(this));};

function getSymbol_3019906948(ctxHEX60gensym85_3019906949, idHEX60gensym85_3019906950) {
  var result_3019906952 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym85_3019906953 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym85_3019906950, NTI2046820355), Field1: 2}, NTI3036676201);
    if (contains_3019901364(ctxHEX60gensym85_3019906949.itemsSymbol, itemHEX60gensym85_3019906953)) {
    result_3019906952 = nimCopy(result_3019906952, some_3019907120(HEX5BHEX5D_3019901463(ctxHEX60gensym85_3019906949.itemsSymbol, itemHEX60gensym85_3019906953)), NTI3087008909);
    break BeforeRet;
    }
    
    result_3019906952 = nimCopy(result_3019906952, none_3019907133(), NTI3087008909);
    break BeforeRet;
  };

  return result_3019906952;

}

function content_2818574085(document_2818574086) {
  var result_2818574087 = [];

  BeforeRet: {
    result_2818574087 = nimCopy(null, document_2818574086.lines, NTI2818572428);
    break BeforeRet;
  };

  return result_2818574087;

}

function updateNode_3019955286(ctx_3019955287, node_3019955288) {
          var Temporary3;
            var Temporary4;

    ctx_3019955287.depGraph.revision = addInt(ctx_3019955287.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679291(ctx_3019955287.depGraph.changed, {Field0: getItem_3019906357(node_3019955288), Field1: -1}, ctx_3019955287.depGraph.revision);
    var parent_3019955362 = node_3019955288.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3019955362 == null))) Temporary3 = false; else {            var oHEX60gensym564_3019955369 = findWithParentRec_3003123589(parent_3019955362, 11);
            if (!isSome_3003123546(oHEX60gensym564_3019955369)) Temporary4 = false; else {              var child_3019955415 = get_3003123566(oHEX60gensym564_3019955369);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3019955416 = child_3019955415.parent;
          HEX5BHEX5DHEX3D_3036679291(ctx_3019955287.depGraph.changed, {Field0: getItem_3019906357(functionDefinition_3019955416), Field1: -1}, ctx_3019955287.depGraph.revision);
          parent_3019955362 = functionDefinition_3019955416.parent;
        }
    };
    var fmtRes_3019955490 = [mnewString(0)];
    fmtRes_3019955490[0].push.apply(fmtRes_3019955490[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008590(fmtRes_3019955490, 0, node_3019955288, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019955490[0], NTI33554449)]);

  
}

function notifySymbolChanged_3019954718(ctx_3019954719, sym_3019954720) {
    ctx_3019954719.depGraph.revision = addInt(ctx_3019954719.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679291(ctx_3019954719.depGraph.changed, {Field0: getItem_3019907143(sym_3019954720), Field1: -1}, ctx_3019954719.depGraph.revision);
    var fmtRes_3019954798 = [mnewString(0)];
    fmtRes_3019954798[0].push.apply(fmtRes_3019954798[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_3019954798, 0, sym_3019954720.name, []);
    fmtRes_3019954798[0].push.apply(fmtRes_3019954798[0], [32,40]);;
    formatValue_3036676344(fmtRes_3019954798, 0, sym_3019954720.id, []);
    fmtRes_3019954798[0].push.apply(fmtRes_3019954798[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019954798[0], NTI33554449)]);

  
}

function newSeq_1979711504(len_1979711506) {
  var result_1979711507 = [];

    result_1979711507 = new Array(len_1979711506); for (var i = 0 ; i < len_1979711506 ; ++i) { result_1979711507[i] = []; }
  return result_1979711507;

}

function newSeq_1979711539(len_1979711541) {
  var result_1979711542 = [];

    result_1979711542 = new Array(len_1979711541); for (var i = 0 ; i < len_1979711541 ; ++i) { result_1979711542[i] = 0; }
  return result_1979711542;

}

function levenshtein_ratio_and_distance_1979711491(s_1979711492, t_1979711493, ratio_calc_1979711494) {
                    var Temporary16;
                    var Temporary17;
    var Temporary18;

  var result_1979711495 = 0.0;

  BeforeRet: {
    var rows_1979711496 = addInt((s_1979711492).length, 1);
    var cols_1979711497 = addInt((t_1979711493).length, 1);
    var distance_1979711498 = [];
    var cost_1979711499 = 0;
    distance_1979711498 = nimCopy(null, newSeq_1979711504(chckRange(rows_1979711496, 0, 2147483647)), NTI1979711504);
    Label1: {
      var i_1979711534 = 0;
      var i_2969579832 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579832 < rows_1979711496)) break Label3;
            i_1979711534 = i_2969579832;
            distance_1979711498[chckIndx(i_1979711534, 0, (distance_1979711498).length - 1)] = nimCopy(null, newSeq_1979711539(chckRange(cols_1979711497, 0, 2147483647)), NTI1979711531);
            i_2969579832 = addInt(i_2969579832, 1);
          }
      };
    };
    Label4: {
      var i_1979711551 = 0;
      var i_2969579838 = 1;
      Label5: {
          Label6: while (true) {
          if (!(i_2969579838 < rows_1979711496)) break Label6;
            i_1979711551 = i_2969579838;
            Label7: {
              var k_1979711556 = 0;
              var i_2969579836 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(i_2969579836 < cols_1979711497)) break Label9;
                    k_1979711556 = i_2969579836;
                    distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)][chckIndx(0, 0, (distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)]).length - 1)] = i_1979711551;
                    distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)][chckIndx(k_1979711556, 0, (distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)]).length - 1)] = k_1979711556;
                    i_2969579836 = addInt(i_2969579836, 1);
                  }
              };
            };
            i_2969579838 = addInt(i_2969579838, 1);
          }
      };
    };
    Label10: {
      var col_1979711561 = 0;
      var i_2969579844 = 1;
      Label11: {
          Label12: while (true) {
          if (!(i_2969579844 < cols_1979711497)) break Label12;
            col_1979711561 = i_2969579844;
            Label13: {
              var row_1979711566 = 0;
              var i_2969579842 = 1;
              Label14: {
                  Label15: while (true) {
                  if (!(i_2969579842 < rows_1979711496)) break Label15;
                    row_1979711566 = i_2969579842;
                    if ((s_1979711492[chckIndx(subInt(row_1979711566, 1), 0, (s_1979711492).length - 1)] == t_1979711493[chckIndx(subInt(col_1979711561, 1), 0, (t_1979711493).length - 1)])) {
                    cost_1979711499 = 0;
                    }
                    else {
                      if (ratio_calc_1979711494) {
                      cost_1979711499 = 2;
                      }
                      else {
                        cost_1979711499 = 1;
                      }
                      
                    }
                    
                    distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(col_1979711561, 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)] = nimMin(nimMin(addInt((Temporary16 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary16)[chckIndx(col_1979711561, 0, (Temporary16).length - 1)], 1), addInt(distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(subInt(col_1979711561, 1), 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)], 1)), addInt((Temporary17 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary17)[chckIndx(subInt(col_1979711561, 1), 0, (Temporary17).length - 1)], cost_1979711499));
                    i_2969579842 = addInt(i_2969579842, 1);
                  }
              };
            };
            i_2969579844 = addInt(i_2969579844, 1);
          }
      };
    };
    var dst_1979711567 = (Temporary18 = distance_1979711498[chckIndx(subInt(rows_1979711496, 1), 0, (distance_1979711498).length - 1)], Temporary18)[chckIndx(subInt(cols_1979711497, 1), 0, (Temporary18).length - 1)];
    if (ratio_calc_1979711494) {
    result_1979711495 = (subInt(addInt((s_1979711492).length, (t_1979711493).length), dst_1979711567) / addInt((s_1979711492).length, (t_1979711493).length));
    break BeforeRet;
    }
    else {
      result_1979711495 = dst_1979711567;
      break BeforeRet;
    }
    
  };

  return result_1979711495;

}

function fuzzyMatch_1979711568(s1_1979711569, s2_1979711570) {
  var result_1979711571 = 0.0;

  BeforeRet: {
    if (((s2_1979711570).length < (s1_1979711569).length)) {
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s2_1979711570, s1_1979711569, true);
    break BeforeRet;
    }
    
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s1_1979711569, s2_1979711570, true);
    break BeforeRet;
  };

  return result_1979711571;

}

function parseFloatNative_33557211(a_33557212) {
  var result_33557213 = 0.0;

    var str_33557214 = [];
    Label1: {
      var x_33557228 = 0;
      var i_2969579854 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579854 < (a_33557212).length)) break Label3;
            x_33557228 = a_33557212[i_2969579854];
            addChar(str_33557214, x_33557228);;
            i_2969579854 += 1;
          }
      };
    };
    var cstr_33557229 = toJSStr(str_33557214);
      result_33557213 = Number(cstr_33557229);
  

  return result_33557213;

}

function npuParseFloat(s_771752466, number_771752467, number_771752467_Idx) {
  var result_771752468 = 0;

    var bf_771752469 = [0.0];
    result_771752468 = nimParseBiggestFloat(s_771752466, bf_771752469, 0);
    if (!((result_771752468 == 0))) {
    number_771752467[number_771752467_Idx] = bf_771752469[0];
    }
    

  return result_771752468;

}

function parseFloat_771752749(s_771752750, number_771752751, number_771752751_Idx, start_771752752) {
  var result_771752753 = 0;

    result_771752753 = npuParseFloat((s_771752750.slice(start_771752752, (s_771752750).length - 1 + 1)), number_771752751, number_771752751_Idx);

  return result_771752753;

}

function nsuParseFloat(s_855638889) {
  var result_855638890 = [0.0];

    result_855638890[0] = 0.0;
    var L_855638891 = parseFloat_771752749(s_855638889, result_855638890, 0, 0);
    if ((!((L_855638891 == (s_855638889).length)) || (L_855638891 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_855638889 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638890[0];

}

function newSeq_3204448360(len_3204448362) {
  var result_3204448363 = [];

    result_3204448363 = new Array(len_3204448362); for (var i = 0 ; i < len_3204448362 ; ++i) { result_3204448363[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }
  return result_3204448363;

}

function mergeAlt_3204448399(a_3204448401, b_3204448402, lo_3204448403, m_3204448404, hi_3204448405, cmp_3204448408, order_3204448409) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_3204448408(a_3204448401[chckIndx(m_3204448404, 0, (a_3204448401).length - 1)], a_3204448401[chckIndx(addInt(m_3204448404, 1), 0, (a_3204448401).length - 1)]), order_3204448409) <= 0)) {
    break BeforeRet;
    }
    
    var j_3204448410 = lo_3204448403;
    if (!((j_3204448410 <= m_3204448404))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_3204448416 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_3204448410 <= m_3204448404)) break Label2;
          b_3204448402[chckIndx(bb_3204448416, 0, (b_3204448402).length - 1)] = nimCopy(b_3204448402[chckIndx(bb_3204448416, 0, (b_3204448402).length - 1)], a_3204448401[chckIndx(j_3204448410, 0, (a_3204448401).length - 1)], NTI2969568638);
          bb_3204448416 = addInt(bb_3204448416, 1);
          j_3204448410 = addInt(j_3204448410, 1);
        }
    };
    var i_3204448427 = 0;
    var k_3204448428 = lo_3204448403;
    Label3: {
        Label4: while (true) {
        if (!((k_3204448428 < j_3204448410) && (j_3204448410 <= hi_3204448405))) break Label4;
          if ((HEX2A_1023410184(cmp_3204448408(b_3204448402[chckIndx(i_3204448427, 0, (b_3204448402).length - 1)], a_3204448401[chckIndx(j_3204448410, 0, (a_3204448401).length - 1)]), order_3204448409) <= 0)) {
          a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)] = nimCopy(a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)], b_3204448402[chckIndx(i_3204448427, 0, (b_3204448402).length - 1)], NTI2969568638);
          i_3204448427 = addInt(i_3204448427, 1);
          }
          else {
            a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)] = nimCopy(a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)], a_3204448401[chckIndx(j_3204448410, 0, (a_3204448401).length - 1)], NTI2969568638);
            j_3204448410 = addInt(j_3204448410, 1);
          }
          
          k_3204448428 = addInt(k_3204448428, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_3204448428 < j_3204448410)) break Label6;
          a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)] = nimCopy(a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)], b_3204448402[chckIndx(i_3204448427, 0, (b_3204448402).length - 1)], NTI2969568638);
          k_3204448428 = addInt(k_3204448428, 1);
          i_3204448427 = addInt(i_3204448427, 1);
        }
    };
  };

  
}

function sort_3204448348(a_3204448350, cmp_3204448353, order_3204448354) {
    var n_3204448359 = (a_3204448350).length;
    var b_3204448396 = newSeq_3204448360(chckRange(divInt(n_3204448359, 2), 0, 2147483647));
    var s_3204448397 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_3204448397 < n_3204448359)) break Label2;
          var m_3204448398 = subInt(subInt(n_3204448359, 1), s_3204448397);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_3204448398)) break Label4;
                mergeAlt_3204448399(a_3204448350, b_3204448396, nimMax(addInt(subInt(m_3204448398, s_3204448397), 1), 0), m_3204448398, addInt(m_3204448398, s_3204448397), cmp_3204448353, order_3204448354);
                m_3204448398 = subInt(m_3204448398, mulInt(s_3204448397, 2));
              }
          };
          s_3204448397 = mulInt(s_3204448397, 2);
        }
    };

  
}

function cmp_3204448328(x_3204448330, y_3204448331) {
  var result_3204448332 = 0;

  BeforeRet: {
    if ((x_3204448330 == y_3204448331)) {
    result_3204448332 = 0;
    break BeforeRet;
    }
    
    if ((x_3204448330 < y_3204448331)) {
    result_3204448332 = -1;
    break BeforeRet;
    }
    
    result_3204448332 = 1;
    break BeforeRet;
  };

  return result_3204448332;

}

function getCompletions_2969575367(editor_2969575368, text_2969575369, contextNode_2969575373) {
      var Temporary5;
      var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_2969575517(a_2969575535, b_2969575536) {
      var result_2969575541 = 0;

        result_2969575541 = cmp_3204448328(a_2969575535.score, b_2969575536.score);

      return result_2969575541;

    }

  var result_2969575374 = [];

  BeforeRet: {
    result_2969575374 = nimCopy(null, [], NTI3204448274);
    if (((isNone_3003123574(contextNode_2969575373) || (get_3003123566(contextNode_2969575373).kind == 1)) || (get_3003123566(contextNode_2969575373).kind == 0))) {
    var symbols_2969575439 = computeSymbols_3019922496(ctx_2969567289, get_3003123566(contextNode_2969575373), true);
    Label1: {
      var key_2969575444 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2969575445 = null;
      var L_2969579823 = len_3087009065(symbols_2969575439);
      Label2: {
        var h_2969579825 = 0;
        var colontmp__2969579826 = 0;
        colontmp__2969579826 = (symbols_2969575439.data).length - 1;
        var res_2969579827 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969579827 <= colontmp__2969579826)) break Label4;
              h_2969579825 = res_2969579827;
              if (isFilled_1308622880(symbols_2969575439.data[chckIndx(h_2969579825, 0, (symbols_2969575439.data).length - 1)].Field0)) {
              var colontmp__2969579830 = nimCopy(null, {Field0: nimCopy(null, symbols_2969575439.data[chckIndx(h_2969579825, 0, (symbols_2969575439.data).length - 1)].Field1, NTI2046820355), Field1: symbols_2969575439.data[chckIndx(h_2969579825, 0, (symbols_2969575439.data).length - 1)].Field2}, NTI3087008732);
              key_2969575444 = nimCopy(key_2969575444, colontmp__2969579830["Field0"], NTI2046820355);
              symbol_2969575445 = colontmp__2969579830["Field1"];
              var score_2969575446 = fuzzyMatch_1979711568(text_2969575369, symbol_2969575445.name);
              result_2969575374.push({kind: 0, score: score_2969575446, id: nimCopy(null, symbol_2969575445.id, NTI2046820355), nodeKind: 0, name: []});;
              if (!((len_3087009065(symbols_2969575439) == L_2969579823))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969579827 = addInt(res_2969579827, 1);
            }
        };
      };
    };
    }
    
      var oHEX60gensym121_2969575453 = nimCopy(null, contextNode_2969575373, NTI3003121783);
      if (!isSome_3003123546(oHEX60gensym121_2969575453)) Temporary6 = false; else {        var node_2969575476 = get_3003123566(oHEX60gensym121_2969575453);
        Temporary6 = true;      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (node_2969575476.kind == 0);      }    if (Temporary5) {
    result_2969575374.push({kind: 1, nodeKind: 9, name: [105,102], score: fuzzyMatch_1979711568(text_2969575369, [105,102]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 10, name: [119,104,105,108,101], score: fuzzyMatch_1979711568(text_2969575369, [119,104,105,108,101]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 4, name: [99,111,110,115,116], score: fuzzyMatch_1979711568(text_2969575369, [99,111,110,115,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 5, name: [108,101,116], score: fuzzyMatch_1979711568(text_2969575369, [108,101,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 6, name: [118,97,114], score: fuzzyMatch_1979711568(text_2969575369, [118,97,114]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    if (nsuStartsWith(text_2969575369, [34])) {
    Temporary7 = 1.1;
    }
    else {
    Temporary7 = 0.0;
    }
    
    result_2969575374.push({kind: 1, nodeKind: 3, name: [115,116,114,105,110,103,32,108,105,116,101,114,97,108], score: Temporary7, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 7, name: [98,108,111,99,107], score: fuzzyMatch_1979711568(text_2969575369, [123]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 11, name: [102,110], score: fuzzyMatch_1979711568(text_2969575369, [102,110]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
++excHandler;
    try {
    var _ = nsuParseFloat(text_2969575369);
    result_2969575374.push({kind: 1, nodeKind: 2, name: [110,117,109,98,101,114,32,108,105,116,101,114,97,108], score: 1.1, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    sort_3204448348(result_2969575374, HEX3Aanonymous_2969575517, 0);
    break BeforeRet;
  };

  return result_2969575374;

}

function updateCompletions_2969569740(self_2969569741) {
  BeforeRet: {
    if ((self_2969569741.textDocument == null)) {
    self_2969569741.completions = nimCopy(null, [], NTI3204448274);
    self_2969569741.selectedCompletion = 0;
    break BeforeRet;
    }
    
    var text_2969575565 = nsuJoinSep(content_2818574085(self_2969569741.textDocument), []);
    self_2969569741.completions = nimCopy(null, getCompletions_2969575367(self_2969569741, text_2969575565, some_3003121890(node_2969569752(self_2969569741))), NTI2969571585);
    self_2969569741.completionText = nimCopy(null, text_2969575565, NTI33554449);
    if ((0 < (self_2969569741.completions).length)) {
    self_2969569741.selectedCompletion = clamp_1660945119(self_2969569741.selectedCompletion, 0, subInt((self_2969569741.completions).length, 1));
    }
    else {
      self_2969569741.selectedCompletion = 0;
    }
    
    self_2969569741.scrollToCompletion = nimCopy(self_2969569741.scrollToCompletion, some_1191184367(self_2969569741.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2969569741);
  };

  
}

function finishEdit_2969575583(self_2969575584, apply_2969575585) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  BeforeRet: {
    if (!(isEditing_2969575154(self_2969575584))) {
    break BeforeRet;
    }
    
    if (apply_2969575585) {
    if (!(HEX3DHEX3D_2046820626(self_2969575584.currentlyEditedSymbol, null_2046820646))) {
      var oHEX60gensym633_2969579738 = getSymbol_3019906948(ctx_2969567289, self_2969575584.currentlyEditedSymbol);
      if (!isSome_3087009356(oHEX60gensym633_2969579738)) Temporary1 = false; else {        var sym_2969579761 = get_3087009376(oHEX60gensym633_2969579738);
        Temporary1 = true;      }    if (Temporary1) {
    self_2969575584.document.undoOps.push({kind: 4, id: nimCopy(null, self_2969575584.currentlyEditedSymbol, NTI2046820355), text: nimCopy(null, sym_2969579761.name, NTI33554449), parent: null, idx: 0, node: null});;
    sym_2969579761.name = nimCopy(null, nsuJoinSep(content_2818574085(self_2969575584.textDocument), []), NTI33554449);
    if ((sym_2969579761.kind == 0)) {
    var Temporary2 = sym_2969579761;
    if (ConstSet160[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    Temporary2.node.text = nimCopy(null, sym_2969579761.name, NTI33554449);
    var Temporary3 = sym_2969579761;
    if (ConstSet161[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    updateNode_3019955286(ctx_2969567289, Temporary3.node);
    }
    
    notifySymbolChanged_3019954718(ctx_2969567289, sym_2969579761);
    }
    
    }
    else {
    if (!((self_2969575584.currentlyEditedNode == null))) {
    self_2969575584.document.undoOps.push({kind: 3, node: self_2969575584.currentlyEditedNode, text: nimCopy(null, self_2969575584.currentlyEditedNode.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
    self_2969575584.currentlyEditedNode.text = nimCopy(null, nsuJoinSep(content_2818574085(self_2969575584.textDocument), [10]), NTI33554449);
    updateNode_3019955286(ctx_2969567289, self_2969575584.currentlyEditedNode);
    }
    }
    }
    
    unregister_2415919268(self_2969575584.textEditor);
    self_2969575584.textEditor = null;
    self_2969575584.textDocument = null;
    self_2969575584.currentlyEditedSymbol = nimCopy(self_2969575584.currentlyEditedSymbol, null_2046820646, NTI2046820355);
    self_2969575584.currentlyEditedNode = null;
    updateCompletions_2969569740(self_2969575584);
    markDirty_2415919143(self_2969575584);
  };

  
}

function finishEditJsWrapper_2969579730(self_2969579806, apply_2969579807) {
    finishEdit_2969575583(self_2969579806, apply_2969579807);

  
}
editor_ast_prototype.finishEdit = function(apply_ /* : bool */) { return (finishEditJsWrapper_2969579730(this, apply_));};

function pop_2969576288(s_2969576290, s_2969576290_Idx) {
  var result_2969576291 = null;

    var L_2969576295 = subInt((s_2969576290[s_2969576290_Idx]).length, 1);
    result_2969576291 = s_2969576290[s_2969576290_Idx][chckIndx(L_2969576295, 0, (s_2969576290[s_2969576290_Idx]).length - 1)];
    if (s_2969576290[s_2969576290_Idx].length < chckRange(L_2969576295, 0, 2147483647)) { for (var i = s_2969576290[s_2969576290_Idx].length ; i < chckRange(L_2969576295, 0, 2147483647) ; ++i) s_2969576290[s_2969576290_Idx].push(null); }
               else { s_2969576290[s_2969576290_Idx].length = chckRange(L_2969576295, 0, 2147483647); };

  return result_2969576291;

}

function formatValue_2969569607(result_2969569609, result_2969569609_Idx, value_2969569610, specifier_2969569611) {
    formatValue_721420459(result_2969569609, result_2969569609_Idx, reprEnum(value_2969569610, NTI2969568481), specifier_2969569611);

  
}

function HEX24_2969569599(op_2969569600) {
  var result_2969569601 = [];

    var fmtRes_2969569606 = [mnewString(0)];
    formatValue_2969569607(fmtRes_2969569606, 0, op_2969569600.kind, []);
    fmtRes_2969569606[0].push.apply(fmtRes_2969569606[0], [44,32,39]);;
    formatValue_721420459(fmtRes_2969569606, 0, op_2969569600.text, []);
    fmtRes_2969569606[0].push.apply(fmtRes_2969569606[0], [39]);;
    result_2969569601 = nimCopy(null, fmtRes_2969569606[0], NTI33554449);
    if (!(HEX3DHEX3D_2046820626(op_2969569600.id, null_2046820646))) {
    var fmtRes_2969569619 = [mnewString(0)];
    fmtRes_2969569619[0].push.apply(fmtRes_2969569619[0], [44,32,105,100,32,61,32]);;
    formatValue_3036676344(fmtRes_2969569619, 0, op_2969569600.id, []);
    result_2969569601.push.apply(result_2969569601, fmtRes_2969569619[0]);;
    }
    
    if (!((op_2969569600.node == null))) {
    var fmtRes_2969569633 = [mnewString(0)];
    fmtRes_2969569633[0].push.apply(fmtRes_2969569633[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_3087008590(fmtRes_2969569633, 0, op_2969569600.node, []);
    result_2969569601.push.apply(result_2969569601, fmtRes_2969569633[0]);;
    }
    
    if (!((op_2969569600.parent == null))) {
    var fmtRes_2969569647 = [mnewString(0)];
    fmtRes_2969569647[0].push.apply(fmtRes_2969569647[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_3087008590(fmtRes_2969569647, 0, op_2969569600.parent, []);
    fmtRes_2969569647[0].push.apply(fmtRes_2969569647[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2701131945(fmtRes_2969569647, 0, op_2969569600.idx, []);
    result_2969569601.push.apply(result_2969569601, fmtRes_2969569647[0]);;
    }
    

  return result_2969569601;

}

function formatValue_2969576306(result_2969576308, result_2969576308_Idx, value_2969576309, specifier_2969576310) {
    formatValue_721420459(result_2969576308, result_2969576308_Idx, HEX24_2969569599(value_2969576309), specifier_2969576310);

  
}

function insert_3003121722(x_3003121724, x_3003121724_Idx, item_3003121725, i_3003121726) {
    var it_3003121747 = null;
    x_3003121724[x_3003121724_Idx] = x_3003121724[x_3003121724_Idx] || []; x_3003121724[x_3003121724_Idx].splice(i_3003121726, 0, it_3003121747);
    x_3003121724[x_3003121724_Idx][chckIndx(i_3003121726, 0, (x_3003121724[x_3003121724_Idx]).length - 1)] = item_3003121725;

  
}

function insert_3003121718(node_3003121719, child_3003121720, idx_3003121721) {
    if (HEX3DHEX3D_2046820626(node_3003121719.id, null_2046820646)) {
    node_3003121719.id = nimCopy(node_3003121719.id, newId_2046820597(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820626(child_3003121720.id, null_2046820646)) {
    child_3003121720.id = nimCopy(child_3003121720.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3003121720.parent = node_3003121719;
    insert_3003121722(node_3003121719, "children", child_3003121720, chckRange(idx_3003121721, 0, 2147483647));

  
}

function undo_2969576278(document_2969576279) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2969576281 = ({val: null});

  BeforeRet: {
    if (((document_2969576279.undoOps).length == 0)) {
    result_2969576281 = nimCopy(result_2969576281, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var undoOp_2969576300 = pop_2969576288(document_2969576279, "undoOps");
    var fmtRes_2969576305 = [mnewString(0)];
    fmtRes_2969576305[0].push.apply(fmtRes_2969576305[0], [85,110,100,111,105,110,103,32]);;
    formatValue_2969576306(fmtRes_2969576305, 0, undoOp_2969576300, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969576305[0], NTI33554449)]);
    switch (undoOp_2969576300.kind) {
    case 0:
      insert_3003121718(undoOp_2969576300.parent, undoOp_2969576300.node, undoOp_2969576300.idx);
      handleNodeInserted_2969571616(document_2969576279, undoOp_2969576300.node);
      document_2969576279.redoOps.push(undoOp_2969576300);;
      result_2969576281 = nimCopy(result_2969576281, some_3003121890(undoOp_2969576300.node), NTI3003121783);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2969576318 = HEX5BHEX5D_3003121748(undoOp_2969576300.parent, undoOp_2969576300.idx);
      handleNodeDelete_2969573874(document_2969576279, HEX5BHEX5D_3003121748(undoOp_2969576300.parent, undoOp_2969576300.idx));
      HEX5BHEX5DHEX3D_3003121928(undoOp_2969576300.parent, undoOp_2969576300.idx, undoOp_2969576300.node);
      handleNodeInserted_2969571616(document_2969576279, undoOp_2969576300.node);
      document_2969576279.redoOps.push({kind: 1, parent: undoOp_2969576300.parent, idx: undoOp_2969576300.idx, node: oldNode_2969576318, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2969576281 = nimCopy(result_2969576281, some_3003121890(undoOp_2969576300.node), NTI3003121783);
      break BeforeRet;
      break;
    case 2:
      handleNodeDelete_2969573874(document_2969576279, HEX5BHEX5D_3003121748(undoOp_2969576300.parent, undoOp_2969576300.idx));
      var _ = delete_3003121932(undoOp_2969576300.parent, undoOp_2969576300.idx);
      document_2969576279.redoOps.push(undoOp_2969576300);;
      if ((undoOp_2969576300.idx < len_3003121752(undoOp_2969576300.parent))) {
      result_2969576281 = nimCopy(result_2969576281, some_3003121890(HEX5BHEX5D_3003121748(undoOp_2969576300.parent, undoOp_2969576300.idx)), NTI3003121783);
      break BeforeRet;
      }
      else {
      if ((0 < undoOp_2969576300.idx)) {
      result_2969576281 = nimCopy(result_2969576281, some_3003121890(HEX5BHEX5D_3003121748(undoOp_2969576300.parent, subInt(undoOp_2969576300.idx, 1))), NTI3003121783);
      break BeforeRet;
      }
      }
      result_2969576281 = nimCopy(result_2969576281, some_3003121890(undoOp_2969576300.parent), NTI3003121783);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym151_2969576341 = getSymbol_3019906948(ctx_2969567289, undoOp_2969576300.id);
        if (!isSome_3087009356(oHEX60gensym151_2969576341)) Temporary1 = false; else {          var symbol_2969576364 = get_3087009376(oHEX60gensym151_2969576341);
          Temporary1 = true;        }      if (Temporary1) {
      document_2969576279.redoOps.push({kind: 4, id: nimCopy(null, undoOp_2969576300.id, NTI2046820355), text: nimCopy(null, symbol_2969576364.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2969576364.name = nimCopy(null, undoOp_2969576300.text, NTI33554449);
      if ((symbol_2969576364.kind == 0)) {
      var Temporary2 = symbol_2969576364;
      if (ConstSet169[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2969576364.name, NTI33554449);
      var Temporary3 = symbol_2969576364;
      if (ConstSet170[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3019955286(ctx_2969567289, Temporary3.node);
      }
      
      notifySymbolChanged_3019954718(ctx_2969567289, symbol_2969576364);
      }
      
      break;
    case 3:
      document_2969576279.redoOps.push({kind: 3, node: undoOp_2969576300.node, text: nimCopy(null, undoOp_2969576300.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      undoOp_2969576300.node.text = nimCopy(null, undoOp_2969576300.text, NTI33554449);
      updateNode_3019955286(ctx_2969567289, undoOp_2969576300.node);
      break;
    }
    result_2969576281 = nimCopy(result_2969576281, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576281;

}

function undo_2969579866(self_2969579867) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579867)) {
    break BeforeRet;
    }
    
    finishEdit_2969575583(self_2969579867, false);
      var oHEX60gensym642_2969579870 = undo_2969576278(self_2969579867.document);
      if (!isSome_3003123546(oHEX60gensym642_2969579870)) Temporary1 = false; else {        var node_2969579893 = get_3003123566(oHEX60gensym642_2969579870);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969579867, node_2969579893);
    }
    
    markDirty_2415919143(self_2969579867);
  };

  
}

function undoJsWrapper2_2969579863(self_2969579921) {
    undo_2969579866(self_2969579921);

  
}
editor_ast_prototype.undo2 = function() { return (undoJsWrapper2_2969579863(this));};

function redo_2969576379(document_2969576380) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2969576382 = ({val: null});

  BeforeRet: {
    if (((document_2969576380.redoOps).length == 0)) {
    result_2969576382 = nimCopy(result_2969576382, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var redoOp_2969576391 = pop_2969576288(document_2969576380, "redoOps");
    var fmtRes_2969576396 = [mnewString(0)];
    fmtRes_2969576396[0].push.apply(fmtRes_2969576396[0], [82,101,100,111,105,110,103,32]);;
    formatValue_2969576306(fmtRes_2969576396, 0, redoOp_2969576391, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969576396[0], NTI33554449)]);
    switch (redoOp_2969576391.kind) {
    case 0:
      document_2969576380.undoOps.push({kind: 0, parent: redoOp_2969576391.parent, idx: redoOp_2969576391.idx, node: redoOp_2969576391.node, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      handleNodeDelete_2969573874(document_2969576380, HEX5BHEX5D_3003121748(redoOp_2969576391.parent, redoOp_2969576391.idx));
      var _ = delete_3003121932(redoOp_2969576391.parent, redoOp_2969576391.idx);
      if ((redoOp_2969576391.idx < len_3003121752(redoOp_2969576391.parent))) {
      result_2969576382 = nimCopy(result_2969576382, some_3003121890(HEX5BHEX5D_3003121748(redoOp_2969576391.parent, redoOp_2969576391.idx)), NTI3003121783);
      break BeforeRet;
      }
      else {
      if ((0 < redoOp_2969576391.idx)) {
      result_2969576382 = nimCopy(result_2969576382, some_3003121890(HEX5BHEX5D_3003121748(redoOp_2969576391.parent, subInt(redoOp_2969576391.idx, 1))), NTI3003121783);
      break BeforeRet;
      }
      }
      result_2969576382 = nimCopy(result_2969576382, some_3003121890(redoOp_2969576391.parent), NTI3003121783);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2969576415 = HEX5BHEX5D_3003121748(redoOp_2969576391.parent, redoOp_2969576391.idx);
      handleNodeDelete_2969573874(document_2969576380, HEX5BHEX5D_3003121748(redoOp_2969576391.parent, redoOp_2969576391.idx));
      HEX5BHEX5DHEX3D_3003121928(redoOp_2969576391.parent, redoOp_2969576391.idx, redoOp_2969576391.node);
      handleNodeInserted_2969571616(document_2969576380, redoOp_2969576391.node);
      document_2969576380.undoOps.push({kind: 1, parent: redoOp_2969576391.parent, idx: redoOp_2969576391.idx, node: oldNode_2969576415, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2969576382 = nimCopy(result_2969576382, some_3003121890(redoOp_2969576391.node), NTI3003121783);
      break BeforeRet;
      break;
    case 2:
      insert_3003121718(redoOp_2969576391.parent, redoOp_2969576391.node, redoOp_2969576391.idx);
      handleNodeInserted_2969571616(document_2969576380, redoOp_2969576391.node);
      document_2969576380.undoOps.push(redoOp_2969576391);;
      result_2969576382 = nimCopy(result_2969576382, some_3003121890(redoOp_2969576391.node), NTI3003121783);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym154_2969576432 = getSymbol_3019906948(ctx_2969567289, redoOp_2969576391.id);
        if (!isSome_3087009356(oHEX60gensym154_2969576432)) Temporary1 = false; else {          var symbol_2969576455 = get_3087009376(oHEX60gensym154_2969576432);
          Temporary1 = true;        }      if (Temporary1) {
      document_2969576380.undoOps.push({kind: 4, id: nimCopy(null, redoOp_2969576391.id, NTI2046820355), text: nimCopy(null, symbol_2969576455.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2969576455.name = nimCopy(null, redoOp_2969576391.text, NTI33554449);
      if ((symbol_2969576455.kind == 0)) {
      var Temporary2 = symbol_2969576455;
      if (ConstSet171[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2969576455.name, NTI33554449);
      var Temporary3 = symbol_2969576455;
      if (ConstSet172[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3019955286(ctx_2969567289, Temporary3.node);
      }
      
      notifySymbolChanged_3019954718(ctx_2969567289, symbol_2969576455);
      }
      
      break;
    case 3:
      document_2969576380.undoOps.push({kind: 3, node: redoOp_2969576391.node, text: nimCopy(null, redoOp_2969576391.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      redoOp_2969576391.node.text = nimCopy(null, redoOp_2969576391.text, NTI33554449);
      updateNode_3019955286(ctx_2969567289, redoOp_2969576391.node);
      break;
    }
    result_2969576382 = nimCopy(result_2969576382, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576382;

}

function redo_2969579936(self_2969579937) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579937)) {
    break BeforeRet;
    }
    
    finishEdit_2969575583(self_2969579937, false);
      var oHEX60gensym650_2969579940 = redo_2969576379(self_2969579937.document);
      if (!isSome_3003123546(oHEX60gensym650_2969579940)) Temporary1 = false; else {        var node_2969579963 = get_3003123566(oHEX60gensym650_2969579940);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969579937, node_2969579963);
    }
    
    markDirty_2415919143(self_2969579937);
  };

  
}

function redoJsWrapper2_2969579933(self_2969579991) {
    redo_2969579936(self_2969579991);

  
}
editor_ast_prototype.redo2 = function() { return (redoJsWrapper2_2969579933(this));};

function canInsertInto_2969578688(self_2969578689, parent_2969578690) {
        var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
      var Temporary8;

  var result_2969578691 = false;

  BeforeRet: {
    switch (parent_2969578690.kind) {
    case 0:
    case 1:
    case 2:
    case 3:
      result_2969578691 = false;
      break BeforeRet;
      break;
    case 4:
      result_2969578691 = (len_3003121752(parent_2969578690) < 1);
      break BeforeRet;
      break;
    case 5:
    case 6:
    case 10:
    case 13:
      result_2969578691 = (len_3003121752(parent_2969578690) < 2);
      break BeforeRet;
      break;
    case 11:
      result_2969578691 = (len_3003121752(parent_2969578690) < 3);
      break BeforeRet;
      break;
    case 7:
    case 9:
    case 12:
      result_2969578691 = true;
      break BeforeRet;
      break;
    case 8:
      if ((len_3003121752(parent_2969578690) == 0)) {
      result_2969578691 = true;
      break BeforeRet;
      }
      
        var oHEX60gensym529_2969578694 = computeSymbol_3019919344(ctx_2969567289, HEX5BHEX5D_3003121748(parent_2969578690, 0), true);
        if (!isSome_3087009356(oHEX60gensym529_2969578694)) Temporary1 = false; else {          var sym_2969578717 = get_3087009376(oHEX60gensym529_2969578694);
          Temporary1 = true;        }      if (Temporary1) {
      if ((sym_2969578717.kind == 1)) {
      var Temporary2 = sym_2969578717;
      if (ConstSet173[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      switch (Temporary2.operatorNotation) {
      case 1:
      case 2:
        result_2969578691 = (len_3003121752(parent_2969578690) < 2);
        break BeforeRet;
        break;
      case 3:
        result_2969578691 = (len_3003121752(parent_2969578690) < 3);
        break BeforeRet;
        break;
      default: 
        break;
      }
      }
      
      }
      
      var typ_2969578722 = computeType_3019913434(ctx_2969567289, HEX5BHEX5D_3003121748(parent_2969578690, 0), true);
      if ((typ_2969578722.kind == 4)) {
        var Temporary4 = typ_2969578722;
        if (ConstSet174[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        if (!(0 < (Temporary4.paramTypes).length)) Temporary3 = false; else {          var Temporary5 = typ_2969578722;
          if (ConstSet175[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
          var Temporary6 = typ_2969578722;
          if (ConstSet176[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
          Temporary3 = HEX3DHEX3D_3087008313((Temporary7 = Temporary5.paramTypes, Temporary7)[chckIndx((Temporary6.paramTypes).length - 1, 0, (Temporary7).length - 1)], anyType_3087008188(true));        }      if (Temporary3) {
      result_2969578691 = true;
      break BeforeRet;
      }
      
      var Temporary8 = typ_2969578722;
      if (ConstSet177[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007747)); }
      result_2969578691 = (len_3003121752(parent_2969578690) < addInt((Temporary8.paramTypes).length, 1));
      break BeforeRet;
      }
      
      result_2969578691 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2969578691;

}

function some_2969576510(val_2969576512) {
  var result_2969576513 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2969576513.has = true;
    result_2969576513.val = nimCopy(result_2969576513.val, val_2969576512, NTI2969572490);

  return result_2969576513;

}

function none_2969576524() {
  var result_2969576531 = ({val: {Field0: null, Field1: 0}, has: false});

  return result_2969576531;

}

function none_2969577011() {
  var result_2969577013 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2969577013 = nimCopy(result_2969577013, none_2969576524(), NTI2969572495);

  return result_2969577013;

}

function createNodeFromAction_2969576470(editor_2969576471, arg_2969576472, node_2969576473, typ_2969576474) {
        var Temporary1;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
        var Temporary47;
            var Temporary71;
      var Temporary85;

  var result_2969576480 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (toJSStr(arg_2969576472)) {
    case "deleted":
        var oHEX60gensym155_2969576483 = nimCopy(null, editor_2969576471.deletedNode, NTI3003121783);
        if (!isSome_3003123546(oHEX60gensym155_2969576483)) Temporary1 = false; else {          var node_2969576506 = get_3003123566(oHEX60gensym155_2969576483);
          Temporary1 = true;        }      if (Temporary1) {
      editor_2969576471.deletedNode = nimCopy(editor_2969576471.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969576506)), NTI3003121783);
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969576506, Field1: 0}), NTI2969572495);
      break BeforeRet;
      }
      
      result_2969576480 = nimCopy(result_2969576480, none_2969576524(), NTI2969572495);
      break BeforeRet;
      break;
    case "empty":
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: {kind: 0, id: newId_2046820597(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "identifier":
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: {kind: 1, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "number-literal":
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "const-decl":
      Label2: {
        var tmpHEX60gensym156_2969576545 = null;
        Label3: {
          var res_2969576615 = null;
          res_2969576615 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576615.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576615.id = nimCopy(res_2969576615.id, newId_2046820597(), NTI2046820355);
          Label5: {
            Label6: {
              var res_2969576618 = null;
              res_2969576618 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576618.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969576615, res_2969576618);
        };
      };
      var node_2969576637 = res_2969576615;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969576637, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "let-decl":
      Label8: {
        var tmpHEX60gensym163_2969576645 = null;
        Label9: {
          var res_2969576651 = null;
          res_2969576651 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576651.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576651.id = nimCopy(res_2969576651.id, newId_2046820597(), NTI2046820355);
          Label11: {
            Label12: {
              var res_2969576654 = null;
              res_2969576654 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576654.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576651, res_2969576654);
            Label14: {
              var res_2969576656 = null;
              res_2969576656 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576656.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576651, res_2969576656);
          };
        };
      };
      var node_2969576684 = res_2969576651;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969576684, Field1: 1}), NTI2969572495);
      break BeforeRet;
      break;
    case "var-decl":
      Label16: {
        var tmpHEX60gensym173_2969576692 = null;
        Label17: {
          var res_2969576698 = null;
          res_2969576698 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576698.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576698.id = nimCopy(res_2969576698.id, newId_2046820597(), NTI2046820355);
          Label19: {
            Label20: {
              var res_2969576701 = null;
              res_2969576701 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576701.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576698, res_2969576701);
            Label22: {
              var res_2969576703 = null;
              res_2969576703 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576703.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576698, res_2969576703);
          };
        };
      };
      var node_2969576731 = res_2969576698;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969576731, Field1: 1}), NTI2969572495);
      break BeforeRet;
      break;
    case "call-func":
      var sym_2969576735 = computeSymbol_3019919344(ctx_2969567289, node_2969576473, true);
        var oHEX60gensym183_2969576738 = nimCopy(null, sym_2969576735, NTI3087008909);
        if (!isSome_3087009356(oHEX60gensym183_2969576738)) Temporary26 = false; else {          var sym_2969576761 = get_3087009376(oHEX60gensym183_2969576738);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2969576761.kind == 1);        }      if (Temporary25) {
      var Temporary27 = sym_2969576761;
      if (ConstSet178[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      Temporary24 = Temporary27.operatorNotation;
      }
      else {
      Temporary24 = 0;
      }
      
      var kind_2969576766 = Temporary24;
      switch (kind_2969576766) {
      case 1:
      case 2:
        Label29: {
          var tmpHEX60gensym184_2969576771 = null;
          Label30: {
            var res_2969576777 = null;
            res_2969576777 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576777.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label32: {
              Label33: {
                var res_2969576779 = null;
                res_2969576779 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576779.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576777, res_2969576779);
              Label35: {
                var res_2969576781 = null;
                res_2969576781 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576781.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576777, res_2969576781);
            };
          };
        };
        Temporary28 = res_2969576777;
        break;
      case 3:
        Label37: {
          var tmpHEX60gensym194_2969576813 = null;
          Label38: {
            var res_2969576819 = null;
            res_2969576819 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576819.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label40: {
              Label41: {
                var res_2969576821 = null;
                res_2969576821 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576821.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576819, res_2969576821);
              Label43: {
                var res_2969576823 = null;
                res_2969576823 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576823.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576819, res_2969576823);
              Label45: {
                var res_2969576825 = null;
                res_2969576825 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576825.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576819, res_2969576825);
            };
          };
        };
        Temporary28 = res_2969576819;
        break;
      case 0:
        var typ_2969576862 = computeType_3019913434(ctx_2969567289, node_2969576473, true);
        if ((typ_2969576862.kind == 0)) {
        Label48: {
          var tmpHEX60gensym207_2969576871 = null;
          Label49: {
            var res_2969576877 = null;
            res_2969576877 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576877.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label51: {
              Label52: {
                var res_2969576879 = null;
                res_2969576879 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576879.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576877, res_2969576879);
              Label54: {
                var res_2969576881 = null;
                res_2969576881 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576881.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576877, res_2969576881);
              Label56: {
                var res_2969576883 = null;
                res_2969576883 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576883.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576877, res_2969576883);
            };
          };
        };
        Temporary47 = res_2969576877;
        }
        else {
        if (!((typ_2969576862.kind == 4))) {
        Label58: {
          var tmpHEX60gensym221_2969576928 = null;
          Label59: {
            var res_2969576934 = null;
            res_2969576934 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576934.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label61: {
              Label62: {
                var res_2969576936 = null;
                res_2969576936 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576936.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
            };
            add_3003121702(res_2969576934, res_2969576936);
          };
        };
        Temporary47 = res_2969576934;
        }
        else {
          Label64: {
            var tmpHEX60gensym228_2969576959 = null;
            Label65: {
              var res_2969576965 = null;
              res_2969576965 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576965.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label67: {
                Label68: {
                  var res_2969576967 = null;
                  res_2969576967 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2969576967.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_3003121702(res_2969576965, res_2969576967);
            };
          };
          var newNode_2969576986 = res_2969576965;
          Label70: {
            var __2969576990 = null;
            var colontmp__2969580233 = [];
            var Temporary71 = typ_2969576862;
            if (ConstSet179[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI3087007747)); }
            colontmp__2969580233 = Temporary71.paramTypes;
            var i_2969580234 = 0;
            var L_2969580235 = (colontmp__2969580233).length;
            Label72: {
                Label73: while (true) {
                if (!(i_2969580234 < L_2969580235)) break Label73;
                  __2969576990 = colontmp__2969580233[chckIndx(i_2969580234, 0, (colontmp__2969580233).length - 1)];
                  Label74: {
                    var tmpHEX60gensym235_2969576995 = null;
                    Label75: {
                      var res_2969577001 = null;
                      res_2969577001 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                      try {
                      res_2969577001.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                      if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                      raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                      }
                      else {
                      	reraiseException();
                      }
                      lastJSError = prevJSError;
                      } finally {
                      }
                    };
                  };
                  add_3003121702(newNode_2969576986, res_2969577001);
                  i_2969580234 = addInt(i_2969580234, 1);
                  if (!(((colontmp__2969580233).length == L_2969580235))) {
                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary47 = newNode_2969576986;
        }
        }
        Temporary28 = Temporary47;
        break;
      default: 
        result_2969576480 = nimCopy(result_2969576480, none_2969577011(), NTI2969572495);
        break BeforeRet;
        break;
      }
      var node_2969577030 = Temporary28;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577030, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "call-arg":
      Label77: {
        var tmpHEX60gensym239_2969577038 = null;
        Label78: {
          var res_2969577044 = null;
          res_2969577044 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577044.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label80: {
            Label81: {
              var res_2969577046 = null;
              res_2969577046 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577046.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577044, res_2969577046);
            Label83: {
              var res_2969577048 = null;
              res_2969577048 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577048.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577044, res_2969577048);
          };
        };
      };
      var node_2969577076 = res_2969577044;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577076, Field1: 1}), NTI2969572495);
      break BeforeRet;
      break;
    case "+":
      if ((typ_2969576474.kind == 2)) {
      Temporary85 = IdAppendString_2986344459;
      }
      else {
      Temporary85 = IdAdd_2986344451;
      }
      
      var operator_2969577084 = nimCopy(null, Temporary85, NTI2046820355);
      Label86: {
        var tmpHEX60gensym249_2969577089 = null;
        Label87: {
          var res_2969577095 = null;
          res_2969577095 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577095.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label89: {
            Label90: {
              var res_2969577097 = null;
              res_2969577097 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577097.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577097.reff = nimCopy(res_2969577097.reff, operator_2969577084, NTI2046820355);
            };
            add_3003121702(res_2969577095, res_2969577097);
            Label92: {
              var res_2969577100 = null;
              res_2969577100 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577100.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577095, res_2969577100);
            Label94: {
              var res_2969577102 = null;
              res_2969577102 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577102.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577095, res_2969577102);
          };
        };
      };
      var node_2969577139 = res_2969577095;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577139, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "-":
      Label96: {
        var tmpHEX60gensym262_2969577147 = null;
        Label97: {
          var res_2969577153 = null;
          res_2969577153 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577153.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label99: {
            Label100: {
              var res_2969577155 = null;
              res_2969577155 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577155.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577155.reff = nimCopy(res_2969577155.reff, IdSub_2986344452, NTI2046820355);
            };
            add_3003121702(res_2969577153, res_2969577155);
            Label102: {
              var res_2969577158 = null;
              res_2969577158 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577158.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577153, res_2969577158);
            Label104: {
              var res_2969577160 = null;
              res_2969577160 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577160.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577153, res_2969577160);
          };
        };
      };
      var node_2969577197 = res_2969577153;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577197, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "*":
      Label106: {
        var tmpHEX60gensym275_2969577205 = null;
        Label107: {
          var res_2969577211 = null;
          res_2969577211 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577211.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label109: {
            Label110: {
              var res_2969577213 = null;
              res_2969577213 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577213.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577213.reff = nimCopy(res_2969577213.reff, IdMul_2986344453, NTI2046820355);
            };
            add_3003121702(res_2969577211, res_2969577213);
            Label112: {
              var res_2969577216 = null;
              res_2969577216 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577216.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577211, res_2969577216);
            Label114: {
              var res_2969577218 = null;
              res_2969577218 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577218.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577211, res_2969577218);
          };
        };
      };
      var node_2969577255 = res_2969577211;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577255, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "/":
      Label116: {
        var tmpHEX60gensym288_2969577263 = null;
        Label117: {
          var res_2969577269 = null;
          res_2969577269 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577269.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label119: {
            Label120: {
              var res_2969577271 = null;
              res_2969577271 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577271.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577271.reff = nimCopy(res_2969577271.reff, IdDiv_2986344454, NTI2046820355);
            };
            add_3003121702(res_2969577269, res_2969577271);
            Label122: {
              var res_2969577274 = null;
              res_2969577274 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577274.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577269, res_2969577274);
            Label124: {
              var res_2969577276 = null;
              res_2969577276 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577276.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577269, res_2969577276);
          };
        };
      };
      var node_2969577313 = res_2969577269;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577313, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "%":
      Label126: {
        var tmpHEX60gensym301_2969577321 = null;
        Label127: {
          var res_2969577327 = null;
          res_2969577327 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577327.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label129: {
            Label130: {
              var res_2969577329 = null;
              res_2969577329 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577329.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577329.reff = nimCopy(res_2969577329.reff, IdMod_2986344455, NTI2046820355);
            };
            add_3003121702(res_2969577327, res_2969577329);
            Label132: {
              var res_2969577332 = null;
              res_2969577332 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577332.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577327, res_2969577332);
            Label134: {
              var res_2969577334 = null;
              res_2969577334 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577334.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577327, res_2969577334);
          };
        };
      };
      var node_2969577371 = res_2969577327;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577371, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "\"":
      Label136: {
        var tmpHEX60gensym314_2969577379 = null;
        Label137: {
          var res_2969577385 = null;
          res_2969577385 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577385.kind = 3;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969577385.text = nimCopy(null, [], NTI33554449);
        };
      };
      var node_2969577396 = res_2969577385;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577396, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "{":
      Label139: {
        var tmpHEX60gensym318_2969577404 = null;
        Label140: {
          var res_2969577410 = null;
          res_2969577410 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577410.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label142: {
            Label143: {
              var res_2969577412 = null;
              res_2969577412 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577412.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969577410, res_2969577412);
        };
      };
      var node_2969577431 = res_2969577410;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577431, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "=":
      Label145: {
        var tmpHEX60gensym325_2969577439 = null;
        Label146: {
          var res_2969577445 = null;
          res_2969577445 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577445.kind = 13;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label148: {
            Label149: {
              var res_2969577447 = null;
              res_2969577447 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577447.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577445, res_2969577447);
            Label151: {
              var res_2969577449 = null;
              res_2969577449 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577449.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577445, res_2969577449);
          };
        };
      };
      var node_2969577477 = res_2969577445;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577477, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "==":
      Label153: {
        var tmpHEX60gensym335_2969577485 = null;
        Label154: {
          var res_2969577491 = null;
          res_2969577491 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577491.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label156: {
            Label157: {
              var res_2969577493 = null;
              res_2969577493 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577493.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577493.reff = nimCopy(res_2969577493.reff, IdEqual_2986344467, NTI2046820355);
            };
            add_3003121702(res_2969577491, res_2969577493);
            Label159: {
              var res_2969577496 = null;
              res_2969577496 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577496.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577491, res_2969577496);
            Label161: {
              var res_2969577498 = null;
              res_2969577498 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577498.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577491, res_2969577498);
          };
        };
      };
      var node_2969577535 = res_2969577491;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577535, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "!=":
      Label163: {
        var tmpHEX60gensym348_2969577543 = null;
        Label164: {
          var res_2969577549 = null;
          res_2969577549 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577549.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label166: {
            Label167: {
              var res_2969577551 = null;
              res_2969577551 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577551.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577551.reff = nimCopy(res_2969577551.reff, IdNotEqual_2986344468, NTI2046820355);
            };
            add_3003121702(res_2969577549, res_2969577551);
            Label169: {
              var res_2969577554 = null;
              res_2969577554 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577554.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577549, res_2969577554);
            Label171: {
              var res_2969577556 = null;
              res_2969577556 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577556.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577549, res_2969577556);
          };
        };
      };
      var node_2969577593 = res_2969577549;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577593, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "<=":
      Label173: {
        var tmpHEX60gensym361_2969577601 = null;
        Label174: {
          var res_2969577607 = null;
          res_2969577607 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577607.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label176: {
            Label177: {
              var res_2969577609 = null;
              res_2969577609 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577609.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577609.reff = nimCopy(res_2969577609.reff, IdLessEqual_2986344464, NTI2046820355);
            };
            add_3003121702(res_2969577607, res_2969577609);
            Label179: {
              var res_2969577612 = null;
              res_2969577612 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577612.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577607, res_2969577612);
            Label181: {
              var res_2969577614 = null;
              res_2969577614 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577614.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577607, res_2969577614);
          };
        };
      };
      var node_2969577651 = res_2969577607;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577651, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case ">=":
      Label183: {
        var tmpHEX60gensym374_2969577659 = null;
        Label184: {
          var res_2969577665 = null;
          res_2969577665 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577665.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label186: {
            Label187: {
              var res_2969577667 = null;
              res_2969577667 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577667.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577667.reff = nimCopy(res_2969577667.reff, IdGreaterEqual_2986344466, NTI2046820355);
            };
            add_3003121702(res_2969577665, res_2969577667);
            Label189: {
              var res_2969577670 = null;
              res_2969577670 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577670.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577665, res_2969577670);
            Label191: {
              var res_2969577672 = null;
              res_2969577672 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577672.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577665, res_2969577672);
          };
        };
      };
      var node_2969577709 = res_2969577665;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577709, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "<":
      Label193: {
        var tmpHEX60gensym387_2969577717 = null;
        Label194: {
          var res_2969577723 = null;
          res_2969577723 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577723.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label196: {
            Label197: {
              var res_2969577725 = null;
              res_2969577725 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577725.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577725.reff = nimCopy(res_2969577725.reff, IdLess_2986344463, NTI2046820355);
            };
            add_3003121702(res_2969577723, res_2969577725);
            Label199: {
              var res_2969577728 = null;
              res_2969577728 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577728.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577723, res_2969577728);
            Label201: {
              var res_2969577730 = null;
              res_2969577730 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577730.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577723, res_2969577730);
          };
        };
      };
      var node_2969577767 = res_2969577723;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577767, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case ">":
      Label203: {
        var tmpHEX60gensym400_2969577775 = null;
        Label204: {
          var res_2969577781 = null;
          res_2969577781 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577781.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label206: {
            Label207: {
              var res_2969577783 = null;
              res_2969577783 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577783.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577783.reff = nimCopy(res_2969577783.reff, IdGreater_2986344465, NTI2046820355);
            };
            add_3003121702(res_2969577781, res_2969577783);
            Label209: {
              var res_2969577786 = null;
              res_2969577786 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577786.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577781, res_2969577786);
            Label211: {
              var res_2969577788 = null;
              res_2969577788 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577788.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577781, res_2969577788);
          };
        };
      };
      var node_2969577825 = res_2969577781;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577825, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "<>":
      Label213: {
        var tmpHEX60gensym413_2969577833 = null;
        Label214: {
          var res_2969577839 = null;
          res_2969577839 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577839.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label216: {
            Label217: {
              var res_2969577841 = null;
              res_2969577841 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577841.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577841.reff = nimCopy(res_2969577841.reff, IdOrder_2986344471, NTI2046820355);
            };
            add_3003121702(res_2969577839, res_2969577841);
            Label219: {
              var res_2969577844 = null;
              res_2969577844 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577844.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577839, res_2969577844);
            Label221: {
              var res_2969577846 = null;
              res_2969577846 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577846.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577839, res_2969577846);
          };
        };
      };
      var node_2969577883 = res_2969577839;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577883, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "and":
      Label223: {
        var tmpHEX60gensym426_2969577891 = null;
        Label224: {
          var res_2969577897 = null;
          res_2969577897 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577897.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label226: {
            Label227: {
              var res_2969577899 = null;
              res_2969577899 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577899.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577899.reff = nimCopy(res_2969577899.reff, IdAnd_2986344469, NTI2046820355);
            };
            add_3003121702(res_2969577897, res_2969577899);
            Label229: {
              var res_2969577902 = null;
              res_2969577902 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577902.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577897, res_2969577902);
            Label231: {
              var res_2969577904 = null;
              res_2969577904 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577904.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577897, res_2969577904);
          };
        };
      };
      var node_2969577941 = res_2969577897;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577941, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "or":
      Label233: {
        var tmpHEX60gensym439_2969577949 = null;
        Label234: {
          var res_2969577955 = null;
          res_2969577955 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577955.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label236: {
            Label237: {
              var res_2969577957 = null;
              res_2969577957 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577957.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577957.reff = nimCopy(res_2969577957.reff, IdOr_2986344470, NTI2046820355);
            };
            add_3003121702(res_2969577955, res_2969577957);
            Label239: {
              var res_2969577960 = null;
              res_2969577960 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577960.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577955, res_2969577960);
            Label241: {
              var res_2969577962 = null;
              res_2969577962 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577962.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577955, res_2969577962);
          };
        };
      };
      var node_2969577999 = res_2969577955;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577999, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    default: 
      result_2969576480 = nimCopy(result_2969576480, none_2969577011(), NTI2969572495);
      break BeforeRet;
      break;
    }
  };

  return result_2969576480;

}

function isSome_2969580018(self_2969580020) {
  var result_2969580021 = false;

    result_2969580021 = self_2969580020.has;

  return result_2969580021;

}

function isNone_2969580043(self_2969580045) {
  var result_2969580046 = false;

    result_2969580046 = !(self_2969580045.has);

  return result_2969580046;

}

function get_2969580035(self_2969580037) {
  var result_2969580038 = {Field0: null, Field1: 0};

    if (isNone_2969580043(self_2969580037)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969580038 = self_2969580037.val;

  return result_2969580038;

}

function insertNode_2969573868(document_2969573869, node_2969573870, index_2969573871, newNode_2969573872) {
  var result_2969576242 = ({val: null});

  BeforeRet: {
    var node_2969576243 = node_2969573870;
    var index_2969576244 = index_2969573871;
    if ((node_2969576243 == null)) {
    node_2969576243 = document_2969573869.rootNode;
    index_2969576244 = 0;
    }
    
    document_2969573869.undoOps.push({kind: 2, parent: node_2969576243, idx: index_2969576244, node: newNode_2969573872, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969573869.redoOps = nimCopy(null, [], NTI2969572196);
    insert_3003121718(node_2969576243, newNode_2969573872, index_2969576244);
    handleNodeInserted_2969571616(document_2969573869, newNode_2969573872);
    result_2969576242 = nimCopy(result_2969576242, some_3003121890(newNode_2969573872), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576242;

}

function shouldEditNode_2969578349(doc_2969578350, node_2969578351) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2969578352 = false;

  BeforeRet: {
    if (((node_2969578351.kind == 0) && eqStrings(node_2969578351.text, []))) {
    result_2969578352 = true;
    break BeforeRet;
    }
    
    if (((node_2969578351.kind == 2) && eqStrings(node_2969578351.text, []))) {
    result_2969578352 = true;
    break BeforeRet;
    }
    
    if ((node_2969578351.kind == 4)) {
    var oHEX60gensym522_2969578367 = computeSymbol_3019919344(ctx_2969567289, node_2969578351, true);
    if (!isSome_3087009356(oHEX60gensym522_2969578367)) Temporary2 = false; else {      var symbol_2969578390 = get_3087009376(oHEX60gensym522_2969578367);
      Temporary2 = true;    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = eqStrings(symbol_2969578390.name, []);    }    result_2969578352 = Temporary1;
    break BeforeRet;
    }
    
    if ((node_2969578351.kind == 5)) {
    var oHEX60gensym523_2969578397 = computeSymbol_3019919344(ctx_2969567289, node_2969578351, true);
    if (!isSome_3087009356(oHEX60gensym523_2969578397)) Temporary4 = false; else {      var symbol_2969578420 = get_3087009376(oHEX60gensym523_2969578397);
      Temporary4 = true;    }    if (!Temporary4) Temporary3 = false; else {      Temporary3 = eqStrings(symbol_2969578420.name, []);    }    result_2969578352 = Temporary3;
    break BeforeRet;
    }
    
    if ((node_2969578351.kind == 6)) {
    var oHEX60gensym524_2969578427 = computeSymbol_3019919344(ctx_2969567289, node_2969578351, true);
    if (!isSome_3087009356(oHEX60gensym524_2969578427)) Temporary6 = false; else {      var symbol_2969578450 = get_3087009376(oHEX60gensym524_2969578427);
      Temporary6 = true;    }    if (!Temporary6) Temporary5 = false; else {      Temporary5 = eqStrings(symbol_2969578450.name, []);    }    result_2969578352 = Temporary5;
    break BeforeRet;
    }
    
    result_2969578352 = false;
    break BeforeRet;
  };

  return result_2969578352;

}

function formatValue_2969575169(result_2969575171, result_2969575171_Idx, value_2969575172, specifier_2969575173) {
    formatValue_721420459(result_2969575171, result_2969575171_Idx, reprEnum(value_2969575172, NTI3087007753), specifier_2969575173);

  
}

function nsuSplitLines(s_855638695, keepEol_855638696) {
            var Temporary6;

  var result_855638697 = [];

    result_855638697 = nimCopy(null, [], NTI855638541);
    Label1: {
      var xHEX60gensym75_855638703 = [];
      var first_2969580338 = 0;
      var last_2969580339 = 0;
      var eolpos_2969580340 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2969580339 < (s_855638695).length) && !((ConstSet181[s_855638695[chckIndx(last_2969580339, 0, (s_855638695).length - 1)]] != undefined)))) break Label5;
                  last_2969580339 = addInt(last_2969580339, 1);
                }
            };
            eolpos_2969580340 = last_2969580339;
            if ((last_2969580339 < (s_855638695).length)) {
            if ((s_855638695[chckIndx(last_2969580339, 0, (s_855638695).length - 1)] == 10)) {
            last_2969580339 = addInt(last_2969580339, 1);
            }
            else {
            if ((s_855638695[chckIndx(last_2969580339, 0, (s_855638695).length - 1)] == 13)) {
            last_2969580339 = addInt(last_2969580339, 1);
            if (((last_2969580339 < (s_855638695).length) && (s_855638695[chckIndx(last_2969580339, 0, (s_855638695).length - 1)] == 10))) {
            last_2969580339 = addInt(last_2969580339, 1);
            }
            
            }
            }
            }
            
            if (keepEol_855638696) {
            Temporary6 = subInt(last_2969580339, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2969580340, 1);
            }
            
            xHEX60gensym75_855638703 = substr_33557821(s_855638695, first_2969580338, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym75_855638703, NTI33554449);
            result_855638697.push(Temporary7);;
            if ((eolpos_2969580340 == last_2969580339)) {
            break Label2;
            }
            
            first_2969580338 = last_2969580339;
          }
      };
    };

  return result_855638697;

}

function contentHEX3D_2818573948(self_2818573949, value_2818573950) {
    if (self_2818573949.singleLine) {
    self_2818573949.lines = nimCopy(null, [nsuReplaceStr(value_2818573950, [10], [])], NTI1560281203);
    if (((self_2818573949.lines).length == 0)) {
    self_2818573949.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    if (!((self_2818573949.tsParser == null))) {
    self_2818573949.currentTree = parseString_2885681211(self_2818573949.tsParser, self_2818573949.lines[chckIndx(0, 0, (self_2818573949.lines).length - 1)], none_2885681218());
    }
    
    }
    else {
      self_2818573949.lines = nimCopy(null, nsuSplitLines(value_2818573950, false), NTI855638530);
      if (((self_2818573949.lines).length == 0)) {
      self_2818573949.lines = nimCopy(null, [[]], NTI1560281203);
      }
      
      if (!((self_2818573949.tsParser == null))) {
      self_2818573949.currentTree = parseString_2885681211(self_2818573949.tsParser, value_2818573950, none_2885681218());
      }
      
    }
    
    self_2818573949.version = addInt(self_2818573949.version, 1);
    notifyTextChanged_2818573268(self_2818573949);

  
}

function newTextDocument_2818579088(filename_2818579090, content_2818579091, app_2818579092) {
  var result_2818579093 = null;

    result_2818579093 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_2818579097 = result_2818579093;
    self_2818579097.filename = nimCopy(null, filename_2818579090, NTI33554449);
    self_2818579097.currentTree = null;
    self_2818579097.appFile = app_2818579092;
    var _ = initTreesitter_2818578870(self_2818579097);
    var language_2818579098 = getLanguageForFile_2902458372(filename_2818579090);
    if (isSome_2348810304(language_2818579098)) {
    self_2818579097.languageId = nimCopy(null, get_2818578907(language_2818579098), NTI33554449);
    }
    
    contentHEX3D_2818573948(self_2818579097, content_2818579091);

  return result_2818579093;

}

function newSeq_503316959(len_503316961) {
  var result_503316962 = [];

    result_503316962 = new Array(len_503316961); for (var i = 0 ; i < len_503316961 ; ++i) { result_503316962[i] = []; }
  return result_503316962;

}

function contentHEX3D_2818573989(self_2818573990, value_2818573991) {
    if (self_2818573990.singleLine) {
    self_2818573990.lines = nimCopy(null, [nsuJoinSep(value_2818573991, [])], NTI1560281203);
    }
    else {
      Label1: {
        var iHEX60gensym22_2818574053 = 0;
        var resultHEX60gensym22_2818574060 = newSeq_503316959(chckRange((value_2818573991).length, 0, 2147483647));
        Label2: {
          var itHEX60gensym22_2818574064 = [];
          var i_2969580345 = 0;
          var L_2969580346 = (value_2818573991).length;
          Label3: {
              Label4: while (true) {
              if (!(i_2969580345 < L_2969580346)) break Label4;
                itHEX60gensym22_2818574064 = value_2818573991[chckIndx(i_2969580345, 0, (value_2818573991).length - 1)];
                resultHEX60gensym22_2818574060[chckIndx(iHEX60gensym22_2818574053, 0, (resultHEX60gensym22_2818574060).length - 1)] = nimCopy(null, itHEX60gensym22_2818574064, NTI33554449);
                iHEX60gensym22_2818574053 = addInt(iHEX60gensym22_2818574053, 1);
                i_2969580345 = addInt(i_2969580345, 1);
                if (!(((value_2818573991).length == L_2969580346))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      self_2818573990.lines = nimCopy(null, resultHEX60gensym22_2818574060, NTI503316776);
    }
    
    if (((self_2818573990.lines).length == 0)) {
    self_2818573990.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var strValue_2818574076 = nsuJoinSep(value_2818573991, [10]);
    if (!((self_2818573990.tsParser == null))) {
    self_2818573990.currentTree = parseString_2885681211(self_2818573990.tsParser, strValue_2818574076, none_2885681218());
    }
    
    self_2818573990.version = addInt(self_2818573990.version, 1);
    notifyTextChanged_2818573268(self_2818573990);

  
}

function createTextEditorInstance_2818593552() {
  var result_2818593553 = null;

  BeforeRet: {
    var editor_2818593558 = {eventHandler: null, selectionsInternal: [nimCopy(null, toSelection_2449474032({Field0: 0, Field1: 0}), NTI2449473548)], m_type: NTI2818572510, editor: null, document: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, disableScrolling: false, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], disableCompletions: false, completions: [], selectedCompletion: 0, completionsBaseIndex: 0, completionsScrollOffset: 0.0, lastItems: [], lastCompletionsWidget: null, lastCompletionWidgets: [], showCompletions: false, scrollToCompletion: ({val: 0, has: false}), id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2818593558 = createWithPrototype(editor_text_prototype, editor_2818593558);
    result_2818593553 = editor_2818593558;
    break BeforeRet;
  };

  return result_2818593553;

}

function newEditorId_2449473854() {
  var result_2449473855 = 0;

    result_2449473855 = nextEditorId_2449473853[0];
    nextEditorId_2449473853[0] = addInt(nextEditorId_2449473853[0], 1);

  return result_2449473855;

}

function init_2415919138(self_2415919139) {
    self_2415919139.id = newEditorId_2449473854();
    self_2415919139.renderHeader = true;
    self_2415919139.fillAvailableSpace = true;

  
}

function subscribe_2818593616(event_2818593618, callback_2818593620) {
  var result_2818593621 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_2818593621 = nimCopy(result_2818593621, newId_2046820597(), NTI2046820355);
    event_2818593618.handlers.push({Field0: nimCopy(null, result_2818593621, NTI2046820355), Field1: callback_2818593620});;

  return result_2818593621;

}

function clampSelection_2818573266(self_2818573267) {
    selectionsHEX3D_2818573083(self_2818573267, clampAndMergeSelections_2818572798(self_2818573267, self_2818573267.selectionsInternal));
    markDirty_2415919143(self_2818573267);

  
}

function handleTextDocumentTextChanged_2818593550(self_2818593551) {
    clampSelection_2818573266(self_2818593551);
    updateSearchResults_2818580294(self_2818593551);
    markDirty_2415919143(self_2818593551);

  
}

function newTextEditor_2818593568(document_2818593569, ed_2818593570) {
    
function HEX3Aanonymous_2818593591(__2818593592) {
        handleTextDocumentTextChanged_2818593550(editor_2818593572);

      
    }

  var result_2818593571 = null;

  BeforeRet: {
    var editor_2818593572 = createTextEditorInstance_2818593552();
    editor_2818593572.document = document_2818593569;
    init_2415919138(editor_2818593572);
    if (((editor_2818593572.document.lines).length == 0)) {
    editor_2818593572.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    injectDependencies_1291847761(editor_2818593572, ed_2818593570);
    var _ = subscribe_2818593616(document_2818593569.textChanged, HEX3Aanonymous_2818593591);
    result_2818593571 = editor_2818593572;
    break BeforeRet;
  };

  return result_2818593571;

}

function some_3187671914(val_3187671916) {
  var result_3187671917 = ({val: 0, has: false});

    result_3187671917.has = true;
    result_3187671917.val = val_3187671916;

  return result_3187671917;

}

function handleTextDocumentChanged_2969575149(self_2969575150) {
    updateCompletions_2969569740(self_2969575150);
    self_2969575150.selectedCompletion = 0;
    self_2969575150.scrollToCompletion = nimCopy(self_2969575150.scrollToCompletion, some_1191184367(self_2969575150.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2969575150);

  
}

function editSymbol_2969575161(self_2969575162, symbol_2969575163) {
    var Temporary1;
    
function HEX3Aanonymous_2969575219(doc_2969575220) {
        handleTextDocumentChanged_2969575149(self_2969575162);

      
    }

    var fmtRes_2969575168 = [mnewString(0)];
    fmtRes_2969575168[0].push.apply(fmtRes_2969575168[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2969575168, 0, symbol_2969575163.name, []);
    fmtRes_2969575168[0].push.apply(fmtRes_2969575168[0], [32,40]);;
    formatValue_2969575169(fmtRes_2969575168, 0, symbol_2969575163.kind, []);
    fmtRes_2969575168[0].push.apply(fmtRes_2969575168[0], [44,32]);;
    formatValue_3036676344(fmtRes_2969575168, 0, symbol_2969575163.id, []);
    fmtRes_2969575168[0].push.apply(fmtRes_2969575168[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575168[0], NTI33554449)]);
    if ((symbol_2969575163.kind == 0)) {
    var fmtRes_2969575190 = [mnewString(0)];
    fmtRes_2969575190[0].push.apply(fmtRes_2969575190[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32,110,111,100,101,32]);;
    var Temporary1 = symbol_2969575163;
    if (ConstSet180[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    formatValue_3087008590(fmtRes_2969575190, 0, Temporary1.node, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575190[0], NTI33554449)]);
    }
    
    self_2969575162.currentlyEditedNode = null;
    self_2969575162.currentlyEditedSymbol = nimCopy(self_2969575162.currentlyEditedSymbol, symbol_2969575163.id, NTI2046820355);
    self_2969575162.textDocument = newTextDocument_2818579088([], [], false);
    contentHEX3D_2818573989(self_2969575162.textDocument, [nimCopy(null, symbol_2969575163.name, NTI33554449)]);
    self_2969575162.textEditor = newTextEditor_2818593568(self_2969575162.textDocument, self_2969575162.editor);
    setMode_2818584222(self_2969575162.textEditor, [105,110,115,101,114,116]);
    self_2969575162.textEditor.renderHeader = false;
    self_2969575162.textEditor.fillAvailableSpace = false;
    self_2969575162.textEditor.disableScrolling = true;
    self_2969575162.textEditor.disableCompletions = true;
    self_2969575162.textEditor.lineNumbers = nimCopy(self_2969575162.textEditor.lineNumbers, some_3187671914(0), NTI2818572554);
    var _ = subscribe_2818593616(self_2969575162.textDocument.textChanged, HEX3Aanonymous_2969575219);
    updateCompletions_2969569740(self_2969575162);
    markDirty_2415919143(self_2969575162);

  
}

function editNode_2969575249(self_2969575250, node_2969575251) {
    
function HEX3Aanonymous_2969575281(doc_2969575282) {
        handleTextDocumentChanged_2969575149(self_2969575250);

      
    }

    var fmtRes_2969575256 = [mnewString(0)];
    fmtRes_2969575256[0].push.apply(fmtRes_2969575256[0], [69,100,105,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008590(fmtRes_2969575256, 0, node_2969575251, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575256[0], NTI33554449)]);
    self_2969575250.currentlyEditedNode = node_2969575251;
    self_2969575250.currentlyEditedSymbol = nimCopy(self_2969575250.currentlyEditedSymbol, null_2046820646, NTI2046820355);
    self_2969575250.textDocument = newTextDocument_2818579088([], [], false);
    contentHEX3D_2818573989(self_2969575250.textDocument, nsuSplitLines(node_2969575251.text, false));
    self_2969575250.textEditor = newTextEditor_2818593568(self_2969575250.textDocument, self_2969575250.editor);
    setMode_2818584222(self_2969575250.textEditor, [105,110,115,101,114,116]);
    self_2969575250.textEditor.renderHeader = false;
    self_2969575250.textEditor.fillAvailableSpace = false;
    self_2969575250.textEditor.disableScrolling = true;
    self_2969575250.textEditor.disableCompletions = true;
    self_2969575250.textEditor.lineNumbers = nimCopy(self_2969575250.textEditor.lineNumbers, some_3187671914(0), NTI2818572554);
    var _ = subscribe_2818593616(self_2969575250.textDocument.textChanged, HEX3Aanonymous_2969575281);
    updateCompletions_2969569740(self_2969575250);
    markDirty_2415919143(self_2969575250);

  
}

function tryEdit_2969575311(self_2969575312, node_2969575313) {
      var Temporary1;
      var Temporary2;

  var result_2969575314 = false;

  BeforeRet: {
      var oHEX60gensym119_2969575317 = getSymbol_3019906948(ctx_2969567289, node_2969575313.id);
      if (!isSome_3087009356(oHEX60gensym119_2969575317)) Temporary1 = false; else {        var sym_2969575340 = get_3087009376(oHEX60gensym119_2969575317);
        Temporary1 = true;      }    if (Temporary1) {
    editSymbol_2969575161(self_2969575312, sym_2969575340);
    result_2969575314 = true;
    break BeforeRet;
    }
    else {
      var oHEX60gensym120_2969575343 = getSymbol_3019906948(ctx_2969567289, node_2969575313.reff);
      if (!isSome_3087009356(oHEX60gensym120_2969575343)) Temporary2 = false; else {        var sym_2969575366 = get_3087009376(oHEX60gensym120_2969575343);
        Temporary2 = true;      }    if (Temporary2) {
    editSymbol_2969575161(self_2969575312, sym_2969575366);
    result_2969575314 = true;
    break BeforeRet;
    }
    else {
      switch (node_2969575313.kind) {
      case 0:
      case 2:
      case 3:
        editNode_2969575249(self_2969575312, node_2969575313);
        result_2969575314 = true;
        break BeforeRet;
        break;
      default: 
        result_2969575314 = false;
        break BeforeRet;
        break;
      }
    }
    }
  };

  return result_2969575314;

}

function insertAfterSmart_2969580005(self_2969580006, nodeTemplate_2969580007) {
      var Temporary2;
      var Temporary5;
      var Temporary6;
      
function HEX3Aanonymous_2969580087(n_2969580090) {
        var result_2969580093 = false;

          result_2969580093 = shouldEditNode_2969578349(self_2969580006.document, n_2969580090);

        return result_2969580093;

      }
                var Temporary12;
                var Temporary13;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580006)) {
    break BeforeRet;
    }
    
    var node_2969580008 = node_2969569752(self_2969580006);
    Label1: {
      var next_2969580009 = null;
      if (true) {
      Temporary2 = node_2969580008;
      }
      else {
      Temporary2 = node_2969580008.parent;
      }
      
      var node_2969580170 = Temporary2;
      Label3: {
          Label4: while (true) {
          if (!!((node_2969580170 == null))) break Label4;
            next_2969580009 = node_2969580170;
            if (canInsertInto_2969578688(self_2969580006, next_2969580009.parent)) {
            node_2969580008 = next_2969580009;
            break Label1;
            }
            
            node_2969580170 = node_2969580170.parent;
          }
      };
    };
    var index_2969580010 = index_3003121772(node_2969580008);
      var oHEX60gensym659_2969580013 = createNodeFromAction_2969576470(self_2969580006, nodeTemplate_2969580007, node_2969580008, errorType_3087008131());
      if (!isSome_2969580018(oHEX60gensym659_2969580013)) Temporary5 = false; else {        var newNodeIndex_2969580058 = nimCopy(null, get_2969580035(oHEX60gensym659_2969580013), NTI2969572490);
        Temporary5 = true;      }    if (Temporary5) {
    var newNode_2969580059 = newNodeIndex_2969580058["Field0"];
    var __2969580060 = newNodeIndex_2969580058["Field1"];
      var oHEX60gensym661_2969580063 = insertNode_2969573868(self_2969580006.document, node_2969580008.parent, addInt(index_2969580010, 1), newNode_2969580059);
      if (!isSome_3003123546(oHEX60gensym661_2969580063)) Temporary6 = false; else {        var node_2969580086 = get_3003123566(oHEX60gensym661_2969580063);
        Temporary6 = true;      }    if (Temporary6) {
    nodeHEX3D_2969570829(self_2969580006, node_2969580086);
    Label7: {
      var __2969580094 = 0;
      var emptyNode_2969580095 = null;
      var colontmp__2969580173 = null;
      colontmp__2969580173 = HEX3Aanonymous_2969580087;
      var i_2969580181 = 0;
      Label8: {
        var __2969580183 = 0;
        var child_2969580184 = null;
        var n_2969580185 = newNode_2969580059;
        var idx_2969580186 = -1;
        var i_2969580187 = 0;
        Label9: {
            Label10: while (true) {
            if (!true) break Label10;
              try {
              if ((idx_2969580186 == -1)) {
              __2969580183 = i_2969580187;
              child_2969580184 = n_2969580185;
              if (colontmp__2969580173(child_2969580184)) {
              __2969580094 = i_2969580181;
              emptyNode_2969580095 = child_2969580184;
              nodeHEX3D_2969570829(self_2969580006, emptyNode_2969580095);
              var _ = tryEdit_2969575311(self_2969580006, node_2969569752(self_2969580006));
              break Label7;
              i_2969580181 = addInt(i_2969580181, 1);
              }
              
              }
              
              if ((addInt(idx_2969580186, 1) < len_3003121752(n_2969580185))) {
              n_2969580185 = HEX5BHEX5D_3003121748(n_2969580185, addInt(idx_2969580186, 1));
              idx_2969580186 = -1;
              }
              else {
                var oHEX60gensym55_2969580189 = next_3003121857(n_2969580185);
                if (!isSome_3003123546(oHEX60gensym55_2969580189)) Temporary13 = false; else {                  var ne_2969580190 = get_3003123566(oHEX60gensym55_2969580189);
                  Temporary13 = true;                }                if (!Temporary13) Temporary12 = false; else {                  Temporary12 = !((n_2969580185 == newNode_2969580059));                }              if (Temporary12) {
              n_2969580185 = ne_2969580190;
              idx_2969580186 = -1;
              }
              else {
              if (((!((n_2969580185.parent == null)) && !((n_2969580185 == newNode_2969580059))) && !((n_2969580185.parent == newNode_2969580059)))) {
              idx_2969580186 = index_3003121772(n_2969580185);
              n_2969580185 = n_2969580185.parent;
              }
              else {
                break Label9;
              }
              }}
              } finally {
              i_2969580187 = addInt(i_2969580187, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580100 = [mnewString(0)];
      fmtRes_2969580100[0].push.apply(fmtRes_2969580100[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580100, 0, newNode_2969580059, []);
      fmtRes_2969580100[0].push.apply(fmtRes_2969580100[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580100, 0, node_2969569752(self_2969580006).parent, []);
      fmtRes_2969580100[0].push.apply(fmtRes_2969580100[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580100, 0, addInt(index_2969580010, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580100[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterSmartJsWrapper_2969580002(self_2969580153, nodeTemplate_2969580154) {
    insertAfterSmart_2969580005(self_2969580153, nodeTemplate_2969580154);

  
}
editor_ast_prototype.insertAfterSmart = function(nodeTemplate_ /* : string */) { return (insertAfterSmartJsWrapper_2969580002(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertAfter_2969580353(self_2969580354, nodeTemplate_2969580355) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580412(n_2969580415) {
        var result_2969580418 = false;

          result_2969580418 = shouldEditNode_2969578349(self_2969580354.document, n_2969580415);

        return result_2969580418;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580354)) {
    break BeforeRet;
    }
    
    var node_2969580356 = node_2969569752(self_2969580354);
    var index_2969580357 = index_3003121772(node_2969580356);
      var oHEX60gensym671_2969580360 = createNodeFromAction_2969576470(self_2969580354, nodeTemplate_2969580355, node_2969580356, errorType_3087008131());
      if (!isSome_2969580018(oHEX60gensym671_2969580360)) Temporary1 = false; else {        var newNodeIndex_2969580383 = nimCopy(null, get_2969580035(oHEX60gensym671_2969580360), NTI2969572490);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580384 = newNodeIndex_2969580383["Field0"];
    var __2969580385 = newNodeIndex_2969580383["Field1"];
      var oHEX60gensym672_2969580388 = insertNode_2969573868(self_2969580354.document, node_2969580356.parent, addInt(index_2969580357, 1), newNode_2969580384);
      if (!isSome_3003123546(oHEX60gensym672_2969580388)) Temporary2 = false; else {        var node_2969580411 = get_3003123566(oHEX60gensym672_2969580388);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969580354, node_2969580411);
    Label3: {
      var __2969580419 = 0;
      var emptyNode_2969580420 = null;
      var colontmp__2969580485 = null;
      colontmp__2969580485 = HEX3Aanonymous_2969580412;
      var i_2969580486 = 0;
      Label4: {
        var __2969580488 = 0;
        var child_2969580489 = null;
        var n_2969580490 = newNode_2969580384;
        var idx_2969580491 = -1;
        var i_2969580492 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580491 == -1)) {
              __2969580488 = i_2969580492;
              child_2969580489 = n_2969580490;
              if (colontmp__2969580485(child_2969580489)) {
              __2969580419 = i_2969580486;
              emptyNode_2969580420 = child_2969580489;
              nodeHEX3D_2969570829(self_2969580354, emptyNode_2969580420);
              var _ = tryEdit_2969575311(self_2969580354, node_2969569752(self_2969580354));
              break Label3;
              i_2969580486 = addInt(i_2969580486, 1);
              }
              
              }
              
              if ((addInt(idx_2969580491, 1) < len_3003121752(n_2969580490))) {
              n_2969580490 = HEX5BHEX5D_3003121748(n_2969580490, addInt(idx_2969580491, 1));
              idx_2969580491 = -1;
              }
              else {
                var oHEX60gensym55_2969580494 = next_3003121857(n_2969580490);
                if (!isSome_3003123546(oHEX60gensym55_2969580494)) Temporary9 = false; else {                  var ne_2969580495 = get_3003123566(oHEX60gensym55_2969580494);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580490 == newNode_2969580384));                }              if (Temporary8) {
              n_2969580490 = ne_2969580495;
              idx_2969580491 = -1;
              }
              else {
              if (((!((n_2969580490.parent == null)) && !((n_2969580490 == newNode_2969580384))) && !((n_2969580490.parent == newNode_2969580384)))) {
              idx_2969580491 = index_3003121772(n_2969580490);
              n_2969580490 = n_2969580490.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580492 = addInt(i_2969580492, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580425 = [mnewString(0)];
      fmtRes_2969580425[0].push.apply(fmtRes_2969580425[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580425, 0, newNode_2969580384, []);
      fmtRes_2969580425[0].push.apply(fmtRes_2969580425[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580425, 0, node_2969569752(self_2969580354).parent, []);
      fmtRes_2969580425[0].push.apply(fmtRes_2969580425[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580425, 0, addInt(index_2969580357, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580425[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterJsWrapper_2969580350(self_2969580469, nodeTemplate_2969580470) {
    insertAfter_2969580353(self_2969580469, nodeTemplate_2969580470);

  
}
editor_ast_prototype.insertAfter = function(nodeTemplate_ /* : string */) { return (insertAfterJsWrapper_2969580350(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertBefore_2969580501(self_2969580502, nodeTemplate_2969580503) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580559(n_2969580562) {
        var result_2969580565 = false;

          result_2969580565 = shouldEditNode_2969578349(self_2969580502.document, n_2969580562);

        return result_2969580565;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580502)) {
    break BeforeRet;
    }
    
    var index_2969580504 = index_3003121772(node_2969569752(self_2969580502));
      var oHEX60gensym682_2969580507 = createNodeFromAction_2969576470(self_2969580502, nodeTemplate_2969580503, node_2969569752(self_2969580502), errorType_3087008131());
      if (!isSome_2969580018(oHEX60gensym682_2969580507)) Temporary1 = false; else {        var newNodeIndex_2969580530 = nimCopy(null, get_2969580035(oHEX60gensym682_2969580507), NTI2969572490);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580531 = newNodeIndex_2969580530["Field0"];
    var __2969580532 = newNodeIndex_2969580530["Field1"];
      var oHEX60gensym683_2969580535 = insertNode_2969573868(self_2969580502.document, node_2969569752(self_2969580502).parent, index_2969580504, newNode_2969580531);
      if (!isSome_3003123546(oHEX60gensym683_2969580535)) Temporary2 = false; else {        var node_2969580558 = get_3003123566(oHEX60gensym683_2969580535);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969580502, node_2969580558);
    Label3: {
      var __2969580566 = 0;
      var emptyNode_2969580567 = null;
      var colontmp__2969580632 = null;
      colontmp__2969580632 = HEX3Aanonymous_2969580559;
      var i_2969580633 = 0;
      Label4: {
        var __2969580635 = 0;
        var child_2969580636 = null;
        var n_2969580637 = newNode_2969580531;
        var idx_2969580638 = -1;
        var i_2969580639 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580638 == -1)) {
              __2969580635 = i_2969580639;
              child_2969580636 = n_2969580637;
              if (colontmp__2969580632(child_2969580636)) {
              __2969580566 = i_2969580633;
              emptyNode_2969580567 = child_2969580636;
              nodeHEX3D_2969570829(self_2969580502, emptyNode_2969580567);
              var _ = tryEdit_2969575311(self_2969580502, node_2969569752(self_2969580502));
              break Label3;
              i_2969580633 = addInt(i_2969580633, 1);
              }
              
              }
              
              if ((addInt(idx_2969580638, 1) < len_3003121752(n_2969580637))) {
              n_2969580637 = HEX5BHEX5D_3003121748(n_2969580637, addInt(idx_2969580638, 1));
              idx_2969580638 = -1;
              }
              else {
                var oHEX60gensym55_2969580641 = next_3003121857(n_2969580637);
                if (!isSome_3003123546(oHEX60gensym55_2969580641)) Temporary9 = false; else {                  var ne_2969580642 = get_3003123566(oHEX60gensym55_2969580641);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580637 == newNode_2969580531));                }              if (Temporary8) {
              n_2969580637 = ne_2969580642;
              idx_2969580638 = -1;
              }
              else {
              if (((!((n_2969580637.parent == null)) && !((n_2969580637 == newNode_2969580531))) && !((n_2969580637.parent == newNode_2969580531)))) {
              idx_2969580638 = index_3003121772(n_2969580637);
              n_2969580637 = n_2969580637.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580639 = addInt(i_2969580639, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580572 = [mnewString(0)];
      fmtRes_2969580572[0].push.apply(fmtRes_2969580572[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580572, 0, newNode_2969580531, []);
      fmtRes_2969580572[0].push.apply(fmtRes_2969580572[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580572, 0, node_2969569752(self_2969580502).parent, []);
      fmtRes_2969580572[0].push.apply(fmtRes_2969580572[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580572, 0, index_2969580504, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580572[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertBeforeJsWrapper_2969580498(self_2969580616, nodeTemplate_2969580617) {
    insertBefore_2969580501(self_2969580616, nodeTemplate_2969580617);

  
}
editor_ast_prototype.insertBefore = function(nodeTemplate_ /* : string */) { return (insertBeforeJsWrapper_2969580498(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertChild_2969580648(self_2969580649, nodeTemplate_2969580650) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580705(n_2969580708) {
        var result_2969580711 = false;

          result_2969580711 = shouldEditNode_2969578349(self_2969580649.document, n_2969580708);

        return result_2969580711;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580649)) {
    break BeforeRet;
    }
    
      var oHEX60gensym693_2969580653 = createNodeFromAction_2969576470(self_2969580649, nodeTemplate_2969580650, node_2969569752(self_2969580649), errorType_3087008131());
      if (!isSome_2969580018(oHEX60gensym693_2969580653)) Temporary1 = false; else {        var newNodeIndex_2969580676 = nimCopy(null, get_2969580035(oHEX60gensym693_2969580653), NTI2969572490);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580677 = newNodeIndex_2969580676["Field0"];
    var __2969580678 = newNodeIndex_2969580676["Field1"];
      var oHEX60gensym694_2969580681 = insertNode_2969573868(self_2969580649.document, node_2969569752(self_2969580649), len_3003121752(node_2969569752(self_2969580649)), newNode_2969580677);
      if (!isSome_3003123546(oHEX60gensym694_2969580681)) Temporary2 = false; else {        var node_2969580704 = get_3003123566(oHEX60gensym694_2969580681);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969580649, node_2969580704);
    Label3: {
      var __2969580712 = 0;
      var emptyNode_2969580713 = null;
      var colontmp__2969580778 = null;
      colontmp__2969580778 = HEX3Aanonymous_2969580705;
      var i_2969580779 = 0;
      Label4: {
        var __2969580781 = 0;
        var child_2969580782 = null;
        var n_2969580783 = newNode_2969580677;
        var idx_2969580784 = -1;
        var i_2969580785 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580784 == -1)) {
              __2969580781 = i_2969580785;
              child_2969580782 = n_2969580783;
              if (colontmp__2969580778(child_2969580782)) {
              __2969580712 = i_2969580779;
              emptyNode_2969580713 = child_2969580782;
              nodeHEX3D_2969570829(self_2969580649, emptyNode_2969580713);
              var _ = tryEdit_2969575311(self_2969580649, node_2969569752(self_2969580649));
              break Label3;
              i_2969580779 = addInt(i_2969580779, 1);
              }
              
              }
              
              if ((addInt(idx_2969580784, 1) < len_3003121752(n_2969580783))) {
              n_2969580783 = HEX5BHEX5D_3003121748(n_2969580783, addInt(idx_2969580784, 1));
              idx_2969580784 = -1;
              }
              else {
                var oHEX60gensym55_2969580787 = next_3003121857(n_2969580783);
                if (!isSome_3003123546(oHEX60gensym55_2969580787)) Temporary9 = false; else {                  var ne_2969580788 = get_3003123566(oHEX60gensym55_2969580787);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580783 == newNode_2969580677));                }              if (Temporary8) {
              n_2969580783 = ne_2969580788;
              idx_2969580784 = -1;
              }
              else {
              if (((!((n_2969580783.parent == null)) && !((n_2969580783 == newNode_2969580677))) && !((n_2969580783.parent == newNode_2969580677)))) {
              idx_2969580784 = index_3003121772(n_2969580783);
              n_2969580783 = n_2969580783.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580785 = addInt(i_2969580785, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580718 = [mnewString(0)];
      fmtRes_2969580718[0].push.apply(fmtRes_2969580718[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580718, 0, newNode_2969580677, []);
      fmtRes_2969580718[0].push.apply(fmtRes_2969580718[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580718, 0, node_2969569752(self_2969580649), []);
      fmtRes_2969580718[0].push.apply(fmtRes_2969580718[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580718, 0, len_3003121752(node_2969569752(self_2969580649)), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580718[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertChildJsWrapper_2969580645(self_2969580762, nodeTemplate_2969580763) {
    insertChild_2969580648(self_2969580762, nodeTemplate_2969580763);

  
}
editor_ast_prototype.insertChild = function(nodeTemplate_ /* : string */) { return (insertChildJsWrapper_2969580645(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replace_2969580794(self_2969580795, nodeTemplate_2969580796) {
      var Temporary1;
      
function HEX3Aanonymous_2969580825(n_2969580828) {
        var result_2969580831 = false;

          result_2969580831 = shouldEditNode_2969578349(self_2969580795.document, n_2969580828);

        return result_2969580831;

      }
                var Temporary7;
                var Temporary8;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580795)) {
    break BeforeRet;
    }
    
      var oHEX60gensym704_2969580799 = createNodeFromAction_2969576470(self_2969580795, nodeTemplate_2969580796, node_2969569752(self_2969580795), errorType_3087008131());
      if (!isSome_2969580018(oHEX60gensym704_2969580799)) Temporary1 = false; else {        var newNodeIndex_2969580822 = nimCopy(null, get_2969580035(oHEX60gensym704_2969580799), NTI2969572490);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580823 = newNodeIndex_2969580822["Field0"];
    var __2969580824 = newNodeIndex_2969580822["Field1"];
    nodeHEX3D_2969570829(self_2969580795, replaceNode_2969576151(self_2969580795.document, node_2969569752(self_2969580795), newNode_2969580823));
    Label2: {
      var __2969580832 = 0;
      var emptyNode_2969580833 = null;
      var colontmp__2969580878 = null;
      colontmp__2969580878 = HEX3Aanonymous_2969580825;
      var i_2969580879 = 0;
      Label3: {
        var __2969580881 = 0;
        var child_2969580882 = null;
        var n_2969580883 = newNode_2969580823;
        var idx_2969580884 = -1;
        var i_2969580885 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2969580884 == -1)) {
              __2969580881 = i_2969580885;
              child_2969580882 = n_2969580883;
              if (colontmp__2969580878(child_2969580882)) {
              __2969580832 = i_2969580879;
              emptyNode_2969580833 = child_2969580882;
              nodeHEX3D_2969570829(self_2969580795, emptyNode_2969580833);
              var _ = tryEdit_2969575311(self_2969580795, node_2969569752(self_2969580795));
              break Label2;
              i_2969580879 = addInt(i_2969580879, 1);
              }
              
              }
              
              if ((addInt(idx_2969580884, 1) < len_3003121752(n_2969580883))) {
              n_2969580883 = HEX5BHEX5D_3003121748(n_2969580883, addInt(idx_2969580884, 1));
              idx_2969580884 = -1;
              }
              else {
                var oHEX60gensym55_2969580887 = next_3003121857(n_2969580883);
                if (!isSome_3003123546(oHEX60gensym55_2969580887)) Temporary8 = false; else {                  var ne_2969580888 = get_3003123566(oHEX60gensym55_2969580887);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2969580883 == newNode_2969580823));                }              if (Temporary7) {
              n_2969580883 = ne_2969580888;
              idx_2969580884 = -1;
              }
              else {
              if (((!((n_2969580883.parent == null)) && !((n_2969580883 == newNode_2969580823))) && !((n_2969580883.parent == newNode_2969580823)))) {
              idx_2969580884 = index_3003121772(n_2969580883);
              n_2969580883 = n_2969580883.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2969580885 = addInt(i_2969580885, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceJsWrapper_2969580791(self_2969580862, nodeTemplate_2969580863) {
    replace_2969580794(self_2969580862, nodeTemplate_2969580863);

  
}
editor_ast_prototype.replace = function(nodeTemplate_ /* : string */) { return (replaceJsWrapper_2969580791(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceEmpty_2969580894(self_2969580895, nodeTemplate_2969580896) {
      var Temporary1;
        var Temporary2;
      
function HEX3Aanonymous_2969580929(n_2969580932) {
        var result_2969580935 = false;

          result_2969580935 = shouldEditNode_2969578349(self_2969580895.document, n_2969580932);

        return result_2969580935;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580895)) {
    break BeforeRet;
    }
    
      if (!(node_2969569752(self_2969580895).kind == 0)) Temporary1 = false; else {        var oHEX60gensym713_2969580903 = createNodeFromAction_2969576470(self_2969580895, nodeTemplate_2969580896, node_2969569752(self_2969580895), errorType_3087008131());
        if (!isSome_2969580018(oHEX60gensym713_2969580903)) Temporary2 = false; else {          var newNodeIndex_2969580926 = nimCopy(null, get_2969580035(oHEX60gensym713_2969580903), NTI2969572490);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    var newNode_2969580927 = newNodeIndex_2969580926["Field0"];
    var __2969580928 = newNodeIndex_2969580926["Field1"];
    nodeHEX3D_2969570829(self_2969580895, replaceNode_2969576151(self_2969580895.document, node_2969569752(self_2969580895), newNode_2969580927));
    Label3: {
      var __2969580936 = 0;
      var emptyNode_2969580937 = null;
      var colontmp__2969580982 = null;
      colontmp__2969580982 = HEX3Aanonymous_2969580929;
      var i_2969580983 = 0;
      Label4: {
        var __2969580985 = 0;
        var child_2969580986 = null;
        var n_2969580987 = newNode_2969580927;
        var idx_2969580988 = -1;
        var i_2969580989 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580988 == -1)) {
              __2969580985 = i_2969580989;
              child_2969580986 = n_2969580987;
              if (colontmp__2969580982(child_2969580986)) {
              __2969580936 = i_2969580983;
              emptyNode_2969580937 = child_2969580986;
              nodeHEX3D_2969570829(self_2969580895, emptyNode_2969580937);
              var _ = tryEdit_2969575311(self_2969580895, node_2969569752(self_2969580895));
              break Label3;
              i_2969580983 = addInt(i_2969580983, 1);
              }
              
              }
              
              if ((addInt(idx_2969580988, 1) < len_3003121752(n_2969580987))) {
              n_2969580987 = HEX5BHEX5D_3003121748(n_2969580987, addInt(idx_2969580988, 1));
              idx_2969580988 = -1;
              }
              else {
                var oHEX60gensym55_2969580991 = next_3003121857(n_2969580987);
                if (!isSome_3003123546(oHEX60gensym55_2969580991)) Temporary9 = false; else {                  var ne_2969580992 = get_3003123566(oHEX60gensym55_2969580991);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580987 == newNode_2969580927));                }              if (Temporary8) {
              n_2969580987 = ne_2969580992;
              idx_2969580988 = -1;
              }
              else {
              if (((!((n_2969580987.parent == null)) && !((n_2969580987 == newNode_2969580927))) && !((n_2969580987.parent == newNode_2969580927)))) {
              idx_2969580988 = index_3003121772(n_2969580987);
              n_2969580987 = n_2969580987.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580989 = addInt(i_2969580989, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceEmptyJsWrapper_2969580891(self_2969580966, nodeTemplate_2969580967) {
    replaceEmpty_2969580894(self_2969580966, nodeTemplate_2969580967);

  
}
editor_ast_prototype.replaceEmpty = function(nodeTemplate_ /* : string */) { return (replaceEmptyJsWrapper_2969580891(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceParent_2969580998(self_2969580999) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969580999)) {
    break BeforeRet;
    }
    
    var node_2969581000 = node_2969569752(self_2969580999);
    if (((node_2969581000.parent == null) || (node_2969581000.parent == self_2969580999.document.rootNode))) {
    break BeforeRet;
    }
    
    var parent_2969581009 = node_2969581000.parent;
    var _ = deleteNode_2969576215(self_2969580999.document, node_2969569752(self_2969580999));
    nodeHEX3D_2969570829(self_2969580999, replaceNode_2969576151(self_2969580999.document, parent_2969581009, node_2969581000));
  };

  
}

function replaceParentJsWrapper_2969580995(self_2969581037) {
    replaceParent_2969580998(self_2969581037);

  
}
editor_ast_prototype.replaceParent = function() { return (replaceParentJsWrapper_2969580995(this));};

function wrap_2969581051(self_2969581052, nodeTemplate_2969581053) {
      var Temporary1;
      
function HEX3Aanonymous_2969581084(n_2969581087) {
        var result_2969581090 = false;

          result_2969581090 = (n_2969581087.kind == 0);

        return result_2969581090;

      }
                var Temporary7;
                var Temporary8;
      
function HEX3Aanonymous_2969581097(n_2969581100) {
        var result_2969581103 = false;

          result_2969581103 = shouldEditNode_2969578349(self_2969581052.document, n_2969581100);

        return result_2969581103;

      }
                var Temporary14;
                var Temporary15;

  BeforeRet: {
    if (isEditing_2969575154(self_2969581052)) {
    break BeforeRet;
    }
    
    var typ_2969581054 = computeType_3019913434(ctx_2969567289, node_2969569752(self_2969581052), true);
      var oHEX60gensym729_2969581057 = createNodeFromAction_2969576470(self_2969581052, nodeTemplate_2969581053, node_2969569752(self_2969581052), typ_2969581054);
      if (!isSome_2969580018(oHEX60gensym729_2969581057)) Temporary1 = false; else {        var newNodeIndex_2969581080 = nimCopy(null, get_2969580035(oHEX60gensym729_2969581057), NTI2969572490);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969581081 = newNodeIndex_2969581080["Field0"];
    var index_2969581082 = newNodeIndex_2969581080["Field1"];
    var oldNode_2969581083 = node_2969569752(self_2969581052);
    nodeHEX3D_2969570829(self_2969581052, replaceNode_2969576151(self_2969581052.document, node_2969569752(self_2969581052), newNode_2969581081));
    Label2: {
      var i_2969581095 = 0;
      var emptyNode_2969581096 = null;
      var colontmp__2969581159 = null;
      colontmp__2969581159 = HEX3Aanonymous_2969581084;
      var i_2969581160 = 0;
      Label3: {
        var __2969581162 = 0;
        var child_2969581163 = null;
        var n_2969581164 = newNode_2969581081;
        var idx_2969581165 = -1;
        var i_2969581166 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2969581165 == -1)) {
              __2969581162 = i_2969581166;
              child_2969581163 = n_2969581164;
              if (colontmp__2969581159(child_2969581163)) {
              i_2969581095 = i_2969581160;
              emptyNode_2969581096 = child_2969581163;
              if ((i_2969581095 == index_2969581082)) {
              nodeHEX3D_2969570829(self_2969581052, replaceNode_2969576151(self_2969581052.document, emptyNode_2969581096, oldNode_2969581083));
              break Label2;
              }
              
              i_2969581160 = addInt(i_2969581160, 1);
              }
              
              }
              
              if ((addInt(idx_2969581165, 1) < len_3003121752(n_2969581164))) {
              n_2969581164 = HEX5BHEX5D_3003121748(n_2969581164, addInt(idx_2969581165, 1));
              idx_2969581165 = -1;
              }
              else {
                var oHEX60gensym55_2969581168 = next_3003121857(n_2969581164);
                if (!isSome_3003123546(oHEX60gensym55_2969581168)) Temporary8 = false; else {                  var ne_2969581169 = get_3003123566(oHEX60gensym55_2969581168);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2969581164 == newNode_2969581081));                }              if (Temporary7) {
              n_2969581164 = ne_2969581169;
              idx_2969581165 = -1;
              }
              else {
              if (((!((n_2969581164.parent == null)) && !((n_2969581164 == newNode_2969581081))) && !((n_2969581164.parent == newNode_2969581081)))) {
              idx_2969581165 = index_3003121772(n_2969581164);
              n_2969581164 = n_2969581164.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2969581166 = addInt(i_2969581166, 1);
              }
            }
        };
      };
    };
    Label9: {
      var __2969581104 = 0;
      var emptyNode_2969581105 = null;
      var colontmp__2969581171 = null;
      colontmp__2969581171 = HEX3Aanonymous_2969581097;
      var i_2969581172 = 0;
      Label10: {
        var __2969581174 = 0;
        var child_2969581175 = null;
        var n_2969581176 = newNode_2969581081;
        var idx_2969581177 = -1;
        var i_2969581178 = 0;
        Label11: {
            Label12: while (true) {
            if (!true) break Label12;
              try {
              if ((idx_2969581177 == -1)) {
              __2969581174 = i_2969581178;
              child_2969581175 = n_2969581176;
              if (colontmp__2969581171(child_2969581175)) {
              __2969581104 = i_2969581172;
              emptyNode_2969581105 = child_2969581175;
              nodeHEX3D_2969570829(self_2969581052, emptyNode_2969581105);
              var _ = tryEdit_2969575311(self_2969581052, node_2969569752(self_2969581052));
              break Label9;
              i_2969581172 = addInt(i_2969581172, 1);
              }
              
              }
              
              if ((addInt(idx_2969581177, 1) < len_3003121752(n_2969581176))) {
              n_2969581176 = HEX5BHEX5D_3003121748(n_2969581176, addInt(idx_2969581177, 1));
              idx_2969581177 = -1;
              }
              else {
                var oHEX60gensym55_2969581180 = next_3003121857(n_2969581176);
                if (!isSome_3003123546(oHEX60gensym55_2969581180)) Temporary15 = false; else {                  var ne_2969581181 = get_3003123566(oHEX60gensym55_2969581180);
                  Temporary15 = true;                }                if (!Temporary15) Temporary14 = false; else {                  Temporary14 = !((n_2969581176 == newNode_2969581081));                }              if (Temporary14) {
              n_2969581176 = ne_2969581181;
              idx_2969581177 = -1;
              }
              else {
              if (((!((n_2969581176.parent == null)) && !((n_2969581176 == newNode_2969581081))) && !((n_2969581176.parent == newNode_2969581081)))) {
              idx_2969581177 = index_3003121772(n_2969581176);
              n_2969581176 = n_2969581176.parent;
              }
              else {
                break Label11;
              }
              }}
              } finally {
              i_2969581178 = addInt(i_2969581178, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function wrapJsWrapper_2969581048(self_2969581143, nodeTemplate_2969581144) {
    wrap_2969581051(self_2969581143, nodeTemplate_2969581144);

  
}
editor_ast_prototype.wrap = function(nodeTemplate_ /* : string */) { return (wrapJsWrapper_2969581048(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function editPrevEmpty_2969581187(self_2969581188) {
              var Temporary4;

  BeforeRet: {
    if (isEditing_2969575154(self_2969581188)) {
    break BeforeRet;
    }
    
    var current_2969581189 = node_2969569752(self_2969581188);
    Label1: {
      var emptyNode_2969581190 = null;
      var colontmp__2969581232 = null;
      colontmp__2969581232 = node_2969569752(self_2969581188);
      var idx_2969581233 = 0;
      var n_2969581234 = colontmp__2969581232;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969581234 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969581234), 1)), subInt(idx_2969581233, 1))) {
            n_2969581234 = HEX5BHEX5D_3003121748(n_2969581234, subInt(idx_2969581233, 1));
            idx_2969581233 = len_3003121752(n_2969581234);
            }
            else {
              var oHEX60gensym74_2969581236 = prev_3003121903(n_2969581234);
              if (!isSome_3003123546(oHEX60gensym74_2969581236)) Temporary4 = false; else {                var ne_2969581237 = get_3003123566(oHEX60gensym74_2969581236);
                Temporary4 = true;              }            if (Temporary4) {
            emptyNode_2969581190 = n_2969581234;
            if ((!((emptyNode_2969581190 == current_2969581189)) && shouldEditNode_2969578349(self_2969581188.document, emptyNode_2969581190))) {
            nodeHEX3D_2969570829(self_2969581188, emptyNode_2969581190);
            var _ = tryEdit_2969575311(self_2969581188, node_2969569752(self_2969581188));
            break Label1;
            }
            
            n_2969581234 = ne_2969581237;
            idx_2969581233 = len_3003121752(n_2969581234);
            }
            else {
              emptyNode_2969581190 = n_2969581234;
              if ((!((emptyNode_2969581190 == current_2969581189)) && shouldEditNode_2969578349(self_2969581188.document, emptyNode_2969581190))) {
              nodeHEX3D_2969570829(self_2969581188, emptyNode_2969581190);
              var _ = tryEdit_2969575311(self_2969581188, node_2969569752(self_2969581188));
              break Label1;
              }
              
              idx_2969581233 = index_3003121772(n_2969581234);
              n_2969581234 = n_2969581234.parent;
            }
            }
          }
      };
    };
  };

  
}

function editPrevEmptyJsWrapper_2969581184(self_2969581222) {
    editPrevEmpty_2969581187(self_2969581222);

  
}
editor_ast_prototype.editPrevEmpty = function() { return (editPrevEmptyJsWrapper_2969581184(this));};

function editNextEmpty_2969581243(self_2969581244) {
      
function HEX3Aanonymous_2969581246(n_2969581249) {
        var result_2969581252 = false;

          result_2969581252 = (!((n_2969581249 == current_2969581245)) && shouldEditNode_2969578349(self_2969581244.document, n_2969581249));

        return result_2969581252;

      }
                var Temporary6;
                var Temporary7;

  BeforeRet: {
    if (isEditing_2969575154(self_2969581244)) {
    break BeforeRet;
    }
    
    var current_2969581245 = node_2969569752(self_2969581244);
    Label1: {
      var __2969581257 = 0;
      var emptyNode_2969581258 = null;
      var colontmp__2969581296 = null;
      var colontmp__2969581297 = null;
      colontmp__2969581296 = node_2969569752(self_2969581244);
      colontmp__2969581297 = HEX3Aanonymous_2969581246;
      var i_2969581298 = 0;
      Label2: {
        var __2969581300 = 0;
        var child_2969581301 = null;
        var n_2969581302 = colontmp__2969581296;
        var idx_2969581303 = -1;
        var i_2969581304 = 0;
        Label3: {
            Label4: while (true) {
            if (!true) break Label4;
              try {
              if ((idx_2969581303 == -1)) {
              __2969581300 = i_2969581304;
              child_2969581301 = n_2969581302;
              if (colontmp__2969581297(child_2969581301)) {
              __2969581257 = i_2969581298;
              emptyNode_2969581258 = child_2969581301;
              nodeHEX3D_2969570829(self_2969581244, emptyNode_2969581258);
              var _ = tryEdit_2969575311(self_2969581244, node_2969569752(self_2969581244));
              break Label1;
              i_2969581298 = addInt(i_2969581298, 1);
              }
              
              }
              
              if ((addInt(idx_2969581303, 1) < len_3003121752(n_2969581302))) {
              n_2969581302 = HEX5BHEX5D_3003121748(n_2969581302, addInt(idx_2969581303, 1));
              idx_2969581303 = -1;
              }
              else {
                var oHEX60gensym55_2969581306 = next_3003121857(n_2969581302);
                if (!isSome_3003123546(oHEX60gensym55_2969581306)) Temporary7 = false; else {                  var ne_2969581307 = get_3003123566(oHEX60gensym55_2969581306);
                  Temporary7 = true;                }                if (!Temporary7) Temporary6 = false; else {                  Temporary6 = !((n_2969581302 == null));                }              if (Temporary6) {
              n_2969581302 = ne_2969581307;
              idx_2969581303 = -1;
              }
              else {
              if (((!((n_2969581302.parent == null)) && !((n_2969581302 == null))) && !((n_2969581302.parent == null)))) {
              idx_2969581303 = index_3003121772(n_2969581302);
              n_2969581302 = n_2969581302.parent;
              }
              else {
                break Label3;
              }
              }}
              } finally {
              i_2969581304 = addInt(i_2969581304, 1);
              }
            }
        };
      };
    };
  };

  
}

function editNextEmptyJsWrapper_2969581240(self_2969581286) {
    editNextEmpty_2969581243(self_2969581286);

  
}
editor_ast_prototype.editNextEmpty = function() { return (editNextEmptyJsWrapper_2969581240(this));};

function rename_2969581313(self_2969581314) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969581314)) {
    break BeforeRet;
    }
    
    var _ = tryEdit_2969575311(self_2969581314, node_2969569752(self_2969581314));
  };

  
}

function renameJsWrapper_2969581310(self_2969581342) {
    rename_2969581313(self_2969581342);

  
}
editor_ast_prototype.rename = function() { return (renameJsWrapper_2969581310(this));};

function selectPrevCompletion_2969581356(self_2969581357) {
    if ((0 < (self_2969581357.completions).length)) {
    if ((self_2969581357.selectedCompletion == 0)) {
    self_2969581357.selectedCompletion = (self_2969581357.completions).length - 1;
    }
    else {
      self_2969581357.selectedCompletion = clamp_1660945119(subInt(self_2969581357.selectedCompletion, 1), 0, (self_2969581357.completions).length - 1);
    }
    
    }
    else {
      self_2969581357.selectedCompletion = 0;
    }
    
    self_2969581357.scrollToCompletion = nimCopy(self_2969581357.scrollToCompletion, some_1191184367(self_2969581357.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2969581357);

  
}

function selectPrevCompletionJsWrapper2_2969581353(self_2969581402) {
    selectPrevCompletion_2969581356(self_2969581402);

  
}
editor_ast_prototype.selectPrevCompletion2 = function() { return (selectPrevCompletionJsWrapper2_2969581353(this));};

function selectNextCompletion_2969581416(self_2969581417) {
    if ((0 < (self_2969581417.completions).length)) {
    if ((self_2969581417.selectedCompletion == (self_2969581417.completions).length - 1)) {
    self_2969581417.selectedCompletion = 0;
    }
    else {
      self_2969581417.selectedCompletion = clamp_1660945119(addInt(self_2969581417.selectedCompletion, 1), 0, (self_2969581417.completions).length - 1);
    }
    
    }
    else {
      self_2969581417.selectedCompletion = 0;
    }
    
    self_2969581417.scrollToCompletion = nimCopy(self_2969581417.scrollToCompletion, some_1191184367(self_2969581417.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2969581417);

  
}

function selectNextCompletionJsWrapper2_2969581413(self_2969581462) {
    selectNextCompletion_2969581416(self_2969581462);

  
}
editor_ast_prototype.selectNextCompletion2 = function() { return (selectNextCompletionJsWrapper2_2969581413(this));};

function createDefaultNode_2969578005(editor_2969578006, kind_2969578007) {
  var result_2969578009 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (kind_2969578007) {
    case 0:
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: {kind: 0, id: newId_2046820597(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 1:
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: {kind: 1, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 2:
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 3:
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: {kind: 3, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 4:
      Label1: {
        var tmpHEX60gensym452_2969578026 = null;
        Label2: {
          var res_2969578032 = null;
          res_2969578032 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578032.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578032.id = nimCopy(res_2969578032.id, newId_2046820597(), NTI2046820355);
          Label4: {
            Label5: {
              var res_2969578035 = null;
              res_2969578035 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578035.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969578032, res_2969578035);
        };
      };
      var node_2969578054 = res_2969578032;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578054, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 5:
      Label7: {
        var tmpHEX60gensym459_2969578062 = null;
        Label8: {
          var res_2969578068 = null;
          res_2969578068 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578068.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578068.id = nimCopy(res_2969578068.id, newId_2046820597(), NTI2046820355);
          Label10: {
            Label11: {
              var res_2969578071 = null;
              res_2969578071 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578071.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578068, res_2969578071);
            Label13: {
              var res_2969578073 = null;
              res_2969578073 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578073.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578068, res_2969578073);
          };
        };
      };
      var node_2969578101 = res_2969578068;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578101, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 6:
      Label15: {
        var tmpHEX60gensym469_2969578109 = null;
        Label16: {
          var res_2969578115 = null;
          res_2969578115 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578115.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578115.id = nimCopy(res_2969578115.id, newId_2046820597(), NTI2046820355);
          Label18: {
            Label19: {
              var res_2969578118 = null;
              res_2969578118 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578118.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578115, res_2969578118);
            Label21: {
              var res_2969578120 = null;
              res_2969578120 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578120.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578115, res_2969578120);
          };
        };
      };
      var node_2969578148 = res_2969578115;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578148, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 11:
      Label23: {
        var tmpHEX60gensym479_2969578156 = null;
        Label24: {
          var res_2969578162 = null;
          res_2969578162 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578162.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label26: {
            Label27: {
              var res_2969578164 = null;
              res_2969578164 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578164.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578162, res_2969578164);
            Label29: {
              var res_2969578166 = null;
              res_2969578166 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578166.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578162, res_2969578166);
            Label31: {
              var res_2969578168 = null;
              res_2969578168 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578168.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label33: {
                Label34: {
                  var res_2969578170 = null;
                  res_2969578170 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2969578170.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_3003121702(res_2969578168, res_2969578170);
            };
            add_3003121702(res_2969578162, res_2969578168);
          };
        };
      };
      var node_2969578216 = res_2969578162;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578216, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 9:
      Label36: {
        var tmpHEX60gensym495_2969578224 = null;
        Label37: {
          var res_2969578230 = null;
          res_2969578230 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578230.kind = 9;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label39: {
            Label40: {
              var res_2969578232 = null;
              res_2969578232 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578232.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578230, res_2969578232);
            Label42: {
              var res_2969578234 = null;
              res_2969578234 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578234.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578230, res_2969578234);
          };
        };
      };
      var node_2969578262 = res_2969578230;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578262, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 10:
      Label44: {
        var tmpHEX60gensym505_2969578270 = null;
        Label45: {
          var res_2969578276 = null;
          res_2969578276 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578276.kind = 10;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label47: {
            Label48: {
              var res_2969578278 = null;
              res_2969578278 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578278.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578276, res_2969578278);
            Label50: {
              var res_2969578280 = null;
              res_2969578280 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578280.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578276, res_2969578280);
          };
        };
      };
      var node_2969578308 = res_2969578276;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578308, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 7:
      Label52: {
        var tmpHEX60gensym515_2969578316 = null;
        Label53: {
          var res_2969578322 = null;
          res_2969578322 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578322.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label55: {
            Label56: {
              var res_2969578324 = null;
              res_2969578324 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578324.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969578322, res_2969578324);
        };
      };
      var node_2969578343 = res_2969578322;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578343, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    default: 
      result_2969578009 = nimCopy(result_2969578009, none_2969577011(), NTI2969572495);
      break BeforeRet;
      break;
    }
  };

  return result_2969578009;

}

function applySelectedCompletion_2969581476(self_2969581477) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        
function HEX3Aanonymous_2969581582(n_2969581585) {
          var result_2969581588 = false;

            result_2969581588 = shouldEditNode_2969578349(self_2969581477.document, n_2969581585);

          return result_2969581588;

        }
                  var Temporary10;
                  var Temporary11;

  BeforeRet: {
    if ((self_2969581477.textDocument == null)) {
    break BeforeRet;
    }
    
    if (((self_2969581477.completions).length == 0)) {
    break BeforeRet;
    }
    
    var com_2969581485 = nimCopy(null, self_2969581477.completions[chckIndx(self_2969581477.selectedCompletion, 0, (self_2969581477.completions).length - 1)], NTI2969568638);
    var completionText_2969581486 = nimCopy(null, self_2969581477.completionText, NTI33554449);
    var fmtRes_2969581491 = [mnewString(0)];
    fmtRes_2969581491[0].push.apply(fmtRes_2969581491[0], [91,97,115,116,101,100,105,116,93,32,65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2701131945(fmtRes_2969581491, 0, self_2969581477.selectedCompletion, []);
    fmtRes_2969581491[0].push.apply(fmtRes_2969581491[0], [32,40]);;
    formatValue_721420459(fmtRes_2969581491, 0, completionText_2969581486, []);
    fmtRes_2969581491[0].push.apply(fmtRes_2969581491[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969581491[0], NTI33554449)]);
    finishEdit_2969575583(self_2969581477, false);
    markDirty_2415919143(self_2969581477);
    switch (com_2969581485.kind) {
    case 0:
        var Temporary2 = com_2969581485;
        if (ConstSet182[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568637)); }
        var oHEX60gensym777_2969581499 = getSymbol_3019906948(ctx_2969567289, Temporary2.id);
        if (!isSome_3087009356(oHEX60gensym777_2969581499)) Temporary1 = false; else {          var symbol_2969581522 = get_3087009376(oHEX60gensym777_2969581499);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2969570829(self_2969581477, replaceNode_2969576151(self_2969581477.document, node_2969569752(self_2969581477), {kind: 1, reff: nimCopy(null, symbol_2969581522.id, NTI2046820355), parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}));
      }
      
      break;
    case 1:
        var Temporary4 = com_2969581485;
        if (ConstSet183[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2969568637)); }
        var oHEX60gensym778_2969581525 = createDefaultNode_2969578005(self_2969581477, Temporary4.nodeKind);
        if (!isSome_2969580018(oHEX60gensym778_2969581525)) Temporary3 = false; else {          var nodeIndex_2969581548 = nimCopy(null, get_2969580035(oHEX60gensym778_2969581525), NTI2969572490);
          Temporary3 = true;        }      if (Temporary3) {
      var newNode_2969581549 = nodeIndex_2969581548["Field0"];
      var __2969581550 = nodeIndex_2969581548["Field1"];
      var _ = replaceNode_2969576151(self_2969581477.document, node_2969569752(self_2969581477), newNode_2969581549);
      if ((newNode_2969581549.kind == 2)) {
      newNode_2969581549.text = nimCopy(null, completionText_2969581486, NTI33554449);
      updateNode_3019955286(ctx_2969567289, newNode_2969581549);
      }
      else {
      if ((newNode_2969581549.kind == 3)) {
      if (!((completionText_2969581486[chckIndx(0, 0, (completionText_2969581486).length - 1)] == 34))) {
      failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,46,110,105,109,40,49,54,54,57,44,32,57,41,32,96,99,111,109,112,108,101,116,105,111,110,84,101,120,116,91,48,93,32,61,61,32,39,92,34,39,96,32]);
      }
      
      newNode_2969581549.text = nimCopy(null, HEX5BHEX5D_855639319(completionText_2969581486, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
      updateNode_3019955286(ctx_2969567289, newNode_2969581549);
      }
      }
      nodeHEX3D_2969570829(self_2969581477, newNode_2969581549);
      Label5: {
        var __2969581589 = 0;
        var emptyNode_2969581590 = null;
        var colontmp__2969581628 = null;
        colontmp__2969581628 = HEX3Aanonymous_2969581582;
        var i_2969581629 = 0;
        Label6: {
          var __2969581631 = 0;
          var child_2969581632 = null;
          var n_2969581633 = newNode_2969581549;
          var idx_2969581634 = -1;
          var i_2969581635 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2969581634 == -1)) {
                __2969581631 = i_2969581635;
                child_2969581632 = n_2969581633;
                if (colontmp__2969581628(child_2969581632)) {
                __2969581589 = i_2969581629;
                emptyNode_2969581590 = child_2969581632;
                nodeHEX3D_2969570829(self_2969581477, emptyNode_2969581590);
                var _ = tryEdit_2969575311(self_2969581477, node_2969569752(self_2969581477));
                break Label5;
                i_2969581629 = addInt(i_2969581629, 1);
                }
                
                }
                
                if ((addInt(idx_2969581634, 1) < len_3003121752(n_2969581633))) {
                n_2969581633 = HEX5BHEX5D_3003121748(n_2969581633, addInt(idx_2969581634, 1));
                idx_2969581634 = -1;
                }
                else {
                  var oHEX60gensym55_2969581637 = next_3003121857(n_2969581633);
                  if (!isSome_3003123546(oHEX60gensym55_2969581637)) Temporary11 = false; else {                    var ne_2969581638 = get_3003123566(oHEX60gensym55_2969581637);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2969581633 == newNode_2969581549));                  }                if (Temporary10) {
                n_2969581633 = ne_2969581638;
                idx_2969581634 = -1;
                }
                else {
                if (((!((n_2969581633.parent == null)) && !((n_2969581633 == newNode_2969581549))) && !((n_2969581633.parent == newNode_2969581549)))) {
                idx_2969581634 = index_3003121772(n_2969581633);
                n_2969581633 = n_2969581633.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2969581635 = addInt(i_2969581635, 1);
                }
              }
          };
        };
      };
      }
      
      break;
    }
  };

  
}

function applySelectedCompletionJsWrapper2_2969581473(self_2969581618) {
    applySelectedCompletion_2969581476(self_2969581618);

  
}
editor_ast_prototype.applySelectedCompletion2 = function() { return (applySelectedCompletionJsWrapper2_2969581473(this));};

function cancelAndNextCompletion_2969581680(self_2969581681) {
    finishEdit_2969575583(self_2969581681, false);
    editNextEmpty_2969581243(self_2969581681);

  
}

function cancelAndNextCompletionJsWrapper_2969581677(self_2969581709) {
    cancelAndNextCompletion_2969581680(self_2969581709);

  
}
editor_ast_prototype.cancelAndNextCompletion = function() { return (cancelAndNextCompletionJsWrapper_2969581677(this));};

function cancelAndPrevCompletion_2969581723(self_2969581724) {
    finishEdit_2969575583(self_2969581724, false);
    editPrevEmpty_2969581187(self_2969581724);

  
}

function cancelAndPrevCompletionJsWrapper_2969581720(self_2969581752) {
    cancelAndPrevCompletion_2969581723(self_2969581752);

  
}
editor_ast_prototype.cancelAndPrevCompletion = function() { return (cancelAndPrevCompletionJsWrapper_2969581720(this));};

function cancelAndDelete_2969581766(self_2969581767) {
    finishEdit_2969575583(self_2969581767, false);
    self_2969581767.deletedNode = nimCopy(self_2969581767.deletedNode, some_3003121890(node_2969569752(self_2969581767)), NTI3003121783);
    nodeHEX3D_2969570829(self_2969581767, deleteNode_2969576215(self_2969581767.document, node_2969569752(self_2969581767)));

  
}

function cancelAndDeleteJsWrapper_2969581763(self_2969581798) {
    cancelAndDelete_2969581766(self_2969581798);

  
}
editor_ast_prototype.cancelAndDelete = function() { return (cancelAndDeleteJsWrapper_2969581763(this));};

function none_3003121842() {
  var result_3003121849 = ({val: 0, has: false});

  return result_3003121849;

}

function index_3003121834(node_3003121835, parent_3003121836) {
  var result_3003121838 = ({val: 0, has: false});

  BeforeRet: {
    if ((node_3003121835.parent == null)) {
    result_3003121838 = nimCopy(result_3003121838, none_3003121842(), NTI1191183280);
    break BeforeRet;
    }
    
    if ((node_3003121835.parent == parent_3003121836)) {
    result_3003121838 = nimCopy(result_3003121838, some_1191184367(index_3003121772(node_3003121835)), NTI1191183280);
    break BeforeRet;
    }
    
    result_3003121838 = nimCopy(result_3003121838, index_3003121834(node_3003121835.parent, parent_3003121836), NTI1191183280);
    break BeforeRet;
  };

  return result_3003121838;

}

function get_1191185211(self_1191185213) {
  var result_1191185214 = 0;

    if (isNone_1191185194(self_1191185213)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1191185214 = self_1191185213["val"];

  return result_1191185214;

}

function moveNodeToPrevSpace_2969581812(self_2969581813) {
              var Temporary4;
      var Temporary7;
    var Temporary8;
      var Temporary9;
      var Temporary10;

    var wasEditing_2969581814 = isEditing_2969575154(self_2969581813);
    finishEdit_2969575583(self_2969581813, false);
    var targetNode_2969581821 = none_3003121871();
    Label1: {
      var next_2969581822 = null;
      var colontmp__2969581956 = null;
      colontmp__2969581956 = node_2969569752(self_2969581813);
      var idx_2969581957 = 0;
      var n_2969581958 = colontmp__2969581956;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969581958 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969581958), 1)), subInt(idx_2969581957, 1))) {
            n_2969581958 = HEX5BHEX5D_3003121748(n_2969581958, subInt(idx_2969581957, 1));
            idx_2969581957 = len_3003121752(n_2969581958);
            }
            else {
              var oHEX60gensym74_2969581960 = prev_3003121903(n_2969581958);
              if (!isSome_3003123546(oHEX60gensym74_2969581960)) Temporary4 = false; else {                var ne_2969581961 = get_3003123566(oHEX60gensym74_2969581960);
                Temporary4 = true;              }            if (Temporary4) {
            next_2969581822 = n_2969581958;
            Label5: {
              if ((next_2969581822 == node_2969569752(self_2969581813))) {
              break Label5;
              }
              
              if ((canInsertInto_2969578688(self_2969581813, next_2969581822) && (!((next_2969581822 == node_2969569752(self_2969581813).parent)) || (0 < index_3003121772(node_2969569752(self_2969581813)))))) {
              targetNode_2969581821 = nimCopy(targetNode_2969581821, some_3003121890(next_2969581822), NTI3003121804);
              break Label1;
              }
              
            };
            n_2969581958 = ne_2969581961;
            idx_2969581957 = len_3003121752(n_2969581958);
            }
            else {
              next_2969581822 = n_2969581958;
              Label6: {
                if ((next_2969581822 == node_2969569752(self_2969581813))) {
                break Label6;
                }
                
                if ((canInsertInto_2969578688(self_2969581813, next_2969581822) && (!((next_2969581822 == node_2969569752(self_2969581813).parent)) || (0 < index_3003121772(node_2969569752(self_2969581813)))))) {
                targetNode_2969581821 = nimCopy(targetNode_2969581821, some_3003121890(next_2969581822), NTI3003121804);
                break Label1;
                }
                
              };
              idx_2969581957 = index_3003121772(n_2969581958);
              n_2969581958 = n_2969581958.parent;
            }
            }
          }
      };
    };
      var oHEX60gensym813_2969581836 = nimCopy(null, targetNode_2969581821, NTI3003121804);
      if (!isSome_3003123546(oHEX60gensym813_2969581836)) Temporary7 = false; else {        var newParent_2969581859 = get_3003123566(oHEX60gensym813_2969581836);
        Temporary7 = true;      }    if (Temporary7) {
    var nodeToMove_2969581860 = node_2969569752(self_2969581813);
    if ((nodeToMove_2969581860.parent == newParent_2969581859)) {
    Temporary8 = subInt(index_3003121772(nodeToMove_2969581860), 1);
    }
    else {
      var oHEX60gensym814_2969581867 = index_3003121834(nodeToMove_2969581860, newParent_2969581859);
      if (!isSome_1191185117(oHEX60gensym814_2969581867)) Temporary9 = false; else {        var index_2969581890 = get_1191185211(oHEX60gensym814_2969581867);
        Temporary9 = true;      }    if (Temporary9) {
    Temporary8 = index_2969581890;
    }
    else {
    Temporary8 = len_3003121752(newParent_2969581859);
    }
    }
    var index_2969581891 = Temporary8;
    nodeHEX3D_2969570829(self_2969581813, deleteNode_2969576215(self_2969581813.document, nodeToMove_2969581860));
      var oHEX60gensym815_2969581894 = insertNode_2969573868(self_2969581813.document, newParent_2969581859, index_2969581891, nodeToMove_2969581860);
      if (!isSome_3003123546(oHEX60gensym815_2969581894)) Temporary10 = false; else {        var newNode_2969581917 = get_3003123566(oHEX60gensym815_2969581894);
        Temporary10 = true;      }    if (Temporary10) {
    nodeHEX3D_2969570829(self_2969581813, newNode_2969581917);
    if (wasEditing_2969581814) {
    var _ = tryEdit_2969575311(self_2969581813, node_2969569752(self_2969581813));
    }
    
    }
    
    }
    

  
}

function moveNodeToPrevSpaceJsWrapper_2969581809(self_2969581945) {
    moveNodeToPrevSpace_2969581812(self_2969581945);

  
}
editor_ast_prototype.moveNodeToPrevSpace = function() { return (moveNodeToPrevSpaceJsWrapper_2969581809(this));};

function moveNodeToNextSpace_2969581967(self_2969581968) {
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

    var wasEditing_2969581969 = isEditing_2969575154(self_2969581968);
    finishEdit_2969575583(self_2969581968, false);
    var targetNode_2969581976 = none_3003121871();
    Label1: {
      var __2969581977 = 0;
      var next_2969581978 = null;
      var colontmp__2969582112 = null;
      var colontmp__2969582113 = 0;
      colontmp__2969582112 = node_2969569752(self_2969581968).parent;
      colontmp__2969582113 = index_3003121772(node_2969569752(self_2969581968));
      var n_2969582115 = colontmp__2969582112;
      var idx_2969582116 = colontmp__2969582113;
      var i_2969582117 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969582116 == subInt(len_3003121752(n_2969582115), 1))) {
            var colontmp__2969582120 = nimCopy(null, {Field0: i_2969582117, Field1: n_2969582115}, NTI2969569466);
            __2969581977 = colontmp__2969582120["Field0"];
            next_2969581978 = colontmp__2969582120["Field1"];
            Label5: {
              if ((next_2969581978 == node_2969569752(self_2969581968))) {
              break Label5;
              }
              
              if ((canInsertInto_2969578688(self_2969581968, next_2969581978) && (!((next_2969581978 == node_2969569752(self_2969581968).parent)) || (addInt(index_3003121772(node_2969569752(self_2969581968)), 1) < len_3003121752(node_2969569752(self_2969581968).parent))))) {
              targetNode_2969581976 = nimCopy(targetNode_2969581976, some_3003121890(next_2969581978), NTI3003121804);
              break Label1;
              }
              
            };
            if (((!((n_2969582115.parent == null)) && !((n_2969582115 == null))) && !((n_2969582115.parent == null)))) {
            idx_2969582116 = index_3003121772(n_2969582115);
            n_2969582115 = n_2969582115.parent;
            }
            else {
              break Label2;
            }
            
            }
            else {
            if ((addInt(idx_2969582116, 1) < len_3003121752(colontmp__2969582112))) {
            n_2969582115 = HEX5BHEX5D_3003121748(n_2969582115, addInt(idx_2969582116, 1));
            idx_2969582116 = -1;
            }
            else {
              break Label2;
            }
            }
            } finally {
            i_2969582117 = addInt(i_2969582117, 1);
            }
          }
      };
    };
      var oHEX60gensym824_2969581992 = nimCopy(null, targetNode_2969581976, NTI3003121804);
      if (!isSome_3003123546(oHEX60gensym824_2969581992)) Temporary6 = false; else {        var newParent_2969582015 = get_3003123566(oHEX60gensym824_2969581992);
        Temporary6 = true;      }    if (Temporary6) {
    var nodeToMove_2969582016 = node_2969569752(self_2969581968);
    if ((nodeToMove_2969582016.parent == newParent_2969582015)) {
    Temporary7 = addInt(index_3003121772(nodeToMove_2969582016), 1);
    }
    else {
      var oHEX60gensym825_2969582023 = index_3003121834(nodeToMove_2969582016, newParent_2969582015);
      if (!isSome_1191185117(oHEX60gensym825_2969582023)) Temporary8 = false; else {        var index_2969582046 = get_1191185211(oHEX60gensym825_2969582023);
        Temporary8 = true;      }    if (Temporary8) {
    Temporary7 = addInt(index_2969582046, 1);
    }
    else {
    Temporary7 = 0;
    }
    }
    var index_2969582047 = Temporary7;
    nodeHEX3D_2969570829(self_2969581968, deleteNode_2969576215(self_2969581968.document, nodeToMove_2969582016));
      var oHEX60gensym826_2969582050 = insertNode_2969573868(self_2969581968.document, newParent_2969582015, index_2969582047, nodeToMove_2969582016);
      if (!isSome_3003123546(oHEX60gensym826_2969582050)) Temporary9 = false; else {        var newNode_2969582073 = get_3003123566(oHEX60gensym826_2969582050);
        Temporary9 = true;      }    if (Temporary9) {
    nodeHEX3D_2969570829(self_2969581968, newNode_2969582073);
    if (wasEditing_2969581969) {
    var _ = tryEdit_2969575311(self_2969581968, node_2969569752(self_2969581968));
    }
    
    }
    
    }
    

  
}

function moveNodeToNextSpaceJsWrapper_2969581964(self_2969582101) {
    moveNodeToNextSpace_2969581967(self_2969582101);

  
}
editor_ast_prototype.moveNodeToNextSpace = function() { return (moveNodeToNextSpaceJsWrapper_2969581964(this));};

function popLast_2969571086(deq_2969571088) {
    var Temporary1;

  var result_2969571089 = null;

    if ((deq_2969571088.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2969571088.count = subInt(deq_2969571088.count, 1);
    deq_2969571088.tail = (subInt(deq_2969571088.tail, 1) & deq_2969571088.mask);
    Temporary1 = deq_2969571088.data[chckIndx(deq_2969571088.tail, 0, (deq_2969571088.data).length - 1)];
    deq_2969571088.data[chckIndx(deq_2969571088.tail, 0, (deq_2969571088.data).length - 1)] = genericReset(deq_2969571088.data[chckIndx(deq_2969571088.tail, 0, (deq_2969571088.data).length - 1)], NTI3003121668);
    result_2969571089 = Temporary1;

  return result_2969571089;

}

function addFirst_2969571117(deq_2969571119, item_2969571120) {
    expandIfNeeded_2969570862(deq_2969571119);
    deq_2969571119.count = addInt(deq_2969571119.count, 1);
    deq_2969571119.head = (subInt(deq_2969571119.head, 1) & deq_2969571119.mask);
    deq_2969571119.data[chckIndx(deq_2969571119.head, 0, (deq_2969571119.data).length - 1)] = item_2969571120;

  
}

function selectPrevNode_2969571016(editor_2969571017) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2969570994(editor_2969571017.selectionHistory))) break Label2;
          var node_2969571099 = popLast_2969571086(editor_2969571017.selectionHistory);
          if (((!((node_2969571099 == null)) && !((node_2969571099.parent == null))) && (base_3003121758(node_2969571099) == editor_2969571017.document.rootNode))) {
          addFirst_2969571117(editor_2969571017.selectionHistory, editor_2969571017.selectedNode);
          editor_2969571017.selectedNode = node_2969571099;
          handleSelectedNodeChanged_2969569755(editor_2969571017);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectPrev_2969582126(self_2969582127) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969582127)) {
    break BeforeRet;
    }
    
    selectPrevNode_2969571016(self_2969582127);
  };

  
}

function selectPrevJsWrapper2_2969582123(self_2969582155) {
    selectPrev_2969582126(self_2969582155);

  
}
editor_ast_prototype.selectPrev2 = function() { return (selectPrevJsWrapper2_2969582123(this));};

function selectNextNode_2969571134(editor_2969571135) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2969570994(editor_2969571135.selectionHistory))) break Label2;
          var node_2969571207 = popFirst_2969571003(editor_2969571135.selectionHistory);
          if (((!((node_2969571207 == null)) && !((node_2969571207.parent == null))) && (base_3003121758(node_2969571207) == editor_2969571135.document.rootNode))) {
          addLast_2969570853(editor_2969571135.selectionHistory, editor_2969571135.selectedNode);
          editor_2969571135.selectedNode = node_2969571207;
          handleSelectedNodeChanged_2969569755(editor_2969571135);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectNext_2969582170(self_2969582171) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969582171)) {
    break BeforeRet;
    }
    
    selectNextNode_2969571134(self_2969582171);
  };

  
}

function selectNextJsWrapper2_2969582167(self_2969582199) {
    selectNext_2969582170(self_2969582199);

  
}
editor_ast_prototype.selectNext2 = function() { return (selectNextJsWrapper2_2969582167(this));};

function setCompletions_3187671114(self_3187671115, newCompletions_3187671116) {
    if (!(((newCompletions_3187671116).length == (self_3187671115.completions).length))) {
    markDirty_2483027989(self_3187671115);
    }
    else {
      Label1: {
        var i_3187671134 = 0;
        var colontmp__2969582520 = 0;
        colontmp__2969582520 = (newCompletions_3187671116).length - 1;
        var res_2969582521 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_2969582521 <= colontmp__2969582520)) break Label3;
              i_3187671134 = res_2969582521;
              if (changed_3187671112(self_3187671115.completions[chckIndx(i_3187671134, 0, (self_3187671115.completions).length - 1)], newCompletions_3187671116[chckIndx(i_3187671134, 0, (newCompletions_3187671116).length - 1)])) {
              markDirty_2483027989(self_3187671115);
              break Label1;
              }
              
              res_2969582521 = addInt(res_2969582521, 1);
            }
        };
      };
    }
    
    self_3187671115.completions = nimCopy(null, newCompletions_3187671116, NTI3187671080);
    if ((0 < (self_3187671115.completions).length)) {
    self_3187671115.selected = clamp_1660945119(self_3187671115.selected, 0, subInt((self_3187671115.completions).length, 1));
    if (!((self_3187671115.handleItemSelected == null))) {
    self_3187671115.handleItemSelected(self_3187671115.completions[chckIndx(self_3187671115.selected, 0, (self_3187671115.completions).length - 1)]);
    }
    
    }
    else {
      self_3187671115.selected = 0;
    }
    

  
}
async function updateCompletionsAsync_3187671179(self_3187671180) {
  var result_3187671182 = null;

  BeforeRet: {
    var text_3187671188 = nsuJoinSep(content_2818574085(self_3187671180.textEditor.document), []);
    var newCompletions_3187671193 = (await self_3187671180.getCompletionsAsync(self_3187671180, text_3187671188));
    setCompletions_3187671114(self_3187671180, newCompletions_3187671193);
    result_3187671182 = undefined;
    break BeforeRet;
  };

  return result_3187671182;

}
async function updateCompletionsAsyncIter_3187671206(self_3187671207) {
  var result_3187671209 = null;

  BeforeRet: {
    var text_3187671215 = nsuJoinSep(content_2818574085(self_3187671207.textEditor.document), []);
    setCompletions_3187671114(self_3187671207, []);
    (await self_3187671207.getCompletionsAsyncIter(self_3187671207, text_3187671215));
    result_3187671209 = undefined;
    break BeforeRet;
  };

  return result_3187671209;

}

function updateCompletions_3187671226(self_3187671227) {
    var text_3187671228 = nsuJoinSep(content_2818574085(self_3187671227.textEditor.document), []);
    if (!((self_3187671227.getCompletions == null))) {
    var newCompletions_3187671232 = self_3187671227.getCompletions(self_3187671227, text_3187671228);
    setCompletions_3187671114(self_3187671227, newCompletions_3187671232);
    }
    else {
    if (!((self_3187671227.getCompletionsAsync == null))) {
    var _ = updateCompletionsAsync_3187671179(self_3187671227);
    }
    else {
    if (!((self_3187671227.getCompletionsAsyncIter == null))) {
    var _ = updateCompletionsAsyncIter_3187671206(self_3187671227);
    }
    else {
      var fmtRes_3187671243 = [mnewString(0)];
      fmtRes_3187671243[0].push.apply(fmtRes_3187671243[0], [78,111,32,99,111,109,112,108,101,116,105,111,110,32,112,114,111,118,105,100,101,114,32,115,101,116,32,111,110,32,112,111,112,117,112,32]);;
      formatValue_2701131945(fmtRes_3187671243, 0, self_3187671227.id, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3187671243[0], NTI33554449)]);
    }
    }}

  
}

function handleTextChanged_3187671806(self_3187671807) {
    updateCompletions_3187671226(self_3187671807);
    self_3187671807.selected = 0;
    if ((!((self_3187671807.handleItemSelected == null)) && (self_3187671807.selected < (self_3187671807.completions).length))) {
    self_3187671807.handleItemSelected(self_3187671807.completions[chckIndx(self_3187671807.selected, 0, (self_3187671807.completions).length - 1)]);
    }
    

  
}

function newJArray_1627390082() {
  var result_1627390083 = null;

    result_1627390083 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1627390083;

}

function ssClose_1660945414(s_1660945415) {
    var s_1660945416 = s_1660945415;
    s_1660945416.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1660945093(s_1660945094) {
  var result_1660945095 = false;

  BeforeRet: {
    var s_1660945096 = s_1660945094;
    result_1660945095 = ((s_1660945096.data).length <= s_1660945096.pos);
    break BeforeRet;
  };

  return result_1660945095;

}

function ssSetPosition_1660945115(s_1660945116, pos_1660945117) {
    var s_1660945118 = s_1660945116;
    s_1660945118.pos = clamp_1660945119(pos_1660945117, 0, (s_1660945118.data).length);

  
}

function ssGetPosition_1660945125(s_1660945126) {
  var result_1660945127 = 0;

  BeforeRet: {
    var s_1660945128 = s_1660945126;
    result_1660945127 = s_1660945128.pos;
    break BeforeRet;
  };

  return result_1660945127;

}

function HEX5BHEX5DHEX3D_855639183(s_855639186, s_855639186_Idx, x_855639187, b_855639188) {
    var a_855639190 = x_855639187.a;
    var L_855639192 = addInt(subInt(x_855639187.b, a_855639190), 1);
    if ((L_855639192 == (b_855639188).length)) {
    Label1: {
      var i_855639197 = 0;
      var i_2969582535 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582535 < L_855639192)) break Label3;
            i_855639197 = i_2969582535;
            s_855639186[s_855639186_Idx][chckIndx(addInt(i_855639197, a_855639190), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(i_855639197, 0, (b_855639188).length - 1)];
            i_2969582535 = addInt(i_2969582535, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_855639203 = subInt((b_855639188).length, nimMax(0, L_855639192));
      var newLenHEX60gensym109_855639204 = addInt((s_855639186[s_855639186_Idx]).length, shiftHEX60gensym109_855639203);
      if ((0 < shiftHEX60gensym109_855639203)) {
      if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_855639210 = 0;
        var colontmp__2969582538 = 0;
        var colontmp__2969582539 = 0;
        colontmp__2969582538 = subInt(newLenHEX60gensym109_855639204, 1);
        colontmp__2969582539 = addInt(a_855639190, (b_855639188).length);
        var res_2969582540 = colontmp__2969582538;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__2969582539 <= res_2969582540)) break Label6;
              iHEX60gensym109_855639210 = res_2969582540;
              s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639210, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639210, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
              res_2969582540 = subInt(res_2969582540, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_855639216 = 0;
          var colontmp__2969582543 = 0;
          var colontmp__2969582544 = 0;
          colontmp__2969582543 = addInt(a_855639190, (b_855639188).length);
          colontmp__2969582544 = subInt(newLenHEX60gensym109_855639204, 1);
          var res_2969582545 = colontmp__2969582543;
          Label8: {
              Label9: while (true) {
              if (!(res_2969582545 <= colontmp__2969582544)) break Label9;
                iHEX60gensym109_855639216 = res_2969582545;
                s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639216, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639216, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
                res_2969582545 = addInt(res_2969582545, 1);
              }
          };
        };
        if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_855639221 = 0;
        var colontmp__2969582548 = 0;
        colontmp__2969582548 = (b_855639188).length;
        var i_2969582549 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_2969582549 < colontmp__2969582548)) break Label12;
              iHEX60gensym109_855639221 = i_2969582549;
              s_855639186[s_855639186_Idx][chckIndx(addInt(a_855639190, iHEX60gensym109_855639221), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(iHEX60gensym109_855639221, 0, (b_855639188).length - 1)];
              i_2969582549 = addInt(i_2969582549, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1660945129(s_1660945130, buffer_1660945131, buffer_1660945131_Idx, slice_1660945133) {
  var result_1660945134 = 0;

    var s_1660945135 = s_1660945130;
    result_1660945134 = nimMin(subInt(addInt(slice_1660945133.b, 1), slice_1660945133.a), subInt((s_1660945135.data).length, s_1660945135.pos));
    if ((0 < result_1660945134)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_855639183(buffer_1660945131, buffer_1660945131_Idx, HEX2EHEX2E_805306418(slice_1660945133.a, subInt(addInt(slice_1660945133.a, result_1660945134), 1)), HEX5BHEX5D_855639291(s_1660945135.data, HEX2EHEX2E_805306418(s_1660945135.pos, subInt(addInt(s_1660945135.pos, result_1660945134), 1))));
    s_1660945135.pos = addInt(s_1660945135.pos, result_1660945134);
    }
    else {
      result_1660945134 = 0;
    }
    

  return result_1660945134;

}

function ssReadData_1660945231(s_1660945232, buffer_1660945233, buffer_1660945233_Idx, bufLen_1660945234) {
  var result_1660945235 = 0;

    var s_1660945236 = s_1660945232;
    result_1660945235 = nimMin(bufLen_1660945234, subInt((s_1660945236.data).length, s_1660945236.pos));
    if ((0 < result_1660945235)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945233, buffer_1660945233_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945235, 1)), HEX5BHEX5D_855639291(s_1660945236.data, HEX2EHEX2E_805306418(s_1660945236.pos, subInt(addInt(s_1660945236.pos, result_1660945235), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945236.pos = addInt(s_1660945236.pos, result_1660945235);
    }
    else {
      result_1660945235 = 0;
    }
    

  return result_1660945235;

}

function ssPeekData_1660945306(s_1660945307, buffer_1660945308, buffer_1660945308_Idx, bufLen_1660945309) {
  var result_1660945310 = 0;

    var s_1660945311 = s_1660945307;
    result_1660945310 = nimMin(bufLen_1660945309, subInt((s_1660945311.data).length, s_1660945311.pos));
    if ((0 < result_1660945310)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945308, buffer_1660945308_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945310, 1)), HEX5BHEX5D_855639291(s_1660945311.data, HEX2EHEX2E_805306418(s_1660945311.pos, subInt(addInt(s_1660945311.pos, result_1660945310), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1660945310 = 0;
    }
    

  return result_1660945310;

}

function ssWriteData_1660945358(s_1660945359, buffer_1660945360, buffer_1660945360_Idx, bufLen_1660945361) {
    var Temporary1;

  BeforeRet: {
    var s_1660945362 = s_1660945359;
    if ((bufLen_1660945361 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1660945362.data).length < addInt(s_1660945362.pos, bufLen_1660945361))) {
    if (s_1660945362.data.length < (Temporary1 = chckRange(addInt(s_1660945362.pos, bufLen_1660945361), 0, 2147483647), Temporary1)) { for (var i = s_1660945362.data.length; i < Temporary1; ++i) s_1660945362.data.push(0); }
         else {s_1660945362.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(s_1660945362, "data", HEX2EHEX2E_805306418(s_1660945362.pos, subInt(addInt(s_1660945362.pos, bufLen_1660945361), 1)), HEX5BHEX5D_855639291(buffer_1660945360[buffer_1660945360_Idx], HEX2EHEX2E_805306418(0, subInt(bufLen_1660945361, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945362.pos = addInt(s_1660945362.pos, bufLen_1660945361);
  };

  
}

function newStringStream_1660945417(s_1660945418) {
  var result_1660945419 = null;

    result_1660945419 = ({m_type: NTI1660944862, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1660945419.data = nimCopy(null, s_1660945418, NTI33554449);
    result_1660945419.pos = 0;
    result_1660945419.closeImpl = ssClose_1660945414;
    result_1660945419.atEndImpl = ssAtEnd_1660945093;
    result_1660945419.setPositionImpl = ssSetPosition_1660945115;
    result_1660945419.getPositionImpl = ssGetPosition_1660945125;
    result_1660945419.readDataStrImpl = ssReadDataStr_1660945129;
    result_1660945419.readDataImpl = ssReadData_1660945231;
    result_1660945419.peekDataImpl = ssPeekData_1660945306;
    result_1660945419.writeDataImpl = ssWriteData_1660945358;

  return result_1660945419;

}

function readData_1660944462(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465) {
  var result_1660944466 = 0;

    result_1660944466 = s_1660944463.readDataImpl(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465);

  return result_1660944466;

}

function readDataStr_1660944468(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472) {
  var result_1660944473 = 0;

    if (!((s_1660944469.readDataStrImpl == null))) {
    result_1660944473 = s_1660944469.readDataStrImpl(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472);
    }
    else {
      result_1660944473 = readData_1660944462(s_1660944469, buffer_1660944470[buffer_1660944470_Idx], chckIndx(slice_1660944472.a, 0, (buffer_1660944470[buffer_1660944470_Idx]).length - 1), subInt(addInt(slice_1660944472.b, 1), slice_1660944472.a));
    }
    

  return result_1660944473;

}

function fillBuffer_1644167184(L_1644167185) {
              var Temporary8;

    var charsRead_1644167186 = 0;
    var toCopy_1644167187 = 0;
    var s_1644167188 = 0;
    var oldBufLen_1644167189 = 0;
    if (!((addInt(L_1644167185.sentinel, 1) <= (L_1644167185.buf).length))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1644167187 = subInt((L_1644167185.buf).length, addInt(L_1644167185.sentinel, 1));
    if (!((0 <= toCopy_1644167187))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1644167187)) {
    Label1: {
      var i_1644167204 = 0;
      var i_2969582552 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582552 < toCopy_1644167187)) break Label3;
            i_1644167204 = i_2969582552;
            L_1644167185.buf[chckIndx(i_1644167204, 0, (L_1644167185.buf).length - 1)] = L_1644167185.buf[chckIndx(addInt(addInt(L_1644167185.sentinel, 1), i_1644167204), 0, (L_1644167185.buf).length - 1)];
            i_2969582552 = addInt(i_2969582552, 1);
          }
      };
    };
    }
    
    charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(toCopy_1644167187, subInt(addInt(addInt(toCopy_1644167187, L_1644167185.sentinel), 1), 1)));
    s_1644167188 = addInt(toCopy_1644167187, charsRead_1644167186);
    if ((charsRead_1644167186 < addInt(L_1644167185.sentinel, 1))) {
    L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)] = 0;
    L_1644167185.sentinel = s_1644167188;
    }
    else {
      s_1644167188 = subInt(s_1644167188, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1644167188 < (L_1644167185.buf).length))) {
            failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1644167188) && !((L_1644167185.refillChars[L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)]] != undefined)))) break Label7;
                  s_1644167188 = subInt(s_1644167188, 1);
                }
            };
            if ((0 <= s_1644167188)) {
            L_1644167185.sentinel = s_1644167188;
            break Label4;
            }
            else {
              oldBufLen_1644167189 = (L_1644167185.buf).length;
              if (L_1644167185.buf.length < (Temporary8 = chckRange(mulInt((L_1644167185.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1644167185.buf.length; i < Temporary8; ++i) L_1644167185.buf.push(0); }
         else {L_1644167185.buf.length = Temporary8; };
              charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(oldBufLen_1644167189, subInt((L_1644167185.buf).length, 1)));
              if ((charsRead_1644167186 < oldBufLen_1644167189)) {
              L_1644167185.buf[chckIndx(addInt(oldBufLen_1644167189, charsRead_1644167186), 0, (L_1644167185.buf).length - 1)] = 0;
              L_1644167185.sentinel = addInt(oldBufLen_1644167189, charsRead_1644167186);
              break Label4;
              }
              
              s_1644167188 = subInt((L_1644167185.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1644167300(L_1644167301) {
    if ((((L_1644167301.buf[chckIndx(0, 0, (L_1644167301.buf).length - 1)] == 239) && (L_1644167301.buf[chckIndx(1, 0, (L_1644167301.buf).length - 1)] == 187)) && (L_1644167301.buf[chckIndx(2, 0, (L_1644167301.buf).length - 1)] == 191))) {
    L_1644167301.bufpos = addInt(L_1644167301.bufpos, 3);
    L_1644167301.lineStart = addInt(L_1644167301.lineStart, 3);
    }
    

  
}

function open_1644167312(L_1644167313, input_1644167314, bufLen_1644167315, refillChars_1644167316) {
    if (!((0 < bufLen_1644167315))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1644167314 == null)))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1644167313.input = input_1644167314;
    L_1644167313.bufpos = 0;
    L_1644167313.offsetBase = 0;
    L_1644167313.refillChars = nimCopy(L_1644167313.refillChars, refillChars_1644167316, NTI1644167173);
    L_1644167313.buf = nimCopy(null, mnewString(chckRange(bufLen_1644167315, 0, 2147483647)), NTI33554449);
    L_1644167313.sentinel = subInt(bufLen_1644167315, 1);
    L_1644167313.lineStart = 0;
    L_1644167313.lineNumber = 1;
    fillBuffer_1644167184(L_1644167313);
    skipUtf8Bom_1644167300(L_1644167313);

  
}

function open_1694498913(my_1694498914, input_1694498915, filename_1694498916, rawStringLiterals_1694498917) {
    open_1644167312(my_1694498914, input_1694498915, 8192, ConstSet184);
    my_1694498914.filename = nimCopy(null, filename_1694498916, NTI33554449);
    my_1694498914.state = nimCopy(null, [1], NTI1694498863);
    my_1694498914.kind = 0;
    my_1694498914.a = nimCopy(null, [], NTI33554449);
    my_1694498914.rawStringLiterals = rawStringLiterals_1694498917;

  
}

function fillBaseLexer_1644167246(L_1644167247, pos_1644167248) {
  var result_1644167249 = 0;

    if (!((pos_1644167248 <= L_1644167247.sentinel))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1644167248 < L_1644167247.sentinel)) {
    result_1644167249 = addInt(pos_1644167248, 1);
    }
    else {
      fillBuffer_1644167184(L_1644167247);
      L_1644167247.offsetBase = addInt(L_1644167247.offsetBase, pos_1644167248);
      L_1644167247.bufpos = 0;
      result_1644167249 = 0;
    }
    

  return result_1644167249;

}

function handleCR_1644167259(L_1644167260, pos_1644167261) {
  var result_1644167262 = 0;

    if (!((L_1644167260.buf[chckIndx(pos_1644167261, 0, (L_1644167260.buf).length - 1)] == 13))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1644167260.lineNumber = addInt(L_1644167260.lineNumber, 1);
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, pos_1644167261);
    if ((L_1644167260.buf[chckIndx(result_1644167262, 0, (L_1644167260.buf).length - 1)] == 10)) {
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, result_1644167262);
    }
    
    L_1644167260.lineStart = result_1644167262;

  return result_1644167262;

}

function handleLF_1644167273(L_1644167274, pos_1644167275) {
  var result_1644167276 = 0;

    if (!((L_1644167274.buf[chckIndx(pos_1644167275, 0, (L_1644167274.buf).length - 1)] == 10))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1644167274.lineNumber = addInt(L_1644167274.lineNumber, 1);
    result_1644167276 = fillBaseLexer_1644167246(L_1644167274, pos_1644167275);
    L_1644167274.lineStart = result_1644167276;

  return result_1644167276;

}

function skip_1694499153(my_1694499154) {
    var pos_1694499155 = my_1694499154.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
          case 47:
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 47)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    break Label3;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 42)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label5: {
                Label6: while (true) {
                if (!true) break Label6;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    my_1694499154.err = 8;
                    break Label5;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break;
                  case 42:
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    if ((my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)] == 47)) {
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break Label5;
                    }
                    
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
              break Label1;
            }
            }
            break;
          case 32:
          case 9:
            pos_1694499155 = addInt(pos_1694499155, 1);
            break;
          case 13:
            pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
            break;
          case 10:
            pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1694499154.bufpos = pos_1694499155;

  
}

function parseNumber_1694499191(my_1694499192) {
    var pos_1694499193 = my_1694499192.bufpos;
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 45)) {
    addChar(my_1694499192.a, 45);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
    my_1694499192.a.push.apply(my_1694499192.a, [48,46]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!(ConstSet185[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label2;
            addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
            pos_1694499193 = addInt(pos_1694499193, 1);
          }
      };
      if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
      addChar(my_1694499192.a, 46);;
      pos_1694499193 = addInt(pos_1694499193, 1);
      }
      
    }
    
    Label3: {
        Label4: while (true) {
        if (!(ConstSet186[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label4;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    if ((ConstSet187[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    if ((ConstSet188[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    Label5: {
        Label6: while (true) {
        if (!(ConstSet189[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label6;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    }
    
    my_1694499192.bufpos = pos_1694499193;

  
}

function nsuFindCharSet(s_855639719, chars_855639720, start_855639721, last_855639722) {
    var Temporary1;

  var result_855639723 = 0;

  BeforeRet: {
    result_855639723 = -1;
    if ((last_855639722 < 0)) {
    Temporary1 = (s_855639719).length - 1;
    }
    else {
    Temporary1 = last_855639722;
    }
    
    var last_855639724 = Temporary1;
    Label2: {
      var i_855639729 = 0;
      var colontmp__2969582563 = 0;
      colontmp__2969582563 = start_855639721;
      var res_2969582564 = colontmp__2969582563;
      Label3: {
          Label4: while (true) {
          if (!(res_2969582564 <= last_855639724)) break Label4;
            i_855639729 = res_2969582564;
            if ((chars_855639720[s_855639719[chckIndx(i_855639729, 0, (s_855639719).length - 1)]] != undefined)) {
            result_855639723 = i_855639729;
            break BeforeRet;
            }
            
            res_2969582564 = addInt(res_2969582564, 1);
          }
      };
    };
  };

  return result_855639723;

}

function contains_855639881(s_855639882, chars_855639883) {
  var result_855639884 = false;

  BeforeRet: {
    result_855639884 = (0 <= nsuFindCharSet(s_855639882, chars_855639883, 0, -1));
    break BeforeRet;
  };

  return result_855639884;

}

function handleHexChar_1711276033(c_1711276034, x_1711276035, x_1711276035_Idx) {
  var result_1711276036 = false;

    result_1711276036 = true;
    switch (c_1711276034) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | subInt(c_1711276034, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 65), 10));
      break;
    default: 
      result_1711276036 = false;
      break;
    }

  return result_1711276036;

}

function parseEscapedUTF16_1694499035(buf_1694499036, pos_1694499037, pos_1694499037_Idx) {
  var result_1694499038 = [0];

  BeforeRet: {
    result_1694499038[0] = 0;
    Label1: {
      var __1694499043 = 0;
      var res_2969582571 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969582571 <= 3)) break Label3;
            __1694499043 = res_2969582571;
            if (handleHexChar_1711276033(buf_1694499036.charCodeAt(chckIndx(pos_1694499037[pos_1694499037_Idx], 0, (buf_1694499036).length - 1)), result_1694499038, 0)) {
            pos_1694499037[pos_1694499037_Idx] = addInt(pos_1694499037[pos_1694499037_Idx], 1);
            }
            else {
              result_1694499038[0] = -1;
              break BeforeRet;
            }
            
            res_2969582571 = addInt(res_2969582571, 1);
          }
      };
    };
  };

  return result_1694499038[0];

}

function nuctoUTF8(c_788529546) {
  var result_788529547 = [];

    result_788529547 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_788529549 = c_788529546;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 127)) {
    if (result_788529547.length < 1) { for (var i = result_788529547.length; i < 1; ++i) result_788529547.push(0); }
         else {result_788529547.length = 1; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(iHEX60gensym21_788529549, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2047)) {
    if (result_788529547.length < 2) { for (var i = result_788529547.length; i < 2; ++i) result_788529547.push(0); }
         else {result_788529547.length = 2; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 6) | 192), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 65535)) {
    if (result_788529547.length < 3) { for (var i = result_788529547.length; i < 3; ++i) result_788529547.push(0); }
         else {result_788529547.length = 3; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 12) | 224), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2097151)) {
    if (result_788529547.length < 4) { for (var i = result_788529547.length; i < 4; ++i) result_788529547.push(0); }
         else {result_788529547.length = 4; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 18) | 240), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 67108863)) {
    if (result_788529547.length < 5) { for (var i = result_788529547.length; i < 5; ++i) result_788529547.push(0); }
         else {result_788529547.length = 5; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 24) | 248), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2147483647)) {
    if (result_788529547.length < 6) { for (var i = result_788529547.length; i < 6; ++i) result_788529547.push(0); }
         else {result_788529547.length = 6; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 30) | 252), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 24) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(5, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_788529547;

}

function parseString_1694499049(my_1694499050) {
  var result_1694499051 = 0;

    result_1694499051 = 2;
    var pos_1694499052 = [addInt(my_1694499050.bufpos, 1)];
    if (my_1694499050.rawStringLiterals) {
    addChar(my_1694499050.a, 34);;
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]) {
          case 0:
            my_1694499050.err = 7;
            result_1694499051 = 0;
            break Label1;
            break;
          case 34:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 34);;
            }
            
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break Label1;
            break;
          case 92:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 92);;
            }
            
            switch (my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]) {
            case 92:
            case 34:
            case 39:
            case 47:
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 98:
              addChar(my_1694499050.a, 8);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 102:
              addChar(my_1694499050.a, 12);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 110:
              addChar(my_1694499050.a, 10);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 114:
              addChar(my_1694499050.a, 13);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 116:
              addChar(my_1694499050.a, 9);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 118:
              addChar(my_1694499050.a, 11);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 117:
              if (my_1694499050.rawStringLiterals) {
              addChar(my_1694499050.a, 117);;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var pos2_1694499098 = pos_1694499052[0];
              var r_1694499099 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((r_1694499099 < 0)) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              if (((r_1694499099 & 64512) == 55296)) {
              if ((!((my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)] == 92)) || !((my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)] == 117)))) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var s_1694499105 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((((s_1694499105 & 64512) == 56320) && (0 < s_1694499105))) {
              r_1694499099 = addInt(65536, ((subInt(r_1694499099, 55296) << 10) | subInt(s_1694499105, 56320)));
              }
              else {
                my_1694499050.err = 1;
                break Label1;
              }
              
              }
              
              if (my_1694499050.rawStringLiterals) {
              var length_1694499110 = subInt(pos_1694499052[0], pos2_1694499098);
              Label3: {
                var i_1694499115 = 0;
                var res_2969582568 = 1;
                Label4: {
                    Label5: while (true) {
                    if (!(res_2969582568 <= length_1694499110)) break Label5;
                      i_1694499115 = res_2969582568;
                      if ((ConstSet191[my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]] != undefined)) {
                      addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]);;
                      pos2_1694499098 = addInt(pos2_1694499098, 1);
                      }
                      else {
                        break Label3;
                      }
                      
                      res_2969582568 = addInt(res_2969582568, 1);
                    }
                };
              };
              }
              else {
              my_1694499050.a.push.apply(my_1694499050.a, nuctoUTF8(((r_1694499099) | 0)));;
              }
              
              break;
            default: 
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 1);
              break;
            }
            break;
          case 13:
            pos_1694499052[0] = handleCR_1644167259(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 13);;
            break;
          case 10:
            pos_1694499052[0] = handleLF_1644167273(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 10);;
            break;
          default: 
            addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break;
          }
        }
    };
    my_1694499050.bufpos = pos_1694499052[0];

  return result_1694499051;

}

function parseName_1694499254(my_1694499255) {
    var pos_1694499256 = my_1694499255.bufpos;
    if ((ConstSet192[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet193[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) break Label2;
          addChar(my_1694499255.a, my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]);;
          pos_1694499256 = addInt(pos_1694499256, 1);
        }
    };
    }
    
    my_1694499255.bufpos = pos_1694499256;

  
}

function getTok_1694499270(my_1694499271) {
  var result_1694499272 = 0;

    if (my_1694499271.a.length < 0) { for (var i = my_1694499271.a.length; i < 0; ++i) my_1694499271.a.push(0); }
         else {my_1694499271.a.length = 0; };
    skip_1694499153(my_1694499271);
    switch (my_1694499271.buf[chckIndx(my_1694499271.bufpos, 0, (my_1694499271.buf).length - 1)]) {
    case 45:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      parseNumber_1694499191(my_1694499271);
      if (contains_855639881(my_1694499271.a, ConstSet190)) {
      result_1694499272 = 4;
      }
      else {
        result_1694499272 = 3;
      }
      
      break;
    case 34:
      result_1694499272 = parseString_1694499049(my_1694499271);
      break;
    case 91:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 10;
      break;
    case 123:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 8;
      break;
    case 93:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 11;
      break;
    case 125:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 9;
      break;
    case 44:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 13;
      break;
    case 58:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 12;
      break;
    case 0:
      result_1694499272 = 1;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 95:
      parseName_1694499254(my_1694499271);
      switch (toJSStr(my_1694499271.a)) {
      case "null":
        result_1694499272 = 7;
        break;
      case "true":
        result_1694499272 = 5;
        break;
      case "false":
        result_1694499272 = 6;
        break;
      default: 
        result_1694499272 = 0;
        break;
      }
      break;
    default: 
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 0;
      break;
    }
    my_1694499271.tok = result_1694499272;

  return result_1694499272;

}

function newJRawNumber_1627390037(s_1627390038) {
  var result_1627390039 = null;

    result_1627390039 = {kind: 4, str: nimCopy(null, s_1627390038, NTI33554449), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390039;

}

function parseBiggestInt_771752719(s_771752720, number_771752721, number_771752721_Idx, start_771752722) {
  var result_771752723 = 0;

    result_771752723 = npuParseBiggestInt((s_771752720.slice(start_771752722, (s_771752720).length - 1 + 1)), number_771752721, number_771752721_Idx);

  return result_771752723;

}

function nsuParseBiggestInt(s_855638874) {
  var result_855638875 = [0];

    result_855638875[0] = 0;
    var L_855638876 = parseBiggestInt_771752719(s_855638874, result_855638875, 0, 0);
    if ((!((L_855638876 == (s_855638874).length)) || (L_855638876 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638874 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638875[0];

}

function newJFloat_1627390043(n_1627390044) {
  var result_1627390045 = null;

    result_1627390045 = {kind: 3, fnum: n_1627390044, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390045;

}

function newJBool_1627390046(b_1627390047) {
  var result_1627390048 = null;

    result_1627390048 = {kind: 1, bval: b_1627390047, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390048;

}

function newJNull_1627390049() {
  var result_1627390050 = null;

    result_1627390050 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390050;

}

function invalidFormatString_855640335(formatstr_855640336) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_855640336 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1107296257(c_1107296258) {
  var result_1107296259 = 0;

    if ((ConstSet198[c_1107296258] != undefined)) {
    result_1107296259 = chckRange(addInt(c_1107296258, 32), 0, 255);
    }
    else {
      result_1107296259 = c_1107296258;
    }
    

  return result_1107296259;

}

function nsuCmpIgnoreStyle(a_855638227, b_855638228) {
          var Temporary7;
          var Temporary8;

  var result_855638229 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_855638238 = (a_855638227).length;
    var bLenHEX60gensym24_855638239 = (b_855638228).length;
    var iHEX60gensym24_855638240 = 0;
    var jHEX60gensym24_855638241 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238) && (a_855638227[iHEX60gensym24_855638240] == 95))) break Label4;
                iHEX60gensym24_855638240 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239) && (b_855638228[jHEX60gensym24_855638241] == 95))) break Label6;
                jHEX60gensym24_855638241 += 1;
              }
          };
          if ((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238)) {
          Temporary7 = toLowerAscii_1107296257(a_855638227[iHEX60gensym24_855638240]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_855638252 = Temporary7;
          if ((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239)) {
          Temporary8 = toLowerAscii_1107296257(b_855638228[jHEX60gensym24_855638241]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_855638253 = Temporary8;
          result_855638229 = (aaHEX60gensym24_855638252 - bbHEX60gensym24_855638253);
          if (!((result_855638229 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_855638238 <= iHEX60gensym24_855638240)) {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 0;
          break BeforeRet;
          }
          
          result_855638229 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_855638240 += 1;
          jHEX60gensym24_855638241 += 1;
        }
    };
  };

  return result_855638229;

}

function findNormalized_855640322(x_855640323, inArray_855640324) {
  var result_855640325 = 0;

  BeforeRet: {
    var i_855640326 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640326 < (inArray_855640324).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_855640323, inArray_855640324[chckIndx(i_855640326, 0, (inArray_855640324).length - 1)]) == 0)) {
          result_855640325 = i_855640326;
          break BeforeRet;
          }
          
          i_855640326 = addInt(i_855640326, 2);
        }
    };
    result_855640325 = -1;
    break BeforeRet;
  };

  return result_855640325;

}

function nsuAddf(s_855640339, s_855640339_Idx, formatstr_855640340, a_855640341) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_855640343 = 0;
    var num_855640344 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640343 < (formatstr_855640340).length)) break Label2;
          if (((formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 36) && (addInt(i_855640343, 1) < (formatstr_855640340).length))) {
          switch (formatstr_855640340[chckIndx(addInt(i_855640343, 1), 0, (formatstr_855640340).length - 1)]) {
          case 35:
            if (((a_855640341).length - 1 < num_855640344)) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(num_855640344, 0, (a_855640341).length - 1)]);;
            i_855640343 = addInt(i_855640343, 2);
            num_855640344 = addInt(num_855640344, 1);
            break;
          case 36:
            addChar(s_855640339[s_855640339_Idx], 36);;
            i_855640343 = addInt(i_855640343, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_855640363 = 0;
            i_855640343 = addInt(i_855640343, 1);
            var negative_855640369 = (formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640369) {
            i_855640343 = addInt(i_855640343, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_855640343 < (formatstr_855640340).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet195[formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_855640363 = subInt(addInt(mulInt(j_855640363, 10), formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]), 48);
                  i_855640343 = addInt(i_855640343, 1);
                }
            };
            if (!(negative_855640369)) {
            Temporary6 = subInt(j_855640363, 1);
            }
            else {
            Temporary6 = subInt((a_855640341).length, j_855640363);
            }
            
            var idx_855640394 = Temporary6;
            if (((idx_855640394 < 0) || ((a_855640341).length - 1 < idx_855640394))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640394, 0, (a_855640341).length - 1)]);;
            break;
          case 123:
            var j_855640398 = addInt(i_855640343, 2);
            var k_855640399 = 0;
            var negative_855640400 = (formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640400) {
            j_855640398 = addInt(j_855640398, 1);
            }
            
            var isNumber_855640406 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_855640398 < (formatstr_855640340).length) && !((ConstSet196[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet197[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)) {
                  k_855640399 = subInt(addInt(mulInt(k_855640399, 10), formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]), 48);
                  if ((isNumber_855640406 == 0)) {
                  isNumber_855640406 = 1;
                  }
                  
                  }
                  else {
                    isNumber_855640406 = -1;
                  }
                  
                  j_855640398 = addInt(j_855640398, 1);
                }
            };
            if ((isNumber_855640406 == 1)) {
            if (!(negative_855640400)) {
            Temporary9 = subInt(k_855640399, 1);
            }
            else {
            Temporary9 = subInt((a_855640341).length, k_855640399);
            }
            
            var idx_855640429 = Temporary9;
            if (((idx_855640429 < 0) || ((a_855640341).length - 1 < idx_855640429))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640429, 0, (a_855640341).length - 1)]);;
            }
            else {
              var x_855640433 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 2), subInt(j_855640398, 1)), a_855640341);
              if (((0 <= x_855640433) && (x_855640433 < (a_855640341).length - 1))) {
              s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640433, 1), 0, (a_855640341).length - 1)]);;
              }
              else {
              invalidFormatString_855640335(formatstr_855640340);
              }
              
            }
            
            i_855640343 = addInt(j_855640398, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_855640437 = addInt(i_855640343, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_855640437 < (formatstr_855640340).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet199[formatstr_855640340[chckIndx(j_855640437, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_855640437 = addInt(j_855640437, 1);
                }
            };
            var x_855640447 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 1), subInt(j_855640437, 1)), a_855640341);
            if (((0 <= x_855640447) && (x_855640447 < (a_855640341).length - 1))) {
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640447, 1), 0, (a_855640341).length - 1)]);;
            }
            else {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            i_855640343 = j_855640437;
            break;
          default: 
            invalidFormatString_855640335(formatstr_855640340);
            break;
          }
          }
          else {
            addChar(s_855640339[s_855640339_Idx], formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]);;
            i_855640343 = addInt(i_855640343, 1);
          }
          
        }
    };

  
}

function nsuFormatOpenArray(formatstr_855640457, a_855640458) {
  var result_855640459 = [[]];

    result_855640459[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_855640459, 0, formatstr_855640457, a_855640458);

  return result_855640459[0];

}

function getLine_1694499013(my_1694499014) {
  var result_1694499015 = 0;

    result_1694499015 = my_1694499014.lineNumber;

  return result_1694499015;

}

function getColNumber_1644167331(L_1644167332, pos_1644167333) {
  var result_1644167334 = 0;

    result_1644167334 = absInt(subInt(pos_1644167333, L_1644167332.lineStart));

  return result_1644167334;

}

function getColumn_1694499010(my_1694499011) {
  var result_1694499012 = 0;

    result_1694499012 = getColNumber_1644167331(my_1694499011, my_1694499011.bufpos);

  return result_1694499012;

}

function errorMsgExpected_1694499031(my_1694499032, e_1694499033) {
  var result_1694499034 = [];

    result_1694499034 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1694499032.filename, NTI33554449), HEX24_369098760(getLine_1694499013(my_1694499032)), HEX24_369098760(getColumn_1694499010(my_1694499032)), (e_1694499033 || []).concat([32,101,120,112,101,99,116,101,100] || [])]), NTI33554449);

  return result_1694499034;

}

function raiseParseErr_1694499432(p_1694499433, msg_1694499434) {
    raiseException({message: errorMsgExpected_1694499031(p_1694499433, msg_1694499434), parent: null, m_type: NTI1694498825, name: null, trace: [], up: null}, "JsonParsingError");

  
}

function eat_1694499454(p_1694499455, tok_1694499456) {
    if ((p_1694499455.tok == tok_1694499456)) {
    var _ = getTok_1694499270(p_1694499455);
    }
    else {
    raiseParseErr_1694499432(p_1694499455, tokToStr_1694498894[chckIndx(tok_1694499456, 0, (tokToStr_1694498894).length - 1)]);
    }
    

  
}

function add_1627390190(father_1627390191, child_1627390192) {
    var Temporary1;

    if (!((father_1627390191.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,48,49,44,32,51,41,32,96,102,97,116,104,101,114,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = father_1627390191;
    if (ConstSet200[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    Temporary1.elems.push(child_1627390192);;

  
}

function parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, depth_1627395215) {
      var Temporary1;

  var result_1627395216 = null;

    switch (p_1627395212.tok) {
    case 2:
      result_1627395216 = {kind: 4, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
      var Temporary1 = result_1627395216;
      if (ConstSet194[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      Temporary1.str = p_1627395212.a;
      p_1627395212.a = nimCopy(null, [], NTI33554449);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 3:
      if (rawIntegers_1627395213) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJInt_1627390040(nsuParseBiggestInt(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 4:
      if (rawFloats_1627395214) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJFloat_1627390043(nsuParseFloat(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 5:
      result_1627395216 = newJBool_1627390046(true);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 6:
      result_1627395216 = newJBool_1627390046(false);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 7:
      result_1627395216 = newJNull_1627390049();
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 8:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [125]);
      }
      
      result_1627395216 = newJObject_1627390051();
      var _ = getTok_1694499270(p_1627395212);
      Label4: {
          Label5: while (true) {
          if (!!((p_1627395212.tok == 9))) break Label5;
            if (!((p_1627395212.tok == 2))) {
            raiseParseErr_1694499432(p_1627395212, [115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,97,115,32,107,101,121]);
            }
            
            var key_1627395225 = nimCopy(null, p_1627395212.a, NTI33554449);
            var _ = getTok_1694499270(p_1627395212);
            eat_1694499454(p_1627395212, 12);
            var val_1627395226 = parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1));
            HEX5BHEX5DHEX3D_1627391903(result_1627395216, key_1627395225, val_1627395226);
            if (!((p_1627395212.tok == 13))) {
            break Label4;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 9);
      break;
    case 10:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [93]);
      }
      
      result_1627395216 = newJArray_1627390082();
      var _ = getTok_1694499270(p_1627395212);
      Label6: {
          Label7: while (true) {
          if (!!((p_1627395212.tok == 11))) break Label7;
            add_1627390190(result_1627395216, parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1)));
            if (!((p_1627395212.tok == 13))) {
            break Label6;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 11);
      break;
    case 0:
    case 9:
    case 11:
    case 12:
    case 13:
    case 1:
      raiseParseErr_1694499432(p_1627395212, [123]);
      break;
    }

  return result_1627395216;

}

function close_1660944441(s_1660944442) {
    if ((!((s_1660944442 == null)) && !((s_1660944442.closeImpl == null)))) {
    s_1660944442.closeImpl(s_1660944442);
    }
    

  
}

function close_1644167182(L_1644167183) {
    close_1660944441(L_1644167183.input);

  
}

function close_1694498967(my_1694498968) {
    close_1644167182(my_1694498968);

  
}

function handleUnknownPopupAction_1291848841(self_1291848842, popup_1291848843, action_1291848844, arg_1291848845) {
  var result_1291848846 = 0;

  BeforeRet: {
++excHandler;
    try {
    var args_1291848847 = newJArray_1627390082();
    Label2: {
      var a_1291848848 = null;
      var colontmp__2969582529 = null;
      colontmp__2969582529 = newStringStream_1660945417(arg_1291848845);
      var p_2969582530 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_2969582530[0], colontmp__2969582529, [], false);
      try {
      var _ = getTok_1694499270(p_2969582530[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_2969582530[0].tok == 1))) break Label5;
            a_1291848848 = parseJson_1627395211(p_2969582530[0], false, false, 0);
            add_1627390190(args_1291848847, a_1291848848);
          }
      };
      } finally {
      close_1694498967(p_2969582530[0]);
      }
    };
    if (handleUnknownPopupAction_2751463448(self_1291848842.scriptContext, popup_1291848843, action_1291848844, args_1291848847)) {
    result_1291848846 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848853 = [mnewString(0)];
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,80,111,112,117,112,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848853, 0, action_1291848844, []);
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [32]);;
    formatValue_721420459(fmtRes_1291848853, 0, arg_1291848845, []);
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848853, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848853[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848846 = 0;
    break BeforeRet;
  };

  return result_1291848846;

}

function toJson_3187671489(self_3187671490, opt_3187671491) {
  var result_3187671492 = null;

    result_3187671492 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3187671492, [116,121,112,101], newJString_1627389994([112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
    HEX5BHEX5DHEX3D_1627391903(result_3187671492, [105,100], newJInt_1627390040(self_3187671490.id));

  return result_3187671492;

}

function initToJsonOptions_1811939362() {
  var result_1811939363 = ({enumMode: 0, jsonNodeMode: 0});

    result_1811939363 = nimCopy(result_1811939363, {enumMode: 0, jsonNodeMode: 0}, NTI1811939336);

  return result_1811939363;

}

function isSome_2818593438(self_2818593440) {
  var result_2818593441 = false;

    result_2818593441 = !((self_2818593440.val == null));

  return result_2818593441;

}

function some_2818593171(val_2818593173) {
  var result_2818593174 = ({val: null});

    if (!(!((val_2818593173 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818593174.val = val_2818593173;

  return result_2818593174;

}

function none_3187671402() {
  var result_3187671408 = ({val: null});

  return result_3187671408;

}

function some_1291850925(val_1291850927) {
  var result_1291850928 = ({val: null});

    if (!(!((val_1291850927 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850928.val = val_1291850927;

  return result_1291850928;

}

function none_1291850938() {
  var result_1291850944 = ({val: null});

  return result_1291850944;

}

function getPopupForId_1291850895(self_1291850896, id_1291850897) {
  var result_1291850902 = ({val: null});

  BeforeRet: {
    Label1: {
      var popup_1291850924 = null;
      var i_2969582588 = 0;
      var L_2969582589 = (self_1291850896.popups).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582588 < L_2969582589)) break Label3;
            popup_1291850924 = self_1291850896.popups[chckIndx(i_2969582588, 0, (self_1291850896.popups).length - 1)];
            if ((popup_1291850924.id == id_1291850897)) {
            result_1291850902 = nimCopy(result_1291850902, some_1291850925(popup_1291850924), NTI1291848451);
            break BeforeRet;
            }
            
            i_2969582588 = addInt(i_2969582588, 1);
            if (!(((self_1291850896.popups).length == L_2969582589))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291850902 = nimCopy(result_1291850902, none_1291850938(), NTI1291848451);
    break BeforeRet;
  };

  return result_1291850902;

}

function isSome_3187671416(self_3187671418) {
  var result_3187671419 = false;

    result_3187671419 = !((self_3187671418.val == null));

  return result_3187671419;

}

function isNone_3187671444(self_3187671446) {
  var result_3187671447 = false;

    result_3187671447 = (self_3187671446.val == null);

  return result_3187671447;

}

function get_3187671436(self_3187671438) {
  var result_3187671439 = null;

    if (isNone_3187671444(self_3187671438)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671439 = self_3187671438["val"];

  return result_3187671439;

}

function some_3187671461(val_3187671463) {
  var result_3187671464 = ({val: null});

    if (!(!((val_3187671463 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3187671464.val = val_3187671463;

  return result_3187671464;

}

function getSelectorPopup_3187671392(wrapper_3187671393) {
      var Temporary1;

  var result_3187671398 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3187671398 = nimCopy(result_3187671398, none_3187671402(), NTI3187671304);
    break BeforeRet;
    }
    
      var oHEX60gensym18_3187671411 = getPopupForId_1291850895(gEditor, wrapper_3187671393.id);
      if (!isSome_3187671416(oHEX60gensym18_3187671411)) Temporary1 = false; else {        var editor_3187671453 = get_3187671436(oHEX60gensym18_3187671411);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3187671453.m_type, NTI3187671062)) {
    result_3187671398 = nimCopy(result_3187671398, some_3187671461(editor_3187671453), NTI3187671304);
    break BeforeRet;
    }
    
    }
    
    result_3187671398 = nimCopy(result_3187671398, none_3187671402(), NTI3187671304);
    break BeforeRet;
  };

  return result_3187671398;

}

function isNone_3187671523(self_3187671525) {
  var result_3187671526 = false;

    result_3187671526 = (self_3187671525.val == null);

  return result_3187671526;

}

function get_3187671543(self_3187671545) {
  var result_3187671546 = null;

    if (isNone_3187671523(self_3187671545)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671546 = self_3187671545["val"];

  return result_3187671546;

}

function acceptScript_3187671502_3187671516(self_3187671517) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym23_3187671518 = getSelectorPopup_3187671392(self_3187671517);
      if (isNone_3187671523(rHEX60gensym23_3187671518)) {
      break BeforeRet;
      }
      
    };
    accept_3187671506(get_3187671543(rHEX60gensym23_3187671518));
  };

  
}

function HEX3DHEX3D_1627392043(x_1627392045, y_1627392046) {
  var result_1627392047 = false;

  BeforeRet: {
    var sameObject_1627392055 = false;
    sameObject_1627392055 = x_1627392045 === y_1627392046
    if (sameObject_1627392055) {
    result_1627392047 = true;
    break BeforeRet;
    }
    
    if (!(((x_1627392045).length == (y_1627392046).length))) {
    result_1627392047 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1627392069 = 0;
      var colontmp__2969582599 = 0;
      colontmp__2969582599 = subInt((x_1627392045).length, 1);
      var res_2969582600 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969582600 <= colontmp__2969582599)) break Label3;
            i_1627392069 = res_2969582600;
            if (!(HEX3DHEX3D_1627392026(x_1627392045[chckIndx(i_1627392069, 0, (x_1627392045).length - 1)], y_1627392046[chckIndx(i_1627392069, 0, (y_1627392046).length - 1)]))) {
            result_1627392047 = false;
            break BeforeRet;
            }
            
            res_2969582600 = addInt(res_2969582600, 1);
          }
      };
    };
    result_1627392047 = true;
    break BeforeRet;
  };

  return result_1627392047;

}

function len_1627392114(t_1627392117) {
  var result_1627392118 = 0;

    result_1627392118 = t_1627392117.counter;

  return result_1627392118;

}

function HEX3DHEX3D_1627392026(a_1627392027, b_1627392028) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
          var Temporary11;
          var Temporary12;
          var Temporary14;
                  var Temporary17;
                  var Temporary18;
                  var Temporary19;

  var result_1627392029 = false;

  BeforeRet: {
    if ((a_1627392027 == null)) {
    if ((b_1627392028 == null)) {
    result_1627392029 = true;
    break BeforeRet;
    }
    
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
    if (((b_1627392028 == null) || !((a_1627392027.kind == b_1627392028.kind)))) {
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
      switch (a_1627392027.kind) {
      case 4:
        var Temporary1 = a_1627392027;
        if (ConstSet201[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
        var Temporary2 = b_1627392028;
        if (ConstSet202[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        result_1627392029 = eqStrings(Temporary1.str, Temporary2.str);
        break;
      case 2:
        var Temporary3 = a_1627392027;
        if (ConstSet203[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        var Temporary4 = b_1627392028;
        if (ConstSet204[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        result_1627392029 = (Temporary3.num == Temporary4.num);
        break;
      case 3:
        var Temporary5 = a_1627392027;
        if (ConstSet205[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
        var Temporary6 = b_1627392028;
        if (ConstSet206[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        result_1627392029 = (Temporary5.fnum == Temporary6.fnum);
        break;
      case 1:
        var Temporary7 = a_1627392027;
        if (ConstSet207[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        var Temporary8 = b_1627392028;
        if (ConstSet208[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        result_1627392029 = (Temporary7.bval == Temporary8.bval);
        break;
      case 0:
        result_1627392029 = true;
        break;
      case 6:
        var Temporary9 = a_1627392027;
        if (ConstSet209[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
        var Temporary10 = b_1627392028;
        if (ConstSet210[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
        result_1627392029 = HEX3DHEX3D_1627392043(Temporary9.elems, Temporary10.elems);
        break;
      case 5:
          var Temporary11 = a_1627392027;
          if (ConstSet211[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
          var Temporary12 = b_1627392028;
          if (ConstSet212[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        if (!((len_1627392114(Temporary11.fields) == len_1627392114(Temporary12.fields)))) {
        result_1627392029 = false;
        break BeforeRet;
        }
        
        Label13: {
          var key_1627392496 = [];
          var val_1627392497 = null;
          var colontmp__2969582592 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary14 = a_1627392027;
          if (ConstSet213[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
          colontmp__2969582592 = nimCopy(colontmp__2969582592, Temporary14.fields, NTI1627389966);
          var L_2969582594 = len_1627392114(colontmp__2969582592);
          if ((0 < colontmp__2969582592.counter)) {
          var h_2969582595 = colontmp__2969582592.first;
          Label15: {
              Label16: while (true) {
              if (!(0 <= h_2969582595)) break Label16;
                var nxt_2969582597 = colontmp__2969582592.data[chckIndx(h_2969582595, 0, (colontmp__2969582592.data).length - 1)].Field1;
                if (isFilled_1308622880(colontmp__2969582592.data[chckIndx(h_2969582595, 0, (colontmp__2969582592.data).length - 1)].Field0)) {
                key_1627392496 = colontmp__2969582592.data[chckIndx(h_2969582595, 0, (colontmp__2969582592.data).length - 1)].Field2;
                val_1627392497 = colontmp__2969582592.data[chckIndx(h_2969582595, 0, (colontmp__2969582592.data).length - 1)].Field3;
                  var Temporary17 = b_1627392028;
                  if (ConstSet214[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1627389955)); }
                if (!(hasKey_1627392538(Temporary17.fields, key_1627392496))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                  var Temporary18 = b_1627392028;
                  if (ConstSet215[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1627389955)); }
                if (!(HEX3DHEX3D_1627392026((Temporary19 = HEX5BHEX5D_1627392612(Temporary18.fields, key_1627392496), Temporary19)[0][Temporary19[1]], val_1627392497))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                if (!((len_1627392114(colontmp__2969582592) == L_2969582594))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_2969582595 = nxt_2969582597;
              }
          };
          }
          
        };
        result_1627392029 = true;
        break;
      }
    }
    }
  };

  return result_1627392029;

}

function raiseJsonException_1811939497(condStr_1811939498, msg_1811939499) {
    raiseException({message: (condStr_1811939498 || []).concat([32,102,97,105,108,101,100,58,32] || [],msg_1811939499 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function len_1627392983(n_1627392984) {
      var Temporary1;
      var Temporary2;

  var result_1627392985 = 0;

    switch (n_1627392984.kind) {
    case 6:
      var Temporary1 = n_1627392984;
      if (ConstSet216[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627392985 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1627392984;
      if (ConstSet217[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627392985 = len_1627392114(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1627392985;

}

function toHexImpl_855638788(x_855638789, len_855638790, handleNegative_855638791) {
  var result_855638792 = [];

    var n_855638794 = x_855638789;
    result_855638792 = nimCopy(null, mnewString(len_855638790), NTI33554449);
    Label1: {
      var j_855638800 = 0;
      var colontmp__2969582619 = 0;
      colontmp__2969582619 = subInt(len_855638790, 1);
      var res_2969582620 = colontmp__2969582619;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2969582620)) break Label3;
            j_855638800 = res_2969582620;
            result_855638792[chckIndx(j_855638800, 0, (result_855638792).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_855638794 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            n_855638794 = (n_855638794 >>> 4);
            if (((n_855638794 == 0) && handleNegative_855638791)) {
            n_855638794 = 4294967295;
            }
            
            res_2969582620 = subInt(res_2969582620, 1);
          }
      };
    };

  return result_855638792;

}

function toHex_855640046(x_855640048, len_855640049) {
  var result_855640050 = [];

    result_855640050 = nimCopy(null, toHexImpl_855638788((x_855640048 >>> 0), len_855640049, (x_855640048 < 0)), NTI33554449);

  return result_855640050;

}

function escapeJsonUnquoted_1627394346(s_1627394347, result_1627394348, result_1627394348_Idx) {
    Label1: {
      var c_1627394349 = 0;
      var i_2969582615 = 0;
      var L_2969582616 = (s_1627394347).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582615 < L_2969582616)) break Label3;
            c_1627394349 = s_1627394347[chckIndx(i_2969582615, 0, (s_1627394347).length - 1)];
            switch (c_1627394349) {
            case 10:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,110]);;
              break;
            case 8:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,98]);;
              break;
            case 12:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,102]);;
              break;
            case 9:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,116]);;
              break;
            case 11:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,114]);;
              break;
            case 34:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1627394349) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48] || []).concat(toHex_855640046(c_1627394349, 2) || []));;
              break;
            case 92:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1627394348[result_1627394348_Idx], c_1627394349);;
              break;
            }
            i_2969582615 = addInt(i_2969582615, 1);
            if (!(((s_1627394347).length == L_2969582616))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function escapeJson_1627394367(s_1627394368, result_1627394369, result_1627394369_Idx) {
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;
    escapeJsonUnquoted_1627394346(s_1627394368, result_1627394369, result_1627394369_Idx);
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;

  
}

function addFloat_33557340(result_33557342, result_33557342_Idx, x_33557343) {
    add_33556386(result_33557342, result_33557342_Idx, nimFloatToString_385876087(x_33557343));

  
}

function toUgly_1627394377(result_1627394378, result_1627394378_Idx, node_1627394379) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1627394380 = false;
    switch (node_1627394379.kind) {
    case 6:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [91]);;
      Label1: {
        var child_1627394384 = null;
        var colontmp__2969582603 = [];
        var Temporary2 = node_1627394379;
        if (ConstSet218[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        colontmp__2969582603 = Temporary2.elems;
        var i_2969582605 = 0;
        var L_2969582606 = (colontmp__2969582603).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2969582605 < L_2969582606)) break Label4;
              child_1627394384 = colontmp__2969582603[chckIndx(i_2969582605, 0, (colontmp__2969582603).length - 1)];
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, child_1627394384);
              i_2969582605 = addInt(i_2969582605, 1);
              if (!(((colontmp__2969582603).length == L_2969582606))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [93]);;
      break;
    case 5:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [123]);;
      Label5: {
        var key_1627394389 = [];
        var value_1627394390 = null;
        var colontmp__2969582609 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1627394379;
        if (ConstSet219[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__2969582609 = nimCopy(colontmp__2969582609, Temporary6.fields, NTI1627389966);
        var L_2969582610 = len_1627392114(colontmp__2969582609);
        if ((0 < colontmp__2969582609.counter)) {
        var h_2969582611 = colontmp__2969582609.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_2969582611)) break Label8;
              var nxt_2969582613 = colontmp__2969582609.data[chckIndx(h_2969582611, 0, (colontmp__2969582609.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__2969582609.data[chckIndx(h_2969582611, 0, (colontmp__2969582609.data).length - 1)].Field0)) {
              key_1627394389 = colontmp__2969582609.data[chckIndx(h_2969582611, 0, (colontmp__2969582609.data).length - 1)].Field2;
              value_1627394390 = colontmp__2969582609.data[chckIndx(h_2969582611, 0, (colontmp__2969582609.data).length - 1)].Field3;
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              escapeJson_1627394367(key_1627394389, result_1627394378, result_1627394378_Idx);
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [58]);;
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, value_1627394390);
              if (!((len_1627392114(colontmp__2969582609) == L_2969582610))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_2969582611 = nxt_2969582613;
            }
        };
        }
        
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [125]);;
      break;
    case 4:
      if (node_1627394379.isUnquoted) {
      var Temporary9 = node_1627394379;
      if (ConstSet220[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1627394379;
        if (ConstSet221[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      escapeJson_1627394367(Temporary10.str, result_1627394378, result_1627394378_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1627394379;
      if (ConstSet222[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
      addInt_301990087(result_1627394378, result_1627394378_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1627394379;
      if (ConstSet223[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394378, result_1627394378_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1627394379;
        if (ConstSet224[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary13);;
      break;
    case 0:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [110,117,108,108]);;
      break;
    }

  
}

function HEX24_1627394481(node_1627394482) {
  var result_1627394483 = [[]];

    result_1627394483[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1627394377(result_1627394483, 0, node_1627394482);

  return result_1627394483[0];

}

function addQuoted_1811939807(s_1811939809, s_1811939809_Idx, x_1811939810) {
    s_1811939809[s_1811939809_Idx].push.apply(s_1811939809[s_1811939809_Idx], HEX24_1627394481(x_1811939810));;

  
}

function HEX24_1811939763(x_1811939765) {
  var result_1811939766 = [[]];

    result_1811939766[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym29_1811939777 = 0;
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    addQuoted_1593835572(result_1811939766, 0, x_1811939765["Field0"]);
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    if ((x_1811939765["Field1"] == null)) {
    result_1811939766[0].push.apply(result_1811939766[0], [110,105,108]);;
    }
    else {
    addQuoted_1811939807(result_1811939766, 0, x_1811939765["Field1"]);
    }
    
    if ((countHEX60gensym29_1811939777 == 1)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44]);;
    }
    
    result_1811939766[0].push.apply(result_1811939766[0], [41]);;

  return result_1811939766[0];

}

function addQuoted_1627395455(s_1627395457, s_1627395457_Idx, x_1627395458) {
    s_1627395457[s_1627395457_Idx].push.apply(s_1627395457[s_1627395457_Idx], reprEnum(x_1627395458, NTI1627389955));;

  
}

function collectionToString_1627395422(x_1627395424, prefix_1627395425, separator_1627395426, suffix_1627395427) {
  var result_1627395428 = [[]];

    result_1627395428[0] = nimCopy(null, prefix_1627395425, NTI33554449);
    var firstElement_1627395429 = true;
    Label1: {
      var value_1627395451 = 0;
      var i_2969582624 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582624 <= 6)) break Label3;
            if ((x_1627395424[i_2969582624] != undefined)) {
            value_1627395451 = i_2969582624;
            if (firstElement_1627395429) {
            firstElement_1627395429 = false;
            }
            else {
            result_1627395428[0].push.apply(result_1627395428[0], separator_1627395426);;
            }
            
            addQuoted_1627395455(result_1627395428, 0, value_1627395451);
            }
            
            i_2969582624 += 1;
          }
      };
    };
    result_1627395428[0].push.apply(result_1627395428[0], suffix_1627395427);;

  return result_1627395428[0];

}

function HEX24_1627395418(x_1627395420) {
  var result_1627395421 = [];

    result_1627395421 = nimCopy(null, collectionToString_1627395422(x_1627395420, [123], [44,32], [125]), NTI33554449);

  return result_1627395421;

}

function initFromJson_2818584078(dst_2818584080, dst_2818584080_Idx, jsonNode_2818584081, jsonPath_2818584082, jsonPath_2818584082_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_2818584081, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818584082[jsonPath_2818584082_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet225[jsonNode_2818584081.kind] != undefined))) {
    var msgHEX60gensym176_2818584099 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet226), nimCopy(null, jsonPath_2818584082[jsonPath_2818584082_Idx], NTI33554449), reprEnum(jsonNode_2818584081.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym176_2818584099, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_2818584081;
    if (ConstSet227[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_2818584080[dst_2818584080_Idx] = Temporary1.num;

  
}

function to_2818584067(node_2818584070) {
  var result_2818584072 = [0];

    var jsonPath_2818584073 = [[]];
    result_2818584072[0] = 0;
    initFromJson_2818584078(result_2818584072, 0, node_2818584070, jsonPath_2818584073, 0);

  return result_2818584072[0];

}

function fromJson_2818584054(a_2818584056, a_2818584056_Idx, b_2818584057, opt_2818584058) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584057, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [105,110,116], Field1: b_2818584057}));
    }
    
    a_2818584056[a_2818584056_Idx] = to_2818584067(b_2818584057);

  
}

function jsonTo_2818584048(b_2818584050, opt_2818584052) {
  var result_2818584053 = [0];

    fromJson_2818584054(result_2818584053, 0, b_2818584050, opt_2818584052);

  return result_2818584053[0];

}

function fromJsonHook_3187671493(t_3187671494, jsonNode_3187671495) {
    t_3187671494.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_3187671495, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3187671575(a_3187671577, b_3187671578, opt_3187671579) {
    if (!(!(HEX3DHEX3D_1627392026(b_3187671578, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,111,114,80,111,112,117,112], Field1: b_3187671578}));
    }
    
    fromJsonHook_3187671493(a_3187671577, b_3187671578);

  
}

function jsonTo_3187671569(b_3187671571, opt_3187671573) {
  var result_3187671574 = [({id: 0})];

    fromJson_3187671575(result_3187671574[0], b_3187671571, opt_3187671573);

  return result_3187671574[0];

}

function HEX5BHEX5D_1627393116(node_1627393117, index_1627393118) {
    var Temporary1;
    var Temporary2;

  var result_1627393119 = null;

  BeforeRet: {
    if (!(!((node_1627393117 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393117.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = node_1627393117;
    if (ConstSet228[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393119 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1627393118, 0, (Temporary2).length - 1)];
    break BeforeRet;
  };

  return result_1627393119;

}

function acceptApi_3187671567(HEX3Atmp_3187671504) {
  var result_3187671568 = null;

    result_3187671568 = newJNull_1627390049();
    Label1: {
    };
    acceptScript_3187671502_3187671516(jsonTo_3187671569(HEX5BHEX5D_1627393116(HEX3Atmp_3187671504, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3187671568;

}

function cancelScript_3187671597_3187671609(self_3187671610) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym32_3187671611 = getSelectorPopup_3187671392(self_3187671610);
      if (isNone_3187671523(rHEX60gensym32_3187671611)) {
      break BeforeRet;
      }
      
    };
    cancel_3187671601(get_3187671543(rHEX60gensym32_3187671611));
  };

  
}

function cancelApi_3187671637(HEX3Atmp_3187671599) {
  var result_3187671638 = null;

    result_3187671638 = newJNull_1627390049();
    Label1: {
    };
    cancelScript_3187671597_3187671609(jsonTo_3187671569(HEX5BHEX5D_1627393116(HEX3Atmp_3187671599, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3187671638;

}

function prevScript_3187671646_3187671670(self_3187671671) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym40_3187671672 = getSelectorPopup_3187671392(self_3187671671);
      if (isNone_3187671523(rHEX60gensym40_3187671672)) {
      break BeforeRet;
      }
      
    };
    prev_3187671650(get_3187671543(rHEX60gensym40_3187671672));
  };

  
}

function prevApi_3187671698(HEX3Atmp_3187671648) {
  var result_3187671699 = null;

    result_3187671699 = newJNull_1627390049();
    Label1: {
    };
    prevScript_3187671646_3187671670(jsonTo_3187671569(HEX5BHEX5D_1627393116(HEX3Atmp_3187671648, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3187671699;

}

function nextScript_3187671707_3187671728(self_3187671729) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym49_3187671730 = getSelectorPopup_3187671392(self_3187671729);
      if (isNone_3187671523(rHEX60gensym49_3187671730)) {
      break BeforeRet;
      }
      
    };
    next_3187671711(get_3187671543(rHEX60gensym49_3187671730));
  };

  
}

function nextApi_3187671756(HEX3Atmp_3187671709) {
  var result_3187671757 = null;

    result_3187671757 = newJNull_1627390049();
    Label1: {
    };
    nextScript_3187671707_3187671728(jsonTo_3187671569(HEX5BHEX5D_1627393116(HEX3Atmp_3187671709, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3187671757;

}

function none_2818593370() {
  var result_2818593376 = ({val: null});

  return result_2818593376;

}

function dispatch_3187671767(command_3187671766, arg_3187671765) {
    var Temporary1;

  var result_3187671769 = ({val: null});

    switch (toJSStr(command_3187671766)) {
    case "accept":
      Temporary1 = some_2818593171(acceptApi_3187671567(arg_3187671765));
      break;
    case "cancel":
      Temporary1 = some_2818593171(cancelApi_3187671637(arg_3187671765));
      break;
    case "prev":
      Temporary1 = some_2818593171(prevApi_3187671698(arg_3187671765));
      break;
    case "next":
      Temporary1 = some_2818593171(nextApi_3187671756(arg_3187671765));
      break;
    default: 
      Temporary1 = none_2818593370();
      break;
    }
    result_3187671769 = nimCopy(result_3187671769, Temporary1, NTI2818584815);

  return result_3187671769;

}

function handleAction_3187671788(self_3187671789, action_3187671790, arg_3187671791) {
  var result_3187671792 = 0;

  BeforeRet: {
    if ((handleUnknownPopupAction_1291848841(self_3187671789.editor, self_3187671789, action_3187671790, arg_3187671791) == 3)) {
    result_3187671792 = 3;
    break BeforeRet;
    }
    
    var args_3187671797 = newJArray_1627390082();
    add_1627390190(args_3187671797, toJson_3187671489({id: self_3187671789.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_3187671798 = null;
      var colontmp__2969582524 = null;
      colontmp__2969582524 = newStringStream_1660945417(arg_3187671791);
      var p_2969582526 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_2969582526[0], colontmp__2969582524, [], false);
      try {
      var _ = getTok_1694499270(p_2969582526[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_2969582526[0].tok == 1))) break Label4;
            a_3187671798 = parseJson_1627395211(p_2969582526[0], false, false, 0);
            add_1627390190(args_3187671797, a_3187671798);
          }
      };
      } finally {
      close_1694498967(p_2969582526[0]);
      }
    };
    if (isSome_2818593438(dispatch_3187671767(action_3187671790, args_3187671797))) {
    result_3187671792 = 3;
    break BeforeRet;
    }
    
    result_3187671792 = 1;
    break BeforeRet;
  };

  return result_3187671792;

}

function newSelectorPopup_3187671905(editor_3187671906) {
    
function HEX3Aanonymous_3187671939(doc_3187671940) {
        handleTextChanged_3187671806(popup_3187671908);

      
    }
      
function HEX3Aanonymous_3187671988(actionHEX60gensym65HEX60gensym66_3187671989, argHEX60gensym65HEX60gensym66_3187671990) {
        var result_3187671991 = 0;

        BeforeRet: {
          if (handlerHEX60gensym65_3187671976.config.handleActions) {
          var action_3187671992 = nimCopy(null, actionHEX60gensym65HEX60gensym66_3187671989, NTI33554449);
          var arg_3187671993 = nimCopy(null, argHEX60gensym65HEX60gensym66_3187671990, NTI33554449);
          var responseHEX60gensym65HEX60gensym66_3187671994 = handleAction_3187671788(popup_3187671908, action_3187671992, arg_3187671993);
          if (handlerHEX60gensym65_3187671976.config.consumeAllActions) {
          result_3187671991 = 3;
          break BeforeRet;
          }
          
          result_3187671991 = responseHEX60gensym65HEX60gensym66_3187671994;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym65_3187671976.config.consumeAllActions) {
          result_3187671991 = 3;
          break BeforeRet;
          }
          else {
            result_3187671991 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3187671991;

      }
      
function HEX3Aanonymous_3187671996(inputHEX60gensym65HEX60gensym67_3187671997) {
        var result_3187671998 = 0;

        BeforeRet: {
          if (handlerHEX60gensym65_3187671976.config.handleInputs) {
          var input_3187671999 = nimCopy(null, inputHEX60gensym65HEX60gensym67_3187671997, NTI33554449);
          result_3187671998 = 1;
          break BeforeRet;
          }
          else {
            result_3187671998 = 1;
            break BeforeRet;
          }
          
        };

        return result_3187671998;

      }

  var result_3187671907 = null;

  BeforeRet: {
    var popup_3187671908 = {editor: editor_3187671906, m_type: NTI3187671062, textEditor: null, selected: 0, scrollOffset: 0, completions: [], handleItemConfirmed: null, handleItemSelected: null, handleCanceled: null, getCompletions: null, getCompletionsAsync: null, getCompletionsAsyncIter: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], cancellationToken: null, id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3187671908.textEditor = newTextEditor_2818593568(newTextDocument_2818579088([], [], false), editor_3187671906);
    setMode_2818584222(popup_3187671908.textEditor, [105,110,115,101,114,116]);
    popup_3187671908.textEditor.renderHeader = false;
    popup_3187671908.textEditor.lineNumbers = nimCopy(popup_3187671908.textEditor.lineNumbers, some_3187671914(0), NTI2818572554);
    popup_3187671908.textEditor.document.singleLine = true;
    var _ = subscribe_2818593616(popup_3187671908.textEditor.document.textChanged, HEX3Aanonymous_3187671939);
    Label1: {
      var handlerHEX60gensym65_3187671976 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym65_3187671976.config = getEventHandlerConfig_1291849162(editor_3187671906, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]);
      handlerHEX60gensym65_3187671976.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(editor_3187671906, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
      handlerHEX60gensym65_3187671976.handleAction = HEX3Aanonymous_3187671988;
      handlerHEX60gensym65_3187671976.handleInput = HEX3Aanonymous_3187671996;
    };
    popup_3187671908.eventHandler = handlerHEX60gensym65_3187671976;
    result_3187671907 = popup_3187671908;
    break BeforeRet;
  };

  return result_3187671907;

}

function nuctoLowerStr(s_788531346) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_788531347 = [];

    result_788531347 = nimCopy(null, mnewString(chckRange((s_788531346).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_788531354 = 0;
    var resultIndexHEX60gensym252_788531355 = 0;
    var runeHEX60gensym252_788531356 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_788531354 < (s_788531346).length)) break Label2;
          if ((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] <= 127)) {
          runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 2))) {
          runeHEX60gensym252_788531356 = chckRange((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 31) << 6) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 2);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 3))) {
          runeHEX60gensym252_788531356 = chckRange(((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 15) << 12) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 3);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 4))) {
          runeHEX60gensym252_788531356 = chckRange((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 7) << 18) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 4);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 5))) {
          runeHEX60gensym252_788531356 = chckRange(((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 3) << 24) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 5);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 6))) {
          runeHEX60gensym252_788531356 = chckRange((((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 1) << 30) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 24)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 5), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 6);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
            runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          }}}}}
          runeHEX60gensym252_788531356 = nuctoLower(runeHEX60gensym252_788531356);
          var iHEX60gensym274_788531597 = runeHEX60gensym252_788531356;
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 127)) {
          if (result_788531347.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 1), 0, 2147483647), Temporary3)) { for (var i = result_788531347.length; i < Temporary3; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary3; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(iHEX60gensym274_788531597, 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2047)) {
          if (result_788531347.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 2), 0, 2147483647), Temporary4)) { for (var i = result_788531347.length; i < Temporary4; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary4; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 6) | 192), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 65535)) {
          if (result_788531347.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 3), 0, 2147483647), Temporary5)) { for (var i = result_788531347.length; i < Temporary5; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary5; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 12) | 224), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2097151)) {
          if (result_788531347.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 4), 0, 2147483647), Temporary6)) { for (var i = result_788531347.length; i < Temporary6; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary6; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 18) | 240), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 67108863)) {
          if (result_788531347.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 5), 0, 2147483647), Temporary7)) { for (var i = result_788531347.length; i < Temporary7; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary7; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 24) | 248), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2147483647)) {
          if (result_788531347.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 6), 0, 2147483647), Temporary8)) { for (var i = result_788531347.length; i < Temporary8; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary8; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 30) | 252), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 24) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 5), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_788531347;

}

function toLower_788536559(s_788536560) {
  var result_788536561 = [];

    result_788536561 = nimCopy(null, nuctoLowerStr((s_788536560.slice(0, (s_788536560).length - 1 + 1))), NTI33554449);

  return result_788536561;

}

function mergeAlt_1979711630(a_1979711632, b_1979711633, lo_1979711634, m_1979711635, hi_1979711636, cmp_1979711639, order_1979711640) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1979711639(a_1979711632[chckIndx(m_1979711635, 0, (a_1979711632).length - 1)], a_1979711632[chckIndx(addInt(m_1979711635, 1), 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
    break BeforeRet;
    }
    
    var j_1979711641 = lo_1979711634;
    if (!((j_1979711641 <= m_1979711635))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1979711647 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1979711641 <= m_1979711635)) break Label2;
          b_1979711633[chckIndx(bb_1979711647, 0, (b_1979711633).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
          bb_1979711647 = addInt(bb_1979711647, 1);
          j_1979711641 = addInt(j_1979711641, 1);
        }
    };
    var i_1979711658 = 0;
    var k_1979711659 = lo_1979711634;
    Label3: {
        Label4: while (true) {
        if (!((k_1979711659 < j_1979711641) && (j_1979711641 <= hi_1979711636))) break Label4;
          if ((HEX2A_1023410184(cmp_1979711639(b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)], a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          i_1979711658 = addInt(i_1979711658, 1);
          }
          else {
            a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
            j_1979711641 = addInt(j_1979711641, 1);
          }
          
          k_1979711659 = addInt(k_1979711659, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1979711659 < j_1979711641)) break Label6;
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          k_1979711659 = addInt(k_1979711659, 1);
          i_1979711658 = addInt(i_1979711658, 1);
        }
    };
  };

  
}

function sort_1979711613(a_1979711615, cmp_1979711618, order_1979711619) {
    var n_1979711623 = (a_1979711615).length;
    var b_1979711627 = newSeq_503316959(chckRange(divInt(n_1979711623, 2), 0, 2147483647));
    var s_1979711628 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1979711628 < n_1979711623)) break Label2;
          var m_1979711629 = subInt(subInt(n_1979711623, 1), s_1979711628);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1979711629)) break Label4;
                mergeAlt_1979711630(a_1979711615, b_1979711627, nimMax(addInt(subInt(m_1979711629, s_1979711628), 1), 0), m_1979711629, addInt(m_1979711629, s_1979711628), cmp_1979711618, order_1979711619);
                m_1979711629 = subInt(m_1979711629, mulInt(s_1979711628, 2));
              }
          };
          s_1979711628 = mulInt(s_1979711628, 2);
        }
    };

  
}

function sorted_1979711591(a_1979711593, cmp_1979711596, order_1979711597) {
  var result_1979711598 = [];

    result_1979711598 = nimCopy(null, newSeq_503316959(chckRange((a_1979711593).length, 0, 2147483647)), NTI503316776);
    Label1: {
      var i_1979711612 = 0;
      var colontmp__2684355198 = 0;
      colontmp__2684355198 = (a_1979711593).length - 1;
      var res_2684355199 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2684355199 <= colontmp__2684355198)) break Label3;
            i_1979711612 = res_2684355199;
            result_1979711598[chckIndx(i_1979711612, 0, (result_1979711598).length - 1)] = nimCopy(null, a_1979711593[chckIndx(i_1979711612, 0, (a_1979711593).length - 1)], NTI33554449);
            res_2684355199 = addInt(res_2684355199, 1);
          }
      };
    };
    sort_1979711613(result_1979711598, cmp_1979711596, order_1979711597);

  return result_1979711598;

}

function cmp_1979711584(x_1979711586, y_1979711587) {
  var result_1979711588 = 0;

  BeforeRet: {
    if (eqStrings(x_1979711586, y_1979711587)) {
    result_1979711588 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_1979711586, y_1979711587) < 0)) {
    result_1979711588 = -1;
    break BeforeRet;
    }
    
    result_1979711588 = 1;
    break BeforeRet;
  };

  return result_1979711588;

}

function sorted_1979711579(a_1979711581, order_1979711582) {
  var result_1979711583 = [];

    result_1979711583 = nimCopy(null, sorted_1979711591(a_1979711581, cmp_1979711584, order_1979711582), NTI1979711564);

  return result_1979711583;

}

function max_33555646(x_33555647, y_33555648) {
    var Temporary1;

  var result_33555649 = 0.0;

    if (((y_33555648 <= x_33555647) || !((y_33555648 == y_33555648)))) {
    Temporary1 = x_33555647;
    }
    else {
    Temporary1 = y_33555648;
    }
    
    result_33555649 = Temporary1;

  return result_33555649;

}

function fuzzyMatchSmart_1979711572(s1_1979711573, s2_1979711574, withSubstring_1979711575) {
  var result_1979711576 = 0.0;

  BeforeRet: {
    var str1_1979711577 = [];
    var str2_1979711578 = [];
    str1_1979711577 = nimCopy(null, toLower_788536559(s1_1979711573), NTI33554449);
    str2_1979711578 = nimCopy(null, toLower_788536559(s2_1979711574), NTI33554449);
    str1_1979711577 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str1_1979711577, [32], -1), 1), [32]), NTI33554449);
    str2_1979711578 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str2_1979711578, [32], -1), 1), [32]), NTI33554449);
    if (eqStrings(str1_1979711577, str2_1979711578)) {
    result_1979711576 = 1.0;
    break BeforeRet;
    }
    
    if (((str1_1979711577).length == (str2_1979711578).length)) {
    result_1979711576 = fuzzyMatch_1979711568(str1_1979711577, str2_1979711578);
    break BeforeRet;
    }
    
    var shorter_1979711712 = [];
    var longer_1979711713 = [];
    if (((str1_1979711577).length < (str2_1979711578).length)) {
    shorter_1979711712 = nimCopy(null, str1_1979711577, NTI33554449);
    longer_1979711713 = nimCopy(null, str2_1979711578, NTI33554449);
    }
    else {
      shorter_1979711712 = nimCopy(null, str2_1979711578, NTI33554449);
      longer_1979711713 = nimCopy(null, str1_1979711577, NTI33554449);
    }
    
    var tmpRes_1979711714 = fuzzyMatch_1979711568(shorter_1979711712, longer_1979711713);
    if (withSubstring_1979711575) {
    var lengthDiff_1979711715 = subInt((longer_1979711713).length, (shorter_1979711712).length);
    var subMatch_1979711716 = 0.0;
    Label1: {
      var i_1979711721 = 0;
      var res_2969582633 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969582633 <= lengthDiff_1979711715)) break Label3;
            i_1979711721 = res_2969582633;
            subMatch_1979711716 = fuzzyMatch_1979711568(shorter_1979711712, HEX5BHEX5D_855639291(longer_1979711713, HEX2EHEX2E_805306418(i_1979711721, subInt(addInt(i_1979711721, (shorter_1979711712).length), 1))));
            tmpRes_1979711714 = max_33555646(tmpRes_1979711714, subMatch_1979711716);
            res_2969582633 = addInt(res_2969582633, 1);
          }
      };
    };
    }
    
    result_1979711576 = tmpRes_1979711714;
    break BeforeRet;
  };

  return result_1979711576;

}

function newSeq_2969582297(len_2969582299) {
  var result_2969582300 = [];

    result_2969582300 = new Array(len_2969582299); for (var i = 0 ; i < len_2969582299 ; ++i) { result_2969582300[i] = null; }
  return result_2969582300;

}

function mergeAlt_2969582308(a_2969582310, b_2969582311, lo_2969582312, m_2969582313, hi_2969582314, cmp_2969582317, order_2969582318) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2969582317(a_2969582310[chckIndx(m_2969582313, 0, (a_2969582310).length - 1)], a_2969582310[chckIndx(addInt(m_2969582313, 1), 0, (a_2969582310).length - 1)]), order_2969582318) <= 0)) {
    break BeforeRet;
    }
    
    var j_2969582319 = lo_2969582312;
    if (!((j_2969582319 <= m_2969582313))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2969582325 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2969582319 <= m_2969582313)) break Label2;
          b_2969582311[chckIndx(bb_2969582325, 0, (b_2969582311).length - 1)] = a_2969582310[chckIndx(j_2969582319, 0, (a_2969582310).length - 1)];
          bb_2969582325 = addInt(bb_2969582325, 1);
          j_2969582319 = addInt(j_2969582319, 1);
        }
    };
    var i_2969582336 = 0;
    var k_2969582337 = lo_2969582312;
    Label3: {
        Label4: while (true) {
        if (!((k_2969582337 < j_2969582319) && (j_2969582319 <= hi_2969582314))) break Label4;
          if ((HEX2A_1023410184(cmp_2969582317(b_2969582311[chckIndx(i_2969582336, 0, (b_2969582311).length - 1)], a_2969582310[chckIndx(j_2969582319, 0, (a_2969582310).length - 1)]), order_2969582318) <= 0)) {
          a_2969582310[chckIndx(k_2969582337, 0, (a_2969582310).length - 1)] = b_2969582311[chckIndx(i_2969582336, 0, (b_2969582311).length - 1)];
          i_2969582336 = addInt(i_2969582336, 1);
          }
          else {
            a_2969582310[chckIndx(k_2969582337, 0, (a_2969582310).length - 1)] = a_2969582310[chckIndx(j_2969582319, 0, (a_2969582310).length - 1)];
            j_2969582319 = addInt(j_2969582319, 1);
          }
          
          k_2969582337 = addInt(k_2969582337, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2969582337 < j_2969582319)) break Label6;
          a_2969582310[chckIndx(k_2969582337, 0, (a_2969582310).length - 1)] = b_2969582311[chckIndx(i_2969582336, 0, (b_2969582311).length - 1)];
          k_2969582337 = addInt(k_2969582337, 1);
          i_2969582336 = addInt(i_2969582336, 1);
        }
    };
  };

  
}

function sort_2969582285(a_2969582287, cmp_2969582290, order_2969582291) {
    var n_2969582296 = (a_2969582287).length;
    var b_2969582305 = newSeq_2969582297(chckRange(divInt(n_2969582296, 2), 0, 2147483647));
    var s_2969582306 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2969582306 < n_2969582296)) break Label2;
          var m_2969582307 = subInt(subInt(n_2969582296, 1), s_2969582306);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2969582307)) break Label4;
                mergeAlt_2969582308(a_2969582287, b_2969582305, nimMax(addInt(subInt(m_2969582307, s_2969582306), 1), 0), m_2969582307, addInt(m_2969582307, s_2969582306), cmp_2969582290, order_2969582291);
                m_2969582307 = subInt(m_2969582307, mulInt(s_2969582306, 2));
              }
          };
          s_2969582306 = mulInt(s_2969582306, 2);
        }
    };

  
}

function init_2483028018(self_2483028019) {
    self_2483028019.id = newEditorId_2449473854();

  
}

function subscribe_1291848997(event_1291848999, callback_1291849000) {
  var result_1291849001 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291849001 = nimCopy(result_1291849001, newId_2046820597(), NTI2046820355);
    event_1291848999.handlers.push({Field0: nimCopy(null, result_1291849001, NTI2046820355), Field1: callback_1291849000});;

  return result_1291849001;

}

function pushPopup_1291849060(self_1291849061, popup_1291849062) {
    
function HEX3Aanonymous_1291849078() {
        requestRender_2768240746(self_1291849061.platform, false);

      
    }

    init_2483028018(popup_1291849062);
    self_1291849061.popups.push(popup_1291849062);;
    var _ = subscribe_1291848997(popup_1291849062.onMarkedDirty, HEX3Aanonymous_1291849078);
    requestRender_2768240746(self_1291849061.platform, false);

  
}

function openGotoSymbolPopup_2969582231(self_2969582232) {
    
function HEX3Aanonymous_2969582234(popup_2969582235, text_2969582236) {
        
function HEX3Aanonymous_2969582254(a_2969582272, b_2969582273) {
          var result_2969582278 = 0;

            result_2969582278 = cmp_3204448328(a_2969582272.completion.score, b_2969582273.completion.score);

          return result_2969582278;

        }

      var result_2969582237 = [];

        var symbols_2969582238 = computeSymbols_3019922496(ctx_2969567289, self_2969582232.document.rootNode, true);
        Label1: {
          var key_2969582243 = ({padding: 0, time: 0, fuzz: 0, count: 0});
          var symbol_2969582244 = null;
          var L_2969582510 = len_3087009065(symbols_2969582238);
          Label2: {
            var h_2969582512 = 0;
            var colontmp__2969582513 = 0;
            colontmp__2969582513 = (symbols_2969582238.data).length - 1;
            var res_2969582514 = 0;
            Label3: {
                Label4: while (true) {
                if (!(res_2969582514 <= colontmp__2969582513)) break Label4;
                  h_2969582512 = res_2969582514;
                  if (isFilled_1308622880(symbols_2969582238.data[chckIndx(h_2969582512, 0, (symbols_2969582238.data).length - 1)].Field0)) {
                  var colontmp__2969582517 = nimCopy(null, {Field0: nimCopy(null, symbols_2969582238.data[chckIndx(h_2969582512, 0, (symbols_2969582238.data).length - 1)].Field1, NTI2046820355), Field1: symbols_2969582238.data[chckIndx(h_2969582512, 0, (symbols_2969582238.data).length - 1)].Field2}, NTI3087008732);
                  key_2969582243 = nimCopy(key_2969582243, colontmp__2969582517["Field0"], NTI2046820355);
                  symbol_2969582244 = colontmp__2969582517["Field1"];
                  Label5: {
                    if (!((symbol_2969582244.kind == 0))) {
                    break Label5;
                    }
                    
                    var score_2969582249 = fuzzyMatchSmart_1979711572(text_2969582236, symbol_2969582244.name, true);
                    result_2969582237.push({completion: {kind: 0, score: score_2969582249, id: nimCopy(null, symbol_2969582244.id, NTI2046820355), nodeKind: 0, name: []}, m_type: NTI2969576809, score: 0.0});;
                  };
                  if (!((len_3087009065(symbols_2969582238) == L_2969582510))) {
                  failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_2969582514 = addInt(res_2969582514, 1);
                }
            };
          };
        };
        sort_2969582285(result_2969582237, HEX3Aanonymous_2969582254, 0);

      return result_2969582237;

    }
    
function HEX3Aanonymous_2969582415(item_2969582416) {
        var Temporary1;
          var Temporary2;
          var Temporary3;

        var completion_2969582417 = nimCopy(null, item_2969582416.completion, NTI2969568638);
        var Temporary1 = completion_2969582417;
        if (ConstSet229[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2969568637)); }
        var id_2969582418 = nimCopy(null, Temporary1.id, NTI2046820355);
          var oHEX60gensym852_2969582421 = getAstNode_3019906180(ctx_2969567289, id_2969582418);
          if (!isSome_3003123546(oHEX60gensym852_2969582421)) Temporary3 = false; else {            var node_2969582444 = get_3003123566(oHEX60gensym852_2969582421);
            Temporary3 = true;          }          if (!Temporary3) Temporary2 = false; else {            Temporary2 = (base_3003121758(node_2969582444) == self_2969582232.document.rootNode);          }        if (Temporary2) {
        nodeHEX3D_2969570829(self_2969582232, node_2969582444);
        }
        

      
    }
    
function HEX3Aanonymous_2969582449() {
        if ((base_3003121758(prevSelection_2969582414) == self_2969582232.document.rootNode)) {
        nodeHEX3D_2969570829(self_2969582232, prevSelection_2969582414);
        }
        

      
    }

    var popup_2969582233 = newSelectorPopup_3187671905(self_2969582232.editor);
    popup_2969582233.getCompletions = HEX3Aanonymous_2969582234;
    var prevSelection_2969582414 = node_2969569752(self_2969582232);
    popup_2969582233.handleItemSelected = HEX3Aanonymous_2969582415;
    popup_2969582233.handleCanceled = HEX3Aanonymous_2969582449;
    updateCompletions_3187671226(popup_2969582233);
    pushPopup_1291849060(self_2969582232.editor, popup_2969582233);

  
}

function openGotoSymbolPopupJsWrapper_2969582228(self_2969582499) {
    openGotoSymbolPopup_2969582231(self_2969582499);

  
}
editor_ast_prototype.openGotoSymbolPopup = function() { return (openGotoSymbolPopupJsWrapper_2969582228(this));};

function len_3221227056(t_3221227059) {
  var result_3221227060 = 0;

    result_3221227060 = t_3221227059.counter;

  return result_3221227060;

}

function goto_2969582646(self_2969582647, where_2969582648) {
        var Temporary1;
      var Temporary2;
        var Temporary4;
        
function HEX3Aanonymous_2969582692(n_2969582695) {
          var result_2969582698 = false;

            result_2969582698 = (!((n_2969582695 == node_2969569752(self_2969582647))) && (HEX3DHEX3D_2046820626(n_2969582695.id, id_2969582691) || HEX3DHEX3D_2046820626(n_2969582695.reff, id_2969582691)));

          return result_2969582698;

        }
                  var Temporary10;
                  var Temporary11;
        var Temporary13;
                var Temporary17;
        
function HEX3Aanonymous_2969582719(n_2969582722) {
          var result_2969582725 = false;

            result_2969582725 = (!((n_2969582722 == node_2969569752(self_2969582647))) && (computeType_3019913434(ctx_2969567289, n_2969582722, true).kind == 0));

          return result_2969582725;

        }
                  var Temporary23;
                  var Temporary24;
                var Temporary28;
        
function HEX3Aanonymous_2969582745(n_2969582748) {
          var result_2969582751 = false;

            result_2969582751 = !((n_2969582748 == node_2969569752(self_2969582647)));

          return result_2969582751;

        }
                  var Temporary38;
                  var Temporary39;
                var Temporary43;

  BeforeRet: {
    if (isEditing_2969575154(self_2969582647)) {
    break BeforeRet;
    }
    
    switch (toJSStr(where_2969582648)) {
    case "definition":
        var oHEX60gensym861_2969582651 = computeSymbol_3019919344(ctx_2969567289, node_2969569752(self_2969582647), true);
        if (!isSome_3087009356(oHEX60gensym861_2969582651)) Temporary1 = false; else {          var sym_2969582674 = get_3087009376(oHEX60gensym861_2969582651);
          Temporary1 = true;        }      if (Temporary1) {
      if (((sym_2969582674.kind == 0) && !((sym_2969582674.node == self_2969582647.document.rootNode)))) {
      var Temporary2 = sym_2969582674;
      if (ConstSet230[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      nodeHEX3D_2969570829(self_2969582647, Temporary2.node);
      }
      
      }
      
      break;
    case "next-usage":
      Label3: {
        var expr_2969582683 = node_2969569752(self_2969582647);
        var pos_2969582684 = 0;
        var _ = pos_2969582684;
        if ((expr_2969582683.kind == 1)) {
        Temporary4 = node_2969569752(self_2969582647).reff;
        }
        else {
        Temporary4 = node_2969569752(self_2969582647).id;
        }
        
      };
      var id_2969582691 = nimCopy(null, Temporary4, NTI2046820355);
      Label5: {
        var __2969582703 = 0;
        var n_2969582704 = null;
        var colontmp__2969583116 = null;
        var colontmp__2969583117 = null;
        colontmp__2969583116 = node_2969569752(self_2969582647);
        colontmp__2969583117 = HEX3Aanonymous_2969582692;
        var i_2969583118 = 0;
        Label6: {
          var __2969583120 = 0;
          var child_2969583121 = null;
          var n_2969583122 = colontmp__2969583116;
          var idx_2969583123 = -1;
          var i_2969583124 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2969583123 == -1)) {
                __2969583120 = i_2969583124;
                child_2969583121 = n_2969583122;
                if (colontmp__2969583117(child_2969583121)) {
                __2969582703 = i_2969583118;
                n_2969582704 = child_2969583121;
                nodeHEX3D_2969570829(self_2969582647, n_2969582704);
                break Label5;
                i_2969583118 = addInt(i_2969583118, 1);
                }
                
                }
                
                if ((addInt(idx_2969583123, 1) < len_3003121752(n_2969583122))) {
                n_2969583122 = HEX5BHEX5D_3003121748(n_2969583122, addInt(idx_2969583123, 1));
                idx_2969583123 = -1;
                }
                else {
                  var oHEX60gensym55_2969583126 = next_3003121857(n_2969583122);
                  if (!isSome_3003123546(oHEX60gensym55_2969583126)) Temporary11 = false; else {                    var ne_2969583127 = get_3003123566(oHEX60gensym55_2969583126);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2969583122 == null));                  }                if (Temporary10) {
                n_2969583122 = ne_2969583127;
                idx_2969583123 = -1;
                }
                else {
                if (((!((n_2969583122.parent == null)) && !((n_2969583122 == null))) && !((n_2969583122.parent == null)))) {
                idx_2969583123 = index_3003121772(n_2969583122);
                n_2969583122 = n_2969583122.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2969583124 = addInt(i_2969583124, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-usage":
      Label12: {
        var expr_2969582705 = node_2969569752(self_2969582647);
        var pos_2969582706 = 0;
        var _ = pos_2969582706;
        if ((expr_2969582705.kind == 1)) {
        Temporary13 = node_2969569752(self_2969582647).reff;
        }
        else {
        Temporary13 = node_2969569752(self_2969582647).id;
        }
        
      };
      var id_2969582713 = nimCopy(null, Temporary13, NTI2046820355);
      Label14: {
        var n_2969582714 = null;
        var colontmp__2969583130 = null;
        colontmp__2969583130 = node_2969569752(self_2969582647);
        var idx_2969583131 = 0;
        var n_2969583132 = colontmp__2969583130;
        Label15: {
            Label16: while (true) {
            if (!!((n_2969583132 == null))) break Label16;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583132), 1)), subInt(idx_2969583131, 1))) {
              n_2969583132 = HEX5BHEX5D_3003121748(n_2969583132, subInt(idx_2969583131, 1));
              idx_2969583131 = len_3003121752(n_2969583132);
              }
              else {
                var oHEX60gensym74_2969583134 = prev_3003121903(n_2969583132);
                if (!isSome_3003123546(oHEX60gensym74_2969583134)) Temporary17 = false; else {                  var ne_2969583135 = get_3003123566(oHEX60gensym74_2969583134);
                  Temporary17 = true;                }              if (Temporary17) {
              n_2969582714 = n_2969583132;
              if ((!((n_2969582714 == node_2969569752(self_2969582647))) && (HEX3DHEX3D_2046820626(n_2969582714.id, id_2969582713) || HEX3DHEX3D_2046820626(n_2969582714.reff, id_2969582713)))) {
              nodeHEX3D_2969570829(self_2969582647, n_2969582714);
              break Label14;
              }
              
              n_2969583132 = ne_2969583135;
              idx_2969583131 = len_3003121752(n_2969583132);
              }
              else {
                n_2969582714 = n_2969583132;
                if ((!((n_2969582714 == node_2969569752(self_2969582647))) && (HEX3DHEX3D_2046820626(n_2969582714.id, id_2969582713) || HEX3DHEX3D_2046820626(n_2969582714.reff, id_2969582713)))) {
                nodeHEX3D_2969570829(self_2969582647, n_2969582714);
                break Label14;
                }
                
                idx_2969583131 = index_3003121772(n_2969583132);
                n_2969583132 = n_2969583132.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error":
      Label18: {
        var __2969582734 = 0;
        var n_2969582735 = null;
        var colontmp__2969583137 = null;
        var colontmp__2969583138 = null;
        colontmp__2969583137 = node_2969569752(self_2969582647);
        colontmp__2969583138 = HEX3Aanonymous_2969582719;
        var i_2969583139 = 0;
        Label19: {
          var __2969583141 = 0;
          var child_2969583142 = null;
          var n_2969583143 = colontmp__2969583137;
          var idx_2969583144 = -1;
          var i_2969583145 = 0;
          Label20: {
              Label21: while (true) {
              if (!true) break Label21;
                try {
                if ((idx_2969583144 == -1)) {
                __2969583141 = i_2969583145;
                child_2969583142 = n_2969583143;
                if (colontmp__2969583138(child_2969583142)) {
                __2969582734 = i_2969583139;
                n_2969582735 = child_2969583142;
                nodeHEX3D_2969570829(self_2969582647, n_2969582735);
                break Label18;
                i_2969583139 = addInt(i_2969583139, 1);
                }
                
                }
                
                if ((addInt(idx_2969583144, 1) < len_3003121752(n_2969583143))) {
                n_2969583143 = HEX5BHEX5D_3003121748(n_2969583143, addInt(idx_2969583144, 1));
                idx_2969583144 = -1;
                }
                else {
                  var oHEX60gensym55_2969583147 = next_3003121857(n_2969583143);
                  if (!isSome_3003123546(oHEX60gensym55_2969583147)) Temporary24 = false; else {                    var ne_2969583148 = get_3003123566(oHEX60gensym55_2969583147);
                    Temporary24 = true;                  }                  if (!Temporary24) Temporary23 = false; else {                    Temporary23 = !((n_2969583143 == null));                  }                if (Temporary23) {
                n_2969583143 = ne_2969583148;
                idx_2969583144 = -1;
                }
                else {
                if (((!((n_2969583143.parent == null)) && !((n_2969583143 == null))) && !((n_2969583143.parent == null)))) {
                idx_2969583144 = index_3003121772(n_2969583143);
                n_2969583143 = n_2969583143.parent;
                }
                else {
                  break Label20;
                }
                }}
                } finally {
                i_2969583145 = addInt(i_2969583145, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error":
      Label25: {
        var n_2969582736 = null;
        var colontmp__2969583150 = null;
        colontmp__2969583150 = node_2969569752(self_2969582647);
        var idx_2969583151 = 0;
        var n_2969583152 = colontmp__2969583150;
        Label26: {
            Label27: while (true) {
            if (!!((n_2969583152 == null))) break Label27;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583152), 1)), subInt(idx_2969583151, 1))) {
              n_2969583152 = HEX5BHEX5D_3003121748(n_2969583152, subInt(idx_2969583151, 1));
              idx_2969583151 = len_3003121752(n_2969583152);
              }
              else {
                var oHEX60gensym74_2969583154 = prev_3003121903(n_2969583152);
                if (!isSome_3003123546(oHEX60gensym74_2969583154)) Temporary28 = false; else {                  var ne_2969583155 = get_3003123566(oHEX60gensym74_2969583154);
                  Temporary28 = true;                }              if (Temporary28) {
              n_2969582736 = n_2969583152;
              if ((!((n_2969582736 == node_2969569752(self_2969582647))) && (computeType_3019913434(ctx_2969567289, n_2969582736, true).kind == 0))) {
              nodeHEX3D_2969570829(self_2969582647, n_2969582736);
              break Label25;
              }
              
              n_2969583152 = ne_2969583155;
              idx_2969583151 = len_3003121752(n_2969583152);
              }
              else {
                n_2969582736 = n_2969583152;
                if ((!((n_2969582736 == node_2969569752(self_2969582647))) && (computeType_3019913434(ctx_2969567289, n_2969582736, true).kind == 0))) {
                nodeHEX3D_2969570829(self_2969582647, n_2969582736);
                break Label25;
                }
                
                idx_2969583151 = index_3003121772(n_2969583152);
                n_2969583152 = n_2969583152.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error-diagnostic":
      Label29: {
        var __2969582756 = 0;
        var n_2969582757 = null;
        var colontmp__2969583169 = null;
        var colontmp__2969583170 = null;
        colontmp__2969583169 = node_2969569752(self_2969582647);
        colontmp__2969583170 = HEX3Aanonymous_2969582745;
        var i_2969583171 = 0;
        Label30: {
          var __2969583173 = 0;
          var child_2969583174 = null;
          var n_2969583175 = colontmp__2969583169;
          var idx_2969583176 = -1;
          var i_2969583177 = 0;
          Label31: {
              Label32: while (true) {
              if (!true) break Label32;
                try {
                if ((idx_2969583176 == -1)) {
                __2969583173 = i_2969583177;
                child_2969583174 = n_2969583175;
                if (colontmp__2969583170(child_2969583174)) {
                __2969582756 = i_2969583171;
                n_2969582757 = child_2969583174;
                if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, n_2969582757.id)) {
                var found_2969582821 = false;
                Label34: {
                  var diags_2969582908 = [];
                  var colontmp__2969583158 = ({data: [], counter: 0});
                  colontmp__2969583158 = nimCopy(colontmp__2969583158, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, n_2969582757.id).queries, NTI3019898894);
                  var L_2969583163 = len_3221227056(colontmp__2969583158);
                  Label35: {
                    var h_2969583165 = 0;
                    var colontmp__2969583166 = 0;
                    colontmp__2969583166 = (colontmp__2969583158.data).length - 1;
                    var res_2969583167 = 0;
                    Label36: {
                        Label37: while (true) {
                        if (!(res_2969583167 <= colontmp__2969583166)) break Label37;
                          h_2969583165 = res_2969583167;
                          if (isFilled_1308622880(colontmp__2969583158.data[chckIndx(h_2969583165, 0, (colontmp__2969583158.data).length - 1)].Field0)) {
                          diags_2969582908 = colontmp__2969583158.data[chckIndx(h_2969583165, 0, (colontmp__2969583158.data).length - 1)]["Field2"];
                          if ((0 < (diags_2969582908).length)) {
                          found_2969582821 = true;
                          }
                          
                          if (!((len_3221227056(colontmp__2969583158) == L_2969583163))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2969583167 = addInt(res_2969583167, 1);
                        }
                    };
                  };
                };
                if (found_2969582821) {
                nodeHEX3D_2969570829(self_2969582647, n_2969582757);
                }
                
                break Label29;
                }
                
                i_2969583171 = addInt(i_2969583171, 1);
                }
                
                }
                
                if ((addInt(idx_2969583176, 1) < len_3003121752(n_2969583175))) {
                n_2969583175 = HEX5BHEX5D_3003121748(n_2969583175, addInt(idx_2969583176, 1));
                idx_2969583176 = -1;
                }
                else {
                  var oHEX60gensym55_2969583179 = next_3003121857(n_2969583175);
                  if (!isSome_3003123546(oHEX60gensym55_2969583179)) Temporary39 = false; else {                    var ne_2969583180 = get_3003123566(oHEX60gensym55_2969583179);
                    Temporary39 = true;                  }                  if (!Temporary39) Temporary38 = false; else {                    Temporary38 = !((n_2969583175 == null));                  }                if (Temporary38) {
                n_2969583175 = ne_2969583180;
                idx_2969583176 = -1;
                }
                else {
                if (((!((n_2969583175.parent == null)) && !((n_2969583175 == null))) && !((n_2969583175.parent == null)))) {
                idx_2969583176 = index_3003121772(n_2969583175);
                n_2969583175 = n_2969583175.parent;
                }
                else {
                  break Label31;
                }
                }}
                } finally {
                i_2969583177 = addInt(i_2969583177, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error-diagnostic":
      Label40: {
        var n_2969582912 = null;
        var colontmp__2969583191 = null;
        colontmp__2969583191 = node_2969569752(self_2969582647);
        var idx_2969583192 = 0;
        var n_2969583193 = colontmp__2969583191;
        Label41: {
            Label42: while (true) {
            if (!!((n_2969583193 == null))) break Label42;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583193), 1)), subInt(idx_2969583192, 1))) {
              n_2969583193 = HEX5BHEX5D_3003121748(n_2969583193, subInt(idx_2969583192, 1));
              idx_2969583192 = len_3003121752(n_2969583193);
              }
              else {
                var oHEX60gensym74_2969583195 = prev_3003121903(n_2969583193);
                if (!isSome_3003123546(oHEX60gensym74_2969583195)) Temporary43 = false; else {                  var ne_2969583196 = get_3003123566(oHEX60gensym74_2969583195);
                  Temporary43 = true;                }              if (Temporary43) {
              n_2969582912 = n_2969583193;
              Label44: {
                if ((n_2969582912 == node_2969569752(self_2969582647))) {
                break Label44;
                }
                
                if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, n_2969582912.id)) {
                var found_2969582980 = false;
                Label45: {
                  var diags_2969583067 = [];
                  var colontmp__2969583184 = ({data: [], counter: 0});
                  colontmp__2969583184 = nimCopy(colontmp__2969583184, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, n_2969582912.id).queries, NTI3019898894);
                  var L_2969583185 = len_3221227056(colontmp__2969583184);
                  Label46: {
                    var h_2969583187 = 0;
                    var colontmp__2969583188 = 0;
                    colontmp__2969583188 = (colontmp__2969583184.data).length - 1;
                    var res_2969583189 = 0;
                    Label47: {
                        Label48: while (true) {
                        if (!(res_2969583189 <= colontmp__2969583188)) break Label48;
                          h_2969583187 = res_2969583189;
                          if (isFilled_1308622880(colontmp__2969583184.data[chckIndx(h_2969583187, 0, (colontmp__2969583184.data).length - 1)].Field0)) {
                          diags_2969583067 = colontmp__2969583184.data[chckIndx(h_2969583187, 0, (colontmp__2969583184.data).length - 1)]["Field2"];
                          if ((0 < (diags_2969583067).length)) {
                          found_2969582980 = true;
                          }
                          
                          if (!((len_3221227056(colontmp__2969583184) == L_2969583185))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2969583189 = addInt(res_2969583189, 1);
                        }
                    };
                  };
                };
                if (found_2969582980) {
                nodeHEX3D_2969570829(self_2969582647, n_2969582912);
                break Label40;
                }
                
                }
                
              };
              n_2969583193 = ne_2969583196;
              idx_2969583192 = len_3003121752(n_2969583193);
              }
              else {
                n_2969582912 = n_2969583193;
                Label49: {
                  if ((n_2969582912 == node_2969569752(self_2969582647))) {
                  break Label49;
                  }
                  
                  if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, n_2969582912.id)) {
                  var found_2969583197 = false;
                  Label50: {
                    var diags_2969583198 = [];
                    var colontmp__2969583199 = ({data: [], counter: 0});
                    colontmp__2969583199 = nimCopy(colontmp__2969583199, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, n_2969582912.id).queries, NTI3019898894);
                    var L_2969583200 = len_3221227056(colontmp__2969583199);
                    Label51: {
                      var h_2969583201 = 0;
                      var colontmp__2969583202 = 0;
                      colontmp__2969583202 = (colontmp__2969583199.data).length - 1;
                      var res_2969583203 = 0;
                      Label52: {
                          Label53: while (true) {
                          if (!(res_2969583203 <= colontmp__2969583202)) break Label53;
                            h_2969583201 = res_2969583203;
                            if (isFilled_1308622880(colontmp__2969583199.data[chckIndx(h_2969583201, 0, (colontmp__2969583199.data).length - 1)].Field0)) {
                            diags_2969583198 = colontmp__2969583199.data[chckIndx(h_2969583201, 0, (colontmp__2969583199.data).length - 1)]["Field2"];
                            if ((0 < (diags_2969583198).length)) {
                            found_2969583197 = true;
                            }
                            
                            if (!((len_3221227056(colontmp__2969583199) == L_2969583200))) {
                            failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                            }
                            
                            }
                            
                            res_2969583203 = addInt(res_2969583203, 1);
                          }
                      };
                    };
                  };
                  if (found_2969583197) {
                  nodeHEX3D_2969570829(self_2969582647, n_2969582912);
                  break Label40;
                  }
                  
                  }
                  
                };
                idx_2969583192 = index_3003121772(n_2969583193);
                n_2969583193 = n_2969583193.parent;
              }
              }
            }
        };
      };
      break;
    case "symbol":
      openGotoSymbolPopup_2969582231(self_2969582647);
      break;
    default: 
      break;
    }
  };

  
}

function gotoJsWrapper_2969582643(self_2969583099, where_2969583100) {
    goto_2969582646(self_2969583099, where_2969583100);

  
}
editor_ast_prototype.goto = function(where_ /* : string */) { return (gotoJsWrapper_2969582643(this, where_ == undefined ? undefined : cstrToNimstr(where_)));};

function startTimer_2080374869() {
  var result_2080374870 = 0.0;

    result_2080374870 = (Date.now() / 1000);

  return result_2080374870;

}

function color_2634022945(c_2634022946) {
  var result_2634022947 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022947.r = (c_2634022946.r / 255.0);
    result_2634022947.g = (c_2634022946.g / 255.0);
    result_2634022947.b = (c_2634022946.b / 255.0);
    result_2634022947.a = 1.0;

  return result_2634022947;

}

function addOutput_2969583244(self_2969583246, line_2969583247, color_2969583248) {
    if ((1500 <= (self_2969583246.lines).length)) {
    delete_2969567879(self_2969583246, "lines", HEX2EHEX2E_805306418(0, subInt((self_2969583246.lines).length, 1000)));
    }
    
    if ((0 < self_2969583246.scroll)) {
    self_2969583246.scroll = addInt(self_2969583246.scroll, 1);
    }
    
    self_2969583246.lines.push({Field0: nimCopy(null, line_2969583247, NTI33554449), Field1: color_2634022945(color_2969583248)});;

  
}

function rgb_2550136919(r_2550136920, g_2550136921, b_2550136922) {
  var result_2550136923 = ({r: 0, g: 0, b: 0});

    result_2550136923 = nimCopy(result_2550136923, {r: r_2550136920, g: g_2550136921, b: b_2550136922}, NTI2550136836);

  return result_2550136923;

}

function HEX24_33557336(x_33557338) {
  var result_33557339 = [[]];

    addFloat_33557340(result_33557339, 0, x_33557338);

  return result_33557339[0];

}

function nsuformatBiggestFloat(f_855640114, format_855640115, precision_855640116, decimalSep_855640117) {
  var result_855640118 = [];

    var precision_855640119 = precision_855640116;
    if ((precision_855640119 == -1)) {
    precision_855640119 = 6;
    }
    
    var res_855640120 = null;
    switch (format_855640115) {
    case 0:
      res_855640120 = f_855640114.toString();
      break;
    case 1:
      res_855640120 = f_855640114.toFixed(precision_855640119);
      break;
    case 2:
      res_855640120 = f_855640114.toExponential(precision_855640119);
      break;
    }
    result_855640118 = nimCopy(null, cstrToNimstr(res_855640120), NTI33554449);
    if (((1.0 / f_855640114) == -Infinity)) {
    result_855640118 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_855640120) || []), NTI33554449);
    }
    
    Label1: {
      var i_855640125 = 0;
      var colontmp__2969583468 = 0;
      colontmp__2969583468 = (result_855640118).length;
      var i_2969583469 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969583469 < colontmp__2969583468)) break Label3;
            i_855640125 = i_2969583469;
            if ((ConstSet231[result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)]] != undefined)) {
            result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)] = decimalSep_855640117;
            }
            
            i_2969583469 = addInt(i_2969583469, 1);
          }
      };
    };

  return result_855640118;

}

function nsuToUpperAsciiChar(c_855638119) {
  var result_855638120 = 0;

    if ((ConstSet233[c_855638119] != undefined)) {
    result_855638120 = (c_855638119 ^ 32);
    }
    else {
      result_855638120 = c_855638119;
    }
    

  return result_855638120;

}

function nsuToUpperAsciiStr(s_855638126) {
  var result_855638127 = [];

    result_855638127 = nimCopy(null, mnewString(chckRange((s_855638126).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_855638133 = 0;
      var colontmp__2969583472 = 0;
      colontmp__2969583472 = subInt((s_855638126).length, 1);
      var res_2969583473 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969583473 <= colontmp__2969583472)) break Label3;
            iHEX60gensym11_855638133 = res_2969583473;
            result_855638127[chckIndx(iHEX60gensym11_855638133, 0, (result_855638127).length - 1)] = nsuToUpperAsciiChar(s_855638126[chckIndx(iHEX60gensym11_855638133, 0, (s_855638126).length - 1)]);
            res_2969583473 = addInt(res_2969583473, 1);
          }
      };
    };

  return result_855638127;

}

function formatValue_2785018168(result_2785018170, result_2785018170_Idx, value_2785018171, specifier_2785018172) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2785018172).length == 0)) {
    result_2785018170[result_2785018170_Idx].push.apply(result_2785018170[result_2785018170_Idx], HEX24_33557336(value_2785018171));;
    break BeforeRet;
    }
    
    var spec_2785018176 = parseStandardFormatSpecifier_721420346(specifier_2785018172, 0, false);
    var fmode_2785018177 = 0;
    switch (spec_2785018176.typ) {
    case 101:
    case 69:
      fmode_2785018177 = 2;
      break;
    case 102:
    case 70:
      fmode_2785018177 = 1;
      break;
    case 103:
    case 71:
      fmode_2785018177 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2785018176.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2785018179 = [nsuformatBiggestFloat(value_2785018171, fmode_2785018177, chckRange(spec_2785018176.precision, -1, 32), 46)];
    var sign_2785018180 = false;
    if ((0.0 <= value_2785018171)) {
    if (!((spec_2785018176.sign == 45))) {
    sign_2785018180 = true;
    if ((value_2785018171 == 0.0)) {
    if (((1.0 / value_2785018171) == Infinity)) {
    insert_33557745(f_2785018179, 0, nimCharToStr(spec_2785018176.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2785018179, 0, nimCharToStr(spec_2785018176.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2785018180 = true;
    }
    
    if (spec_2785018176.padWithZero) {
    var signStr_2785018181 = [];
    if (sign_2785018180) {
    signStr_2785018181 = nimCopy(null, nimCharToStr(f_2785018179[0][chckIndx(0, 0, (f_2785018179[0]).length - 1)]), NTI33554449);
    f_2785018179[0] = nimCopy(null, HEX5BHEX5D_855639319(f_2785018179[0], HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    var toFill_2785018203 = subInt(subInt(spec_2785018176.minimumWidth, (f_2785018179[0]).length), (sign_2785018180 ? 1 : 0));
    if ((0 < toFill_2785018203)) {
    f_2785018179[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2785018203, 0, 2147483647)) || []).concat(f_2785018179[0] || []), NTI33554449);
    }
    
    if (sign_2785018180) {
    f_2785018179[0] = nimCopy(null, (signStr_2785018181 || []).concat(f_2785018179[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2785018176.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2785018176.align;
    }
    
    var align_2785018204 = Temporary1;
    var res_2785018205 = alignString_721420308(f_2785018179[0], spec_2785018176.minimumWidth, align_2785018204, spec_2785018176.fill);
    if ((ConstSet232[spec_2785018176.typ] != undefined)) {
    result_2785018170[result_2785018170_Idx].push.apply(result_2785018170[result_2785018170_Idx], nsuToUpperAsciiStr(res_2785018205));;
    }
    else {
    result_2785018170[result_2785018170_Idx].push.apply(result_2785018170[result_2785018170_Idx], res_2785018205);;
    }
    
  };

  
}

function ms_2080374842(seconds_2080374843) {
  var result_2080374844 = 0.0;

    result_2080374844 = (seconds_2080374843 * 1000.0);

  return result_2080374844;

}

function elapsed_2080374866(timer_2080374867) {
  var result_2080374868 = 0.0;

    result_2080374868 = ((Date.now() / 1000) - timer_2080374867);

  return result_2080374868;

}

function runSelectedFunction_2969583209(self_2969583210) {
          var Temporary3;
            var Temporary4;
          var Temporary5;

  BeforeRet: {
    if (isEditing_2969575154(self_2969583210)) {
    break BeforeRet;
    }
    
    var node_2969583211 = node_2969569752(self_2969583210);
    Label1: {
        Label2: while (true) {
        if (!!((node_2969583211.parent == null))) break Label2;
          if (((node_2969583211.parent == self_2969583210.document.rootNode) && (node_2969583211.kind == 8))) {
          var timer_2969583224 = startTimer_2080374869();
          var fmtRes_2969583229 = [mnewString(0)];
          fmtRes_2969583229[0].push.apply(fmtRes_2969583229[0], [91,97,115,116,101,100,105,116,111,114,93,32,69,120,101,99,117,116,105,110,103,32,99,97,108,108,32]);;
          formatValue_3087008590(fmtRes_2969583229, 0, node_2969583211, []);
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583229[0], NTI33554449)]);
          updateNode_3019955286(ctx_2969567289, node_2969583211);
          var result_2969583235 = computeValue_3019916562(ctx_2969567289, node_2969583211, true);
          if (!((result_2969583235.kind == 1))) {
          if ((result_2969583235.kind == 0)) {
          Temporary3 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary3 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2969583244(executionOutput_2969567288[0], HEX24_3087008498(result_2969583235), Temporary3);
          }
          
          var fmtRes_2969583276 = [mnewString(0)];
          fmtRes_2969583276[0].push.apply(fmtRes_2969583276[0], [91,97,115,116,101,100,105,116,111,114,93,32]);;
          formatValue_3087008590(fmtRes_2969583276, 0, node_2969583211, []);
          fmtRes_2969583276[0].push.apply(fmtRes_2969583276[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3154118047(fmtRes_2969583276, 0, result_2969583235, []);
          fmtRes_2969583276[0].push.apply(fmtRes_2969583276[0], [32,40,84,111,111,107,32]);;
          formatValue_2785018168(fmtRes_2969583276, 0, ms_2080374842(elapsed_2080374866(timer_2969583224)), []);
          fmtRes_2969583276[0].push.apply(fmtRes_2969583276[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583276[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if ((((node_2969583211.kind == 4) && (0 < len_3003121752(node_2969583211))) && (HEX5BHEX5D_3003121748(node_2969583211, 0).kind == 11))) {
          var functionType_2969583300 = computeType_3019913434(ctx_2969567289, node_2969583211, true);
          if ((functionType_2969583300.kind == 0)) {
          var fmtRes_2969583309 = [mnewString(0)];
          fmtRes_2969583309[0].push.apply(fmtRes_2969583309[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,58,32]);;
          formatValue_3087008590(fmtRes_2969583309, 0, node_2969583211, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583309[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if (!((functionType_2969583300.kind == 4))) {
          var fmtRes_2969583323 = [mnewString(0)];
          fmtRes_2969583323[0].push.apply(fmtRes_2969583323[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,104,97,115,32,119,114,111,110,103,32,116,121,112,101,58,32]);;
          formatValue_3087008590(fmtRes_2969583323, 0, node_2969583211, []);
          fmtRes_2969583323[0].push.apply(fmtRes_2969583323[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3019948837(fmtRes_2969583323, 0, functionType_2969583300, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583323[0], NTI33554449)]);
          break BeforeRet;
          }
          
            var Temporary4 = functionType_2969583300;
            if (ConstSet234[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
          if ((0 < (Temporary4.paramTypes).length)) {
          var fmtRes_2969583341 = [mnewString(0)];
          fmtRes_2969583341[0].push.apply(fmtRes_2969583341[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,32,100,105,114,101,99,116,108,121,32]);;
          formatValue_3087008590(fmtRes_2969583341, 0, node_2969583211, []);
          fmtRes_2969583341[0].push.apply(fmtRes_2969583341[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3019948837(fmtRes_2969583341, 0, functionType_2969583300, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583341[0], NTI33554449)]);
          break BeforeRet;
          }
          
          var fmtRes_2969583356 = [mnewString(0)];
          fmtRes_2969583356[0].push.apply(fmtRes_2969583356[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,108,108,105,110,103,32,102,117,110,99,116,105,111,110,32]);;
          formatValue_3087008590(fmtRes_2969583356, 0, node_2969583211, []);
          fmtRes_2969583356[0].push.apply(fmtRes_2969583356[0], [32,40]);;
          formatValue_3019948837(fmtRes_2969583356, 0, functionType_2969583300, []);
          fmtRes_2969583356[0].push.apply(fmtRes_2969583356[0], [41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583356[0], NTI33554449)]);
          var timer_2969583367 = startTimer_2080374869();
          var maxLoopIterations_2969583377 = getOption_2818589337(self_2969583210.editor, [97,115,116,46,109,97,120,45,108,111,111,112,45,105,116,101,114,97,116,105,111,110,115], 1000);
          var fec_2969583385 = newFunctionExecutionContext_3019907902(ctx_2969567289, {node: HEX5BHEX5D_3003121748(node_2969583211, 0), arguments: [], maxLoopIterations: some_1191184367(maxLoopIterations_2969583377), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var result_2969583386 = computeFunctionExecution_3019933908(ctx_2969567289, fec_2969583385);
          if (!((result_2969583386.kind == 1))) {
          if ((result_2969583386.kind == 0)) {
          Temporary5 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary5 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2969583244(executionOutput_2969567288[0], HEX24_3087008498(result_2969583386), Temporary5);
          }
          
          var fmtRes_2969583404 = [mnewString(0)];
          fmtRes_2969583404[0].push.apply(fmtRes_2969583404[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32]);;
          formatValue_3087008590(fmtRes_2969583404, 0, node_2969583211, []);
          fmtRes_2969583404[0].push.apply(fmtRes_2969583404[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3154118047(fmtRes_2969583404, 0, result_2969583386, []);
          fmtRes_2969583404[0].push.apply(fmtRes_2969583404[0], [32,40,84,111,111,107,32]);;
          formatValue_2785018168(fmtRes_2969583404, 0, ms_2080374842(elapsed_2080374866(timer_2969583367)), []);
          fmtRes_2969583404[0].push.apply(fmtRes_2969583404[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583404[0], NTI33554449)]);
          break BeforeRet;
          }
          
          node_2969583211 = node_2969583211.parent;
        }
    };
    var fmtRes_2969583424 = [mnewString(0)];
    fmtRes_2969583424[0].push.apply(fmtRes_2969583424[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,32,102,117,110,99,116,105,111,110,32,111,114,32,99,97,108,108,32,102,111,117,110,100,32,116,111,32,101,120,101,99,117,116,101,32,102,111,114,32]);;
    formatValue_3087008590(fmtRes_2969583424, 0, node_2969569752(self_2969583210), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583424[0], NTI33554449)]);
  };

  
}

function runSelectedFunctionJsWrapper_2969583206(self_2969583457) {
    runSelectedFunction_2969583209(self_2969583457);

  
}
editor_ast_prototype.runSelectedFunction = function() { return (runSelectedFunctionJsWrapper_2969583206(this));};

function toggleOption_2969583480(self_2969583481, name_2969583482) {
    switch (toJSStr(name_2969583482)) {
    case "logging":
      ctx_2969567289.enableLogging = !(ctx_2969567289.enableLogging);
      break;
    default: 
      break;
    }

  
}

function toggleOptionJsWrapper_2969583477(self_2969583511, name_2969583512) {
    toggleOption_2969583480(self_2969583511, name_2969583512);

  
}
editor_ast_prototype.toggleOption = function(name_ /* : string */) { return (toggleOptionJsWrapper_2969583477(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runLastCommand_2969583535(self_2969583536, which_2969583537) {
    switch (toJSStr(which_2969583537)) {
    case "":
      var _ = handleAction_2969583526(self_2969583536, self_2969583536.lastCommand["Field0"], self_2969583536.lastCommand["Field1"]);
      break;
    case "move":
      var _ = handleAction_2969583526(self_2969583536, self_2969583536.lastMoveCommand["Field0"], self_2969583536.lastMoveCommand["Field1"]);
      break;
    case "edit":
      var _ = handleAction_2969583526(self_2969583536, self_2969583536.lastEditCommand["Field0"], self_2969583536.lastEditCommand["Field1"]);
      break;
    case "other":
      var _ = handleAction_2969583526(self_2969583536, self_2969583536.lastOtherCommand["Field0"], self_2969583536.lastOtherCommand["Field1"]);
      break;
    default: 
      break;
    }

  
}

function runLastCommandJsWrapper_2969583532(self_2969583566, which_2969583567) {
    runLastCommand_2969583535(self_2969583566, which_2969583567);

  
}
editor_ast_prototype.runLastCommand = function(which_ /* : string */) { return (runLastCommandJsWrapper_2969583532(this, which_ == undefined ? undefined : cstrToNimstr(which_)));};

function HEX5BHEX5D_3087007967(node_3087007968, index_3087007969) {
  var result_3087007970 = null;

  BeforeRet: {
    result_3087007970 = node_3087007968.children[chckIndx(index_3087007969, 0, (node_3087007968.children).length - 1)];
    break BeforeRet;
  };

  return result_3087007970;

}

function none_3087008000() {
  var result_3087008006 = ({val: null});

  return result_3087008006;

}

function none_3087007997() {
  var result_3087007999 = ({val: null});

    result_3087007999 = nimCopy(result_3087007999, none_3087008000(), NTI3087007897);

  return result_3087007999;

}

function index_3087007914(node_3087007915) {
  var result_3087007916 = 0;

  BeforeRet: {
    if ((node_3087007915.parent == null)) {
    result_3087007916 = -1;
    break BeforeRet;
    }
    
    result_3087007916 = 0;
    Label1: {
      var i_3087007943 = null;
      var i_2969583902 = 0;
      var L_2969583903 = (node_3087007915.parent.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969583902 < L_2969583903)) break Label3;
            i_3087007943 = node_3087007915.parent.children[chckIndx(i_2969583902, 0, (node_3087007915.parent.children).length - 1)];
            if (HEX3DHEX3D_2046820626(i_3087007943.id, node_3087007915.id)) {
            break BeforeRet;
            }
            
            result_3087007916 = addInt(result_3087007916, 1);
            i_2969583902 = addInt(i_2969583902, 1);
            if (!(((node_3087007915.parent.children).length == L_2969583903))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3087007916;

}

function some_3087008019(val_3087008021) {
  var result_3087008022 = ({val: null});

    if (!(!((val_3087008021 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3087008022.val = val_3087008021;

  return result_3087008022;

}

function next_3087007986(node_3087007987) {
  var result_3087007992 = ({val: null});

  BeforeRet: {
    if ((node_3087007987.parent == null)) {
    result_3087007992 = nimCopy(result_3087007992, none_3087007997(), NTI3087007897);
    break BeforeRet;
    }
    
    var i_3087008016 = index_3087007914(node_3087007987);
    if ((subInt(len_3087007980(node_3087007987.parent), 1) <= i_3087008016)) {
    result_3087007992 = nimCopy(result_3087007992, none_3087007997(), NTI3087007897);
    break BeforeRet;
    }
    
    result_3087007992 = nimCopy(result_3087007992, some_3087008019(HEX5BHEX5D_3087007967(node_3087007987.parent, addInt(i_3087008016, 1))), NTI3087007897);
    break BeforeRet;
  };

  return result_3087007992;

}

function isSome_3087008068(self_3087008070) {
  var result_3087008071 = false;

    result_3087008071 = !((self_3087008070.val == null));

  return result_3087008071;

}

function isNone_3087008096(self_3087008098) {
  var result_3087008099 = false;

    result_3087008099 = (self_3087008098.val == null);

  return result_3087008099;

}

function get_3087008088(self_3087008090) {
  var result_3087008091 = null;

    if (isNone_3087008096(self_3087008090)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087008091 = self_3087008090["val"];

  return result_3087008091;

}

function newSeq_2969583663(len_2969583665) {
  var result_2969583666 = [];

    result_2969583666 = new Array(len_2969583665); for (var i = 0 ; i < len_2969583665 ; ++i) { result_2969583666[i] = {Field0: 0.0, Field1: null}; }
  return result_2969583666;

}

function mergeAlt_2969583692(a_2969583694, b_2969583695, lo_2969583696, m_2969583697, hi_2969583698, cmp_2969583701, order_2969583702) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2969583701(a_2969583694[chckIndx(m_2969583697, 0, (a_2969583694).length - 1)], a_2969583694[chckIndx(addInt(m_2969583697, 1), 0, (a_2969583694).length - 1)]), order_2969583702) <= 0)) {
    break BeforeRet;
    }
    
    var j_2969583703 = lo_2969583696;
    if (!((j_2969583703 <= m_2969583697))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2969583709 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2969583703 <= m_2969583697)) break Label2;
          b_2969583695[chckIndx(bb_2969583709, 0, (b_2969583695).length - 1)] = nimCopy(b_2969583695[chckIndx(bb_2969583709, 0, (b_2969583695).length - 1)], a_2969583694[chckIndx(j_2969583703, 0, (a_2969583694).length - 1)], NTI2969577698);
          bb_2969583709 = addInt(bb_2969583709, 1);
          j_2969583703 = addInt(j_2969583703, 1);
        }
    };
    var i_2969583720 = 0;
    var k_2969583721 = lo_2969583696;
    Label3: {
        Label4: while (true) {
        if (!((k_2969583721 < j_2969583703) && (j_2969583703 <= hi_2969583698))) break Label4;
          if ((HEX2A_1023410184(cmp_2969583701(b_2969583695[chckIndx(i_2969583720, 0, (b_2969583695).length - 1)], a_2969583694[chckIndx(j_2969583703, 0, (a_2969583694).length - 1)]), order_2969583702) <= 0)) {
          a_2969583694[chckIndx(k_2969583721, 0, (a_2969583694).length - 1)] = nimCopy(a_2969583694[chckIndx(k_2969583721, 0, (a_2969583694).length - 1)], b_2969583695[chckIndx(i_2969583720, 0, (b_2969583695).length - 1)], NTI2969577698);
          i_2969583720 = addInt(i_2969583720, 1);
          }
          else {
            a_2969583694[chckIndx(k_2969583721, 0, (a_2969583694).length - 1)] = nimCopy(a_2969583694[chckIndx(k_2969583721, 0, (a_2969583694).length - 1)], a_2969583694[chckIndx(j_2969583703, 0, (a_2969583694).length - 1)], NTI2969577698);
            j_2969583703 = addInt(j_2969583703, 1);
          }
          
          k_2969583721 = addInt(k_2969583721, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2969583721 < j_2969583703)) break Label6;
          a_2969583694[chckIndx(k_2969583721, 0, (a_2969583694).length - 1)] = nimCopy(a_2969583694[chckIndx(k_2969583721, 0, (a_2969583694).length - 1)], b_2969583695[chckIndx(i_2969583720, 0, (b_2969583695).length - 1)], NTI2969577698);
          k_2969583721 = addInt(k_2969583721, 1);
          i_2969583720 = addInt(i_2969583720, 1);
        }
    };
  };

  
}

function sort_2969583651(a_2969583653, cmp_2969583656, order_2969583657) {
    var n_2969583662 = (a_2969583653).length;
    var b_2969583689 = newSeq_2969583663(chckRange(divInt(n_2969583662, 2), 0, 2147483647));
    var s_2969583690 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2969583690 < n_2969583662)) break Label2;
          var m_2969583691 = subInt(subInt(n_2969583662, 1), s_2969583690);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2969583691)) break Label4;
                mergeAlt_2969583692(a_2969583653, b_2969583689, nimMax(addInt(subInt(m_2969583691, s_2969583690), 1), 0), m_2969583691, addInt(m_2969583691, s_2969583690), cmp_2969583656, order_2969583657);
                m_2969583691 = subInt(m_2969583691, mulInt(s_2969583690, 2));
              }
          };
          s_2969583690 = mulInt(s_2969583690, 2);
        }
    };

  
}

function cmp_2969583631(x_2969583633, y_2969583634) {
  var result_2969583635 = 0;

  BeforeRet: {
    if ((x_2969583633 == y_2969583634)) {
    result_2969583635 = 0;
    break BeforeRet;
    }
    
    if ((x_2969583633 < y_2969583634)) {
    result_2969583635 = -1;
    break BeforeRet;
    }
    
    result_2969583635 = 1;
    break BeforeRet;
  };

  return result_2969583635;

}

function selectCenterNode_2969583586(self_2969583587) {
                      var Temporary8;
                      var Temporary9;
    
function HEX3Aanonymous_2969583619(a_2969583638, b_2969583639) {
      var result_2969583644 = 0;

        result_2969583644 = cmp_2969583631(a_2969583638.Field0, b_2969583639.Field0);

      return result_2969583644;

    }

    var nodes_2969583594 = [];
    Label1: {
      var layout_2969583598 = null;
      var offset_2969583599 = ({x: 0.0, y: 0.0});
      var i_2969583893 = 0;
      var L_2969583894 = (self_2969583587.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969583893 < L_2969583894)) break Label3;
            layout_2969583598 = self_2969583587.lastLayouts[chckIndx(i_2969583893, 0, (self_2969583587.lastLayouts).length - 1)]["Field0"];
            offset_2969583599 = self_2969583587.lastLayouts[chckIndx(i_2969583893, 0, (self_2969583587.lastLayouts).length - 1)]["Field1"];
            Label4: {
              var i_2969583600 = 0;
              var node_2969583601 = null;
              var n_2969583884 = layout_2969583598.root;
              var idx_2969583885 = -1;
              var i_2969583886 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_2969583885 == -1)) {
                    var colontmp__2969583889 = nimCopy(null, {Field0: i_2969583886, Field1: n_2969583884}, NTI3087007968);
                    i_2969583600 = colontmp__2969583889["Field0"];
                    node_2969583601 = colontmp__2969583889["Field1"];
                    if ((!((node_2969583601.node == null)) && (0 < len_3087007980(node_2969583601)))) {
                    var bounds_2969583605 = absoluteBounds_3087009545(node_2969583601);
                    if (intersects_2130706609(rect_2147483666(0.0, 0.0, self_2969583587.lastBounds.w, self_2969583587.lastBounds.h), HEX2B_2130706587(bounds_2969583605, vec2_2164261725(0.0, offset_2969583599.y)))) {
                    nodes_2969583594.push({Field0: (bounds_2969583605.y + offset_2969583599.y), Field1: node_2969583601});;
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_2969583885, 1) < len_3087007980(n_2969583884))) {
                    n_2969583884 = HEX5BHEX5D_3087007967(n_2969583884, addInt(idx_2969583885, 1));
                    idx_2969583885 = -1;
                    }
                    else {
                      var oHEX60gensym5_2969583890 = next_3087007986(n_2969583884);
                      if (!isSome_3087008068(oHEX60gensym5_2969583890)) Temporary9 = false; else {                        var ne_2969583891 = get_3087008088(oHEX60gensym5_2969583890);
                        Temporary9 = true;                      }                      if (!Temporary9) Temporary8 = false; else {                        Temporary8 = !((n_2969583884 == null));                      }                    if (Temporary8) {
                    n_2969583884 = ne_2969583891;
                    idx_2969583885 = -1;
                    }
                    else {
                    if (((!((n_2969583884.parent == null)) && !((n_2969583884 == null))) && !((n_2969583884.parent == null)))) {
                    idx_2969583885 = index_3087007914(n_2969583884);
                    n_2969583884 = n_2969583884.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_2969583886 = addInt(i_2969583886, 1);
                    }
                  }
              };
            };
            i_2969583893 = addInt(i_2969583893, 1);
            if (!(((self_2969583587.lastLayouts).length == L_2969583894))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sort_2969583651(nodes_2969583594, HEX3Aanonymous_2969583619, 1);
    if ((0 < (nodes_2969583594).length)) {
    var firstY_2969583765 = nodes_2969583594[chckIndx(0, 0, (nodes_2969583594).length - 1)].Field0;
    var lastY_2969583769 = nodes_2969583594[chckIndx((nodes_2969583594).length - 1, 0, (nodes_2969583594).length - 1)].Field0;
    var middleY_2969583770 = ((firstY_2969583765 + lastY_2969583769) * 0.5);
    Label10: {
      var i_2969583803 = 0;
      var y_2969583804 = 0.0;
      var node_2969583805 = null;
      var i_2969583898 = 0;
      var L_2969583899 = (nodes_2969583594).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2969583898 < L_2969583899)) break Label12;
            i_2969583803 = i_2969583898;
            y_2969583804 = nodes_2969583594[chckIndx(i_2969583898, 0, (nodes_2969583594).length - 1)]["Field0"];
            node_2969583805 = nodes_2969583594[chckIndx(i_2969583898, 0, (nodes_2969583594).length - 1)]["Field1"];
            if (((i_2969583803 == (nodes_2969583594).length - 1) || (middleY_2969583770 < nodes_2969583594[chckIndx(addInt(i_2969583803, 1), 0, (nodes_2969583594).length - 1)].Field0))) {
            nodeHEX3D_2969570829(self_2969583587, node_2969583805.node);
            break Label10;
            }
            
            i_2969583898 = addInt(i_2969583898, 1);
            if (!(((nodes_2969583594).length == L_2969583899))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function selectCenterNodeJsWrapper_2969583583(self_2969583872) {
    selectCenterNode_2969583586(self_2969583872);

  
}
editor_ast_prototype.selectCenterNode = function() { return (selectCenterNodeJsWrapper_2969583583(this));};

function scroll_2969583915(self_2969583916, amount_2969583917) {
    HEX2BHEX3D_855640304(self_2969583916, "scrollOffset", amount_2969583917);
    markDirty_2415919143(self_2969583916);

  
}

function scrollJsWrapper_2969583912(self_2969583950, amount_2969583951) {
    scroll_2969583915(self_2969583950, amount_2969583951);

  
}
editor_ast_prototype.scroll = function(amount_ /* : float32 */) { return (scrollJsWrapper_2969583912(this, amount_));};

function scrollOutput_2969583970(self_2969583971, arg_2969583972) {
    switch (toJSStr(arg_2969583972)) {
    case "home":
      executionOutput_2969567288[0].scroll = (executionOutput_2969567288[0].lines).length;
      break;
    case "end":
      executionOutput_2969567288[0].scroll = 0;
      break;
    default: 
      executionOutput_2969567288[0].scroll = clamp_1660945119(addInt(executionOutput_2969567288[0].scroll, nsuParseInt(arg_2969583972)), 0, (executionOutput_2969567288[0].lines).length);
      break;
    }

  
}

function scrollOutputJsWrapper_2969583967(self_2969584012, arg_2969584013) {
    scrollOutput_2969583970(self_2969584012, arg_2969584013);

  
}
editor_ast_prototype.scrollOutput = function(arg_ /* : string */) { return (scrollOutputJsWrapper_2969583967(this, arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function pairs_3019905231(t_3019905234) {
  var result_3019905235 = [];

    for (var [k, v] in t_3019905234.entries()) {result_3019905235.push({Field0: k, Field1: v});}

  return result_3019905235;

}

function pairs_3019905260(t_3019905263) {
  var result_3019905264 = [];

    for (var [k, v] in t_3019905263.entries()) {result_3019905264.push({Field0: k, Field1: v});}

  return result_3019905264;

}

function pairs_3019905289(t_3019905292) {
  var result_3019905293 = [];

    for (var [k, v] in t_3019905292.entries()) {result_3019905293.push({Field0: k, Field1: v});}

  return result_3019905293;

}

function pairs_3019905318(t_3019905321) {
  var result_3019905322 = [];

    for (var [k, v] in t_3019905321.entries()) {result_3019905322.push({Field0: k, Field1: v});}

  return result_3019905322;

}

function pairs_3019905347(t_3019905350) {
  var result_3019905351 = [];

    for (var [k, v] in t_3019905350.entries()) {result_3019905351.push({Field0: k, Field1: v});}

  return result_3019905351;

}

function pairs_3019905376(t_3019905379) {
  var result_3019905380 = [];

    for (var [k, v] in t_3019905379.entries()) {result_3019905380.push({Field0: k, Field1: v});}

  return result_3019905380;

}

function pairs_3019905405(t_3019905408) {
  var result_3019905409 = [];

    for (var [k, v] in t_3019905408.entries()) {result_3019905409.push({Field0: k, Field1: v});}

  return result_3019905409;

}

function pairs_3019905512(t_3019905515) {
  var result_3019905516 = [];

    for (var [k, v] in t_3019905515.entries()) {result_3019905516.push({Field0: k, Field1: v});}

  return result_3019905516;

}

function pairs_3019905701(t_3019905704) {
  var result_3019905705 = [];

    for (var [k, v] in t_3019905704.entries()) {result_3019905705.push({Field0: k, Field1: v});}

  return result_3019905705;

}

function pairs_3019905730(t_3019905733) {
  var result_3019905734 = [];

    for (var [k, v] in t_3019905733.entries()) {result_3019905734.push({Field0: k, Field1: v});}

  return result_3019905734;

}

function pairs_3019905759(t_3019905762) {
  var result_3019905763 = [];

    for (var [k, v] in t_3019905762.entries()) {result_3019905763.push({Field0: k, Field1: v});}

  return result_3019905763;

}

function pairs_3019905788(t_3019905791) {
  var result_3019905792 = [];

    for (var [k, v] in t_3019905791.entries()) {result_3019905792.push({Field0: k, Field1: v});}

  return result_3019905792;

}

function pairs_3019905817(t_3019905820) {
  var result_3019905821 = [];

    for (var [k, v] in t_3019905820.entries()) {result_3019905821.push({Field0: k, Field1: v});}

  return result_3019905821;

}

function nsuIndent(s_855639240, count_855639241, padding_855639242) {
            var Temporary6;

  var result_855639243 = [];

    result_855639243 = nimCopy(null, [], NTI33554449);
    var i_855639244 = 0;
    Label1: {
      var line_855639245 = [];
      var first_2969584153 = 0;
      var last_2969584154 = 0;
      var eolpos_2969584155 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2969584154 < (s_855639240).length) && !((ConstSet235[s_855639240[chckIndx(last_2969584154, 0, (s_855639240).length - 1)]] != undefined)))) break Label5;
                  last_2969584154 = addInt(last_2969584154, 1);
                }
            };
            eolpos_2969584155 = last_2969584154;
            if ((last_2969584154 < (s_855639240).length)) {
            if ((s_855639240[chckIndx(last_2969584154, 0, (s_855639240).length - 1)] == 10)) {
            last_2969584154 = addInt(last_2969584154, 1);
            }
            else {
            if ((s_855639240[chckIndx(last_2969584154, 0, (s_855639240).length - 1)] == 13)) {
            last_2969584154 = addInt(last_2969584154, 1);
            if (((last_2969584154 < (s_855639240).length) && (s_855639240[chckIndx(last_2969584154, 0, (s_855639240).length - 1)] == 10))) {
            last_2969584154 = addInt(last_2969584154, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_2969584154, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2969584155, 1);
            }
            
            line_855639245 = substr_33557821(s_855639240, first_2969584153, Temporary6);
            if (!((i_855639244 == 0))) {
            result_855639243.push.apply(result_855639243, [10]);;
            }
            
            Label7: {
              var j_855639250 = 0;
              var colontmp__2969584150 = 0;
              colontmp__2969584150 = count_855639241;
              var res_2969584151 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(res_2969584151 <= colontmp__2969584150)) break Label9;
                    j_855639250 = res_2969584151;
                    result_855639243.push.apply(result_855639243, padding_855639242);;
                    res_2969584151 = addInt(res_2969584151, 1);
                  }
              };
            };
            result_855639243.push.apply(result_855639243, line_855639245);;
            i_855639244 = addInt(i_855639244, 1);
            if ((eolpos_2969584155 == last_2969584154)) {
            break Label2;
            }
            
            first_2969584153 = last_2969584154;
          }
      };
    };

  return result_855639243;

}

function HEX24_3036679526(graph_3036679527) {
  var result_3036679528 = [];

    result_3036679528 = nimCopy(null, [68,101,112,101,110,100,101,110,99,121,32,71,114,97,112,104,10], NTI33554449);
    result_3036679528.push.apply(result_3036679528, (nsuIndent(([114,101,118,105,115,105,111,110,58,32] || []).concat(HEX24_369098760(graph_3036679527.revision) || []), 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([99,111,108,111,114,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([118,101,114,105,102,105,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([99,104,97,110,103,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([102,105,110,103,101,114,112,114,105,110,116,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([100,101,112,101,110,100,101,110,99,105,101,115,58], 1, [124,32]) || []).concat([10] || []));;

  return result_3036679528;

}

function toString_3019905229(HEX3Atmp_3019899097) {
  var result_3019905230 = [];

  BeforeRet: {
    var HEX3Atmp_3019899098 = [67,111,110,116,101,120,116,10];
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,65,115,116,78,111,100,101,10] || []));;
    Label1: {
      var keyHEX60gensym53_3019905258 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym53_3019905259 = null;
      var colontmp__2969584071 = [];
      colontmp__2969584071 = pairs_3019905231(HEX3Atmp_3019899097.itemsAstNode);
      var i_2969584073 = 0;
      var L_2969584074 = (colontmp__2969584071).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969584073 < L_2969584074)) break Label3;
            keyHEX60gensym53_3019905258 = colontmp__2969584071[chckIndx(i_2969584073, 0, (colontmp__2969584071).length - 1)]["Field0"];
            valueHEX60gensym53_3019905259 = colontmp__2969584071[chckIndx(i_2969584073, 0, (colontmp__2969584071).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym53_3019905258) || [],[32,45,62,32] || [],HEX24_3003123671(valueHEX60gensym53_3019905259) || [],[10] || []));;
            i_2969584073 = addInt(i_2969584073, 1);
            if (!(((colontmp__2969584071).length == L_2969584074))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,10] || []));;
    Label4: {
      var keyHEX60gensym54_3019905287 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym54_3019905288 = null;
      var colontmp__2969584077 = [];
      colontmp__2969584077 = pairs_3019905260(HEX3Atmp_3019899097.itemsNodeLayoutInput);
      var i_2969584079 = 0;
      var L_2969584080 = (colontmp__2969584077).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969584079 < L_2969584080)) break Label6;
            keyHEX60gensym54_3019905287 = colontmp__2969584077[chckIndx(i_2969584079, 0, (colontmp__2969584077).length - 1)]["Field0"];
            valueHEX60gensym54_3019905288 = colontmp__2969584077[chckIndx(i_2969584079, 0, (colontmp__2969584077).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym54_3019905287) || [],[32,45,62,32] || [],HEX24_3087009982(valueHEX60gensym54_3019905288) || [],[10] || []));;
            i_2969584079 = addInt(i_2969584079, 1);
            if (!(((colontmp__2969584077).length == L_2969584080))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,83,121,109,98,111,108,10] || []));;
    Label7: {
      var keyHEX60gensym55_3019905316 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym55_3019905317 = null;
      var colontmp__2969584083 = [];
      colontmp__2969584083 = pairs_3019905289(HEX3Atmp_3019899097.itemsSymbol);
      var i_2969584085 = 0;
      var L_2969584086 = (colontmp__2969584083).length;
      Label8: {
          Label9: while (true) {
          if (!(i_2969584085 < L_2969584086)) break Label9;
            keyHEX60gensym55_3019905316 = colontmp__2969584083[chckIndx(i_2969584085, 0, (colontmp__2969584083).length - 1)]["Field0"];
            valueHEX60gensym55_3019905317 = colontmp__2969584083[chckIndx(i_2969584085, 0, (colontmp__2969584083).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym55_3019905316) || [],[32,45,62,32] || [],HEX24_3087008915(valueHEX60gensym55_3019905317) || [],[10] || []));;
            i_2969584085 = addInt(i_2969584085, 1);
            if (!(((colontmp__2969584083).length == L_2969584086))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,67,111,110,116,101,120,116,10] || []));;
    Label10: {
      var keyHEX60gensym56_3019905345 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym56_3019905346 = null;
      var colontmp__2969584089 = [];
      colontmp__2969584089 = pairs_3019905318(HEX3Atmp_3019899097.itemsFunctionExecutionContext);
      var i_2969584091 = 0;
      var L_2969584092 = (colontmp__2969584089).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2969584091 < L_2969584092)) break Label12;
            keyHEX60gensym56_3019905345 = colontmp__2969584089[chckIndx(i_2969584091, 0, (colontmp__2969584089).length - 1)]["Field0"];
            valueHEX60gensym56_3019905346 = colontmp__2969584089[chckIndx(i_2969584091, 0, (colontmp__2969584089).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym56_3019905345) || [],[32,45,62,32] || [],HEX24_3087008582(valueHEX60gensym56_3019905346) || [],[10] || []));;
            i_2969584091 = addInt(i_2969584091, 1);
            if (!(((colontmp__2969584089).length == L_2969584092))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,84,121,112,101,10] || []));;
    Label13: {
      var keyHEX60gensym57_3019905374 = null;
      var valueHEX60gensym57_3019905375 = null;
      var colontmp__2969584095 = [];
      colontmp__2969584095 = pairs_3019905347(HEX3Atmp_3019899097.queryCacheType);
      var i_2969584097 = 0;
      var L_2969584098 = (colontmp__2969584095).length;
      Label14: {
          Label15: while (true) {
          if (!(i_2969584097 < L_2969584098)) break Label15;
            keyHEX60gensym57_3019905374 = colontmp__2969584095[chckIndx(i_2969584097, 0, (colontmp__2969584095).length - 1)]["Field0"];
            valueHEX60gensym57_3019905375 = colontmp__2969584095[chckIndx(i_2969584097, 0, (colontmp__2969584095).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym57_3019905374) || [],[32,45,62,32] || [],HEX24_3087008191(valueHEX60gensym57_3019905375) || [],[10] || []));;
            i_2969584097 = addInt(i_2969584097, 1);
            if (!(((colontmp__2969584095).length == L_2969584098))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,117,101,10] || []));;
    Label16: {
      var keyHEX60gensym58_3019905403 = null;
      var valueHEX60gensym58_3019905404 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584101 = [];
      colontmp__2969584101 = pairs_3019905376(HEX3Atmp_3019899097.queryCacheValue);
      var i_2969584103 = 0;
      var L_2969584104 = (colontmp__2969584101).length;
      Label17: {
          Label18: while (true) {
          if (!(i_2969584103 < L_2969584104)) break Label18;
            keyHEX60gensym58_3019905403 = colontmp__2969584101[chckIndx(i_2969584103, 0, (colontmp__2969584101).length - 1)]["Field0"];
            valueHEX60gensym58_3019905404 = colontmp__2969584101[chckIndx(i_2969584103, 0, (colontmp__2969584101).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym58_3019905403) || [],[32,45,62,32] || [],HEX24_3087008498(valueHEX60gensym58_3019905404) || [],[10] || []));;
            i_2969584103 = addInt(i_2969584103, 1);
            if (!(((colontmp__2969584101).length == L_2969584104))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,10] || []));;
    Label19: {
      var keyHEX60gensym59_3019905432 = null;
      var valueHEX60gensym59_3019905433 = ({val: null});
      var colontmp__2969584107 = [];
      colontmp__2969584107 = pairs_3019905405(HEX3Atmp_3019899097.queryCacheSymbol);
      var i_2969584109 = 0;
      var L_2969584110 = (colontmp__2969584107).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2969584109 < L_2969584110)) break Label21;
            keyHEX60gensym59_3019905432 = colontmp__2969584107[chckIndx(i_2969584109, 0, (colontmp__2969584107).length - 1)]["Field0"];
            valueHEX60gensym59_3019905433 = colontmp__2969584107[chckIndx(i_2969584109, 0, (colontmp__2969584107).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym59_3019905432) || [],[32,45,62,32] || [],HEX24_3019905491(valueHEX60gensym59_3019905433) || [],[10] || []));;
            i_2969584109 = addInt(i_2969584109, 1);
            if (!(((colontmp__2969584107).length == L_2969584110))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,115,10] || []));;
    Label22: {
      var keyHEX60gensym60_3019905539 = null;
      var valueHEX60gensym60_3019905540 = null;
      var colontmp__2969584113 = [];
      colontmp__2969584113 = pairs_3019905512(HEX3Atmp_3019899097.queryCacheSymbols);
      var i_2969584115 = 0;
      var L_2969584116 = (colontmp__2969584113).length;
      Label23: {
          Label24: while (true) {
          if (!(i_2969584115 < L_2969584116)) break Label24;
            keyHEX60gensym60_3019905539 = colontmp__2969584113[chckIndx(i_2969584115, 0, (colontmp__2969584113).length - 1)]["Field0"];
            valueHEX60gensym60_3019905540 = colontmp__2969584113[chckIndx(i_2969584115, 0, (colontmp__2969584113).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym60_3019905539) || [],[32,45,62,32] || [],HEX24_3019905598(valueHEX60gensym60_3019905540) || [],[10] || []));;
            i_2969584115 = addInt(i_2969584115, 1);
            if (!(((colontmp__2969584113).length == L_2969584116))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,105,100,97,116,105,111,110,10] || []));;
    Label25: {
      var keyHEX60gensym61_3019905728 = null;
      var valueHEX60gensym61_3019905729 = false;
      var colontmp__2969584119 = [];
      colontmp__2969584119 = pairs_3019905701(HEX3Atmp_3019899097.queryCacheValidation);
      var i_2969584121 = 0;
      var L_2969584122 = (colontmp__2969584119).length;
      Label26: {
          Label27: while (true) {
          if (!(i_2969584121 < L_2969584122)) break Label27;
            keyHEX60gensym61_3019905728 = colontmp__2969584119[chckIndx(i_2969584121, 0, (colontmp__2969584119).length - 1)]["Field0"];
            valueHEX60gensym61_3019905729 = colontmp__2969584119[chckIndx(i_2969584121, 0, (colontmp__2969584119).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym61_3019905728) || [],[32,45,62,32] || [],nimBoolToStr(valueHEX60gensym61_3019905729) || [],[10] || []));;
            i_2969584121 = addInt(i_2969584121, 1);
            if (!(((colontmp__2969584119).length == L_2969584122))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,84,121,112,101,10] || []));;
    Label28: {
      var keyHEX60gensym62_3019905757 = null;
      var valueHEX60gensym62_3019905758 = null;
      var colontmp__2969584125 = [];
      colontmp__2969584125 = pairs_3019905730(HEX3Atmp_3019899097.queryCacheSymbolType);
      var i_2969584127 = 0;
      var L_2969584128 = (colontmp__2969584125).length;
      Label29: {
          Label30: while (true) {
          if (!(i_2969584127 < L_2969584128)) break Label30;
            keyHEX60gensym62_3019905757 = colontmp__2969584125[chckIndx(i_2969584127, 0, (colontmp__2969584125).length - 1)]["Field0"];
            valueHEX60gensym62_3019905758 = colontmp__2969584125[chckIndx(i_2969584127, 0, (colontmp__2969584125).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087008915(keyHEX60gensym62_3019905757) || [],[32,45,62,32] || [],HEX24_3087008191(valueHEX60gensym62_3019905758) || [],[10] || []));;
            i_2969584127 = addInt(i_2969584127, 1);
            if (!(((colontmp__2969584125).length == L_2969584128))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,86,97,108,117,101,10] || []));;
    Label31: {
      var keyHEX60gensym63_3019905786 = null;
      var valueHEX60gensym63_3019905787 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584131 = [];
      colontmp__2969584131 = pairs_3019905759(HEX3Atmp_3019899097.queryCacheSymbolValue);
      var i_2969584133 = 0;
      var L_2969584134 = (colontmp__2969584131).length;
      Label32: {
          Label33: while (true) {
          if (!(i_2969584133 < L_2969584134)) break Label33;
            keyHEX60gensym63_3019905786 = colontmp__2969584131[chckIndx(i_2969584133, 0, (colontmp__2969584131).length - 1)]["Field0"];
            valueHEX60gensym63_3019905787 = colontmp__2969584131[chckIndx(i_2969584133, 0, (colontmp__2969584131).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087008915(keyHEX60gensym63_3019905786) || [],[32,45,62,32] || [],HEX24_3087008498(valueHEX60gensym63_3019905787) || [],[10] || []));;
            i_2969584133 = addInt(i_2969584133, 1);
            if (!(((colontmp__2969584131).length == L_2969584134))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,10] || []));;
    Label34: {
      var keyHEX60gensym64_3019905815 = null;
      var valueHEX60gensym64_3019905816 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584137 = [];
      colontmp__2969584137 = pairs_3019905788(HEX3Atmp_3019899097.queryCacheFunctionExecution);
      var i_2969584139 = 0;
      var L_2969584140 = (colontmp__2969584137).length;
      Label35: {
          Label36: while (true) {
          if (!(i_2969584139 < L_2969584140)) break Label36;
            keyHEX60gensym64_3019905815 = colontmp__2969584137[chckIndx(i_2969584139, 0, (colontmp__2969584137).length - 1)]["Field0"];
            valueHEX60gensym64_3019905816 = colontmp__2969584137[chckIndx(i_2969584139, 0, (colontmp__2969584137).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087008582(keyHEX60gensym64_3019905815) || [],[32,45,62,32] || [],HEX24_3087008498(valueHEX60gensym64_3019905816) || [],[10] || []));;
            i_2969584139 = addInt(i_2969584139, 1);
            if (!(((colontmp__2969584137).length == L_2969584140))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,78,111,100,101,76,97,121,111,117,116,10] || []));;
    Label37: {
      var keyHEX60gensym65_3019905844 = null;
      var valueHEX60gensym65_3019905845 = null;
      var colontmp__2969584143 = [];
      colontmp__2969584143 = pairs_3019905817(HEX3Atmp_3019899097.queryCacheNodeLayout);
      var i_2969584145 = 0;
      var L_2969584146 = (colontmp__2969584143).length;
      Label38: {
          Label39: while (true) {
          if (!(i_2969584145 < L_2969584146)) break Label39;
            keyHEX60gensym65_3019905844 = colontmp__2969584143[chckIndx(i_2969584145, 0, (colontmp__2969584143).length - 1)]["Field0"];
            valueHEX60gensym65_3019905845 = colontmp__2969584143[chckIndx(i_2969584145, 0, (colontmp__2969584143).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087009982(keyHEX60gensym65_3019905844) || [],[32,45,62,32] || [],HEX24_3087009945(valueHEX60gensym65_3019905845) || [],[10] || []));;
            i_2969584145 = addInt(i_2969584145, 1);
            if (!(((colontmp__2969584143).length == L_2969584146))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, nsuIndent(HEX24_3036679526(HEX3Atmp_3019899097.depGraph), 1, [124,32]));;
    result_3019905230 = nimCopy(null, HEX3Atmp_3019899098, NTI33554449);
    break BeforeRet;
  };

  return result_3019905230;

}

function dumpContext_2969584032(self_2969584033) {
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);
    log_1174405220(logger_704643272[0], 2, [toString_3019905229(ctx_2969567289)]);
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);

  
}

function dumpContextJsWrapper_2969584029(self_2969584061) {
    dumpContext_2969584032(self_2969584061);

  
}
editor_ast_prototype.dumpContext = function() { return (dumpContextJsWrapper_2969584029(this));};

function getModeConfig_2969584158(self_2969584159, mode_2969584160) {
  var result_2969584161 = null;

  BeforeRet: {
    result_2969584161 = getEventHandlerConfig_1291849162(self_2969584159.editor, ([101,100,105,116,111,114,46,97,115,116,46] || []).concat(mode_2969584160 || []));
    break BeforeRet;
  };

  return result_2969584161;

}

function setMode_2969584167(self_2969584168, mode_2969584169) {
        
function HEX3Aanonymous_2969584190(actionHEX60gensym959HEX60gensym960_2969584191, argHEX60gensym959HEX60gensym960_2969584192) {
          var result_2969584193 = 0;

          BeforeRet: {
            if (handlerHEX60gensym959_2969584178.config.handleActions) {
            var action_2969584194 = nimCopy(null, actionHEX60gensym959HEX60gensym960_2969584191, NTI33554449);
            var arg_2969584195 = nimCopy(null, argHEX60gensym959HEX60gensym960_2969584192, NTI33554449);
            var responseHEX60gensym959HEX60gensym960_2969584196 = handleAction_2969583526(self_2969584168, action_2969584194, arg_2969584195);
            if (handlerHEX60gensym959_2969584178.config.consumeAllActions) {
            result_2969584193 = 3;
            break BeforeRet;
            }
            
            result_2969584193 = responseHEX60gensym959HEX60gensym960_2969584196;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym959_2969584178.config.consumeAllActions) {
            result_2969584193 = 3;
            break BeforeRet;
            }
            else {
              result_2969584193 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2969584193;

        }
        
function HEX3Aanonymous_2969584198(inputHEX60gensym959HEX60gensym961_2969584199) {
          var result_2969584200 = 0;

          BeforeRet: {
            if (handlerHEX60gensym959_2969584178.config.handleInputs) {
            var input_2969584201 = nimCopy(null, inputHEX60gensym959HEX60gensym961_2969584199, NTI33554449);
            result_2969584200 = 1;
            break BeforeRet;
            }
            else {
              result_2969584200 = 1;
              break BeforeRet;
            }
            
          };

          return result_2969584200;

        }

    if (((mode_2969584169).length == 0)) {
    self_2969584168.modeEventHandler = null;
    }
    else {
      var config_2969584170 = getModeConfig_2969584158(self_2969584168, mode_2969584169);
      Label1: {
        var handlerHEX60gensym959_2969584178 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym959_2969584178.config = config_2969584170;
        handlerHEX60gensym959_2969584178.dfaInternal = buildDFA_2113929279(config_2969584170);
        handlerHEX60gensym959_2969584178.handleAction = HEX3Aanonymous_2969584190;
        handlerHEX60gensym959_2969584178.handleInput = HEX3Aanonymous_2969584198;
      };
      self_2969584168.modeEventHandler = handlerHEX60gensym959_2969584178;
    }
    
    self_2969584168.currentMode = nimCopy(null, mode_2969584169, NTI33554449);

  
}

function setModeJsWrapper2_2969584164(self_2969584230, mode_2969584231) {
    setMode_2969584167(self_2969584230, mode_2969584231);

  
}
editor_ast_prototype.setMode2 = function(mode_ /* : string */) { return (setModeJsWrapper2_2969584164(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2969584251(self_2969584252) {
  var result_2969584253 = [];

  BeforeRet: {
    result_2969584253 = nimCopy(null, self_2969584252.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2969584253;

}

function modeJsWrapper2_2969584248(self_2969584282) {
  var result_2969584283 = [];

    result_2969584283 = nimCopy(null, mode_2969584251(self_2969584282), NTI33554449);

  return result_2969584283;

}
editor_ast_prototype.mode2 = function() { return toJSStr(modeJsWrapper2_2969584248(this));};

function getContextWithMode_2969584301(self_2969584302, context_2969584303) {
  var result_2969584304 = [];

  BeforeRet: {
    result_2969584304 = nimCopy(null, (context_2969584303 || []).concat([46] || [],self_2969584302.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2969584304;

}

function getContextWithModeJsWrapper2_2969584298(self_2969584334, context_2969584335) {
  var result_2969584336 = [];

    result_2969584336 = nimCopy(null, getContextWithMode_2969584301(self_2969584334, context_2969584335), NTI33554449);

  return result_2969584336;

}
editor_ast_prototype.getContextWithMode2 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper2_2969584298(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};
var printWidth_3305111561 = [120];
var printColors_3305111562 = [false];
var haveSeen_3305111568 = [({data: [], counter: 0})];
var line_3305111569 = [[]];

function HEX40_3271566001(a_3271566003) {
  var result_3271566004 = [];

    result_3271566004 = new Array(chckRange((a_3271566003).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_3271566003).length, 0, 2147483647) ; ++i) { result_3271566004[i] = null; }    Label1: {
      var i_3271566020 = 0;
      var colontmp__3321890853 = 0;
      colontmp__3321890853 = subInt((a_3271566003).length, 1);
      var res_3321890854 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3321890854 <= colontmp__3321890853)) break Label3;
            i_3271566020 = res_3321890854;
            result_3271566004[chckIndx(i_3271566020, 0, (result_3271566004).length - 1)] = a_3271566003[chckIndx(i_3271566020, 0, (a_3271566003).length - 1)];
            res_3321890854 = addInt(res_3321890854, 1);
          }
      };
    };

  return result_3271566004;

}

function HEX40_3271566021(a_3271566023) {
  var result_3271566024 = [];

    result_3271566024 = new Array(chckRange((a_3271566023).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_3271566023).length, 0, 2147483647) ; ++i) { result_3271566024[i] = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0}); }    Label1: {
      var i_3271566040 = 0;
      var colontmp__3321890857 = 0;
      colontmp__3321890857 = subInt((a_3271566023).length, 1);
      var res_3321890858 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3321890858 <= colontmp__3321890857)) break Label3;
            i_3271566040 = res_3321890858;
            result_3271566024[chckIndx(i_3271566040, 0, (result_3271566024).length - 1)] = nimCopy(result_3271566024[chckIndx(i_3271566040, 0, (result_3271566024).length - 1)], a_3271566023[chckIndx(i_3271566040, 0, (a_3271566023).length - 1)], NTI3271557125);
            res_3321890858 = addInt(res_3321890858, 1);
          }
      };
    };

  return result_3271566024;

}

function HEX40_3271566050(a_3271566052) {
  var result_3271566053 = [];

    result_3271566053 = new Array(chckRange((a_3271566052).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_3271566052).length, 0, 2147483647) ; ++i) { result_3271566053[i] = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0}); }    Label1: {
      var i_3271566069 = 0;
      var colontmp__3321890861 = 0;
      colontmp__3321890861 = subInt((a_3271566052).length, 1);
      var res_3321890862 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3321890862 <= colontmp__3321890861)) break Label3;
            i_3271566069 = res_3321890862;
            result_3271566053[chckIndx(i_3271566069, 0, (result_3271566053).length - 1)] = nimCopy(result_3271566053[chckIndx(i_3271566069, 0, (result_3271566053).length - 1)], a_3271566052[chckIndx(i_3271566069, 0, (a_3271566052).length - 1)], NTI3271557127);
            res_3321890862 = addInt(res_3321890862, 1);
          }
      };
    };

  return result_3271566053;

}

function HEX40_3271566079(a_3271566081) {
  var result_3271566082 = [];

    result_3271566082 = new Array(chckRange((a_3271566081).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_3271566081).length, 0, 2147483647) ; ++i) { result_3271566082[i] = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})}); }    Label1: {
      var i_3271566098 = 0;
      var colontmp__3321890865 = 0;
      colontmp__3321890865 = subInt((a_3271566081).length, 1);
      var res_3321890866 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3321890866 <= colontmp__3321890865)) break Label3;
            i_3271566098 = res_3321890866;
            result_3271566082[chckIndx(i_3271566098, 0, (result_3271566082).length - 1)] = nimCopy(result_3271566082[chckIndx(i_3271566098, 0, (result_3271566082).length - 1)], a_3271566081[chckIndx(i_3271566098, 0, (a_3271566081).length - 1)], NTI3271557128);
            res_3321890866 = addInt(res_3321890866, 1);
          }
      };
    };

  return result_3271566082;

}

function newNodeClass_3271565986(id_3271565987, name_3271565988, alias_3271565989, base_3271565990, interfaces_3271565991, isAbstract_3271565992, isInterface_3271565993, properties_3271565994, children_3271565995, references_3271565996) {
  var result_3271565997 = null;

    result_3271565997 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), name: [], alias: [], base: null, interfaces: [], isAbstract: false, isInterface: false, properties: [], children: [], references: []});
    result_3271565997.id = nimCopy(result_3271565997.id, id_3271565987, NTI2046820355);
    result_3271565997.name = nimCopy(null, name_3271565988, NTI33554449);
    result_3271565997.alias = nimCopy(null, alias_3271565989, NTI33554449);
    result_3271565997.base = base_3271565990;
    result_3271565997.interfaces = nimCopy(null, HEX40_3271566001(interfaces_3271565991), NTI3271561624);
    result_3271565997.isAbstract = isAbstract_3271565992;
    result_3271565997.isInterface = isInterface_3271565993;
    result_3271565997.properties = nimCopy(null, HEX40_3271566021(properties_3271565994), NTI3271561638);
    result_3271565997.children = nimCopy(null, HEX40_3271566050(children_3271565995), NTI3271561657);
    result_3271565997.references = nimCopy(null, HEX40_3271566079(references_3271565996), NTI3271561676);

  return result_3271565997;

}

function id_3271557407(selfHEX60gensym0_3271557408) {
  var result_3271557409 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_3271557409 = nimCopy(result_3271557409, selfHEX60gensym0_3271557408.id, NTI2046820355);
    break BeforeRet;
  };

  return result_3271557409;

}

function newCellBuilder_3271568734() {
  var result_3271568735 = null;

    result_3271568735 = ({builders: ({data: [], counter: 0}), preferredBuilders: ({data: [], counter: 0})});

  return result_3271568735;

}

function rawGet_3271568808(t_3271568811, key_3271568812, hc_3271568813, hc_3271568813_Idx) {
  var result_3271568814 = 0;

  BeforeRet: {
    hc_3271568813[hc_3271568813_Idx] = hash_2046820630(key_3271568812);
    if ((hc_3271568813[hc_3271568813_Idx] == 0)) {
    hc_3271568813[hc_3271568813_Idx] = 314159265;
    }
    
    if (((t_3271568811.data).length == 0)) {
    result_3271568814 = -1;
    break BeforeRet;
    }
    
    var h_3271568866 = (hc_3271568813[hc_3271568813_Idx] & (t_3271568811.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271568811.data[chckIndx(h_3271568866, 0, (t_3271568811.data).length - 1)].Field0)) break Label2;
          if (((t_3271568811.data[chckIndx(h_3271568866, 0, (t_3271568811.data).length - 1)].Field0 == hc_3271568813[hc_3271568813_Idx]) && HEX3DHEX3D_2046820626(t_3271568811.data[chckIndx(h_3271568866, 0, (t_3271568811.data).length - 1)].Field1, key_3271568812))) {
          result_3271568814 = h_3271568866;
          break BeforeRet;
          }
          
          h_3271568866 = nextTry_1308622883(h_3271568866, (t_3271568811.data).length - 1);
        }
    };
    result_3271568814 = subInt(-1, h_3271568866);
  };

  return result_3271568814;

}

function hasKey_3271568801(t_3271568804, key_3271568805) {
  var result_3271568806 = false;

    var hc_3271568807 = [0];
    result_3271568806 = (0 <= rawGet_3271568808(t_3271568804, key_3271568805, hc_3271568807, 0));

  return result_3271568806;

}

function contains_3271568795(t_3271568798, key_3271568799) {
  var result_3271568800 = false;

  BeforeRet: {
    result_3271568800 = hasKey_3271568801(t_3271568798, key_3271568799);
    break BeforeRet;
  };

  return result_3271568800;

}

function HEX5BHEX5D_3271569100(t_3271569103, key_3271569104) {
  var result_3271569105 = null;
  var result_3271569105_Idx = 0;

    var hcHEX60gensym22_3271569106 = [0];
    var indexHEX60gensym22_3271569113 = rawGet_3271568808(t_3271569103, key_3271569104, hcHEX60gensym22_3271569106, 0);
    if ((0 <= indexHEX60gensym22_3271569113)) {
    result_3271569105 = t_3271569103.data[chckIndx(indexHEX60gensym22_3271569113, 0, (t_3271569103.data).length - 1)]; result_3271569105_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3271569104);
    }
    

  return [result_3271569105, result_3271569105_Idx];

}

function mustRehash_3271569400(t_3271569402) {
  var result_3271569403 = false;

    if (!((t_3271569402.counter < (t_3271569402.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271569403 = ((mulInt((t_3271569402.data).length, 2) < mulInt(t_3271569402.counter, 3)) || (subInt((t_3271569402.data).length, t_3271569402.counter) < 4));

  return result_3271569403;

}

function rawInsert_3271569849(t_3271569853, data_3271569854, data_3271569854_Idx, key_3271569855, val_3271569856, hc_3271569857, h_3271569858) {
    data_3271569854[data_3271569854_Idx][chckIndx(h_3271569858, 0, (data_3271569854[data_3271569854_Idx]).length - 1)].Field1 = nimCopy(data_3271569854[data_3271569854_Idx][chckIndx(h_3271569858, 0, (data_3271569854[data_3271569854_Idx]).length - 1)].Field1, key_3271569855, NTI2046820355);
    data_3271569854[data_3271569854_Idx][chckIndx(h_3271569858, 0, (data_3271569854[data_3271569854_Idx]).length - 1)].Field2 = nimCopy(null, val_3271569856, NTI3271557169);
    data_3271569854[data_3271569854_Idx][chckIndx(h_3271569858, 0, (data_3271569854[data_3271569854_Idx]).length - 1)].Field0 = hc_3271569857;

  
}

function enlarge_3271569555(t_3271569558) {
    var n_3271569561 = [];
    n_3271569561 = new Array(chckRange(mulInt((t_3271569558.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271569558.data).length, 2), 0, 2147483647) ; ++i) { n_3271569561[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: []}; }    var Temporary1 = t_3271569558.data; t_3271569558.data = n_3271569561; n_3271569561 = Temporary1;    Label2: {
      var i_3271569625 = 0;
      var colontmp__3321890871 = 0;
      colontmp__3321890871 = (n_3271569561).length - 1;
      var res_3321890872 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_3321890872 <= colontmp__3321890871)) break Label4;
            i_3271569625 = res_3321890872;
            var eh_3271569679 = n_3271569561[chckIndx(i_3271569625, 0, (n_3271569561).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271569679)) {
            var j_3271569683 = (eh_3271569679 & (t_3271569558.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271569558.data[chckIndx(j_3271569683, 0, (t_3271569558.data).length - 1)].Field0)) break Label6;
                  j_3271569683 = nextTry_1308622883(j_3271569683, (t_3271569558.data).length - 1);
                }
            };
            rawInsert_3271569849(t_3271569558, t_3271569558, "data", n_3271569561[chckIndx(i_3271569625, 0, (n_3271569561).length - 1)].Field1, n_3271569561[chckIndx(i_3271569625, 0, (n_3271569561).length - 1)].Field2, eh_3271569679, j_3271569683);
            }
            
            res_3321890872 = addInt(res_3321890872, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271570027(t_3271570030, key_3271570031, hc_3271570032) {
  var result_3271570033 = 0;

  BeforeRet: {
    if (((t_3271570030.data).length == 0)) {
    result_3271570033 = -1;
    break BeforeRet;
    }
    
    var h_3271570084 = (hc_3271570032 & (t_3271570030.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271570030.data[chckIndx(h_3271570084, 0, (t_3271570030.data).length - 1)].Field0)) break Label2;
          if (((t_3271570030.data[chckIndx(h_3271570084, 0, (t_3271570030.data).length - 1)].Field0 == hc_3271570032) && HEX3DHEX3D_2046820626(t_3271570030.data[chckIndx(h_3271570084, 0, (t_3271570030.data).length - 1)].Field1, key_3271570031))) {
          result_3271570033 = h_3271570084;
          break BeforeRet;
          }
          
          h_3271570084 = nextTry_1308622883(h_3271570084, (t_3271570030.data).length - 1);
        }
    };
    result_3271570033 = subInt(-1, h_3271570084);
  };

  return result_3271570033;

}

function HEX5BHEX5DHEX3D_3271569227(t_3271569230, key_3271569231, val_3271569232) {
    if (((t_3271569230.data).length == 0)) {
    var correctSizeHEX60gensym184_3271569281 = slotsNeeded_1308622891(32);
    t_3271569230.counter = 0;
    t_3271569230.data = new Array(chckRange(correctSizeHEX60gensym184_3271569281, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym184_3271569281, 0, 2147483647) ; ++i) { t_3271569230.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: []}; }    }
    
    var hc_3271569286 = [0];
    var index_3271569293 = rawGet_3271568808(t_3271569230, key_3271569231, hc_3271569286, 0);
    if ((0 <= index_3271569293)) {
    t_3271569230.data[chckIndx(index_3271569293, 0, (t_3271569230.data).length - 1)].Field2 = nimCopy(null, val_3271569232, NTI3271557169);
    }
    else {
      if (((t_3271569230.data).length == 0)) {
      var correctSizeHEX60gensym187_3271569395 = slotsNeeded_1308622891(32);
      t_3271569230.counter = 0;
      t_3271569230.data = new Array(chckRange(correctSizeHEX60gensym187_3271569395, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym187_3271569395, 0, 2147483647) ; ++i) { t_3271569230.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: []}; }      }
      
      if (mustRehash_3271569400(t_3271569230)) {
      enlarge_3271569555(t_3271569230);
      index_3271569293 = rawGetKnownHC_3271570027(t_3271569230, key_3271569231, hc_3271569286[0]);
      }
      
      index_3271569293 = subInt(-1, index_3271569293);
      rawInsert_3271569849(t_3271569230, t_3271569230, "data", key_3271569231, val_3271569232, hc_3271569286[0], index_3271569293);
      t_3271569230.counter = addInt(t_3271569230.counter, 1);
    }
    

  
}

function addBuilderFor_3271568748(self_3271568749, classId_3271568750, builderId_3271568751, builder_3271568752) {
    var Temporary1;

    if (contains_3271568795(self_3271568749.builders, classId_3271568750)) {
    (Temporary1 = HEX5BHEX5D_3271569100(self_3271568749.builders, classId_3271568750), Temporary1)[0][Temporary1[1]].push({Field0: nimCopy(null, builderId_3271568751, NTI2046820355), Field1: builder_3271568752});;
    }
    else {
    HEX5BHEX5DHEX3D_3271569227(self_3271568749.builders, classId_3271568750, [nimCopy(null, {Field0: nimCopy(null, builderId_3271568751, NTI2046820355), Field1: builder_3271568752}, NTI3271563676)]);
    }
    

  
}

function add_3338666132(self_3338666133, cell_3338666134) {
    if (HEX3DHEX3D_2046820626(cell_3338666134.id, idNone_2046820633())) {
    cell_3338666134.id = nimCopy(cell_3338666134.id, newId_2046820597(), NTI2046820355);
    }
    
    cell_3338666134.parent = self_3338666133;
    self_3338666133.children.push(cell_3338666134);;

  
}

function isSome_3271567034(self_3271567036) {
  var result_3271567037 = false;

    result_3271567037 = self_3271567036.has;

  return result_3271567037;

}

function isNone_3271567059(self_3271567061) {
  var result_3271567062 = false;

    result_3271567062 = !(self_3271567061.has);

  return result_3271567062;

}

function get_3271567051(self_3271567053) {
  var result_3271567054 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    if (isNone_3271567059(self_3271567053)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3271567054 = self_3271567053.val;

  return result_3271567054;

}

function hasProperty_3271566765(node_3271566766, role_3271566767) {
  var result_3271566768 = false;

  BeforeRet: {
    result_3271566768 = false;
    Label1: {
      var c_3271566791 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({kind: 0, intValue: 0, stringValue: [], boolValue: false})};
      var i_3321890897 = 0;
      var L_3321890898 = (node_3271566766.properties).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890897 < L_3321890898)) break Label3;
            c_3271566791 = node_3271566766.properties[chckIndx(i_3321890897, 0, (node_3271566766.properties).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566791.Field0, role_3271566767)) {
            result_3271566768 = true;
            break BeforeRet;
            }
            
            i_3321890897 = addInt(i_3321890897, 1);
            if (!(((node_3271566766.properties).length == L_3321890898))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271566768;

}

function getDefaultValue_3271566941(typ_3271566944) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3271566945 = ({kind: 0, intValue: 0, stringValue: [], boolValue: false});

    result_3271566945 = nimCopy(result_3271566945, {kind: typ_3271566944, intValue: 0, stringValue: [], boolValue: false}, NTI3271557124);
    switch (typ_3271566944) {
    case 2:
      var Temporary1 = result_3271566945;
      if (ConstSet236[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3271557123)); }
      Temporary1.boolValue = false;
      break;
    case 0:
      var Temporary2 = result_3271566945;
      if (ConstSet237[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3271557123)); }
      Temporary2.intValue = 0;
      break;
    case 1:
      var Temporary3 = result_3271566945;
      if (ConstSet238[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3271557123)); }
      Temporary3.stringValue = nimCopy(null, [], NTI33554449);
      break;
    }

  return result_3271566945;

}

function hasChildList_3271566560(node_3271566561, role_3271566562) {
  var result_3271566563 = false;

  BeforeRet: {
    result_3271566563 = false;
    Label1: {
      var c_3271566585 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
      var i_3321890902 = 0;
      var L_3321890903 = (node_3271566561.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890902 < L_3321890903)) break Label3;
            c_3271566585 = node_3271566561.childLists[chckIndx(i_3321890902, 0, (node_3271566561.childLists).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566585.Field0, role_3271566562)) {
            result_3271566563 = true;
            break BeforeRet;
            }
            
            i_3321890902 = addInt(i_3321890902, 1);
            if (!(((node_3271566561.childLists).length == L_3321890903))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271566563;

}

function hasReference_3271566647(node_3271566648, role_3271566649) {
  var result_3271566650 = false;

  BeforeRet: {
    result_3271566650 = false;
    Label1: {
      var c_3271566673 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
      var i_3321890907 = 0;
      var L_3321890908 = (node_3271566648.references).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890907 < L_3321890908)) break Label3;
            c_3271566673 = node_3271566648.references[chckIndx(i_3321890907, 0, (node_3271566648.references).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566673.Field0, role_3271566649)) {
            result_3271566650 = true;
            break BeforeRet;
            }
            
            i_3321890907 = addInt(i_3321890907, 1);
            if (!(((node_3271566648.references).length == L_3321890908))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271566650;

}

function addMissingFieldsForClass_3271566927(self_3271566928, class_3271566929) {
    Label1: {
      var inter_3271566933 = null;
      var i_3321890877 = 0;
      var L_3321890878 = (class_3271566929.interfaces).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890877 < L_3321890878)) break Label3;
            inter_3271566933 = class_3271566929.interfaces[chckIndx(i_3321890877, 0, (class_3271566929.interfaces).length - 1)];
            addMissingFieldsForClass_3271566927(self_3271566928, inter_3271566933);
            i_3321890877 = addInt(i_3321890877, 1);
            if (!(((class_3271566929.interfaces).length == L_3321890878))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((class_3271566929.base == null))) {
    addMissingFieldsForClass_3271566927(self_3271566928, class_3271566929.base);
    }
    
    Label4: {
      var desc_3271566940 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0});
      var i_3321890882 = 0;
      var L_3321890883 = (class_3271566929.properties).length;
      Label5: {
          Label6: while (true) {
          if (!(i_3321890882 < L_3321890883)) break Label6;
            desc_3271566940 = class_3271566929.properties[chckIndx(i_3321890882, 0, (class_3271566929.properties).length - 1)];
            if (!(hasProperty_3271566765(self_3271566928, desc_3271566940.id))) {
            self_3271566928.properties.push({Field0: nimCopy(null, desc_3271566940.id, NTI2046820355), Field1: getDefaultValue_3271566941(desc_3271566940.typ)});;
            }
            
            i_3321890882 = addInt(i_3321890882, 1);
            if (!(((class_3271566929.properties).length == L_3321890883))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label7: {
      var desc_3271566962 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0});
      var i_3321890887 = 0;
      var L_3321890888 = (class_3271566929.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_3321890887 < L_3321890888)) break Label9;
            desc_3271566962 = class_3271566929.children[chckIndx(i_3321890887, 0, (class_3271566929.children).length - 1)];
            if (!(hasChildList_3271566560(self_3271566928, desc_3271566962.id))) {
            self_3271566928.childLists.push({Field0: nimCopy(null, desc_3271566962.id, NTI2046820355), Field1: []});;
            }
            
            i_3321890887 = addInt(i_3321890887, 1);
            if (!(((class_3271566929.children).length == L_3321890888))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label10: {
      var desc_3271566974 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})});
      var i_3321890892 = 0;
      var L_3321890893 = (class_3271566929.references).length;
      Label11: {
          Label12: while (true) {
          if (!(i_3321890892 < L_3321890893)) break Label12;
            desc_3271566974 = class_3271566929.references[chckIndx(i_3321890892, 0, (class_3271566929.references).length - 1)];
            if (!(hasReference_3271566647(self_3271566928, desc_3271566974.id))) {
            self_3271566928.references.push({Field0: nimCopy(null, desc_3271566974.id, NTI2046820355), Field1: idNone_2046820633()});;
            }
            
            i_3321890892 = addInt(i_3321890892, 1);
            if (!(((class_3271566929.references).length == L_3321890893))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function newAstNode_3271567013(class_3271567014, id_3271567028) {
    var Temporary1;

  var result_3271567029 = null;

    if (isSome_3271567034(id_3271567028)) {
    Temporary1 = get_3271567051(id_3271567028);
    }
    else {
    Temporary1 = newId_2046820597();
    }
    
    var id_3271567065 = nimCopy(null, Temporary1, NTI2046820355);
    result_3271567029 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), class: ({padding: 0, time: 0, fuzz: 0, count: 0}), model: null, parent: null, role: ({padding: 0, time: 0, fuzz: 0, count: 0}), properties: [], references: [], childLists: []});
    result_3271567029.id = nimCopy(result_3271567029.id, id_3271567065, NTI2046820355);
    result_3271567029.class = nimCopy(result_3271567029.class, class_3271567014.id, NTI2046820355);
    addMissingFieldsForClass_3271566927(result_3271567029, class_3271567014);

  return result_3271567029;

}

function none_3271567020() {
  var result_3271567027 = ({val: ({padding: 0, time: 0, fuzz: 0, count: 0}), has: false});

  return result_3271567027;

}

function children_3271566626(node_3271566627, role_3271566628) {
  var result_3271566629 = [];

    result_3271566629 = nimCopy(null, [], NTI3271562130);
    Label1: {
      var c_3271566637 = null;
      var i_3321890918 = 0;
      var L_3321890919 = (node_3271566627.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890918 < L_3321890919)) break Label3;
            c_3271566637 = node_3271566627.childLists[chckIndx(i_3321890918, 0, (node_3271566627.childLists).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566637.Field0, role_3271566628)) {
            result_3271566629 = nimCopy(null, c_3271566637.Field1, NTI3271557155);
            break Label1;
            }
            
            i_3321890918 = addInt(i_3321890918, 1);
            if (!(((node_3271566627.childLists).length == L_3321890919))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3271566629;

}

function rawGet_3271561240(t_3271561243, key_3271561244, hc_3271561245, hc_3271561245_Idx) {
  var result_3271561246 = 0;

  BeforeRet: {
    hc_3271561245[hc_3271561245_Idx] = hash_2046820630(key_3271561244);
    if ((hc_3271561245[hc_3271561245_Idx] == 0)) {
    hc_3271561245[hc_3271561245_Idx] = 314159265;
    }
    
    if (((t_3271561243.data).length == 0)) {
    result_3271561246 = -1;
    break BeforeRet;
    }
    
    var h_3271561298 = (hc_3271561245[hc_3271561245_Idx] & (t_3271561243.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271561243.data[chckIndx(h_3271561298, 0, (t_3271561243.data).length - 1)].Field0)) break Label2;
          if (((t_3271561243.data[chckIndx(h_3271561298, 0, (t_3271561243.data).length - 1)].Field0 == hc_3271561245[hc_3271561245_Idx]) && HEX3DHEX3D_2046820626(t_3271561243.data[chckIndx(h_3271561298, 0, (t_3271561243.data).length - 1)].Field1, key_3271561244))) {
          result_3271561246 = h_3271561298;
          break BeforeRet;
          }
          
          h_3271561298 = nextTry_1308622883(h_3271561298, (t_3271561243.data).length - 1);
        }
    };
    result_3271561246 = subInt(-1, h_3271561298);
  };

  return result_3271561246;

}

function getOrDefault_3271561230(t_3271561233, key_3271561234, default_3271561235) {
    var Temporary1;

  var result_3271561236 = null;

    var hcHEX60gensym62_3271561239 = [0];
    var indexHEX60gensym62_3271561479 = rawGet_3271561240(t_3271561233, key_3271561234, hcHEX60gensym62_3271561239, 0);
    if ((0 <= indexHEX60gensym62_3271561479)) {
    Temporary1 = t_3271561233.data[chckIndx(indexHEX60gensym62_3271561479, 0, (t_3271561233.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3271561235;
    }
    
    result_3271561236 = Temporary1;

  return result_3271561236;

}

function language_3271567342(node_3271567343) {
    var Temporary1;

  var result_3271567344 = null;

    if ((node_3271567343.model == null)) {
    Temporary1 = null;
    }
    else {
    Temporary1 = getOrDefault_3271561230(node_3271567343.model.classesToLanguages, node_3271567343.class, null);
    }
    
    result_3271567344 = Temporary1;

  return result_3271567344;

}

function rawGet_3271558148(t_3271558151, key_3271558152, hc_3271558153, hc_3271558153_Idx) {
  var result_3271558154 = 0;

  BeforeRet: {
    hc_3271558153[hc_3271558153_Idx] = hash_2046820630(key_3271558152);
    if ((hc_3271558153[hc_3271558153_Idx] == 0)) {
    hc_3271558153[hc_3271558153_Idx] = 314159265;
    }
    
    if (((t_3271558151.data).length == 0)) {
    result_3271558154 = -1;
    break BeforeRet;
    }
    
    var h_3271558205 = (hc_3271558153[hc_3271558153_Idx] & (t_3271558151.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271558151.data[chckIndx(h_3271558205, 0, (t_3271558151.data).length - 1)].Field0)) break Label2;
          if (((t_3271558151.data[chckIndx(h_3271558205, 0, (t_3271558151.data).length - 1)].Field0 == hc_3271558153[hc_3271558153_Idx]) && HEX3DHEX3D_2046820626(t_3271558151.data[chckIndx(h_3271558205, 0, (t_3271558151.data).length - 1)].Field1, key_3271558152))) {
          result_3271558154 = h_3271558205;
          break BeforeRet;
          }
          
          h_3271558205 = nextTry_1308622883(h_3271558205, (t_3271558151.data).length - 1);
        }
    };
    result_3271558154 = subInt(-1, h_3271558205);
  };

  return result_3271558154;

}

function getOrDefault_3271561603(t_3271561606, key_3271561607, default_3271561608) {
    var Temporary1;

  var result_3271561609 = null;

    var hcHEX60gensym66_3271561612 = [0];
    var indexHEX60gensym66_3271561619 = rawGet_3271558148(t_3271561606, key_3271561607, hcHEX60gensym66_3271561612, 0);
    if ((0 <= indexHEX60gensym66_3271561619)) {
    Temporary1 = t_3271561606.data[chckIndx(indexHEX60gensym66_3271561619, 0, (t_3271561606.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3271561608;
    }
    
    result_3271561609 = Temporary1;

  return result_3271561609;

}

function nodeClass_3271557904(node_3271557905) {
    var Temporary1;

  var result_3271567422 = null;

    var language_3271567423 = language_3271567342(node_3271557905);
    if ((language_3271567423 == null)) {
    Temporary1 = null;
    }
    else {
    Temporary1 = getOrDefault_3271561603(language_3271567423.classes, node_3271557905.class, null);
    }
    
    result_3271567422 = Temporary1;

  return result_3271567422;

}

function base_3271557416(selfHEX60gensym3_3271557417) {
  var result_3271557418 = null;

  BeforeRet: {
    result_3271557418 = selfHEX60gensym3_3271557417.base;
    break BeforeRet;
  };

  return result_3271557418;

}

function none_3338666997() {
  var result_3338667003 = ({val: null});

  return result_3338667003;

}

function some_3338667078(val_3338667080) {
  var result_3338667081 = ({val: null});

    if (!(!((val_3338667080 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3338667081.val = val_3338667080;

  return result_3338667081;

}

function getOrDefault_3338667157(t_3338667160, key_3338667161, default_3338667162) {
    var Temporary1;

  var result_3338667163 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var hcHEX60gensym53_3338667166 = [0];
    var indexHEX60gensym53_3338667173 = rawGet_3003122071(t_3338667160, key_3338667161, hcHEX60gensym53_3338667166, 0);
    if ((0 <= indexHEX60gensym53_3338667173)) {
    Temporary1 = t_3338667160.data[chckIndx(indexHEX60gensym53_3338667173, 0, (t_3338667160.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3338667162;
    }
    
    result_3338667163 = nimCopy(result_3338667163, Temporary1, NTI2046820355);

  return result_3338667163;

}

function findBuilder_3338666938(self_3338666939, class_3338666940, preferred_3338666941) {
    var Temporary1;

  var result_3338666946 = ({val: null});

  BeforeRet: {
    if (!(contains_3271568795(self_3338666939.builders, id_3271557407(class_3338666940)))) {
    if (!((base_3271557416(class_3338666940) == null))) {
    result_3338666946 = nimCopy(result_3338666946, findBuilder_3338666938(self_3338666939, base_3271557416(class_3338666940), preferred_3338666941), NTI3338666673);
    break BeforeRet;
    }
    
    result_3338666946 = nimCopy(result_3338666946, none_3338666997(), NTI3338666673);
    break BeforeRet;
    }
    
    var builders_3338667062 = nimCopy(null, (Temporary1 = HEX5BHEX5D_3271569100(self_3338666939.builders, id_3271557407(class_3338666940)), Temporary1)[0][Temporary1[1]], NTI3271557169);
    if (((builders_3338667062).length == 0)) {
    if (!((base_3271557416(class_3338666940) == null))) {
    result_3338666946 = nimCopy(result_3338666946, findBuilder_3338666938(self_3338666939, base_3271557416(class_3338666940), preferred_3338666941), NTI3338666673);
    break BeforeRet;
    }
    
    result_3338666946 = nimCopy(result_3338666946, none_3338666997(), NTI3338666673);
    break BeforeRet;
    }
    
    if (((builders_3338667062).length == 1)) {
    result_3338666946 = nimCopy(result_3338666946, some_3338667078(builders_3338667062[chckIndx(0, 0, (builders_3338667062).length - 1)].Field1), NTI3338666673);
    break BeforeRet;
    }
    
    var preferredBuilder_3338667227 = getOrDefault_3338667157(self_3338666939.preferredBuilders, id_3271557407(class_3338666940), idNone_2046820633());
    Label2: {
      var builder_3338667231 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_3321890925 = 0;
      var L_3321890926 = (builders_3338667062).length;
      Label3: {
          Label4: while (true) {
          if (!(i_3321890925 < L_3321890926)) break Label4;
            builder_3338667231 = builders_3338667062[chckIndx(i_3321890925, 0, (builders_3338667062).length - 1)];
            if (HEX3DHEX3D_2046820626(builder_3338667231.Field0, preferredBuilder_3338667227)) {
            result_3338666946 = nimCopy(result_3338666946, some_3338667078(builder_3338667231.Field1), NTI3338666673);
            break BeforeRet;
            }
            
            i_3321890925 = addInt(i_3321890925, 1);
            if (!(((builders_3338667062).length == L_3321890926))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3338666946 = nimCopy(result_3338666946, some_3338667078(builders_3338667062[chckIndx(0, 0, (builders_3338667062).length - 1)].Field1), NTI3338666673);
    break BeforeRet;
  };

  return result_3338666946;

}

function isSome_3338667647(self_3338667649) {
  var result_3338667650 = false;

    result_3338667650 = !((self_3338667649.val == null));

  return result_3338667650;

}

function isNone_3338667675(self_3338667677) {
  var result_3338667678 = false;

    result_3338667678 = (self_3338667677.val == null);

  return result_3338667678;

}

function get_3338667667(self_3338667669) {
  var result_3338667670 = null;

    if (isNone_3338667675(self_3338667669)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3338667670 = self_3338667669["val"];

  return result_3338667670;

}

function fill_3338666848(self_3338666849) {
  BeforeRet: {
    if (((self_3338666849.fillChildren == null) || self_3338666849.filled)) {
    break BeforeRet;
    }
    
    self_3338666849.fillChildren();
    self_3338666849.filled = true;
  };

  
}

function name_3271557410(selfHEX60gensym1_3271557411) {
  var result_3271557412 = [];

  BeforeRet: {
    result_3271557412 = nimCopy(null, selfHEX60gensym1_3271557411.name, NTI33554449);
    break BeforeRet;
  };

  return result_3271557412;

}

function get_2348810295(self_2348810297, otherwise_2348810298) {
    var Temporary1;

  var result_2348810299 = [];

    if (isSome_2348810304(self_2348810297)) {
    Temporary1 = self_2348810297.val;
    }
    else {
    Temporary1 = otherwise_2348810298;
    }
    
    result_2348810299 = nimCopy(null, Temporary1, NTI33554449);

  return result_2348810299;

}

function isSome_3271566471(self_3271566473) {
  var result_3271566474 = false;

    result_3271566474 = self_3271566473.has;

  return result_3271566474;

}

function map_3338667284(self_3338667287, callback_3338667289) {
    var Temporary1;

  var result_3338667290 = ({val: [], has: false});

    if (isSome_3271566471(self_3338667287)) {
    Temporary1 = some_2281701410(callback_3338667289(self_3338667287.val));
    }
    else {
    Temporary1 = none_2348810263();
    }
    
    result_3338667290 = nimCopy(result_3338667290, Temporary1, NTI2348810261);

  return result_3338667290;

}

function none_3271566425() {
  var result_3271566432 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0}), has: false});

  return result_3271566432;

}

function some_3271566456(val_3271566458) {
  var result_3271566459 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0}), has: false});

    result_3271566459.has = true;
    result_3271566459.val = nimCopy(result_3271566459.val, val_3271566458, NTI3271557125);

  return result_3271566459;

}

function isNone_3271566496(self_3271566498) {
  var result_3271566499 = false;

    result_3271566499 = !(self_3271566498.has);

  return result_3271566499;

}

function get_3271566488(self_3271566490) {
  var result_3271566491 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0});

    if (isNone_3271566496(self_3271566490)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3271566491 = self_3271566490.val;

  return result_3271566491;

}

function propertyDescription_3271566416(self_3271566417, id_3271566418) {
      var Temporary4;
        var Temporary5;
              var Temporary9;
                var Temporary10;

  var result_3271566424 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0}), has: false});

  BeforeRet: {
    result_3271566424 = nimCopy(result_3271566424, none_3271566425(), NTI3271561961);
    Label1: {
      var c_3271566455 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0});
      var i_3321890945 = 0;
      var L_3321890946 = (self_3271566417.properties).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890945 < L_3321890946)) break Label3;
            c_3271566455 = self_3271566417.properties[chckIndx(i_3321890945, 0, (self_3271566417.properties).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566455.id, id_3271566418)) {
            result_3271566424 = nimCopy(result_3271566424, some_3271566456(c_3271566455), NTI3271561961);
            break BeforeRet;
            }
            
            i_3321890945 = addInt(i_3321890945, 1);
            if (!(((self_3271566417.properties).length == L_3321890946))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
      if (!!((self_3271566417.base == null))) Temporary4 = false; else {        var oHEX60gensym131_3271566466 = propertyDescription_3271566416(self_3271566417.base, id_3271566418);
        if (!isSome_3271566471(oHEX60gensym131_3271566466)) Temporary5 = false; else {          var pd_3271566511 = nimCopy(null, get_3271566488(oHEX60gensym131_3271566466), NTI3271557125);
          Temporary5 = true;        }        Temporary4 = Temporary5;      }    if (Temporary4) {
    result_3271566424 = nimCopy(result_3271566424, some_3271566456(pd_3271566511), NTI3271561961);
    break BeforeRet;
    }
    
    Label6: {
      var inter_3271566518 = null;
      var i_3321890949 = 0;
      var L_3321890950 = (self_3271566417.interfaces).length;
      Label7: {
          Label8: while (true) {
          if (!(i_3321890949 < L_3321890950)) break Label8;
            inter_3271566518 = self_3271566417.interfaces[chckIndx(i_3321890949, 0, (self_3271566417.interfaces).length - 1)];
              if (!!((inter_3271566518 == null))) Temporary9 = false; else {                var oHEX60gensym134_3271566524 = propertyDescription_3271566416(inter_3271566518, id_3271566418);
                if (!isSome_3271566471(oHEX60gensym134_3271566524)) Temporary10 = false; else {                  var pd_3271566547 = nimCopy(null, get_3271566488(oHEX60gensym134_3271566524), NTI3271557125);
                  Temporary10 = true;                }                Temporary9 = Temporary10;              }            if (Temporary9) {
            result_3271566424 = nimCopy(result_3271566424, some_3271566456(pd_3271566547), NTI3271561961);
            break BeforeRet;
            }
            
            i_3321890949 = addInt(i_3321890949, 1);
            if (!(((self_3271566417.interfaces).length == L_3321890950))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271566424;

}

function isSome_3271566183(self_3271566185) {
  var result_3271566186 = false;

    result_3271566186 = self_3271566185.has;

  return result_3271566186;

}

function map_3338667349(self_3338667352, callback_3338667354) {
    var Temporary1;

  var result_3338667355 = ({val: [], has: false});

    if (isSome_3271566183(self_3338667352)) {
    Temporary1 = some_2281701410(callback_3338667354(self_3338667352.val));
    }
    else {
    Temporary1 = none_2348810263();
    }
    
    result_3338667355 = nimCopy(result_3338667355, Temporary1, NTI2348810261);

  return result_3338667355;

}

function none_3271566137() {
  var result_3271566144 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})}), has: false});

  return result_3271566144;

}

function some_3271566168(val_3271566170) {
  var result_3271566171 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})}), has: false});

    result_3271566171.has = true;
    result_3271566171.val = nimCopy(result_3271566171.val, val_3271566170, NTI3271557128);

  return result_3271566171;

}

function isNone_3271566208(self_3271566210) {
  var result_3271566211 = false;

    result_3271566211 = !(self_3271566210.has);

  return result_3271566211;

}

function get_3271566200(self_3271566202) {
  var result_3271566203 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})});

    if (isNone_3271566208(self_3271566202)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3271566203 = self_3271566202.val;

  return result_3271566203;

}

function nodeReferenceDescription_3271566128(self_3271566129, id_3271566130) {
      var Temporary4;
        var Temporary5;
              var Temporary9;
                var Temporary10;

  var result_3271566136 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})}), has: false});

  BeforeRet: {
    result_3271566136 = nimCopy(result_3271566136, none_3271566137(), NTI3271561711);
    Label1: {
      var c_3271566167 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})});
      var i_3321890953 = 0;
      var L_3321890954 = (self_3271566129.references).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890953 < L_3321890954)) break Label3;
            c_3271566167 = self_3271566129.references[chckIndx(i_3321890953, 0, (self_3271566129.references).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566167.id, id_3271566130)) {
            result_3271566136 = nimCopy(result_3271566136, some_3271566168(c_3271566167), NTI3271561711);
            break BeforeRet;
            }
            
            i_3321890953 = addInt(i_3321890953, 1);
            if (!(((self_3271566129.references).length == L_3321890954))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
      if (!!((self_3271566129.base == null))) Temporary4 = false; else {        var oHEX60gensym117_3271566178 = nodeReferenceDescription_3271566128(self_3271566129.base, id_3271566130);
        if (!isSome_3271566183(oHEX60gensym117_3271566178)) Temporary5 = false; else {          var pd_3271566223 = nimCopy(null, get_3271566200(oHEX60gensym117_3271566178), NTI3271557128);
          Temporary5 = true;        }        Temporary4 = Temporary5;      }    if (Temporary4) {
    result_3271566136 = nimCopy(result_3271566136, some_3271566168(pd_3271566223), NTI3271561711);
    break BeforeRet;
    }
    
    Label6: {
      var inter_3271566230 = null;
      var i_3321890957 = 0;
      var L_3321890958 = (self_3271566129.interfaces).length;
      Label7: {
          Label8: while (true) {
          if (!(i_3321890957 < L_3321890958)) break Label8;
            inter_3271566230 = self_3271566129.interfaces[chckIndx(i_3321890957, 0, (self_3271566129.interfaces).length - 1)];
              if (!!((inter_3271566230 == null))) Temporary9 = false; else {                var oHEX60gensym120_3271566236 = nodeReferenceDescription_3271566128(inter_3271566230, id_3271566130);
                if (!isSome_3271566183(oHEX60gensym120_3271566236)) Temporary10 = false; else {                  var pd_3271566259 = nimCopy(null, get_3271566200(oHEX60gensym120_3271566236), NTI3271557128);
                  Temporary10 = true;                }                Temporary9 = Temporary10;              }            if (Temporary9) {
            result_3271566136 = nimCopy(result_3271566136, some_3271566168(pd_3271566259), NTI3271561711);
            break BeforeRet;
            }
            
            i_3321890957 = addInt(i_3321890957, 1);
            if (!(((self_3271566129.interfaces).length == L_3321890958))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271566136;

}

function none_3271565970() {
  var result_3271565976 = ({val: null});

  return result_3271565976;

}

function rawGet_3271564555(t_3271564558, key_3271564559, hc_3271564560, hc_3271564560_Idx) {
  var result_3271564561 = 0;

  BeforeRet: {
    hc_3271564560[hc_3271564560_Idx] = hash_2046820630(key_3271564559);
    if ((hc_3271564560[hc_3271564560_Idx] == 0)) {
    hc_3271564560[hc_3271564560_Idx] = 314159265;
    }
    
    if (((t_3271564558.data).length == 0)) {
    result_3271564561 = -1;
    break BeforeRet;
    }
    
    var h_3271564612 = (hc_3271564560[hc_3271564560_Idx] & (t_3271564558.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271564558.data[chckIndx(h_3271564612, 0, (t_3271564558.data).length - 1)].Field0)) break Label2;
          if (((t_3271564558.data[chckIndx(h_3271564612, 0, (t_3271564558.data).length - 1)].Field0 == hc_3271564560[hc_3271564560_Idx]) && HEX3DHEX3D_2046820626(t_3271564558.data[chckIndx(h_3271564612, 0, (t_3271564558.data).length - 1)].Field1, key_3271564559))) {
          result_3271564561 = h_3271564612;
          break BeforeRet;
          }
          
          h_3271564612 = nextTry_1308622883(h_3271564612, (t_3271564558.data).length - 1);
        }
    };
    result_3271564561 = subInt(-1, h_3271564612);
  };

  return result_3271564561;

}

function hasKey_3271565812(t_3271565815, key_3271565816) {
  var result_3271565817 = false;

    var hc_3271565818 = [0];
    result_3271565817 = (0 <= rawGet_3271564555(t_3271565815, key_3271565816, hc_3271565818, 0));

  return result_3271565817;

}

function contains_3271565806(t_3271565809, key_3271565810) {
  var result_3271565811 = false;

  BeforeRet: {
    result_3271565811 = hasKey_3271565812(t_3271565809, key_3271565810);
    break BeforeRet;
  };

  return result_3271565811;

}

function some_3271565957(val_3271565959) {
  var result_3271565960 = ({val: null});

    if (!(!((val_3271565959 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3271565960.val = val_3271565959;

  return result_3271565960;

}

function HEX5BHEX5D_3271565878(t_3271565881, key_3271565882) {
  var result_3271565883 = null;
  var result_3271565883_Idx = 0;

    var hcHEX60gensym22_3271565884 = [0];
    var indexHEX60gensym22_3271565891 = rawGet_3271564555(t_3271565881, key_3271565882, hcHEX60gensym22_3271565884, 0);
    if ((0 <= indexHEX60gensym22_3271565891)) {
    result_3271565883 = t_3271565881.data[chckIndx(indexHEX60gensym22_3271565891, 0, (t_3271565881.data).length - 1)]; result_3271565883_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3271565882);
    }
    

  return [result_3271565883, result_3271565883_Idx];

}

function resolveReference_3271565756(self_3271565757, id_3271565758) {
    var Temporary1;

  var result_3271565763 = ({val: null});

  BeforeRet: {
    if (contains_3271565806(self_3271565757.nodes, id_3271565758)) {
    result_3271565763 = nimCopy(result_3271565763, some_3271565957((Temporary1 = HEX5BHEX5D_3271565878(self_3271565757.nodes, id_3271565758), Temporary1)[0][Temporary1[1]]), NTI3271561483);
    break BeforeRet;
    }
    else {
      result_3271565763 = nimCopy(result_3271565763, none_3271565970(), NTI3271561483);
      break BeforeRet;
    }
    
  };

  return result_3271565763;

}

function resolveReference_3271566700(node_3271566701, role_3271566702) {
  var result_3271566704 = ({val: null});

  BeforeRet: {
    result_3271566704 = nimCopy(result_3271566704, none_3271565970(), NTI3271561483);
    if ((node_3271566701.model == null)) {
    break BeforeRet;
    }
    
    Label1: {
      var c_3271566717 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
      var i_3321890961 = 0;
      var L_3321890962 = (node_3271566701.references).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890961 < L_3321890962)) break Label3;
            c_3271566717 = node_3271566701.references[chckIndx(i_3321890961, 0, (node_3271566701.references).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566717.Field0, role_3271566702)) {
            result_3271566704 = nimCopy(result_3271566704, resolveReference_3271565756(node_3271566701.model, c_3271566717.Field1), NTI3271561483);
            break Label1;
            }
            
            i_3321890961 = addInt(i_3321890961, 1);
            if (!(((node_3271566701.references).length == L_3321890962))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271566704;

}

function isSome_3338667398(self_3338667400) {
  var result_3338667401 = false;

    result_3338667401 = !((self_3338667400.val == null));

  return result_3338667401;

}

function isNone_3338667426(self_3338667428) {
  var result_3338667429 = false;

    result_3338667429 = (self_3338667428.val == null);

  return result_3338667429;

}

function get_3338667418(self_3338667420) {
  var result_3338667421 = null;

    if (isNone_3338667426(self_3338667420)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3338667421 = self_3338667420["val"];

  return result_3338667421;

}

function isSome_3271566327(self_3271566329) {
  var result_3271566330 = false;

    result_3271566330 = self_3271566329.has;

  return result_3271566330;

}

function map_3338667461(self_3338667464, callback_3338667466) {
    var Temporary1;

  var result_3338667467 = ({val: [], has: false});

    if (isSome_3271566327(self_3338667464)) {
    Temporary1 = some_2281701410(callback_3338667466(self_3338667464.val));
    }
    else {
    Temporary1 = none_2348810263();
    }
    
    result_3338667467 = nimCopy(result_3338667467, Temporary1, NTI2348810261);

  return result_3338667467;

}

function none_3271566281() {
  var result_3271566288 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0}), has: false});

  return result_3271566288;

}

function some_3271566312(val_3271566314) {
  var result_3271566315 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0}), has: false});

    result_3271566315.has = true;
    result_3271566315.val = nimCopy(result_3271566315.val, val_3271566314, NTI3271557127);

  return result_3271566315;

}

function isNone_3271566352(self_3271566354) {
  var result_3271566355 = false;

    result_3271566355 = !(self_3271566354.has);

  return result_3271566355;

}

function get_3271566344(self_3271566346) {
  var result_3271566347 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0});

    if (isNone_3271566352(self_3271566346)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3271566347 = self_3271566346.val;

  return result_3271566347;

}

function nodeChildDescription_3271566272(self_3271566273, id_3271566274) {
      var Temporary4;
        var Temporary5;
              var Temporary9;
                var Temporary10;

  var result_3271566280 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0}), has: false});

  BeforeRet: {
    result_3271566280 = nimCopy(result_3271566280, none_3271566281(), NTI3271561836);
    Label1: {
      var c_3271566311 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0});
      var i_3321890966 = 0;
      var L_3321890967 = (self_3271566273.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890966 < L_3321890967)) break Label3;
            c_3271566311 = self_3271566273.children[chckIndx(i_3321890966, 0, (self_3271566273.children).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566311.id, id_3271566274)) {
            result_3271566280 = nimCopy(result_3271566280, some_3271566312(c_3271566311), NTI3271561836);
            break BeforeRet;
            }
            
            i_3321890966 = addInt(i_3321890966, 1);
            if (!(((self_3271566273.children).length == L_3321890967))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
      if (!!((self_3271566273.base == null))) Temporary4 = false; else {        var oHEX60gensym124_3271566322 = nodeChildDescription_3271566272(self_3271566273.base, id_3271566274);
        if (!isSome_3271566327(oHEX60gensym124_3271566322)) Temporary5 = false; else {          var pd_3271566367 = nimCopy(null, get_3271566344(oHEX60gensym124_3271566322), NTI3271557127);
          Temporary5 = true;        }        Temporary4 = Temporary5;      }    if (Temporary4) {
    result_3271566280 = nimCopy(result_3271566280, some_3271566312(pd_3271566367), NTI3271561836);
    break BeforeRet;
    }
    
    Label6: {
      var inter_3271566374 = null;
      var i_3321890970 = 0;
      var L_3321890971 = (self_3271566273.interfaces).length;
      Label7: {
          Label8: while (true) {
          if (!(i_3321890970 < L_3321890971)) break Label8;
            inter_3271566374 = self_3271566273.interfaces[chckIndx(i_3321890970, 0, (self_3271566273.interfaces).length - 1)];
              if (!!((inter_3271566374 == null))) Temporary9 = false; else {                var oHEX60gensym127_3271566380 = nodeChildDescription_3271566272(inter_3271566374, id_3271566274);
                if (!isSome_3271566327(oHEX60gensym127_3271566380)) Temporary10 = false; else {                  var pd_3271566403 = nimCopy(null, get_3271566344(oHEX60gensym127_3271566380), NTI3271557127);
                  Temporary10 = true;                }                Temporary9 = Temporary10;              }            if (Temporary9) {
            result_3271566280 = nimCopy(result_3271566280, some_3271566312(pd_3271566403), NTI3271561836);
            break BeforeRet;
            }
            
            i_3321890970 = addInt(i_3321890970, 1);
            if (!(((self_3271566273.interfaces).length == L_3321890971))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271566280;

}

function buildCellDefault_3338667251(self_3338667252, node_3338667253, useDefaultRecursive_3338667254) {
    
function HEX3Aanonymous_3338667258() {
                
function HEX3Aanonymous_3338667268(decs_3338667279) {
                  var result_3338667282 = [];

                    result_3338667282 = nimCopy(null, decs_3338667279.role, NTI33554449);

                  return result_3338667282;

                }
                
function HEX3Aanonymous_3338667333(decs_3338667344) {
                  var result_3338667347 = [];

                    result_3338667347 = nimCopy(null, decs_3338667344.role, NTI33554449);

                  return result_3338667347;

                }
                  var Temporary7;
                
function HEX3Aanonymous_3338667445(decs_3338667456) {
                  var result_3338667459 = [];

                    result_3338667459 = nimCopy(null, decs_3338667456.role, NTI33554449);

                  return result_3338667459;

                }

        add_3338666132(cell_3338667257, {node: node_3338667253, text: name_3271557410(class_3338667256), disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3338667257, {node: node_3338667253, text: [123], increaseIndentAfter: true, disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        var hasAnyChildren_3338667259 = false;
        Label1: {
          var prop_3338667263 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({kind: 0, intValue: 0, stringValue: [], boolValue: false})};
          var i_3321890929 = 0;
          var L_3321890930 = (node_3338667253.properties).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890929 < L_3321890930)) break Label3;
                prop_3338667263 = node_3338667253.properties[chckIndx(i_3321890929, 0, (node_3338667253.properties).length - 1)];
                hasAnyChildren_3338667259 = true;
                var name_3338667324 = get_2348810295(map_3338667284(propertyDescription_3271566416(class_3338667256, prop_3338667263.Field0), HEX3Aanonymous_3338667268), HEX24_2046820617(prop_3338667263.Field0));
                add_3338666132(cell_3338667257, {node: node_3338667253, text: nimCopy(null, name_3338667324, NTI33554449), style: {onNewLine: true, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false, noSpaceRight: false}, disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
                add_3338666132(cell_3338667257, {node: node_3338667253, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
                add_3338666132(cell_3338667257, {id: newId_2046820597(), node: node_3338667253, property: nimCopy(null, prop_3338667263.Field0, NTI2046820355), m_type: NTI3338665996, parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
                i_3321890929 = addInt(i_3321890929, 1);
                if (!(((node_3338667253.properties).length == L_3321890930))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        Label4: {
          var prop_3338667328 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
          var i_3321890933 = 0;
          var L_3321890934 = (node_3338667253.references).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890933 < L_3321890934)) break Label6;
                prop_3338667328 = node_3338667253.references[chckIndx(i_3321890933, 0, (node_3338667253.references).length - 1)];
                hasAnyChildren_3338667259 = true;
                var name_3338667389 = get_2348810295(map_3338667349(nodeReferenceDescription_3271566128(class_3338667256, prop_3338667328.Field0), HEX3Aanonymous_3338667333), HEX24_2046820617(prop_3338667328.Field0));
                add_3338666132(cell_3338667257, {node: node_3338667253, text: nimCopy(null, name_3338667389, NTI33554449), style: {onNewLine: true, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false, noSpaceRight: false}, disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
                add_3338666132(cell_3338667257, {node: node_3338667253, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
                var nodeRefCell_3338667390 = {id: newId_2046820597(), node: node_3338667253, reference: nimCopy(null, prop_3338667328.Field0, NTI2046820355), property: nimCopy(null, IdINamedName_2986344492, NTI2046820355), m_type: NTI3338665997, child: null, parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
                  var oHEX60gensym55_3338667393 = resolveReference_3271566700(node_3338667253, prop_3338667328.Field0);
                  if (!isSome_3338667398(oHEX60gensym55_3338667393)) Temporary7 = false; else {                    var targetNode_3338667435 = get_3338667418(oHEX60gensym55_3338667393);
                    Temporary7 = true;                  }                if (Temporary7) {
                nodeRefCell_3338667390.child = {id: newId_2046820597(), node: targetNode_3338667435, property: nimCopy(null, IdINamedName_2986344492, NTI2046820355), m_type: NTI3338665996, parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
                }
                
                add_3338666132(cell_3338667257, nodeRefCell_3338667390);
                i_3321890933 = addInt(i_3321890933, 1);
                if (!(((node_3338667253.references).length == L_3321890934))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        Label8: {
          var prop_3338667439 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
          var i_3321890941 = 0;
          var L_3321890942 = (node_3338667253.childLists).length;
          Label9: {
              Label10: while (true) {
              if (!(i_3321890941 < L_3321890942)) break Label10;
                prop_3338667439 = node_3338667253.childLists[chckIndx(i_3321890941, 0, (node_3338667253.childLists).length - 1)];
                hasAnyChildren_3338667259 = true;
                var children_3338667440 = children_3271566626(node_3338667253, prop_3338667439.Field0);
                var name_3338667501 = get_2348810295(map_3338667461(nodeChildDescription_3271566272(class_3338667256, prop_3338667439.Field0), HEX3Aanonymous_3338667445), HEX24_2046820617(prop_3338667439.Field0));
                add_3338666132(cell_3338667257, {node: node_3338667253, text: nimCopy(null, name_3338667501, NTI33554449), style: {onNewLine: true, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false, noSpaceRight: false}, disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
                add_3338666132(cell_3338667257, {node: node_3338667253, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, disableEditing: true, increaseIndentAfter: (1 < (children_3338667440).length), m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
                var hasChildren_3338667505 = false;
                Label11: {
                  var i_3338667511 = 0;
                  var c_3338667512 = null;
                  var i_3321890938 = 0;
                  var L_3321890939 = (children_3338667440).length;
                  Label12: {
                      Label13: while (true) {
                      if (!(i_3321890938 < L_3321890939)) break Label13;
                        i_3338667511 = i_3321890938;
                        c_3338667512 = children_3338667440[chckIndx(i_3321890938, 0, (children_3338667440).length - 1)];
                        var childCell_3338667513 = buildCell_3338667247(self_3338667252, c_3338667512, useDefaultRecursive_3338667254);
                        if ((childCell_3338667513.style == null)) {
                        childCell_3338667513.style = {onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false, noSpaceRight: false};
                        }
                        
                        childCell_3338667513.style.onNewLine = (1 < (children_3338667440).length);
                        if (((1 < (children_3338667440).length) && (i_3338667511 == (children_3338667440).length - 1))) {
                        childCell_3338667513.decreaseIndentAfter = true;
                        }
                        
                        add_3338666132(cell_3338667257, childCell_3338667513);
                        hasChildren_3338667505 = true;
                        i_3321890938 = addInt(i_3321890938, 1);
                        if (!(((children_3338667440).length == L_3321890939))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                if (!(hasChildren_3338667505)) {
                add_3338666132(cell_3338667257, {node: node_3338667253, role: nimCopy(null, prop_3338667439.Field0, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
                }
                
                i_3321890941 = addInt(i_3321890941, 1);
                if (!(((node_3338667253.childLists).length == L_3321890942))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666132(cell_3338667257, {node: node_3338667253, text: [125], decreaseIndentBefore: true, style: {onNewLine: hasAnyChildren_3338667259, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false, noSpaceRight: false}, disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});

      
    }

  var result_3338667255 = null;

  BeforeRet: {
    var class_3338667256 = nodeClass_3271557904(node_3338667253);
    var cell_3338667257 = {id: newId_2046820597(), node: node_3338667253, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3338667257.fillChildren = HEX3Aanonymous_3338667258;
    result_3338667255 = cell_3338667257;
    break BeforeRet;
  };

  return result_3338667255;

}

function buildCell_3338667247(self_3338667248, node_3338667249, useDefault_3338667250) {
      var Temporary1;
        var Temporary2;

  var result_3338667624 = null;

  BeforeRet: {
    var class_3338667625 = nodeClass_3271557904(node_3338667249);
    if ((class_3338667625 == null)) {
    var fmtRes_3338667634 = [mnewString(0)];
    fmtRes_3338667634[0].push.apply(fmtRes_3338667634[0], [85,110,107,110,111,119,110,32,99,108,97,115,115,32]);;
    formatValue_3036676344(fmtRes_3338667634, 0, node_3338667249.class, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3338667634[0], NTI33554449)]);
    result_3338667624 = {node: node_3338667249, m_type: NTI3271557164, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    break BeforeRet;
    }
    
      if (!!(useDefault_3338667250)) Temporary1 = false; else {        var oHEX60gensym62_3338667642 = findBuilder_3338666938(self_3338667248, class_3338667625, idNone_2046820633());
        if (!isSome_3338667647(oHEX60gensym62_3338667642)) Temporary2 = false; else {          var builder_3338667693 = get_3338667667(oHEX60gensym62_3338667642);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    result_3338667624 = builder_3338667693(self_3338667248, node_3338667249);
    fill_3338666848(result_3338667624);
    }
    else {
      if (!(useDefault_3338667250)) {
      var fmtRes_3338667699 = [mnewString(0)];
      fmtRes_3338667699[0].push.apply(fmtRes_3338667699[0], [85,110,107,110,111,119,110,32,98,117,105,108,100,101,114,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_3338667699, 0, name_3271557410(class_3338667625), []);
      fmtRes_3338667699[0].push.apply(fmtRes_3338667699[0], [44,32,117,115,105,110,103,32,100,101,102,97,117,108,116]);;
      log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3338667699[0], NTI33554449)]);
      }
      
      result_3338667624 = buildCellDefault_3338667251(self_3338667248, node_3338667249, useDefault_3338667250);
      fill_3338666848(result_3338667624);
    }
    
  };

  return result_3338667624;

}

function buildChildren_3338667723(builder_3338667724, node_3338667725, role_3338667726, layout_3338667727, isVisible_3338667730, separatorFunc_3338667733, placeholderFunc_3338667738) {
  var result_3338667739 = null;

    var children_3338667740 = children_3271566626(node_3338667725, role_3338667726);
    if (((1 < (children_3338667740).length) || (((children_3338667740).length == 0) && (placeholderFunc_3338667738 == null)))) {
    var cell_3338667750 = {id: newId_2046820597(), node: node_3338667725, layout: {kind: layout_3338667727}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    Label1: {
      var i_3338667756 = 0;
      var c_3338667757 = null;
      var colontmp__3321890911 = [];
      colontmp__3321890911 = children_3271566626(node_3338667725, role_3338667726);
      var i_3321890913 = 0;
      var L_3321890914 = (colontmp__3321890911).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890913 < L_3321890914)) break Label3;
            i_3338667756 = i_3321890913;
            c_3338667757 = colontmp__3321890911[chckIndx(i_3321890913, 0, (colontmp__3321890911).length - 1)];
            if (((0 < i_3338667756) && !((separatorFunc_3338667733 == null)))) {
            add_3338666132(cell_3338667750, separatorFunc_3338667733(builder_3338667724));
            }
            
            add_3338666132(cell_3338667750, buildCell_3338667247(builder_3338667724, c_3338667757, false));
            i_3321890913 = addInt(i_3321890913, 1);
            if (!(((colontmp__3321890911).length == L_3321890914))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3338667739 = cell_3338667750;
    }
    else {
    if (((children_3338667740).length == 1)) {
    result_3338667739 = buildCell_3338667247(builder_3338667724, children_3338667740[chckIndx(0, 0, (children_3338667740).length - 1)], false);
    }
    else {
      result_3338667739 = placeholderFunc_3338667738(builder_3338667724, node_3338667725, role_3338667726);
    }
    }
    result_3338667739.isVisible = isVisible_3338667730;

  return result_3338667739;

}

function buildDefaultPlaceholder_3338667718(builder_3338667719, node_3338667720, role_3338667721) {
  var result_3338667722 = null;

  BeforeRet: {
    result_3338667722 = {id: newId_2046820597(), node: node_3338667720, role: nimCopy(null, role_3338667721, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    break BeforeRet;
  };

  return result_3338667722;

}

function hasChild_3271566604(node_3271566605, role_3271566606) {
  var result_3271566607 = false;

  BeforeRet: {
    result_3271566607 = false;
    Label1: {
      var c_3271566611 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
      var i_3321890975 = 0;
      var L_3321890976 = (node_3271566605.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890975 < L_3321890976)) break Label3;
            c_3271566611 = node_3271566605.childLists[chckIndx(i_3321890975, 0, (node_3271566605.childLists).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566611.Field0, role_3271566606)) {
            result_3271566607 = (0 < (c_3271566611.Field1).length);
            break BeforeRet;
            }
            
            i_3321890975 = addInt(i_3321890975, 1);
            if (!(((node_3271566605.childLists).length == L_3321890976))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271566607;

}

function mustRehash_3271558493(t_3271558495) {
  var result_3271558496 = false;

    if (!((t_3271558495.counter < (t_3271558495.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271558496 = ((mulInt((t_3271558495.data).length, 2) < mulInt(t_3271558495.counter, 3)) || (subInt((t_3271558495.data).length, t_3271558495.counter) < 4));

  return result_3271558496;

}

function rawInsert_3271558942(t_3271558946, data_3271558947, data_3271558947_Idx, key_3271558948, val_3271558949, hc_3271558950, h_3271558951) {
    data_3271558947[data_3271558947_Idx][chckIndx(h_3271558951, 0, (data_3271558947[data_3271558947_Idx]).length - 1)].Field1 = nimCopy(data_3271558947[data_3271558947_Idx][chckIndx(h_3271558951, 0, (data_3271558947[data_3271558947_Idx]).length - 1)].Field1, key_3271558948, NTI2046820355);
    data_3271558947[data_3271558947_Idx][chckIndx(h_3271558951, 0, (data_3271558947[data_3271558947_Idx]).length - 1)].Field2 = val_3271558949;
    data_3271558947[data_3271558947_Idx][chckIndx(h_3271558951, 0, (data_3271558947[data_3271558947_Idx]).length - 1)].Field0 = hc_3271558950;

  
}

function enlarge_3271558648(t_3271558651) {
    var n_3271558654 = [];
    n_3271558654 = new Array(chckRange(mulInt((t_3271558651.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271558651.data).length, 2), 0, 2147483647) ; ++i) { n_3271558654[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3271558651.data; t_3271558651.data = n_3271558654; n_3271558654 = Temporary1;    Label2: {
      var i_3271558718 = 0;
      var colontmp__3321891004 = 0;
      colontmp__3321891004 = (n_3271558654).length - 1;
      var res_3321891005 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_3321891005 <= colontmp__3321891004)) break Label4;
            i_3271558718 = res_3321891005;
            var eh_3271558772 = n_3271558654[chckIndx(i_3271558718, 0, (n_3271558654).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271558772)) {
            var j_3271558776 = (eh_3271558772 & (t_3271558651.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271558651.data[chckIndx(j_3271558776, 0, (t_3271558651.data).length - 1)].Field0)) break Label6;
                  j_3271558776 = nextTry_1308622883(j_3271558776, (t_3271558651.data).length - 1);
                }
            };
            rawInsert_3271558942(t_3271558651, t_3271558651, "data", n_3271558654[chckIndx(i_3271558718, 0, (n_3271558654).length - 1)].Field1, n_3271558654[chckIndx(i_3271558718, 0, (n_3271558654).length - 1)].Field2, eh_3271558772, j_3271558776);
            }
            
            res_3321891005 = addInt(res_3321891005, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271559111(t_3271559114, key_3271559115, hc_3271559116) {
  var result_3271559117 = 0;

  BeforeRet: {
    if (((t_3271559114.data).length == 0)) {
    result_3271559117 = -1;
    break BeforeRet;
    }
    
    var h_3271559168 = (hc_3271559116 & (t_3271559114.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271559114.data[chckIndx(h_3271559168, 0, (t_3271559114.data).length - 1)].Field0)) break Label2;
          if (((t_3271559114.data[chckIndx(h_3271559168, 0, (t_3271559114.data).length - 1)].Field0 == hc_3271559116) && HEX3DHEX3D_2046820626(t_3271559114.data[chckIndx(h_3271559168, 0, (t_3271559114.data).length - 1)].Field1, key_3271559115))) {
          result_3271559117 = h_3271559168;
          break BeforeRet;
          }
          
          h_3271559168 = nextTry_1308622883(h_3271559168, (t_3271559114.data).length - 1);
        }
    };
    result_3271559117 = subInt(-1, h_3271559168);
  };

  return result_3271559117;

}

function HEX5BHEX5DHEX3D_3271558087(t_3271558090, key_3271558091, val_3271558092) {
    if (((t_3271558090.data).length == 0)) {
    var correctSizeHEX60gensym34_3271558142 = slotsNeeded_1308622891(32);
    t_3271558090.counter = 0;
    t_3271558090.data = new Array(chckRange(correctSizeHEX60gensym34_3271558142, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym34_3271558142, 0, 2147483647) ; ++i) { t_3271558090.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3271558147 = [0];
    var index_3271558386 = rawGet_3271558148(t_3271558090, key_3271558091, hc_3271558147, 0);
    if ((0 <= index_3271558386)) {
    t_3271558090.data[chckIndx(index_3271558386, 0, (t_3271558090.data).length - 1)].Field2 = val_3271558092;
    }
    else {
      if (((t_3271558090.data).length == 0)) {
      var correctSizeHEX60gensym39_3271558488 = slotsNeeded_1308622891(32);
      t_3271558090.counter = 0;
      t_3271558090.data = new Array(chckRange(correctSizeHEX60gensym39_3271558488, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_3271558488, 0, 2147483647) ; ++i) { t_3271558090.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3271558493(t_3271558090)) {
      enlarge_3271558648(t_3271558090);
      index_3271558386 = rawGetKnownHC_3271559111(t_3271558090, key_3271558091, hc_3271558147[0]);
      }
      
      index_3271558386 = subInt(-1, index_3271558386);
      rawInsert_3271558942(t_3271558090, t_3271558090, "data", key_3271558091, val_3271558092, hc_3271558147[0], index_3271558386);
      t_3271558090.counter = addInt(t_3271558090.counter, 1);
    }
    

  
}

function rawGet_3271559407(t_3271559410, key_3271559411, hc_3271559412, hc_3271559412_Idx) {
  var result_3271559413 = 0;

  BeforeRet: {
    hc_3271559412[hc_3271559412_Idx] = hash_2046820630(key_3271559411);
    if ((hc_3271559412[hc_3271559412_Idx] == 0)) {
    hc_3271559412[hc_3271559412_Idx] = 314159265;
    }
    
    if (((t_3271559410.data).length == 0)) {
    result_3271559413 = -1;
    break BeforeRet;
    }
    
    var h_3271559465 = (hc_3271559412[hc_3271559412_Idx] & (t_3271559410.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271559410.data[chckIndx(h_3271559465, 0, (t_3271559410.data).length - 1)].Field0)) break Label2;
          if (((t_3271559410.data[chckIndx(h_3271559465, 0, (t_3271559410.data).length - 1)].Field0 == hc_3271559412[hc_3271559412_Idx]) && HEX3DHEX3D_2046820626(t_3271559410.data[chckIndx(h_3271559465, 0, (t_3271559410.data).length - 1)].Field1, key_3271559411))) {
          result_3271559413 = h_3271559465;
          break BeforeRet;
          }
          
          h_3271559465 = nextTry_1308622883(h_3271559465, (t_3271559410.data).length - 1);
        }
    };
    result_3271559413 = subInt(-1, h_3271559465);
  };

  return result_3271559413;

}

function hasKey_3271559400(t_3271559403, key_3271559404) {
  var result_3271559405 = false;

    var hc_3271559406 = [0];
    result_3271559405 = (0 <= rawGet_3271559407(t_3271559403, key_3271559404, hc_3271559406, 0));

  return result_3271559405;

}

function contains_3271559394(t_3271559397, key_3271559398) {
  var result_3271559399 = false;

  BeforeRet: {
    result_3271559399 = hasKey_3271559400(t_3271559397, key_3271559398);
    break BeforeRet;
  };

  return result_3271559399;

}

function mustRehash_3271559863(t_3271559865) {
  var result_3271559866 = false;

    if (!((t_3271559865.counter < (t_3271559865.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271559866 = ((mulInt((t_3271559865.data).length, 2) < mulInt(t_3271559865.counter, 3)) || (subInt((t_3271559865.data).length, t_3271559865.counter) < 4));

  return result_3271559866;

}

function rawInsert_3271560312(t_3271560316, data_3271560317, data_3271560317_Idx, key_3271560318, val_3271560319, hc_3271560320, h_3271560321) {
    data_3271560317[data_3271560317_Idx][chckIndx(h_3271560321, 0, (data_3271560317[data_3271560317_Idx]).length - 1)].Field1 = nimCopy(data_3271560317[data_3271560317_Idx][chckIndx(h_3271560321, 0, (data_3271560317[data_3271560317_Idx]).length - 1)].Field1, key_3271560318, NTI2046820355);
    data_3271560317[data_3271560317_Idx][chckIndx(h_3271560321, 0, (data_3271560317[data_3271560317_Idx]).length - 1)].Field2 = nimCopy(null, val_3271560319, NTI3271557208);
    data_3271560317[data_3271560317_Idx][chckIndx(h_3271560321, 0, (data_3271560317[data_3271560317_Idx]).length - 1)].Field0 = hc_3271560320;

  
}

function enlarge_3271560018(t_3271560021) {
    var n_3271560024 = [];
    n_3271560024 = new Array(chckRange(mulInt((t_3271560021.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271560021.data).length, 2), 0, 2147483647) ; ++i) { n_3271560024[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: []}; }    var Temporary1 = t_3271560021.data; t_3271560021.data = n_3271560024; n_3271560024 = Temporary1;    Label2: {
      var i_3271560088 = 0;
      var colontmp__3321891011 = 0;
      colontmp__3321891011 = (n_3271560024).length - 1;
      var res_3321891012 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_3321891012 <= colontmp__3321891011)) break Label4;
            i_3271560088 = res_3321891012;
            var eh_3271560142 = n_3271560024[chckIndx(i_3271560088, 0, (n_3271560024).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271560142)) {
            var j_3271560146 = (eh_3271560142 & (t_3271560021.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271560021.data[chckIndx(j_3271560146, 0, (t_3271560021.data).length - 1)].Field0)) break Label6;
                  j_3271560146 = nextTry_1308622883(j_3271560146, (t_3271560021.data).length - 1);
                }
            };
            rawInsert_3271560312(t_3271560021, t_3271560021, "data", n_3271560024[chckIndx(i_3271560088, 0, (n_3271560024).length - 1)].Field1, n_3271560024[chckIndx(i_3271560088, 0, (n_3271560024).length - 1)].Field2, eh_3271560142, j_3271560146);
            }
            
            res_3321891012 = addInt(res_3321891012, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271560481(t_3271560484, key_3271560485, hc_3271560486) {
  var result_3271560487 = 0;

  BeforeRet: {
    if (((t_3271560484.data).length == 0)) {
    result_3271560487 = -1;
    break BeforeRet;
    }
    
    var h_3271560538 = (hc_3271560486 & (t_3271560484.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271560484.data[chckIndx(h_3271560538, 0, (t_3271560484.data).length - 1)].Field0)) break Label2;
          if (((t_3271560484.data[chckIndx(h_3271560538, 0, (t_3271560484.data).length - 1)].Field0 == hc_3271560486) && HEX3DHEX3D_2046820626(t_3271560484.data[chckIndx(h_3271560538, 0, (t_3271560484.data).length - 1)].Field1, key_3271560485))) {
          result_3271560487 = h_3271560538;
          break BeforeRet;
          }
          
          h_3271560538 = nextTry_1308622883(h_3271560538, (t_3271560484.data).length - 1);
        }
    };
    result_3271560487 = subInt(-1, h_3271560538);
  };

  return result_3271560487;

}

function HEX5BHEX5DHEX3D_3271559690(t_3271559693, key_3271559694, val_3271559695) {
    if (((t_3271559693.data).length == 0)) {
    var correctSizeHEX60gensym51_3271559744 = slotsNeeded_1308622891(32);
    t_3271559693.counter = 0;
    t_3271559693.data = new Array(chckRange(correctSizeHEX60gensym51_3271559744, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym51_3271559744, 0, 2147483647) ; ++i) { t_3271559693.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: []}; }    }
    
    var hc_3271559749 = [0];
    var index_3271559756 = rawGet_3271559407(t_3271559693, key_3271559694, hc_3271559749, 0);
    if ((0 <= index_3271559756)) {
    t_3271559693.data[chckIndx(index_3271559756, 0, (t_3271559693.data).length - 1)].Field2 = nimCopy(null, val_3271559695, NTI3271557208);
    }
    else {
      if (((t_3271559693.data).length == 0)) {
      var correctSizeHEX60gensym54_3271559858 = slotsNeeded_1308622891(32);
      t_3271559693.counter = 0;
      t_3271559693.data = new Array(chckRange(correctSizeHEX60gensym54_3271559858, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym54_3271559858, 0, 2147483647) ; ++i) { t_3271559693.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: []}; }      }
      
      if (mustRehash_3271559863(t_3271559693)) {
      enlarge_3271560018(t_3271559693);
      index_3271559756 = rawGetKnownHC_3271560481(t_3271559693, key_3271559694, hc_3271559749[0]);
      }
      
      index_3271559756 = subInt(-1, index_3271559756);
      rawInsert_3271560312(t_3271559693, t_3271559693, "data", key_3271559694, val_3271559695, hc_3271559749[0], index_3271559756);
      t_3271559693.counter = addInt(t_3271559693.counter, 1);
    }
    

  
}

function HEX5BHEX5D_3271560772(t_3271560775, key_3271560776) {
  var result_3271560777 = null;
  var result_3271560777_Idx = 0;

    var hcHEX60gensym22_3271560778 = [0];
    var indexHEX60gensym22_3271560785 = rawGet_3271559407(t_3271560775, key_3271560776, hcHEX60gensym22_3271560778, 0);
    if ((0 <= indexHEX60gensym22_3271560785)) {
    result_3271560777 = t_3271560775.data[chckIndx(indexHEX60gensym22_3271560785, 0, (t_3271560775.data).length - 1)]; result_3271560777_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3271560776);
    }
    

  return [result_3271560777, result_3271560777_Idx];

}

function newLanguage_3271558016(id_3271558017, classes_3271558018, builder_3271558019) {
            var Temporary4;
                    var Temporary8;

  var result_3271558020 = null;

    result_3271558020 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), version: 0, classes: ({data: [], counter: 0}), childClasses: ({data: [], counter: 0}), builder: null});
    result_3271558020.id = nimCopy(result_3271558020.id, id_3271558017, NTI2046820355);
    Label1: {
      var c_3271558046 = null;
      var i_3321890999 = 0;
      var L_3321891000 = (classes_3271558018).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890999 < L_3321891000)) break Label3;
            c_3271558046 = classes_3271558018[chckIndx(i_3321890999, 0, (classes_3271558018).length - 1)];
            HEX5BHEX5DHEX3D_3271558087(result_3271558020.classes, c_3271558046.id, c_3271558046);
            if (!((c_3271558046.base == null))) {
            if (!(contains_3271559394(result_3271558020.childClasses, c_3271558046.base.id))) {
            HEX5BHEX5DHEX3D_3271559690(result_3271558020.childClasses, c_3271558046.base.id, []);
            }
            
            (Temporary4 = HEX5BHEX5D_3271560772(result_3271558020.childClasses, c_3271558046.base.id), Temporary4)[0][Temporary4[1]].push(c_3271558046);;
            }
            
            Label5: {
              var i_3271560858 = null;
              var i_3321890996 = 0;
              var L_3321890997 = (c_3271558046.interfaces).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_3321890996 < L_3321890997)) break Label7;
                    i_3271560858 = c_3271558046.interfaces[chckIndx(i_3321890996, 0, (c_3271558046.interfaces).length - 1)];
                    if (!(contains_3271559394(result_3271558020.childClasses, i_3271560858.id))) {
                    HEX5BHEX5DHEX3D_3271559690(result_3271558020.childClasses, i_3271560858.id, []);
                    }
                    
                    (Temporary8 = HEX5BHEX5D_3271560772(result_3271558020.childClasses, i_3271560858.id), Temporary8)[0][Temporary8[1]].push(c_3271558046);;
                    i_3321890996 = addInt(i_3321890996, 1);
                    if (!(((c_3271558046.interfaces).length == L_3321890997))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_3321890999 = addInt(i_3321890999, 1);
            if (!(((classes_3271558018).length == L_3321891000))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3271558020.builder = builder_3271558019;

  return result_3271558020;

}

function clear_3305112210(s_3305112212) {
    s_3305112212.counter = 0;
    Label1: {
      var i_3305112276 = 0;
      var colontmp__3321891020 = 0;
      colontmp__3321891020 = (s_3305112212.data).length;
      var i_3321891021 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_3321891021 < colontmp__3321891020)) break Label3;
            i_3305112276 = i_3321891021;
            s_3305112212.data[chckIndx(i_3305112276, 0, (s_3305112212.data).length - 1)].Field0 = 0;
            s_3305112212.data[chckIndx(i_3305112276, 0, (s_3305112212.data).length - 1)].Field1 = 0;
            i_3321891021 = addInt(i_3321891021, 1);
          }
      };
    };

  
}

function nsuToLowerAsciiChar(c_855638100) {
  var result_855638101 = 0;

    if ((ConstSet239[c_855638100] != undefined)) {
    result_855638101 = (c_855638100 ^ 32);
    }
    else {
      result_855638101 = c_855638100;
    }
    

  return result_855638101;

}

function nsuToLowerAsciiStr(s_855638110) {
  var result_855638111 = [];

    result_855638111 = nimCopy(null, mnewString(chckRange((s_855638110).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_855638117 = 0;
      var colontmp__3321891069 = 0;
      colontmp__3321891069 = subInt((s_855638110).length, 1);
      var res_3321891070 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3321891070 <= colontmp__3321891069)) break Label3;
            iHEX60gensym7_855638117 = res_3321891070;
            result_855638111[chckIndx(iHEX60gensym7_855638117, 0, (result_855638111).length - 1)] = nsuToLowerAsciiChar(s_855638110[chckIndx(iHEX60gensym7_855638117, 0, (s_855638110).length - 1)]);
            res_3321891070 = addInt(res_3321891070, 1);
          }
      };
    };

  return result_855638111;

}

function escapeString_3305111635(v_3305111636, q_3305111637) {
  var result_3305111638 = [];

    result_3305111638.push.apply(result_3305111638, q_3305111637);;
    Label1: {
      var c_3305111639 = 0;
      var i_3321891065 = 0;
      var L_3321891066 = (v_3305111636).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321891065 < L_3321891066)) break Label3;
            c_3305111639 = v_3305111636[chckIndx(i_3321891065, 0, (v_3305111636).length - 1)];
            switch (c_3305111639) {
            case 0:
              result_3305111638.push.apply(result_3305111638, [92,48]);;
              break;
            case 92:
              result_3305111638.push.apply(result_3305111638, [92,92]);;
              break;
            case 8:
              result_3305111638.push.apply(result_3305111638, [92,98]);;
              break;
            case 12:
              result_3305111638.push.apply(result_3305111638, [92,102]);;
              break;
            case 10:
              result_3305111638.push.apply(result_3305111638, [92,110]);;
              break;
            case 13:
              result_3305111638.push.apply(result_3305111638, [92,114]);;
              break;
            case 9:
              result_3305111638.push.apply(result_3305111638, [92,116]);;
              break;
            default: 
              if ((128 < c_3305111639)) {
              result_3305111638.push.apply(result_3305111638, ([92,120] || []).concat(nsuToLowerAsciiStr(toHex_855640046(c_3305111639, 2)) || []));;
              }
              
              addChar(result_3305111638, c_3305111639);;
              break;
            }
            i_3321891065 = addInt(i_3321891065, 1);
            if (!(((v_3305111636).length == L_3321891066))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_3305111638.push.apply(result_3305111638, q_3305111637);;

  return result_3305111638;

}

function textLine_3305111840(node_3305111841) {
  var result_3305111842 = [];

    switch (node_3305111841.kind) {
    case 3:
    case 17:
    case 18:
    case 9:
    case 4:
    case 8:
    case 5:
      result_3305111842.push.apply(result_3305111842, node_3305111841.value);;
      break;
    case 6:
    case 7:
      result_3305111842.push.apply(result_3305111842, escapeString_3305111635(node_3305111841.value, [34]));;
      break;
    case 10:
    case 11:
      if ((node_3305111841.kind == 10)) {
      result_3305111842.push.apply(result_3305111842, [64]);;
      }
      
      result_3305111842.push.apply(result_3305111842, [91]);;
      Label1: {
        var i_3305111881 = 0;
        var e_3305111882 = null;
        var i_3321891049 = 0;
        var L_3321891050 = (node_3305111841.nodes).length;
        Label2: {
            Label3: while (true) {
            if (!(i_3321891049 < L_3321891050)) break Label3;
              i_3305111881 = i_3321891049;
              e_3305111882 = node_3305111841.nodes[chckIndx(i_3321891049, 0, (node_3305111841.nodes).length - 1)];
              if (!((i_3305111881 == 0))) {
              result_3305111842.push.apply(result_3305111842, [44,32]);;
              }
              
              result_3305111842.push.apply(result_3305111842, textLine_3305111840(e_3305111882));;
              i_3321891049 = addInt(i_3321891049, 1);
              if (!(((node_3305111841.nodes).length == L_3321891050))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3305111842.push.apply(result_3305111842, [93]);;
      break;
    case 13:
      result_3305111842.push.apply(result_3305111842, [123]);;
      Label4: {
        var i_3305111888 = 0;
        var e_3305111889 = null;
        var i_3321891053 = 0;
        var L_3321891054 = (node_3305111841.nodes).length;
        Label5: {
            Label6: while (true) {
            if (!(i_3321891053 < L_3321891054)) break Label6;
              i_3305111888 = i_3321891053;
              e_3305111889 = node_3305111841.nodes[chckIndx(i_3321891053, 0, (node_3305111841.nodes).length - 1)];
              if (!((i_3305111888 == 0))) {
              result_3305111842.push.apply(result_3305111842, [44,32]);;
              }
              
              result_3305111842.push.apply(result_3305111842, textLine_3305111840(e_3305111889));;
              i_3321891053 = addInt(i_3321891053, 1);
              if (!(((node_3305111841.nodes).length == L_3321891054))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3305111842.push.apply(result_3305111842, [125]);;
      break;
    case 14:
    case 12:
      result_3305111842.push.apply(result_3305111842, node_3305111841.value);;
      result_3305111842.push.apply(result_3305111842, [40]);;
      Label7: {
        var i_3305111895 = 0;
        var e_3305111896 = null;
        var i_3321891057 = 0;
        var L_3321891058 = (node_3305111841.nodes).length;
        Label8: {
            Label9: while (true) {
            if (!(i_3321891057 < L_3321891058)) break Label9;
              i_3305111895 = i_3321891057;
              e_3305111896 = node_3305111841.nodes[chckIndx(i_3321891057, 0, (node_3305111841.nodes).length - 1)];
              if (!((i_3305111895 == 0))) {
              result_3305111842.push.apply(result_3305111842, [44,32]);;
              }
              
              result_3305111842.push.apply(result_3305111842, textLine_3305111840(e_3305111896));;
              i_3321891057 = addInt(i_3321891057, 1);
              if (!(((node_3305111841.nodes).length == L_3321891058))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3305111842.push.apply(result_3305111842, [41]);;
      break;
    case 1:
      result_3305111842.push.apply(result_3305111842, node_3305111841.value);;
      Label10: {
        var i_3305111902 = 0;
        var e_3305111903 = null;
        var i_3321891061 = 0;
        var L_3321891062 = (node_3305111841.nodes).length;
        Label11: {
            Label12: while (true) {
            if (!(i_3321891061 < L_3321891062)) break Label12;
              i_3305111902 = i_3321891061;
              e_3305111903 = node_3305111841.nodes[chckIndx(i_3321891061, 0, (node_3305111841.nodes).length - 1)];
              if (!((i_3305111902 == 0))) {
              result_3305111842.push.apply(result_3305111842, [32]);;
              }
              
              result_3305111842.push.apply(result_3305111842, textLine_3305111840(e_3305111903));;
              i_3321891061 = addInt(i_3321891061, 1);
              if (!(((node_3305111841.nodes).length == L_3321891062))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 15:
      result_3305111842.push.apply(result_3305111842, textLine_3305111840(node_3305111841.nodes[chckIndx(0, 0, (node_3305111841.nodes).length - 1)]));;
      result_3305111842.push.apply(result_3305111842, [61]);;
      result_3305111842.push.apply(result_3305111842, textLine_3305111840(node_3305111841.nodes[chckIndx(1, 0, (node_3305111841.nodes).length - 1)]));;
      break;
    case 16:
      result_3305111842.push.apply(result_3305111842, textLine_3305111840(node_3305111841.nodes[chckIndx(0, 0, (node_3305111841.nodes).length - 1)]));;
      result_3305111842.push.apply(result_3305111842, [58,32]);;
      result_3305111842.push.apply(result_3305111842, textLine_3305111840(node_3305111841.nodes[chckIndx(1, 0, (node_3305111841.nodes).length - 1)]));;
      break;
    default: 
      result_3305111842.push.apply(result_3305111842, node_3305111841.value);;
      break;
    }

  return result_3305111842;

}

function printStr_3305111906(c_3305111907, s_3305111908) {
    line_3305111569[0].push.apply(line_3305111569[0], s_3305111908);;

  
}

function printStr_3305111904(s_3305111905) {
    line_3305111569[0].push.apply(line_3305111569[0], s_3305111905);;

  
}

function find_3305112010(a_3305112013, item_3305112014) {
  var result_3305112015 = 0;

  BeforeRet: {
    result_3305112015 = 0;
    Label1: {
      var i_3305112029 = 0;
      var i_3321891074 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_3321891074 < (a_3305112013).length)) break Label3;
            i_3305112029 = a_3305112013[chckIndx(i_3321891074, 0, (a_3305112013).length - 1)];
            if ((i_3305112029 == item_3305112014)) {
            break BeforeRet;
            }
            
            result_3305112015 = addInt(result_3305112015, 1);
            i_3321891074 = addInt(i_3321891074, 1);
          }
      };
    };
    result_3305112015 = -1;
  };

  return result_3305112015;

}

function contains_3305112005(a_3305112007, item_3305112008) {
  var result_3305112009 = false;

  BeforeRet: {
    result_3305112009 = (0 <= find_3305112010(a_3305112007, item_3305112008));
    break BeforeRet;
  };

  return result_3305112009;

}

function printNode_3305111909(node_3305111910, indent_3305111911) {
    var wrap_3305111912 = (printWidth_3305111561[0] <= addInt((textLine_3305111840(node_3305111910)).length, indent_3305111911));
    switch (node_3305111910.kind) {
    case 3:
    case 8:
      printStr_3305111906(34, node_3305111910.value);
      break;
    case 18:
    case 17:
    case 9:
      printStr_3305111906(31, node_3305111910.value);
      break;
    case 4:
    case 5:
      printStr_3305111906(35, node_3305111910.value);
      break;
    case 6:
      printStr_3305111906(32, escapeString_3305111635(node_3305111910.value, [34]));
      break;
    case 7:
      printStr_3305111906(32, ([39] || []).concat(HEX5BHEX5D_855639319(escapeString_3305111635(node_3305111910.value, [34]), HEX2EHEX2E_1040187488(1, 2)) || [],[39] || []));
      break;
    case 10:
    case 11:
      if ((node_3305111910.kind == 10)) {
      printStr_3305111904([64]);
      }
      
      if (wrap_3305111912) {
      printStr_3305111904([91,10]);
      Label1: {
        var i_3305111940 = 0;
        var e_3305111941 = null;
        var i_3321891025 = 0;
        var L_3321891026 = (node_3305111910.nodes).length;
        Label2: {
            Label3: while (true) {
            if (!(i_3321891025 < L_3321891026)) break Label3;
              i_3305111940 = i_3321891025;
              e_3305111941 = node_3305111910.nodes[chckIndx(i_3321891025, 0, (node_3305111910.nodes).length - 1)];
              printStr_3305111904(nsuRepeatStr([32,32], chckRange(addInt(indent_3305111911, 1), 0, 2147483647)));
              printNode_3305111909(e_3305111941, addInt(indent_3305111911, 1));
              if (!((i_3305111940 == subInt((node_3305111910.nodes).length, 1)))) {
              printStr_3305111904([44,10]);
              }
              
              i_3321891025 = addInt(i_3321891025, 1);
              if (!(((node_3305111910.nodes).length == L_3321891026))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      printStr_3305111904([10]);
      printStr_3305111904(nsuRepeatStr([32,32], chckRange(indent_3305111911, 0, 2147483647)));
      printStr_3305111904([93]);
      }
      else {
        printStr_3305111904([91]);
        Label4: {
          var i_3305111950 = 0;
          var e_3305111951 = null;
          var i_3321891029 = 0;
          var L_3321891030 = (node_3305111910.nodes).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321891029 < L_3321891030)) break Label6;
                i_3305111950 = i_3321891029;
                e_3305111951 = node_3305111910.nodes[chckIndx(i_3321891029, 0, (node_3305111910.nodes).length - 1)];
                if (!((i_3305111950 == 0))) {
                printStr_3305111904([44,32]);
                }
                
                printNode_3305111909(e_3305111951, 0);
                i_3321891029 = addInt(i_3321891029, 1);
                if (!(((node_3305111910.nodes).length == L_3321891030))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        printStr_3305111904([93]);
      }
      
      break;
    case 13:
    case 14:
    case 12:
      if (contains_3305112005(new Uint8Array([14, 12]), node_3305111910.kind)) {
      printStr_3305111906(36, node_3305111910.value);
      printStr_3305111904([40]);
      }
      else {
      printStr_3305111904([123]);
      }
      
      if (wrap_3305111912) {
      printStr_3305111904([10]);
      Label7: {
        var i_3305112053 = 0;
        var e_3305112054 = null;
        var i_3321891033 = 0;
        var L_3321891034 = (node_3305111910.nodes).length;
        Label8: {
            Label9: while (true) {
            if (!(i_3321891033 < L_3321891034)) break Label9;
              i_3305112053 = i_3321891033;
              e_3305112054 = node_3305111910.nodes[chckIndx(i_3321891033, 0, (node_3305111910.nodes).length - 1)];
              printNode_3305111909(e_3305112054, addInt(indent_3305111911, 1));
              if (!((i_3305112053 == subInt((node_3305111910.nodes).length, 1)))) {
              printStr_3305111904([44,10]);
              }
              
              i_3321891033 = addInt(i_3321891033, 1);
              if (!(((node_3305111910.nodes).length == L_3321891034))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      printStr_3305111904([10]);
      printStr_3305111904(nsuRepeatStr([32,32], chckRange(indent_3305111911, 0, 2147483647)));
      }
      else {
        Label10: {
          var i_3305112063 = 0;
          var e_3305112064 = null;
          var i_3321891037 = 0;
          var L_3321891038 = (node_3305111910.nodes).length;
          Label11: {
              Label12: while (true) {
              if (!(i_3321891037 < L_3321891038)) break Label12;
                i_3305112063 = i_3321891037;
                e_3305112064 = node_3305111910.nodes[chckIndx(i_3321891037, 0, (node_3305111910.nodes).length - 1)];
                if (!((i_3305112063 == 0))) {
                printStr_3305111904([44,32]);
                }
                
                printNode_3305111909(e_3305112064, 0);
                i_3321891037 = addInt(i_3321891037, 1);
                if (!(((node_3305111910.nodes).length == L_3321891038))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      }
      
      if (contains_3305112005(new Uint8Array([14, 12]), node_3305111910.kind)) {
      printStr_3305111904([41]);
      }
      else {
      printStr_3305111904([125]);
      }
      
      break;
    case 1:
      if (wrap_3305111912) {
      Label13: {
        var i_3305112127 = 0;
        var e_3305112128 = null;
        var i_3321891041 = 0;
        var L_3321891042 = (node_3305111910.nodes).length;
        Label14: {
            Label15: while (true) {
            if (!(i_3321891041 < L_3321891042)) break Label15;
              i_3305112127 = i_3321891041;
              e_3305112128 = node_3305111910.nodes[chckIndx(i_3321891041, 0, (node_3305111910.nodes).length - 1)];
              printNode_3305111909(e_3305112128, 0);
              if (!((i_3305112127 == subInt((node_3305111910.nodes).length, 1)))) {
              printStr_3305111904([10]);
              }
              
              i_3321891041 = addInt(i_3321891041, 1);
              if (!(((node_3305111910.nodes).length == L_3321891042))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      else {
        Label16: {
          var i_3305112137 = 0;
          var e_3305112138 = null;
          var i_3321891045 = 0;
          var L_3321891046 = (node_3305111910.nodes).length;
          Label17: {
              Label18: while (true) {
              if (!(i_3321891045 < L_3321891046)) break Label18;
                i_3305112137 = i_3321891045;
                e_3305112138 = node_3305111910.nodes[chckIndx(i_3321891045, 0, (node_3305111910.nodes).length - 1)];
                if (!((i_3305112137 == 0))) {
                printStr_3305111904([32]);
                }
                
                printNode_3305111909(e_3305112138, 0);
                i_3321891045 = addInt(i_3321891045, 1);
                if (!(((node_3305111910.nodes).length == L_3321891046))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      }
      
      printStr_3305111904([10]);
      break;
    case 15:
      printNode_3305111909(node_3305111910.nodes[chckIndx(0, 0, (node_3305111910.nodes).length - 1)], 0);
      printStr_3305111904([61]);
      printNode_3305111909(node_3305111910.nodes[chckIndx(1, 0, (node_3305111910.nodes).length - 1)], 0);
      break;
    case 16:
      printStr_3305111904(nsuRepeatStr([32,32], chckRange(indent_3305111911, 0, 2147483647)));
      printNode_3305111909(node_3305111910.nodes[chckIndx(0, 0, (node_3305111910.nodes).length - 1)], indent_3305111911);
      printStr_3305111904([58,32]);
      printNode_3305111909(node_3305111910.nodes[chckIndx(1, 0, (node_3305111910.nodes).length - 1)], indent_3305111911);
      break;
    default: 
      printStr_3305111904(node_3305111910.value);
      break;
    }

  
}

function printNodes_3305112157(s_3305112158) {
    clear_3305112210(haveSeen_3305111568[0]);
    var nodes_3305112453 = [];
    Label1: {
      var e_3305112467 = null;
      var i_3321891017 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_3321891017 < (s_3305112158).length)) break Label3;
            e_3305112467 = s_3305112158[chckIndx(i_3321891017, 0, (s_3305112158).length - 1)];
            nodes_3305112453.push(e_3305112467);;
            i_3321891017 = addInt(i_3321891017, 1);
          }
      };
    };
    var node_3305112472 = {kind: 1, nodes: nimCopy(null, nodes_3305112453, NTI3305112120), value: []};
    printNode_3305111909(node_3305112472, 0);
    rawEcho(HEX5BHEX5D_855639319(line_3305111569[0], HEX2EHEX2E_1040187488(0, 2)));
    line_3305111569[0] = nimCopy(null, [], NTI33554449);

  
}

function newTopPairNode_3305111686(k_3305111687, v_3305111688) {
  var result_3305111689 = null;

    result_3305111689 = {kind: 15, nodes: [k_3305111687, v_3305111688], value: []};

  return result_3305111689;

}

function newNameNode_3305111683(name_3305111684) {
  var result_3305111685 = null;

    result_3305111685 = {kind: 2, value: nimCopy(null, name_3305111684, NTI33554449), nodes: []};

  return result_3305111685;

}

function newFieldPairNode_3305111712(k_3305111713, v_3305111714) {
  var result_3305111715 = null;

    result_3305111715 = {kind: 16, nodes: [k_3305111713, v_3305111714], value: []};

  return result_3305111715;

}

function newNode_3321889879(x_3321889881) {
  var result_3321889882 = null;

    result_3321889882 = {kind: 3, value: HEX24_369098760(x_3321889881), nodes: []};

  return result_3321889882;

}

function newNodeFromBaseType_3321889872(x_3321889874) {
  var result_3321889875 = null;

    result_3321889875 = newNode_3321889879(x_3321889874);

  return result_3321889875;

}

function newNode_3321889894(x_3321889896) {
  var result_3321889897 = null;

    result_3321889897 = {kind: 3, value: HEX24_369098760(((x_3321889896) | 0)), nodes: []};

  return result_3321889897;

}

function newNodeFromBaseType_3321889887(x_3321889889) {
  var result_3321889890 = null;

    result_3321889890 = newNode_3321889894(x_3321889889);

  return result_3321889890;

}

function newNode_3321889864(x_3321889866) {
  var result_3321889867 = null;

    var nodes_3321889868 = [];
    nodes_3321889868.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,97,100,100,105,110,103]), newNodeFromBaseType_3321889872(x_3321889866.padding)));;
    nodes_3321889868.push(newFieldPairNode_3305111712(newNameNode_3305111683([116,105,109,101]), newNodeFromBaseType_3321889887(x_3321889866.time)));;
    nodes_3321889868.push(newFieldPairNode_3305111712(newNameNode_3305111683([102,117,122,122]), newNodeFromBaseType_3321889887(x_3321889866.fuzz)));;
    nodes_3321889868.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,111,117,110,116]), newNodeFromBaseType_3321889887(x_3321889866.count)));;
    result_3321889867 = {kind: 14, value: [79,105,100], nodes: nimCopy(null, nodes_3321889868, NTI3321889497)};

  return result_3321889867;

}

function newNodeFromBaseType_3321889850(x_3321889852) {
  var result_3321889853 = null;

    result_3321889853 = newNode_3321889864(x_3321889852);

  return result_3321889853;

}

function len_3271563200(t_3271563203) {
  var result_3271563204 = 0;

    result_3271563204 = t_3271563203.counter;

  return result_3271563204;

}

function newNode_3305111730(x_3305111731) {
  var result_3305111746 = null;

    result_3305111746 = {kind: 6, value: nimCopy(null, x_3305111731, NTI33554449), nodes: []};

  return result_3305111746;

}

function newNodeFromBaseType_3321890077(x_3321890079) {
  var result_3321890080 = null;

    result_3321890080 = newNode_3305111730(x_3321890079);

  return result_3321890080;

}

function newNode_3321890109(x_3321890111) {
  var result_3321890112 = null;

    var nodes_3321890113 = [];
    Label1: {
      var e_3321890117 = null;
      var i_3321891088 = 0;
      var L_3321891089 = (x_3321890111).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321891088 < L_3321891089)) break Label3;
            e_3321890117 = x_3321890111[chckIndx(i_3321891088, 0, (x_3321890111).length - 1)];
            nodes_3321890113.push(newNodeFromBaseType_3321890040(e_3321890117));;
            i_3321891088 = addInt(i_3321891088, 1);
            if (!(((x_3321890111).length == L_3321891089))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321890112 = {kind: 10, nodes: nimCopy(null, nodes_3321890113, NTI3321889672), value: []};

  return result_3321890112;

}

function newNodeFromBaseType_3321890102(x_3321890104) {
  var result_3321890105 = null;

    result_3321890105 = newNode_3321890109(x_3321890104);

  return result_3321890105;

}

function newNode_3305111741(x_3305111742) {
  var result_3305111743 = null;

    result_3305111743 = {kind: 8, value: nimBoolToStr(x_3305111742), nodes: []};

  return result_3305111743;

}

function newNodeFromBaseType_3321890129(x_3321890131) {
  var result_3321890132 = null;

    result_3321890132 = newNode_3305111741(x_3321890131);

  return result_3321890132;

}

function newNode_3321890199(x_3321890201) {
  var result_3321890202 = null;

    result_3321890202 = newNode_3305111730(reprEnum(x_3321890201, NTI3271557123));

  return result_3321890202;

}

function newNodeFromBaseType_3321890192(x_3321890194) {
  var result_3321890195 = null;

    result_3321890195 = newNode_3321890199(x_3321890194);

  return result_3321890195;

}

function newNode_3321890170(x_3321890172) {
  var result_3321890173 = null;

    var nodes_3321890174 = [];
    nodes_3321890174.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889850(x_3321890172.id)));;
    nodes_3321890174.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,111,108,101]), newNodeFromBaseType_3321890077(x_3321890172.role)));;
    nodes_3321890174.push(newFieldPairNode_3305111712(newNameNode_3305111683([116,121,112]), newNodeFromBaseType_3321890192(x_3321890172.typ)));;
    result_3321890173 = {kind: 14, value: [80,114,111,112,101,114,116,121,68,101,115,99,114,105,112,116,105,111,110], nodes: nimCopy(null, nodes_3321890174, NTI3321889721)};

  return result_3321890173;

}

function newNodeFromBaseType_3321890163(x_3321890165) {
  var result_3321890166 = null;

    result_3321890166 = newNode_3321890170(x_3321890165);

  return result_3321890166;

}

function newNode_3321890154(x_3321890156) {
  var result_3321890157 = null;

    var nodes_3321890158 = [];
    Label1: {
      var e_3321890162 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0});
      var i_3321891092 = 0;
      var L_3321891093 = (x_3321890156).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321891092 < L_3321891093)) break Label3;
            e_3321890162 = x_3321890156[chckIndx(i_3321891092, 0, (x_3321890156).length - 1)];
            nodes_3321890158.push(newNodeFromBaseType_3321890163(e_3321890162));;
            i_3321891092 = addInt(i_3321891092, 1);
            if (!(((x_3321890156).length == L_3321891093))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321890157 = {kind: 10, nodes: nimCopy(null, nodes_3321890158, NTI3321889709), value: []};

  return result_3321890157;

}

function newNodeFromBaseType_3321890147(x_3321890149) {
  var result_3321890150 = null;

    result_3321890150 = newNode_3321890154(x_3321890149);

  return result_3321890150;

}

function newNode_3321890280(x_3321890282) {
  var result_3321890283 = null;

    result_3321890283 = newNode_3305111730(reprEnum(x_3321890282, NTI3271557126));

  return result_3321890283;

}

function newNodeFromBaseType_3321890273(x_3321890275) {
  var result_3321890276 = null;

    result_3321890276 = newNode_3321890280(x_3321890275);

  return result_3321890276;

}

function newNode_3321890244(x_3321890246) {
  var result_3321890247 = null;

    var nodes_3321890248 = [];
    nodes_3321890248.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889850(x_3321890246.id)));;
    nodes_3321890248.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,111,108,101]), newNodeFromBaseType_3321890077(x_3321890246.role)));;
    nodes_3321890248.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,108,97,115,115]), newNodeFromBaseType_3321889850(x_3321890246.class)));;
    nodes_3321890248.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,111,117,110,116]), newNodeFromBaseType_3321890273(x_3321890246.count)));;
    result_3321890247 = {kind: 14, value: [78,111,100,101,67,104,105,108,100,68,101,115,99,114,105,112,116,105,111,110], nodes: nimCopy(null, nodes_3321890248, NTI3321889775)};

  return result_3321890247;

}

function newNodeFromBaseType_3321890237(x_3321890239) {
  var result_3321890240 = null;

    result_3321890240 = newNode_3321890244(x_3321890239);

  return result_3321890240;

}

function newNode_3321890228(x_3321890230) {
  var result_3321890231 = null;

    var nodes_3321890232 = [];
    Label1: {
      var e_3321890236 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0});
      var i_3321891096 = 0;
      var L_3321891097 = (x_3321890230).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321891096 < L_3321891097)) break Label3;
            e_3321890236 = x_3321890230[chckIndx(i_3321891096, 0, (x_3321890230).length - 1)];
            nodes_3321890232.push(newNodeFromBaseType_3321890237(e_3321890236));;
            i_3321891096 = addInt(i_3321891096, 1);
            if (!(((x_3321890230).length == L_3321891097))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321890231 = {kind: 10, nodes: nimCopy(null, nodes_3321890232, NTI3321889763), value: []};

  return result_3321890231;

}

function newNodeFromBaseType_3321890221(x_3321890223) {
  var result_3321890224 = null;

    result_3321890224 = newNode_3321890228(x_3321890223);

  return result_3321890224;

}

function newNode_3321890325(x_3321890327) {
  var result_3321890328 = null;

    var nodes_3321890329 = [];
    nodes_3321890329.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889850(x_3321890327.id)));;
    nodes_3321890329.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,111,108,101]), newNodeFromBaseType_3321890077(x_3321890327.role)));;
    nodes_3321890329.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,108,97,115,115]), newNodeFromBaseType_3321889850(x_3321890327.class)));;
    result_3321890328 = {kind: 14, value: [78,111,100,101,82,101,102,101,114,101,110,99,101,68,101,115,99,114,105,112,116,105,111,110], nodes: nimCopy(null, nodes_3321890329, NTI3321889834)};

  return result_3321890328;

}

function newNodeFromBaseType_3321890318(x_3321890320) {
  var result_3321890321 = null;

    result_3321890321 = newNode_3321890325(x_3321890320);

  return result_3321890321;

}

function newNode_3321890309(x_3321890311) {
  var result_3321890312 = null;

    var nodes_3321890313 = [];
    Label1: {
      var e_3321890317 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})});
      var i_3321891100 = 0;
      var L_3321891101 = (x_3321890311).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321891100 < L_3321891101)) break Label3;
            e_3321890317 = x_3321890311[chckIndx(i_3321891100, 0, (x_3321890311).length - 1)];
            nodes_3321890313.push(newNodeFromBaseType_3321890318(e_3321890317));;
            i_3321891100 = addInt(i_3321891100, 1);
            if (!(((x_3321890311).length == L_3321891101))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321890312 = {kind: 10, nodes: nimCopy(null, nodes_3321890313, NTI3321889822), value: []};

  return result_3321890312;

}

function newNodeFromBaseType_3321890302(x_3321890304) {
  var result_3321890305 = null;

    result_3321890305 = newNode_3321890309(x_3321890304);

  return result_3321890305;

}

function newNode_3321890062(x_3321890064) {
  var result_3321890065 = null;

    var nodes_3321890066 = [];
    nodes_3321890066.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889850(x_3321890064.id)));;
    nodes_3321890066.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,97,109,101]), newNodeFromBaseType_3321890077(x_3321890064.name)));;
    nodes_3321890066.push(newFieldPairNode_3305111712(newNameNode_3305111683([97,108,105,97,115]), newNodeFromBaseType_3321890077(x_3321890064.alias)));;
    nodes_3321890066.push(newFieldPairNode_3305111712(newNameNode_3305111683([98,97,115,101]), newNodeFromBaseType_3321890040(x_3321890064.base)));;
    nodes_3321890066.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,110,116,101,114,102,97,99,101,115]), newNodeFromBaseType_3321890102(x_3321890064.interfaces)));;
    nodes_3321890066.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,115,65,98,115,116,114,97,99,116]), newNodeFromBaseType_3321890129(x_3321890064.isAbstract)));;
    nodes_3321890066.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,115,73,110,116,101,114,102,97,99,101]), newNodeFromBaseType_3321890129(x_3321890064.isInterface)));;
    nodes_3321890066.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,114,111,112,101,114,116,105,101,115]), newNodeFromBaseType_3321890147(x_3321890064.properties)));;
    nodes_3321890066.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,104,105,108,100,114,101,110]), newNodeFromBaseType_3321890221(x_3321890064.children)));;
    nodes_3321890066.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,101,102,101,114,101,110,99,101,115]), newNodeFromBaseType_3321890302(x_3321890064.references)));;
    result_3321890065 = {kind: 14, value: [78,111,100,101,67,108,97,115,115,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3321890066, NTI3321889637)};

  return result_3321890065;

}

function newNodeFromBaseType_3321890055(x_3321890057) {
  var result_3321890058 = null;

    result_3321890058 = newNode_3321890062(x_3321890057);

  return result_3321890058;

}

function newNode_3321890047(x_3321890049) {
    var Temporary1;

  var result_3321890050 = null;

    if (!((x_3321890049 == null))) {
    Temporary1 = newNodeFromBaseType_3321890055(x_3321890049);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3321890050 = Temporary1;

  return result_3321890050;

}

function newNodeFromBaseType_3321890040(x_3321890042) {
  var result_3321890043 = null;

    result_3321890043 = newNode_3321890047(x_3321890042);

  return result_3321890043;

}

function newNode_3321889946(x_3321889949) {
  var result_3321889950 = null;

    var nodes_3321889951 = [];
    Label1: {
      var k_3321890035 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3321890036 = null;
      var L_3321891081 = len_3271563200(x_3321889949);
      Label2: {
        var h_3321891083 = 0;
        var colontmp__3321891084 = 0;
        colontmp__3321891084 = (x_3321889949.data).length - 1;
        var res_3321891085 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_3321891085 <= colontmp__3321891084)) break Label4;
              h_3321891083 = res_3321891085;
              if (isFilled_1308622880(x_3321889949.data[chckIndx(h_3321891083, 0, (x_3321889949.data).length - 1)].Field0)) {
              k_3321890035 = nimCopy(k_3321890035, x_3321889949.data[chckIndx(h_3321891083, 0, (x_3321889949.data).length - 1)].Field1, NTI2046820355);
              v_3321890036 = x_3321889949.data[chckIndx(h_3321891083, 0, (x_3321889949.data).length - 1)].Field2;
              nodes_3321889951.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889850(k_3321890035), newNodeFromBaseType_3321890040(v_3321890036)));;
              if (!((len_3271563200(x_3321889949) == L_3321891081))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_3321891085 = addInt(res_3321891085, 1);
            }
        };
      };
    };
    result_3321889950 = {kind: 13, nodes: nimCopy(null, nodes_3321889951, NTI3321889556), value: []};

  return result_3321889950;

}

function newNodeFromBaseType_3321889930(x_3321889932) {
  var result_3321889933 = null;

    result_3321889933 = newNode_3321889946(x_3321889932);

  return result_3321889933;

}

function len_3321890411(t_3321890414) {
  var result_3321890415 = 0;

    result_3321890415 = t_3321890414.counter;

  return result_3321890415;

}

function newNode_3321890392(x_3321890395) {
  var result_3321890396 = null;

    var nodes_3321890397 = [];
    Label1: {
      var k_3321890482 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3321890483 = [];
      var L_3321891108 = len_3321890411(x_3321890395);
      Label2: {
        var h_3321891110 = 0;
        var colontmp__3321891111 = 0;
        colontmp__3321891111 = (x_3321890395.data).length - 1;
        var res_3321891112 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_3321891112 <= colontmp__3321891111)) break Label4;
              h_3321891110 = res_3321891112;
              if (isFilled_1308622880(x_3321890395.data[chckIndx(h_3321891110, 0, (x_3321890395.data).length - 1)].Field0)) {
              k_3321890482 = nimCopy(k_3321890482, x_3321890395.data[chckIndx(h_3321891110, 0, (x_3321890395.data).length - 1)].Field1, NTI2046820355);
              v_3321890483 = x_3321890395.data[chckIndx(h_3321891110, 0, (x_3321890395.data).length - 1)].Field2;
              nodes_3321890397.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889850(k_3321890482), newNodeFromBaseType_3321890102(v_3321890483)));;
              if (!((len_3321890411(x_3321890395) == L_3321891108))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_3321891112 = addInt(res_3321891112, 1);
            }
        };
      };
    };
    result_3321890396 = {kind: 13, nodes: nimCopy(null, nodes_3321890397, NTI3321889885), value: []};

  return result_3321890396;

}

function newNodeFromBaseType_3321890376(x_3321890378) {
  var result_3321890379 = null;

    result_3321890379 = newNode_3321890392(x_3321890378);

  return result_3321890379;

}

function len_3271570343(t_3271570346) {
  var result_3271570347 = 0;

    result_3271570347 = t_3271570346.counter;

  return result_3271570347;

}

function newNode_3321890604(x_3321890606) {
  var result_3321890607 = null;

    result_3321890607 = {kind: 4, value: [67,101,108,108,66,117,105,108,100,101,114,70,117,110,99,116,105,111,110], nodes: []};

  return result_3321890607;

}

function newNodeFromBaseType_3321890597(x_3321890599) {
  var result_3321890600 = null;

    result_3321890600 = newNode_3321890604(x_3321890599);

  return result_3321890600;

}

function newNode_3321890582(x_3321890584) {
  var result_3321890585 = null;

    var nodes_3321890586 = [];
    nodes_3321890586.push(newNodeFromBaseType_3321889850(x_3321890584["Field0"]));;
    nodes_3321890586.push(newNodeFromBaseType_3321890597(x_3321890584["Field1"]));;
    result_3321890585 = {kind: 12, nodes: nimCopy(null, nodes_3321890586, NTI3321890016), value: []};

  return result_3321890585;

}

function newNodeFromBaseType_3321890575(x_3321890577) {
  var result_3321890578 = null;

    result_3321890578 = newNode_3321890582(x_3321890577);

  return result_3321890578;

}

function newNode_3321890566(x_3321890568) {
  var result_3321890569 = null;

    var nodes_3321890570 = [];
    Label1: {
      var e_3321890574 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_3321891126 = 0;
      var L_3321891127 = (x_3321890568).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321891126 < L_3321891127)) break Label3;
            e_3321890574 = x_3321890568[chckIndx(i_3321891126, 0, (x_3321890568).length - 1)];
            nodes_3321890570.push(newNodeFromBaseType_3321890575(e_3321890574));;
            i_3321891126 = addInt(i_3321891126, 1);
            if (!(((x_3321890568).length == L_3321891127))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321890569 = {kind: 10, nodes: nimCopy(null, nodes_3321890570, NTI3321890004), value: []};

  return result_3321890569;

}

function newNodeFromBaseType_3321890559(x_3321890561) {
  var result_3321890562 = null;

    result_3321890562 = newNode_3321890566(x_3321890561);

  return result_3321890562;

}

function newNode_3321890544(x_3321890547) {
  var result_3321890548 = null;

    var nodes_3321890549 = [];
    Label1: {
      var k_3321890554 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3321890555 = [];
      var L_3321891119 = len_3271570343(x_3321890547);
      Label2: {
        var h_3321891121 = 0;
        var colontmp__3321891122 = 0;
        colontmp__3321891122 = (x_3321890547.data).length - 1;
        var res_3321891123 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_3321891123 <= colontmp__3321891122)) break Label4;
              h_3321891121 = res_3321891123;
              if (isFilled_1308622880(x_3321890547.data[chckIndx(h_3321891121, 0, (x_3321890547.data).length - 1)].Field0)) {
              k_3321890554 = nimCopy(k_3321890554, x_3321890547.data[chckIndx(h_3321891121, 0, (x_3321890547.data).length - 1)].Field1, NTI2046820355);
              v_3321890555 = x_3321890547.data[chckIndx(h_3321891121, 0, (x_3321890547.data).length - 1)].Field2;
              nodes_3321890549.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889850(k_3321890554), newNodeFromBaseType_3321890559(v_3321890555)));;
              if (!((len_3271570343(x_3321890547) == L_3321891119))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_3321891123 = addInt(res_3321891123, 1);
            }
        };
      };
    };
    result_3321890548 = {kind: 13, nodes: nimCopy(null, nodes_3321890549, NTI3321889991), value: []};

  return result_3321890548;

}

function newNodeFromBaseType_3321890528(x_3321890530) {
  var result_3321890531 = null;

    result_3321890531 = newNode_3321890544(x_3321890530);

  return result_3321890531;

}

function len_3271570650(t_3271570653) {
  var result_3271570654 = 0;

    result_3271570654 = t_3271570653.counter;

  return result_3271570654;

}

function newNode_3321890645(x_3321890648) {
  var result_3321890649 = null;

    var nodes_3321890650 = [];
    Label1: {
      var k_3321890655 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3321890656 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var L_3321891134 = len_3271570650(x_3321890648);
      Label2: {
        var h_3321891136 = 0;
        var colontmp__3321891137 = 0;
        colontmp__3321891137 = (x_3321890648.data).length - 1;
        var res_3321891138 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_3321891138 <= colontmp__3321891137)) break Label4;
              h_3321891136 = res_3321891138;
              if (isFilled_1308622880(x_3321890648.data[chckIndx(h_3321891136, 0, (x_3321890648.data).length - 1)].Field0)) {
              k_3321890655 = nimCopy(k_3321890655, x_3321890648.data[chckIndx(h_3321891136, 0, (x_3321890648.data).length - 1)].Field1, NTI2046820355);
              v_3321890656 = nimCopy(v_3321890656, x_3321890648.data[chckIndx(h_3321891136, 0, (x_3321890648.data).length - 1)].Field2, NTI2046820355);
              nodes_3321890650.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889850(k_3321890655), newNodeFromBaseType_3321889850(v_3321890656)));;
              if (!((len_3271570650(x_3321890648) == L_3321891134))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_3321891138 = addInt(res_3321891138, 1);
            }
        };
      };
    };
    result_3321890649 = {kind: 13, nodes: nimCopy(null, nodes_3321890650, NTI3321890063), value: []};

  return result_3321890649;

}

function newNodeFromBaseType_3321890629(x_3321890631) {
  var result_3321890632 = null;

    result_3321890632 = newNode_3321890645(x_3321890631);

  return result_3321890632;

}

function newNode_3321890520(x_3321890522) {
  var result_3321890523 = null;

    var nodes_3321890524 = [];
    nodes_3321890524.push(newFieldPairNode_3305111712(newNameNode_3305111683([98,117,105,108,100,101,114,115]), newNodeFromBaseType_3321890528(x_3321890522.builders)));;
    nodes_3321890524.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,114,101,102,101,114,114,101,100,66,117,105,108,100,101,114,115]), newNodeFromBaseType_3321890629(x_3321890522.preferredBuilders)));;
    result_3321890523 = {kind: 14, value: [67,101,108,108,66,117,105,108,100,101,114,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3321890524, NTI3321889975)};

  return result_3321890523;

}

function newNodeFromBaseType_3321890513(x_3321890515) {
  var result_3321890516 = null;

    result_3321890516 = newNode_3321890520(x_3321890515);

  return result_3321890516;

}

function newNode_3321890505(x_3321890507) {
    var Temporary1;

  var result_3321890508 = null;

    if (!((x_3321890507 == null))) {
    Temporary1 = newNodeFromBaseType_3321890513(x_3321890507);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3321890508 = Temporary1;

  return result_3321890508;

}

function newNodeFromBaseType_3321890498(x_3321890500) {
  var result_3321890501 = null;

    result_3321890501 = newNode_3321890505(x_3321890500);

  return result_3321890501;

}

function newNode_3321889842(x_3321889844) {
  var result_3321889845 = null;

    var nodes_3321889846 = [];
    nodes_3321889846.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889850(x_3321889844.id)));;
    nodes_3321889846.push(newFieldPairNode_3305111712(newNameNode_3305111683([118,101,114,115,105,111,110]), newNodeFromBaseType_3321889872(x_3321889844.version)));;
    nodes_3321889846.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,108,97,115,115,101,115]), newNodeFromBaseType_3321889930(x_3321889844.classes)));;
    nodes_3321889846.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,104,105,108,100,67,108,97,115,115,101,115]), newNodeFromBaseType_3321890376(x_3321889844.childClasses)));;
    nodes_3321889846.push(newFieldPairNode_3305111712(newNameNode_3305111683([98,117,105,108,100,101,114]), newNodeFromBaseType_3321890498(x_3321889844.builder)));;
    result_3321889845 = {kind: 14, value: [76,97,110,103,117,97,103,101,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3321889846, NTI3321889483)};

  return result_3321889845;

}

function newNodeFromBaseType_3321889835(x_3321889837) {
  var result_3321889838 = null;

    result_3321889838 = newNode_3321889842(x_3321889837);

  return result_3321889838;

}

function newNode_3321889827(x_3321889829) {
    var Temporary1;

  var result_3321889830 = null;

    if (!((x_3321889829 == null))) {
    Temporary1 = newNodeFromBaseType_3321889835(x_3321889829);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3321889830 = Temporary1;

  return result_3321889830;

}

function newNodeFromBaseType_3321889820(x_3321889822) {
  var result_3321889823 = null;

    result_3321889823 = newNode_3321889827(x_3321889822);

  return result_3321889823;

}

function HEX3Aanonymous_3321888827(builder_3321888828, node_3321888829) {
  var result_3321888830 = null;

  BeforeRet: {
    var cell_3321888831 = {id: newId_2046820597(), node: node_3321888829, m_type: NTI3338665995, text: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    result_3321888830 = cell_3321888831;
    break BeforeRet;
  };

  return result_3321888830;

}

function HEX3Aanonymous_3321888832(builder_3321888833, node_3321888834) {
  var result_3321888835 = null;

  BeforeRet: {
    var cell_3321888836 = {id: newId_2046820597(), node: node_3321888834, m_type: NTI3338665995, text: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    result_3321888835 = cell_3321888836;
    break BeforeRet;
  };

  return result_3321888835;

}

function HEX3Aanonymous_3321888837(builder_3321888838, node_3321888839) {
  var result_3321888840 = null;

  BeforeRet: {
    var cell_3321888845 = {id: newId_2046820597(), node: node_3321888839, property: nimCopy(null, IdIntegerLiteralValue_2986344538, NTI2046820355), themeForegroundColors: [[99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99]], m_type: NTI3338665996, parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    result_3321888840 = cell_3321888845;
    break BeforeRet;
  };

  return result_3321888840;

}

function HEX3Aanonymous_3321888846(builder_3321888847, node_3321888848) {
  var result_3321888849 = null;

  BeforeRet: {
    var cell_3321888854 = {id: newId_2046820597(), node: node_3321888848, property: nimCopy(null, IdBoolLiteralValue_2986344534, NTI2046820355), themeForegroundColors: [[99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99]], m_type: NTI3338665996, parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    result_3321888849 = cell_3321888854;
    break BeforeRet;
  };

  return result_3321888849;

}

function HEX3Aanonymous_3321888855(builder_3321888856, node_3321888857) {
  var result_3321888858 = null;

  BeforeRet: {
    var cell_3321888859 = {id: newId_2046820597(), node: node_3321888857, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    add_3338666132(cell_3321888859, {node: node_3321888857, text: [39], style: {noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false}, disableEditing: true, deleteImmediately: true, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
    add_3338666132(cell_3321888859, {node: node_3321888857, property: nimCopy(null, IdStringLiteralValue_2986344536, NTI2046820355), themeForegroundColors: [[115,116,114,105,110,103]], m_type: NTI3338665996, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
    add_3338666132(cell_3321888859, {node: node_3321888857, text: [39], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, disableEditing: true, deleteImmediately: true, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
    result_3321888858 = cell_3321888859;
    break BeforeRet;
  };

  return result_3321888858;

}

function HEX3Aanonymous_3321888872(builder_3321888873, node_3321888874) {
    
function HEX3Aanonymous_3321888877() {
      var result_3321888878 = null;

      BeforeRet: {
        result_3321888878 = newAstNode_3271567013(emptyLineClass_3321888789, none_3271567020());
        break BeforeRet;
      };

      return result_3321888878;

    }
    
function HEX3Aanonymous_3321888879() {
        add_3338666132(cell_3321888876, buildChildren_3338667723(builder_3321888873, node_3321888874, IdNodeListChildren_2986344516, 2, null, null, buildDefaultPlaceholder_3338667718));

      
    }

  var result_3321888875 = null;

  BeforeRet: {
    var cell_3321888876 = {id: newId_2046820597(), node: node_3321888874, layout: {kind: 2}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321888876.nodeFactory = HEX3Aanonymous_3321888877;
    cell_3321888876.fillChildren = HEX3Aanonymous_3321888879;
    result_3321888875 = cell_3321888876;
    break BeforeRet;
  };

  return result_3321888875;

}

function HEX3Aanonymous_3321888916(builder_3321888917, node_3321888918) {
    
function HEX3Aanonymous_3321888921() {
      var result_3321888922 = null;

      BeforeRet: {
        result_3321888922 = newAstNode_3271567013(emptyLineClass_3321888789, none_3271567020());
        break BeforeRet;
      };

      return result_3321888922;

    }
    
function HEX3Aanonymous_3321888923() {
        add_3338666132(cell_3321888920, buildChildren_3338667723(builder_3321888917, node_3321888918, IdBlockChildren_2986344490, 2, null, null, buildDefaultPlaceholder_3338667718));

      
    }

  var result_3321888919 = null;

  BeforeRet: {
    var cell_3321888920 = {id: newId_2046820597(), node: node_3321888918, layout: {kind: 2}, style: {indentChildren: true, onNewLine: false, addNewlineAfter: false, noSpaceLeft: false, noSpaceRight: false}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321888920.nodeFactory = HEX3Aanonymous_3321888921;
    cell_3321888920.fillChildren = HEX3Aanonymous_3321888923;
    result_3321888919 = cell_3321888920;
    break BeforeRet;
  };

  return result_3321888919;

}

function HEX3Aanonymous_3321888924(builder_3321888925, node_3321888926) {
    
function HEX3Aanonymous_3321888929() {
        
function isVisible_3321888930(node_3321888931) {
          var result_3321888932 = false;

            result_3321888932 = hasChild_3271566604(node_3321888931, IdConstDeclType_2986344525);

          return result_3321888932;

        }
          
function HEX3Aanonymous_3321888979(builder_3321888980, node_3321888981, role_3321888982) {
            var result_3321888983 = null;

            BeforeRet: {
              result_3321888983 = {id: newId_2046820597(), node: node_3321888981, role: nimCopy(null, role_3321888982, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321888983;

          }
          
function HEX3Aanonymous_3321888984(builder_3321888985, node_3321888986, role_3321888987) {
            var result_3321888988 = null;

            BeforeRet: {
              result_3321888988 = {id: newId_2046820597(), node: node_3321888969, role: nimCopy(null, role_3321888970, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321888988;

          }

        add_3338666132(cell_3321888928, {node: node_3321888926, text: [99,111,110,115,116], themeForegroundColors: [[107,101,121,119,111,114,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321888928, {node: node_3321888926, property: nimCopy(null, IdINamedName_2986344492, NTI2046820355), m_type: NTI3338665996, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321888928, {node: node_3321888926, text: [58], isVisible: isVisible_3321888930, style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321888928, buildChildren_3338667723(builder_3321888925, node_3321888926, IdConstDeclType_2986344525, 1, isVisible_3321888930, null, buildDefaultPlaceholder_3338667718));
        add_3338666132(cell_3321888928, {node: node_3321888926, text: [61], themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label1: {
          var isVisibleFuncHEX60gensym0_3321888959 = null;
          var separatorFuncHEX60gensym0_3321888962 = null;
          var placeholderFuncHEX60gensym0_3321888967 = null;
          var builder_3321888968 = builder_3321888925;
          var node_3321888969 = node_3321888926;
          var role_3321888970 = nimCopy(null, IdConstDeclValue_2986344524, NTI2046820355);
          placeholderFuncHEX60gensym0_3321888967 = HEX3Aanonymous_3321888979;
          placeholderFuncHEX60gensym0_3321888967 = HEX3Aanonymous_3321888984;
        };
        add_3338666132(cell_3321888928, buildChildren_3338667723(builder_3321888968, node_3321888969, role_3321888970, 1, isVisibleFuncHEX60gensym0_3321888959, separatorFuncHEX60gensym0_3321888962, placeholderFuncHEX60gensym0_3321888967));

      
    }

  var result_3321888927 = null;

  BeforeRet: {
    var cell_3321888928 = {id: newId_2046820597(), node: node_3321888926, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321888928.fillChildren = HEX3Aanonymous_3321888929;
    result_3321888927 = cell_3321888928;
    break BeforeRet;
  };

  return result_3321888927;

}

function HEX3Aanonymous_3321889007(builder_3321889008, node_3321889009) {
    
function HEX3Aanonymous_3321889012() {
        
function isVisible_3321889013(node_3321889014) {
          var result_3321889015 = false;

            result_3321889015 = hasChild_3271566604(node_3321889014, IdLetDeclType_2986344522);

          return result_3321889015;

        }
          
function HEX3Aanonymous_3321889062(builder_3321889063, node_3321889064, role_3321889065) {
            var result_3321889066 = null;

            BeforeRet: {
              result_3321889066 = {id: newId_2046820597(), node: node_3321889064, role: nimCopy(null, role_3321889065, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889066;

          }
          
function HEX3Aanonymous_3321889067(builder_3321889068, node_3321889069, role_3321889070) {
            var result_3321889071 = null;

            BeforeRet: {
              result_3321889071 = {id: newId_2046820597(), node: node_3321889052, role: nimCopy(null, role_3321889053, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889071;

          }

        add_3338666132(cell_3321889011, {node: node_3321889009, text: [108,101,116], themeForegroundColors: [[107,101,121,119,111,114,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889011, {node: node_3321889009, property: nimCopy(null, IdINamedName_2986344492, NTI2046820355), m_type: NTI3338665996, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889011, {node: node_3321889009, text: [58], isVisible: isVisible_3321889013, style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889011, buildChildren_3338667723(builder_3321889008, node_3321889009, IdLetDeclType_2986344522, 1, isVisible_3321889013, null, buildDefaultPlaceholder_3338667718));
        add_3338666132(cell_3321889011, {node: node_3321889009, text: [61], themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label1: {
          var isVisibleFuncHEX60gensym3_3321889042 = null;
          var separatorFuncHEX60gensym3_3321889045 = null;
          var placeholderFuncHEX60gensym3_3321889050 = null;
          var builder_3321889051 = builder_3321889008;
          var node_3321889052 = node_3321889009;
          var role_3321889053 = nimCopy(null, IdLetDeclValue_2986344521, NTI2046820355);
          placeholderFuncHEX60gensym3_3321889050 = HEX3Aanonymous_3321889062;
          placeholderFuncHEX60gensym3_3321889050 = HEX3Aanonymous_3321889067;
        };
        add_3338666132(cell_3321889011, buildChildren_3338667723(builder_3321889051, node_3321889052, role_3321889053, 1, isVisibleFuncHEX60gensym3_3321889042, separatorFuncHEX60gensym3_3321889045, placeholderFuncHEX60gensym3_3321889050));

      
    }

  var result_3321889010 = null;

  BeforeRet: {
    var cell_3321889011 = {id: newId_2046820597(), node: node_3321889009, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889011.fillChildren = HEX3Aanonymous_3321889012;
    result_3321889010 = cell_3321889011;
    break BeforeRet;
  };

  return result_3321889010;

}

function HEX3Aanonymous_3321889072(builder_3321889073, node_3321889074) {
    
function HEX3Aanonymous_3321889077() {
        
function isTypeVisible_3321889078(node_3321889079) {
          var result_3321889080 = false;

            result_3321889080 = hasChild_3271566604(node_3321889079, IdVarDeclType_2986344519);

          return result_3321889080;

        }
        
function isValueVisible_3321889081(node_3321889082) {
          var result_3321889083 = false;

            result_3321889083 = hasChild_3271566604(node_3321889082, IdVarDeclValue_2986344518);

          return result_3321889083;

        }
          
function HEX3Aanonymous_3321889130(builder_3321889131, node_3321889132, role_3321889133) {
            var result_3321889134 = null;

            BeforeRet: {
              result_3321889134 = {id: newId_2046820597(), node: node_3321889132, role: nimCopy(null, role_3321889133, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889134;

          }
          
function HEX3Aanonymous_3321889135(builder_3321889136, node_3321889137, role_3321889138) {
            var result_3321889139 = null;

            BeforeRet: {
              result_3321889139 = {id: newId_2046820597(), node: node_3321889120, role: nimCopy(null, role_3321889121, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889139;

          }

        add_3338666132(cell_3321889076, {node: node_3321889074, text: [118,97,114], themeForegroundColors: [[107,101,121,119,111,114,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889076, {node: node_3321889074, property: nimCopy(null, IdINamedName_2986344492, NTI2046820355), m_type: NTI3338665996, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889076, {node: node_3321889074, text: [58], isVisible: isTypeVisible_3321889078, style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889076, buildChildren_3338667723(builder_3321889073, node_3321889074, IdVarDeclType_2986344519, 1, isTypeVisible_3321889078, null, buildDefaultPlaceholder_3338667718));
        add_3338666132(cell_3321889076, {node: node_3321889074, text: [61], isVisible: isValueVisible_3321889081, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label1: {
          var isVisibleFuncHEX60gensym6_3321889110 = null;
          var separatorFuncHEX60gensym6_3321889113 = null;
          var placeholderFuncHEX60gensym6_3321889118 = null;
          var builder_3321889119 = builder_3321889073;
          var node_3321889120 = node_3321889074;
          var role_3321889121 = nimCopy(null, IdVarDeclValue_2986344518, NTI2046820355);
          placeholderFuncHEX60gensym6_3321889118 = HEX3Aanonymous_3321889130;
          placeholderFuncHEX60gensym6_3321889118 = HEX3Aanonymous_3321889135;
        };
        add_3338666132(cell_3321889076, buildChildren_3338667723(builder_3321889119, node_3321889120, role_3321889121, 1, isVisibleFuncHEX60gensym6_3321889110, separatorFuncHEX60gensym6_3321889113, placeholderFuncHEX60gensym6_3321889118));

      
    }

  var result_3321889075 = null;

  BeforeRet: {
    var cell_3321889076 = {id: newId_2046820597(), node: node_3321889074, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889076.fillChildren = HEX3Aanonymous_3321889077;
    result_3321889075 = cell_3321889076;
    break BeforeRet;
  };

  return result_3321889075;

}

function HEX3Aanonymous_3321889140(builder_3321889141, node_3321889142) {
    
function HEX3Aanonymous_3321889145() {
        add_3338666132(cell_3321889144, buildChildren_3338667723(builder_3321889141, node_3321889142, IdAssignmentTarget_2986344495, 1, null, null, buildDefaultPlaceholder_3338667718));
        add_3338666132(cell_3321889144, {node: node_3321889142, text: [61], themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889144, buildChildren_3338667723(builder_3321889141, node_3321889142, IdAssignmentValue_2986344494, 1, null, null, buildDefaultPlaceholder_3338667718));

      
    }

  var result_3321889143 = null;

  BeforeRet: {
    var cell_3321889144 = {id: newId_2046820597(), node: node_3321889142, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889144.fillChildren = HEX3Aanonymous_3321889145;
    result_3321889143 = cell_3321889144;
    break BeforeRet;
  };

  return result_3321889143;

}

function HEX3Aanonymous_3321889150(builder_3321889151, node_3321889152) {
    
function HEX3Aanonymous_3321889155() {
          
function HEX3Aanonymous_3321889197(builder_3321889198, node_3321889199, role_3321889200) {
            var result_3321889201 = null;

            BeforeRet: {
              result_3321889201 = {id: newId_2046820597(), node: node_3321889199, role: nimCopy(null, role_3321889200, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889201;

          }
          
function HEX3Aanonymous_3321889202(builder_3321889203, node_3321889204, role_3321889205) {
            var result_3321889206 = null;

            BeforeRet: {
              result_3321889206 = {id: newId_2046820597(), node: node_3321889187, role: nimCopy(null, role_3321889188, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889206;

          }
        
function isVisible_3321889156(node_3321889157) {
          var result_3321889158 = false;

            result_3321889158 = hasChild_3271566604(node_3321889157, IdParameterDeclValue_2986344501);

          return result_3321889158;

        }
          
function HEX3Aanonymous_3321889245(builder_3321889246, node_3321889247, role_3321889248) {
            var result_3321889249 = null;

            BeforeRet: {
              result_3321889249 = {id: newId_2046820597(), node: node_3321889247, role: nimCopy(null, role_3321889248, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889249;

          }
          
function HEX3Aanonymous_3321889250(node_3321889251) {
            var result_3321889252 = false;

            BeforeRet: {
              result_3321889252 = isVisible_3321889156(node_3321889251);
              break BeforeRet;
            };

            return result_3321889252;

          }
          
function HEX3Aanonymous_3321889253(builder_3321889254, node_3321889255, role_3321889256) {
            var result_3321889257 = null;

            BeforeRet: {
              result_3321889257 = {id: newId_2046820597(), node: node_3321889235, role: nimCopy(null, role_3321889236, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889257;

          }

        add_3338666132(cell_3321889154, {node: node_3321889152, property: nimCopy(null, IdINamedName_2986344492, NTI2046820355), m_type: NTI3338665996, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889154, {node: node_3321889152, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label1: {
          var isVisibleFuncHEX60gensym9_3321889177 = null;
          var separatorFuncHEX60gensym9_3321889180 = null;
          var placeholderFuncHEX60gensym9_3321889185 = null;
          var builder_3321889186 = builder_3321889151;
          var node_3321889187 = node_3321889152;
          var role_3321889188 = nimCopy(null, IdParameterDeclType_2986344502, NTI2046820355);
          placeholderFuncHEX60gensym9_3321889185 = HEX3Aanonymous_3321889197;
          placeholderFuncHEX60gensym9_3321889185 = HEX3Aanonymous_3321889202;
        };
        add_3338666132(cell_3321889154, buildChildren_3338667723(builder_3321889186, node_3321889187, role_3321889188, 1, isVisibleFuncHEX60gensym9_3321889177, separatorFuncHEX60gensym9_3321889180, placeholderFuncHEX60gensym9_3321889185));
        add_3338666132(cell_3321889154, {node: node_3321889152, text: [61], isVisible: isVisible_3321889156, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label2: {
          var isVisibleFuncHEX60gensym12_3321889225 = null;
          var separatorFuncHEX60gensym12_3321889228 = null;
          var placeholderFuncHEX60gensym12_3321889233 = null;
          var builder_3321889234 = builder_3321889151;
          var node_3321889235 = node_3321889152;
          var role_3321889236 = nimCopy(null, IdParameterDeclValue_2986344501, NTI2046820355);
          placeholderFuncHEX60gensym12_3321889233 = HEX3Aanonymous_3321889245;
          isVisibleFuncHEX60gensym12_3321889225 = HEX3Aanonymous_3321889250;
          placeholderFuncHEX60gensym12_3321889233 = HEX3Aanonymous_3321889253;
        };
        add_3338666132(cell_3321889154, buildChildren_3338667723(builder_3321889234, node_3321889235, role_3321889236, 1, isVisibleFuncHEX60gensym12_3321889225, separatorFuncHEX60gensym12_3321889228, placeholderFuncHEX60gensym12_3321889233));

      
    }

  var result_3321889153 = null;

  BeforeRet: {
    var cell_3321889154 = {id: newId_2046820597(), node: node_3321889152, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889154.fillChildren = HEX3Aanonymous_3321889155;
    result_3321889153 = cell_3321889154;
    break BeforeRet;
  };

  return result_3321889153;

}

function HEX3Aanonymous_3321889258(builder_3321889259, node_3321889260) {
    
function HEX3Aanonymous_3321889263() {
          
function HEX3Aanonymous_3321889306(builder_3321889307, node_3321889308, role_3321889309) {
            var result_3321889310 = null;

            BeforeRet: {
              result_3321889310 = {id: newId_2046820597(), node: node_3321889308, role: nimCopy(null, role_3321889309, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889310;

          }
          
function HEX3Aanonymous_3321889311(builder_3321889312) {
            var result_3321889313 = null;

            BeforeRet: {
              result_3321889313 = {node: node_3321889296, text: [44], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, disableSelection: true, deleteNeighbor: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, deleteImmediately: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889313;

          }
          
function HEX3Aanonymous_3321889318(builder_3321889319, node_3321889320, role_3321889321) {
            var result_3321889322 = null;

            BeforeRet: {
              result_3321889322 = {id: newId_2046820597(), node: node_3321889320, role: nimCopy(null, role_3321889321, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889322;

          }
          
function HEX3Aanonymous_3321889361(builder_3321889362, node_3321889363, role_3321889364) {
            var result_3321889365 = null;

            BeforeRet: {
              result_3321889365 = {id: newId_2046820597(), node: node_3321889363, role: nimCopy(null, role_3321889364, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889365;

          }
          
function HEX3Aanonymous_3321889366(builder_3321889367, node_3321889368, role_3321889369) {
            var result_3321889370 = null;

            BeforeRet: {
              result_3321889370 = {id: newId_2046820597(), node: node_3321889368, role: nimCopy(null, role_3321889369, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889370;

          }
          
function HEX3Aanonymous_3321889409(builder_3321889410, node_3321889411, role_3321889412) {
            var result_3321889413 = null;

            BeforeRet: {
              result_3321889413 = {id: newId_2046820597(), node: node_3321889411, role: nimCopy(null, role_3321889412, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889413;

          }
          
function HEX3Aanonymous_3321889414(builder_3321889415, node_3321889416, role_3321889417) {
            var result_3321889418 = null;

            BeforeRet: {
              result_3321889418 = {id: newId_2046820597(), node: node_3321889416, role: nimCopy(null, role_3321889417, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889418;

          }

        add_3338666132(cell_3321889262, {node: node_3321889260, text: [102,110], themeForegroundColors: [[107,101,121,119,111,114,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889262, {node: node_3321889260, text: [40], style: {noSpaceLeft: true, noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label1: {
          var isVisibleFuncHEX60gensym16_3321889286 = null;
          var separatorFuncHEX60gensym16_3321889289 = null;
          var placeholderFuncHEX60gensym16_3321889294 = null;
          var builder_3321889295 = builder_3321889259;
          var node_3321889296 = node_3321889260;
          var role_3321889297 = nimCopy(null, IdFunctionDefinitionParameters_2986344499, NTI2046820355);
          placeholderFuncHEX60gensym16_3321889294 = HEX3Aanonymous_3321889306;
          separatorFuncHEX60gensym16_3321889289 = HEX3Aanonymous_3321889311;
          placeholderFuncHEX60gensym16_3321889294 = HEX3Aanonymous_3321889318;
        };
        add_3338666132(cell_3321889262, buildChildren_3338667723(builder_3321889295, node_3321889296, role_3321889297, 1, isVisibleFuncHEX60gensym16_3321889286, separatorFuncHEX60gensym16_3321889289, placeholderFuncHEX60gensym16_3321889294));
        add_3338666132(cell_3321889262, {node: node_3321889260, text: [41,58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label2: {
          var isVisibleFuncHEX60gensym20_3321889341 = null;
          var separatorFuncHEX60gensym20_3321889344 = null;
          var placeholderFuncHEX60gensym20_3321889349 = null;
          var builder_3321889350 = builder_3321889259;
          var node_3321889351 = node_3321889260;
          var role_3321889352 = nimCopy(null, IdFunctionDefinitionReturnType_2986344498, NTI2046820355);
          placeholderFuncHEX60gensym20_3321889349 = HEX3Aanonymous_3321889361;
          placeholderFuncHEX60gensym20_3321889349 = HEX3Aanonymous_3321889366;
        };
        add_3338666132(cell_3321889262, buildChildren_3338667723(builder_3321889350, node_3321889351, role_3321889352, 1, isVisibleFuncHEX60gensym20_3321889341, separatorFuncHEX60gensym20_3321889344, placeholderFuncHEX60gensym20_3321889349));
        add_3338666132(cell_3321889262, {node: node_3321889260, text: [61], themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label3: {
          var isVisibleFuncHEX60gensym23_3321889389 = null;
          var separatorFuncHEX60gensym23_3321889392 = null;
          var placeholderFuncHEX60gensym23_3321889397 = null;
          var builder_3321889398 = builder_3321889259;
          var node_3321889399 = node_3321889260;
          var role_3321889400 = nimCopy(null, IdFunctionDefinitionBody_2986344497, NTI2046820355);
          placeholderFuncHEX60gensym23_3321889397 = HEX3Aanonymous_3321889409;
          placeholderFuncHEX60gensym23_3321889397 = HEX3Aanonymous_3321889414;
        };
        add_3338666132(cell_3321889262, buildChildren_3338667723(builder_3321889398, node_3321889399, role_3321889400, 2, isVisibleFuncHEX60gensym23_3321889389, separatorFuncHEX60gensym23_3321889392, placeholderFuncHEX60gensym23_3321889397));

      
    }

  var result_3321889261 = null;

  BeforeRet: {
    var cell_3321889262 = {id: newId_2046820597(), node: node_3321889260, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889262.fillChildren = HEX3Aanonymous_3321889263;
    result_3321889261 = cell_3321889262;
    break BeforeRet;
  };

  return result_3321889261;

}

function HEX3Aanonymous_3321889419(builder_3321889420, node_3321889421) {
    
function HEX3Aanonymous_3321889424() {
          
function HEX3Aanonymous_3321889463(builder_3321889464, node_3321889465, role_3321889466) {
            var result_3321889467 = null;

            BeforeRet: {
              result_3321889467 = {id: newId_2046820597(), node: node_3321889465, role: nimCopy(null, role_3321889466, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889467;

          }
          
function HEX3Aanonymous_3321889468(builder_3321889469) {
            var result_3321889470 = null;

            BeforeRet: {
              result_3321889470 = {node: node_3321889453, text: [44], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, disableSelection: true, deleteNeighbor: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, deleteImmediately: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889470;

          }
          
function HEX3Aanonymous_3321889475(builder_3321889476, node_3321889477, role_3321889478) {
            var result_3321889479 = null;

            BeforeRet: {
              result_3321889479 = {id: newId_2046820597(), node: node_3321889453, role: nimCopy(null, role_3321889454, NTI2046820355), shadowText: [], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889479;

          }

        add_3338666132(cell_3321889423, buildChildren_3338667723(builder_3321889420, node_3321889421, IdCallFunction_2986344514, 1, null, null, buildDefaultPlaceholder_3338667718));
        add_3338666132(cell_3321889423, {node: node_3321889421, text: [40], style: {noSpaceLeft: true, noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label1: {
          var isVisibleFuncHEX60gensym26_3321889443 = null;
          var separatorFuncHEX60gensym26_3321889446 = null;
          var placeholderFuncHEX60gensym26_3321889451 = null;
          var builder_3321889452 = builder_3321889420;
          var node_3321889453 = node_3321889421;
          var role_3321889454 = nimCopy(null, IdCallArguments_2986344513, NTI2046820355);
          placeholderFuncHEX60gensym26_3321889451 = HEX3Aanonymous_3321889463;
          separatorFuncHEX60gensym26_3321889446 = HEX3Aanonymous_3321889468;
          placeholderFuncHEX60gensym26_3321889451 = HEX3Aanonymous_3321889475;
        };
        add_3338666132(cell_3321889423, buildChildren_3338667723(builder_3321889452, node_3321889453, role_3321889454, 1, isVisibleFuncHEX60gensym26_3321889443, separatorFuncHEX60gensym26_3321889446, placeholderFuncHEX60gensym26_3321889451));
        add_3338666132(cell_3321889423, {node: node_3321889421, text: [41], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});

      
    }

  var result_3321889422 = null;

  BeforeRet: {
    var cell_3321889423 = {id: newId_2046820597(), node: node_3321889421, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889423.fillChildren = HEX3Aanonymous_3321889424;
    result_3321889422 = cell_3321889423;
    break BeforeRet;
  };

  return result_3321889422;

}

function HEX3Aanonymous_3321889484(builder_3321889485, node_3321889486) {
    
function HEX3Aanonymous_3321889489() {
        add_3338666132(cell_3321889488, {node: node_3321889486, text: [105,102], themeForegroundColors: [[107,101,121,119,111,114,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889488, buildChildren_3338667723(builder_3321889485, node_3321889486, IdThenCaseCondition_2986344510, 1, null, null, buildDefaultPlaceholder_3338667718));
        add_3338666132(cell_3321889488, {node: node_3321889486, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889488, buildChildren_3338667723(builder_3321889485, node_3321889486, IdThenCaseBody_2986344511, 1, null, null, buildDefaultPlaceholder_3338667718));

      
    }

  var result_3321889487 = null;

  BeforeRet: {
    var cell_3321889488 = {id: newId_2046820597(), node: node_3321889486, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889488.fillChildren = HEX3Aanonymous_3321889489;
    result_3321889487 = cell_3321889488;
    break BeforeRet;
  };

  return result_3321889487;

}

function HEX3Aanonymous_3321889498(builder_3321889499, node_3321889500) {
    
function HEX3Aanonymous_3321889503() {
          
function HEX3Aanonymous_3321889538(builder_3321889539, node_3321889540, role_3321889541) {
            var result_3321889542 = null;

            BeforeRet: {
              result_3321889542 = {id: newId_2046820597(), node: node_3321889540, role: nimCopy(null, role_3321889541, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889542;

          }
          
function HEX3Aanonymous_3321889543(builder_3321889544) {
            var result_3321889545 = null;

            BeforeRet: {
              result_3321889545 = {node: node_3321889528, text: [101,108], style: {noSpaceRight: true, onNewLine: true, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false}, themeForegroundColors: [[107,101,121,119,111,114,100]], disableEditing: true, deleteNeighbor: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889545;

          }

        Label1: {
          var isVisibleFuncHEX60gensym30_3321889518 = null;
          var separatorFuncHEX60gensym30_3321889521 = null;
          var placeholderFuncHEX60gensym30_3321889526 = null;
          var builder_3321889527 = builder_3321889499;
          var node_3321889528 = node_3321889500;
          var role_3321889529 = nimCopy(null, IdIfExpressionThenCase_2986344508, NTI2046820355);
          placeholderFuncHEX60gensym30_3321889526 = HEX3Aanonymous_3321889538;
          separatorFuncHEX60gensym30_3321889521 = HEX3Aanonymous_3321889543;
        };
        add_3338666132(cell_3321889502, buildChildren_3338667723(builder_3321889527, node_3321889528, role_3321889529, 1, isVisibleFuncHEX60gensym30_3321889518, separatorFuncHEX60gensym30_3321889521, placeholderFuncHEX60gensym30_3321889526));
        Label2: {
          var i_3321889555 = 0;
          var c_3321889556 = null;
          var colontmp__3321890988 = [];
          colontmp__3321890988 = children_3271566626(node_3321889500, IdIfExpressionElseCase_2986344507);
          var i_3321890989 = 0;
          var L_3321890990 = (colontmp__3321890988).length;
          Label3: {
              Label4: while (true) {
              if (!(i_3321890989 < L_3321890990)) break Label4;
                i_3321889555 = i_3321890989;
                c_3321889556 = colontmp__3321890988[chckIndx(i_3321890989, 0, (colontmp__3321890988).length - 1)];
                if ((i_3321889555 == 0)) {
                add_3338666132(cell_3321889502, {node: node_3321889500, text: [101,108,115,101], style: {onNewLine: true, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false, noSpaceRight: false}, themeForegroundColors: [[107,101,121,119,111,114,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
                add_3338666132(cell_3321889502, {node: node_3321889500, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
                }
                
                add_3338666132(cell_3321889502, buildCell_3338667247(builder_3321889499, c_3321889556, false));
                i_3321890989 = addInt(i_3321890989, 1);
                if (!(((colontmp__3321890988).length == L_3321890990))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321889501 = null;

  BeforeRet: {
    var cell_3321889502 = {id: newId_2046820597(), node: node_3321889500, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889502.fillChildren = HEX3Aanonymous_3321889503;
    result_3321889501 = cell_3321889502;
    break BeforeRet;
  };

  return result_3321889501;

}

function HEX3Aanonymous_3321889565(builder_3321889566, node_3321889567) {
    
function HEX3Aanonymous_3321889570() {
        add_3338666132(cell_3321889569, {node: node_3321889567, text: [119,104,105,108,101], themeForegroundColors: [[107,101,121,119,111,114,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889569, buildChildren_3338667723(builder_3321889566, node_3321889567, IdWhileExpressionCondition_2986344505, 1, null, null, buildDefaultPlaceholder_3338667718));
        add_3338666132(cell_3321889569, {node: node_3321889567, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889569, buildChildren_3338667723(builder_3321889566, node_3321889567, IdWhileExpressionBody_2986344504, 1, null, null, buildDefaultPlaceholder_3338667718));

      
    }

  var result_3321889568 = null;

  BeforeRet: {
    var cell_3321889569 = {id: newId_2046820597(), node: node_3321889567, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889569.fillChildren = HEX3Aanonymous_3321889570;
    result_3321889568 = cell_3321889569;
    break BeforeRet;
  };

  return result_3321889568;

}

function HEX3Aanonymous_3321889579(builder_3321889580, node_3321889581) {
      var Temporary1;

  var result_3321889582 = null;

  BeforeRet: {
    var cell_3321889583 = {id: newId_2046820597(), node: node_3321889581, reference: nimCopy(null, IdNodeReferenceTarget_2986344528, NTI2046820355), property: nimCopy(null, IdINamedName_2986344492, NTI2046820355), disableEditing: true, m_type: NTI3338665997, child: null, parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
      var oHEX60gensym33_3321889586 = resolveReference_3271566700(node_3321889581, IdNodeReferenceTarget_2986344528);
      if (!isSome_3338667398(oHEX60gensym33_3321889586)) Temporary1 = false; else {        var targetNode_3321889609 = get_3338667418(oHEX60gensym33_3321889586);
        Temporary1 = true;      }    if (Temporary1) {
    cell_3321889583.child = {id: newId_2046820597(), node: targetNode_3321889609, property: nimCopy(null, IdINamedName_2986344492, NTI2046820355), themeForegroundColors: [[118,97,114,105,97,98,108,101], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], m_type: NTI3338665996, parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    }
    
    result_3321889582 = cell_3321889583;
    break BeforeRet;
  };

  return result_3321889582;

}

function HEX3Aanonymous_3321889614(builder_3321889615, node_3321889616) {
  var result_3321889617 = null;

  BeforeRet: {
    var cell_3321889622 = {id: newId_2046820597(), node: node_3321889616, shadowText: [60,101,120,112,114,62], themeBackgroundColors: [[38,105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], [38,100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100]], m_type: NTI3338665995, text: [], parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    result_3321889617 = cell_3321889622;
    break BeforeRet;
  };

  return result_3321889617;

}

function HEX3Aanonymous_3321889623(builder_3321889624, node_3321889625) {
    
function HEX3Aanonymous_3321889628() {
        add_3338666132(cell_3321889627, buildChildren_3338667723(builder_3321889624, node_3321889625, IdBinaryExpressionLeft_2986344530, 1, null, null, buildDefaultPlaceholder_3338667718));
        add_3338666132(cell_3321889627, {node: node_3321889625, m_type: NTI3338665998, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889627, buildChildren_3338667723(builder_3321889624, node_3321889625, IdBinaryExpressionRight_2986344531, 1, null, null, buildDefaultPlaceholder_3338667718));

      
    }

  var result_3321889626 = null;

  BeforeRet: {
    var cell_3321889627 = {id: newId_2046820597(), node: node_3321889625, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889627.fillChildren = HEX3Aanonymous_3321889628;
    result_3321889626 = cell_3321889627;
    break BeforeRet;
  };

  return result_3321889626;

}

function HEX3Aanonymous_3321889638(builder_3321889639, node_3321889640) {
    
function HEX3Aanonymous_3321889643() {
        add_3338666132(cell_3321889642, buildChildren_3338667723(builder_3321889639, node_3321889640, IdBinaryExpressionLeft_2986344530, 1, null, null, buildDefaultPlaceholder_3338667718));
        add_3338666132(cell_3321889642, {node: node_3321889640, text: [45,45,45,45,45,45], themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889642, buildChildren_3338667723(builder_3321889639, node_3321889640, IdBinaryExpressionRight_2986344531, 1, null, null, buildDefaultPlaceholder_3338667718));

      
    }

  var result_3321889641 = null;

  BeforeRet: {
    var cell_3321889642 = {id: newId_2046820597(), node: node_3321889640, layout: {kind: 2}, inline: true, m_type: NTI3338665993, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889642.fillChildren = HEX3Aanonymous_3321889643;
    result_3321889641 = cell_3321889642;
    break BeforeRet;
  };

  return result_3321889641;

}

function HEX3Aanonymous_3321889648(builder_3321889649, node_3321889650) {
    
function HEX3Aanonymous_3321889653() {
        add_3338666132(cell_3321889652, {node: node_3321889650, style: {noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false}, disableEditing: true, m_type: NTI3338665998, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889652, buildChildren_3338667723(builder_3321889649, node_3321889650, IdUnaryExpressionChild_2986344481, 1, null, null, buildDefaultPlaceholder_3338667718));

      
    }

  var result_3321889651 = null;

  BeforeRet: {
    var cell_3321889652 = {id: newId_2046820597(), node: node_3321889650, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889652.fillChildren = HEX3Aanonymous_3321889653;
    result_3321889651 = cell_3321889652;
    break BeforeRet;
  };

  return result_3321889651;

}

function HEX3Aanonymous_3321889654(builder_3321889655, node_3321889656) {
  var result_3321889657 = null;

  BeforeRet: {
    var cell_3321889662 = {id: newId_2046820597(), node: node_3321889656, themeForegroundColors: [[115,116,111,114,97,103,101,46,116,121,112,101], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665998, parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    result_3321889657 = cell_3321889662;
    break BeforeRet;
  };

  return result_3321889657;

}

function HEX3Aanonymous_3321889663(builder_3321889664, node_3321889665) {
  var result_3321889666 = null;

  BeforeRet: {
    var cell_3321889671 = {id: newId_2046820597(), node: node_3321889665, themeForegroundColors: [[115,116,111,114,97,103,101,46,116,121,112,101], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665998, parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    result_3321889666 = cell_3321889671;
    break BeforeRet;
  };

  return result_3321889666;

}

function HEX3Aanonymous_3321889672(builder_3321889673, node_3321889674) {
  var result_3321889675 = null;

  BeforeRet: {
    var cell_3321889680 = {id: newId_2046820597(), node: node_3321889674, themeForegroundColors: [[115,116,111,114,97,103,101,46,116,121,112,101], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665998, parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    result_3321889675 = cell_3321889680;
    break BeforeRet;
  };

  return result_3321889675;

}

function HEX3Aanonymous_3321889681(builder_3321889682, node_3321889683) {
    
function HEX3Aanonymous_3321889686() {
          
function HEX3Aanonymous_3321889725(builder_3321889726, node_3321889727, role_3321889728) {
            var result_3321889729 = null;

            BeforeRet: {
              result_3321889729 = {id: newId_2046820597(), node: node_3321889727, role: nimCopy(null, role_3321889728, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889729;

          }
          
function HEX3Aanonymous_3321889730(builder_3321889731) {
            var result_3321889732 = null;

            BeforeRet: {
              result_3321889732 = {node: node_3321889715, text: [44], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, disableSelection: true, deleteNeighbor: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, deleteImmediately: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889732;

          }
          
function HEX3Aanonymous_3321889737(builder_3321889738, node_3321889739, role_3321889740) {
            var result_3321889741 = null;

            BeforeRet: {
              result_3321889741 = {id: newId_2046820597(), node: node_3321889715, role: nimCopy(null, role_3321889716, NTI2046820355), shadowText: [], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889741;

          }

        add_3338666132(cell_3321889685, {node: node_3321889683, m_type: NTI3338665998, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889685, {node: node_3321889683, text: [40], style: {noSpaceLeft: true, noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label1: {
          var isVisibleFuncHEX60gensym34_3321889705 = null;
          var separatorFuncHEX60gensym34_3321889708 = null;
          var placeholderFuncHEX60gensym34_3321889713 = null;
          var builder_3321889714 = builder_3321889682;
          var node_3321889715 = node_3321889683;
          var role_3321889716 = nimCopy(null, IdPrintArguments_2986344478, NTI2046820355);
          placeholderFuncHEX60gensym34_3321889713 = HEX3Aanonymous_3321889725;
          separatorFuncHEX60gensym34_3321889708 = HEX3Aanonymous_3321889730;
          placeholderFuncHEX60gensym34_3321889713 = HEX3Aanonymous_3321889737;
        };
        add_3338666132(cell_3321889685, buildChildren_3338667723(builder_3321889714, node_3321889715, role_3321889716, 1, isVisibleFuncHEX60gensym34_3321889705, separatorFuncHEX60gensym34_3321889708, placeholderFuncHEX60gensym34_3321889713));
        add_3338666132(cell_3321889685, {node: node_3321889683, text: [41], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});

      
    }

  var result_3321889684 = null;

  BeforeRet: {
    var cell_3321889685 = {id: newId_2046820597(), node: node_3321889683, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889685.fillChildren = HEX3Aanonymous_3321889686;
    result_3321889684 = cell_3321889685;
    break BeforeRet;
  };

  return result_3321889684;

}

function HEX3Aanonymous_3321889746(builder_3321889747, node_3321889748) {
    
function HEX3Aanonymous_3321889751() {
          
function HEX3Aanonymous_3321889790(builder_3321889791, node_3321889792, role_3321889793) {
            var result_3321889794 = null;

            BeforeRet: {
              result_3321889794 = {id: newId_2046820597(), node: node_3321889792, role: nimCopy(null, role_3321889793, NTI2046820355), shadowText: [46,46,46], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889794;

          }
          
function HEX3Aanonymous_3321889795(builder_3321889796) {
            var result_3321889797 = null;

            BeforeRet: {
              result_3321889797 = {node: node_3321889780, text: [44], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, disableSelection: true, deleteNeighbor: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, deleteImmediately: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889797;

          }
          
function HEX3Aanonymous_3321889802(builder_3321889803, node_3321889804, role_3321889805) {
            var result_3321889806 = null;

            BeforeRet: {
              result_3321889806 = {id: newId_2046820597(), node: node_3321889780, role: nimCopy(null, role_3321889781, NTI2046820355), shadowText: [], m_type: NTI3338665999, parent: null, line: 0, displayText: ({val: [], has: false}), fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
              break BeforeRet;
            };

            return result_3321889806;

          }

        add_3338666132(cell_3321889750, {node: node_3321889748, m_type: NTI3338665998, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        add_3338666132(cell_3321889750, {node: node_3321889748, text: [40], style: {noSpaceLeft: true, noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});
        Label1: {
          var isVisibleFuncHEX60gensym38_3321889770 = null;
          var separatorFuncHEX60gensym38_3321889773 = null;
          var placeholderFuncHEX60gensym38_3321889778 = null;
          var builder_3321889779 = builder_3321889747;
          var node_3321889780 = node_3321889748;
          var role_3321889781 = nimCopy(null, IdBuildArguments_2986344479, NTI2046820355);
          placeholderFuncHEX60gensym38_3321889778 = HEX3Aanonymous_3321889790;
          separatorFuncHEX60gensym38_3321889773 = HEX3Aanonymous_3321889795;
          placeholderFuncHEX60gensym38_3321889778 = HEX3Aanonymous_3321889802;
        };
        add_3338666132(cell_3321889750, buildChildren_3338667723(builder_3321889779, node_3321889780, role_3321889781, 1, isVisibleFuncHEX60gensym38_3321889770, separatorFuncHEX60gensym38_3321889773, placeholderFuncHEX60gensym38_3321889778));
        add_3338666132(cell_3321889750, {node: node_3321889748, text: [41], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, themeForegroundColors: [[112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], disableEditing: true, m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, disableSelection: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})});

      
    }

  var result_3321889749 = null;

  BeforeRet: {
    var cell_3321889750 = {id: newId_2046820597(), node: node_3321889748, layout: {kind: 1}, m_type: NTI3338665993, inline: false, children: [], parent: null, line: 0, displayText: ({val: [], has: false}), shadowText: [], fillChildren: null, filled: false, isVisible: null, nodeFactory: null, style: null, disableSelection: false, disableEditing: false, deleteImmediately: false, deleteNeighbor: false, dontReplaceWithDefault: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false, fontSizeIncreasePercent: 0.0, themeForegroundColors: [], themeBackgroundColors: [], foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};
    cell_3321889750.fillChildren = HEX3Aanonymous_3321889751;
    result_3321889749 = cell_3321889750;
    break BeforeRet;
  };

  return result_3321889749;

}
var typeClass_3321888779 = newNodeClass_3271565986(IdType_2986344473, [84,121,112,101], [], null, [], true, false, [], [], []);
var stringTypeClass_3321888780 = newNodeClass_3271565986(IdString_2986344461, [83,116,114,105,110,103,84,121,112,101], [115,116,114,105,110,103], typeClass_3321888779, [], false, false, [], [], []);
var intTypeClass_3321888781 = newNodeClass_3271565986(IdInt_2986344460, [73,110,116,84,121,112,101], [105,110,116], typeClass_3321888779, [], false, false, [], [], []);
var voidTypeClass_3321888782 = newNodeClass_3271565986(IdVoid_2986344462, [86,111,105,100,84,121,112,101], [118,111,105,100], typeClass_3321888779, [], false, false, [], [], []);
var functionTypeClass_3321888783 = newNodeClass_3271565986(IdFunctionType_2986344475, [70,117,110,99,116,105,111,110,84,121,112,101], [], typeClass_3321888779, [], false, false, [], [{id: nimCopy(null, IdFunctionTypeReturnType_2986344476, NTI2046820355), role: [114,101,116,117,114,110,84,121,112,101], class: id_3271557407(typeClass_3321888779), count: 0}, {id: nimCopy(null, IdFunctionTypeParameterTypes_2986344477, NTI2046820355), role: [112,97,114,97,109,101,116,101,114,84,121,112,101,115], class: id_3271557407(typeClass_3321888779), count: 3}], []);
var namedInterface_3321888784 = newNodeClass_3271565986(IdINamed_2986344493, [73,78,97,109,101,100], [], null, [], true, true, [{id: nimCopy(null, IdINamedName_2986344492, NTI2046820355), role: [110,97,109,101], typ: 1}], [], []);
var declarationInterface_3321888785 = newNodeClass_3271565986(IdIDeclaration_2986344482, [73,68,101,99,108,97,114,97,116,105,111,110], [], namedInterface_3321888784, [], true, true, [], [], []);
var expressionClass_3321888786 = newNodeClass_3271565986(IdExpression_2986344533, [69,120,112,114,101,115,115,105,111,110], [], null, [], true, false, [], [], []);
var binaryExpressionClass_3321888787 = newNodeClass_3271565986(IdBinaryExpression_2986344532, [66,105,110,97,114,121,69,120,112,114,101,115,115,105,111,110], [], expressionClass_3321888786, [], true, false, [], [{id: nimCopy(null, IdBinaryExpressionLeft_2986344530, NTI2046820355), role: [108,101,102,116], class: id_3271557407(expressionClass_3321888786), count: 0}, {id: nimCopy(null, IdBinaryExpressionRight_2986344531, NTI2046820355), role: [114,105,103,104,116], class: id_3271557407(expressionClass_3321888786), count: 0}], []);
var unaryExpressionClass_3321888788 = newNodeClass_3271565986(IdUnaryExpression_2986344480, [85,110,97,114,121,69,120,112,114,101,115,115,105,111,110], [], expressionClass_3321888786, [], true, false, [], [{id: nimCopy(null, IdUnaryExpressionChild_2986344481, NTI2046820355), role: [99,104,105,108,100], class: id_3271557407(expressionClass_3321888786), count: 0}], []);
var emptyLineClass_3321888789 = newNodeClass_3271565986(IdEmptyLine_2986344489, [69,109,112,116,121,76,105,110,101], [], expressionClass_3321888786, [], false, false, [], [], []);
var addExpressionClass_3321888790 = newNodeClass_3271565986(IdAdd_2986344451, [66,105,110,97,114,121,65,100,100,69,120,112,114,101,115,115,105,111,110], [43], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var subExpressionClass_3321888791 = newNodeClass_3271565986(IdSub_2986344452, [66,105,110,97,114,121,83,117,98,69,120,112,114,101,115,115,105,111,110], [45], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var mulExpressionClass_3321888792 = newNodeClass_3271565986(IdMul_2986344453, [66,105,110,97,114,121,77,117,108,69,120,112,114,101,115,115,105,111,110], [42], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var divExpressionClass_3321888793 = newNodeClass_3271565986(IdDiv_2986344454, [66,105,110,97,114,121,68,105,118,69,120,112,114,101,115,115,105,111,110], [47], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var modExpressionClass_3321888794 = newNodeClass_3271565986(IdMod_2986344455, [66,105,110,97,114,121,77,111,100,69,120,112,114,101,115,115,105,111,110], [37], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var appendStringExpressionClass_3321888795 = newNodeClass_3271565986(IdAppendString_2986344459, [66,105,110,97,114,121,65,112,112,101,110,100,83,116,114,105,110,103,69,120,112,114,101,115,115,105,111,110], [38], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var lessExpressionClass_3321888796 = newNodeClass_3271565986(IdLess_2986344463, [66,105,110,97,114,121,76,101,115,115,69,120,112,114,101,115,115,105,111,110], [60], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var lessEqualExpressionClass_3321888797 = newNodeClass_3271565986(IdLessEqual_2986344464, [66,105,110,97,114,121,76,101,115,115,69,113,117,97,108,69,120,112,114,101,115,115,105,111,110], [60,61], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var greaterExpressionClass_3321888798 = newNodeClass_3271565986(IdGreater_2986344465, [66,105,110,97,114,121,71,114,101,97,116,101,114,69,120,112,114,101,115,115,105,111,110], [62], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var greaterEqualExpressionClass_3321888799 = newNodeClass_3271565986(IdGreaterEqual_2986344466, [66,105,110,97,114,121,71,114,101,97,116,101,114,69,113,117,97,108,69,120,112,114,101,115,115,105,111,110], [62,61], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var equalExpressionClass_3321888800 = newNodeClass_3271565986(IdEqual_2986344467, [66,105,110,97,114,121,69,113,117,97,108,69,120,112,114,101,115,115,105,111,110], [61,61], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var notEqualExpressionClass_3321888801 = newNodeClass_3271565986(IdNotEqual_2986344468, [66,105,110,97,114,121,78,111,116,69,113,117,97,108,69,120,112,114,101,115,115,105,111,110], [33,61], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var andExpressionClass_3321888802 = newNodeClass_3271565986(IdAnd_2986344469, [66,105,110,97,114,121,65,110,100,69,120,112,114,101,115,115,105,111,110], [97,110,100], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var orExpressionClass_3321888803 = newNodeClass_3271565986(IdOr_2986344470, [66,105,110,97,114,121,79,114,69,120,112,114,101,115,115,105,111,110], [111,114], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var orderExpressionClass_3321888804 = newNodeClass_3271565986(IdOrder_2986344471, [66,105,110,97,114,121,79,114,100,101,114,69,120,112,114,101,115,115,105,111,110], [60,61,62], binaryExpressionClass_3321888787, [], false, false, [], [], []);
var negateExpressionClass_3321888805 = newNodeClass_3271565986(IdNegate_2986344456, [85,110,97,114,121,78,101,103,97,116,101,69,120,112,114,101,115,115,105,111,110], [45], unaryExpressionClass_3321888788, [], false, false, [], [], []);
var notExpressionClass_3321888806 = newNodeClass_3271565986(IdNot_2986344457, [85,110,97,114,121,78,111,116,69,120,112,114,101,115,115,105,111,110], [33], unaryExpressionClass_3321888788, [], false, false, [], [], []);
var printExpressionClass_3321888807 = newNodeClass_3271565986(IdPrint_2986344450, [80,114,105,110,116,69,120,112,114,101,115,115,105,111,110], [112,114,105,110,116], expressionClass_3321888786, [], false, false, [], [{id: nimCopy(null, IdPrintArguments_2986344478, NTI2046820355), role: [97,114,103,117,109,101,110,116,115], class: id_3271557407(expressionClass_3321888786), count: 3}], []);
var buildExpressionClass_3321888808 = newNodeClass_3271565986(IdBuildString_2986344472, [66,117,105,108,100,69,120,112,114,101,115,115,105,111,110], [98,117,105,108,100], expressionClass_3321888786, [], false, false, [], [{id: nimCopy(null, IdBuildArguments_2986344479, NTI2046820355), role: [97,114,103,117,109,101,110,116,115], class: id_3271557407(expressionClass_3321888786), count: 3}], []);
var emptyClass_3321888809 = newNodeClass_3271565986(IdEmpty_2986344527, [69,109,112,116,121], [], expressionClass_3321888786, [], false, false, [], [], []);
var nodeReferenceClass_3321888810 = newNodeClass_3271565986(IdNodeReference_2986344529, [78,111,100,101,82,101,102,101,114,101,110,99,101], [114,101,102], expressionClass_3321888786, [], false, false, [], [], [{id: nimCopy(null, IdNodeReferenceTarget_2986344528, NTI2046820355), role: [116,97,114,103,101,116], class: id_3271557407(declarationInterface_3321888785)}]);
var numberLiteralClass_3321888811 = newNodeClass_3271565986(IdIntegerLiteral_2986344539, [73,110,116,101,103,101,114,76,105,116,101,114,97,108], [110,117,109,98,101,114,32,108,105,116,101,114,97,108], expressionClass_3321888786, [], false, false, [{id: nimCopy(null, IdIntegerLiteralValue_2986344538, NTI2046820355), role: [118,97,108,117,101], typ: 0}], [], []);
var stringLiteralClass_3321888812 = newNodeClass_3271565986(IdStringLiteral_2986344537, [83,116,114,105,110,103,76,105,116,101,114,97,108], [39,39], expressionClass_3321888786, [], false, false, [{id: nimCopy(null, IdStringLiteralValue_2986344536, NTI2046820355), role: [118,97,108,117,101], typ: 1}], [], []);
var boolLiteralClass_3321888813 = newNodeClass_3271565986(IdBoolLiteral_2986344535, [66,111,111,108,76,105,116,101,114,97,108], [98,111,111,108], expressionClass_3321888786, [], false, false, [{id: nimCopy(null, IdBoolLiteralValue_2986344534, NTI2046820355), role: [118,97,108,117,101], typ: 2}], [], []);
var constDeclClass_3321888814 = newNodeClass_3271565986(IdConstDecl_2986344526, [67,111,110,115,116,68,101,99,108], [99,111,110,115,116], expressionClass_3321888786, [declarationInterface_3321888785], false, false, [], [{id: nimCopy(null, IdConstDeclType_2986344525, NTI2046820355), role: [116,121,112,101], class: id_3271557407(typeClass_3321888779), count: 2}, {id: nimCopy(null, IdConstDeclValue_2986344524, NTI2046820355), role: [118,97,108,117,101], class: id_3271557407(expressionClass_3321888786), count: 0}], []);
var letDeclClass_3321888815 = newNodeClass_3271565986(IdLetDecl_2986344523, [76,101,116,68,101,99,108], [108,101,116], expressionClass_3321888786, [declarationInterface_3321888785], false, false, [], [{id: nimCopy(null, IdLetDeclType_2986344522, NTI2046820355), role: [116,121,112,101], class: id_3271557407(typeClass_3321888779), count: 2}, {id: nimCopy(null, IdLetDeclValue_2986344521, NTI2046820355), role: [118,97,108,117,101], class: id_3271557407(expressionClass_3321888786), count: 2}], []);
var varDeclClass_3321888816 = newNodeClass_3271565986(IdVarDecl_2986344520, [86,97,114,68,101,99,108], [118,97,114], expressionClass_3321888786, [declarationInterface_3321888785], false, false, [], [{id: nimCopy(null, IdVarDeclType_2986344519, NTI2046820355), role: [116,121,112,101], class: id_3271557407(typeClass_3321888779), count: 2}, {id: nimCopy(null, IdVarDeclValue_2986344518, NTI2046820355), role: [118,97,108,117,101], class: id_3271557407(expressionClass_3321888786), count: 2}], []);
var nodeListClass_3321888817 = newNodeClass_3271565986(IdNodeList_2986344517, [78,111,100,101,76,105,115,116], [], null, [], false, false, [], [{id: nimCopy(null, IdNodeListChildren_2986344516, NTI2046820355), role: [99,104,105,108,100,114,101,110], class: id_3271557407(expressionClass_3321888786), count: 3}], []);
var blockClass_3321888818 = newNodeClass_3271565986(IdBlock_2986344491, [66,108,111,99,107], [123], expressionClass_3321888786, [], false, false, [], [{id: nimCopy(null, IdBlockChildren_2986344490, NTI2046820355), role: [99,104,105,108,100,114,101,110], class: id_3271557407(expressionClass_3321888786), count: 3}], []);
var callClass_3321888819 = newNodeClass_3271565986(IdCall_2986344515, [67,97,108,108], [], expressionClass_3321888786, [], false, false, [], [{id: nimCopy(null, IdCallFunction_2986344514, NTI2046820355), role: [102,117,110,99,116,105,111,110], class: id_3271557407(expressionClass_3321888786), count: 0}, {id: nimCopy(null, IdCallArguments_2986344513, NTI2046820355), role: [97,114,103,117,109,101,110,116,115], class: id_3271557407(expressionClass_3321888786), count: 3}], []);
var thenCaseClass_3321888820 = newNodeClass_3271565986(IdThenCase_2986344509, [84,104,101,110,67,97,115,101], [], null, [], false, false, [], [{id: nimCopy(null, IdThenCaseCondition_2986344510, NTI2046820355), role: [99,111,110,100,105,116,105,111,110], class: id_3271557407(expressionClass_3321888786), count: 0}, {id: nimCopy(null, IdThenCaseBody_2986344511, NTI2046820355), role: [98,111,100,121], class: id_3271557407(expressionClass_3321888786), count: 0}], []);
var ifClass_3321888821 = newNodeClass_3271565986(IdIfExpression_2986344512, [73,102,69,120,112,114,101,115,115,105,111,110], [105,102], expressionClass_3321888786, [], false, false, [], [{id: nimCopy(null, IdIfExpressionThenCase_2986344508, NTI2046820355), role: [116,104,101,110,67,97,115,101], class: id_3271557407(thenCaseClass_3321888820), count: 1}, {id: nimCopy(null, IdIfExpressionElseCase_2986344507, NTI2046820355), role: [101,108,115,101,67,97,115,101], class: id_3271557407(expressionClass_3321888786), count: 2}], []);
var whileClass_3321888822 = newNodeClass_3271565986(IdWhileExpression_2986344506, [87,104,105,108,101,69,120,112,114,101,115,115,105,111,110], [119,104,105,108,101], expressionClass_3321888786, [], false, false, [], [{id: nimCopy(null, IdWhileExpressionCondition_2986344505, NTI2046820355), role: [99,111,110,100,105,116,105,111,110], class: id_3271557407(expressionClass_3321888786), count: 0}, {id: nimCopy(null, IdWhileExpressionBody_2986344504, NTI2046820355), role: [98,111,100,121], class: id_3271557407(expressionClass_3321888786), count: 0}], []);
var parameterDeclClass_3321888823 = newNodeClass_3271565986(IdParameterDecl_2986344503, [80,97,114,97,109,101,116,101,114,68,101,99,108], [112,97,114,97,109], expressionClass_3321888786, [declarationInterface_3321888785], false, false, [], [{id: nimCopy(null, IdParameterDeclType_2986344502, NTI2046820355), role: [116,121,112,101], class: id_3271557407(typeClass_3321888779), count: 0}, {id: nimCopy(null, IdParameterDeclValue_2986344501, NTI2046820355), role: [118,97,108,117,101], class: id_3271557407(expressionClass_3321888786), count: 2}], []);
var functionDefinitionClass_3321888824 = newNodeClass_3271565986(IdFunctionDefinition_2986344500, [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [102,110], expressionClass_3321888786, [], false, false, [], [{id: nimCopy(null, IdFunctionDefinitionParameters_2986344499, NTI2046820355), role: [112,97,114,97,109,101,116,101,114,115], class: id_3271557407(parameterDeclClass_3321888823), count: 3}, {id: nimCopy(null, IdFunctionDefinitionReturnType_2986344498, NTI2046820355), role: [114,101,116,117,114,110,84,121,112,101], class: id_3271557407(typeClass_3321888779), count: 2}, {id: nimCopy(null, IdFunctionDefinitionBody_2986344497, NTI2046820355), role: [98,111,100,121], class: id_3271557407(expressionClass_3321888786), count: 0}], []);
var assignmentClass_3321888825 = newNodeClass_3271565986(IdAssignment_2986344496, [65,115,115,105,103,110,109,101,110,116], [61], expressionClass_3321888786, [], false, false, [], [{id: nimCopy(null, IdAssignmentTarget_2986344495, NTI2046820355), role: [116,97,114,103,101,116], class: id_3271557407(expressionClass_3321888786), count: 0}, {id: nimCopy(null, IdAssignmentValue_2986344494, NTI2046820355), role: [118,97,108,117,101], class: id_3271557407(expressionClass_3321888786), count: 0}], []);
var builder_3321888826 = [newCellBuilder_3271568734()];
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(emptyLineClass_3321888789), idNone_2046820633(), HEX3Aanonymous_3321888827);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(emptyClass_3321888809), idNone_2046820633(), HEX3Aanonymous_3321888832);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(numberLiteralClass_3321888811), idNone_2046820633(), HEX3Aanonymous_3321888837);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(boolLiteralClass_3321888813), idNone_2046820633(), HEX3Aanonymous_3321888846);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(stringLiteralClass_3321888812), idNone_2046820633(), HEX3Aanonymous_3321888855);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(nodeListClass_3321888817), idNone_2046820633(), HEX3Aanonymous_3321888872);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(blockClass_3321888818), idNone_2046820633(), HEX3Aanonymous_3321888916);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(constDeclClass_3321888814), idNone_2046820633(), HEX3Aanonymous_3321888924);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(letDeclClass_3321888815), idNone_2046820633(), HEX3Aanonymous_3321889007);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(varDeclClass_3321888816), idNone_2046820633(), HEX3Aanonymous_3321889072);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(assignmentClass_3321888825), idNone_2046820633(), HEX3Aanonymous_3321889140);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(parameterDeclClass_3321888823), idNone_2046820633(), HEX3Aanonymous_3321889150);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(functionDefinitionClass_3321888824), idNone_2046820633(), HEX3Aanonymous_3321889258);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(callClass_3321888819), idNone_2046820633(), HEX3Aanonymous_3321889419);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(thenCaseClass_3321888820), idNone_2046820633(), HEX3Aanonymous_3321889484);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(ifClass_3321888821), idNone_2046820633(), HEX3Aanonymous_3321889498);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(whileClass_3321888822), idNone_2046820633(), HEX3Aanonymous_3321889565);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(nodeReferenceClass_3321888810), idNone_2046820633(), HEX3Aanonymous_3321889579);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(expressionClass_3321888786), idNone_2046820633(), HEX3Aanonymous_3321889614);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(binaryExpressionClass_3321888787), idNone_2046820633(), HEX3Aanonymous_3321889623);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(divExpressionClass_3321888793), idNone_2046820633(), HEX3Aanonymous_3321889638);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(unaryExpressionClass_3321888788), idNone_2046820633(), HEX3Aanonymous_3321889648);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(stringTypeClass_3321888780), idNone_2046820633(), HEX3Aanonymous_3321889654);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(voidTypeClass_3321888782), idNone_2046820633(), HEX3Aanonymous_3321889663);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(intTypeClass_3321888781), idNone_2046820633(), HEX3Aanonymous_3321889672);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(printExpressionClass_3321888807), idNone_2046820633(), HEX3Aanonymous_3321889681);
addBuilderFor_3271568748(builder_3321888826[0], id_3271557407(buildExpressionClass_3321888808), idNone_2046820633(), HEX3Aanonymous_3321889746);
var baseLanguage_3321889815 = newLanguage_3271558016(IdBaseLanguage_2986344474, [namedInterface_3321888784, declarationInterface_3321888785, typeClass_3321888779, stringTypeClass_3321888780, intTypeClass_3321888781, voidTypeClass_3321888782, functionTypeClass_3321888783, expressionClass_3321888786, binaryExpressionClass_3321888787, unaryExpressionClass_3321888788, emptyLineClass_3321888789, numberLiteralClass_3321888811, stringLiteralClass_3321888812, boolLiteralClass_3321888813, nodeReferenceClass_3321888810, emptyClass_3321888809, constDeclClass_3321888814, letDeclClass_3321888815, varDeclClass_3321888816, nodeListClass_3321888817, blockClass_3321888818, callClass_3321888819, thenCaseClass_3321888820, ifClass_3321888821, whileClass_3321888822, parameterDeclClass_3321888823, functionDefinitionClass_3321888824, assignmentClass_3321888825, addExpressionClass_3321888790, subExpressionClass_3321888791, mulExpressionClass_3321888792, divExpressionClass_3321888793, modExpressionClass_3321888794, lessExpressionClass_3321888796, lessEqualExpressionClass_3321888797, greaterExpressionClass_3321888798, greaterEqualExpressionClass_3321888799, equalExpressionClass_3321888800, notEqualExpressionClass_3321888801, andExpressionClass_3321888802, orExpressionClass_3321888803, orderExpressionClass_3321888804, negateExpressionClass_3321888805, notExpressionClass_3321888806, appendStringExpressionClass_3321888795, printExpressionClass_3321888807, buildExpressionClass_3321888808], builder_3321888826[0]);
printNodes_3305112157([newTopPairNode_3305111686(newNameNode_3305111683([98,97,115,101,76,97,110,103,117,97,103,101]), newNodeFromBaseType_3321889820(baseLanguage_3321889815))]);

function newProject_3271557993() {
  var result_3271557994 = null;

    result_3271557994 = ({models: ({data: [], counter: 0}), builder: null});

  return result_3271557994;

}
var project_3254779953 = [newProject_3271557993()];

function initTable_3254780357(initialSize_3254780360) {
  var result_3254780366 = ({data: [], counter: 0});

    var correctSizeHEX60gensym14_3254780368 = slotsNeeded_1308622891(chckRange(initialSize_3254780360, 0, 2147483647));
    result_3254780366.counter = 0;
    result_3254780366.data = new Array(chckRange(correctSizeHEX60gensym14_3254780368, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym14_3254780368, 0, 2147483647) ; ++i) { result_3254780366.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})}}; }
  return result_3254780366;

}

function hash_3254780517(x_3254780519) {
  var result_3254780520 = 0;

    result_3254780520 = hashWangYi1_1325400244(x_3254780519);

  return result_3254780520;

}

function rawGet_3254780510(t_3254780513, key_3254780514, hc_3254780515, hc_3254780515_Idx) {
  var result_3254780516 = 0;

  BeforeRet: {
    hc_3254780515[hc_3254780515_Idx] = hash_3254780517(key_3254780514);
    if ((hc_3254780515[hc_3254780515_Idx] == 0)) {
    hc_3254780515[hc_3254780515_Idx] = 314159265;
    }
    
    if (((t_3254780513.data).length == 0)) {
    result_3254780516 = -1;
    break BeforeRet;
    }
    
    var h_3254780593 = (hc_3254780515[hc_3254780515_Idx] & (t_3254780513.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254780513.data[chckIndx(h_3254780593, 0, (t_3254780513.data).length - 1)].Field0)) break Label2;
          if (((t_3254780513.data[chckIndx(h_3254780593, 0, (t_3254780513.data).length - 1)].Field0 == hc_3254780515[hc_3254780515_Idx]) && (t_3254780513.data[chckIndx(h_3254780593, 0, (t_3254780513.data).length - 1)].Field1 == key_3254780514))) {
          result_3254780516 = h_3254780593;
          break BeforeRet;
          }
          
          h_3254780593 = nextTry_1308622883(h_3254780593, (t_3254780513.data).length - 1);
        }
    };
    result_3254780516 = subInt(-1, h_3254780593);
  };

  return result_3254780516;

}

function mustRehash_3254780988(t_3254780990) {
  var result_3254780991 = false;

    if (!((t_3254780990.counter < (t_3254780990.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3254780991 = ((mulInt((t_3254780990.data).length, 2) < mulInt(t_3254780990.counter, 3)) || (subInt((t_3254780990.data).length, t_3254780990.counter) < 4));

  return result_3254780991;

}

function rawInsert_3254781597(t_3254781601, data_3254781602, data_3254781602_Idx, key_3254781603, val_3254781604, hc_3254781605, h_3254781606) {
    data_3254781602[data_3254781602_Idx][chckIndx(h_3254781606, 0, (data_3254781602[data_3254781602_Idx]).length - 1)].Field1 = key_3254781603;
    data_3254781602[data_3254781602_Idx][chckIndx(h_3254781606, 0, (data_3254781602[data_3254781602_Idx]).length - 1)].Field2 = nimCopy(data_3254781602[data_3254781602_Idx][chckIndx(h_3254781606, 0, (data_3254781602[data_3254781602_Idx]).length - 1)].Field2, val_3254781604, NTI3254780213);
    data_3254781602[data_3254781602_Idx][chckIndx(h_3254781606, 0, (data_3254781602[data_3254781602_Idx]).length - 1)].Field0 = hc_3254781605;

  
}

function enlarge_3254781191(t_3254781194) {
    var n_3254781197 = [];
    n_3254781197 = new Array(chckRange(mulInt((t_3254781194.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3254781194.data).length, 2), 0, 2147483647) ; ++i) { n_3254781197[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})}}; }    var Temporary1 = t_3254781194.data; t_3254781194.data = n_3254781197; n_3254781197 = Temporary1;    Label2: {
      var i_3254781277 = 0;
      var colontmp__3254783886 = 0;
      colontmp__3254783886 = (n_3254781197).length - 1;
      var res_3254783887 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_3254783887 <= colontmp__3254783886)) break Label4;
            i_3254781277 = res_3254783887;
            var eh_3254781355 = n_3254781197[chckIndx(i_3254781277, 0, (n_3254781197).length - 1)].Field0;
            if (isFilled_1308622880(eh_3254781355)) {
            var j_3254781359 = (eh_3254781355 & (t_3254781194.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3254781194.data[chckIndx(j_3254781359, 0, (t_3254781194.data).length - 1)].Field0)) break Label6;
                  j_3254781359 = nextTry_1308622883(j_3254781359, (t_3254781194.data).length - 1);
                }
            };
            rawInsert_3254781597(t_3254781194, t_3254781194, "data", n_3254781197[chckIndx(i_3254781277, 0, (n_3254781197).length - 1)].Field1, n_3254781197[chckIndx(i_3254781277, 0, (n_3254781197).length - 1)].Field2, eh_3254781355, j_3254781359);
            }
            
            res_3254783887 = addInt(res_3254783887, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3254781847(t_3254781850, key_3254781851, hc_3254781852) {
  var result_3254781853 = 0;

  BeforeRet: {
    if (((t_3254781850.data).length == 0)) {
    result_3254781853 = -1;
    break BeforeRet;
    }
    
    var h_3254781920 = (hc_3254781852 & (t_3254781850.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254781850.data[chckIndx(h_3254781920, 0, (t_3254781850.data).length - 1)].Field0)) break Label2;
          if (((t_3254781850.data[chckIndx(h_3254781920, 0, (t_3254781850.data).length - 1)].Field0 == hc_3254781852) && (t_3254781850.data[chckIndx(h_3254781920, 0, (t_3254781850.data).length - 1)].Field1 == key_3254781851))) {
          result_3254781853 = h_3254781920;
          break BeforeRet;
          }
          
          h_3254781920 = nextTry_1308622883(h_3254781920, (t_3254781850.data).length - 1);
        }
    };
    result_3254781853 = subInt(-1, h_3254781920);
  };

  return result_3254781853;

}

function HEX5BHEX5DHEX3D_3254780433(t_3254780436, key_3254780437, val_3254780438) {
    if (((t_3254780436.data).length == 0)) {
    var correctSizeHEX60gensym17_3254780504 = slotsNeeded_1308622891(32);
    t_3254780436.counter = 0;
    t_3254780436.data = new Array(chckRange(correctSizeHEX60gensym17_3254780504, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym17_3254780504, 0, 2147483647) ; ++i) { t_3254780436.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})}}; }    }
    
    var hc_3254780509 = [0];
    var index_3254780841 = rawGet_3254780510(t_3254780436, key_3254780437, hc_3254780509, 0);
    if ((0 <= index_3254780841)) {
    t_3254780436.data[chckIndx(index_3254780841, 0, (t_3254780436.data).length - 1)].Field2 = nimCopy(t_3254780436.data[chckIndx(index_3254780841, 0, (t_3254780436.data).length - 1)].Field2, val_3254780438, NTI3254780213);
    }
    else {
      if (((t_3254780436.data).length == 0)) {
      var correctSizeHEX60gensym22_3254780983 = slotsNeeded_1308622891(32);
      t_3254780436.counter = 0;
      t_3254780436.data = new Array(chckRange(correctSizeHEX60gensym22_3254780983, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym22_3254780983, 0, 2147483647) ; ++i) { t_3254780436.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})}}; }      }
      
      if (mustRehash_3254780988(t_3254780436)) {
      enlarge_3254781191(t_3254780436);
      index_3254780841 = rawGetKnownHC_3254781847(t_3254780436, key_3254780437, hc_3254780509[0]);
      }
      
      index_3254780841 = subInt(-1, index_3254780841);
      rawInsert_3254781597(t_3254780436, t_3254780436, "data", key_3254780437, val_3254780438, hc_3254780509[0], index_3254780841);
      t_3254780436.counter = addInt(t_3254780436.counter, 1);
    }
    

  
}

function initTable_3254782905(initialSize_3254782908) {
  var result_3254782909 = ({data: [], counter: 0});

    var correctSizeHEX60gensym30_3254782911 = slotsNeeded_1308622891(chckRange(initialSize_3254782908, 0, 2147483647));
    result_3254782909.counter = 0;
    result_3254782909.data = new Array(chckRange(correctSizeHEX60gensym30_3254782911, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym30_3254782911, 0, 2147483647) ; ++i) { result_3254782909.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3254782909;

}
var classes_3254780382 = [initTable_3254780357(32)];
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 0, {Field0: emptyClass_3321888809, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 1, {Field0: nodeReferenceClass_3321888810, Field1: nimCopy(null, IdNodeReferenceTarget_2986344528, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 2, {Field0: numberLiteralClass_3321888811, Field1: nimCopy(null, IdIntegerLiteralValue_2986344538, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 3, {Field0: stringLiteralClass_3321888812, Field1: nimCopy(null, IdStringLiteralValue_2986344536, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 4, {Field0: constDeclClass_3321888814, Field1: nimCopy(null, IdINamedName_2986344492, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 5, {Field0: letDeclClass_3321888815, Field1: nimCopy(null, IdINamedName_2986344492, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 6, {Field0: varDeclClass_3321888816, Field1: nimCopy(null, IdINamedName_2986344492, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 7, {Field0: blockClass_3321888818, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 8, {Field0: callClass_3321888819, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 9, {Field0: ifClass_3321888821, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 10, {Field0: whileClass_3321888822, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 11, {Field0: functionDefinitionClass_3321888824, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 12, {Field0: parameterDeclClass_3321888823, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780433(classes_3254780382[0], 13, {Field0: assignmentClass_3321888825, Field1: idNone_2046820633()});
var binaryOperators_3254782916 = [initTable_3254782905(32)];
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdAdd_2986344451, addExpressionClass_3321888790);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdSub_2986344452, subExpressionClass_3321888791);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdMul_2986344453, mulExpressionClass_3321888792);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdDiv_2986344454, divExpressionClass_3321888793);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdMod_2986344455, modExpressionClass_3321888794);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdAppendString_2986344459, appendStringExpressionClass_3321888795);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdLess_2986344463, lessExpressionClass_3321888796);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdLessEqual_2986344464, lessEqualExpressionClass_3321888797);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdGreater_2986344465, greaterExpressionClass_3321888798);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdGreaterEqual_2986344466, greaterEqualExpressionClass_3321888799);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdEqual_2986344467, equalExpressionClass_3321888800);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdNotEqual_2986344468, notEqualExpressionClass_3321888801);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdAnd_2986344469, andExpressionClass_3321888802);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdOr_2986344470, orExpressionClass_3321888803);
HEX5BHEX5DHEX3D_3271558087(binaryOperators_3254782916[0], IdOrder_2986344471, orderExpressionClass_3321888804);
var unaryOperators_3254783761 = [initTable_3254782905(32)];
HEX5BHEX5DHEX3D_3271558087(unaryOperators_3254783761[0], IdNot_2986344457, notExpressionClass_3321888806);
HEX5BHEX5DHEX3D_3271558087(unaryOperators_3254783761[0], IdNegate_2986344456, negateExpressionClass_3321888805);

function scroll_3254794583(self_3254794584, amount_3254794585) {
    HEX2BHEX3D_855640304(self_3254794584, "scrollOffset", amount_3254794585);
    markDirty_2415919143(self_3254794584);

  
}

function scrollJsWrapper2_3254794580(self_3254794641, amount_3254794642) {
    scroll_3254794583(self_3254794641, amount_3254794642);

  
}
editor_model_prototype.scroll2 = function(amount_ /* : float32 */) { return (scrollJsWrapper2_3254794580(this, amount_));};

function getModeConfig_3254794677(self_3254794678, mode_3254794679) {
  var result_3254794680 = null;

  BeforeRet: {
    result_3254794680 = getEventHandlerConfig_1291849162(self_3254794678.editor, ([101,100,105,116,111,114,46,109,111,100,101,108,46] || []).concat(mode_3254794679 || []));
    break BeforeRet;
  };

  return result_3254794680;

}

function setMode_3254794686(self_3254794687, mode_3254794688) {
        
function HEX3Aanonymous_3254794709(actionHEX60gensym229HEX60gensym230_3254794710, argHEX60gensym229HEX60gensym230_3254794711) {
          var result_3254794712 = 0;

          BeforeRet: {
            if (handlerHEX60gensym229_3254794697.config.handleActions) {
            var action_3254794713 = nimCopy(null, actionHEX60gensym229HEX60gensym230_3254794710, NTI33554449);
            var arg_3254794714 = nimCopy(null, argHEX60gensym229HEX60gensym230_3254794711, NTI33554449);
            var responseHEX60gensym229HEX60gensym230_3254794715 = handleAction_3254780231(self_3254794687, action_3254794713, arg_3254794714);
            if (handlerHEX60gensym229_3254794697.config.consumeAllActions) {
            result_3254794712 = 3;
            break BeforeRet;
            }
            
            result_3254794712 = responseHEX60gensym229HEX60gensym230_3254794715;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym229_3254794697.config.consumeAllActions) {
            result_3254794712 = 3;
            break BeforeRet;
            }
            else {
              result_3254794712 = 1;
              break BeforeRet;
            }
            }
          };

          return result_3254794712;

        }
        
function HEX3Aanonymous_3254794717(inputHEX60gensym229HEX60gensym231_3254794718) {
          var result_3254794719 = 0;

          BeforeRet: {
            if (handlerHEX60gensym229_3254794697.config.handleInputs) {
            var input_3254794720 = nimCopy(null, inputHEX60gensym229HEX60gensym231_3254794718, NTI33554449);
            result_3254794719 = 1;
            break BeforeRet;
            }
            else {
              result_3254794719 = 1;
              break BeforeRet;
            }
            
          };

          return result_3254794719;

        }

    if (((mode_3254794688).length == 0)) {
    self_3254794687.modeEventHandler = null;
    }
    else {
      var config_3254794689 = getModeConfig_3254794677(self_3254794687, mode_3254794688);
      Label1: {
        var handlerHEX60gensym229_3254794697 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym229_3254794697.config = config_3254794689;
        handlerHEX60gensym229_3254794697.dfaInternal = buildDFA_2113929279(config_3254794689);
        handlerHEX60gensym229_3254794697.handleAction = HEX3Aanonymous_3254794709;
        handlerHEX60gensym229_3254794697.handleInput = HEX3Aanonymous_3254794717;
      };
      self_3254794687.modeEventHandler = handlerHEX60gensym229_3254794697;
    }
    
    self_3254794687.currentMode = nimCopy(null, mode_3254794688, NTI33554449);

  
}

function setModeJsWrapper22_3254794683(self_3254794749, mode_3254794750) {
    setMode_3254794686(self_3254794749, mode_3254794750);

  
}
editor_model_prototype.setMode22 = function(mode_ /* : string */) { return (setModeJsWrapper22_3254794683(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_3254797977(self_3254797978) {
  var result_3254797979 = [];

  BeforeRet: {
    result_3254797979 = nimCopy(null, self_3254797978.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_3254797979;

}

function modeJsWrapper22_3254797974(self_3254798008) {
  var result_3254798009 = [];

    result_3254798009 = nimCopy(null, mode_3254797977(self_3254798008), NTI33554449);

  return result_3254798009;

}
editor_model_prototype.mode22 = function() { return toJSStr(modeJsWrapper22_3254797974(this));};

function getContextWithMode_3254798027(self_3254798028, context_3254798029) {
  var result_3254798030 = [];

  BeforeRet: {
    result_3254798030 = nimCopy(null, (context_3254798029 || []).concat([46] || [],self_3254798028.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_3254798030;

}

function getContextWithModeJsWrapper22_3254798024(self_3254798060, context_3254798061) {
  var result_3254798062 = [];

    result_3254798062 = nimCopy(null, getContextWithMode_3254798027(self_3254798060, context_3254798061), NTI33554449);

  return result_3254798062;

}
editor_model_prototype.getContextWithMode22 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper22_3254798024(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function some_3338666283(val_3338666285) {
  var result_3338666286 = ({val: null});

    if (!(!((val_3338666285 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3338666286.val = val_3338666285;

  return result_3338666286;

}

function getTargetCell_3254780237(cursor_3254780238, resolveCollection_3254780239) {
  var result_3254794536 = ({val: null});

  BeforeRet: {
    var cell_3254794537 = cursor_3254780238.cell;
    if (!(!((cell_3254794537 == null)))) {
    failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,50,46,110,105,109,40,57,50,49,44,32,51,41,32,96,99,101,108,108,46,105,115,78,111,116,78,105,108,96,32]);
    }
    
    var subCell_3254794546 = cell_3254794537;
    Label1: {
      var i_3254794550 = 0;
      var i_3254798162 = 0;
      var L_3254798163 = (cursor_3254780238.path).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254798162 < L_3254798163)) break Label3;
            i_3254794550 = cursor_3254780238.path[chckIndx(i_3254798162, 0, (cursor_3254780238.path).length - 1)];
            if (isObj(subCell_3254794546.m_type, NTI3338665993)) {
            var collectionCell_3254794557 = subCell_3254794546;
            subCell_3254794546 = collectionCell_3254794557.children[chckIndx(clamp_1660945119(i_3254794550, 0, (collectionCell_3254794557.children).length - 1), 0, (collectionCell_3254794557.children).length - 1)];
            }
            else {
              break Label1;
            }
            
            i_3254798162 = addInt(i_3254798162, 1);
            if (!(((cursor_3254780238.path).length == L_3254798163))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((resolveCollection_3254780239 && isObj(subCell_3254794546.m_type, NTI3338665993))) {
    result_3254794536 = nimCopy(result_3254794536, some_3338666283(subCell_3254794546.children[chckIndx(cursor_3254780238.lastIndex, 0, (subCell_3254794546.children).length - 1)]), NTI3271564556);
    break BeforeRet;
    }
    
    result_3254794536 = nimCopy(result_3254794536, some_3338666283(subCell_3254794546), NTI3271564556);
    break BeforeRet;
  };

  return result_3254794536;

}

function cursor_3254784719(self_3254784720) {
  var result_3254784721 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254784721 = nimCopy(result_3254784721, self_3254784720.mCursor, NTI3254779907);

  return result_3254784721;

}

function isSome_3338666868(self_3338666870) {
  var result_3338666871 = false;

    result_3338666871 = !((self_3338666870.val == null));

  return result_3338666871;

}

function isNone_3338666896(self_3338666898) {
  var result_3338666899 = false;

    result_3338666899 = (self_3338666898.val == null);

  return result_3338666899;

}

function get_3338666888(self_3338666890) {
  var result_3338666891 = null;

    if (isNone_3338666896(self_3338666890)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3338666891 = self_3338666890["val"];

  return result_3338666891;

}

function targetCell_3254780021(cursor_3254780022) {
  var result_3254780023 = null;

    result_3254780023 = cursor_3254780022.cell;
    Label1: {
      var i_3254780027 = 0;
      var i_3254798166 = 0;
      var L_3254798167 = (cursor_3254780022.path).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254798166 < L_3254798167)) break Label3;
            i_3254780027 = cursor_3254780022.path[chckIndx(i_3254798166, 0, (cursor_3254780022.path).length - 1)];
            if (isObj(result_3254780023.m_type, NTI3338665993)) {
            result_3254780023 = result_3254780023.children[chckIndx(i_3254780027, 0, (result_3254780023.children).length - 1)];
            }
            
            i_3254798166 = addInt(i_3254798166, 1);
            if (!(((cursor_3254780022.path).length == L_3254798167))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3254780023;

}

function invalidateCompletions_3254780257(self_3254780258) {
    if (self_3254780258.unfilteredCompletions.length < 0) { for (var i = self_3254780258.unfilteredCompletions.length ; i < 0 ; ++i) self_3254780258.unfilteredCompletions.push(({parent: null, role: ({padding: 0, time: 0, fuzz: 0, count: 0}), index: 0, class: null, name: [], kind: 0, referenceRole: ({padding: 0, time: 0, fuzz: 0, count: 0}), referenceTarget: null})); }
               else { self_3254780258.unfilteredCompletions.length = 0; };
    if (self_3254780258.filteredCompletions.length < 0) { for (var i = self_3254780258.filteredCompletions.length ; i < 0 ; ++i) self_3254780258.filteredCompletions.push(({parent: null, role: ({padding: 0, time: 0, fuzz: 0, count: 0}), index: 0, class: null, name: [], kind: 0, referenceRole: ({padding: 0, time: 0, fuzz: 0, count: 0}), referenceTarget: null})); }
               else { self_3254780258.filteredCompletions.length = 0; };
    self_3254780258.hasCompletions = false;

  
}

function get_3338666056(self_3338666058) {
  var result_3338666059 = null;
  var result_3338666059_Idx = 0;

  BeforeRet: {
    if (isNone_2818578915(self_3338666058)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3338666059 = self_3338666058; result_3338666059_Idx = "val";
    break BeforeRet;
  };

  return [result_3338666059, result_3338666059_Idx];

}

function currentText_3338666034(cell_3338666035) {
    var Temporary1;

  var result_3338666036 = [];

  BeforeRet: {
    if (!(isNone_2818578915(cell_3338666035.displayText))) {
    result_3338666036 = nimCopy(null, (Temporary1 = get_3338666056(cell_3338666035.displayText), Temporary1)[0][Temporary1[1]], NTI33554449);
    break BeforeRet;
    }
    
    result_3338666036 = nimCopy(null, getText_3338666021(cell_3338666035), NTI33554449);
    break BeforeRet;
  };

  return result_3338666036;

}

function refilterCompletions_3254780259(self_3254780260) {
  BeforeRet: {
    if (self_3254780260.filteredCompletions.length < 0) { for (var i = self_3254780260.filteredCompletions.length ; i < 0 ; ++i) self_3254780260.filteredCompletions.push(({parent: null, role: ({padding: 0, time: 0, fuzz: 0, count: 0}), index: 0, class: null, name: [], kind: 0, referenceRole: ({padding: 0, time: 0, fuzz: 0, count: 0}), referenceTarget: null})); }
               else { self_3254780260.filteredCompletions.length = 0; };
    var targetCell_3254785334 = targetCell_3254780021(cursor_3254784719(self_3254780260));
    if (isObj(targetCell_3254785334.m_type, NTI3338665993)) {
    break BeforeRet;
    }
    
    var text_3254785341 = currentText_3338666034(targetCell_3254785334);
    var index_3254785342 = cursor_3254784719(self_3254780260).lastIndex;
    var prefix_3254785367 = HEX5BHEX5D_855639291(text_3254785341, HEX2EHEX2E_805306418(0, subInt(index_3254785342, 1)));
    Label1: {
      var completion_3254785390 = ({parent: null, role: ({padding: 0, time: 0, fuzz: 0, count: 0}), index: 0, class: null, name: [], kind: 0, referenceRole: ({padding: 0, time: 0, fuzz: 0, count: 0}), referenceTarget: null});
      var i_3254798171 = 0;
      var L_3254798172 = (self_3254780260.unfilteredCompletions).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254798171 < L_3254798172)) break Label3;
            completion_3254785390 = self_3254780260.unfilteredCompletions[chckIndx(i_3254798171, 0, (self_3254780260.unfilteredCompletions).length - 1)];
            if (nsuStartsWith(completion_3254785390.name, prefix_3254785367)) {
            var Temporary4 = nimCopy(null, completion_3254785390, NTI3254779958);
            self_3254780260.filteredCompletions.push(Temporary4);;
            }
            
            i_3254798171 = addInt(i_3254798171, 1);
            if (!(((self_3254780260.unfilteredCompletions).length == L_3254798172))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    self_3254780260.hasCompletions = true;
    if ((0 < (self_3254780260.filteredCompletions).length)) {
    self_3254780260.selectedCompletion = clamp_1660945119(self_3254780260.selectedCompletion, 0, subInt((self_3254780260.filteredCompletions).length, 1));
    }
    else {
      self_3254780260.selectedCompletion = 0;
    }
    
    self_3254780260.scrollToCompletion = nimCopy(self_3254780260.scrollToCompletion, some_1191184367(self_3254780260.selectedCompletion), NTI1191183280);
  };

  
}

function cursorHEX3D_3254784731(self_3254784732, cursor_3254784733) {
    if (!((targetCell_3254780021(self_3254784732.mCursor) == targetCell_3254780021(cursor_3254784733)))) {
    self_3254784732.mCursor = nimCopy(self_3254784732.mCursor, cursor_3254784733, NTI3254779907);
    invalidateCompletions_3254780257(self_3254784732);
    }
    else {
      self_3254784732.mCursor = nimCopy(self_3254784732.mCursor, cursor_3254784733, NTI3254779907);
      refilterCompletions_3254780259(self_3254784732);
    }
    

  
}

function HEX3DHEX3D_3254797030(x_3254797032, y_3254797033) {
  var result_3254797034 = false;

  BeforeRet: {
    var sameObject_3254797041 = false;
    sameObject_3254797041 = x_3254797032 === y_3254797033
    if (sameObject_3254797041) {
    result_3254797034 = true;
    break BeforeRet;
    }
    
    if (!(((x_3254797032).length == (y_3254797033).length))) {
    result_3254797034 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3254797055 = 0;
      var colontmp__3254798180 = 0;
      colontmp__3254798180 = subInt((x_3254797032).length, 1);
      var res_3254798181 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3254798181 <= colontmp__3254798180)) break Label3;
            i_3254797055 = res_3254798181;
            if (!((x_3254797032[chckIndx(i_3254797055, 0, (x_3254797032).length - 1)] == y_3254797033[chckIndx(i_3254797055, 0, (y_3254797033).length - 1)]))) {
            result_3254797034 = false;
            break BeforeRet;
            }
            
            res_3254798181 = addInt(res_3254798181, 1);
          }
      };
    };
    result_3254797034 = true;
    break BeforeRet;
  };

  return result_3254797034;

}

function HEX5BHEX5D_3254797105(s_3254797109, x_3254797110) {
  var result_3254797111 = [];

    var a_3254797113 = x_3254797110.a;
    var L_3254797115 = addInt(subInt(x_3254797110.b, a_3254797113), 1);
    result_3254797111 = new Array(chckRange(L_3254797115, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3254797115, 0, 2147483647) ; ++i) { result_3254797111[i] = 0; }    Label1: {
      var i_3254797124 = 0;
      var i_3254798184 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_3254798184 < L_3254797115)) break Label3;
            i_3254797124 = i_3254798184;
            result_3254797111[chckIndx(i_3254797124, 0, (result_3254797111).length - 1)] = s_3254797109[chckIndx(addInt(i_3254797124, a_3254797113), 0, (s_3254797109).length - 1)];
            i_3254798184 = addInt(i_3254798184, 1);
          }
      };
    };

  return result_3254797111;

}

function depth_3271567330(node_3271567331) {
  var result_3271567332 = 0;

    result_3271567332 = 0;
    var temp_3271567333 = node_3271567331.parent;
    Label1: {
        Label2: while (true) {
        if (!!((temp_3271567333 == null))) break Label2;
          result_3271567332 = addInt(result_3271567332, 1);
          temp_3271567333 = temp_3271567333.parent;
        }
    };

  return result_3271567332;

}

function ancestor_3271567309(node_3271567310, distance_3271567311) {
  var result_3271567312 = null;

    result_3271567312 = node_3271567310;
    Label1: {
      var i_3271567317 = 0;
      var res_3254798188 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_3254798188 <= distance_3271567311)) break Label3;
            i_3271567317 = res_3254798188;
            result_3271567312 = result_3271567312.parent;
            res_3254798188 = addInt(res_3254798188, 1);
          }
      };
    };

  return result_3271567312;

}

function indexOf_3338666139(self_3338666140, cell_3338666141) {
  var result_3338666142 = 0;

  BeforeRet: {
    result_3338666142 = -1;
    Label1: {
      var i_3338666176 = 0;
      var c_3338666177 = null;
      var i_3254798192 = 0;
      var L_3254798193 = (self_3338666140.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254798192 < L_3254798193)) break Label3;
            i_3338666176 = i_3254798192;
            c_3338666177 = self_3338666140.children[chckIndx(i_3254798192, 0, (self_3338666140.children).length - 1)];
            if ((c_3338666177 == cell_3338666141)) {
            result_3338666142 = i_3338666176;
            break BeforeRet;
            }
            
            i_3254798192 = addInt(i_3254798192, 1);
            if (!(((self_3338666140.children).length == L_3254798193))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3338666142;

}

function index_3338666191(self_3338666192) {
  var result_3338666193 = 0;

  BeforeRet: {
    if ((self_3338666192.parent == null)) {
    result_3338666193 = -1;
    break BeforeRet;
    }
    
    result_3338666193 = indexOf_3338666139(self_3338666192.parent, self_3338666192);
    break BeforeRet;
  };

  return result_3338666193;

}

function ancestor_3338666109(cell_3338666110, targetParent_3338666111) {
  var result_3338666112 = null;

    result_3338666112 = cell_3338666110;
    Label1: {
        Label2: while (true) {
        if (!(!((result_3338666112.parent == null)) && !((result_3338666112.parent == targetParent_3338666111)))) break Label2;
          result_3338666112 = result_3338666112.parent;
        }
    };

  return result_3338666112;

}

function high_3338666244(self_3338666245) {
  var result_3338666246 = 0;

  BeforeRet: {
    if (isObj(self_3338666245.m_type, NTI3338665993)) {
    result_3338666246 = (self_3338666245.children).length - 1;
    break BeforeRet;
    }
    else {
      result_3338666246 = (currentText_3338666034(self_3338666245)).length - 1;
      break BeforeRet;
    }
    
  };

  return result_3338666246;

}

function nodeRootCell_3254795863(cell_3254795864, targetNode_3254795872) {
      var Temporary1;

  var result_3254795873 = null;

    result_3254795873 = cell_3254795864;
      var oHEX60gensym261_3254795876 = nimCopy(null, targetNode_3254795872, NTI3271561483);
      if (!isSome_3338667398(oHEX60gensym261_3254795876)) Temporary1 = false; else {        var targetNode_3254795899 = get_3338667418(oHEX60gensym261_3254795876);
        Temporary1 = true;      }    if (Temporary1) {
    Label2: {
        Label3: while (true) {
        if (!(!((result_3254795873.parent == null)) && (!((result_3254795873.node == targetNode_3254795899)) || (result_3254795873.parent.node == cell_3254795864.node)))) break Label3;
          result_3254795873 = result_3254795873.parent;
        }
    };
    }
    else {
      Label4: {
          Label5: while (true) {
          if (!(!((result_3254795873.parent == null)) && (result_3254795873.parent.node == cell_3254795864.node))) break Label5;
            result_3254795873 = result_3254795873.parent;
          }
      };
    }
    

  return result_3254795873;

}

function combineCursors_3254797022(a_3254797023, b_3254797024) {
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var result_3254797025 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    if ((a_3254797023.node == b_3254797024.node)) {
    result_3254797025.node = a_3254797023.node;
    result_3254797025.cell = a_3254797023.cell;
    if (HEX3DHEX3D_3254797030(a_3254797023.path, b_3254797024.path)) {
    result_3254797025.path = nimCopy(null, a_3254797023.path, NTI3254779908);
    result_3254797025.firstIndex = a_3254797023.firstIndex;
    result_3254797025.lastIndex = b_3254797024.lastIndex;
    }
    else {
    if ((((a_3254797023.path).length == 0) || ((b_3254797024.path).length == 0))) {
    result_3254797025.path = nimCopy(null, [], NTI3003122753);
    result_3254797025.firstIndex = 0;
    result_3254797025.lastIndex = 0;
    if ((((a_3254797023.path).length == 0) && (0 < (b_3254797024.path).length))) {
    result_3254797025.firstIndex = a_3254797023.firstIndex;
    result_3254797025.lastIndex = b_3254797024.path[chckIndx(0, 0, (b_3254797024.path).length - 1)];
    }
    else {
    if (((0 < (a_3254797023.path).length) && ((b_3254797024.path).length == 0))) {
    result_3254797025.firstIndex = a_3254797023.path[chckIndx(0, 0, (a_3254797023.path).length - 1)];
    result_3254797025.lastIndex = b_3254797024.lastIndex;
    }
    }
    }
    else {
      var firstDifference_3254797078 = 0;
      Label1: {
        var i_3254797089 = 0;
        var colontmp__3254798175 = 0;
        colontmp__3254798175 = nimMin((a_3254797023.path).length - 1, (b_3254797024.path).length - 1);
        var res_3254798176 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_3254798176 <= colontmp__3254798175)) break Label3;
              i_3254797089 = res_3254798176;
              if (!((a_3254797023.path[chckIndx(i_3254797089, 0, (a_3254797023.path).length - 1)] == b_3254797024.path[chckIndx(i_3254797089, 0, (b_3254797024.path).length - 1)]))) {
              firstDifference_3254797078 = i_3254797089;
              break Label1;
              }
              
              res_3254798176 = addInt(res_3254798176, 1);
            }
        };
      };
      result_3254797025.path = nimCopy(null, HEX5BHEX5D_3254797105(a_3254797023.path, HEX2EHEX2E_805306418(0, subInt(firstDifference_3254797078, 1))), NTI3254789379);
      result_3254797025.firstIndex = a_3254797023.path[chckIndx(firstDifference_3254797078, 0, (a_3254797023.path).length - 1)];
      result_3254797025.lastIndex = b_3254797024.path[chckIndx(firstDifference_3254797078, 0, (b_3254797024.path).length - 1)];
    }
    }
    }
    else {
      var depthA_3254797125 = depth_3271567330(a_3254797023.node);
      var depthB_3254797126 = depth_3271567330(b_3254797024.node);
      var node1_3254797127 = a_3254797023.node;
      var node2_3254797128 = b_3254797024.node;
      var child_3254797129 = nimCopy(null, a_3254797023, NTI3254779907);
      if ((depthA_3254797125 < depthB_3254797126)) {
      child_3254797129 = nimCopy(child_3254797129, b_3254797024, NTI3254779907);
      node2_3254797128 = ancestor_3271567309(node2_3254797128, subInt(depthB_3254797126, depthA_3254797125));
      }
      else {
      if ((depthB_3254797126 < depthA_3254797125)) {
      child_3254797129 = nimCopy(child_3254797129, a_3254797023, NTI3254779907);
      node1_3254797127 = ancestor_3271567309(node1_3254797127, subInt(depthA_3254797125, depthB_3254797126));
      }
      }
      if ((node1_3254797127 == node2_3254797128)) {
      result_3254797025.node = node1_3254797127;
      if ((depthA_3254797125 < depthB_3254797126)) {
      Temporary4 = a_3254797023.cell;
      }
      else {
      Temporary4 = b_3254797024.cell;
      }
      
      result_3254797025.cell = Temporary4;
      result_3254797025.path = nimCopy(null, [], NTI3003122753);
      var childIndex_3254797138 = index_3338666191(ancestor_3338666109(child_3254797129.cell, result_3254797025.cell));
      if ((depthA_3254797125 < depthB_3254797126)) {
      if ((0 < (a_3254797023.path).length)) {
      Temporary5 = a_3254797023.path[chckIndx(0, 0, (a_3254797023.path).length - 1)];
      }
      else {
      Temporary5 = a_3254797023.firstIndex;
      }
      
      result_3254797025.firstIndex = Temporary5;
      result_3254797025.lastIndex = childIndex_3254797138;
      }
      else {
      if ((depthB_3254797126 < depthA_3254797125)) {
      result_3254797025.firstIndex = childIndex_3254797138;
      if ((0 < (b_3254797024.path).length)) {
      Temporary6 = b_3254797024.path[chckIndx(0, 0, (b_3254797024.path).length - 1)];
      }
      else {
      Temporary6 = b_3254797024.lastIndex;
      }
      
      result_3254797025.lastIndex = Temporary6;
      }
      else {
        result_3254797025.firstIndex = 0;
        result_3254797025.lastIndex = high_3338666244(result_3254797025.cell);
      }
      }
      break BeforeRet;
      }
      
      Label7: {
          Label8: while (true) {
          if (!((!((node1_3254797127.parent == node2_3254797128.parent)) && !((node1_3254797127.parent == null))) && !((node2_3254797128.parent == null)))) break Label8;
            node1_3254797127 = node1_3254797127.parent;
            node2_3254797128 = node2_3254797128.parent;
          }
      };
      if ((node1_3254797127.parent == node2_3254797128.parent)) {
      result_3254797025.node = node1_3254797127.parent;
      result_3254797025.cell = nodeRootCell_3254795863(a_3254797023.cell, some_3271565957(result_3254797025.node));
      result_3254797025.path = nimCopy(null, [], NTI3003122753);
      result_3254797025.firstIndex = index_3338666191(ancestor_3338666109(a_3254797023.cell, result_3254797025.cell));
      result_3254797025.lastIndex = index_3338666191(ancestor_3338666109(b_3254797024.cell, result_3254797025.cell));
      }
      else {
        result_3254797025 = nimCopy(result_3254797025, b_3254797024, NTI3254779907);
        break BeforeRet;
      }
      
    }
    
  };

  return result_3254797025;

}

function selectCursor_3254780275(a_3254780276, b_3254780277, combine_3254780278) {
  var result_3254797170 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    if (combine_3254780278) {
    result_3254797170 = nimCopy(result_3254797170, combineCursors_3254797022(a_3254780276, b_3254780277), NTI3254779907);
    break BeforeRet;
    }
    
    result_3254797170 = nimCopy(result_3254797170, b_3254780277, NTI3254779907);
    break BeforeRet;
  };

  return result_3254797170;

}

function moveCursorLeft_3254798085(self_3254798086, select_3254798087) {
      var Temporary1;

      var oHEX60gensym340_3254798090 = getTargetCell_3254780237(cursor_3254784719(self_3254798086), false);
      if (!isSome_3338666868(oHEX60gensym340_3254798090)) Temporary1 = false; else {        var cell_3254798113 = get_3338666888(oHEX60gensym340_3254798090);
        Temporary1 = true;      }    if (Temporary1) {
    var newCursor_3254798114 = getCursorLeft_3254795277(cell_3254798113, cursor_3254784719(self_3254798086));
    if (!((newCursor_3254798114.node == null))) {
    cursorHEX3D_3254784731(self_3254798086, selectCursor_3254780275(cursor_3254784719(self_3254798086), newCursor_3254798114, select_3254798087));
    }
    
    }
    
    markDirty_2415919143(self_3254798086);

  
}

function moveCursorLeftJsWrapper_3254798082(self_3254798146, select_3254798147) {
    moveCursorLeft_3254798085(self_3254798146, select_3254798147);

  
}
editor_model_prototype.moveCursorLeft = function(select_ /* : bool */) { return (moveCursorLeftJsWrapper_3254798082(this, select_));};

function moveCursorRight_3254798203(self_3254798204, select_3254798205) {
      var Temporary1;

      var oHEX60gensym351_3254798208 = getTargetCell_3254780237(cursor_3254784719(self_3254798204), false);
      if (!isSome_3338666868(oHEX60gensym351_3254798208)) Temporary1 = false; else {        var cell_3254798231 = get_3338666888(oHEX60gensym351_3254798208);
        Temporary1 = true;      }    if (Temporary1) {
    var newCursor_3254798232 = getCursorRight_3254795283(cell_3254798231, cursor_3254784719(self_3254798204));
    if (!((newCursor_3254798232.node == null))) {
    cursorHEX3D_3254784731(self_3254798204, selectCursor_3254780275(cursor_3254784719(self_3254798204), newCursor_3254798232, select_3254798205));
    }
    
    }
    
    markDirty_2415919143(self_3254798204);

  
}

function moveCursorRightJsWrapper_3254798200(self_3254798264, select_3254798265) {
    moveCursorRight_3254798203(self_3254798264, select_3254798265);

  
}
editor_model_prototype.moveCursorRight = function(select_ /* : bool */) { return (moveCursorRightJsWrapper_3254798200(this, select_));};

function isDecendant_3338666120(cell_3338666121, ancestor_3338666122) {
  var result_3338666123 = false;

  BeforeRet: {
    result_3338666123 = false;
    var temp_3338666124 = cell_3338666121;
    Label1: {
        Label2: while (true) {
        if (!!((temp_3338666124 == null))) break Label2;
          if ((temp_3338666124 == ancestor_3338666122)) {
          result_3338666123 = true;
          break BeforeRet;
          }
          
          temp_3338666124 = temp_3338666124.parent;
        }
    };
  };

  return result_3338666123;

}

function getPreviousCellInLine_3254795146(self_3254795147, cell_3254795148) {
  var result_3254795149 = null;

  BeforeRet: {
    if (((cell_3254795148.line < 0) && ((self_3254795147.logicalLines).length - 1 < cell_3254795148.line))) {
    result_3254795149 = cell_3254795148;
    break BeforeRet;
    }
    
    var line_3254795153 = nimCopy(null, self_3254795147.logicalLines[chckIndx(cell_3254795148.line, 0, (self_3254795147.logicalLines).length - 1)], NTI3254780046);
    var index_3254795154 = -1;
    Label1: {
      var i_3254795160 = 0;
      var c_3254795161 = null;
      var i_3254798364 = 0;
      var L_3254798365 = (line_3254795153).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254798364 < L_3254798365)) break Label3;
            i_3254795160 = i_3254798364;
            c_3254795161 = line_3254795153[chckIndx(i_3254798364, 0, (line_3254795153).length - 1)];
            if ((isDecendant_3338666120(c_3254795161, cell_3254795148) && (index_3254795154 == -1))) {
            index_3254795154 = i_3254795160;
            }
            else {
            if ((c_3254795161 == cell_3254795148)) {
            index_3254795154 = i_3254795160;
            break Label1;
            }
            }
            i_3254798364 = addInt(i_3254798364, 1);
            if (!(((line_3254795153).length == L_3254798365))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((index_3254795154 == -1)) {
    index_3254795154 = 0;
    }
    
    if ((index_3254795154 == 0)) {
    Label4: {
      var k_3254795170 = 0;
      var colontmp__3254798368 = 0;
      colontmp__3254798368 = subInt(cell_3254795148.line, 1);
      var res_3254798369 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_3254798369 <= colontmp__3254798368)) break Label6;
            k_3254795170 = res_3254798369;
            var i_3254795171 = subInt(subInt(cell_3254795148.line, 1), k_3254795170);
            if ((0 < (self_3254795147.logicalLines[chckIndx(i_3254795171, 0, (self_3254795147.logicalLines).length - 1)]).length)) {
            result_3254795149 = self_3254795147.logicalLines[chckIndx(i_3254795171, 0, (self_3254795147.logicalLines).length - 1)][chckIndx((self_3254795147.logicalLines[chckIndx(i_3254795171, 0, (self_3254795147.logicalLines).length - 1)]).length - 1, 0, (self_3254795147.logicalLines[chckIndx(i_3254795171, 0, (self_3254795147.logicalLines).length - 1)]).length - 1)];
            break BeforeRet;
            }
            
            res_3254798369 = addInt(res_3254798369, 1);
          }
      };
    };
    result_3254795149 = cell_3254795148;
    break BeforeRet;
    }
    else {
      result_3254795149 = line_3254795153[chckIndx(subInt(index_3254795154, 1), 0, (line_3254795153).length - 1)];
      break BeforeRet;
    }
    
  };

  return result_3254795149;

}

function getPreviousInLineWhere_3254795215(self_3254795216, cell_3254795217, predicate_3254795220) {
  var result_3254795221 = null;

    result_3254795221 = getPreviousCellInLine_3254795146(self_3254795216, cell_3254795217);
    Label1: {
        Label2: while (true) {
        if (!!(predicate_3254795220(result_3254795221))) break Label2;
          var oldResult_3254795222 = result_3254795221;
          result_3254795221 = getPreviousCellInLine_3254795146(self_3254795216, result_3254795221);
          if ((result_3254795221 == oldResult_3254795222)) {
          break Label1;
          }
          
        }
    };

  return result_3254795221;

}

function editableHigh_3338666256(self_3338666257, ignoreStyle_3338666258) {
  var result_3338666259 = 0;

  BeforeRet: {
    if (isObj(self_3338666257.m_type, NTI3338665993)) {
    result_3338666259 = (self_3338666257.children).length - 1;
    break BeforeRet;
    }
    
    if ((((!(ignoreStyle_3338666258) && !((self_3338666257.style == null))) && self_3338666257.style.noSpaceRight) && (0 < (currentText_3338666034(self_3338666257)).length))) {
    result_3338666259 = high_3338666244(self_3338666257);
    break BeforeRet;
    }
    
    result_3338666259 = addInt(high_3338666244(self_3338666257), 1);
    break BeforeRet;
  };

  return result_3338666259;

}

function low_3338666224(self_3338666225) {
  var result_3338666226 = 0;

  BeforeRet: {
    if (isObj(self_3338666225.m_type, NTI3338665993)) {
    result_3338666226 = 0;
    break BeforeRet;
    }
    else {
      result_3338666226 = 0;
      break BeforeRet;
    }
    
  };

  return result_3338666226;

}

function editableLow_3338666237(self_3338666238, ignoreStyle_3338666239) {
  var result_3338666240 = 0;

  BeforeRet: {
    if ((((!(ignoreStyle_3338666239) && !((self_3338666238.style == null))) && self_3338666238.style.noSpaceLeft) && (0 < (currentText_3338666034(self_3338666238)).length))) {
    result_3338666240 = addInt(low_3338666224(self_3338666238), 1);
    break BeforeRet;
    }
    
    result_3338666240 = low_3338666224(self_3338666238);
    break BeforeRet;
  };

  return result_3338666240;

}

function canSelect_3254780271(cell_3254780272) {
      var Temporary1;

  var result_3254795295 = false;

  BeforeRet: {
    if ((!((cell_3254780272.isVisible == null)) && !(cell_3254780272.isVisible(cell_3254780272.node)))) {
    result_3254795295 = false;
    break BeforeRet;
    }
    
    if (cell_3254780272.disableSelection) {
    result_3254795295 = false;
    break BeforeRet;
    }
    
    if ((editableHigh_3338666256(cell_3254780272, false) < editableLow_3338666237(cell_3254780272, false))) {
    result_3254795295 = false;
    break BeforeRet;
    }
    
      if (!isObj(cell_3254780272.m_type, NTI3338665993)) Temporary1 = false; else {        Temporary1 = ((cell_3254780272.children).length == 0);      }    if (Temporary1) {
    result_3254795295 = false;
    break BeforeRet;
    }
    
    result_3254795295 = true;
    break BeforeRet;
  };

  return result_3254795295;

}

function getPreviousSelectableInLine_3254795239(self_3254795240, cell_3254795241) {
  var result_3254795242 = null;

  BeforeRet: {
    result_3254795242 = getPreviousInLineWhere_3254795215(self_3254795240, cell_3254795241, canSelect_3254780271);
    break BeforeRet;
  };

  return result_3254795242;

}

function insert_3254795935(x_3254795937, x_3254795937_Idx, item_3254795938, i_3254795939) {
    var it_3254795959 = 0;
    x_3254795937[x_3254795937_Idx] = x_3254795937[x_3254795937_Idx] || []; x_3254795937[x_3254795937_Idx].splice(i_3254795939, 0, it_3254795959);
    x_3254795937[x_3254795937_Idx][chckIndx(i_3254795939, 0, (x_3254795937[x_3254795937_Idx]).length - 1)] = item_3254795938;

  
}

function nodeRootCellPath_3254795918(cell_3254795919) {
  var result_3254795922 = {Field0: null, Field1: []};

    result_3254795922.Field0 = cell_3254795919;
    result_3254795922.Field1 = nimCopy(null, [], NTI3003122753);
    Label1: {
        Label2: while (true) {
        if (!(!((result_3254795922.Field0.parent == null)) && (result_3254795922.Field0.parent.node == cell_3254795919.node))) break Label2;
          var index_3254795934 = indexOf_3338666139(result_3254795922.Field0.parent, result_3254795922.Field0);
          insert_3254795935(result_3254795922, "Field1", index_3254795934, 0);
          result_3254795922.Field0 = result_3254795922.Field0.parent;
        }
    };

  return result_3254795922;

}

function columnHEX3D_3254780009(cursor_3254780010, column_3254780011) {
    cursor_3254780010.firstIndex = column_3254780011;
    cursor_3254780010.lastIndex = column_3254780011;

  
}

function toCursor_3254780264(cell_3254780265, start_3254780266) {
  var result_3254795983 = [({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})];

    var colontmp__3254798372 = nodeRootCellPath_3254795918(cell_3254780265);
    var rootCell_3254795984 = colontmp__3254798372["Field0"];
    var path_3254795985 = nimCopy(null, colontmp__3254798372["Field1"], NTI3254788575);
    result_3254795983[0].node = cell_3254780265.node;
    result_3254795983[0].cell = rootCell_3254795984;
    result_3254795983[0].path = nimCopy(null, path_3254795985, NTI3254788575);
    if (start_3254780266) {
    columnHEX3D_3254780009(result_3254795983[0], editableLow_3338666237(cell_3254780265, false));
    }
    else {
    columnHEX3D_3254780009(result_3254795983[0], editableHigh_3338666256(cell_3254780265, false));
    }
    

  return result_3254795983[0];

}

function moveCursorLeftLine_3254798284(self_3254798285, select_3254798286) {
      var Temporary1;

      var oHEX60gensym362_3254798289 = getTargetCell_3254780237(cursor_3254784719(self_3254798285), false);
      if (!isSome_3338666868(oHEX60gensym362_3254798289)) Temporary1 = false; else {        var cell_3254798312 = get_3338666888(oHEX60gensym362_3254798289);
        Temporary1 = true;      }    if (Temporary1) {
    var newCursor_3254798313 = getCursorLeft_3254795277(cell_3254798312, cursor_3254784719(self_3254798285));
    if ((newCursor_3254798313.node == cursor_3254784719(self_3254798285).node)) {
    cursorHEX3D_3254784731(self_3254798285, selectCursor_3254780275(cursor_3254784719(self_3254798285), newCursor_3254798313, select_3254798286));
    }
    else {
      var nextCell_3254798318 = getPreviousSelectableInLine_3254795239(self_3254798285, cell_3254798312);
      newCursor_3254798313 = nimCopy(newCursor_3254798313, toCursor_3254780264(nextCell_3254798318, false), NTI3254779907);
      cursorHEX3D_3254784731(self_3254798285, selectCursor_3254780275(cursor_3254784719(self_3254798285), newCursor_3254798313, select_3254798286));
    }
    
    }
    
    markDirty_2415919143(self_3254798285);

  
}

function moveCursorLeftLineJsWrapper_3254798281(self_3254798347, select_3254798348) {
    moveCursorLeftLine_3254798284(self_3254798347, select_3254798348);

  
}
editor_model_prototype.moveCursorLeftLine = function(select_ /* : bool */) { return (moveCursorLeftLineJsWrapper_3254798281(this, select_));};

function getNextCellInLine_3254795178(self_3254795179, cell_3254795180) {
  var result_3254795181 = null;

  BeforeRet: {
    if (((cell_3254795180.line < 0) && ((self_3254795179.logicalLines).length - 1 < cell_3254795180.line))) {
    result_3254795181 = cell_3254795180;
    break BeforeRet;
    }
    
    var line_3254795185 = nimCopy(null, self_3254795179.logicalLines[chckIndx(cell_3254795180.line, 0, (self_3254795179.logicalLines).length - 1)], NTI3254780046);
    var index_3254795189 = (line_3254795185).length - 1;
    Label1: {
      var i_3254795195 = 0;
      var c_3254795196 = null;
      var i_3254798460 = 0;
      var L_3254798461 = (line_3254795185).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254798460 < L_3254798461)) break Label3;
            i_3254795195 = i_3254798460;
            c_3254795196 = line_3254795185[chckIndx(i_3254798460, 0, (line_3254795185).length - 1)];
            if (isDecendant_3338666120(c_3254795196, cell_3254795180)) {
            index_3254795189 = i_3254795195;
            }
            else {
            if ((c_3254795196 == cell_3254795180)) {
            index_3254795189 = i_3254795195;
            break Label1;
            }
            }
            i_3254798460 = addInt(i_3254798460, 1);
            if (!(((line_3254795185).length == L_3254798461))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((line_3254795185).length - 1 <= index_3254795189)) {
    Label4: {
      var i_3254795211 = 0;
      var colontmp__3254798464 = 0;
      var colontmp__3254798465 = 0;
      colontmp__3254798464 = addInt(cell_3254795180.line, 1);
      colontmp__3254798465 = (self_3254795179.logicalLines).length - 1;
      var res_3254798466 = colontmp__3254798464;
      Label5: {
          Label6: while (true) {
          if (!(res_3254798466 <= colontmp__3254798465)) break Label6;
            i_3254795211 = res_3254798466;
            if ((0 < (self_3254795179.logicalLines[chckIndx(i_3254795211, 0, (self_3254795179.logicalLines).length - 1)]).length)) {
            result_3254795181 = self_3254795179.logicalLines[chckIndx(i_3254795211, 0, (self_3254795179.logicalLines).length - 1)][chckIndx(0, 0, (self_3254795179.logicalLines[chckIndx(i_3254795211, 0, (self_3254795179.logicalLines).length - 1)]).length - 1)];
            break BeforeRet;
            }
            
            res_3254798466 = addInt(res_3254798466, 1);
          }
      };
    };
    result_3254795181 = cell_3254795180;
    break BeforeRet;
    }
    else {
      result_3254795181 = line_3254795185[chckIndx(addInt(index_3254795189, 1), 0, (line_3254795185).length - 1)];
      break BeforeRet;
    }
    
  };

  return result_3254795181;

}

function getNextInLineWhere_3254795227(self_3254795228, cell_3254795229, predicate_3254795232) {
  var result_3254795233 = null;

    result_3254795233 = getNextCellInLine_3254795178(self_3254795228, cell_3254795229);
    Label1: {
        Label2: while (true) {
        if (!!(predicate_3254795232(result_3254795233))) break Label2;
          var oldResult_3254795234 = result_3254795233;
          result_3254795233 = getNextCellInLine_3254795178(self_3254795228, result_3254795233);
          if ((result_3254795233 == oldResult_3254795234)) {
          break Label1;
          }
          
        }
    };

  return result_3254795233;

}

function getNextSelectableInLine_3254795261(self_3254795262, cell_3254795263) {
  var result_3254795264 = null;

  BeforeRet: {
    result_3254795264 = getNextInLineWhere_3254795227(self_3254795262, cell_3254795263, canSelect_3254780271);
    break BeforeRet;
  };

  return result_3254795264;

}

function moveCursorRightLine_3254798380(self_3254798381, select_3254798382) {
      var Temporary1;

      var oHEX60gensym372_3254798385 = getTargetCell_3254780237(cursor_3254784719(self_3254798381), false);
      if (!isSome_3338666868(oHEX60gensym372_3254798385)) Temporary1 = false; else {        var cell_3254798408 = get_3338666888(oHEX60gensym372_3254798385);
        Temporary1 = true;      }    if (Temporary1) {
    var newCursor_3254798409 = getCursorRight_3254795283(cell_3254798408, cursor_3254784719(self_3254798381));
    if ((newCursor_3254798409.node == cursor_3254784719(self_3254798381).node)) {
    cursorHEX3D_3254784731(self_3254798381, selectCursor_3254780275(cursor_3254784719(self_3254798381), newCursor_3254798409, select_3254798382));
    }
    else {
      var nextCell_3254798414 = getNextSelectableInLine_3254795261(self_3254798381, cell_3254798408);
      newCursor_3254798409 = nimCopy(newCursor_3254798409, toCursor_3254780264(nextCell_3254798414, true), NTI3254779907);
      cursorHEX3D_3254784731(self_3254798381, selectCursor_3254780275(cursor_3254784719(self_3254798381), newCursor_3254798409, select_3254798382));
    }
    
    }
    
    markDirty_2415919143(self_3254798381);

  
}

function moveCursorRightLineJsWrapper_3254798377(self_3254798443, select_3254798444) {
    moveCursorRightLine_3254798380(self_3254798443, select_3254798444);

  
}
editor_model_prototype.moveCursorRightLine = function(select_ /* : bool */) { return (moveCursorRightLineJsWrapper_3254798377(this, select_));};

function moveCursorLineStart_3254798473(self_3254798474, select_3254798475) {
      var Temporary1;

      var oHEX60gensym382_3254798478 = getTargetCell_3254780237(cursor_3254784719(self_3254798474), true);
      if (!isSome_3338666868(oHEX60gensym382_3254798478)) Temporary1 = false; else {        var cell_3254798501 = get_3338666888(oHEX60gensym382_3254798478);
        Temporary1 = true;      }    if (Temporary1) {
    if ((((0 <= cell_3254798501.line) && (cell_3254798501.line <= (self_3254798474.logicalLines).length - 1)) && (0 < (self_3254798474.logicalLines[chckIndx(cell_3254798501.line, 0, (self_3254798474.logicalLines).length - 1)]).length))) {
    var newCursor_3254798508 = toCursor_3254780264(self_3254798474.logicalLines[chckIndx(cell_3254798501.line, 0, (self_3254798474.logicalLines).length - 1)][chckIndx(0, 0, (self_3254798474.logicalLines[chckIndx(cell_3254798501.line, 0, (self_3254798474.logicalLines).length - 1)]).length - 1)], true);
    cursorHEX3D_3254784731(self_3254798474, selectCursor_3254780275(cursor_3254784719(self_3254798474), newCursor_3254798508, select_3254798475));
    }
    
    }
    
    markDirty_2415919143(self_3254798474);

  
}

function moveCursorLineStartJsWrapper_3254798470(self_3254798537, select_3254798538) {
    moveCursorLineStart_3254798473(self_3254798537, select_3254798538);

  
}
editor_model_prototype.moveCursorLineStart = function(select_ /* : bool */) { return (moveCursorLineStartJsWrapper_3254798470(this, select_));};

function moveCursorLineEnd_3254798557(self_3254798558, select_3254798559) {
      var Temporary1;

      var oHEX60gensym394_3254798562 = getTargetCell_3254780237(cursor_3254784719(self_3254798558), true);
      if (!isSome_3338666868(oHEX60gensym394_3254798562)) Temporary1 = false; else {        var cell_3254798585 = get_3338666888(oHEX60gensym394_3254798562);
        Temporary1 = true;      }    if (Temporary1) {
    if ((((0 <= cell_3254798585.line) && (cell_3254798585.line <= (self_3254798558.logicalLines).length - 1)) && (0 < (self_3254798558.logicalLines[chckIndx(cell_3254798585.line, 0, (self_3254798558.logicalLines).length - 1)]).length))) {
    var newCursor_3254798595 = toCursor_3254780264(self_3254798558.logicalLines[chckIndx(cell_3254798585.line, 0, (self_3254798558.logicalLines).length - 1)][chckIndx((self_3254798558.logicalLines[chckIndx(cell_3254798585.line, 0, (self_3254798558.logicalLines).length - 1)]).length - 1, 0, (self_3254798558.logicalLines[chckIndx(cell_3254798585.line, 0, (self_3254798558.logicalLines).length - 1)]).length - 1)], false);
    cursorHEX3D_3254784731(self_3254798558, selectCursor_3254780275(cursor_3254784719(self_3254798558), newCursor_3254798595, select_3254798559));
    }
    
    }
    
    markDirty_2415919143(self_3254798558);

  
}

function moveCursorLineEndJsWrapper_3254798554(self_3254798624, select_3254798625) {
    moveCursorLineEnd_3254798557(self_3254798624, select_3254798625);

  
}
editor_model_prototype.moveCursorLineEnd = function(select_ /* : bool */) { return (moveCursorLineEndJsWrapper_3254798554(this, select_));};

function closestInlineAncestor_3338666085(cell_3338666086) {
          var Temporary3;

  var result_3338666087 = null;

    result_3338666087 = cell_3338666086.parent;
    Label1: {
        Label2: while (true) {
          if (!!((result_3338666087 == null))) Temporary3 = false; else {            Temporary3 = !(result_3338666087.inline);          }        if (!Temporary3) break Label2;
          result_3338666087 = result_3338666087.parent;
        }
    };

  return result_3338666087;

}

function hasAncestor_3338666074(cell_3338666075, ancestor_3338666076) {
  var result_3338666077 = false;

  BeforeRet: {
    if ((cell_3338666075.parent == ancestor_3338666076)) {
    result_3338666077 = true;
    break BeforeRet;
    }
    
    if (!((cell_3338666075.parent == null))) {
    result_3338666077 = hasAncestor_3338666074(cell_3338666075.parent, ancestor_3338666076);
    break BeforeRet;
    }
    
    result_3338666077 = false;
    break BeforeRet;
  };

  return result_3338666077;

}

function moveCursorLineStartInline_3254798644(self_3254798645, select_3254798646) {
      var Temporary1;

  BeforeRet: {
      var oHEX60gensym406_3254798649 = getTargetCell_3254780237(cursor_3254784719(self_3254798645), true);
      if (!isSome_3338666868(oHEX60gensym406_3254798649)) Temporary1 = false; else {        var cell_3254798672 = get_3338666888(oHEX60gensym406_3254798649);
        Temporary1 = true;      }    if (Temporary1) {
    var parent_3254798673 = closestInlineAncestor_3338666085(cell_3254798672);
    if ((parent_3254798673 == null)) {
    moveCursorLineStart_3254798473(self_3254798645, false);
    break BeforeRet;
    }
    
    var prevCell_3254798677 = cell_3254798672;
    Label2: {
        Label3: while (true) {
        if (!true) break Label3;
          var currentCell_3254798678 = getPreviousSelectableInLine_3254795239(self_3254798645, prevCell_3254798677);
          if (!((currentCell_3254798678.line == prevCell_3254798677.line))) {
          break Label2;
          }
          
          if (!(hasAncestor_3338666074(currentCell_3254798678, parent_3254798673))) {
          break Label2;
          }
          
          prevCell_3254798677 = currentCell_3254798678;
        }
    };
    var newCursor_3254798679 = toCursor_3254780264(prevCell_3254798677, true);
    cursorHEX3D_3254784731(self_3254798645, selectCursor_3254780275(cursor_3254784719(self_3254798645), newCursor_3254798679, select_3254798646));
    }
    
    markDirty_2415919143(self_3254798645);
  };

  
}

function moveCursorLineStartInlineJsWrapper_3254798641(self_3254798708, select_3254798709) {
    moveCursorLineStartInline_3254798644(self_3254798708, select_3254798709);

  
}
editor_model_prototype.moveCursorLineStartInline = function(select_ /* : bool */) { return (moveCursorLineStartInlineJsWrapper_3254798641(this, select_));};

function moveCursorLineEndInline_3254798730(self_3254798731, select_3254798732) {
      var Temporary1;

  BeforeRet: {
      var oHEX60gensym417_3254798735 = getTargetCell_3254780237(cursor_3254784719(self_3254798731), true);
      if (!isSome_3338666868(oHEX60gensym417_3254798735)) Temporary1 = false; else {        var cell_3254798758 = get_3338666888(oHEX60gensym417_3254798735);
        Temporary1 = true;      }    if (Temporary1) {
    var parent_3254798759 = closestInlineAncestor_3338666085(cell_3254798758);
    if ((parent_3254798759 == null)) {
    moveCursorLineEnd_3254798557(self_3254798731, false);
    break BeforeRet;
    }
    
    var prevCell_3254798763 = cell_3254798758;
    Label2: {
        Label3: while (true) {
        if (!true) break Label3;
          var currentCell_3254798764 = getNextSelectableInLine_3254795261(self_3254798731, prevCell_3254798763);
          if (!((currentCell_3254798764.line == prevCell_3254798763.line))) {
          break Label2;
          }
          
          if (!(hasAncestor_3338666074(currentCell_3254798764, parent_3254798759))) {
          break Label2;
          }
          
          prevCell_3254798763 = currentCell_3254798764;
        }
    };
    var newCursor_3254798765 = toCursor_3254780264(prevCell_3254798763, false);
    cursorHEX3D_3254784731(self_3254798731, selectCursor_3254780275(cursor_3254784719(self_3254798731), newCursor_3254798765, select_3254798732));
    }
    
    markDirty_2415919143(self_3254798731);
  };

  
}

function moveCursorLineEndInlineJsWrapper_3254798727(self_3254798794, select_3254798795) {
    moveCursorLineEndInline_3254798730(self_3254798794, select_3254798795);

  
}
editor_model_prototype.moveCursorLineEndInline = function(select_ /* : bool */) { return (moveCursorLineEndInlineJsWrapper_3254798727(this, select_));};

function none_3254794843() {
  var result_3254794850 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  return result_3254794850;

}

function rawGet_3254793173(t_3254793176, key_3254793177, hc_3254793178, hc_3254793178_Idx) {
  var result_3254793179 = 0;

  BeforeRet: {
    hc_3254793178[hc_3254793178_Idx] = hash_2046820630(key_3254793177);
    if ((hc_3254793178[hc_3254793178_Idx] == 0)) {
    hc_3254793178[hc_3254793178_Idx] = 314159265;
    }
    
    if (((t_3254793176.data).length == 0)) {
    result_3254793179 = -1;
    break BeforeRet;
    }
    
    var h_3254793247 = (hc_3254793178[hc_3254793178_Idx] & (t_3254793176.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254793176.data[chckIndx(h_3254793247, 0, (t_3254793176.data).length - 1)].Field0)) break Label2;
          if (((t_3254793176.data[chckIndx(h_3254793247, 0, (t_3254793176.data).length - 1)].Field0 == hc_3254793178[hc_3254793178_Idx]) && HEX3DHEX3D_2046820626(t_3254793176.data[chckIndx(h_3254793247, 0, (t_3254793176.data).length - 1)].Field1, key_3254793177))) {
          result_3254793179 = h_3254793247;
          break BeforeRet;
          }
          
          h_3254793247 = nextTry_1308622883(h_3254793247, (t_3254793176.data).length - 1);
        }
    };
    result_3254793179 = subInt(-1, h_3254793247);
  };

  return result_3254793179;

}

function getOrDefault_3254793163(t_3254793166, key_3254793167, default_3254793168) {
    var Temporary1;

  var result_3254793169 = null;

    var hcHEX60gensym182_3254793172 = [0];
    var indexHEX60gensym182_3254793500 = rawGet_3254793173(t_3254793166, key_3254793167, hcHEX60gensym182_3254793172, 0);
    if ((0 <= indexHEX60gensym182_3254793500)) {
    Temporary1 = t_3254793166.data[chckIndx(indexHEX60gensym182_3254793500, 0, (t_3254793166.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3254793168;
    }
    
    result_3254793169 = Temporary1;

  return result_3254793169;

}

function isNone_3254786213(self_3254786215) {
  var result_3254786216 = false;

    result_3254786216 = !(self_3254786215.has);

  return result_3254786216;

}

function some_3254794959(val_3254794961) {
  var result_3254794962 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

    result_3254794962.has = true;
    result_3254794962.val = nimCopy(result_3254794962.val, val_3254794961, NTI3254779907);

  return result_3254794962;

}

function get_3254794991(self_3254794993) {
  var result_3254794994 = null;

  BeforeRet: {
    if (isNone_3254786213(self_3254794993)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3254794994 = self_3254794993.val;
    break BeforeRet;
  };

  return result_3254794994;

}

function HEX2DHEX3D_2818593770(x_2818593772, x_2818593772_Idx, y_2818593773) {
    x_2818593772[x_2818593772_Idx] = (x_2818593772[x_2818593772_Idx] - y_2818593773);

  
}

function round_3254795012(x_3254795014) {
  var result_3254795015 = [0.0];

    if ((0.0 <= x_3254795014)) {
    result_3254795015[0] = Math.round(x_3254795014);
    }
    else {
      result_3254795015[0] = Math.ceil(x_3254795014);
      if ((0.5 <= (result_3254795015[0] - x_3254795014))) {
      HEX2DHEX3D_2818593770(result_3254795015, 0, 1.0);
      }
      
    }
    

  return result_3254795015[0];

}

function getCursorInLine_3254780244(self_3254780245, line_3254780246, xPos_3254780247) {
              var Temporary5;
              var Temporary6;

  var result_3254794770 = [({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false})];

  BeforeRet: {
    if (!(contains_1191183809(HEX2EHEX2E_805306418(0, (self_3254780245.logicalLines).length - 1), line_3254780246))) {
    result_3254794770[0] = nimCopy(result_3254794770[0], none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    var line_3254794851 = nimCopy(null, self_3254780245.logicalLines[chckIndx(line_3254780246, 0, (self_3254780245.logicalLines).length - 1)], NTI3254780046);
    if (((line_3254794851).length == 0)) {
    result_3254794770[0] = nimCopy(result_3254794770[0], none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    var charWidth_3254794862 = charWidth_2768240799(self_3254780245.editor.platform);
    var closest_3254794863 = 10000000000.0;
    Label1: {
      var c_3254794867 = null;
      var i_3254798919 = 0;
      var L_3254798920 = (line_3254794851).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254798919 < L_3254798920)) break Label3;
            c_3254794867 = line_3254794851[chckIndx(i_3254798919, 0, (line_3254794851).length - 1)];
            Label4: {
              if (!(canSelect_3254780271(c_3254794867))) {
              break Label4;
              }
              
              var widget_3254794940 = getOrDefault_3254793163(self_3254780245.cellWidgetContext.cellToWidget, c_3254794867.id, null);
              if ((widget_3254794940 == null)) {
              break Label4;
              }
              
              if ((!((c_3254794867.style == null)) && c_3254794867.style.noSpaceLeft)) {
              Temporary5 = (widget_3254794940.lastBounds.x + charWidth_3254794862);
              }
              else {
              Temporary5 = widget_3254794940.lastBounds.x;
              }
              
              var xMin_3254794947 = Temporary5;
              if ((!((c_3254794867.style == null)) && c_3254794867.style.noSpaceRight)) {
              Temporary6 = ((widget_3254794940.lastBounds.x + widget_3254794940.lastBounds.w) - charWidth_3254794862);
              }
              else {
              Temporary6 = (widget_3254794940.lastBounds.x + widget_3254794940.lastBounds.w);
              }
              
              var xMax_3254794951 = Temporary6;
              if ((xPos_3254780247 < xMin_3254794947)) {
              if ((isNone_3254786213(result_3254794770[0]) || ((xMin_3254794947 - xPos_3254780247) < closest_3254794863))) {
              result_3254794770[0] = nimCopy(result_3254794770[0], some_3254794959(toCursor_3254780264(c_3254794867, true)), NTI3254780132);
              closest_3254794863 = (xMin_3254794947 - xPos_3254780247);
              }
              
              }
              else {
              if ((xMax_3254794951 < xPos_3254780247)) {
              if ((isNone_3254786213(result_3254794770[0]) || ((xPos_3254780247 - xMax_3254794951) < closest_3254794863))) {
              result_3254794770[0] = nimCopy(result_3254794770[0], some_3254794959(toCursor_3254780264(c_3254794867, false)), NTI3254780132);
              closest_3254794863 = (xPos_3254780247 - xMax_3254794951);
              }
              
              }
              else {
                result_3254794770[0] = nimCopy(result_3254794770[0], some_3254794959(toCursor_3254780264(c_3254794867, true)), NTI3254780132);
                var text_3254794977 = currentText_3338666034(c_3254794867);
                if ((0 < (text_3254794977).length)) {
                var alpha_3254794978 = ((xPos_3254780247 - widget_3254794940.lastBounds.x) / widget_3254794940.lastBounds.w);
                get_3254794991(result_3254794770[0]).firstIndex = ((round_3254795012((alpha_3254794978 * (text_3254794977).length))) | 0);
                get_3254794991(result_3254794770[0]).lastIndex = ((round_3254795012((alpha_3254794978 * (text_3254794977).length))) | 0);
                }
                
                break BeforeRet;
              }
              }
            };
            i_3254798919 = addInt(i_3254798919, 1);
            if (!(((line_3254794851).length == L_3254798920))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3254794770[0];

}

function getCursorXPos_3254795038(self_3254795039, cursor_3254795040) {
      var Temporary1;

  var result_3254795041 = 0.0;

    result_3254795041 = 0.0;
      var oHEX60gensym240_3254795044 = getTargetCell_3254780237(cursor_3254795040, true);
      if (!isSome_3338666868(oHEX60gensym240_3254795044)) Temporary1 = false; else {        var cell_3254795067 = get_3338666888(oHEX60gensym240_3254795044);
        Temporary1 = true;      }    if (Temporary1) {
    var widget_3254795140 = getOrDefault_3254793163(self_3254795039.cellWidgetContext.cellToWidget, cell_3254795067.id, null);
    if (!((widget_3254795140 == null))) {
    var text_3254795144 = currentText_3338666034(cell_3254795067);
    if (((text_3254795144).length == 0)) {
    result_3254795041 = widget_3254795140.lastBounds.x;
    }
    else {
      var alpha_3254795145 = (cursor_3254795040.lastIndex / (text_3254795144).length);
      result_3254795041 = ((widget_3254795140.lastBounds.x * (1.0 - alpha_3254795145)) + ((widget_3254795140.lastBounds.x + widget_3254795140.lastBounds.w) * alpha_3254795145));
    }
    
    }
    
    }
    

  return result_3254795041;

}

function isSome_3254793888(self_3254793890) {
  var result_3254793891 = false;

    result_3254793891 = self_3254793890.has;

  return result_3254793891;

}

function get_3254786205(self_3254786207) {
  var result_3254786208 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if (isNone_3254786213(self_3254786207)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3254786208 = self_3254786207.val;

  return result_3254786208;

}

function moveCursorUp_3254798815(self_3254798816, select_3254798817) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym428_3254798820 = getTargetCell_3254780237(cursor_3254784719(self_3254798816), true);
      if (!isSome_3338666868(oHEX60gensym428_3254798820)) Temporary1 = false; else {        var cell_3254798843 = get_3338666888(oHEX60gensym428_3254798820);
        Temporary1 = true;      }    if (Temporary1) {
    if (((0 < cell_3254798843.line) && (cell_3254798843.line <= (self_3254798816.logicalLines).length - 1))) {
      var oHEX60gensym430_3254798849 = getCursorInLine_3254780244(self_3254798816, subInt(cell_3254798843.line, 1), getCursorXPos_3254795038(self_3254798816, cursor_3254784719(self_3254798816)));
      if (!isSome_3254793888(oHEX60gensym430_3254798849)) Temporary2 = false; else {        var newCursor_3254798872 = nimCopy(null, get_3254786205(oHEX60gensym430_3254798849), NTI3254779907);
        Temporary2 = true;      }    if (Temporary2) {
    cursorHEX3D_3254784731(self_3254798816, selectCursor_3254780275(cursor_3254784719(self_3254798816), newCursor_3254798872, select_3254798817));
    }
    
    }
    
    }
    
    markDirty_2415919143(self_3254798816);

  
}

function moveCursorUpJsWrapper2_3254798812(self_3254798901, select_3254798902) {
    moveCursorUp_3254798815(self_3254798901, select_3254798902);

  
}
editor_model_prototype.moveCursorUp2 = function(select_ /* : bool */) { return (moveCursorUpJsWrapper2_3254798812(this, select_));};

function moveCursorDown_3254798928(self_3254798929, select_3254798930) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym440_3254798933 = getTargetCell_3254780237(cursor_3254784719(self_3254798929), true);
      if (!isSome_3338666868(oHEX60gensym440_3254798933)) Temporary1 = false; else {        var cell_3254798956 = get_3338666888(oHEX60gensym440_3254798933);
        Temporary1 = true;      }    if (Temporary1) {
    if ((cell_3254798956.line < (self_3254798929.logicalLines).length - 1)) {
      var oHEX60gensym441_3254798962 = getCursorInLine_3254780244(self_3254798929, addInt(cell_3254798956.line, 1), getCursorXPos_3254795038(self_3254798929, cursor_3254784719(self_3254798929)));
      if (!isSome_3254793888(oHEX60gensym441_3254798962)) Temporary2 = false; else {        var newCursor_3254798985 = nimCopy(null, get_3254786205(oHEX60gensym441_3254798962), NTI3254779907);
        Temporary2 = true;      }    if (Temporary2) {
    cursorHEX3D_3254784731(self_3254798929, selectCursor_3254780275(cursor_3254784719(self_3254798929), newCursor_3254798985, select_3254798930));
    }
    
    }
    
    }
    
    markDirty_2415919143(self_3254798929);

  
}

function moveCursorDownJsWrapper2_3254798925(self_3254799014, select_3254799015) {
    moveCursorDown_3254798928(self_3254799014, select_3254799015);

  
}
editor_model_prototype.moveCursorDown2 = function(select_ /* : bool */) { return (moveCursorDownJsWrapper2_3254798925(this, select_));};

function getLastLeaf_3254795322(cell_3254795323) {
      var Temporary1;

  var result_3254795324 = null;

  BeforeRet: {
      if (!isObj(cell_3254795323.m_type, NTI3338665993)) Temporary1 = false; else {        Temporary1 = (0 < (cell_3254795323.children).length);      }    if (Temporary1) {
    result_3254795324 = getLastLeaf_3254795322(cell_3254795323.children[chckIndx((cell_3254795323.children).length - 1, 0, (cell_3254795323.children).length - 1)]);
    break BeforeRet;
    }
    
    result_3254795324 = cell_3254795323;
    break BeforeRet;
  };

  return result_3254795324;

}

function none_3271570956() {
  var result_3271570962 = ({val: null});

  return result_3271570962;

}

function map_3254795405(self_3254795408, callback_3254795410) {
    var Temporary1;

  var result_3254795411 = ({val: null});

    if (isSome_3338666868(self_3254795408)) {
    Temporary1 = some_3338666283(callback_3254795410(self_3254795408.val));
    }
    else {
    Temporary1 = none_3271570956();
    }
    
    result_3254795411 = nimCopy(result_3254795411, Temporary1, NTI3271564556);

  return result_3254795411;

}

function previousDirect_3338666272(self_3338666273) {
  var result_3338666275 = ({val: null});

  BeforeRet: {
    var i_3338666276 = index_3338666191(self_3338666273);
    if (((i_3338666276 == -1) || (i_3338666276 < 1))) {
    result_3338666275 = nimCopy(result_3338666275, none_3271570956(), NTI3271564556);
    break BeforeRet;
    }
    
    result_3338666275 = nimCopy(result_3338666275, some_3338666283(self_3338666273.parent.children[chckIndx(subInt(i_3338666276, 1), 0, (self_3338666273.parent.children).length - 1)]), NTI3271564556);
    break BeforeRet;
  };

  return result_3338666275;

}

function getPreviousLeaf_3254795337(cell_3254795338, childIndex_3254795347) {
      var Temporary1;
      
function HEX3Aanonymous_3254795385(p_3254795396) {
        var result_3254795399 = null;

          result_3254795399 = getLastLeaf_3254795322(p_3254795396);

        return result_3254795399;

      }

  var result_3254795349 = ({val: null});

  BeforeRet: {
      if (!((cell_3254795338.parent == null) && isObj(cell_3254795338.m_type, NTI3338665993))) Temporary1 = false; else {        Temporary1 = (0 < (cell_3254795338.children).length);      }    if (Temporary1) {
    result_3254795349 = nimCopy(result_3254795349, some_3338666283(getLastLeaf_3254795322(cell_3254795338)), NTI3271564556);
    break BeforeRet;
    }
    
    if ((cell_3254795338.parent == null)) {
    result_3254795349 = nimCopy(result_3254795349, none_3271570956(), NTI3271564556);
    break BeforeRet;
    }
    
    var parent_3254795374 = cell_3254795338.parent;
    var index_3254795375 = indexOf_3338666139(parent_3254795374, cell_3254795338);
    if ((0 < index_3254795375)) {
    result_3254795349 = nimCopy(result_3254795349, some_3338666283(getLastLeaf_3254795322(parent_3254795374.children[chckIndx(subInt(index_3254795375, 1), 0, (parent_3254795374.children).length - 1)])), NTI3271564556);
    break BeforeRet;
    }
    else {
      var newParent_3254795379 = parent_3254795374;
      var parentIndex_3254795380 = index_3338666191(newParent_3254795379);
      Label2: {
          Label3: while (true) {
          if (!(!((parentIndex_3254795380 == -1)) && (parentIndex_3254795380 == 0))) break Label3;
            newParent_3254795379 = newParent_3254795379.parent;
            parentIndex_3254795380 = index_3338666191(newParent_3254795379);
          }
      };
      if ((0 < parentIndex_3254795380)) {
      result_3254795349 = nimCopy(result_3254795349, map_3254795405(previousDirect_3338666272(newParent_3254795379), HEX3Aanonymous_3254795385), NTI3271564556);
      break BeforeRet;
      }
      
      result_3254795349 = nimCopy(result_3254795349, some_3338666283(cell_3254795338), NTI3271564556);
      break BeforeRet;
    }
    
  };

  return result_3254795349;

}

function get_3254795554(self_3254795556) {
  var result_3254795557 = null;
  var result_3254795557_Idx = 0;

  BeforeRet: {
    if (isNone_3338666896(self_3254795556)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3254795557 = self_3254795556; result_3254795557_Idx = "val";
    break BeforeRet;
  };

  return [result_3254795557, result_3254795557_Idx];

}

function getPreviousLeafWhere_3254795520(cell_3254795521, predicate_3254795524) {
            var Temporary3;
            var Temporary4;
          var Temporary5;

  var result_3254795526 = ({val: null});

  BeforeRet: {
    var temp_3254795527 = cell_3254795521;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var c_3254795528 = [getPreviousLeaf_3254795337(temp_3254795527, none_3003121842())];
          if (isNone_3338666896(c_3254795528[0])) {
          result_3254795526 = nimCopy(result_3254795526, none_3271570956(), NTI3271564556);
          break BeforeRet;
          }
          
          if (predicate_3254795524((Temporary3 = get_3254795554(c_3254795528[0]), Temporary3)[0][Temporary3[1]])) {
          result_3254795526 = nimCopy(result_3254795526, c_3254795528[0], NTI3271564556);
          break BeforeRet;
          }
          
          if (((Temporary4 = get_3254795554(c_3254795528[0]), Temporary4)[0][Temporary4[1]] == temp_3254795527)) {
          result_3254795526 = nimCopy(result_3254795526, none_3271570956(), NTI3271564556);
          break BeforeRet;
          }
          
          temp_3254795527 = (Temporary5 = get_3254795554(c_3254795528[0]), Temporary5)[0][Temporary5[1]];
        }
    };
  };

  return result_3254795526;

}

function getPreviousSelectableLeaf_3254795837(cell_3254795838) {
  var result_3254795840 = ({val: null});

  BeforeRet: {
    result_3254795840 = nimCopy(result_3254795840, getPreviousLeafWhere_3254795520(cell_3254795838, canSelect_3254780271), NTI3271564556);
    break BeforeRet;
  };

  return result_3254795840;

}

function moveCursorLeftCell_3254799034(self_3254799035, select_3254799036) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym451_3254799039 = getTargetCell_3254780237(cursor_3254784719(self_3254799035), true);
      if (!isSome_3338666868(oHEX60gensym451_3254799039)) Temporary1 = false; else {        var cell_3254799062 = get_3338666888(oHEX60gensym451_3254799039);
        Temporary1 = true;      }    if (Temporary1) {
      var oHEX60gensym452_3254799065 = getPreviousSelectableLeaf_3254795837(cell_3254799062);
      if (!isSome_3338666868(oHEX60gensym452_3254799065)) Temporary2 = false; else {        var c_3254799088 = get_3338666888(oHEX60gensym452_3254799065);
        Temporary2 = true;      }    if (Temporary2) {
    cursorHEX3D_3254784731(self_3254799035, selectCursor_3254780275(cursor_3254784719(self_3254799035), toCursor_3254780264(c_3254799088, false), select_3254799036));
    }
    
    }
    
    markDirty_2415919143(self_3254799035);

  
}

function moveCursorLeftCellJsWrapper_3254799031(self_3254799117, select_3254799118) {
    moveCursorLeftCell_3254799034(self_3254799117, select_3254799118);

  
}
editor_model_prototype.moveCursorLeftCell = function(select_ /* : bool */) { return (moveCursorLeftCellJsWrapper_3254799031(this, select_));};

function getFirstLeaf_3254795310(cell_3254795311) {
      var Temporary1;

  var result_3254795312 = null;

  BeforeRet: {
      if (!isObj(cell_3254795311.m_type, NTI3338665993)) Temporary1 = false; else {        Temporary1 = (0 < (cell_3254795311.children).length);      }    if (Temporary1) {
    result_3254795312 = getFirstLeaf_3254795310(cell_3254795311.children[chckIndx(0, 0, (cell_3254795311.children).length - 1)]);
    break BeforeRet;
    }
    
    result_3254795312 = cell_3254795311;
    break BeforeRet;
  };

  return result_3254795312;

}

function parentHigh_3338666197(self_3338666198) {
  var result_3338666199 = 0;

  BeforeRet: {
    if ((self_3338666198.parent == null)) {
    result_3338666199 = -1;
    break BeforeRet;
    }
    
    result_3338666199 = (self_3338666198.parent.children).length - 1;
    break BeforeRet;
  };

  return result_3338666199;

}

function nextDirect_3338666296(self_3338666297) {
      var Temporary1;

  var result_3338666299 = ({val: null});

  BeforeRet: {
    var i_3338666300 = index_3338666191(self_3338666297);
      if ((i_3338666300 == -1)) Temporary1 = true; else {        Temporary1 = ((self_3338666297.parent.children).length - 1 <= i_3338666300);      }    if (Temporary1) {
    result_3338666299 = nimCopy(result_3338666299, none_3271570956(), NTI3271564556);
    break BeforeRet;
    }
    
    result_3338666299 = nimCopy(result_3338666299, some_3338666283(self_3338666297.parent.children[chckIndx(addInt(i_3338666300, 1), 0, (self_3338666297.parent.children).length - 1)]), NTI3271564556);
    break BeforeRet;
  };

  return result_3338666299;

}

function getNextLeaf_3254795440(cell_3254795441, childIndex_3254795450) {
      var Temporary1;
      
function HEX3Aanonymous_3254795491(p_3254795502) {
        var result_3254795505 = null;

          result_3254795505 = getFirstLeaf_3254795310(p_3254795502);

        return result_3254795505;

      }

  var result_3254795452 = ({val: null});

  BeforeRet: {
      if (!((cell_3254795441.parent == null) && isObj(cell_3254795441.m_type, NTI3338665993))) Temporary1 = false; else {        Temporary1 = (0 < (cell_3254795441.children).length);      }    if (Temporary1) {
    result_3254795452 = nimCopy(result_3254795452, some_3338666283(getFirstLeaf_3254795310(cell_3254795441)), NTI3271564556);
    break BeforeRet;
    }
    
    if ((cell_3254795441.parent == null)) {
    result_3254795452 = nimCopy(result_3254795452, none_3271570956(), NTI3271564556);
    break BeforeRet;
    }
    
    var parent_3254795477 = cell_3254795441.parent;
    var index_3254795478 = indexOf_3338666139(parent_3254795477, cell_3254795441);
    if ((index_3254795478 < (parent_3254795477.children).length - 1)) {
    result_3254795452 = nimCopy(result_3254795452, some_3338666283(getFirstLeaf_3254795310(parent_3254795477.children[chckIndx(addInt(index_3254795478, 1), 0, (parent_3254795477.children).length - 1)])), NTI3271564556);
    break BeforeRet;
    }
    else {
      var newParent_3254795485 = parent_3254795477;
      var parentIndex_3254795486 = index_3338666191(newParent_3254795485);
      Label2: {
          Label3: while (true) {
          if (!(!((parentIndex_3254795486 == -1)) && (parentHigh_3338666197(newParent_3254795485) <= parentIndex_3254795486))) break Label3;
            newParent_3254795485 = newParent_3254795485.parent;
            parentIndex_3254795486 = index_3338666191(newParent_3254795485);
          }
      };
      if ((parentIndex_3254795486 < parentHigh_3338666197(newParent_3254795485))) {
      result_3254795452 = nimCopy(result_3254795452, map_3254795405(nextDirect_3338666296(newParent_3254795485), HEX3Aanonymous_3254795491), NTI3271564556);
      break BeforeRet;
      }
      
      result_3254795452 = nimCopy(result_3254795452, some_3338666283(cell_3254795441), NTI3271564556);
      break BeforeRet;
    }
    
  };

  return result_3254795452;

}

function getNextLeafWhere_3254795615(cell_3254795616, predicate_3254795619) {
            var Temporary3;
            var Temporary4;
          var Temporary5;

  var result_3254795621 = ({val: null});

  BeforeRet: {
    var temp_3254795622 = cell_3254795616;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var c_3254795623 = [getNextLeaf_3254795440(temp_3254795622, none_3003121842())];
          if (isNone_3338666896(c_3254795623[0])) {
          result_3254795621 = nimCopy(result_3254795621, none_3271570956(), NTI3271564556);
          break BeforeRet;
          }
          
          if (predicate_3254795619((Temporary3 = get_3254795554(c_3254795623[0]), Temporary3)[0][Temporary3[1]])) {
          result_3254795621 = nimCopy(result_3254795621, c_3254795623[0], NTI3271564556);
          break BeforeRet;
          }
          
          if (((Temporary4 = get_3254795554(c_3254795623[0]), Temporary4)[0][Temporary4[1]] == temp_3254795622)) {
          result_3254795621 = nimCopy(result_3254795621, none_3271570956(), NTI3271564556);
          break BeforeRet;
          }
          
          temp_3254795622 = (Temporary5 = get_3254795554(c_3254795623[0]), Temporary5)[0][Temporary5[1]];
        }
    };
  };

  return result_3254795621;

}

function getNextSelectableLeaf_3254795841(cell_3254795842) {
  var result_3254795844 = ({val: null});

  BeforeRet: {
    result_3254795844 = nimCopy(result_3254795844, getNextLeafWhere_3254795615(cell_3254795842, canSelect_3254780271), NTI3271564556);
    break BeforeRet;
  };

  return result_3254795844;

}

function moveCursorRightCell_3254799139(self_3254799140, select_3254799141) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym462_3254799144 = getTargetCell_3254780237(cursor_3254784719(self_3254799140), true);
      if (!isSome_3338666868(oHEX60gensym462_3254799144)) Temporary1 = false; else {        var cell_3254799167 = get_3338666888(oHEX60gensym462_3254799144);
        Temporary1 = true;      }    if (Temporary1) {
      var oHEX60gensym463_3254799170 = getNextSelectableLeaf_3254795841(cell_3254799167);
      if (!isSome_3338666868(oHEX60gensym463_3254799170)) Temporary2 = false; else {        var c_3254799193 = get_3338666888(oHEX60gensym463_3254799170);
        Temporary2 = true;      }    if (Temporary2) {
    cursorHEX3D_3254784731(self_3254799140, selectCursor_3254780275(cursor_3254784719(self_3254799140), toCursor_3254780264(c_3254799193, true), select_3254799141));
    }
    
    }
    
    markDirty_2415919143(self_3254799140);

  
}

function moveCursorRightCellJsWrapper_3254799136(self_3254799222, select_3254799223) {
    moveCursorRightCell_3254799139(self_3254799222, select_3254799223);

  
}
editor_model_prototype.moveCursorRightCell = function(select_ /* : bool */) { return (moveCursorRightCellJsWrapper_3254799136(this, select_));};

function rawGet_3254790540(t_3254790543, key_3254790544, hc_3254790545, hc_3254790545_Idx) {
  var result_3254790546 = 0;

  BeforeRet: {
    hc_3254790545[hc_3254790545_Idx] = hash_2046820630(key_3254790544);
    if ((hc_3254790545[hc_3254790545_Idx] == 0)) {
    hc_3254790545[hc_3254790545_Idx] = 314159265;
    }
    
    if (((t_3254790543.data).length == 0)) {
    result_3254790546 = -1;
    break BeforeRet;
    }
    
    var h_3254790614 = (hc_3254790545[hc_3254790545_Idx] & (t_3254790543.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254790543.data[chckIndx(h_3254790614, 0, (t_3254790543.data).length - 1)].Field0)) break Label2;
          if (((t_3254790543.data[chckIndx(h_3254790614, 0, (t_3254790543.data).length - 1)].Field0 == hc_3254790545[hc_3254790545_Idx]) && HEX3DHEX3D_2046820626(t_3254790543.data[chckIndx(h_3254790614, 0, (t_3254790543.data).length - 1)].Field1, key_3254790544))) {
          result_3254790546 = h_3254790614;
          break BeforeRet;
          }
          
          h_3254790614 = nextTry_1308622883(h_3254790614, (t_3254790543.data).length - 1);
        }
    };
    result_3254790546 = subInt(-1, h_3254790614);
  };

  return result_3254790546;

}

function getOrDefault_3254793754(t_3254793757, key_3254793758, default_3254793759) {
    var Temporary1;

  var result_3254793760 = null;

    var hcHEX60gensym189_3254793763 = [0];
    var indexHEX60gensym189_3254793770 = rawGet_3254790540(t_3254793757, key_3254793758, hcHEX60gensym189_3254793763, 0);
    if ((0 <= indexHEX60gensym189_3254793770)) {
    Temporary1 = t_3254793757.data[chckIndx(indexHEX60gensym189_3254793770, 0, (t_3254793757.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3254793759;
    }
    
    result_3254793760 = Temporary1;

  return result_3254793760;

}

function selectNode_3254799244(self_3254799245, select_3254799246) {
    if (((cursor_3254784719(self_3254799245).path).length == 0)) {
    if (((cursor_3254784719(self_3254799245).firstIndex == 0) && (cursor_3254784719(self_3254799245).lastIndex == high_3338666244(cursor_3254784719(self_3254799245).cell)))) {
    if (!((cursor_3254784719(self_3254799245).node.parent == null))) {
    cursorHEX3D_3254784731(self_3254799245, {node: cursor_3254784719(self_3254799245).node.parent, cell: getOrDefault_3254793754(self_3254799245.nodeToCell, cursor_3254784719(self_3254799245).node.id, null), path: nimCopy(null, cursor_3254784719(self_3254799245).path, NTI3254779908), firstIndex: 0, lastIndex: editableHigh_3338666256(cursor_3254784719(self_3254799245).cell, false)});
    }
    
    }
    else {
    cursorHEX3D_3254784731(self_3254799245, {node: cursor_3254784719(self_3254799245).node, cell: cursor_3254784719(self_3254799245).cell, path: nimCopy(null, cursor_3254784719(self_3254799245).path, NTI3254779908), firstIndex: 0, lastIndex: editableHigh_3338666256(cursor_3254784719(self_3254799245).cell, false)});
    }
    
    }
    else {
    cursorHEX3D_3254784731(self_3254799245, {node: cursor_3254784719(self_3254799245).node, cell: cursor_3254784719(self_3254799245).cell, path: [], firstIndex: 0, lastIndex: editableHigh_3338666256(cursor_3254784719(self_3254799245).cell, false)});
    }
    
    markDirty_2415919143(self_3254799245);

  
}

function selectNodeJsWrapper_3254799241(self_3254799357, select_3254799358) {
    selectNode_3254799244(self_3254799357, select_3254799358);

  
}
editor_model_prototype.selectNode = function(select_ /* : bool */) { return (selectNodeJsWrapper_3254799241(this, select_));};

function pop_3254796005(s_3254796007, s_3254796007_Idx) {
  var result_3254796008 = 0;

    var L_3254796012 = subInt((s_3254796007[s_3254796007_Idx]).length, 1);
    result_3254796008 = s_3254796007[s_3254796007_Idx][chckIndx(L_3254796012, 0, (s_3254796007[s_3254796007_Idx]).length - 1)];
    if (s_3254796007[s_3254796007_Idx].length < chckRange(L_3254796012, 0, 2147483647)) { for (var i = s_3254796007[s_3254796007_Idx].length ; i < chckRange(L_3254796012, 0, 2147483647) ; ++i) s_3254796007[s_3254796007_Idx].push(0); }
               else { s_3254796007[s_3254796007_Idx].length = chckRange(L_3254796012, 0, 2147483647); };

  return result_3254796008;

}

function toCursor_3254780261(cell_3254780262, column_3254780263) {
  var result_3254795963 = [({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})];

    var colontmp__3254799416 = nodeRootCellPath_3254795918(cell_3254780262);
    var rootCell_3254795964 = colontmp__3254799416["Field0"];
    var path_3254795965 = nimCopy(null, colontmp__3254799416["Field1"], NTI3254788575);
    result_3254795963[0].node = cell_3254780262.node;
    result_3254795963[0].cell = rootCell_3254795964;
    result_3254795963[0].path = nimCopy(null, path_3254795965, NTI3254788575);
    columnHEX3D_3254780009(result_3254795963[0], clamp_1660945119(column_3254780263, editableLow_3338666237(cell_3254780262, false), editableHigh_3338666256(cell_3254780262, false)));

  return result_3254795963[0];

}

function selectParentCell_3254795996(cursor_3254795997) {
  var result_3254795998 = [({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})];

  BeforeRet: {
    result_3254795998[0] = nimCopy(result_3254795998[0], cursor_3254795997, NTI3254779907);
    if ((0 < (result_3254795998[0].path).length)) {
    columnHEX3D_3254780009(result_3254795998[0], result_3254795998[0].path[chckIndx((result_3254795998[0].path).length - 1, 0, (result_3254795998[0].path).length - 1)]);
    var _ = pop_3254796005(result_3254795998[0], "path");
    }
    else {
    if (!((result_3254795998[0].cell.parent == null))) {
    result_3254795998[0] = nimCopy(result_3254795998[0], toCursor_3254780261(result_3254795998[0].cell.parent, index_3338666191(result_3254795998[0].cell)), NTI3254779907);
    break BeforeRet;
    }
    }
  };

  return result_3254795998[0];

}

function selectParentCell_3254799378(self_3254799379) {
    cursorHEX3D_3254784731(self_3254799379, selectParentCell_3254795996(cursor_3254784719(self_3254799379)));
    markDirty_2415919143(self_3254799379);

  
}

function selectParentCellJsWrapper_3254799375(self_3254799407) {
    selectParentCell_3254799378(self_3254799407);

  
}
editor_model_prototype.selectParentCell = function() { return (selectParentCellJsWrapper_3254799375(this));};

function isVisible_3254780273(cell_3254780274) {
  var result_3254795287 = false;

  BeforeRet: {
    if ((!((cell_3254780274.isVisible == null)) && !(cell_3254780274.isVisible(cell_3254780274.node)))) {
    result_3254795287 = false;
    break BeforeRet;
    }
    
    result_3254795287 = true;
    break BeforeRet;
  };

  return result_3254795287;

}

function isAbstract_3271557440(selfHEX60gensym5_3271557441) {
  var result_3271557442 = false;

  BeforeRet: {
    result_3271557442 = selfHEX60gensym5_3271557441.isAbstract;
    break BeforeRet;
  };

  return result_3271557442;

}

function isInterface_3271557443(selfHEX60gensym6_3271557444) {
  var result_3271557445 = false;

  BeforeRet: {
    result_3271557445 = selfHEX60gensym6_3271557444.isInterface;
    break BeforeRet;
  };

  return result_3271557445;

}

function shouldEdit_3254799417(cell_3254799418) {
  var result_3254799419 = false;

  BeforeRet: {
    if (isObj(cell_3254799418.m_type, NTI3338665999)) {
    result_3254799419 = true;
    break BeforeRet;
    }
    
    var class_3254799426 = nodeClass_3271557904(cell_3254799418.node);
    if ((!((class_3254799426 == null)) && (isAbstract_3271557440(class_3254799426) || isInterface_3271557443(class_3254799426)))) {
    result_3254799419 = true;
    break BeforeRet;
    }
    
    result_3254799419 = false;
    break BeforeRet;
  };

  return result_3254799419;

}

function selectPrevPlaceholder_3254799435(self_3254799436, select_3254799437) {
      var Temporary1;
      
function HEX3Aanonymous_3254799438(c_3254799439) {
        var result_3254799440 = false;

          result_3254799440 = (isVisible_3254780273(c_3254799439) && shouldEdit_3254799417(c_3254799439));

        return result_3254799440;

      }

  BeforeRet: {
      var oHEX60gensym491_3254799443 = getPreviousLeafWhere_3254795520(targetCell_3254780021(cursor_3254784719(self_3254799436)), HEX3Aanonymous_3254799438);
      if (!isSome_3338666868(oHEX60gensym491_3254799443)) Temporary1 = false; else {        var candidate_3254799466 = get_3338666888(oHEX60gensym491_3254799443);
        Temporary1 = true;      }    if (Temporary1) {
    if (!(shouldEdit_3254799417(candidate_3254799466))) {
    break BeforeRet;
    }
    
    cursorHEX3D_3254784731(self_3254799436, toCursor_3254780264(candidate_3254799466, true));
    markDirty_2415919143(self_3254799436);
    }
    
  };

  
}

function selectPrevPlaceholderJsWrapper_3254799432(self_3254799495, select_3254799496) {
    selectPrevPlaceholder_3254799435(self_3254799495, select_3254799496);

  
}
editor_model_prototype.selectPrevPlaceholder = function(select_ /* : bool */) { return (selectPrevPlaceholderJsWrapper_3254799432(this, select_));};

function selectNextPlaceholder_3254799515(self_3254799516, select_3254799517) {
      var Temporary1;
      
function HEX3Aanonymous_3254799518(c_3254799519) {
        var result_3254799520 = false;

          result_3254799520 = (isVisible_3254780273(c_3254799519) && shouldEdit_3254799417(c_3254799519));

        return result_3254799520;

      }

  BeforeRet: {
      var oHEX60gensym501_3254799523 = getNextLeafWhere_3254795615(targetCell_3254780021(cursor_3254784719(self_3254799516)), HEX3Aanonymous_3254799518);
      if (!isSome_3338666868(oHEX60gensym501_3254799523)) Temporary1 = false; else {        var candidate_3254799546 = get_3338666888(oHEX60gensym501_3254799523);
        Temporary1 = true;      }    if (Temporary1) {
    if (!(shouldEdit_3254799417(candidate_3254799546))) {
    break BeforeRet;
    }
    
    cursorHEX3D_3254784731(self_3254799516, toCursor_3254780264(candidate_3254799546, true));
    markDirty_2415919143(self_3254799516);
    }
    
  };

  
}

function selectNextPlaceholderJsWrapper_3254799512(self_3254799575, select_3254799576) {
    selectNextPlaceholder_3254799515(self_3254799575, select_3254799576);

  
}
editor_model_prototype.selectNextPlaceholder = function(select_ /* : bool */) { return (selectNextPlaceholderJsWrapper_3254799512(this, select_));};

function selfDescription_3271567499(node_3271567500) {
  var result_3271567502 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0}), has: false});

  BeforeRet: {
    if ((node_3271567500.parent == null)) {
    result_3271567502 = nimCopy(result_3271567502, none_3271566281(), NTI3271561836);
    break BeforeRet;
    }
    
    var class_3271567513 = nodeClass_3271557904(node_3271567500.parent);
    if ((class_3271567513 == null)) {
    result_3271567502 = nimCopy(result_3271567502, none_3271566281(), NTI3271561836);
    break BeforeRet;
    }
    
    result_3271567502 = nimCopy(result_3271567502, nodeChildDescription_3271566272(class_3271567513, node_3271567500.role), NTI3271561836);
    break BeforeRet;
  };

  return result_3271567502;

}

function childCount_3271566615(node_3271566616, role_3271566617) {
  var result_3271566618 = 0;

  BeforeRet: {
    result_3271566618 = 0;
    Label1: {
      var c_3271566622 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
      var i_3254800502 = 0;
      var L_3254800503 = (node_3271566616.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800502 < L_3254800503)) break Label3;
            c_3271566622 = node_3271566616.childLists[chckIndx(i_3254800502, 0, (node_3271566616.childLists).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566622.Field0, role_3271566617)) {
            result_3271566618 = (c_3271566622.Field1).length;
            break BeforeRet;
            }
            
            i_3254800502 = addInt(i_3254800502, 1);
            if (!(((node_3271566616.childLists).length == L_3254800503))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271566618;

}

function resolveClass_3271561160(model_3271561161, classId_3271561162) {
    var Temporary1;

  var result_3271561163 = null;

    var language_3271561533 = getOrDefault_3271561230(model_3271561161.classesToLanguages, classId_3271561162, null);
    if ((language_3271561533 == null)) {
    Temporary1 = null;
    }
    else {
    Temporary1 = getOrDefault_3271561603(language_3271561533.classes, classId_3271561162, null);
    }
    
    result_3271561163 = Temporary1;

  return result_3271561163;

}

function getOrDefault_3271567229(t_3271567232, key_3271567233) {
  var result_3271567234 = null;

    var hcHEX60gensym152_3271567237 = [0];
    var indexHEX60gensym152_3271567244 = rawGet_3271558148(t_3271567232, key_3271567233, hcHEX60gensym152_3271567237, 0);
    if ((0 <= indexHEX60gensym152_3271567244)) {
    result_3271567234 = t_3271567232.data[chckIndx(indexHEX60gensym152_3271567244, 0, (t_3271567232.data).length - 1)].Field2;
    }
    

  return result_3271567234;

}

function forEach_3271557910(node_3271557911, f_3271557914) {
    f_3271557914(node_3271557911);
    Label1: {
      var item_3271557937 = null;
      var i_3254800519 = 0;
      var L_3254800520 = (node_3271557911.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800519 < L_3254800520)) break Label3;
            item_3271557937 = node_3271557911.childLists[chckIndx(i_3254800519, 0, (node_3271557911.childLists).length - 1)];
            Label4: {
              var c_3271557960 = null;
              var i_3254800516 = 0;
              var L_3254800517 = (item_3271557937.Field1).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_3254800516 < L_3254800517)) break Label6;
                    c_3271557960 = item_3271557937.Field1[chckIndx(i_3254800516, 0, (item_3271557937.Field1).length - 1)];
                    forEach_3271557910(c_3271557960, f_3271557914);
                    i_3254800516 = addInt(i_3254800516, 1);
                    if (!(((item_3271557937.Field1).length == L_3254800517))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_3254800519 = addInt(i_3254800519, 1);
            if (!(((node_3271557911.childLists).length == L_3254800520))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function mustRehash_3271564900(t_3271564902) {
  var result_3271564903 = false;

    if (!((t_3271564902.counter < (t_3271564902.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271564903 = ((mulInt((t_3271564902.data).length, 2) < mulInt(t_3271564902.counter, 3)) || (subInt((t_3271564902.data).length, t_3271564902.counter) < 4));

  return result_3271564903;

}

function rawInsert_3271565349(t_3271565353, data_3271565354, data_3271565354_Idx, key_3271565355, val_3271565356, hc_3271565357, h_3271565358) {
    data_3271565354[data_3271565354_Idx][chckIndx(h_3271565358, 0, (data_3271565354[data_3271565354_Idx]).length - 1)].Field1 = nimCopy(data_3271565354[data_3271565354_Idx][chckIndx(h_3271565358, 0, (data_3271565354[data_3271565354_Idx]).length - 1)].Field1, key_3271565355, NTI2046820355);
    data_3271565354[data_3271565354_Idx][chckIndx(h_3271565358, 0, (data_3271565354[data_3271565354_Idx]).length - 1)].Field2 = val_3271565356;
    data_3271565354[data_3271565354_Idx][chckIndx(h_3271565358, 0, (data_3271565354[data_3271565354_Idx]).length - 1)].Field0 = hc_3271565357;

  
}

function enlarge_3271565055(t_3271565058) {
    var n_3271565061 = [];
    n_3271565061 = new Array(chckRange(mulInt((t_3271565058.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271565058.data).length, 2), 0, 2147483647) ; ++i) { n_3271565061[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3271565058.data; t_3271565058.data = n_3271565061; n_3271565061 = Temporary1;    Label2: {
      var i_3271565125 = 0;
      var colontmp__3254800524 = 0;
      colontmp__3254800524 = (n_3271565061).length - 1;
      var res_3254800525 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_3254800525 <= colontmp__3254800524)) break Label4;
            i_3271565125 = res_3254800525;
            var eh_3271565179 = n_3271565061[chckIndx(i_3271565125, 0, (n_3271565061).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271565179)) {
            var j_3271565183 = (eh_3271565179 & (t_3271565058.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271565058.data[chckIndx(j_3271565183, 0, (t_3271565058.data).length - 1)].Field0)) break Label6;
                  j_3271565183 = nextTry_1308622883(j_3271565183, (t_3271565058.data).length - 1);
                }
            };
            rawInsert_3271565349(t_3271565058, t_3271565058, "data", n_3271565061[chckIndx(i_3271565125, 0, (n_3271565061).length - 1)].Field1, n_3271565061[chckIndx(i_3271565125, 0, (n_3271565061).length - 1)].Field2, eh_3271565179, j_3271565183);
            }
            
            res_3254800525 = addInt(res_3254800525, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271565518(t_3271565521, key_3271565522, hc_3271565523) {
  var result_3271565524 = 0;

  BeforeRet: {
    if (((t_3271565521.data).length == 0)) {
    result_3271565524 = -1;
    break BeforeRet;
    }
    
    var h_3271565575 = (hc_3271565523 & (t_3271565521.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271565521.data[chckIndx(h_3271565575, 0, (t_3271565521.data).length - 1)].Field0)) break Label2;
          if (((t_3271565521.data[chckIndx(h_3271565575, 0, (t_3271565521.data).length - 1)].Field0 == hc_3271565523) && HEX3DHEX3D_2046820626(t_3271565521.data[chckIndx(h_3271565575, 0, (t_3271565521.data).length - 1)].Field1, key_3271565522))) {
          result_3271565524 = h_3271565575;
          break BeforeRet;
          }
          
          h_3271565575 = nextTry_1308622883(h_3271565575, (t_3271565521.data).length - 1);
        }
    };
    result_3271565524 = subInt(-1, h_3271565575);
  };

  return result_3271565524;

}

function HEX5BHEX5DHEX3D_3271564494(t_3271564497, key_3271564498, val_3271564499) {
    if (((t_3271564497.data).length == 0)) {
    var correctSizeHEX60gensym98_3271564549 = slotsNeeded_1308622891(32);
    t_3271564497.counter = 0;
    t_3271564497.data = new Array(chckRange(correctSizeHEX60gensym98_3271564549, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym98_3271564549, 0, 2147483647) ; ++i) { t_3271564497.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3271564554 = [0];
    var index_3271564793 = rawGet_3271564555(t_3271564497, key_3271564498, hc_3271564554, 0);
    if ((0 <= index_3271564793)) {
    t_3271564497.data[chckIndx(index_3271564793, 0, (t_3271564497.data).length - 1)].Field2 = val_3271564499;
    }
    else {
      if (((t_3271564497.data).length == 0)) {
      var correctSizeHEX60gensym103_3271564895 = slotsNeeded_1308622891(32);
      t_3271564497.counter = 0;
      t_3271564497.data = new Array(chckRange(correctSizeHEX60gensym103_3271564895, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym103_3271564895, 0, 2147483647) ; ++i) { t_3271564497.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3271564900(t_3271564497)) {
      enlarge_3271565055(t_3271564497);
      index_3271564793 = rawGetKnownHC_3271565518(t_3271564497, key_3271564498, hc_3271564554[0]);
      }
      
      index_3271564793 = subInt(-1, index_3271564793);
      rawInsert_3271565349(t_3271564497, t_3271564497, "data", key_3271564498, val_3271564499, hc_3271564554[0], index_3271564793);
      t_3271564497.counter = addInt(t_3271564497.counter, 1);
    }
    

  
}

function insert_3271567703(x_3271567705, x_3271567705_Idx, item_3271567706, i_3271567707) {
    var it_3271567727 = null;
    x_3271567705[x_3271567705_Idx] = x_3271567705[x_3271567705_Idx] || []; x_3271567705[x_3271567705_Idx].splice(i_3271567707, 0, it_3271567727);
    x_3271567705[x_3271567705_Idx][chckIndx(i_3271567707, 0, (x_3271567705[x_3271567705_Idx]).length - 1)] = item_3271567706;

  
}

function invoke_3271557636(event_3271557638, arg_3271557639) {
    Label1: {
      var h_3271557662 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_3254800531 = 0;
      var L_3254800532 = (event_3271557638.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800531 < L_3254800532)) break Label3;
            h_3271557662 = event_3271557638.handlers[chckIndx(i_3254800531, 0, (event_3271557638.handlers).length - 1)];
            h_3271557662.Field1(arg_3271557639);
            i_3254800531 = addInt(i_3254800531, 1);
            if (!(((event_3271557638.handlers).length == L_3254800532))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function notifyNodeInserted_3271557701(self_3271557702, parent_3271557703, child_3271557704, role_3271557705, index_3271557706) {
    invoke_3271557636(self_3271557702.onNodeInserted, {Field0: self_3271557702, Field1: parent_3271557703, Field2: child_3271557704, Field3: nimCopy(null, role_3271557705, NTI2046820355), Field4: index_3271557706});

  
}

function insert_3271567638(node_3271567639, role_3271567640, index_3271567641, child_3271567642) {
    
function HEX3Aanonymous_3271567650(nHEX60gensym160_3271567651) {
        var n_3271567652 = nHEX60gensym160_3271567651;
        n_3271567652.model = node_3271567639.model;
        HEX5BHEX5DHEX3D_3271564494(node_3271567639.model.nodes, n_3271567652.id, n_3271567652);

      
    }

  BeforeRet: {
    if ((child_3271567642 == null)) {
    break BeforeRet;
    }
    
    if (HEX3DHEX3D_2046820626(child_3271567642.id, idNone_2046820633())) {
    child_3271567642.id = nimCopy(child_3271567642.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3271567642.parent = node_3271567639;
    child_3271567642.role = nimCopy(child_3271567642.role, role_3271567640, NTI2046820355);
    if (!((node_3271567639.model == null))) {
    forEach_3271557910(child_3271567642, HEX3Aanonymous_3271567650);
    }
    
    Label1: {
      var c_3271567702 = null;
      var i_3254800510 = 0;
      var L_3254800511 = (node_3271567639.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800510 < L_3254800511)) break Label3;
            c_3271567702 = node_3271567639.childLists[chckIndx(i_3254800510, 0, (node_3271567639.childLists).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271567702.Field0, role_3271567640)) {
            insert_3271567703(c_3271567702, "Field1", child_3271567642, chckRange(index_3271567641, 0, 2147483647));
            if (!((node_3271567639.model == null))) {
            notifyNodeInserted_3271557701(node_3271567639.model, node_3271567639, child_3271567642, role_3271567640, index_3271567641);
            }
            
            break BeforeRet;
            }
            
            i_3254800510 = addInt(i_3254800510, 1);
            if (!(((node_3271567639.childLists).length == L_3254800511))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var fmtRes_3271567735 = [mnewString(0)];
    fmtRes_3271567735[0].push.apply(fmtRes_3271567735[0], [85,110,107,110,111,119,110,32,114,111,108,101,32]);;
    formatValue_3036676344(fmtRes_3271567735, 0, role_3271567640, []);
    fmtRes_3271567735[0].push.apply(fmtRes_3271567735[0], [32,102,111,114,32,110,111,100,101,32]);;
    formatValue_3036676344(fmtRes_3271567735, 0, node_3271567639.id, []);
    fmtRes_3271567735[0].push.apply(fmtRes_3271567735[0], [32,111,102,32,99,108,97,115,115,32]);;
    formatValue_3036676344(fmtRes_3271567735, 0, node_3271567639.class, []);
    raiseException({message: nimCopy(null, fmtRes_3271567735[0], NTI33554449), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
  };

  
}

function add_3271557906(node_3271557907, role_3271557908, child_3271557909) {
    insert_3271567638(node_3271557907, role_3271557908, (children_3271566626(node_3271557907, role_3271557908)).length, child_3271557909);

  
}

function fillDefaultChildren_3271567078(node_3271567079, language_3271567080) {
    var class_3271567153 = getOrDefault_3271561603(language_3271567080.classes, node_3271567079.class, null);
    Label1: {
      var desc_3271567157 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0});
      var i_3254800506 = 0;
      var L_3254800507 = (class_3271567153.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800506 < L_3254800507)) break Label3;
            desc_3271567157 = class_3271567153.children[chckIndx(i_3254800506, 0, (class_3271567153.children).length - 1)];
            if ((ConstSet241[desc_3271567157.count] != undefined)) {
            var childClass_3271567298 = getOrDefault_3271567229(language_3271567080.classes, desc_3271567157.class);
            var child_3271567299 = newAstNode_3271567013(childClass_3271567298, none_3271567020());
            fillDefaultChildren_3271567078(child_3271567299, language_3271567080);
            add_3271557906(node_3271567079, desc_3271567157.id, child_3271567299);
            }
            
            i_3254800506 = addInt(i_3254800506, 1);
            if (!(((class_3271567153.children).length == L_3254800507))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function notifyNodeDeleted_3271557608(self_3271557609, parent_3271557610, child_3271557611, role_3271557612, index_3271557613) {
    invoke_3271557636(self_3271557609.onNodeDeleted, {Field0: self_3271557609, Field1: parent_3271557610, Field2: child_3271557611, Field3: nimCopy(null, role_3271557612, NTI2046820355), Field4: index_3271557613});

  
}

function del_3271567834(t_3271567837, key_3271567838) {
    var hc_3271567839 = [0];
    var i_3271567846 = rawGet_3271564555(t_3271567837, key_3271567838, hc_3271567839, 0);
    var mskHEX60gensym36_3271567850 = (t_3271567837.data).length - 1;
    if ((0 <= i_3271567846)) {
    t_3271567837.counter = subInt(t_3271567837.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3271567857 = i_3271567846;
            var rHEX60gensym36_3271567858 = jHEX60gensym36_3271567857;
            t_3271567837.data[chckIndx(i_3271567846, 0, (t_3271567837.data).length - 1)].Field0 = 0;
            t_3271567837.data[chckIndx(i_3271567846, 0, (t_3271567837.data).length - 1)].Field1 = nimCopy(t_3271567837.data[chckIndx(i_3271567846, 0, (t_3271567837.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_3271567837.data[chckIndx(i_3271567846, 0, (t_3271567837.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3271567846 = (addInt(i_3271567846, 1) & mskHEX60gensym36_3271567850);
                  if (isEmpty_1308622877(t_3271567837.data[chckIndx(i_3271567846, 0, (t_3271567837.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3271567858 = (t_3271567837.data[chckIndx(i_3271567846, 0, (t_3271567837.data).length - 1)].Field0 & mskHEX60gensym36_3271567850);
                  if (!(((((rHEX60gensym36_3271567858 <= i_3271567846) && (jHEX60gensym36_3271567857 < rHEX60gensym36_3271567858)) || ((jHEX60gensym36_3271567857 < rHEX60gensym36_3271567858) && (i_3271567846 < jHEX60gensym36_3271567857))) || ((i_3271567846 < jHEX60gensym36_3271567857) && (rHEX60gensym36_3271567858 <= i_3271567846))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3271567837.data[chckIndx(jHEX60gensym36_3271567857, 0, (t_3271567837.data).length - 1)] = nimCopy(t_3271567837.data[chckIndx(jHEX60gensym36_3271567857, 0, (t_3271567837.data).length - 1)], t_3271567837.data[chckIndx(i_3271567846, 0, (t_3271567837.data).length - 1)], NTI3271557254);
          }
      };
    };
    }
    

  
}

function replace_3271568409(node_3271568410, role_3271568411, index_3271568412, child_3271568413) {
              
function HEX3Aanonymous_3271568426(nHEX60gensym176_3271568427) {
                  var n_3271568428 = nHEX60gensym176_3271568427;
                  n_3271568428.model = null;
                  del_3271567834(node_3271568410.model.nodes, n_3271568428.id);

                
              }
              
function HEX3Aanonymous_3271568478(nHEX60gensym178_3271568479) {
                  var n_3271568480 = nHEX60gensym178_3271568479;
                  n_3271568480.model = node_3271568410.model;
                  HEX5BHEX5DHEX3D_3271564494(node_3271568410.model.nodes, n_3271568480.id, n_3271568480);

                
              }

    if (HEX3DHEX3D_2046820626(child_3271568413.id, idNone_2046820633())) {
    child_3271568413.id = nimCopy(child_3271568413.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3271568413.parent = node_3271568410;
    child_3271568413.role = nimCopy(child_3271568413.role, role_3271568411, NTI2046820355);
    Label1: {
      var children_3271568417 = null;
      var i_3254800536 = 0;
      var L_3254800537 = (node_3271568410.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800536 < L_3254800537)) break Label3;
            children_3271568417 = node_3271568410.childLists[chckIndx(i_3254800536, 0, (node_3271568410.childLists).length - 1)];
            Label4: {
              if (HEX3DHEX3D_2046820626(children_3271568417.Field0, role_3271568411)) {
              if (((index_3271568412 < 0) || ((children_3271568417.Field1).length <= index_3271568412))) {
              break Label4;
              }
              
              var oldChild_3271568421 = children_3271568417.Field1[chckIndx(index_3271568412, 0, (children_3271568417.Field1).length - 1)];
              if (!((node_3271568410.model == null))) {
              notifyNodeDeleted_3271557608(node_3271568410.model, node_3271568410, oldChild_3271568421, role_3271568411, index_3271568412);
              }
              
              forEach_3271557910(oldChild_3271568421, HEX3Aanonymous_3271568426);
              if (!((node_3271568410.model == null))) {
              forEach_3271557910(child_3271568413, HEX3Aanonymous_3271568478);
              }
              
              children_3271568417.Field1[chckIndx(index_3271568412, 0, (children_3271568417.Field1).length - 1)] = child_3271568413;
              if (!((node_3271568410.model == null))) {
              notifyNodeInserted_3271557701(node_3271568410.model, node_3271568410, child_3271568413, role_3271568411, index_3271568412);
              }
              
              }
              
            };
            i_3254800536 = addInt(i_3254800536, 1);
            if (!(((node_3271568410.childLists).length == L_3254800537))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function find_3271567593(a_3271567596, item_3271567597) {
  var result_3271567598 = 0;

  BeforeRet: {
    result_3271567598 = 0;
    Label1: {
      var i_3271567602 = null;
      var i_3254800542 = 0;
      var L_3254800543 = (a_3271567596).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800542 < L_3254800543)) break Label3;
            i_3271567602 = a_3271567596[chckIndx(i_3254800542, 0, (a_3271567596).length - 1)];
            if ((i_3271567602 == item_3271567597)) {
            break BeforeRet;
            }
            
            result_3271567598 = addInt(result_3271567598, 1);
            i_3254800542 = addInt(i_3254800542, 1);
            if (!(((a_3271567596).length == L_3254800543))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3271567598 = -1;
  };

  return result_3271567598;

}

function index_3271567587(node_3271567588) {
  var result_3271567589 = 0;

  BeforeRet: {
    if ((node_3271567588.parent == null)) {
    result_3271567589 = -1;
    break BeforeRet;
    }
    
    result_3271567589 = find_3271567593(children_3271566626(node_3271567588.parent, node_3271567588.role), node_3271567588);
    break BeforeRet;
  };

  return result_3271567589;

}

function delete_3271567768(x_3271567770, x_3271567770_Idx, i_3271567771) {
    x_3271567770[x_3271567770_Idx].splice(i_3271567771, 1);

  
}

function remove_3271567752(node_3271567753, child_3271567754) {
            
function HEX3Aanonymous_3271567791(nHEX60gensym170_3271567792) {
                var n_3271567793 = nHEX60gensym170_3271567792;
                n_3271567793.model = null;
                del_3271567834(node_3271567753.model.nodes, n_3271567793.id);

              
            }

  BeforeRet: {
    Label1: {
      var children_3271567758 = null;
      var i_3254800546 = 0;
      var L_3254800547 = (node_3271567753.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800546 < L_3254800547)) break Label3;
            children_3271567758 = node_3271567753.childLists[chckIndx(i_3254800546, 0, (node_3271567753.childLists).length - 1)];
            if (HEX3DHEX3D_2046820626(children_3271567758.Field0, child_3271567754.role)) {
            var i_3271567764 = find_3271567593(children_3271567758.Field1, child_3271567754);
            if (!((i_3271567764 == -1))) {
            if (!((node_3271567753.model == null))) {
            notifyNodeDeleted_3271557608(node_3271567753.model, node_3271567753, child_3271567754, child_3271567754.role, i_3271567764);
            }
            
            delete_3271567768(children_3271567758, "Field1", chckRange(i_3271567764, 0, 2147483647));
            forEach_3271557910(child_3271567754, HEX3Aanonymous_3271567791);
            }
            
            break BeforeRet;
            }
            
            i_3254800546 = addInt(i_3254800546, 1);
            if (!(((node_3271567753.childLists).length == L_3254800547))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function removeFromParent_3271568530(node_3271568531) {
  BeforeRet: {
    if ((node_3271568531.parent == null)) {
    break BeforeRet;
    }
    
    remove_3271567752(node_3271568531.parent, node_3271568531);
  };

  
}

function deleteOrReplaceWithDefault_3271568576(node_3271568577, fillDefaultChildren_3271568578) {
  var result_3271568580 = ({val: null});

  BeforeRet: {
    if ((node_3271568577.parent == null)) {
    result_3271568580 = nimCopy(result_3271568580, none_3271565970(), NTI3271561483);
    break BeforeRet;
    }
    
    var desc_3271568605 = nimCopy(null, get_3271566344(selfDescription_3271567499(node_3271568577)), NTI3271557127);
    if (((ConstSet240[desc_3271568605.count] != undefined) && (childCount_3271566615(node_3271568577.parent, node_3271568577.role) == 1))) {
    var child_3271568610 = newAstNode_3271567013(resolveClass_3271561160(node_3271568577.model, desc_3271568605.class), none_3271567020());
    if (fillDefaultChildren_3271568578) {
    fillDefaultChildren_3271567078(child_3271568610, language_3271567342(node_3271568577));
    }
    
    replace_3271568409(node_3271568577.parent, node_3271568577.role, index_3271567587(node_3271568577), child_3271568610);
    result_3271568580 = nimCopy(result_3271568580, some_3271565957(child_3271568610), NTI3271561483);
    break BeforeRet;
    }
    else {
      removeFromParent_3271568530(node_3271568577);
      result_3271568580 = nimCopy(result_3271568580, none_3271565970(), NTI3271561483);
      break BeforeRet;
    }
    
  };

  return result_3271568580;

}

function clear_3254792472(t_3254792475) {
    Label1: {
      var i_3254792543 = 0;
      var colontmp__3254800560 = 0;
      colontmp__3254800560 = (t_3254792475.data).length;
      var i_3254800561 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800561 < colontmp__3254800560)) break Label3;
            i_3254792543 = i_3254800561;
            t_3254792475.data[chckIndx(i_3254792543, 0, (t_3254792475.data).length - 1)].Field0 = 0;
            t_3254792475.data[chckIndx(i_3254792543, 0, (t_3254792475.data).length - 1)].Field1 = nimCopy(t_3254792475.data[chckIndx(i_3254792543, 0, (t_3254792475.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_3254792475.data[chckIndx(i_3254792543, 0, (t_3254792475.data).length - 1)].Field2 = null;
            i_3254800561 = addInt(i_3254800561, 1);
          }
      };
    };
    t_3254792475.counter = 0;

  
}

function rootNodes_3271557492(selfHEX60gensym11_3271557493) {
  var result_3271557494 = [];

  BeforeRet: {
    result_3271557494 = nimCopy(null, selfHEX60gensym11_3271557493.rootNodes, NTI3271557223);
    break BeforeRet;
  };

  return result_3271557494;

}

function hasKey_3254790533(t_3254790536, key_3254790537) {
  var result_3254790538 = false;

    var hc_3254790539 = [0];
    result_3254790538 = (0 <= rawGet_3254790540(t_3254790536, key_3254790537, hc_3254790539, 0));

  return result_3254790538;

}

function contains_3254790527(t_3254790530, key_3254790531) {
  var result_3254790532 = false;

  BeforeRet: {
    result_3254790532 = hasKey_3254790533(t_3254790530, key_3254790531);
    break BeforeRet;
  };

  return result_3254790532;

}

function mustRehash_3254791146(t_3254791148) {
  var result_3254791149 = false;

    if (!((t_3254791148.counter < (t_3254791148.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3254791149 = ((mulInt((t_3254791148.data).length, 2) < mulInt(t_3254791148.counter, 3)) || (subInt((t_3254791148.data).length, t_3254791148.counter) < 4));

  return result_3254791149;

}

function rawInsert_3254791755(t_3254791759, data_3254791760, data_3254791760_Idx, key_3254791761, val_3254791762, hc_3254791763, h_3254791764) {
    data_3254791760[data_3254791760_Idx][chckIndx(h_3254791764, 0, (data_3254791760[data_3254791760_Idx]).length - 1)].Field1 = nimCopy(data_3254791760[data_3254791760_Idx][chckIndx(h_3254791764, 0, (data_3254791760[data_3254791760_Idx]).length - 1)].Field1, key_3254791761, NTI2046820355);
    data_3254791760[data_3254791760_Idx][chckIndx(h_3254791764, 0, (data_3254791760[data_3254791760_Idx]).length - 1)].Field2 = val_3254791762;
    data_3254791760[data_3254791760_Idx][chckIndx(h_3254791764, 0, (data_3254791760[data_3254791760_Idx]).length - 1)].Field0 = hc_3254791763;

  
}

function enlarge_3254791349(t_3254791352) {
    var n_3254791355 = [];
    n_3254791355 = new Array(chckRange(mulInt((t_3254791352.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3254791352.data).length, 2), 0, 2147483647) ; ++i) { n_3254791355[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3254791352.data; t_3254791352.data = n_3254791355; n_3254791355 = Temporary1;    Label2: {
      var i_3254791435 = 0;
      var colontmp__3254800570 = 0;
      colontmp__3254800570 = (n_3254791355).length - 1;
      var res_3254800571 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_3254800571 <= colontmp__3254800570)) break Label4;
            i_3254791435 = res_3254800571;
            var eh_3254791513 = n_3254791355[chckIndx(i_3254791435, 0, (n_3254791355).length - 1)].Field0;
            if (isFilled_1308622880(eh_3254791513)) {
            var j_3254791517 = (eh_3254791513 & (t_3254791352.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3254791352.data[chckIndx(j_3254791517, 0, (t_3254791352.data).length - 1)].Field0)) break Label6;
                  j_3254791517 = nextTry_1308622883(j_3254791517, (t_3254791352.data).length - 1);
                }
            };
            rawInsert_3254791755(t_3254791352, t_3254791352, "data", n_3254791355[chckIndx(i_3254791435, 0, (n_3254791355).length - 1)].Field1, n_3254791355[chckIndx(i_3254791435, 0, (n_3254791355).length - 1)].Field2, eh_3254791513, j_3254791517);
            }
            
            res_3254800571 = addInt(res_3254800571, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3254791996(t_3254791999, key_3254792000, hc_3254792001) {
  var result_3254792002 = 0;

  BeforeRet: {
    if (((t_3254791999.data).length == 0)) {
    result_3254792002 = -1;
    break BeforeRet;
    }
    
    var h_3254792069 = (hc_3254792001 & (t_3254791999.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254791999.data[chckIndx(h_3254792069, 0, (t_3254791999.data).length - 1)].Field0)) break Label2;
          if (((t_3254791999.data[chckIndx(h_3254792069, 0, (t_3254791999.data).length - 1)].Field0 == hc_3254792001) && HEX3DHEX3D_2046820626(t_3254791999.data[chckIndx(h_3254792069, 0, (t_3254791999.data).length - 1)].Field1, key_3254792000))) {
          result_3254792002 = h_3254792069;
          break BeforeRet;
          }
          
          h_3254792069 = nextTry_1308622883(h_3254792069, (t_3254791999.data).length - 1);
        }
    };
    result_3254792002 = subInt(-1, h_3254792069);
  };

  return result_3254792002;

}

function HEX5BHEX5DHEX3D_3254790917(t_3254790920, key_3254790921, val_3254790922) {
    if (((t_3254790920.data).length == 0)) {
    var correctSizeHEX60gensym164_3254790987 = slotsNeeded_1308622891(32);
    t_3254790920.counter = 0;
    t_3254790920.data = new Array(chckRange(correctSizeHEX60gensym164_3254790987, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym164_3254790987, 0, 2147483647) ; ++i) { t_3254790920.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3254790992 = [0];
    var index_3254790999 = rawGet_3254790540(t_3254790920, key_3254790921, hc_3254790992, 0);
    if ((0 <= index_3254790999)) {
    t_3254790920.data[chckIndx(index_3254790999, 0, (t_3254790920.data).length - 1)].Field2 = val_3254790922;
    }
    else {
      if (((t_3254790920.data).length == 0)) {
      var correctSizeHEX60gensym167_3254791141 = slotsNeeded_1308622891(32);
      t_3254790920.counter = 0;
      t_3254790920.data = new Array(chckRange(correctSizeHEX60gensym167_3254791141, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym167_3254791141, 0, 2147483647) ; ++i) { t_3254790920.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3254791146(t_3254790920)) {
      enlarge_3254791349(t_3254790920);
      index_3254790999 = rawGetKnownHC_3254791996(t_3254790920, key_3254790921, hc_3254790992[0]);
      }
      
      index_3254790999 = subInt(-1, index_3254790999);
      rawInsert_3254791755(t_3254790920, t_3254790920, "data", key_3254790921, val_3254790922, hc_3254790992[0], index_3254790999);
      t_3254790920.counter = addInt(t_3254790920.counter, 1);
    }
    

  
}

function buildNodeCellMap_3254790461(self_3254790462, map_3254790465) {
    if ((!((self_3254790462.node == null)) && !(contains_3254790527(map_3254790465, self_3254790462.node.id)))) {
    HEX5BHEX5DHEX3D_3254790917(map_3254790465, self_3254790462.node.id, self_3254790462);
    }
    
    if (isObj(self_3254790462.m_type, NTI3338665993)) {
    Label1: {
      var c_3254792331 = null;
      var colontmp__3254800564 = [];
      colontmp__3254800564 = self_3254790462.children;
      var i_3254800565 = 0;
      var L_3254800566 = (colontmp__3254800564).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800565 < L_3254800566)) break Label3;
            c_3254792331 = colontmp__3254800564[chckIndx(i_3254800565, 0, (colontmp__3254800564).length - 1)];
            buildNodeCellMap_3254790461(c_3254792331, map_3254790465);
            i_3254800565 = addInt(i_3254800565, 1);
            if (!(((colontmp__3254800564).length == L_3254800566))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function assignToLogicalLines_3254792332(self_3254792333, cell_3254792334, startLine_3254792335, currentLineEmpty_3254792336, currentLineEmpty_3254792336_Idx) {
              var Temporary4;

  var result_3254792339 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if ((!((cell_3254792334.isVisible == null)) && !(cell_3254792334.isVisible(cell_3254792334.node)))) {
    var colontmp__3254800574 = startLine_3254792335;
    var colontmp__3254800575 = startLine_3254792335;
    result_3254792339 = nimCopy(result_3254792339, {Field0: colontmp__3254800574, Field1: colontmp__3254800575}, NTI3254786315);
    break BeforeRet;
    }
    
    cell_3254792334.line = startLine_3254792335;
    if (isObj(cell_3254792334.m_type, NTI3338665993)) {
    var coll_3254792349 = cell_3254792334;
    var vertical_3254792355 = (coll_3254792349.layout.kind == 2);
    var currentLine_3254792356 = startLine_3254792335;
    var maxLine_3254792357 = startLine_3254792335;
    var currentLineEmptyTemp_3254792358 = [currentLineEmpty_3254792336[currentLineEmpty_3254792336_Idx]];
    if (coll_3254792349.inline) {
    currentLineEmptyTemp_3254792358[0] = true;
    }
    
    Label1: {
      var i_3254792364 = 0;
      var c_3254792365 = null;
      var i_3254800577 = 0;
      var L_3254800578 = (coll_3254792349.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800577 < L_3254800578)) break Label3;
            i_3254792364 = i_3254800577;
            c_3254792365 = coll_3254792349.children[chckIndx(i_3254800577, 0, (coll_3254792349.children).length - 1)];
            if ((vertical_3254792355 && ((0 < i_3254792364) || !(currentLineEmptyTemp_3254792358[0])))) {
            currentLineEmptyTemp_3254792358[0] = true;
            currentLine_3254792356 = maxLine_3254792357;
            currentLine_3254792356 = addInt(currentLine_3254792356, 1);
            maxLine_3254792357 = nimMax(maxLine_3254792357, currentLine_3254792356);
            }
            
            if (!((c_3254792365.style == null))) {
            if ((c_3254792365.style.onNewLine && !(currentLineEmptyTemp_3254792358[0]))) {
            currentLineEmptyTemp_3254792358[0] = true;
            currentLine_3254792356 = maxLine_3254792357;
            currentLine_3254792356 = addInt(currentLine_3254792356, 1);
            maxLine_3254792357 = nimMax(maxLine_3254792357, currentLine_3254792356);
            }
            
            }
            
            var colontmp__3254800585 = assignToLogicalLines_3254792332(self_3254792333, c_3254792365, currentLine_3254792356, currentLineEmptyTemp_3254792358, 0);
            var newCurrentLine_3254792379 = colontmp__3254800585["Field0"];
            var newMaxLine_3254792380 = colontmp__3254800585["Field1"];
            maxLine_3254792357 = nimMax(maxLine_3254792357, newMaxLine_3254792380);
              if (!isObj(c_3254792365.m_type, NTI3338665993)) Temporary4 = false; else {                Temporary4 = c_3254792365.inline;              }            if (!(Temporary4)) {
            currentLine_3254792356 = newCurrentLine_3254792379;
            }
            
            maxLine_3254792357 = nimMax(maxLine_3254792357, currentLine_3254792356);
            if (!((c_3254792365.style == null))) {
            if (c_3254792365.style.addNewlineAfter) {
            currentLine_3254792356 = maxLine_3254792357;
            currentLineEmptyTemp_3254792358[0] = true;
            currentLine_3254792356 = addInt(currentLine_3254792356, 1);
            maxLine_3254792357 = nimMax(maxLine_3254792357, currentLine_3254792356);
            }
            
            }
            
            i_3254800577 = addInt(i_3254800577, 1);
            if (!(((coll_3254792349.children).length == L_3254800578))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!(coll_3254792349.inline)) {
    currentLineEmpty_3254792336[currentLineEmpty_3254792336_Idx] = currentLineEmptyTemp_3254792358[0];
    }
    
    var colontmp__3254800580 = currentLine_3254792356;
    var colontmp__3254800581 = maxLine_3254792357;
    result_3254792339 = nimCopy(result_3254792339, {Field0: colontmp__3254800580, Field1: colontmp__3254800581}, NTI3254786315);
    break BeforeRet;
    }
    else {
      Label5: {
          Label6: while (true) {
          if (!((self_3254792333.logicalLines).length <= startLine_3254792335)) break Label6;
            self_3254792333.logicalLines.push([]);;
          }
      };
      self_3254792333.logicalLines[chckIndx(startLine_3254792335, 0, (self_3254792333.logicalLines).length - 1)].push(cell_3254792334);;
      currentLineEmpty_3254792336[currentLineEmpty_3254792336_Idx] = false;
      var colontmp__3254800583 = startLine_3254792335;
      var colontmp__3254800584 = startLine_3254792335;
      result_3254792339 = nimCopy(result_3254792339, {Field0: colontmp__3254800583, Field1: colontmp__3254800584}, NTI3254786315);
      break BeforeRet;
    }
    
  };

  return result_3254792339;

}

function rebuildCells_3254780235(self_3254780236) {
    var builder_3254792415 = self_3254780236.document.builder;
    clear_3254792472(self_3254780236.nodeToCell);
    if (self_3254780236.logicalLines.length < 0) { for (var i = self_3254780236.logicalLines.length ; i < 0 ; ++i) self_3254780236.logicalLines.push([]); }
               else { self_3254780236.logicalLines.length = 0; };
    Label1: {
      var node_3254793022 = null;
      var colontmp__3254800555 = [];
      colontmp__3254800555 = rootNodes_3271557492(self_3254780236.document.model);
      var i_3254800556 = 0;
      var L_3254800557 = (colontmp__3254800555).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800556 < L_3254800557)) break Label3;
            node_3254793022 = colontmp__3254800555[chckIndx(i_3254800556, 0, (colontmp__3254800555).length - 1)];
            var cell_3254793023 = buildCell_3338667247(builder_3254792415, node_3254793022, self_3254780236.useDefaultCellBuilder);
            buildNodeCellMap_3254790461(cell_3254793023, self_3254780236.nodeToCell);
            var temp_3254793024 = [true];
            var _ = assignToLogicalLines_3254792332(self_3254780236, cell_3254793023, 0, temp_3254793024, 0);
            i_3254800556 = addInt(i_3254800556, 1);
            if (!(((colontmp__3254800555).length == L_3254800557))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getOrDefault_3254796101(t_3254796104, key_3254796105) {
  var result_3254796106 = null;

    var hcHEX60gensym271_3254796109 = [0];
    var indexHEX60gensym271_3254796116 = rawGet_3254790540(t_3254796104, key_3254796105, hcHEX60gensym271_3254796109, 0);
    if ((0 <= indexHEX60gensym271_3254796116)) {
    result_3254796106 = t_3254796104.data[chckIndx(indexHEX60gensym271_3254796116, 0, (t_3254796104.data).length - 1)].Field2;
    }
    

  return result_3254796106;

}

function isLeaf_3338666313(self_3338666314) {
      var Temporary1;

  var result_3338666315 = false;

  BeforeRet: {
      if (!isObj(self_3338666314.m_type, NTI3338665993)) Temporary1 = false; else {        Temporary1 = (0 < (self_3338666314.children).length);      }    if (Temporary1) {
    result_3338666315 = false;
    break BeforeRet;
    }
    
    result_3338666315 = true;
    break BeforeRet;
  };

  return result_3338666315;

}

function getNeighborLeafWhere_3254795692(cell_3254795693, direction_3254795694, predicate_3254795698) {
          var Temporary3;
          var Temporary4;
            var Temporary5;
          var Temporary6;

  var result_3254795700 = ({val: null});

  BeforeRet: {
    var temp_3254795701 = cell_3254795693;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((direction_3254795694 == 0)) {
          Temporary3 = getPreviousLeaf_3254795337(temp_3254795701, none_3003121842());
          }
          else {
          Temporary3 = getNextLeaf_3254795440(temp_3254795701, none_3003121842());
          }
          
          var c_3254795707 = [nimCopy(null, Temporary3, NTI3271564556)];
          if (isNone_3338666896(c_3254795707[0])) {
          result_3254795700 = nimCopy(result_3254795700, none_3271570956(), NTI3271564556);
          break BeforeRet;
          }
          
          var colontmp__3254800592 = predicate_3254795698((Temporary4 = get_3254795554(c_3254795707[0]), Temporary4)[0][Temporary4[1]]);
          var done_3254795736 = colontmp__3254800592["Field0"];
          var res_3254795737 = nimCopy(null, colontmp__3254800592["Field1"], NTI3271564556);
          if (done_3254795736) {
          result_3254795700 = nimCopy(result_3254795700, res_3254795737, NTI3271564556);
          break BeforeRet;
          }
          
          if (((Temporary5 = get_3254795554(c_3254795707[0]), Temporary5)[0][Temporary5[1]] == temp_3254795701)) {
          result_3254795700 = nimCopy(result_3254795700, none_3271570956(), NTI3271564556);
          break BeforeRet;
          }
          
          temp_3254795701 = (Temporary6 = get_3254795554(c_3254795707[0]), Temporary6)[0][Temporary6[1]];
        }
    };
  };

  return result_3254795700;

}

function getSelfOrNeighborLeafWhere_3254795815(cell_3254795816, direction_3254795817, predicate_3254795821) {
  var result_3254795823 = ({val: null});

  BeforeRet: {
    if (isLeaf_3338666313(cell_3254795816)) {
    var colontmp__3254800590 = predicate_3254795821(cell_3254795816);
    var stop_3254795824 = colontmp__3254800590["Field0"];
    var res_3254795825 = nimCopy(null, colontmp__3254800590["Field1"], NTI3271564556);
    if (stop_3254795824) {
    result_3254795823 = nimCopy(result_3254795823, res_3254795825, NTI3271564556);
    break BeforeRet;
    }
    
    }
    
    result_3254795823 = nimCopy(result_3254795823, getNeighborLeafWhere_3254795692(cell_3254795816, direction_3254795817, predicate_3254795821), NTI3271564556);
    break BeforeRet;
  };

  return result_3254795823;

}

function isDescendant_3271567318(node_3271567319, ancestor_3271567320) {
  var result_3271567321 = false;

  BeforeRet: {
    result_3271567321 = false;
    var temp_3271567322 = node_3271567319;
    Label1: {
        Label2: while (true) {
        if (!!((temp_3271567322 == null))) break Label2;
          if ((temp_3271567322.parent == ancestor_3271567320)) {
          result_3271567321 = true;
          break BeforeRet;
          }
          
          temp_3271567322 = temp_3271567322.parent;
        }
    };
  };

  return result_3271567321;

}

function getSelfOrNextLeafWhere_3254795805(cell_3254795806, predicate_3254795809) {
  var result_3254795811 = ({val: null});

  BeforeRet: {
    if ((isLeaf_3338666313(cell_3254795806) && predicate_3254795809(cell_3254795806))) {
    result_3254795811 = nimCopy(result_3254795811, some_3338666283(cell_3254795806), NTI3271564556);
    break BeforeRet;
    }
    
    result_3254795811 = nimCopy(result_3254795811, getNextLeafWhere_3254795615(cell_3254795806, predicate_3254795809), NTI3271564556);
    break BeforeRet;
  };

  return result_3254795811;

}

function getFirstEditableCellOfNode_3254780267(self_3254780268, node_3254780269) {
      var Temporary1;
      
function editableDescendant_3254796349(n_3254796350) {
        var result_3254796352 = {Field0: false, Field1: ({val: null})};

        BeforeRet: {
          if (((n_3254796350.node == nodeCell_3254796345.node) || isDescendant_3271567318(n_3254796350.node, nodeCell_3254796345.node))) {
          var colontmp__3254800586 = (isVisible_3254780273(n_3254796350) && !(n_3254796350.disableEditing));
          var colontmp__3254800587 = some_3338666283(n_3254796350);
          result_3254796352 = nimCopy(result_3254796352, {Field0: colontmp__3254800586, Field1: nimCopy(null, colontmp__3254800587, NTI3271564556)}, NTI3254788810);
          break BeforeRet;
          }
          else {
            var colontmp__3254800588 = true;
            var colontmp__3254800589 = none_3271570956();
            result_3254796352 = nimCopy(result_3254796352, {Field0: colontmp__3254800588, Field1: nimCopy(null, colontmp__3254800589, NTI3271564556)}, NTI3254788810);
            break BeforeRet;
          }
          
        };

        return result_3254796352;

      }
      var Temporary2;
      
function HEX3Aanonymous_3254796395(n_3254796398) {
        var result_3254796401 = false;

          result_3254796401 = (isVisible_3254780273(n_3254796398) && !(n_3254796398.disableSelection));

        return result_3254796401;

      }

  var result_3254796266 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
    result_3254796266 = nimCopy(result_3254796266, none_3254794843(), NTI3254780132);
    var nodeCell_3254796345 = getOrDefault_3254796101(self_3254780268.nodeToCell, node_3254780269.id);
    if ((nodeCell_3254796345 == null)) {
    break BeforeRet;
    }
    
    nodeCell_3254796345 = getFirstLeaf_3254795310(nodeCell_3254796345);
      var oHEX60gensym276_3254796368 = getSelfOrNeighborLeafWhere_3254795815(nodeCell_3254796345, 1, editableDescendant_3254796349);
      if (!isSome_3338666868(oHEX60gensym276_3254796368)) Temporary1 = false; else {        var targetCell_3254796391 = get_3338666888(oHEX60gensym276_3254796368);
        Temporary1 = true;      }    if (Temporary1) {
    result_3254796266 = nimCopy(result_3254796266, some_3254794959(toCursor_3254780264(targetCell_3254796391, true)), NTI3254780132);
    break BeforeRet;
    }
    
      var oHEX60gensym277_3254796404 = getSelfOrNextLeafWhere_3254795805(nodeCell_3254796345, HEX3Aanonymous_3254796395);
      if (!isSome_3338666868(oHEX60gensym277_3254796404)) Temporary2 = false; else {        var targetCell_3254796427 = get_3338666888(oHEX60gensym277_3254796404);
        Temporary2 = true;      }    if (Temporary2) {
    result_3254796266 = nimCopy(result_3254796266, some_3254794959(toCursor_3254780264(targetCell_3254796427, true)), NTI3254780132);
    break BeforeRet;
    }
    
  };

  return result_3254796266;

}

function orderedRange_3254780012(cursor_3254780013) {
  var result_3254780015 = ({a: 0, b: 0});

  BeforeRet: {
    result_3254780015 = nimCopy(result_3254780015, HEX2EHEX2E_805306418(nimMin(cursor_3254780013.firstIndex, cursor_3254780013.lastIndex), nimMax(cursor_3254780013.firstIndex, cursor_3254780013.lastIndex)), NTI805306392);
    break BeforeRet;
  };

  return result_3254780015;

}

function getNeighborLeafWhere_3254795787(cell_3254795788, direction_3254795789, predicate_3254795792) {
  var result_3254795794 = ({val: null});

  BeforeRet: {
    switch (direction_3254795789) {
    case 0:
      result_3254795794 = nimCopy(result_3254795794, getPreviousLeafWhere_3254795520(cell_3254795788, isVisible_3254780273), NTI3271564556);
      break BeforeRet;
      break;
    case 1:
      result_3254795794 = nimCopy(result_3254795794, getNextLeafWhere_3254795615(cell_3254795788, isVisible_3254780273), NTI3271564556);
      break BeforeRet;
      break;
    }
  };

  return result_3254795794;

}

function getNeighborSelectableLeaf_3254795845(cell_3254795846, direction_3254795847) {
  var result_3254795849 = ({val: null});

  BeforeRet: {
    result_3254795849 = nimCopy(result_3254795849, getNeighborLeafWhere_3254795787(cell_3254795846, direction_3254795847, canSelect_3254780271), NTI3271564556);
    break BeforeRet;
  };

  return result_3254795849;

}

function HEX2D_3254779966(d_3254779967) {
  var result_3254779968 = 0;

  BeforeRet: {
    switch (d_3254779967) {
    case 0:
      result_3254779968 = 1;
      break BeforeRet;
      break;
    case 1:
      result_3254779968 = 0;
      break BeforeRet;
      break;
    }
  };

  return result_3254779968;

}

function handleDelete_3254797187(cell_3254797188, slice_3254797190, direction_3254797191) {
  var result_3254797193 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
    switch (direction_3254797191) {
    case 0:
      result_3254797193 = nimCopy(result_3254797193, handleDeleteLeft_3254797177(cell_3254797188, slice_3254797190), NTI3254780132);
      break BeforeRet;
      break;
    case 1:
      result_3254797193 = nimCopy(result_3254797193, handleDeleteRight_3254797185(cell_3254797188, slice_3254797190), NTI3254780132);
      break BeforeRet;
      break;
    }
  };

  return result_3254797193;

}

function replaceWithDefault_3271568542(node_3271568543, fillDefaultChildren_3271568544) {
  var result_3271568546 = ({val: null});

  BeforeRet: {
    if ((node_3271568543.parent == null)) {
    result_3271568546 = nimCopy(result_3271568546, none_3271565970(), NTI3271561483);
    break BeforeRet;
    }
    
    var desc_3271568571 = nimCopy(null, get_3271566344(selfDescription_3271567499(node_3271568543)), NTI3271557127);
    var child_3271568572 = newAstNode_3271567013(resolveClass_3271561160(node_3271568543.model, desc_3271568571.class), none_3271567020());
    if (fillDefaultChildren_3271568544) {
    fillDefaultChildren_3271567078(child_3271568572, language_3271567342(node_3271568543));
    }
    
    replace_3271568409(node_3271568543.parent, node_3271568543.role, index_3271567587(node_3271568543), child_3271568572);
    result_3271568546 = nimCopy(result_3271568546, some_3271565957(child_3271568572), NTI3271561483);
    break BeforeRet;
  };

  return result_3271568546;

}

function isRequiredAndDefault_3271567612(node_3271567613) {
  var result_3271567614 = false;

  BeforeRet: {
    if ((node_3271567613.parent == null)) {
    result_3271567614 = false;
    break BeforeRet;
    }
    
    var desc_3271567633 = nimCopy(null, get_3271566344(selfDescription_3271567499(node_3271567613)), NTI3271557127);
    if ((((ConstSet242[desc_3271567633.count] != undefined) && (childCount_3271566615(node_3271567613.parent, node_3271567613.role) == 1)) && HEX3DHEX3D_2046820626(node_3271567613.class, desc_3271567633.class))) {
    result_3271567614 = true;
    break BeforeRet;
    }
    
    result_3271567614 = false;
    break BeforeRet;
  };

  return result_3271567614;

}

function updateCursor_3254796030(self_3254796031, cursor_3254796032) {
              var Temporary4;
              var Temporary5;

  var result_3254796034 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
    var nodeCell_3254796194 = getOrDefault_3254796101(self_3254796031.nodeToCell, cursor_3254796032.node.id);
    if ((nodeCell_3254796194 == null)) {
    result_3254796034 = nimCopy(result_3254796034, none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    var res_3254796205 = nimCopy(null, cursor_3254796032, NTI3254779907);
    res_3254796205.cell = nodeCell_3254796194;
    var len_3254796206 = 0;
    var cell_3254796207 = nodeCell_3254796194;
    Label1: {
      var k_3254796231 = 0;
      var i_3254796232 = 0;
      var i_3254800596 = 0;
      var L_3254800597 = (cursor_3254796032.path).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800596 < L_3254800597)) break Label3;
            k_3254796231 = i_3254800596;
            i_3254796232 = cursor_3254796032.path[chckIndx(i_3254800596, 0, (cursor_3254796032.path).length - 1)];
              if (!(isObj(cell_3254796207.m_type, NTI3338665993))) Temporary4 = true; else {                Temporary4 = ((cell_3254796207.children).length == 0);              }            if (Temporary4) {
            break Label1;
            }
            
              if ((i_3254796232 < 0)) Temporary5 = true; else {                Temporary5 = ((cell_3254796207.children).length - 1 < i_3254796232);              }            if (Temporary5) {
            break Label1;
            }
            
            len_3254796206 = addInt(k_3254796231, 1);
            cell_3254796207 = cell_3254796207.children[chckIndx(i_3254796232, 0, (cell_3254796207.children).length - 1)];
            i_3254800596 = addInt(i_3254800596, 1);
            if (!(((cursor_3254796032.path).length == L_3254800597))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (res_3254796205.path.length < chckRange(len_3254796206, 0, 2147483647)) { for (var i = res_3254796205.path.length ; i < chckRange(len_3254796206, 0, 2147483647) ; ++i) res_3254796205.path.push(0); }
               else { res_3254796205.path.length = chckRange(len_3254796206, 0, 2147483647); };
    res_3254796205.firstIndex = clamp_1660945119(res_3254796205.firstIndex, 0, editableHigh_3338666256(cell_3254796207, true));
    res_3254796205.lastIndex = clamp_1660945119(res_3254796205.lastIndex, 0, editableHigh_3338666256(cell_3254796207, true));
    result_3254796034 = nimCopy(result_3254796034, some_3254794959(res_3254796205), NTI3254780132);
    break BeforeRet;
  };

  return result_3254796034;

}

function toCursor_3254795986(cell_3254795987) {
  var result_3254795988 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    var colontmp__3254800599 = nodeRootCellPath_3254795918(cell_3254795987);
    var rootCell_3254795989 = colontmp__3254800599["Field0"];
    var path_3254795990 = nimCopy(null, colontmp__3254800599["Field1"], NTI3254788575);
    result_3254795988.node = cell_3254795987.node;
    result_3254795988.cell = rootCell_3254795989;
    result_3254795988.path = nimCopy(null, path_3254795990, NTI3254788575);
    result_3254795988.firstIndex = 0;
    result_3254795988.lastIndex = editableHigh_3338666256(cell_3254795987, true);

  return result_3254795988;

}

function isSome_3254800103(self_3254800105) {
  var result_3254800106 = false;

    result_3254800106 = self_3254800105.has;

  return result_3254800106;

}

function flatten_3254800091(self_3254800097) {
    var Temporary1;

  var result_3254800098 = ({val: null});

    if (isSome_3254800103(self_3254800097)) {
    Temporary1 = self_3254800097.val;
    }
    else {
    Temporary1 = none_3271570956();
    }
    
    result_3254800098 = nimCopy(result_3254800098, Temporary1, NTI3271564556);

  return result_3254800098;

}

function some_3254800061(val_3254800063) {
  var result_3254800064 = ({val: ({val: null}), has: false});

    result_3254800064.has = true;
    result_3254800064.val = nimCopy(result_3254800064.val, val_3254800063, NTI3271564556);

  return result_3254800064;

}

function none_3254800066() {
  var result_3254800073 = ({val: ({val: null}), has: false});

  return result_3254800073;

}

function map_3254800043(self_3254800046, callback_3254800048) {
    var Temporary1;

  var result_3254800053 = ({val: ({val: null}), has: false});

    if (isSome_3254793888(self_3254800046)) {
    Temporary1 = some_3254800061(callback_3254800048(self_3254800046.val));
    }
    else {
    Temporary1 = none_3254800066();
    }
    
    result_3254800053 = nimCopy(result_3254800053, Temporary1, NTI3254791544);

  return result_3254800053;

}

function flatMap_3254800024(self_3254800027, callback_3254800029) {
  var result_3254800030 = ({val: null});

    result_3254800030 = nimCopy(result_3254800030, flatten_3254800091(map_3254800043(self_3254800027, callback_3254800029)), NTI3271564556);

  return result_3254800030;

}

function getSelfOrNeighborLeafWhere_3254795826(cell_3254795827, direction_3254795828, predicate_3254795831) {
  var result_3254795833 = ({val: null});

  BeforeRet: {
    if ((isLeaf_3338666313(cell_3254795827) && predicate_3254795831(cell_3254795827))) {
    result_3254795833 = nimCopy(result_3254795833, some_3338666283(cell_3254795827), NTI3271564556);
    break BeforeRet;
    }
    
    result_3254795833 = nimCopy(result_3254795833, getNeighborLeafWhere_3254795787(cell_3254795827, direction_3254795828, predicate_3254795831), NTI3271564556);
    break BeforeRet;
  };

  return result_3254795833;

}

function toCursorBackwards_3254795991(cell_3254795992) {
  var result_3254795993 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    var colontmp__3254800600 = nodeRootCellPath_3254795918(cell_3254795992);
    var rootCell_3254795994 = colontmp__3254800600["Field0"];
    var path_3254795995 = nimCopy(null, colontmp__3254800600["Field1"], NTI3254788575);
    result_3254795993.node = cell_3254795992.node;
    result_3254795993.cell = rootCell_3254795994;
    result_3254795993.path = nimCopy(null, path_3254795995, NTI3254788575);
    result_3254795993.lastIndex = 0;
    result_3254795993.firstIndex = editableHigh_3338666256(cell_3254795992, true);

  return result_3254795993;

}

function delete_3254799590(self_3254799591, direction_3254799592) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
          var Temporary5;
      var Temporary6;
                var Temporary11;
                  var Temporary12;
                  var Temporary13;
                  var Temporary14;
                  
function HEX3Aanonymous_3254799897(cell_3254799898) {
                    var result_3254799900 = {Field0: false, Field1: ({val: null})};

                    BeforeRet: {
                      if (((!((cell_3254799898.node == c_3254799762.node)) && !((cell_3254799898.node == parent_3254799855))) && !(isDescendant_3271567318(cell_3254799898.node, parent_3254799855)))) {
                      var colontmp__3254800489 = true;
                      var colontmp__3254800490 = none_3271570956();
                      result_3254799900 = nimCopy(result_3254799900, {Field0: colontmp__3254800489, Field1: nimCopy(null, colontmp__3254800490, NTI3271564556)}, NTI3254791398);
                      break BeforeRet;
                      }
                      
                      if ((!(isVisible_3254780273(cell_3254799898)) || !(canSelect_3254780271(cell_3254799898)))) {
                      var colontmp__3254800491 = false;
                      var colontmp__3254800492 = none_3271570956();
                      result_3254799900 = nimCopy(result_3254799900, {Field0: colontmp__3254800491, Field1: nimCopy(null, colontmp__3254800492, NTI3271564556)}, NTI3254791398);
                      break BeforeRet;
                      }
                      
                      if ((((cell_3254799898 == c_3254799762) || (cell_3254799898.node == c_3254799762.node)) || (cell_3254799898.node == parent_3254799855))) {
                      var colontmp__3254800493 = false;
                      var colontmp__3254800494 = none_3271570956();
                      result_3254799900 = nimCopy(result_3254799900, {Field0: colontmp__3254800493, Field1: nimCopy(null, colontmp__3254800494, NTI3271564556)}, NTI3254791398);
                      break BeforeRet;
                      }
                      
                      var colontmp__3254800495 = true;
                      var colontmp__3254800496 = some_3338666283(cell_3254799898);
                      result_3254799900 = nimCopy(result_3254799900, {Field0: colontmp__3254800495, Field1: nimCopy(null, colontmp__3254800496, NTI3271564556)}, NTI3254791398);
                      break BeforeRet;
                    };

                    return result_3254799900;

                  }
                    var Temporary15;
                    var Temporary16;
                    var Temporary17;
                    
function HEX3Aanonymous_3254800015(c_3254800016) {
                      var result_3254800018 = ({val: null});

                        result_3254800018 = nimCopy(result_3254800018, getTargetCell_3254780237(c_3254800016, true), NTI3271564556);

                      return result_3254800018;

                    }
                    var Temporary18;
                      var Temporary19;
                    var Temporary20;
                    
function HEX3Aanonymous_3254800170(c_3254800177) {
                      var result_3254800180 = false;

                        result_3254800180 = isVisible_3254780273(c_3254800177);

                      return result_3254800180;

                    }
                var Temporary21;
                  var Temporary22;
                  var Temporary23;
                    var Temporary24;
                    var Temporary25;
                      var Temporary26;
                  var Temporary27;

    var cell_3254799593 = targetCell_3254780021(cursor_3254784719(self_3254799591));
    if (isObj(cell_3254799593.m_type, NTI3338665993)) {
    var parent_3254799600 = cell_3254799593.node.parent;
      var oHEX60gensym503_3254799603 = deleteOrReplaceWithDefault_3271568576(cell_3254799593.node, false);
      if (!isSome_3338667398(oHEX60gensym503_3254799603)) Temporary1 = false; else {        var newNode_3254799626 = get_3338667418(oHEX60gensym503_3254799603);
        Temporary1 = true;      }    if (Temporary1) {
    rebuildCells_3254780235(self_3254799591);
    cursorHEX3D_3254784731(self_3254799591, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254799591, newNode_3254799626)));
    }
    else {
      rebuildCells_3254780235(self_3254799591);
        var oHEX60gensym504_3254799644 = getFirstEditableCellOfNode_3254780267(self_3254799591, parent_3254799600);
        if (!isSome_3254793888(oHEX60gensym504_3254799644)) Temporary2 = false; else {          var c_3254799667 = nimCopy(null, get_3254786205(oHEX60gensym504_3254799644), NTI3254779907);
          Temporary2 = true;        }      if (Temporary2) {
      cursorHEX3D_3254784731(self_3254799591, c_3254799667);
      }
      
    }
    
    }
    else {
      if ((direction_3254799592 == 0)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = (currentText_3338666034(cell_3254799593)).length;
      }
      
      var endIndex_3254799672 = Temporary3;
      var potentialCells_3254799678 = [nimCopy(null, {Field0: cell_3254799593, Field1: orderedRange_3254780012(cursor_3254784719(self_3254799591)), Field2: direction_3254799592}, NTI3254791228)];
        if (!((cursor_3254784719(self_3254799591).lastIndex == endIndex_3254799672) && (cursor_3254784719(self_3254799591).firstIndex == cursor_3254784719(self_3254799591).lastIndex))) Temporary4 = false; else {          var oHEX60gensym505_3254799681 = getNeighborSelectableLeaf_3254795845(cell_3254799593, direction_3254799592);
          if (!isSome_3338666868(oHEX60gensym505_3254799681)) Temporary5 = false; else {            var prev_3254799704 = get_3338666888(oHEX60gensym505_3254799681);
            Temporary5 = true;          }          Temporary4 = Temporary5;        }      if (Temporary4) {
      if ((direction_3254799592 == 0)) {
      Temporary6 = editableHigh_3338666256(prev_3254799704, true);
      }
      else {
      Temporary6 = editableLow_3338666237(prev_3254799704, true);
      }
      
      var index_3254799709 = Temporary6;
      potentialCells_3254799678.push({Field0: prev_3254799704, Field1: HEX2EHEX2E_805306418(index_3254799709, index_3254799709), Field2: HEX2D_3254779966(direction_3254799592)});;
      }
      
      Label7: {
        var i_3254799761 = 0;
        var c_3254799762 = null;
        var slice_3254799763 = ({a: 0, b: 0});
        var cursorMoveDirection_3254799764 = 0;
        var i_3254800498 = 0;
        var L_3254800499 = (potentialCells_3254799678).length;
        Label8: {
            Label9: while (true) {
            if (!(i_3254800498 < L_3254800499)) break Label9;
              i_3254799761 = i_3254800498;
              c_3254799762 = potentialCells_3254799678[chckIndx(i_3254800498, 0, (potentialCells_3254799678).length - 1)]["Field0"];
              slice_3254799763 = nimCopy(slice_3254799763, potentialCells_3254799678[chckIndx(i_3254800498, 0, (potentialCells_3254799678).length - 1)]["Field1"], NTI805306392);
              cursorMoveDirection_3254799764 = potentialCells_3254799678[chckIndx(i_3254800498, 0, (potentialCells_3254799678).length - 1)]["Field2"];
              Label10: {
                var node_3254799765 = c_3254799762.node;
                var parent_3254799766 = node_3254799765.parent;
                if (!(!((parent_3254799766 == null)))) {
                failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,50,46,110,105,109,40,49,57,50,53,44,32,55,41,32,96,112,97,114,101,110,116,46,105,115,78,111,116,78,105,108,96,32]);
                }
                
                if ((direction_3254799592 == 0)) {
                Temporary11 = 0;
                }
                else {
                Temporary11 = (currentText_3338666034(c_3254799762)).length;
                }
                
                var endIndex_3254799779 = Temporary11;
                  var oHEX60gensym511_3254799782 = handleDelete_3254797187(c_3254799762, slice_3254799763, direction_3254799592);
                  if (!isSome_3254793888(oHEX60gensym511_3254799782)) Temporary12 = false; else {                    var newCursor_3254799805 = nimCopy(null, get_3254786205(oHEX60gensym511_3254799782), NTI3254779907);
                    Temporary12 = true;                  }                if (Temporary12) {
                cursorHEX3D_3254784731(self_3254799591, newCursor_3254799805);
                if (((((currentText_3338666034(c_3254799762)).length == 0) && !(c_3254799762.dontReplaceWithDefault)) && !((c_3254799762.parent.node == c_3254799762.node)))) {
                  var oHEX60gensym513_3254799812 = replaceWithDefault_3271568542(c_3254799762.node, false);
                  if (!isSome_3338667398(oHEX60gensym513_3254799812)) Temporary13 = false; else {                    var newNode_3254799835 = get_3338667418(oHEX60gensym513_3254799812);
                    Temporary13 = true;                  }                if (Temporary13) {
                rebuildCells_3254780235(self_3254799591);
                cursorHEX3D_3254784731(self_3254799591, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254799591, newNode_3254799835)));
                }
                
                }
                
                break Label7;
                }
                
                if ((((((currentText_3338666034(c_3254799762)).length == 0) && !(c_3254799762.dontReplaceWithDefault)) && !((c_3254799762.parent.node == c_3254799762.node))) && !(isRequiredAndDefault_3271567612(c_3254799762.node)))) {
                var parent_3254799855 = c_3254799762.node.parent;
                  var oHEX60gensym515_3254799858 = deleteOrReplaceWithDefault_3271568576(c_3254799762.node, false);
                  if (!isSome_3338667398(oHEX60gensym515_3254799858)) Temporary14 = false; else {                    var newNode_3254799881 = get_3338667418(oHEX60gensym515_3254799858);
                    Temporary14 = true;                  }                if (Temporary14) {
                rebuildCells_3254780235(self_3254799591);
                cursorHEX3D_3254784731(self_3254799591, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254799591, newNode_3254799881)));
                }
                else {
                  var targetCell_3254799942 = getNeighborLeafWhere_3254795692(c_3254799762, cursorMoveDirection_3254799764, HEX3Aanonymous_3254799897);
                    var oHEX60gensym518_3254799945 = nimCopy(null, targetCell_3254799942, NTI3271564556);
                    if (!isSome_3338666868(oHEX60gensym518_3254799945)) Temporary15 = false; else {                      var targetCell_3254799968 = get_3338666888(oHEX60gensym518_3254799945);
                      Temporary15 = true;                    }                  if (Temporary15) {
                  var cursor_3254799973 = toCursor_3254780264(targetCell_3254799968, (cursorMoveDirection_3254799764 == 1));
                  rebuildCells_3254780235(self_3254799591);
                    var oHEX60gensym519_3254799976 = updateCursor_3254796030(self_3254799591, cursor_3254799973);
                    if (!isSome_3254793888(oHEX60gensym519_3254799976)) Temporary16 = false; else {                      var newCursor_3254799999 = nimCopy(null, get_3254786205(oHEX60gensym519_3254799976), NTI3254779907);
                      Temporary16 = true;                    }                  if (Temporary16) {
                  cursorHEX3D_3254784731(self_3254799591, newCursor_3254799999);
                  break Label7;
                  }
                  
                  }
                  
                  var uiae_3254800000 = toCursor_3254795986(c_3254799762);
                  var parentCellCursor_3254800001 = selectParentCell_3254795996(uiae_3254800000);
                  if (!((parentCellCursor_3254800001.node == c_3254799762.node.parent))) {
                  failedAssertImpl_268435515(makeNimstrLit("ast_document2.nim(1966, 11) `parentCellCursor.node == c.node.parent` "));
                  }
                  
                  rebuildCells_3254780235(self_3254799591);
                    var oHEX60gensym522_3254800116 = flatMap_3254800024(updateCursor_3254796030(self_3254799591, parentCellCursor_3254800001), HEX3Aanonymous_3254800015);
                    if (!isSome_3338666868(oHEX60gensym522_3254800116)) Temporary17 = false; else {                      var newCell_3254800139 = get_3338666888(oHEX60gensym522_3254800116);
                      Temporary17 = true;                    }                  if (Temporary17) {
                    if (!((i_3254799761 == 0) && (direction_3254799592 == 0))) Temporary18 = false; else {                      var oHEX60gensym523_3254800146 = getNeighborSelectableLeaf_3254795845(newCell_3254800139, direction_3254799592);
                      if (!isSome_3338666868(oHEX60gensym523_3254800146)) Temporary19 = false; else {                        var c_3254800169 = get_3338666888(oHEX60gensym523_3254800146);
                        Temporary19 = true;                      }                      Temporary18 = Temporary19;                    }                  if (Temporary18) {
                  cursorHEX3D_3254784731(self_3254799591, toCursor_3254795986(c_3254800169));
                  }
                  else {
                    var oHEX60gensym524_3254800183 = getSelfOrNeighborLeafWhere_3254795826(newCell_3254800139, direction_3254799592, HEX3Aanonymous_3254800170);
                    if (!isSome_3338666868(oHEX60gensym524_3254800183)) Temporary20 = false; else {                      var c_3254800206 = get_3338666888(oHEX60gensym524_3254800183);
                      Temporary20 = true;                    }                  if (Temporary20) {
                  cursorHEX3D_3254784731(self_3254799591, toCursor_3254780264(c_3254800206, true));
                  }
                  else {
                  cursorHEX3D_3254784731(self_3254799591, toCursor_3254780264(newCell_3254800139, true));
                  }
                  }
                  }
                  else {
                  cursorHEX3D_3254784731(self_3254799591, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254799591, parent_3254799855)));
                  }
                  
                }
                
                break Label7;
                }
                
                if (((slice_3254799763.a == slice_3254799763.b) && (slice_3254799763.a == endIndex_3254799779))) {
                break Label10;
                }
                
                if (c_3254799762.disableEditing) {
                if ((c_3254799762.deleteImmediately || ((slice_3254799763.a == 0) && (slice_3254799763.b == (currentText_3338666034(c_3254799762)).length)))) {
                if (c_3254799762.deleteNeighbor) {
                if ((direction_3254799592 == 0)) {
                Temporary21 = previousDirect_3338666272(c_3254799762);
                }
                else {
                Temporary21 = nextDirect_3338666296(c_3254799762);
                }
                
                var neighbor_3254800226 = nimCopy(null, Temporary21, NTI3271564556);
                  var oHEX60gensym525_3254800229 = nimCopy(null, neighbor_3254800226, NTI3271564556);
                  if (!isSome_3338666868(oHEX60gensym525_3254800229)) Temporary22 = false; else {                    var neighbor_3254800252 = get_3338666888(oHEX60gensym525_3254800229);
                    Temporary22 = true;                  }                if (Temporary22) {
                var parent_3254800253 = neighbor_3254800252.node.parent;
                var selectionTarget_3254800254 = getNeighborSelectableLeaf_3254795845(c_3254799762, HEX2D_3254779966(direction_3254799592));
                  var oHEX60gensym526_3254800257 = deleteOrReplaceWithDefault_3271568576(neighbor_3254800252.node, false);
                  if (!isSome_3338667398(oHEX60gensym526_3254800257)) Temporary23 = false; else {                    var newNode_3254800280 = get_3338667418(oHEX60gensym526_3254800257);
                    Temporary23 = true;                  }                if (Temporary23) {
                rebuildCells_3254780235(self_3254799591);
                cursorHEX3D_3254784731(self_3254799591, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254799591, newNode_3254800280)));
                }
                else {
                  rebuildCells_3254780235(self_3254799591);
                    var oHEX60gensym527_3254800298 = nimCopy(null, selectionTarget_3254800254, NTI3271564556);
                    if (!isSome_3338666868(oHEX60gensym527_3254800298)) Temporary25 = false; else {                      var selectionTarget_3254800321 = get_3338666888(oHEX60gensym527_3254800298);
                      Temporary25 = true;                    }                    if (!Temporary25) Temporary24 = false; else {                      var oHEX60gensym528_3254800328 = updateCursor_3254796030(self_3254799591, toCursor_3254780264(selectionTarget_3254800321, (direction_3254799592 == 0)));
                      if (!isSome_3254793888(oHEX60gensym528_3254800328)) Temporary26 = false; else {                        var newCursor_3254800351 = nimCopy(null, get_3254786205(oHEX60gensym528_3254800328), NTI3254779907);
                        Temporary26 = true;                      }                      Temporary24 = Temporary26;                    }                  if (Temporary24) {
                  cursorHEX3D_3254784731(self_3254799591, newCursor_3254800351);
                  }
                  else {
                  cursorHEX3D_3254784731(self_3254799591, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254799591, parent_3254800253)));
                  }
                  
                }
                
                }
                
                }
                else {
                  var oHEX60gensym529_3254800369 = replaceWithDefault_3271568542(c_3254799762.node, false);
                  if (!isSome_3338667398(oHEX60gensym529_3254800369)) Temporary27 = false; else {                    var newNode_3254800392 = get_3338667418(oHEX60gensym529_3254800369);
                    Temporary27 = true;                  }                if (Temporary27) {
                rebuildCells_3254780235(self_3254799591);
                cursorHEX3D_3254784731(self_3254799591, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254799591, newNode_3254800392)));
                }
                }
                }
                else {
                  switch (direction_3254799592) {
                  case 0:
                    cursorHEX3D_3254784731(self_3254799591, toCursorBackwards_3254795991(c_3254799762));
                    break;
                  case 1:
                    cursorHEX3D_3254784731(self_3254799591, toCursor_3254795986(c_3254799762));
                    break;
                  }
                }
                
                break Label7;
                }
                
              };
              i_3254800498 = addInt(i_3254800498, 1);
              if (!(((potentialCells_3254799678).length == L_3254800499))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    

  
}

function invoke_3254785573(event_3254785575, arg_3254785576) {
    Label1: {
      var h_3254785599 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_3254800603 = 0;
      var L_3254800604 = (event_3254785575.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254800603 < L_3254800604)) break Label3;
            h_3254785599 = event_3254785575.handlers[chckIndx(i_3254800603, 0, (event_3254785575.handlers).length - 1)];
            h_3254785599.Field1(arg_3254785576);
            i_3254800603 = addInt(i_3254800603, 1);
            if (!(((event_3254785575.handlers).length == L_3254800604))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function finishTransaction_3254785533(self_3254785534, clearRedoList_3254785535) {
    if (HEX3DHEX3D_2046820626(self_3254785534.currentTransaction.id, idNone_2046820633())) {
    self_3254785534.currentTransaction.id = nimCopy(self_3254785534.currentTransaction.id, newId_2046820597(), NTI2046820355);
    }
    
    if ((0 < (self_3254785534.currentTransaction.operations).length)) {
    var Temporary1 = nimCopy(null, self_3254785534.currentTransaction, NTI3254779955);
    self_3254785534.undoList.push(Temporary1);;
    if (clearRedoList_3254785535) {
    if (self_3254785534.redoList.length < 0) { for (var i = self_3254785534.redoList.length ; i < 0 ; ++i) self_3254785534.redoList.push(({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), operations: []})); }
               else { self_3254785534.redoList.length = 0; };
    }
    
    invoke_3254785573(self_3254785534.onFinishedUndoTransaction, {Field0: self_3254785534, Field1: nimCopy(null, self_3254785534.undoList[chckIndx((self_3254785534.undoList).length - 1, 0, (self_3254785534.undoList).length - 1)], NTI3254779955)});
    }
    
    self_3254785534.currentTransaction = nimCopy(self_3254785534.currentTransaction, {id: newId_2046820597(), operations: []}, NTI3254779955);

  
}

function deleteLeft_3254800449(self_3254800450) {
    try {
    delete_3254799590(self_3254800450, 0);
    markDirty_2415919143(self_3254800450);
    } finally {
    finishTransaction_3254785533(self_3254800450.document, true);
    }

  
}

function deleteLeftJsWrapper2_3254800446(self_3254800478) {
    deleteLeft_3254800449(self_3254800478);

  
}
editor_model_prototype.deleteLeft2 = function() { return (deleteLeftJsWrapper2_3254800446(this));};

function deleteRight_3254800611(self_3254800612) {
    try {
    delete_3254799590(self_3254800612, 1);
    markDirty_2415919143(self_3254800612);
    } finally {
    finishTransaction_3254785533(self_3254800612.document, true);
    }

  
}

function deleteRightJsWrapper2_3254800608(self_3254800640) {
    deleteRight_3254800611(self_3254800640);

  
}
editor_model_prototype.deleteRight2 = function() { return (deleteRightJsWrapper2_3254800608(this));};

function canHaveSiblings_3271567524(node_3271567525) {
      var Temporary1;

  var result_3271567526 = false;

  BeforeRet: {
      var oHEX60gensym156_3271567529 = selfDescription_3271567499(node_3271567525);
      if (!isSome_3271566327(oHEX60gensym156_3271567529)) Temporary1 = false; else {        var desc_3271567552 = nimCopy(null, get_3271566344(oHEX60gensym156_3271567529), NTI3271557127);
        Temporary1 = true;      }    if (Temporary1) {
    switch (desc_3271567552.count) {
    case 0:
    case 2:
      result_3271567526 = false;
      break BeforeRet;
      break;
    case 1:
    case 3:
      result_3271567526 = true;
      break BeforeRet;
      break;
    }
    }
    else {
      result_3271567526 = false;
      break BeforeRet;
    }
    
  };

  return result_3271567526;

}

function isAtEndOfLastCellOfNode_3254800656(cursor_3254800657) {
  var result_3254800658 = false;

  BeforeRet: {
    var cell_3254800659 = cursor_3254800657.cell;
    Label1: {
      var i_3254800663 = 0;
      var i_3254801287 = 0;
      var L_3254801288 = (cursor_3254800657.path).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801287 < L_3254801288)) break Label3;
            i_3254800663 = cursor_3254800657.path[chckIndx(i_3254801287, 0, (cursor_3254800657.path).length - 1)];
            if (!((i_3254800663 == high_3338666244(cell_3254800659)))) {
            result_3254800658 = false;
            break BeforeRet;
            }
            
            cell_3254800659 = cell_3254800659.children[chckIndx(i_3254800663, 0, (cell_3254800659.children).length - 1)];
            i_3254801287 = addInt(i_3254801287, 1);
            if (!(((cursor_3254800657.path).length == L_3254801288))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (isObj(cell_3254800659.m_type, NTI3338665993)) {
    result_3254800658 = (cursor_3254800657.lastIndex == high_3338666244(cell_3254800659));
    break BeforeRet;
    }
    else {
      result_3254800658 = (cursor_3254800657.lastIndex == addInt(high_3338666244(cell_3254800659), 1));
      break BeforeRet;
    }
    
  };

  return result_3254800658;

}

function addQuoted_3271571059(s_3271571061, s_3271571061_Idx, x_3271571062) {
    s_3271571061[s_3271571061_Idx].push.apply(s_3271571061[s_3271571061_Idx], reprEnum(x_3271571062, NTI3271557123));;

  
}

function addQuoted_3271571100(s_3271571102, s_3271571102_Idx, x_3271571103) {
    s_3271571102[s_3271571102_Idx].push.apply(s_3271571102[s_3271571102_Idx], nimBoolToStr(x_3271571103));;

  
}

function HEX24_3271571030(x_3271571032) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3271571033 = [[]];

    result_3271571033[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym204_3271571044 = 0;
    if ((0 < countHEX60gensym204_3271571044)) {
    result_3271571033[0].push.apply(result_3271571033[0], [44,32]);;
    }
    
    result_3271571033[0].push.apply(result_3271571033[0], [107,105,110,100]);;
    result_3271571033[0].push.apply(result_3271571033[0], [58,32]);;
    countHEX60gensym204_3271571044 += 1;
    addQuoted_3271571059(result_3271571033, 0, x_3271571032.kind);
    switch (x_3271571032.kind) {
    case 0:
      if ((0 < countHEX60gensym204_3271571044)) {
      result_3271571033[0].push.apply(result_3271571033[0], [44,32]);;
      }
      
      result_3271571033[0].push.apply(result_3271571033[0], [105,110,116,86,97,108,117,101]);;
      result_3271571033[0].push.apply(result_3271571033[0], [58,32]);;
      countHEX60gensym204_3271571044 += 1;
      var Temporary1 = x_3271571032;
      if (ConstSet243[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3271557123)); }
      addQuoted_855639425(result_3271571033, 0, Temporary1.intValue);
      break;
    case 1:
      if ((0 < countHEX60gensym204_3271571044)) {
      result_3271571033[0].push.apply(result_3271571033[0], [44,32]);;
      }
      
      result_3271571033[0].push.apply(result_3271571033[0], [115,116,114,105,110,103,86,97,108,117,101]);;
      result_3271571033[0].push.apply(result_3271571033[0], [58,32]);;
      countHEX60gensym204_3271571044 += 1;
      var Temporary2 = x_3271571032;
      if (ConstSet244[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3271557123)); }
      addQuoted_1593835572(result_3271571033, 0, Temporary2.stringValue);
      break;
    case 2:
      if ((0 < countHEX60gensym204_3271571044)) {
      result_3271571033[0].push.apply(result_3271571033[0], [44,32]);;
      }
      
      result_3271571033[0].push.apply(result_3271571033[0], [98,111,111,108,86,97,108,117,101]);;
      result_3271571033[0].push.apply(result_3271571033[0], [58,32]);;
      countHEX60gensym204_3271571044 += 1;
      var Temporary3 = x_3271571032;
      if (ConstSet245[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3271557123)); }
      addQuoted_3271571100(result_3271571033, 0, Temporary3.boolValue);
      break;
    }
    result_3271571033[0].push.apply(result_3271571033[0], [41]);;

  return result_3271571033[0];

}

function HEX24_3271557901(node_3271557902, recursive_3271557903) {
              var Temporary4;
                var Temporary5;
              var Temporary9;
                var Temporary10;
              var Temporary15;
                var Temporary16;
                    var Temporary20;

  var result_3271570992 = [];

  BeforeRet: {
    var class_3271570993 = nodeClass_3271557904(node_3271557902);
    if ((class_3271570993 == null)) {
    result_3271570992.push.apply(result_3271570992, HEX24_2046820617(node_3271557902.class));;
    }
    else {
    result_3271570992.push.apply(result_3271570992, class_3271570993.name);;
    }
    
    result_3271570992.push.apply(result_3271570992, ([40,105,100,58,32] || []).concat(HEX24_2046820617(node_3271557902.id) || [],[41,58] || []));;
    Label1: {
      var role_3271571000 = null;
      var i_3254801292 = 0;
      var L_3254801293 = (node_3271557902.properties).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801292 < L_3254801293)) break Label3;
            role_3271571000 = node_3271557902.properties[chckIndx(i_3254801292, 0, (node_3271557902.properties).length - 1)];
            result_3271570992.push.apply(result_3271570992, [10,226,148,130,32]);;
              if (!!((class_3271570993 == null))) Temporary4 = false; else {                var oHEX60gensym203_3271571006 = propertyDescription_3271566416(class_3271570993, role_3271571000.Field0);
                if (!isSome_3271566471(oHEX60gensym203_3271571006)) Temporary5 = false; else {                  var desc_3271571029 = nimCopy(null, get_3271566488(oHEX60gensym203_3271571006), NTI3271557125);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            result_3271570992.push.apply(result_3271570992, desc_3271571029.role);;
            }
            else {
            result_3271570992.push.apply(result_3271570992, HEX24_2046820617(role_3271571000.Field0));;
            }
            
            result_3271570992.push.apply(result_3271570992, [58,32]);;
            result_3271570992.push.apply(result_3271570992, HEX24_3271571030(role_3271571000.Field1));;
            i_3254801292 = addInt(i_3254801292, 1);
            if (!(((node_3271557902.properties).length == L_3254801293))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label6: {
      var role_3271571109 = null;
      var i_3254801297 = 0;
      var L_3254801298 = (node_3271557902.references).length;
      Label7: {
          Label8: while (true) {
          if (!(i_3254801297 < L_3254801298)) break Label8;
            role_3271571109 = node_3271557902.references[chckIndx(i_3254801297, 0, (node_3271557902.references).length - 1)];
            result_3271570992.push.apply(result_3271570992, [10,226,148,130,32]);;
              if (!!((class_3271570993 == null))) Temporary9 = false; else {                var oHEX60gensym218_3271571115 = nodeReferenceDescription_3271566128(class_3271570993, role_3271571109.Field0);
                if (!isSome_3271566183(oHEX60gensym218_3271571115)) Temporary10 = false; else {                  var desc_3271571138 = nimCopy(null, get_3271566200(oHEX60gensym218_3271571115), NTI3271557128);
                  Temporary10 = true;                }                Temporary9 = Temporary10;              }            if (Temporary9) {
            result_3271570992.push.apply(result_3271570992, desc_3271571138.role);;
            }
            else {
            result_3271570992.push.apply(result_3271570992, HEX24_2046820617(role_3271571109.Field0));;
            }
            
            result_3271570992.push.apply(result_3271570992, [58,32]);;
            result_3271570992.push.apply(result_3271570992, HEX24_2046820617(role_3271571109.Field1));;
            i_3254801297 = addInt(i_3254801297, 1);
            if (!(((node_3271557902.references).length == L_3254801298))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!(recursive_3271557903)) {
    break BeforeRet;
    }
    
    var roleIndex_3271571139 = 0;
    Label11: {
      var role_3271571143 = null;
      var i_3254801305 = 0;
      var L_3254801306 = (node_3271557902.childLists).length;
      Label12: {
          Label13: while (true) {
          if (!(i_3254801305 < L_3254801306)) break Label13;
            role_3271571143 = node_3271557902.childLists[chckIndx(i_3254801305, 0, (node_3271557902.childLists).length - 1)];
            try {
            result_3271570992.push.apply(result_3271570992, [10,226,148,130,32]);;
              if (!!((class_3271570993 == null))) Temporary15 = false; else {                var oHEX60gensym220_3271571154 = nodeChildDescription_3271566272(class_3271570993, role_3271571143.Field0);
                if (!isSome_3271566327(oHEX60gensym220_3271571154)) Temporary16 = false; else {                  var desc_3271571177 = nimCopy(null, get_3271566344(oHEX60gensym220_3271571154), NTI3271557127);
                  Temporary16 = true;                }                Temporary15 = Temporary16;              }            if (Temporary15) {
            result_3271570992.push.apply(result_3271570992, desc_3271571177.role);;
            }
            else {
            result_3271570992.push.apply(result_3271570992, HEX24_2046820617(role_3271571143.Field0));;
            }
            
            result_3271570992.push.apply(result_3271570992, [58]);;
            Label17: {
              var i_3271571210 = 0;
              var c_3271571211 = null;
              var i_3254801302 = 0;
              var L_3254801303 = (role_3271571143.Field1).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_3254801302 < L_3254801303)) break Label19;
                    i_3271571210 = i_3254801302;
                    c_3271571211 = role_3271571143.Field1[chckIndx(i_3254801302, 0, (role_3271571143.Field1).length - 1)];
                    if (((i_3271571210 == (role_3271571143.Field1).length - 1) && (roleIndex_3271571139 == (node_3271557902.childLists).length - 1))) {
                    result_3271570992.push.apply(result_3271570992, [10,226,148,148,226,148,128,226,148,128,226,148,128]);;
                    }
                    else {
                    result_3271570992.push.apply(result_3271570992, [10,226,148,156,226,148,128,226,148,128,226,148,128]);;
                    }
                    
                    if (((i_3271571210 < (role_3271571143.Field1).length - 1) || (roleIndex_3271571139 < (node_3271557902.childLists).length - 1))) {
                    Temporary20 = [226,148,130,32,32,32];
                    }
                    else {
                    Temporary20 = [32,32,32,32];
                    }
                    
                    var indent_3271571224 = nimCopy(null, Temporary20, NTI33554449);
                    result_3271570992.push.apply(result_3271570992, HEX5BHEX5D_855639319(nsuIndent(HEX24_3271557901(c_3271571211, recursive_3271557903), 1, indent_3271571224), HEX2EHEX2E_1040187488((indent_3271571224).length, 1)));;
                    i_3254801302 = addInt(i_3254801302, 1);
                    if (!(((role_3271571143.Field1).length == L_3254801303))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_3254801305 = addInt(i_3254801305, 1);
            if (!(((node_3271557902.childLists).length == L_3254801306))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
            } finally {
            roleIndex_3271571139 = addInt(roleIndex_3271571139, 1);
            }
          }
      };
    };
  };

  return result_3271570992;

}

function formatValue_3338666719(result_3338666721, result_3338666721_Idx, value_3338666722, specifier_3338666723) {
    formatValue_721420459(result_3338666721, result_3338666721_Idx, HEX24_3271557901(value_3338666722, false), specifier_3338666723);

  
}

function insertDefaultNode_3271568620(node_3271568621, role_3271568622, index_3271568623, fillDefaultChildren_3271568624) {
  var result_3271568626 = ({val: null});

  BeforeRet: {
    result_3271568626 = nimCopy(result_3271568626, none_3271565970(), NTI3271561483);
    var class_3271568633 = nodeClass_3271557904(node_3271568621);
    var desc_3271568649 = nimCopy(null, get_3271566344(nodeChildDescription_3271566272(class_3271568633, role_3271568622)), NTI3271557127);
    var language_3271568650 = language_3271567342(node_3271568621);
    if ((language_3271568650 == null)) {
    break BeforeRet;
    }
    
    var childClass_3271568726 = getOrDefault_3271561603(language_3271568650.classes, desc_3271568649.class, null);
    if ((childClass_3271568726 == null)) {
    break BeforeRet;
    }
    
    var child_3271568730 = newAstNode_3271567013(childClass_3271568726, none_3271567020());
    if (fillDefaultChildren_3271568624) {
    fillDefaultChildren_3271567078(child_3271568730, language_3271568650);
    }
    
    insert_3271567638(node_3271568621, role_3271568622, index_3271568623, child_3271568730);
    result_3271568626 = nimCopy(result_3271568626, some_3271565957(child_3271568730), NTI3271561483);
    break BeforeRet;
  };

  return result_3271568626;

}

function insertIntoNode_3254800670(self_3254800671, parent_3254800672, role_3254800673, index_3254800674) {
  var result_3254800676 = ({val: null});

  BeforeRet: {
    var parentCell_3254800748 = getOrDefault_3254796101(self_3254800671.nodeToCell, parent_3254800672.id);
    var fmtRes_3254800754 = [mnewString(0)];
    fmtRes_3254800754[0].push.apply(fmtRes_3254800754[0], [105,110,115,101,114,116,73,110,116,111,78,111,100,101,32]);;
    formatValue_2701131945(fmtRes_3254800754, 0, index_3254800674, []);
    fmtRes_3254800754[0].push.apply(fmtRes_3254800754[0], [32]);;
    formatValue_3338666719(fmtRes_3254800754, 0, parent_3254800672, []);
    fmtRes_3254800754[0].push.apply(fmtRes_3254800754[0], [44,32]);;
    formatValue_2785018306(fmtRes_3254800754, 0, !((parentCell_3254800748.nodeFactory == null)), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254800754[0], NTI33554449)]);
    if (!((parentCell_3254800748.nodeFactory == null))) {
    var newNode_3254800776 = parentCell_3254800748.nodeFactory();
    insert_3271567638(parent_3254800672, role_3254800673, index_3254800674, newNode_3254800776);
    result_3254800676 = nimCopy(result_3254800676, some_3271565957(newNode_3254800776), NTI3271561483);
    break BeforeRet;
    }
    else {
      result_3254800676 = nimCopy(result_3254800676, insertDefaultNode_3271568620(parent_3254800672, role_3254800673, index_3254800674, false), NTI3271561483);
      break BeforeRet;
    }
    
  };

  return result_3254800676;

}

function insertAfterNode_3254800883(self_3254800884, node_3254800885) {
  var result_3254800887 = ({val: null});

  BeforeRet: {
    var parentCell_3254800959 = getOrDefault_3254796101(self_3254800884.nodeToCell, node_3254800885.parent.id);
    var fmtRes_3254800965 = [mnewString(0)];
    fmtRes_3254800965[0].push.apply(fmtRes_3254800965[0], [48,49,32,105,110,115,101,114,116,32,98,101,102,111,114,101,32]);;
    formatValue_2701131945(fmtRes_3254800965, 0, index_3271567587(node_3254800885), []);
    fmtRes_3254800965[0].push.apply(fmtRes_3254800965[0], [32]);;
    formatValue_3338666719(fmtRes_3254800965, 0, node_3254800885.parent, []);
    fmtRes_3254800965[0].push.apply(fmtRes_3254800965[0], [44,32]);;
    formatValue_2785018306(fmtRes_3254800965, 0, !((parentCell_3254800959.nodeFactory == null)), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254800965[0], NTI33554449)]);
    result_3254800887 = nimCopy(result_3254800887, insertIntoNode_3254800670(self_3254800884, node_3254800885.parent, node_3254800885.role, addInt(index_3271567587(node_3254800885), 1)), NTI3271561483);
    break BeforeRet;
  };

  return result_3254800887;

}

function isAtBeginningOfFirstCellOfNode_3254800649(cursor_3254800650) {
  var result_3254800651 = false;

  BeforeRet: {
    result_3254800651 = (cursor_3254800650.lastIndex == 0);
    if (result_3254800651) {
    Label1: {
      var i_3254800655 = 0;
      var i_3254801309 = 0;
      var L_3254801310 = (cursor_3254800650.path).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801309 < L_3254801310)) break Label3;
            i_3254800655 = cursor_3254800650.path[chckIndx(i_3254801309, 0, (cursor_3254800650.path).length - 1)];
            if (!((i_3254800655 == 0))) {
            result_3254800651 = false;
            break BeforeRet;
            }
            
            i_3254801309 = addInt(i_3254801309, 1);
            if (!(((cursor_3254800650.path).length == L_3254801310))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  };

  return result_3254800651;

}

function insertBeforeNode_3254800782(self_3254800783, node_3254800784) {
  var result_3254800786 = ({val: null});

  BeforeRet: {
    var parentCell_3254800858 = getOrDefault_3254796101(self_3254800783.nodeToCell, node_3254800784.parent.id);
    var fmtRes_3254800864 = [mnewString(0)];
    fmtRes_3254800864[0].push.apply(fmtRes_3254800864[0], [48,49,32,105,110,115,101,114,116,32,98,101,102,111,114,101,32]);;
    formatValue_2701131945(fmtRes_3254800864, 0, index_3271567587(node_3254800784), []);
    fmtRes_3254800864[0].push.apply(fmtRes_3254800864[0], [32]);;
    formatValue_3338666719(fmtRes_3254800864, 0, node_3254800784.parent, []);
    fmtRes_3254800864[0].push.apply(fmtRes_3254800864[0], [44,32]);;
    formatValue_2785018306(fmtRes_3254800864, 0, !((parentCell_3254800858.nodeFactory == null)), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254800864[0], NTI33554449)]);
    result_3254800786 = nimCopy(result_3254800786, insertIntoNode_3254800670(self_3254800783, node_3254800784.parent, node_3254800784.role, index_3271567587(node_3254800784)), NTI3271561483);
    break BeforeRet;
  };

  return result_3254800786;

}

function selectParentNodeCell_3254796020(cursor_3254796021) {
  var result_3254796022 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796022 = nimCopy(result_3254796022, cursor_3254796021, NTI3254779907);
    Label1: {
        Label2: while (true) {
        if (!((result_3254796022.node == cursor_3254796021.node) && !((result_3254796022.cell.parent == null)))) break Label2;
          result_3254796022 = nimCopy(result_3254796022, selectParentCell_3254795996(result_3254796022), NTI3254779907);
        }
    };

  return result_3254796022;

}

function formatValue_3254779996(result_3254779998, result_3254779998_Idx, value_3254779999, specifier_3254780000) {
    formatValue_721420459(result_3254779998, result_3254779998_Idx, HEX24_3003123768(value_3254779999), specifier_3254780000);

  
}

function HEX24_3254779978(cursor_3254779979) {
  var result_3254779980 = [];

  BeforeRet: {
    var fmtRes_3254779985 = [mnewString(0)];
    fmtRes_3254779985[0].push.apply(fmtRes_3254779985[0], [67,101,108,108,67,117,114,115,111,114,40]);;
    formatValue_2701131945(fmtRes_3254779985, 0, cursor_3254779979.firstIndex, []);
    fmtRes_3254779985[0].push.apply(fmtRes_3254779985[0], [58]);;
    formatValue_2701131945(fmtRes_3254779985, 0, cursor_3254779979.lastIndex, []);
    fmtRes_3254779985[0].push.apply(fmtRes_3254779985[0], [44,32]);;
    formatValue_3254779996(fmtRes_3254779985, 0, cursor_3254779979.path, []);
    fmtRes_3254779985[0].push.apply(fmtRes_3254779985[0], [44,32]);;
    formatValue_3338666719(fmtRes_3254779985, 0, cursor_3254779979.node, []);
    fmtRes_3254779985[0].push.apply(fmtRes_3254779985[0], [41]);;
    result_3254779980 = nimCopy(null, fmtRes_3254779985[0], NTI33554449);
    break BeforeRet;
  };

  return result_3254779980;

}

function formatValue_3254800998(result_3254801000, result_3254801000_Idx, value_3254801001, specifier_3254801002) {
    formatValue_721420459(result_3254801000, result_3254801000_Idx, HEX24_3254779978(value_3254801001), specifier_3254801002);

  
}

function formatValue_3254801052(result_3254801054, result_3254801054_Idx, value_3254801055, specifier_3254801056) {
    formatValue_721420459(result_3254801054, result_3254801054_Idx, reprEnum(value_3254801055, NTI3271557126), specifier_3254801056);

  
}

function createNewNodeAt_3254800984(self_3254800985, cursor_3254800986) {
    
function HEX3Aanonymous_3254801017(c_3254801018) {
          var Temporary1;

      var result_3254801019 = false;

      BeforeRet: {
          var oHEX60gensym558_3254801022 = selfDescription_3271567499(c_3254801018.node);
          if (!isSome_3271566327(oHEX60gensym558_3254801022)) Temporary1 = false; else {            var desc_3254801045 = nimCopy(null, get_3271566344(oHEX60gensym558_3254801022), NTI3271557127);
            Temporary1 = true;          }        if (Temporary1) {
        var fmtRes_3254801051 = [mnewString(0)];
        formatValue_721420459(fmtRes_3254801051, 0, desc_3254801045.role, []);
        fmtRes_3254801051[0].push.apply(fmtRes_3254801051[0], [44,32]);;
        formatValue_3254801052(fmtRes_3254801051, 0, desc_3254801045.count, []);
        fmtRes_3254801051[0].push.apply(fmtRes_3254801051[0], [44,32]);;
        formatValue_2701131945(fmtRes_3254801051, 0, index_3271567587(c_3254801018.node), []);
        fmtRes_3254801051[0].push.apply(fmtRes_3254801051[0], [44,32]);;
        formatValue_721420459(fmtRes_3254801051, 0, dump_3271570945(c_3254801018, false), []);
        fmtRes_3254801051[0].push.apply(fmtRes_3254801051[0], [44,32]);;
        formatValue_3338666719(fmtRes_3254801051, 0, c_3254801018.node, []);
        log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254801051[0], NTI33554449)]);
        }
        
        if ((!((c_3254801018.node == originalNode_3254801014)) && !(isDescendant_3271567318(c_3254801018.node, originalNode_3254801014)))) {
        result_3254801019 = true;
        break BeforeRet;
        }
        
        if ((c_3254801018.node == originalNode_3254801014)) {
        result_3254801019 = false;
        break BeforeRet;
        }
        
        i_3254801013 = addInt(i_3254801013, 1);
        if (canHaveSiblings_3271567524(c_3254801018.node)) {
        ok_3254801015 = true;
        result_3254801019 = true;
        break BeforeRet;
        }
        
        result_3254801019 = false;
        break BeforeRet;
      };

      return result_3254801019;

    }
    
function HEX3Aanonymous_3254801091(c_3254801092) {
          var Temporary1;

      var result_3254801093 = false;

      BeforeRet: {
          var oHEX60gensym562_3254801096 = selfDescription_3271567499(c_3254801092.node);
          if (!isSome_3271566327(oHEX60gensym562_3254801096)) Temporary1 = false; else {            var desc_3254801119 = nimCopy(null, get_3271566344(oHEX60gensym562_3254801096), NTI3271557127);
            Temporary1 = true;          }        if (Temporary1) {
        var fmtRes_3254801125 = [mnewString(0)];
        formatValue_721420459(fmtRes_3254801125, 0, desc_3254801119.role, []);
        fmtRes_3254801125[0].push.apply(fmtRes_3254801125[0], [44,32]);;
        formatValue_3254801052(fmtRes_3254801125, 0, desc_3254801119.count, []);
        fmtRes_3254801125[0].push.apply(fmtRes_3254801125[0], [44,32]);;
        formatValue_2701131945(fmtRes_3254801125, 0, index_3271567587(c_3254801092.node), []);
        fmtRes_3254801125[0].push.apply(fmtRes_3254801125[0], [44,32]);;
        formatValue_721420459(fmtRes_3254801125, 0, dump_3271570945(c_3254801092, false), []);
        fmtRes_3254801125[0].push.apply(fmtRes_3254801125[0], [44,32]);;
        formatValue_3338666719(fmtRes_3254801125, 0, c_3254801092.node, []);
        log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254801125[0], NTI33554449)]);
        }
        
        if (canHaveSiblings_3271567524(c_3254801092.node)) {
        addBefore_3254801016 = false;
        ok_3254801015 = true;
        result_3254801093 = true;
        break BeforeRet;
        }
        
        result_3254801093 = false;
        break BeforeRet;
      };

      return result_3254801093;

    }
    var Temporary4;
      var Temporary5;

  var result_3254800988 = ({val: null});

  BeforeRet: {
    var canHaveSiblings_3254800989 = canHaveSiblings_3271567524(cursor_3254800986.node);
    if ((isAtEndOfLastCellOfNode_3254800656(cursor_3254800986) && canHaveSiblings_3254800989)) {
    result_3254800988 = nimCopy(result_3254800988, insertAfterNode_3254800883(self_3254800985, cursor_3254800986.node), NTI3271561483);
    break BeforeRet;
    }
    
    if ((canHaveSiblings_3254800989 && isAtBeginningOfFirstCellOfNode_3254800649(cursor_3254800986))) {
    result_3254800988 = nimCopy(result_3254800988, insertBeforeNode_3254800782(self_3254800985, cursor_3254800986.node), NTI3271561483);
    break BeforeRet;
    }
    
    var temp_3254800990 = nimCopy(null, cursor_3254800986, NTI3254779907);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
            var newParent_3254800991 = selectParentNodeCell_3254796020(temp_3254800990);
            var fmtRes_3254800997 = [mnewString(0)];
            fmtRes_3254800997[0].push.apply(fmtRes_3254800997[0], [116,101,109,112,58,32]);;
            formatValue_3254800998(fmtRes_3254800997, 0, temp_3254800990, []);
            fmtRes_3254800997[0].push.apply(fmtRes_3254800997[0], [44,32,112,97,114,101,110,116,58,32]);;
            formatValue_3254800998(fmtRes_3254800997, 0, newParent_3254800991, []);
            log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254800997[0], NTI33554449)]);
            if ((newParent_3254800991.node == temp_3254800990.node)) {
            break Label1;
            }
            
            if (isAtEndOfLastCellOfNode_3254800656(newParent_3254800991)) {
            if (canHaveSiblings_3271567524(newParent_3254800991.node)) {
            result_3254800988 = nimCopy(result_3254800988, insertAfterNode_3254800883(self_3254800985, newParent_3254800991.node), NTI3271561483);
            break BeforeRet;
            }
            
            temp_3254800990 = nimCopy(temp_3254800990, newParent_3254800991, NTI3254779907);
            break Label3;
            }
            
            if (isAtBeginningOfFirstCellOfNode_3254800649(newParent_3254800991)) {
            if (canHaveSiblings_3271567524(newParent_3254800991.node)) {
            result_3254800988 = nimCopy(result_3254800988, insertBeforeNode_3254800782(self_3254800985, newParent_3254800991.node), NTI3271561483);
            break BeforeRet;
            }
            
            temp_3254800990 = nimCopy(temp_3254800990, newParent_3254800991, NTI3254779907);
            break Label3;
            }
            
            break Label1;
          };
        }
    };
    var cell_3254801012 = targetCell_3254780021(cursor_3254800986);
    var i_3254801013 = 0;
    var originalNode_3254801014 = cell_3254801012.node;
    var ok_3254801015 = false;
    var addBefore_3254801016 = true;
    var candidate_3254801083 = [getSelfOrNextLeafWhere_3254795805(cell_3254801012, HEX3Aanonymous_3254801017)];
    if (((!(ok_3254801015) || isNone_3338666896(candidate_3254801083[0])) && !(canHaveSiblings_3271567524(originalNode_3254801014)))) {
    rawEcho([115,101,97,114,99,104,32,111,117,116,115,105,100,101]);
    candidate_3254801083[0] = nimCopy(candidate_3254801083[0], getSelfOrNextLeafWhere_3254795805(cell_3254801012, HEX3Aanonymous_3254801091), NTI3271564556);
    }
    
    var fmtRes_3254801146 = [mnewString(0)];
    fmtRes_3254801146[0].push.apply(fmtRes_3254801146[0], [111,107,58,32]);;
    formatValue_2785018306(fmtRes_3254801146, 0, ok_3254801015, []);
    fmtRes_3254801146[0].push.apply(fmtRes_3254801146[0], [44,32,97,100,100,66,101,102,111,114,101,58,32]);;
    formatValue_2785018306(fmtRes_3254801146, 0, addBefore_3254801016, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254801146[0], NTI33554449)]);
    if ((ok_3254801015 && isSome_3338666868(candidate_3254801083[0]))) {
    if (addBefore_3254801016) {
    result_3254800988 = nimCopy(result_3254800988, insertBeforeNode_3254800782(self_3254800985, (Temporary4 = get_3254795554(candidate_3254801083[0]), Temporary4)[0][Temporary4[1]].node), NTI3271561483);
    break BeforeRet;
    }
    else {
      result_3254800988 = nimCopy(result_3254800988, insertAfterNode_3254800883(self_3254800985, (Temporary5 = get_3254795554(candidate_3254801083[0]), Temporary5)[0][Temporary5[1]].node), NTI3271561483);
      break BeforeRet;
    }
    
    }
    
    if (canHaveSiblings_3271567524(originalNode_3254801014)) {
    if (addBefore_3254801016) {
    result_3254800988 = nimCopy(result_3254800988, insertBeforeNode_3254800782(self_3254800985, originalNode_3254801014), NTI3271561483);
    break BeforeRet;
    }
    else {
      result_3254800988 = nimCopy(result_3254800988, insertAfterNode_3254800883(self_3254800985, originalNode_3254801014), NTI3271561483);
      break BeforeRet;
    }
    
    }
    
    result_3254800988 = nimCopy(result_3254800988, none_3271565970(), NTI3271561483);
    break BeforeRet;
  };

  return result_3254800988;

}

function createNewNode_3254801205(self_3254801206) {
      var Temporary2;

  BeforeRet: {
    try {
    if (!((cursor_3254784719(self_3254801206).firstIndex == cursor_3254784719(self_3254801206).lastIndex))) {
    break BeforeRet;
    }
    
    rawEcho([99,114,101,97,116,101,78,101,119,78,111,100,101]);
      var oHEX60gensym575_3254801209 = createNewNodeAt_3254800984(self_3254801206, cursor_3254784719(self_3254801206));
      if (!isSome_3338667398(oHEX60gensym575_3254801209)) Temporary2 = false; else {        var newNode_3254801232 = get_3338667418(oHEX60gensym575_3254801209);
        Temporary2 = true;      }    if (Temporary2) {
    rebuildCells_3254780235(self_3254801206);
    cursorHEX3D_3254784731(self_3254801206, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254801206, newNode_3254801232)));
    rawEcho(HEX24_3254779978(cursor_3254784719(self_3254801206)));
    }
    
    markDirty_2415919143(self_3254801206);
    } finally {
    finishTransaction_3254785533(self_3254801206.document, true);
    }
  };

  
}

function createNewNodeJsWrapper_3254801202(self_3254801275) {
    createNewNode_3254801205(self_3254801275);

  
}
editor_model_prototype.createNewNode = function() { return (createNewNodeJsWrapper_3254801202(this));};

function replaceText_3338666409(cell_3338666410, slice_3338666412, text_3338666413) {
  var result_3338666414 = 0;

  BeforeRet: {
    var newText_3338666415 = [currentText_3338666034(cell_3338666410)];
    if ((slice_3338666412.a < slice_3338666412.b)) {
    delete_855639365(newText_3338666415, 0, HEX2EHEX2E_805306418(slice_3338666412.a, subInt(slice_3338666412.b, 1)));
    }
    
    insert_33557745(newText_3338666415, 0, text_3338666413, chckRange(slice_3338666412.a, 0, 2147483647));
    setText_3338666033(cell_3338666410, newText_3338666415[0], slice_3338666412);
    result_3338666414 = addInt(slice_3338666412.a, (text_3338666413).length);
    break BeforeRet;
  };

  return result_3338666414;

}

function getSubstitutionTarget_3254785229(cell_3254785230) {
  var result_3254785231 = {Field0: null, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: 0};

  BeforeRet: {
    if (isObj(cell_3254785230.m_type, NTI3338665999)) {
    var colontmp__3254801408 = cell_3254785230.node;
    var colontmp__3254801409 = nimCopy(null, cell_3254785230.role, NTI2046820355);
    var colontmp__3254801410 = 0;
    result_3254785231 = nimCopy(result_3254785231, {Field0: colontmp__3254801408, Field1: nimCopy(null, colontmp__3254801409, NTI2046820355), Field2: colontmp__3254801410}, NTI3254782593);
    break BeforeRet;
    }
    
    var colontmp__3254801411 = cell_3254785230.node.parent;
    var colontmp__3254801412 = nimCopy(null, cell_3254785230.node.role, NTI2046820355);
    var colontmp__3254801413 = index_3271567587(cell_3254785230.node);
    result_3254785231 = nimCopy(result_3254785231, {Field0: colontmp__3254801411, Field1: nimCopy(null, colontmp__3254801412, NTI2046820355), Field2: colontmp__3254801413}, NTI3254782593);
    break BeforeRet;
  };

  return result_3254785231;

}

function languages_3271557504(selfHEX60gensym12_3271557505) {
  var result_3271557506 = [];

  BeforeRet: {
    result_3271557506 = nimCopy(null, selfHEX60gensym12_3271557505.languages, NTI3271557224);
    break BeforeRet;
  };

  return result_3271557506;

}

function forEachChildClass_3271561045(self_3271561046, base_3271561047, handler_3271561050) {
      var Temporary2;

    handler_3271561050(base_3271561047);
    if (contains_3271559394(self_3271561046.childClasses, base_3271561047.id)) {
    Label1: {
      var c_3271561159 = null;
      var colontmp__3254801415 = [];
      colontmp__3254801415 = (Temporary2 = HEX5BHEX5D_3271560772(self_3271561046.childClasses, base_3271561047.id), Temporary2)[0][Temporary2[1]];
      var i_3254801416 = 0;
      var L_3254801417 = (colontmp__3254801415).length;
      Label3: {
          Label4: while (true) {
          if (!(i_3254801416 < L_3254801417)) break Label4;
            c_3271561159 = colontmp__3254801415[chckIndx(i_3254801416, 0, (colontmp__3254801415).length - 1)];
            forEachChildClass_3271561045(self_3271561046, c_3271561159, handler_3271561050);
            i_3254801416 = addInt(i_3254801416, 1);
            if (!(((colontmp__3254801415).length == L_3254801417))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function references_3271557470(selfHEX60gensym9_3271557471) {
  var result_3271557472 = [];

  BeforeRet: {
    result_3271557472 = nimCopy(null, selfHEX60gensym9_3271557471.references, NTI3271557147);
    break BeforeRet;
  };

  return result_3271557472;

}

function getLanguageForClass_3271561749(model_3271561750, classId_3271561751) {
  var result_3271561752 = null;

  BeforeRet: {
    result_3271561752 = getOrDefault_3271561230(model_3271561750.classesToLanguages, classId_3271561751, null);
    break BeforeRet;
  };

  return result_3271561752;

}

function resolveClass_3271561673(language_3271561674, classId_3271561675) {
  var result_3271561676 = null;

  BeforeRet: {
    result_3271561676 = getOrDefault_3271561603(language_3271561674.classes, classId_3271561675, null);
    break BeforeRet;
  };

  return result_3271561676;

}

function isSubclassOf_3271566117(self_3271566118, baseClassId_3271566119) {
  var result_3271566120 = false;

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(self_3271566118.id, baseClassId_3271566119)) {
    result_3271566120 = true;
    break BeforeRet;
    }
    
    if ((!((self_3271566118.base == null)) && isSubclassOf_3271566117(self_3271566118.base, baseClassId_3271566119))) {
    result_3271566120 = true;
    break BeforeRet;
    }
    
    Label1: {
      var i_3271566127 = null;
      var i_3254801426 = 0;
      var L_3254801427 = (self_3271566118.interfaces).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801426 < L_3254801427)) break Label3;
            i_3271566127 = self_3271566118.interfaces[chckIndx(i_3254801426, 0, (self_3271566118.interfaces).length - 1)];
            if (isSubclassOf_3271566117(i_3271566127, baseClassId_3271566119)) {
            result_3271566120 = true;
            break BeforeRet;
            }
            
            i_3254801426 = addInt(i_3254801426, 1);
            if (!(((self_3271566118.interfaces).length == L_3254801427))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3271566120 = false;
    break BeforeRet;
  };

  return result_3271566120;

}

function none_3271566819() {
  var result_3271566826 = ({val: ({kind: 0, intValue: 0, stringValue: [], boolValue: false}), has: false});

  return result_3271566826;

}

function some_3271566831(val_3271566833) {
  var result_3271566834 = ({val: ({kind: 0, intValue: 0, stringValue: [], boolValue: false}), has: false});

    result_3271566834.has = true;
    result_3271566834.val = nimCopy(result_3271566834.val, val_3271566833, NTI3271557124);

  return result_3271566834;

}

function property_3271566810(node_3271566811, role_3271566812) {
  var result_3271566818 = ({val: ({kind: 0, intValue: 0, stringValue: [], boolValue: false}), has: false});

    result_3271566818 = nimCopy(result_3271566818, none_3271566819(), NTI3271562257);
    Label1: {
      var c_3271566830 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({kind: 0, intValue: 0, stringValue: [], boolValue: false})};
      var i_3254801430 = 0;
      var L_3254801431 = (node_3271566811.properties).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801430 < L_3254801431)) break Label3;
            c_3271566830 = node_3271566811.properties[chckIndx(i_3254801430, 0, (node_3271566811.properties).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566830.Field0, role_3271566812)) {
            result_3271566818 = nimCopy(result_3271566818, some_3271566831(c_3271566830.Field1), NTI3271562257);
            break Label1;
            }
            
            i_3254801430 = addInt(i_3254801430, 1);
            if (!(((node_3271566811.properties).length == L_3254801431))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3271566818;

}

function isSome_3338666595(self_3338666597) {
  var result_3338666598 = false;

    result_3338666598 = self_3338666597.has;

  return result_3338666598;

}

function isNone_3338666620(self_3338666622) {
  var result_3338666623 = false;

    result_3338666623 = !(self_3338666622.has);

  return result_3338666623;

}

function get_3338666612(self_3338666614) {
  var result_3338666615 = ({kind: 0, intValue: 0, stringValue: [], boolValue: false});

    if (isNone_3338666620(self_3338666614)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3338666615 = self_3338666614.val;

  return result_3338666615;

}

function getSubstitutionsForClass_3254785248(self_3254785249, targetCell_3254785250, class_3254785251, addCompletion_3254785254) {
    var Temporary1;
            
function HEX3Aanonymous_3254785270(nHEX60gensym55_3254785271) {
                var Temporary1;
                  var Temporary2;
                var Temporary3;

                var n_3254785272 = nHEX60gensym55_3254785271;
                var nClass_3254785273 = resolveClass_3271561673(language_3254785260, n_3254785272.class);
                if (isSubclassOf_3271566117(nClass_3254785273, refClass_3254785261.id)) {
                  var oHEX60gensym56_3254785276 = property_3271566810(n_3254785272, IdINamedName_2986344492);
                  if (!isSome_3338666595(oHEX60gensym56_3254785276)) Temporary2 = false; else {                    var name_3254785299 = nimCopy(null, get_3338666612(oHEX60gensym56_3254785276), NTI3271557124);
                    Temporary2 = true;                  }                if (Temporary2) {
                var Temporary3 = name_3254785299;
                if (ConstSet246[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3271557123)); }
                Temporary1 = Temporary3.stringValue;
                }
                else {
                Temporary1 = HEX24_2046820617(n_3254785272.id);
                }
                
                var name_3254785300 = nimCopy(null, Temporary1, NTI33554449);
                addCompletion_3254785254({kind: 1, name: nimCopy(null, name_3254785300, NTI33554449), class: class_3254785251, referenceRole: nimCopy(null, desc_3254785259.id, NTI2046820355), referenceTarget: n_3254785272, parent: parent_3254785262, role: nimCopy(null, role_3254785263, NTI2046820355), index: index_3254785264});
                }
                

              
            }

  var result_3254785255 = false;

  BeforeRet: {
    if (((references_3271557470(class_3254785251)).length == 1)) {
    var desc_3254785259 = nimCopy(null, (Temporary1 = references_3271557470(class_3254785251), Temporary1)[chckIndx(0, 0, (Temporary1).length - 1)], NTI3271557128);
    var language_3254785260 = getLanguageForClass_3271561749(self_3254785249.document.model, desc_3254785259.class);
    var refClass_3254785261 = resolveClass_3271561673(language_3254785260, desc_3254785259.class);
    var colontmp__3254801424 = getSubstitutionTarget_3254785229(targetCell_3254785250);
    var parent_3254785262 = colontmp__3254801424["Field0"];
    var role_3254785263 = nimCopy(null, colontmp__3254801424["Field1"], NTI2046820355);
    var index_3254785264 = colontmp__3254801424["Field2"];
    Label2: {
      var node_3254785268 = null;
      var colontmp__3254801420 = [];
      colontmp__3254801420 = rootNodes_3271557492(self_3254785249.document.model);
      var i_3254801421 = 0;
      var L_3254801422 = (colontmp__3254801420).length;
      Label3: {
          Label4: while (true) {
          if (!(i_3254801421 < L_3254801422)) break Label4;
            node_3254785268 = colontmp__3254801420[chckIndx(i_3254801421, 0, (colontmp__3254801420).length - 1)];
            forEach_3271557910(node_3254785268, HEX3Aanonymous_3254785270);
            i_3254801421 = addInt(i_3254801421, 1);
            if (!(((colontmp__3254801420).length == L_3254801422))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    result_3254785255 = false;
    break BeforeRet;
  };

  return result_3254785255;

}

function alias_3271557413(selfHEX60gensym2_3271557414) {
  var result_3271557415 = [];

  BeforeRet: {
    result_3271557415 = nimCopy(null, selfHEX60gensym2_3271557414.alias, NTI33554449);
    break BeforeRet;
  };

  return result_3271557415;

}

function updateCompletions_3254780255(self_3254780256) {
            
function HEX3Aanonymous_3254785485(childClass_3254785486) {
                  
function HEX3Aanonymous_3254785487(c_3254785490) {
                      var Temporary1 = nimCopy(null, c_3254785490, NTI3254779958);
                      self_3254780256.unfilteredCompletions.push(Temporary1);;

                    
                  }
                var Temporary1;

              BeforeRet: {
                if (getSubstitutionsForClass_3254785248(self_3254780256, targetCell_3254785443, childClass_3254785486, HEX3Aanonymous_3254785487)) {
                break BeforeRet;
                }
                
                if ((isAbstract_3271557440(childClass_3254785486) || isInterface_3271557443(childClass_3254785486))) {
                break BeforeRet;
                }
                
                if ((0 < (alias_3271557413(childClass_3254785486)).length)) {
                Temporary1 = alias_3271557413(childClass_3254785486);
                }
                else {
                Temporary1 = name_3271557410(childClass_3254785486);
                }
                
                var name_3254785497 = nimCopy(null, Temporary1, NTI33554449);
                self_3254780256.unfilteredCompletions.push({kind: 0, name: nimCopy(null, name_3254785497, NTI33554449), class: childClass_3254785486, parent: parent_3254785457, role: nimCopy(null, role_3254785458, NTI2046820355), index: index_3254785459, referenceRole: ({padding: 0, time: 0, fuzz: 0, count: 0}), referenceTarget: null});;
              };

              
            }

  BeforeRet: {
    if (self_3254780256.unfilteredCompletions.length < 0) { for (var i = self_3254780256.unfilteredCompletions.length ; i < 0 ; ++i) self_3254780256.unfilteredCompletions.push(({parent: null, role: ({padding: 0, time: 0, fuzz: 0, count: 0}), index: 0, class: null, name: [], kind: 0, referenceRole: ({padding: 0, time: 0, fuzz: 0, count: 0}), referenceTarget: null})); }
               else { self_3254780256.unfilteredCompletions.length = 0; };
    var targetCell_3254785443 = targetCell_3254780021(cursor_3254784719(self_3254780256));
    if ((isObj(targetCell_3254785443.m_type, NTI3338665993) || isObj(targetCell_3254785443.m_type, NTI3338665996))) {
    refilterCompletions_3254780259(self_3254780256);
    break BeforeRet;
    }
    
    var colontmp__3254801407 = getSubstitutionTarget_3254785229(targetCell_3254785443);
    var parent_3254785457 = colontmp__3254801407["Field0"];
    var role_3254785458 = nimCopy(null, colontmp__3254801407["Field1"], NTI2046820355);
    var index_3254785459 = colontmp__3254801407["Field2"];
    var node_3254785460 = cursor_3254784719(self_3254780256).node;
    var parentClass_3254785461 = nodeClass_3271557904(parent_3254785457);
    var childDesc_3254785477 = nimCopy(null, get_3271566344(nodeChildDescription_3271566272(parentClass_3254785461, role_3254785458)), NTI3271557127);
    var model_3254785478 = node_3254785460.model;
    var desc_3254785479 = nimCopy(null, childDesc_3254785477, NTI3271557127);
    var slotClass_3254785480 = resolveClass_3271561160(model_3254785478, desc_3254785479.class);
    Label1: {
      var language_3254785484 = null;
      var colontmp__3254801402 = [];
      colontmp__3254801402 = languages_3271557504(model_3254785478);
      var i_3254801404 = 0;
      var L_3254801405 = (colontmp__3254801402).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801404 < L_3254801405)) break Label3;
            language_3254785484 = colontmp__3254801402[chckIndx(i_3254801404, 0, (colontmp__3254801402).length - 1)];
            forEachChildClass_3271561045(language_3254785484, slotClass_3254785480, HEX3Aanonymous_3254785485);
            i_3254801404 = addInt(i_3254801404, 1);
            if (!(((colontmp__3254801402).length == L_3254801405))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    refilterCompletions_3254780259(self_3254780256);
    markDirty_2415919143(self_3254780256);
  };

  
}

function completionsLen_3254785527(self_3254785528) {
  var result_3254785529 = 0;

  BeforeRet: {
    if (!(self_3254785528.hasCompletions)) {
    updateCompletions_3254780255(self_3254785528);
    }
    
    result_3254785529 = (self_3254785528.filteredCompletions).length;
    break BeforeRet;
  };

  return result_3254785529;

}

function getCompletion_3254785520(self_3254785521, index_3254785522) {
  var result_3254785523 = ({parent: null, role: ({padding: 0, time: 0, fuzz: 0, count: 0}), index: 0, class: null, name: [], kind: 0, referenceRole: ({padding: 0, time: 0, fuzz: 0, count: 0}), referenceTarget: null});

  BeforeRet: {
    if (!(self_3254785521.hasCompletions)) {
    updateCompletions_3254780255(self_3254785521);
    }
    
    result_3254785523 = nimCopy(result_3254785523, self_3254785521.filteredCompletions[chckIndx(index_3254785522, 0, (self_3254785521.filteredCompletions).length - 1)], NTI3254779958);
    break BeforeRet;
  };

  return result_3254785523;

}

function insertTextAtCursor_3254780241(self_3254780242, input_3254780243) {
      var Temporary2;

  var result_3254801321 = false;

  BeforeRet: {
    try {
      var oHEX60gensym585_3254801324 = getTargetCell_3254780237(cursor_3254784719(self_3254780242), true);
      if (!isSome_3338666868(oHEX60gensym585_3254801324)) Temporary2 = false; else {        var cell_3254801347 = get_3338666888(oHEX60gensym585_3254801324);
        Temporary2 = true;      }    if (Temporary2) {
    if (cell_3254801347.disableEditing) {
    result_3254801321 = false;
    break BeforeRet;
    }
    
    var newColumn_3254801348 = replaceText_3338666409(cell_3254801347, orderedRange_3254780012(cursor_3254784719(self_3254780242)), input_3254780243);
    if (!((newColumn_3254801348 == cursor_3254784719(self_3254780242).lastIndex))) {
    columnHEX3D_3254780009(self_3254780242.mCursor, newColumn_3254801348);
    if (((self_3254780242.unfilteredCompletions).length == 0)) {
    updateCompletions_3254780255(self_3254780242);
    }
    else {
    refilterCompletions_3254780259(self_3254780242);
    }
    
    if (((!(self_3254780242.showCompletions) && (completionsLen_3254785527(self_3254780242) == 1)) && eqStrings(getCompletion_3254785520(self_3254780242, 0).name, currentText_3338666034(cell_3254801347)))) {
    applySelectedCompletion_3254780253(self_3254780242);
    }
    
    markDirty_2415919143(self_3254780242);
    result_3254801321 = true;
    break BeforeRet;
    }
    
    }
    
    result_3254801321 = false;
    break BeforeRet;
    } finally {
    finishTransaction_3254785533(self_3254780242.document, true);
    }
  };

  return result_3254801321;

}

function insertTextAtCursorJsWrapper_3254801315(self_3254801381, input_3254801382) {
  var result_3254801383 = false;

    result_3254801383 = insertTextAtCursor_3254780241(self_3254801381, input_3254801382);

  return result_3254801383;

}
editor_model_prototype.insertTextAtCursor = function(input_ /* : string */) { return (insertTextAtCursorJsWrapper_3254801315(this, input_ == undefined ? undefined : cstrToNimstr(input_)));};

function pop_3254785705(s_3254785707, s_3254785707_Idx) {
  var result_3254785708 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), operations: []});

    var L_3254785712 = subInt((s_3254785707[s_3254785707_Idx]).length, 1);
    result_3254785708 = nimCopy(result_3254785708, s_3254785707[s_3254785707_Idx][chckIndx(L_3254785712, 0, (s_3254785707[s_3254785707_Idx]).length - 1)], NTI3254779955);
    if (s_3254785707[s_3254785707_Idx].length < chckRange(L_3254785712, 0, 2147483647)) { for (var i = s_3254785707[s_3254785707_Idx].length ; i < chckRange(L_3254785712, 0, 2147483647) ; ++i) s_3254785707[s_3254785707_Idx].push(({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), operations: []})); }
               else { s_3254785707[s_3254785707_Idx].length = chckRange(L_3254785712, 0, 2147483647); };

  return result_3254785708;

}

function formatValue_3254780172(result_3254780174, result_3254780174_Idx, value_3254780175, specifier_3254780176) {
    formatValue_721420459(result_3254780174, result_3254780174_Idx, reprEnum(value_3254780175, NTI3254779953), specifier_3254780176);

  
}

function formatValue_3254780180(result_3254780182, result_3254780182_Idx, value_3254780183, specifier_3254780184) {
    formatValue_721420459(result_3254780182, result_3254780182_Idx, HEX24_3271571030(value_3254780183), specifier_3254780184);

  
}

function HEX24_3254780164(op_3254780165) {
  var result_3254780166 = [];

    var fmtRes_3254780171 = [mnewString(0)];
    formatValue_3254780172(fmtRes_3254780171, 0, op_3254780165.kind, []);
    fmtRes_3254780171[0].push.apply(fmtRes_3254780171[0], [44,32,39]);;
    formatValue_3254780180(fmtRes_3254780171, 0, op_3254780165.value, []);
    fmtRes_3254780171[0].push.apply(fmtRes_3254780171[0], [39]);;
    result_3254780166 = nimCopy(null, fmtRes_3254780171[0], NTI33554449);
    if (!(HEX3DHEX3D_2046820626(op_3254780165.id, null_2046820646))) {
    var fmtRes_3254780192 = [mnewString(0)];
    fmtRes_3254780192[0].push.apply(fmtRes_3254780192[0], [44,32,105,100,32,61,32]);;
    formatValue_3036676344(fmtRes_3254780192, 0, op_3254780165.id, []);
    result_3254780166.push.apply(result_3254780166, fmtRes_3254780192[0]);;
    }
    
    if (!((op_3254780165.node == null))) {
    var fmtRes_3254780206 = [mnewString(0)];
    fmtRes_3254780206[0].push.apply(fmtRes_3254780206[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_3338666719(fmtRes_3254780206, 0, op_3254780165.node, []);
    result_3254780166.push.apply(result_3254780166, fmtRes_3254780206[0]);;
    }
    
    if (!((op_3254780165.parent == null))) {
    var fmtRes_3254780220 = [mnewString(0)];
    fmtRes_3254780220[0].push.apply(fmtRes_3254780220[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_3338666719(fmtRes_3254780220, 0, op_3254780165.parent, []);
    fmtRes_3254780220[0].push.apply(fmtRes_3254780220[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2701131945(fmtRes_3254780220, 0, op_3254780165.idx, []);
    result_3254780166.push.apply(result_3254780166, fmtRes_3254780220[0]);;
    }
    

  return result_3254780166;

}

function addQuoted_3254785882(s_3254785884, s_3254785884_Idx, x_3254785885) {
    s_3254785884[s_3254785884_Idx].push.apply(s_3254785884[s_3254785884_Idx], HEX24_3254780164(x_3254785885));;

  
}

function collectionToString_3254785843(x_3254785845, prefix_3254785846, separator_3254785847, suffix_3254785848) {
  var result_3254785849 = [[]];

    result_3254785849[0] = nimCopy(null, prefix_3254785846, NTI33554449);
    var firstElement_3254785850 = true;
    Label1: {
      var value_3254785872 = null;
      var i_3254801890 = 0;
      var L_3254801891 = (x_3254785845).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801890 < L_3254801891)) break Label3;
            value_3254785872 = x_3254785845[i_3254801890];
            if (firstElement_3254785850) {
            firstElement_3254785850 = false;
            }
            else {
            result_3254785849[0].push.apply(result_3254785849[0], separator_3254785847);;
            }
            
            if ((value_3254785872 == null)) {
            result_3254785849[0].push.apply(result_3254785849[0], [110,105,108]);;
            }
            else {
            addQuoted_3254785882(result_3254785849, 0, value_3254785872);
            }
            
            i_3254801890 += 1;
            if (!(((x_3254785845).length == L_3254801891))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254785849[0].push.apply(result_3254785849[0], suffix_3254785848);;

  return result_3254785849[0];

}

function HEX24_3254785839(x_3254785841) {
  var result_3254785842 = [];

    result_3254785842 = nimCopy(null, collectionToString_3254785843(x_3254785841, [64,91], [44,32], [93]), NTI33554449);

  return result_3254785842;

}

function addQuoted_3254785833(s_3254785835, s_3254785835_Idx, x_3254785836) {
    s_3254785835[s_3254785835_Idx].push.apply(s_3254785835[s_3254785835_Idx], HEX24_3254785839(x_3254785836));;

  
}

function HEX24_3254785728(x_3254785730) {
  var result_3254785731 = [[]];

    result_3254785731[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym67_3254785742 = 0;
    if ((0 < countHEX60gensym67_3254785742)) {
    result_3254785731[0].push.apply(result_3254785731[0], [44,32]);;
    }
    
    result_3254785731[0].push.apply(result_3254785731[0], [105,100]);;
    result_3254785731[0].push.apply(result_3254785731[0], [58,32]);;
    countHEX60gensym67_3254785742 += 1;
    addQuoted_3019905691(result_3254785731, 0, x_3254785730.id);
    if ((0 < countHEX60gensym67_3254785742)) {
    result_3254785731[0].push.apply(result_3254785731[0], [44,32]);;
    }
    
    result_3254785731[0].push.apply(result_3254785731[0], [111,112,101,114,97,116,105,111,110,115]);;
    result_3254785731[0].push.apply(result_3254785731[0], [58,32]);;
    countHEX60gensym67_3254785742 += 1;
    addQuoted_3254785833(result_3254785731, 0, x_3254785730.operations);
    result_3254785731[0].push.apply(result_3254785731[0], [41]);;

  return result_3254785731[0];

}

function formatValue_3254785723(result_3254785725, result_3254785725_Idx, value_3254785726, specifier_3254785727) {
    formatValue_721420459(result_3254785725, result_3254785725_Idx, HEX24_3254785728(value_3254785726), specifier_3254785727);

  
}

function some_3254785898(val_3254785900) {
  var result_3254785901 = ({val: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null}, has: false});

    result_3254785901.has = true;
    result_3254785901.val = nimCopy(result_3254785901.val, val_3254785900, NTI3254782867);

  return result_3254785901;

}

function invoke_3271557763(event_3271557765, arg_3271557766) {
    Label1: {
      var h_3271557789 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_3254801899 = 0;
      var L_3254801900 = (event_3271557765.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801899 < L_3254801900)) break Label3;
            h_3271557789 = event_3271557765.handlers[chckIndx(i_3254801899, 0, (event_3271557765.handlers).length - 1)];
            h_3271557789.Field1(arg_3271557766);
            i_3254801899 = addInt(i_3254801899, 1);
            if (!(((event_3271557765.handlers).length == L_3254801900))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function notifyNodePropertyChanged_3271557733(self_3271557734, node_3271557735, role_3271557736, oldValue_3271557737, newValue_3271557738, slice_3271557740) {
    invoke_3271557763(self_3271557734.onNodePropertyChanged, {Field0: self_3271557734, Field1: node_3271557735, Field2: nimCopy(null, role_3271557736, NTI2046820355), Field3: nimCopy(null, oldValue_3271557737, NTI3271557124), Field4: nimCopy(null, newValue_3271557738, NTI3271557124), Field5: nimCopy(null, slice_3271557740, NTI805306392)});

  
}

function setProperty_3271566852(node_3271566853, role_3271566854, value_3271566855, slice_3271566862) {
    Label1: {
      var c_3271566884 = null;
      var i_3254801894 = 0;
      var L_3254801895 = (node_3271566853.properties).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801894 < L_3254801895)) break Label3;
            c_3271566884 = node_3271566853.properties[chckIndx(i_3254801894, 0, (node_3271566853.properties).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566884.Field0, role_3271566854)) {
            if (!((node_3271566853.model == null))) {
            notifyNodePropertyChanged_3271557733(node_3271566853.model, node_3271566853, role_3271566854, c_3271566884.Field1, value_3271566855, slice_3271566862);
            }
            
            c_3271566884.Field1 = nimCopy(c_3271566884.Field1, value_3271566855, NTI3271557124);
            break Label1;
            }
            
            i_3254801894 = addInt(i_3254801894, 1);
            if (!(((node_3271566853.properties).length == L_3254801895))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3271557854(event_3271557856, arg_3271557857) {
    Label1: {
      var h_3271557880 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_3254801908 = 0;
      var L_3254801909 = (event_3271557856.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801908 < L_3254801909)) break Label3;
            h_3271557880 = event_3271557856.handlers[chckIndx(i_3254801908, 0, (event_3271557856.handlers).length - 1)];
            h_3271557880.Field1(arg_3271557857);
            i_3254801908 = addInt(i_3254801908, 1);
            if (!(((event_3271557856.handlers).length == L_3254801909))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function notifyNodeReferenceChanged_3271557826(self_3271557827, node_3271557828, role_3271557829, oldRef_3271557830, newRef_3271557831) {
    invoke_3271557854(self_3271557827.onNodeReferenceChanged, {Field0: self_3271557827, Field1: node_3271557828, Field2: nimCopy(null, role_3271557829, NTI2046820355), Field3: nimCopy(null, oldRef_3271557830, NTI2046820355), Field4: nimCopy(null, newRef_3271557831, NTI2046820355)});

  
}

function setReference_3271566718(node_3271566719, role_3271566720, target_3271566721) {
    Label1: {
      var c_3271566743 = null;
      var i_3254801903 = 0;
      var L_3254801904 = (node_3271566719.references).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254801903 < L_3254801904)) break Label3;
            c_3271566743 = node_3271566719.references[chckIndx(i_3254801903, 0, (node_3271566719.references).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566743.Field0, role_3271566720)) {
            if (!((node_3271566719.model == null))) {
            notifyNodeReferenceChanged_3271557826(node_3271566719.model, node_3271566719, role_3271566720, c_3271566743.Field1, target_3271566721);
            }
            
            c_3271566743.Field1 = nimCopy(c_3271566743.Field1, target_3271566721, NTI2046820355);
            break Label1;
            }
            
            i_3254801903 = addInt(i_3254801903, 1);
            if (!(((node_3271566719.references).length == L_3254801904))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function reverseModelOperation_3254785690(self_3254785691, op_3254785692) {
    switch (op_3254785692.kind) {
    case 0:
      insert_3271567638(op_3254785692.parent, op_3254785692.role, op_3254785692.idx, op_3254785692.node);
      break;
    case 2:
      remove_3271567752(op_3254785692.parent, op_3254785692.node);
      break;
    case 3:
      setProperty_3271566852(op_3254785692.node, op_3254785692.role, op_3254785692.value, HEX2EHEX2E_805306418(0, 0));
      break;
    case 4:
      setReference_3271566718(op_3254785692.node, op_3254785692.role, op_3254785692.id);
      break;
    default: 
      break;
    }

  
}

function finishRedoTransaction_3254785647(self_3254785648, clearUndoList_3254785649) {
    if (HEX3DHEX3D_2046820626(self_3254785648.currentTransaction.id, idNone_2046820633())) {
    self_3254785648.currentTransaction.id = nimCopy(self_3254785648.currentTransaction.id, newId_2046820597(), NTI2046820355);
    }
    
    if ((0 < (self_3254785648.currentTransaction.operations).length)) {
    var Temporary1 = nimCopy(null, self_3254785648.currentTransaction, NTI3254779955);
    self_3254785648.redoList.push(Temporary1);;
    if (clearUndoList_3254785649) {
    if (self_3254785648.undoList.length < 0) { for (var i = self_3254785648.undoList.length ; i < 0 ; ++i) self_3254785648.undoList.push(({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), operations: []})); }
               else { self_3254785648.undoList.length = 0; };
    }
    
    invoke_3254785573(self_3254785648.onFinishedRedoTransaction, {Field0: self_3254785648, Field1: nimCopy(null, self_3254785648.redoList[chckIndx((self_3254785648.redoList).length - 1, 0, (self_3254785648.redoList).length - 1)], NTI3254779955)});
    }
    
    self_3254785648.currentTransaction = nimCopy(self_3254785648.currentTransaction, {id: newId_2046820597(), operations: []}, NTI3254779955);

  
}

function undo_3254785693(self_3254785694) {
  var result_3254785700 = ({val: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null}, has: false});

  BeforeRet: {
    finishTransaction_3254785533(self_3254785694, true);
    if (((self_3254785694.undoList).length == 0)) {
    break BeforeRet;
    }
    
    var t_3254785717 = pop_3254785705(self_3254785694, "undoList");
    var fmtRes_3254785722 = [mnewString(0)];
    fmtRes_3254785722[0].push.apply(fmtRes_3254785722[0], [85,110,100,111,105,110,103,32]);;
    formatValue_3254785723(fmtRes_3254785722, 0, t_3254785717, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3254785722[0], NTI33554449)]);
    Label1: {
      var i_3254785896 = 0;
      var colontmp__3254801885 = 0;
      colontmp__3254801885 = (t_3254785717.operations).length - 1;
      var res_3254801886 = colontmp__3254801885;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_3254801886)) break Label3;
            i_3254785896 = res_3254801886;
            var op_3254785897 = t_3254785717.operations[chckIndx(i_3254785896, 0, (t_3254785717.operations).length - 1)];
            result_3254785700 = nimCopy(result_3254785700, some_3254785898({Field0: nimCopy(null, t_3254785717.id, NTI2046820355), Field1: op_3254785897}), NTI3254782872);
            reverseModelOperation_3254785690(self_3254785694, op_3254785897);
            res_3254801886 = subInt(res_3254801886, 1);
          }
      };
    };
    finishRedoTransaction_3254785647(self_3254785694, false);
  };

  return result_3254785700;

}

function isSome_3254801533(self_3254801535) {
  var result_3254801536 = false;

    result_3254801536 = self_3254801535.has;

  return result_3254801536;

}

function isNone_3254801558(self_3254801560) {
  var result_3254801561 = false;

    result_3254801561 = !(self_3254801560.has);

  return result_3254801561;

}

function get_3254801550(self_3254801552) {
  var result_3254801553 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};

    if (isNone_3254801558(self_3254801552)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3254801553 = self_3254801552.val;

  return result_3254801553;

}

function rawGet_3254786368(t_3254786371, key_3254786372, hc_3254786373, hc_3254786373_Idx) {
  var result_3254786374 = 0;

  BeforeRet: {
    hc_3254786373[hc_3254786373_Idx] = hash_2046820630(key_3254786372);
    if ((hc_3254786373[hc_3254786373_Idx] == 0)) {
    hc_3254786373[hc_3254786373_Idx] = 314159265;
    }
    
    if (((t_3254786371.data).length == 0)) {
    result_3254786374 = -1;
    break BeforeRet;
    }
    
    var h_3254786441 = (hc_3254786373[hc_3254786373_Idx] & (t_3254786371.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254786371.data[chckIndx(h_3254786441, 0, (t_3254786371.data).length - 1)].Field0)) break Label2;
          if (((t_3254786371.data[chckIndx(h_3254786441, 0, (t_3254786371.data).length - 1)].Field0 == hc_3254786373[hc_3254786373_Idx]) && HEX3DHEX3D_2046820626(t_3254786371.data[chckIndx(h_3254786441, 0, (t_3254786371.data).length - 1)].Field1, key_3254786372))) {
          result_3254786374 = h_3254786441;
          break BeforeRet;
          }
          
          h_3254786441 = nextTry_1308622883(h_3254786441, (t_3254786371.data).length - 1);
        }
    };
    result_3254786374 = subInt(-1, h_3254786441);
  };

  return result_3254786374;

}

function hasKey_3254801638(t_3254801641, key_3254801642) {
  var result_3254801643 = false;

    var hc_3254801644 = [0];
    result_3254801643 = (0 <= rawGet_3254786368(t_3254801641, key_3254801642, hc_3254801644, 0));

  return result_3254801643;

}

function contains_3254801632(t_3254801635, key_3254801636) {
  var result_3254801637 = false;

  BeforeRet: {
    result_3254801637 = hasKey_3254801638(t_3254801635, key_3254801636);
    break BeforeRet;
  };

  return result_3254801637;

}

function HEX5BHEX5D_3254801728(t_3254801731, key_3254801732) {
  var result_3254801733 = null;

    var hcHEX60gensym22_3254801734 = [0];
    var indexHEX60gensym22_3254801741 = rawGet_3254786368(t_3254801731, key_3254801732, hcHEX60gensym22_3254801734, 0);
    if ((0 <= indexHEX60gensym22_3254801741)) {
    result_3254801733 = t_3254801731.data[chckIndx(indexHEX60gensym22_3254801741, 0, (t_3254801731.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3254801732);
    }
    

  return result_3254801733;

}

function get_3254801449(self_3254801451, otherwise_3254801452) {
    var Temporary1;

  var result_3254801453 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if (isSome_3254793888(self_3254801451)) {
    Temporary1 = self_3254801451.val;
    }
    else {
    Temporary1 = otherwise_3254801452;
    }
    
    result_3254801453 = nimCopy(result_3254801453, Temporary1, NTI3254779907);

  return result_3254801453;

}

function getFirstPropertyCellOfNode_3254796431(self_3254796432, node_3254796433, role_3254796434) {
      var Temporary1;
      role_3254796434 = nimCopy(null, role_3254796434, NTI2046820355);
      
function HEX3Aanonymous_3254796519(n_3254796522) {
          var Temporary1;

        var result_3254796525 = false;

          if (!((isVisible_3254780273(n_3254796522) && !(n_3254796522.disableEditing)) && isObj(n_3254796522.m_type, NTI3338665996))) Temporary1 = false; else {            Temporary1 = HEX3DHEX3D_2046820626(n_3254796522.property, role_3254796434);          }          result_3254796525 = Temporary1;

        return result_3254796525;

      }

  var result_3254796436 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
    result_3254796436 = nimCopy(result_3254796436, none_3254794843(), NTI3254780132);
    var nodeCell_3254796515 = getOrDefault_3254796101(self_3254796432.nodeToCell, node_3254796433.id);
    if ((nodeCell_3254796515 == null)) {
    break BeforeRet;
    }
    
      var oHEX60gensym278_3254796534 = getSelfOrNextLeafWhere_3254795805(nodeCell_3254796515, HEX3Aanonymous_3254796519);
      if (!isSome_3338666868(oHEX60gensym278_3254796534)) Temporary1 = false; else {        var targetCell_3254796557 = get_3338666888(oHEX60gensym278_3254796534);
        Temporary1 = true;      }    if (Temporary1) {
    result_3254796436 = nimCopy(result_3254796436, some_3254794959(toCursor_3254780264(targetCell_3254796557, true)), NTI3254780132);
    break BeforeRet;
    }
    
  };

  return result_3254796436;

}

function getCursorForOp_3254801433(self_3254801434, op_3254801435) {
        var Temporary1;

  var result_3254801436 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    result_3254801436 = nimCopy(result_3254801436, cursor_3254784719(self_3254801434), NTI3254779907);
    switch (op_3254801435.kind) {
    case 0:
      result_3254801436 = nimCopy(result_3254801436, get_3254801449(getFirstEditableCellOfNode_3254780267(self_3254801434, op_3254801435.node), cursor_3254784719(self_3254801434)), NTI3254779907);
      break BeforeRet;
      break;
    case 2:
      result_3254801436 = nimCopy(result_3254801436, get_3254801449(getFirstEditableCellOfNode_3254780267(self_3254801434, op_3254801435.parent), cursor_3254784719(self_3254801434)), NTI3254779907);
      break BeforeRet;
      break;
    case 3:
        var oHEX60gensym587_3254801479 = getFirstPropertyCellOfNode_3254796431(self_3254801434, op_3254801435.node, op_3254801435.role);
        if (!isSome_3254793888(oHEX60gensym587_3254801479)) Temporary1 = false; else {          var c_3254801502 = nimCopy(null, get_3254786205(oHEX60gensym587_3254801479), NTI3254779907);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254801436 = nimCopy(result_3254801436, c_3254801502, NTI3254779907);
      result_3254801436.firstIndex = op_3254801435.slice.a;
      result_3254801436.lastIndex = op_3254801435.slice.b;
      }
      
      break;
    case 4:
      result_3254801436 = nimCopy(result_3254801436, get_3254801449(getFirstEditableCellOfNode_3254780267(self_3254801434, op_3254801435.node), cursor_3254784719(self_3254801434)), NTI3254779907);
      break BeforeRet;
      break;
    case 1:
      break;
    }
  };

  return result_3254801436;

}

function undo_3254801524(self_3254801525) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

      var oHEX60gensym595_3254801528 = undo_3254785693(self_3254801525.document);
      if (!isSome_3254801533(oHEX60gensym595_3254801528)) Temporary1 = false; else {        var t_3254801573 = nimCopy(null, get_3254801550(oHEX60gensym595_3254801528), NTI3254782867);
        Temporary1 = true;      }    if (Temporary1) {
    rebuildCells_3254780235(self_3254801525);
      if (!contains_3254801632(self_3254801525.transactionCursors, t_3254801573["Field0"])) Temporary2 = false; else {        var oHEX60gensym597_3254801824 = updateCursor_3254796030(self_3254801525, HEX5BHEX5D_3254801728(self_3254801525.transactionCursors, t_3254801573["Field0"]));
        if (!isSome_3254793888(oHEX60gensym597_3254801824)) Temporary3 = false; else {          var newCursor_3254801847 = nimCopy(null, get_3254786205(oHEX60gensym597_3254801824), NTI3254779907);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    cursorHEX3D_3254784731(self_3254801525, newCursor_3254801847);
    }
    else {
    cursorHEX3D_3254784731(self_3254801525, getCursorForOp_3254801433(self_3254801525, t_3254801573["Field1"]));
    }
    
    markDirty_2415919143(self_3254801525);
    }
    

  
}

function undoJsWrapper22_3254801521(self_3254801875) {
    undo_3254801524(self_3254801875);

  
}
editor_model_prototype.undo22 = function() { return (undoJsWrapper22_3254801521(this));};

function redo_3254785930(self_3254785931) {
  var result_3254785933 = ({val: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null}, has: false});

  BeforeRet: {
    finishTransaction_3254785533(self_3254785931, true);
    if (((self_3254785931.redoList).length == 0)) {
    break BeforeRet;
    }
    
    var t_3254785940 = pop_3254785705(self_3254785931, "redoList");
    var fmtRes_3254785945 = [mnewString(0)];
    fmtRes_3254785945[0].push.apply(fmtRes_3254785945[0], [82,101,100,111,105,110,103,32]);;
    formatValue_3254785723(fmtRes_3254785945, 0, t_3254785940, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3254785945[0], NTI33554449)]);
    Label1: {
      var i_3254785959 = 0;
      var colontmp__3254802153 = 0;
      colontmp__3254802153 = (t_3254785940.operations).length - 1;
      var res_3254802154 = colontmp__3254802153;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_3254802154)) break Label3;
            i_3254785959 = res_3254802154;
            var op_3254785960 = t_3254785940.operations[chckIndx(i_3254785959, 0, (t_3254785940.operations).length - 1)];
            result_3254785933 = nimCopy(result_3254785933, some_3254785898({Field0: nimCopy(null, t_3254785940.id, NTI2046820355), Field1: op_3254785960}), NTI3254782872);
            reverseModelOperation_3254785690(self_3254785931, op_3254785960);
            res_3254802154 = subInt(res_3254802154, 1);
          }
      };
    };
    finishTransaction_3254785533(self_3254785931, false);
  };

  return result_3254785933;

}

function redo_3254801917(self_3254801918) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

      var oHEX60gensym605_3254801921 = redo_3254785930(self_3254801918.document);
      if (!isSome_3254801533(oHEX60gensym605_3254801921)) Temporary1 = false; else {        var t_3254801944 = nimCopy(null, get_3254801550(oHEX60gensym605_3254801921), NTI3254782867);
        Temporary1 = true;      }    if (Temporary1) {
    rebuildCells_3254780235(self_3254801918);
      if (!contains_3254801632(self_3254801918.transactionCursors, t_3254801944["Field0"])) Temporary2 = false; else {        var oHEX60gensym606_3254802092 = updateCursor_3254796030(self_3254801918, HEX5BHEX5D_3254801728(self_3254801918.transactionCursors, t_3254801944["Field0"]));
        if (!isSome_3254793888(oHEX60gensym606_3254802092)) Temporary3 = false; else {          var newCursor_3254802115 = nimCopy(null, get_3254786205(oHEX60gensym606_3254802092), NTI3254779907);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    cursorHEX3D_3254784731(self_3254801918, newCursor_3254802115);
    }
    else {
    cursorHEX3D_3254784731(self_3254801918, getCursorForOp_3254801433(self_3254801918, t_3254801944["Field1"]));
    }
    
    markDirty_2415919143(self_3254801918);
    }
    

  
}

function redoJsWrapper22_3254801914(self_3254802143) {
    redo_3254801917(self_3254802143);

  
}
editor_model_prototype.redo22 = function() { return (redoJsWrapper22_3254801914(this));};

function toggleUseDefaultCellBuilder_3254802161(self_3254802162) {
    self_3254802162.useDefaultCellBuilder = !(self_3254802162.useDefaultCellBuilder);
    rebuildCells_3254780235(self_3254802162);
    markDirty_2415919143(self_3254802162);

  
}

function toggleUseDefaultCellBuilderJsWrapper_3254802158(self_3254802190) {
    toggleUseDefaultCellBuilder_3254802161(self_3254802190);

  
}
editor_model_prototype.toggleUseDefaultCellBuilder = function() { return (toggleUseDefaultCellBuilderJsWrapper_3254802158(this));};

function showCompletions_3254802204(self_3254802205) {
    if (self_3254802205.showCompletions) {
    columnHEX3D_3254780009(self_3254802205.mCursor, 0);
    }
    
    updateCompletions_3254780255(self_3254802205);
    self_3254802205.showCompletions = true;
    markDirty_2415919143(self_3254802205);

  
}

function showCompletionsJsWrapper_3254802201(self_3254802233) {
    showCompletions_3254802204(self_3254802233);

  
}
editor_model_prototype.showCompletions = function() { return (showCompletionsJsWrapper_3254802201(this));};

function hideCompletions_3254802247(self_3254802248) {
    if (self_3254802248.unfilteredCompletions.length < 0) { for (var i = self_3254802248.unfilteredCompletions.length ; i < 0 ; ++i) self_3254802248.unfilteredCompletions.push(({parent: null, role: ({padding: 0, time: 0, fuzz: 0, count: 0}), index: 0, class: null, name: [], kind: 0, referenceRole: ({padding: 0, time: 0, fuzz: 0, count: 0}), referenceTarget: null})); }
               else { self_3254802248.unfilteredCompletions.length = 0; };
    self_3254802248.showCompletions = false;
    markDirty_2415919143(self_3254802248);

  
}

function hideCompletionsJsWrapper2_3254802244(self_3254802280) {
    hideCompletions_3254802247(self_3254802280);

  
}
editor_model_prototype.hideCompletions2 = function() { return (hideCompletionsJsWrapper2_3254802244(this));};

function selectPrevCompletion_3254802294(self_3254802295) {
    if ((0 < completionsLen_3254785527(self_3254802295))) {
    if ((self_3254802295.selectedCompletion == 0)) {
    self_3254802295.selectedCompletion = completionsLen_3254785527(self_3254802295);
    }
    else {
      self_3254802295.selectedCompletion = clamp_1660945119(subInt(self_3254802295.selectedCompletion, 1), 0, subInt(completionsLen_3254785527(self_3254802295), 1));
    }
    
    }
    else {
      self_3254802295.selectedCompletion = 0;
    }
    
    self_3254802295.scrollToCompletion = nimCopy(self_3254802295.scrollToCompletion, some_1191184367(self_3254802295.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_3254802295);

  
}

function selectPrevCompletionJsWrapper22_3254802291(self_3254802331) {
    selectPrevCompletion_3254802294(self_3254802331);

  
}
editor_model_prototype.selectPrevCompletion22 = function() { return (selectPrevCompletionJsWrapper22_3254802291(this));};

function selectNextCompletion_3254802345(self_3254802346) {
    if ((0 < completionsLen_3254785527(self_3254802346))) {
    if ((self_3254802346.selectedCompletion == subInt(completionsLen_3254785527(self_3254802346), 1))) {
    self_3254802346.selectedCompletion = 0;
    }
    else {
      self_3254802346.selectedCompletion = clamp_1660945119(addInt(self_3254802346.selectedCompletion, 1), 0, subInt(completionsLen_3254785527(self_3254802346), 1));
    }
    
    }
    else {
      self_3254802346.selectedCompletion = 0;
    }
    
    self_3254802346.scrollToCompletion = nimCopy(self_3254802346.scrollToCompletion, some_1191184367(self_3254802346.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_3254802346);

  
}

function selectNextCompletionJsWrapper22_3254802342(self_3254802382) {
    selectNextCompletion_3254802345(self_3254802382);

  
}
editor_model_prototype.selectNextCompletion22 = function() { return (selectNextCompletionJsWrapper22_3254802342(this));};

function remove_3271568341(node_3271568342, role_3271568343, index_3271568344) {
              
function HEX3Aanonymous_3271568361(nHEX60gensym173_3271568362) {
                  var n_3271568363 = nHEX60gensym173_3271568362;
                  n_3271568363.model = null;
                  del_3271567834(node_3271568342.model.nodes, n_3271568363.id);

                
              }

  BeforeRet: {
    Label1: {
      var children_3271568348 = null;
      var i_3254802472 = 0;
      var L_3254802473 = (node_3271568342.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254802472 < L_3254802473)) break Label3;
            children_3271568348 = node_3271568342.childLists[chckIndx(i_3254802472, 0, (node_3271568342.childLists).length - 1)];
            Label4: {
              if (HEX3DHEX3D_2046820626(children_3271568348.Field0, role_3271568343)) {
              if (((index_3271568344 < 0) || ((children_3271568348.Field1).length <= index_3271568344))) {
              break Label4;
              }
              
              var child_3271568352 = children_3271568348.Field1[chckIndx(index_3271568344, 0, (children_3271568348.Field1).length - 1)];
              if (!((node_3271568342.model == null))) {
              notifyNodeDeleted_3271557608(node_3271568342.model, node_3271568342, child_3271568352, role_3271568343, index_3271568344);
              }
              
              delete_3271567768(children_3271568348, "Field1", chckRange(index_3271568344, 0, 2147483647));
              forEach_3271557910(child_3271568352, HEX3Aanonymous_3271568361);
              break BeforeRet;
              }
              
            };
            i_3254802472 = addInt(i_3254802472, 1);
            if (!(((node_3271568342.childLists).length == L_3254802473))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function applySelectedCompletion_3254780253(self_3254780254) {
      var Temporary2;
      var Temporary3;

    try {
    if ((self_3254780254.selectedCompletion < completionsLen_3254785527(self_3254780254))) {
    var completion_3254802398 = getCompletion_3254785520(self_3254780254, self_3254780254.selectedCompletion);
    var parent_3254802399 = completion_3254802398.parent;
    var role_3254802400 = nimCopy(null, completion_3254802398.role, NTI2046820355);
    var index_3254802401 = completion_3254802398.index;
    switch (completion_3254802398.kind) {
    case 0:
      remove_3271568341(parent_3254802399, role_3254802400, index_3254802401);
      var newNode_3254802402 = newAstNode_3271567013(completion_3254802398.class, none_3271567020());
      insert_3271567638(parent_3254802399, role_3254802400, index_3254802401, newNode_3254802402);
      rebuildCells_3254780235(self_3254780254);
      cursorHEX3D_3254784731(self_3254780254, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254780254, newNode_3254802402)));
      break;
    case 1:
      remove_3271568341(parent_3254802399, role_3254802400, index_3254802401);
      var newNode_3254802418 = newAstNode_3271567013(completion_3254802398.class, none_3271567020());
      var Temporary2 = completion_3254802398;
      if (ConstSet247[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'referenceRole\' is not accessible for type \'ModelCompletion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3254779957)); }
      var Temporary3 = completion_3254802398;
      if (ConstSet248[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'referenceTarget\' is not accessible for type \'ModelCompletion\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3254779957)); }
      setReference_3271566718(newNode_3254802418, Temporary2.referenceRole, Temporary3.referenceTarget.id);
      insert_3271567638(parent_3254802399, role_3254802400, index_3254802401, newNode_3254802418);
      rebuildCells_3254780235(self_3254780254);
      cursorHEX3D_3254784731(self_3254780254, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254780254, newNode_3254802418)));
      break;
    }
    self_3254780254.showCompletions = false;
    }
    
    markDirty_2415919143(self_3254780254);
    } finally {
    finishTransaction_3254785533(self_3254780254.document, true);
    }

  
}

function applySelectedCompletionJsWrapper22_3254802393(self_3254802461) {
    applySelectedCompletion_3254780253(self_3254802461);

  
}
editor_model_prototype.applySelectedCompletion22 = function() { return (applySelectedCompletionJsWrapper22_3254802393(this));};

function getBackend_1291854150(self_1291854151) {
  var result_1291854152 = 0;

  BeforeRet: {
    result_1291854152 = self_1291854151.backend;
    break BeforeRet;
  };

  return result_1291854152;

}

function getBackendJsWrapper_1291854147(self_1291854203) {
  var result_1291854204 = 0;

    result_1291854204 = getBackend_1291854150(self_1291854203);

  return result_1291854204;

}
editor_prototype.getBackend = function() { return (getBackendJsWrapper_1291854147(this));};

function isSome_2818579241(self_2818579243) {
  var result_2818579244 = false;

    result_2818579244 = !((self_2818579243.val == null));

  return result_2818579244;

}

function map_1291854416(self_1291854419, callback_1291854421) {
    var Temporary1;

  var result_1291854422 = ({val: [], has: false});

    if (isSome_2818579241(self_1291854419)) {
    Temporary1 = some_2281701410(callback_1291854421(self_1291854419.val));
    }
    else {
    Temporary1 = none_2348810263();
    }
    
    result_1291854422 = nimCopy(result_1291854422, Temporary1, NTI2348810261);

  return result_1291854422;

}

function HEX25_1627391769(s_1627391770) {
  var result_1627391771 = null;

    result_1627391771 = {kind: 4, str: nimCopy(null, s_1627391770, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391771;

}

function toJson_1811939932(a_1811939934, opt_1811939935) {
  var result_1811939936 = null;

    result_1811939936 = HEX25_1627391769(a_1811939934);

  return result_1811939936;

}

function HEX25_1627391792(n_1627391793) {
    var Temporary1;

  var result_1627391794 = null;

    if (!((n_1627391793 == n_1627391793))) {
    Temporary1 = newJString_1627389994([110,97,110]);
    }
    else {
    if ((n_1627391793 == Infinity)) {
    Temporary1 = newJString_1627389994([105,110,102]);
    }
    else {
    if ((n_1627391793 == -Infinity)) {
    Temporary1 = newJString_1627389994([45,105,110,102]);
    }
    else {
    Temporary1 = {kind: 3, fnum: n_1627391793, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
    }
    }}
    result_1627391794 = Temporary1;

  return result_1627391794;

}

function toJson_1291854583(a_1291854585, opt_1291854586) {
  var result_1291854587 = null;

    result_1291854587 = HEX25_1627391792(a_1291854585);

  return result_1291854587;

}

function HEX25_1627391779(n_1627391780) {
  var result_1627391781 = null;

    result_1627391781 = {kind: 2, num: n_1627391780, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391781;

}

function symbolName_1291854650(a_1291854652) {
  var result_1291854653 = [];

    result_1291854653 = nimCopy(null, names_1291854655[chckIndx(subInt(a_1291854652, 0), 0, (names_1291854655).length - 1)], NTI33554449);

  return result_1291854653;

}

function toJson_1291854635(a_1291854637, opt_1291854638) {
    var Temporary1;

  var result_1291854639 = null;

    switch (opt_1291854638.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854637);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854650(a_1291854637), opt_1291854638);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854637, NTI1291845663), opt_1291854638);
      break;
    }
    result_1291854639 = Temporary1;

  return result_1291854639;

}

function copy_1627394272(p_1627394273) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
        var Temporary6;
              var Temporary9;
        var Temporary11;
              var Temporary14;

  var result_1627394274 = null;

    switch (p_1627394273.kind) {
    case 4:
      var Temporary1 = p_1627394273;
      if (ConstSet249[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627394274 = newJString_1627389994(Temporary1.str);
      result_1627394274.isUnquoted = p_1627394273.isUnquoted;
      break;
    case 2:
      var Temporary2 = p_1627394273;
      if (ConstSet250[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627394274 = newJInt_1627390040(Temporary2.num);
      break;
    case 3:
      var Temporary3 = p_1627394273;
      if (ConstSet251[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      result_1627394274 = newJFloat_1627390043(Temporary3.fnum);
      break;
    case 1:
      var Temporary4 = p_1627394273;
      if (ConstSet252[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      result_1627394274 = newJBool_1627390046(Temporary4.bval);
      break;
    case 0:
      result_1627394274 = newJNull_1627390049();
      break;
    case 5:
      result_1627394274 = newJObject_1627390051();
      Label5: {
        var key_1627394279 = [];
        var val_1627394280 = null;
        var colontmp__1291855161 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = p_1627394273;
        if (ConstSet253[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291855161 = nimCopy(colontmp__1291855161, Temporary6.fields, NTI1627389966);
        var L_1291855162 = len_1627392114(colontmp__1291855161);
        if ((0 < colontmp__1291855161.counter)) {
        var h_1291855163 = colontmp__1291855161.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291855163)) break Label8;
              var nxt_1291855165 = colontmp__1291855161.data[chckIndx(h_1291855163, 0, (colontmp__1291855161.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855161.data[chckIndx(h_1291855163, 0, (colontmp__1291855161.data).length - 1)].Field0)) {
              key_1627394279 = colontmp__1291855161.data[chckIndx(h_1291855163, 0, (colontmp__1291855161.data).length - 1)].Field2;
              val_1627394280 = colontmp__1291855161.data[chckIndx(h_1291855163, 0, (colontmp__1291855161.data).length - 1)].Field3;
              var Temporary9 = result_1627394274;
              if (ConstSet254[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
              HEX5BHEX5DHEX3D_1627390259(Temporary9.fields, key_1627394279, copy_1627394272(val_1627394280));
              if (!((len_1627392114(colontmp__1291855161) == L_1291855162))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855163 = nxt_1291855165;
            }
        };
        }
        
      };
      break;
    case 6:
      result_1627394274 = newJArray_1627390082();
      Label10: {
        var i_1627394330 = null;
        var colontmp__1291855167 = [];
        var Temporary11 = p_1627394273;
        if (ConstSet255[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
        colontmp__1291855167 = Temporary11.elems;
        var i_1291855168 = 0;
        var L_1291855169 = (colontmp__1291855167).length;
        Label12: {
            Label13: while (true) {
            if (!(i_1291855168 < L_1291855169)) break Label13;
              i_1627394330 = colontmp__1291855167[chckIndx(i_1291855168, 0, (colontmp__1291855167).length - 1)];
              var Temporary14 = result_1627394274;
              if (ConstSet256[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
              Temporary14.elems.push(copy_1627394272(i_1627394330));;
              i_1291855168 = addInt(i_1291855168, 1);
              if (!(((colontmp__1291855167).length == L_1291855169))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    }

  return result_1627394274;

}

function HEX25_1627391795(b_1627391796) {
  var result_1627391797 = null;

    result_1627391797 = {kind: 1, bval: b_1627391796, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391797;

}

function toJson_2818588828(a_2818588830, opt_2818588831) {
  var result_2818588832 = null;

    result_2818588832 = HEX25_1627391795(a_2818588830);

  return result_2818588832;

}

function symbolName_1291854784(a_1291854786) {
  var result_1291854787 = [];

    result_1291854787 = nimCopy(null, names_1291854789[chckIndx(subInt(a_1291854786, 0), 0, (names_1291854789).length - 1)], NTI33554449);

  return result_1291854787;

}

function toJson_1291854768(a_1291854770, opt_1291854771) {
    var Temporary1;

  var result_1291854772 = null;

    switch (opt_1291854771.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854770);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854784(a_1291854770), opt_1291854771);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854770, NTI1627389955), opt_1291854771);
      break;
    }
    result_1291854772 = Temporary1;

  return result_1291854772;

}

function HEX25_1627391789(n_1627391790) {
  var result_1627391791 = null;

    result_1627391791 = {kind: 2, num: n_1627391790, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391791;

}

function toJson_1291854878(a_1291854880, opt_1291854881) {
  var result_1291854882 = null;

    result_1291854882 = HEX25_1627391789(a_1291854880);

  return result_1291854882;

}

function toJson_1291854888(a_1291854890, opt_1291854891) {
  var result_1291854892 = null;

    result_1291854892 = HEX25_1627391792(a_1291854890);

  return result_1291854892;

}

function toJsonHook_1291854981(t_1291854985, opt_1291854986) {
  var result_1291854987 = null;

    result_1291854987 = newJObject_1627390051();
    Label1: {
      var k_1291854992 = [];
      var v_1291854993 = null;
      var L_1291855172 = len_1627392114(t_1291854985);
      if ((0 < t_1291854985.counter)) {
      var h_1291855173 = t_1291854985.first;
      Label2: {
          Label3: while (true) {
          if (!(0 <= h_1291855173)) break Label3;
            var nxt_1291855175 = t_1291854985.data[chckIndx(h_1291855173, 0, (t_1291854985.data).length - 1)].Field1;
            if (isFilled_1308622880(t_1291854985.data[chckIndx(h_1291855173, 0, (t_1291854985.data).length - 1)].Field0)) {
            k_1291854992 = t_1291854985.data[chckIndx(h_1291855173, 0, (t_1291854985.data).length - 1)].Field2;
            v_1291854993 = t_1291854985.data[chckIndx(h_1291855173, 0, (t_1291854985.data).length - 1)].Field3;
            HEX5BHEX5DHEX3D_1627391903(result_1291854987, k_1291854992, toJson_1291854739(v_1291854993, opt_1291854986));
            if (!((len_1627392114(t_1291854985) == L_1291855172))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_1291855173 = nxt_1291855175;
          }
      };
      }
      
    };

  return result_1291854987;

}

function toJson_1291854903(a_1291854905, opt_1291854906) {
  var result_1291854907 = null;

    result_1291854907 = toJsonHook_1291854981(a_1291854905, opt_1291854906);

  return result_1291854907;

}

function toJson_1291854998(a_1291855000, opt_1291855001) {
  var result_1291855002 = null;

    result_1291855002 = newJArray_1627390082();
    Label1: {
      var ai_1291855009 = null;
      var i_1291855177 = 0;
      var L_1291855178 = (a_1291855000).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855177 < L_1291855178)) break Label3;
            ai_1291855009 = a_1291855000[chckIndx(i_1291855177, 0, (a_1291855000).length - 1)];
            add_1627390190(result_1291855002, toJson_1291854739(ai_1291855009, opt_1291855001));
            i_1291855177 = addInt(i_1291855177, 1);
            if (!(((a_1291855000).length == L_1291855178))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291855002;

}

function toJson_1291854751(a_1291854753, opt_1291854754) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var result_1291854755 = null;

    result_1291854755 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854755, [105,115,85,110,113,117,111,116,101,100], toJson_2818588828(a_1291854753.isUnquoted, opt_1291854754));
    HEX5BHEX5DHEX3D_1627391903(result_1291854755, [107,105,110,100], toJson_1291854768(a_1291854753.kind, opt_1291854754));
    switch (a_1291854753.kind) {
    case 4:
      var Temporary1 = a_1291854753;
      if (ConstSet257[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854755, [115,116,114], toJson_1811939932(Temporary1.str, opt_1291854754));
      break;
    case 2:
      var Temporary2 = a_1291854753;
      if (ConstSet258[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854755, [110,117,109], toJson_1291854878(Temporary2.num, opt_1291854754));
      break;
    case 3:
      var Temporary3 = a_1291854753;
      if (ConstSet259[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854755, [102,110,117,109], toJson_1291854888(Temporary3.fnum, opt_1291854754));
      break;
    case 1:
      var Temporary4 = a_1291854753;
      if (ConstSet260[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854755, [98,118,97,108], toJson_2818588828(Temporary4.bval, opt_1291854754));
      break;
    case 0:
      break;
    case 5:
      var Temporary5 = a_1291854753;
      if (ConstSet261[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854755, [102,105,101,108,100,115], toJson_1291854903(Temporary5.fields, opt_1291854754));
      break;
    case 6:
      var Temporary6 = a_1291854753;
      if (ConstSet262[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854755, [101,108,101,109,115], toJson_1291854998(Temporary6.elems, opt_1291854754));
      break;
    }

  return result_1291854755;

}

function toJson_1291854739(a_1291854741, opt_1291854742) {
  var result_1291854743 = null;

    switch (opt_1291854742.jsonNodeMode) {
    case 0:
      result_1291854743 = a_1291854741;
      break;
    case 1:
      result_1291854743 = copy_1627394272(a_1291854741);
      break;
    case 2:
      if ((a_1291854741 == null)) {
      result_1291854743 = newJNull_1627390049();
      }
      else {
        result_1291854743 = toJson_1291854751(a_1291854741, opt_1291854742);
      }
      
      break;
    }

  return result_1291854743;

}

function toJson_1291854622(a_1291854624, opt_1291854625) {
  var result_1291854626 = null;

    result_1291854626 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854626, [107,105,110,100], toJson_1291854635(a_1291854624.kind, opt_1291854625));
    HEX5BHEX5DHEX3D_1627391903(result_1291854626, [105,100], toJson_1811939932(a_1291854624.id, opt_1291854625));
    HEX5BHEX5DHEX3D_1627391903(result_1291854626, [110,97,109,101], toJson_1811939932(a_1291854624.name, opt_1291854625));
    HEX5BHEX5DHEX3D_1627391903(result_1291854626, [115,101,116,116,105,110,103,115], toJson_1291854739(a_1291854624.settings, opt_1291854625));

  return result_1291854626;

}

function toJson_1291854610(a_1291854612, opt_1291854613) {
  var result_1291854614 = null;

    result_1291854614 = newJArray_1627390082();
    Label1: {
      var ai_1291854621 = ({kind: 0, id: [], name: [], settings: null});
      var i_1291855157 = 0;
      var L_1291855158 = (a_1291854612).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855157 < L_1291855158)) break Label3;
            ai_1291854621 = a_1291854612[chckIndx(i_1291855157, 0, (a_1291854612).length - 1)];
            add_1627390190(result_1291854614, toJson_1291854622(ai_1291854621, opt_1291854613));
            i_1291855157 = addInt(i_1291855157, 1);
            if (!(((a_1291854612).length == L_1291855158))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854614;

}

function toJson_1291855026(a_1291855028, opt_1291855029) {
  var result_1291855030 = null;

    result_1291855030 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291855030, [102,105,108,101,110,97,109,101], toJson_1811939932(a_1291855028.filename, opt_1291855029));
    HEX5BHEX5DHEX3D_1627391903(result_1291855030, [97,115,116], toJson_2818588828(a_1291855028.ast, opt_1291855029));
    HEX5BHEX5DHEX3D_1627391903(result_1291855030, [108,97,110,103,117,97,103,101,73,68], toJson_1811939932(a_1291855028.languageID, opt_1291855029));
    HEX5BHEX5DHEX3D_1627391903(result_1291855030, [97,112,112,70,105,108,101], toJson_2818588828(a_1291855028.appFile, opt_1291855029));
    HEX5BHEX5DHEX3D_1627391903(result_1291855030, [119,111,114,107,115,112,97,99,101,73,100], toJson_1811939932(a_1291855028.workspaceId, opt_1291855029));

  return result_1291855030;

}

function toJson_1291855014(a_1291855016, opt_1291855017) {
  var result_1291855018 = null;

    result_1291855018 = newJArray_1627390082();
    Label1: {
      var ai_1291855025 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_1291855182 = 0;
      var L_1291855183 = (a_1291855016).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855182 < L_1291855183)) break Label3;
            ai_1291855025 = a_1291855016[chckIndx(i_1291855182, 0, (a_1291855016).length - 1)];
            add_1627390190(result_1291855018, toJson_1291855026(ai_1291855025, opt_1291855017));
            i_1291855182 = addInt(i_1291855182, 1);
            if (!(((a_1291855016).length == L_1291855183))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291855018;

}

function toJson_1291854566(a_1291854568, opt_1291854569) {
  var result_1291854570 = null;

    result_1291854570 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854570, [116,104,101,109,101], toJson_1811939932(a_1291854568.theme, opt_1291854569));
    HEX5BHEX5DHEX3D_1627391903(result_1291854570, [102,111,110,116,83,105,122,101], toJson_1291854583(a_1291854568.fontSize, opt_1291854569));
    HEX5BHEX5DHEX3D_1627391903(result_1291854570, [102,111,110,116,82,101,103,117,108,97,114], toJson_1811939932(a_1291854568.fontRegular, opt_1291854569));
    HEX5BHEX5DHEX3D_1627391903(result_1291854570, [102,111,110,116,66,111,108,100], toJson_1811939932(a_1291854568.fontBold, opt_1291854569));
    HEX5BHEX5DHEX3D_1627391903(result_1291854570, [102,111,110,116,73,116,97,108,105,99], toJson_1811939932(a_1291854568.fontItalic, opt_1291854569));
    HEX5BHEX5DHEX3D_1627391903(result_1291854570, [102,111,110,116,66,111,108,100,73,116,97,108,105,99], toJson_1811939932(a_1291854568.fontBoldItalic, opt_1291854569));
    HEX5BHEX5DHEX3D_1627391903(result_1291854570, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], toJson_1291854610(a_1291854568.workspaceFolders, opt_1291854569));
    HEX5BHEX5DHEX3D_1627391903(result_1291854570, [111,112,101,110,69,100,105,116,111,114,115], toJson_1291855014(a_1291854568.openEditors, opt_1291854569));

  return result_1291854570;

}

function spaces_855639150(n_855639151) {
  var result_855639152 = [];

    result_855639152 = nimCopy(null, nsuRepeatChar(32, n_855639151), NTI33554449);

  return result_855639152;

}

function indent_1627394335(s_1627394336, s_1627394336_Idx, i_1627394337) {
    s_1627394336[s_1627394336_Idx].push.apply(s_1627394336[s_1627394336_Idx], spaces_855639150(chckRange(i_1627394337, 0, 2147483647)));;

  
}

function nl_1627394343(s_1627394344, s_1627394344_Idx, ml_1627394345) {
    var Temporary1;

    if (ml_1627394345) {
    Temporary1 = [10];
    }
    else {
    Temporary1 = [32];
    }
    
    s_1627394344[s_1627394344_Idx].push.apply(s_1627394344[s_1627394344_Idx], Temporary1);;

  
}

function newIndent_1627394338(curr_1627394339, indent_1627394340, ml_1627394341) {
  var result_1627394342 = 0;

  BeforeRet: {
    if (ml_1627394341) {
    result_1627394342 = addInt(curr_1627394339, indent_1627394340);
    break BeforeRet;
    }
    else {
      result_1627394342 = indent_1627394340;
      break BeforeRet;
    }
    
  };

  return result_1627394342;

}

function toPretty_1627394395(result_1627394396, result_1627394396_Idx, node_1627394397, indent_1627394398, ml_1627394399, lstArr_1627394400, currIndent_1627394401) {
        var Temporary1;
        var Temporary3;
      var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary12;
              var Temporary15;
              var Temporary16;

    switch (node_1627394397.kind) {
    case 5:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary1 = node_1627394397;
        if (ConstSet263[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      if ((0 < len_1627392114(Temporary1.fields))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      var i_1627394450 = 0;
      Label2: {
        var key_1627394455 = [];
        var val_1627394456 = null;
        var colontmp__1291855186 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary3 = node_1627394397;
        if (ConstSet264[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291855186 = nimCopy(colontmp__1291855186, Temporary3.fields, NTI1627389966);
        var L_1291855187 = len_1627392114(colontmp__1291855186);
        if ((0 < colontmp__1291855186.counter)) {
        var h_1291855188 = colontmp__1291855186.first;
        Label4: {
            Label5: while (true) {
            if (!(0 <= h_1291855188)) break Label5;
              var nxt_1291855190 = colontmp__1291855186.data[chckIndx(h_1291855188, 0, (colontmp__1291855186.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855186.data[chckIndx(h_1291855188, 0, (colontmp__1291855186.data).length - 1)].Field0)) {
              key_1627394455 = colontmp__1291855186.data[chckIndx(h_1291855188, 0, (colontmp__1291855186.data).length - 1)].Field2;
              val_1627394456 = colontmp__1291855186.data[chckIndx(h_1291855188, 0, (colontmp__1291855186.data).length - 1)].Field3;
              if ((0 < i_1627394450)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              i_1627394450 = addInt(i_1627394450, 1);
              indent_1627394335(result_1627394396, result_1627394396_Idx, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              escapeJson_1627394367(key_1627394455, result_1627394396, result_1627394396_Idx);
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [58,32]);;
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, val_1627394456, indent_1627394398, ml_1627394399, false, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              if (!((len_1627392114(colontmp__1291855186) == L_1291855187))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855188 = nxt_1291855190;
            }
        };
        }
        
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [125]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123,125]);;
      }
      
      break;
    case 4:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      toUgly_1627394377(result_1627394396, result_1627394396_Idx, node_1627394397);
      break;
    case 2:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary6 = node_1627394397;
      if (ConstSet265[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      addInt_301990087(result_1627394396, result_1627394396_Idx, Temporary6.num);
      break;
    case 3:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary7 = node_1627394397;
      if (ConstSet266[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394396, result_1627394396_Idx, Temporary7.fnum);
      break;
    case 1:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary9 = node_1627394397;
        if (ConstSet267[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      if (Temporary9.bval) {
      Temporary8 = [116,114,117,101];
      }
      else {
      Temporary8 = [102,97,108,115,101];
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], Temporary8);;
      break;
    case 6:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary10 = node_1627394397;
        if (ConstSet268[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      if (!(((Temporary10.elems).length == 0))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      Label11: {
        var i_1627394476 = 0;
        var colontmp__1291855192 = 0;
        var Temporary12 = node_1627394397;
        if (ConstSet269[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__1291855192 = subInt((Temporary12.elems).length, 1);
        var res_1291855193 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_1291855193 <= colontmp__1291855192)) break Label14;
              i_1627394476 = res_1291855193;
              if ((0 < i_1627394476)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              var Temporary15 = node_1627394397;
              if (ConstSet270[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, (Temporary16 = Temporary15.elems, Temporary16)[chckIndx(i_1627394476, 0, (Temporary16).length - 1)], indent_1627394398, ml_1627394399, true, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              res_1291855193 = addInt(res_1291855193, 1);
            }
        };
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [93]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91,93]);;
      }
      
      break;
    case 0:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [110,117,108,108]);;
      break;
    }

  
}

function pretty_1627394477(node_1627394478, indent_1627394479) {
  var result_1627394480 = [[]];

    result_1627394480[0] = nimCopy(null, [], NTI33554449);
    toPretty_1627394395(result_1627394480, 0, node_1627394478, indent_1627394479, true, false, 0);

  return result_1627394480[0];

}

function saveAppState_1291853872(self_1291853873) {
              var Temporary5;
            
function HEX3Aanonymous_1291854400(wf_1291854411) {
              var result_1291854414 = [];

                result_1291854414 = nimCopy(null, HEX24_2046820617(wf_1291854411.id), NTI33554449);

              return result_1291854414;

            }
            
function HEX3Aanonymous_1291854471(wf_1291854482) {
              var result_1291854485 = [];

                result_1291854485 = nimCopy(null, HEX24_2046820617(wf_1291854482.id), NTI33554449);

              return result_1291854485;

            }
            
function HEX3Aanonymous_1291854524(wf_1291854535) {
              var result_1291854538 = [];

                result_1291854538 = nimCopy(null, HEX24_2046820617(wf_1291854535.id), NTI33554449);

              return result_1291854538;

            }

    var state_1291854312 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
    state_1291854312.theme = nimCopy(null, self_1291853873.theme.path, NTI33554449);
    if ((self_1291853873.backend == 1)) {
    state_1291854312.fontSize = self_1291853873.loadedFontSize;
    }
    else {
      state_1291854312.fontSize = fontSize_2768240784(self_1291853873.platform);
    }
    
    state_1291854312.fontRegular = nimCopy(null, self_1291853873.fontRegular, NTI33554449);
    state_1291854312.fontBold = nimCopy(null, self_1291853873.fontBold, NTI33554449);
    state_1291854312.fontItalic = nimCopy(null, self_1291853873.fontItalic, NTI33554449);
    state_1291854312.fontBoldItalic = nimCopy(null, self_1291853873.fontBoldItalic, NTI33554449);
    Label1: {
      var workspaceFolder_1291854340 = null;
      var i_1291855147 = 0;
      var L_1291855148 = (self_1291853873.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855147 < L_1291855148)) break Label3;
            workspaceFolder_1291854340 = self_1291853873.workspace.folders[chckIndx(i_1291855147, 0, (self_1291853873.workspace.folders).length - 1)];
            Label4: {
              if (isObj(workspaceFolder_1291854340.m_type, NTI2264924164)) {
              Temporary5 = 0;
              }
              else {
              if (isObj(workspaceFolder_1291854340.m_type, NTI2399141893)) {
              Temporary5 = 1;
              }
              else {
              if (isObj(workspaceFolder_1291854340.m_type, NTI2281701380)) {
              Temporary5 = 2;
              }
              else {
                break Label4;
              }
              }}
              var kind_1291854362 = Temporary5;
              state_1291854312.workspaceFolders.push({kind: kind_1291854362, id: HEX24_2046820617(workspaceFolder_1291854340.id), name: nimCopy(null, workspaceFolder_1291854340.name, NTI33554449), settings: settings_2214592534(workspaceFolder_1291854340)});;
            };
            i_1291855147 = addInt(i_1291855147, 1);
            if (!(((self_1291853873.workspace.folders).length == L_1291855148))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label6: {
      var view_1291854388 = null;
      var i_1291855152 = 0;
      var L_1291855153 = (self_1291853873.views).length;
      Label7: {
          Label8: while (true) {
          if (!(i_1291855152 < L_1291855153)) break Label8;
            view_1291854388 = self_1291853873.views[chckIndx(i_1291855152, 0, (self_1291853873.views).length - 1)];
            if (isObj(view_1291854388.document.m_type, NTI2818572427)) {
            var textDocument_1291854395 = view_1291854388.document;
            state_1291854312.openEditors.push({filename: nimCopy(null, textDocument_1291854395.filename, NTI33554449), ast: false, languageID: nimCopy(null, textDocument_1291854395.languageId, NTI33554449), appFile: textDocument_1291854395.appFile, workspaceId: get_2348810295(map_1291854416(textDocument_1291854395.workspace, HEX3Aanonymous_1291854400), [])});;
            }
            else {
            if (isObj(view_1291854388.document.m_type, NTI2969568612)) {
            var astDocument_1291854466 = view_1291854388.document;
            state_1291854312.openEditors.push({filename: nimCopy(null, astDocument_1291854466.filename, NTI33554449), ast: true, languageID: [97,115,116], appFile: astDocument_1291854466.appFile, workspaceId: get_2348810295(map_1291854416(astDocument_1291854466.workspace, HEX3Aanonymous_1291854471), [])});;
            }
            else {
            if (isObj(view_1291854388.document.m_type, NTI3254779967)) {
            var astDocument_1291854519 = view_1291854388.document;
            state_1291854312.openEditors.push({filename: nimCopy(null, astDocument_1291854519.filename, NTI33554449), ast: false, languageID: [97,109], appFile: astDocument_1291854519.appFile, workspaceId: get_2348810295(map_1291854416(astDocument_1291854519.workspace, HEX3Aanonymous_1291854524), [])});;
            }
            }}
            i_1291855152 = addInt(i_1291855152, 1);
            if (!(((self_1291853873.views).length == L_1291855153))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var serialized_1291855059 = toJson_1291854566(state_1291854312, initToJsonOptions_1811939362());
    saveApplicationFile_2365587480(fs_2365587509, [99,111,110,102,105,103,46,106,115,111,110], pretty_1627394477(serialized_1291855059, 2));
    saveApplicationFile_2365587480(fs_2365587509, [111,112,116,105,111,110,115,46,106,115,111,110], pretty_1627394477(self_1291853873.options, 2));

  
}

function saveAppStateJsWrapper_1291854307(self_1291855140) {
    saveAppState_1291853872(self_1291855140);

  
}
editor_prototype.saveAppState = function() { return (saveAppStateJsWrapper_1291854307(this));};

function requestRender_1291855200(self_1291855201, redrawEverything_1291855202) {
    requestRender_2768240746(self_1291855201.platform, redrawEverything_1291855202);

  
}

function requestRenderJsWrapper_1291855197(self_1291855230, redrawEverything_1291855231) {
    requestRender_1291855200(self_1291855230, redrawEverything_1291855231);

  
}
editor_prototype.requestRender = function(redrawEverything_ /* : bool */) { return (requestRenderJsWrapper_1291855197(this, redrawEverything_));};

function setHandleInputs_2113929570(config_2113929571, value_2113929572) {
    config_2113929571.handleInputs = value_2113929572;
    config_2113929571.revision = addInt(config_2113929571.revision, 1);

  
}

function setHandleInputs_1291855245(self_1291855246, context_1291855247, value_1291855248) {
    setHandleInputs_2113929570(getEventHandlerConfig_1291849162(self_1291855246, context_1291855247), value_1291855248);

  
}

function setHandleInputsJsWrapper_1291855242(self_1291855277, context_1291855278, value_1291855279) {
    setHandleInputs_1291855245(self_1291855277, context_1291855278, value_1291855279);

  
}
editor_prototype.setHandleInputs = function(context_ /* : string */, value_ /* : bool */) { return (setHandleInputsJsWrapper_1291855242(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setHandleActions_2113929577(config_2113929578, value_2113929579) {
    config_2113929578.handleActions = value_2113929579;
    config_2113929578.revision = addInt(config_2113929578.revision, 1);

  
}

function setHandleActions_1291855298(self_1291855299, context_1291855300, value_1291855301) {
    setHandleActions_2113929577(getEventHandlerConfig_1291849162(self_1291855299, context_1291855300), value_1291855301);

  
}

function setHandleActionsJsWrapper_1291855295(self_1291855330, context_1291855331, value_1291855332) {
    setHandleActions_1291855298(self_1291855330, context_1291855331, value_1291855332);

  
}
editor_prototype.setHandleActions = function(context_ /* : string */, value_ /* : bool */) { return (setHandleActionsJsWrapper_1291855295(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllActions_2113929584(config_2113929585, value_2113929586) {
    config_2113929585.consumeAllActions = value_2113929586;
    config_2113929585.revision = addInt(config_2113929585.revision, 1);

  
}

function setConsumeAllActions_1291855351(self_1291855352, context_1291855353, value_1291855354) {
    setConsumeAllActions_2113929584(getEventHandlerConfig_1291849162(self_1291855352, context_1291855353), value_1291855354);

  
}

function setConsumeAllActionsJsWrapper_1291855348(self_1291855383, context_1291855384, value_1291855385) {
    setConsumeAllActions_1291855351(self_1291855383, context_1291855384, value_1291855385);

  
}
editor_prototype.setConsumeAllActions = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllActionsJsWrapper_1291855348(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllInput_2113929591(config_2113929592, value_2113929593) {
    config_2113929592.consumeAllInput = value_2113929593;
    config_2113929592.revision = addInt(config_2113929592.revision, 1);

  
}

function setConsumeAllInput_1291855404(self_1291855405, context_1291855406, value_1291855407) {
    setConsumeAllInput_2113929591(getEventHandlerConfig_1291849162(self_1291855405, context_1291855406), value_1291855407);

  
}

function setConsumeAllInputJsWrapper_1291855401(self_1291855436, context_1291855437, value_1291855438) {
    setConsumeAllInput_1291855404(self_1291855436, context_1291855437, value_1291855438);

  
}
editor_prototype.setConsumeAllInput = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllInputJsWrapper_1291855401(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function clearWorkspaceCaches_1291855534(self_1291855535) {
    Label1: {
      var wf_1291855539 = null;
      var i_1291855571 = 0;
      var L_1291855572 = (self_1291855535.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855571 < L_1291855572)) break Label3;
            wf_1291855539 = self_1291855535.workspace.folders[chckIndx(i_1291855571, 0, (self_1291855535.workspace.folders).length - 1)];
            clearDirectoryCache_2214592538(wf_1291855539);
            i_1291855571 = addInt(i_1291855571, 1);
            if (!(((self_1291855535.workspace.folders).length == L_1291855572))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clearWorkspaceCachesJsWrapper_1291855531(self_1291855566) {
    clearWorkspaceCaches_1291855534(self_1291855566);

  
}
editor_prototype.clearWorkspaceCaches = function() { return (clearWorkspaceCachesJsWrapper_1291855531(this));};

function openWorkspaceKind_1291851101(workspaceFolder_1291851102) {
  var result_1291855454 = 0;

  BeforeRet: {
    if (isObj(workspaceFolder_1291851102.m_type, NTI2264924164)) {
    result_1291855454 = 0;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851102.m_type, NTI2399141893)) {
    result_1291855454 = 1;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851102.m_type, NTI2281701380)) {
    result_1291855454 = 2;
    break BeforeRet;
    }
    
    if (true) {
    failedAssertImpl_268435515([101,100,105,116,111,114,46,110,105,109,40,54,48,54,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
  };

  return result_1291855454;

}

function addWorkspaceFolder_1291851103(self_1291851104, workspaceFolder_1291851105) {
  var result_1291855481 = false;

  BeforeRet: {
    Label1: {
      var wf_1291855485 = null;
      var i_1291855636 = 0;
      var L_1291855637 = (self_1291851104.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855636 < L_1291855637)) break Label3;
            wf_1291855485 = self_1291851104.workspace.folders[chckIndx(i_1291855636, 0, (self_1291851104.workspace.folders).length - 1)];
            if (((openWorkspaceKind_1291851101(wf_1291855485) == openWorkspaceKind_1291851101(workspaceFolder_1291851105)) && HEX3DHEX3D_1627392026(settings_2214592534(wf_1291855485), settings_2214592534(workspaceFolder_1291851105)))) {
            result_1291855481 = false;
            break BeforeRet;
            }
            
            i_1291855636 = addInt(i_1291855636, 1);
            if (!(((self_1291851104.workspace.folders).length == L_1291855637))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (HEX3DHEX3D_2046820626(workspaceFolder_1291851105.id, idNone_2046820633())) {
    workspaceFolder_1291851105.id = nimCopy(workspaceFolder_1291851105.id, newId_2046820597(), NTI2046820355);
    }
    
    var fmtRes_1291855495 = [mnewString(0)];
    fmtRes_1291855495[0].push.apply(fmtRes_1291855495[0], [79,112,101,110,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
    formatValue_721420459(fmtRes_1291855495, 0, workspaceFolder_1291851105.name, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291855495[0], NTI33554449)]);
    self_1291851104.workspace.folders.push(workspaceFolder_1291851105);;
    result_1291855481 = true;
    break BeforeRet;
  };

  return result_1291855481;

}

function initTable_2281703693(initialSize_2281703696) {
  var result_2281703697 = ({data: [], counter: 0});

    var correctSizeHEX60gensym35_2281703699 = slotsNeeded_1308622891(chckRange(initialSize_2281703696, 0, 2147483647));
    result_2281703697.counter = 0;
    result_2281703697.data = new Array(chckRange(correctSizeHEX60gensym35_2281703699, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2281703699, 0, 2147483647) ; ++i) { result_2281703697.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }
  return result_2281703697;

}

function newWorkspaceFolderGithub_2281703680(user_2281703681, repository_2281703682, branchOrHash_2281703683) {
  var result_2281703684 = null;

    result_2281703684 = ({m_type: NTI2281701380, baseUrl: [], user: [], repository: [], branchOrHash: [], cachedDirectoryListings: ({data: [], counter: 0}), pathToSha: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    var fmtRes_2281703692 = [mnewString(0)];
    fmtRes_2281703692[0].push.apply(fmtRes_2281703692[0], [104,116,116,112,115,58,47,47,97,112,105,46,103,105,116,104,117,98,46,99,111,109,47,114,101,112,111,115,47]);;
    formatValue_721420459(fmtRes_2281703692, 0, user_2281703681, []);
    fmtRes_2281703692[0].push.apply(fmtRes_2281703692[0], [47]);;
    formatValue_721420459(fmtRes_2281703692, 0, repository_2281703682, []);
    result_2281703684.baseUrl = nimCopy(null, fmtRes_2281703692[0], NTI33554449);
    result_2281703684.user = nimCopy(null, user_2281703681, NTI33554449);
    result_2281703684.repository = nimCopy(null, repository_2281703682, NTI33554449);
    result_2281703684.branchOrHash = nimCopy(null, branchOrHash_2281703683, NTI33554449);
    result_2281703684.cachedDirectoryListings = nimCopy(result_2281703684.cachedDirectoryListings, initTable_2281703693(32), NTI2281701388);
    result_2281703684.pathToSha = nimCopy(result_2281703684.pathToSha, initTable_1795162117(32), NTI1795162120);
    var fmtRes_2281703712 = [mnewString(0)];
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [71,105,116,72,117,98,58]);;
    formatValue_721420459(fmtRes_2281703712, 0, user_2281703681, []);
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [47]);;
    formatValue_721420459(fmtRes_2281703712, 0, repository_2281703682, []);
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [47]);;
    formatValue_721420459(fmtRes_2281703712, 0, branchOrHash_2281703683, []);
    result_2281703684.name = nimCopy(null, fmtRes_2281703712[0], NTI33554449);

  return result_2281703684;

}

function openGithubWorkspace_1291855579(self_1291855580, user_1291855581, repository_1291855582, branchOrHash_1291855583) {
    var _ = addWorkspaceFolder_1291851103(self_1291855580, newWorkspaceFolderGithub_2281703680(user_1291855581, repository_1291855582, branchOrHash_1291855583));

  
}

function openGithubWorkspaceJsWrapper_1291855576(self_1291855613, user_1291855614, repository_1291855615, branchOrHash_1291855616) {
    openGithubWorkspace_1291855579(self_1291855613, user_1291855614, repository_1291855615, branchOrHash_1291855616);

  
}
editor_prototype.openGithubWorkspace = function(user_ /* : string */, repository_ /* : string */, branchOrHash_ /* : string */) { return (openGithubWorkspaceJsWrapper_1291855576(this, user_ == undefined ? undefined : cstrToNimstr(user_), repository_ == undefined ? undefined : cstrToNimstr(repository_), branchOrHash_ == undefined ? undefined : cstrToNimstr(branchOrHash_)));};

function newWorkspaceFolderAbsytreeServer_2399144348(url_2399144349) {
  var result_2399144350 = null;

    result_2399144350 = ({m_type: NTI2399141893, baseUrl: [], cachedDirectoryListings: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2399144350.baseUrl = nimCopy(null, url_2399144349, NTI33554449);
    var _ = updateWorkspaceName_2399142377(result_2399144350);

  return result_2399144350;

}

function openAbsytreeServerWorkspace_1291855644(self_1291855645, url_1291855646) {
    var _ = addWorkspaceFolder_1291851103(self_1291855645, newWorkspaceFolderAbsytreeServer_2399144348(url_1291855646));

  
}

function openAbsytreeServerWorkspaceJsWrapper_1291855641(self_1291855674, url_1291855675) {
    openAbsytreeServerWorkspace_1291855644(self_1291855674, url_1291855675);

  
}
editor_prototype.openAbsytreeServerWorkspace = function(url_ /* : string */) { return (openAbsytreeServerWorkspaceJsWrapper_1291855641(this, url_ == undefined ? undefined : cstrToNimstr(url_)));};

function getFlag_1291848874(self_1291848875, flag_1291848876, default_1291848877) {
  var result_1291855693 = false;

  BeforeRet: {
    result_1291855693 = getOption_2818583615(self_1291848875, flag_1291848876, default_1291848877);
    break BeforeRet;
  };

  return result_1291855693;

}

function getFlagJsWrapper2_1291855686(self_1291855732, flag_1291855733, default_1291855734) {
  var result_1291855735 = false;

    result_1291855735 = getFlag_1291848874(self_1291855732, flag_1291855733, default_1291855734);

  return result_1291855735;

}
editor_prototype.getFlag2 = function(flag_ /* : string */, default_ /* : bool */) { return (getFlagJsWrapper2_1291855686(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), default_));};

function setOption_1291855762(editor_1291855764, path_1291855765, value_1291855766) {
  BeforeRet: {
    Label1: {
      if ((editor_1291855764 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym263_1291855781 = nsuSplitString(path_1291855765, [46], -1);
      var nodeHEX60gensym263_1291855782 = editor_1291855764.options;
      Label2: {
        var keyHEX60gensym263_1291855801 = [];
        var colontmp__1291855863 = [];
        colontmp__1291855863 = HEX5BHEX5D_2818589269(pathItemsHEX60gensym263_1291855781, HEX2EHEX2E_1040187488(0, 2));
        var i_1291855864 = 0;
        var L_1291855865 = (colontmp__1291855863).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291855864 < L_1291855865)) break Label4;
              keyHEX60gensym263_1291855801 = colontmp__1291855863[chckIndx(i_1291855864, 0, (colontmp__1291855863).length - 1)];
              if (!((nodeHEX60gensym263_1291855782.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym263_1291855782, keyHEX60gensym263_1291855801))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym263_1291855782, keyHEX60gensym263_1291855801, newJObject_1627390051());
              }
              
              nodeHEX60gensym263_1291855782 = HEX5BHEX5D_1627393037(nodeHEX60gensym263_1291855782, keyHEX60gensym263_1291855801);
              i_1291855864 = addInt(i_1291855864, 1);
              if (!(((colontmp__1291855863).length == L_1291855865))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym263_1291855782 == null) || !((nodeHEX60gensym263_1291855782.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym263_1291855782, HEX5BHEX5D_2701132581(pathItemsHEX60gensym263_1291855781, 1), newJBool_1627390046(value_1291855766));
    };
    requestRender_2768240746(editor_1291855764.platform, true);
  };

  
}

function setFlag_1291848951(self_1291848952, flag_1291848953, value_1291848954) {
    setOption_1291855762(self_1291848952, flag_1291848953, value_1291848954);

  
}

function setFlagJsWrapper2_1291855755(self_1291855845, flag_1291855846, value_1291855847) {
    setFlag_1291848951(self_1291855845, flag_1291855846, value_1291855847);

  
}
editor_prototype.setFlag2 = function(flag_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper2_1291855755(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), value_));};

function toggleFlag_1291848955(self_1291848956, flag_1291848957) {
    setFlag_1291848951(self_1291848956, flag_1291848957, !(getFlag_1291848874(self_1291848956, flag_1291848957, false)));
    requestRender_2768240746(self_1291848956.platform, true);

  
}

function toggleFlagJsWrapper_1291855869(self_1291855902, flag_1291855903) {
    toggleFlag_1291848955(self_1291855902, flag_1291855903);

  
}
editor_prototype.toggleFlag = function(flag_ /* : string */) { return (toggleFlagJsWrapper_1291855869(this, flag_ == undefined ? undefined : cstrToNimstr(flag_)));};

function setOption_1291855917(self_1291855918, option_1291855919, value_1291855920) {
  BeforeRet: {
    if ((self_1291855918 == null)) {
    break BeforeRet;
    }
    
    requestRender_2768240746(self_1291855918.platform, true);
    var pathItems_1291855924 = nsuSplitString(option_1291855919, [46], -1);
    var node_1291855925 = self_1291855918.options;
    Label1: {
      var key_1291855944 = [];
      var colontmp__1291856000 = [];
      colontmp__1291856000 = HEX5BHEX5D_2818589269(pathItems_1291855924, HEX2EHEX2E_1040187488(0, 2));
      var i_1291856001 = 0;
      var L_1291856002 = (colontmp__1291856000).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856001 < L_1291856002)) break Label3;
            key_1291855944 = colontmp__1291856000[chckIndx(i_1291856001, 0, (colontmp__1291856000).length - 1)];
            if (!((node_1291855925.kind == 5))) {
            break BeforeRet;
            }
            
            if (!(contains_1627393212(node_1291855925, key_1291855944))) {
            HEX5BHEX5DHEX3D_1627391903(node_1291855925, key_1291855944, newJObject_1627390051());
            }
            
            node_1291855925 = HEX5BHEX5D_1627393037(node_1291855925, key_1291855944);
            i_1291856001 = addInt(i_1291856001, 1);
            if (!(((colontmp__1291856000).length == L_1291856002))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((node_1291855925 == null) || !((node_1291855925.kind == 5)))) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_1627391903(node_1291855925, HEX5BHEX5D_2701132581(pathItems_1291855924, 1), value_1291855920);
  };

  
}

function setOptionJsWrapper_1291855914(self_1291855988, option_1291855989, value_1291855990) {
    setOption_1291855917(self_1291855988, option_1291855989, value_1291855990);

  
}
editor_prototype.setOption = function(option_ /* : string */, value_ /* : JsonNode */) { return (setOptionJsWrapper_1291855914(this, option_ == undefined ? undefined : cstrToNimstr(option_), value_));};

function quit_1291856009(self_1291856010) {
    self_1291856010.closeRequested = true;

  
}

function quitJsWrapper_1291856006(self_1291856037) {
    quit_1291856009(self_1291856037);

  
}
editor_prototype.quit = function() { return (quitJsWrapper_1291856006(this));};

function changeFontSize_1291856046(self_1291856047, amount_1291856048) {
    fontSizeHEX3D_2768240776(self_1291856047.platform, (fontSize_2768240784(self_1291856047.platform) + amount_1291856048));
    requestRender_2768240746(self_1291856047.platform, true);

  
}

function changeFontSizeJsWrapper_1291856043(self_1291856076, amount_1291856077) {
    changeFontSize_1291856046(self_1291856076, amount_1291856077);

  
}
editor_prototype.changeFontSize = function(amount_ /* : float32 */) { return (changeFontSizeJsWrapper_1291856043(this, amount_));};

function rawGet_1291848320(t_1291848323, key_1291848324, hc_1291848325, hc_1291848325_Idx) {
  var result_1291848326 = 0;

  BeforeRet: {
    hc_1291848325[hc_1291848325_Idx] = hash_1325400491(key_1291848324);
    if ((hc_1291848325[hc_1291848325_Idx] == 0)) {
    hc_1291848325[hc_1291848325_Idx] = 314159265;
    }
    
    if (((t_1291848323.data).length == 0)) {
    result_1291848326 = -1;
    break BeforeRet;
    }
    
    var h_1291848378 = (hc_1291848325[hc_1291848325_Idx] & (t_1291848323.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field0)) break Label2;
          if (((t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field0 == hc_1291848325[hc_1291848325_Idx]) && eqStrings(t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field1, key_1291848324))) {
          result_1291848326 = h_1291848378;
          break BeforeRet;
          }
          
          h_1291848378 = nextTry_1308622883(h_1291848378, (t_1291848323.data).length - 1);
        }
    };
    result_1291848326 = subInt(-1, h_1291848378);
  };

  return result_1291848326;

}

function mustRehash_1291851923(t_1291851925) {
  var result_1291851926 = false;

    if (!((t_1291851925.counter < (t_1291851925.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291851926 = ((mulInt((t_1291851925.data).length, 2) < mulInt(t_1291851925.counter, 3)) || (subInt((t_1291851925.data).length, t_1291851925.counter) < 4));

  return result_1291851926;

}

function rawInsert_1291852372(t_1291852376, data_1291852377, data_1291852377_Idx, key_1291852378, val_1291852379, hc_1291852380, h_1291852381) {
    data_1291852377[data_1291852377_Idx][chckIndx(h_1291852381, 0, (data_1291852377[data_1291852377_Idx]).length - 1)].Field1 = nimCopy(null, key_1291852378, NTI33554449);
    data_1291852377[data_1291852377_Idx][chckIndx(h_1291852381, 0, (data_1291852377[data_1291852377_Idx]).length - 1)].Field2 = val_1291852379;
    data_1291852377[data_1291852377_Idx][chckIndx(h_1291852381, 0, (data_1291852377[data_1291852377_Idx]).length - 1)].Field0 = hc_1291852380;

  
}

function enlarge_1291852078(t_1291852081) {
    var n_1291852084 = [];
    n_1291852084 = new Array(chckRange(mulInt((t_1291852081.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291852081.data).length, 2), 0, 2147483647) ; ++i) { n_1291852084[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    var Temporary1 = t_1291852081.data; t_1291852081.data = n_1291852084; n_1291852084 = Temporary1;    Label2: {
      var i_1291852148 = 0;
      var colontmp__1291856391 = 0;
      colontmp__1291856391 = (n_1291852084).length - 1;
      var res_1291856392 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291856392 <= colontmp__1291856391)) break Label4;
            i_1291852148 = res_1291856392;
            var eh_1291852202 = n_1291852084[chckIndx(i_1291852148, 0, (n_1291852084).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291852202)) {
            var j_1291852206 = (eh_1291852202 & (t_1291852081.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291852081.data[chckIndx(j_1291852206, 0, (t_1291852081.data).length - 1)].Field0)) break Label6;
                  j_1291852206 = nextTry_1308622883(j_1291852206, (t_1291852081.data).length - 1);
                }
            };
            rawInsert_1291852372(t_1291852081, t_1291852081, "data", n_1291852084[chckIndx(i_1291852148, 0, (n_1291852084).length - 1)].Field1, n_1291852084[chckIndx(i_1291852148, 0, (n_1291852084).length - 1)].Field2, eh_1291852202, j_1291852206);
            }
            
            res_1291856392 = addInt(res_1291856392, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291852550(t_1291852553, key_1291852554, hc_1291852555) {
  var result_1291852556 = 0;

  BeforeRet: {
    if (((t_1291852553.data).length == 0)) {
    result_1291852556 = -1;
    break BeforeRet;
    }
    
    var h_1291852607 = (hc_1291852555 & (t_1291852553.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291852553.data[chckIndx(h_1291852607, 0, (t_1291852553.data).length - 1)].Field0)) break Label2;
          if (((t_1291852553.data[chckIndx(h_1291852607, 0, (t_1291852553.data).length - 1)].Field0 == hc_1291852555) && eqStrings(t_1291852553.data[chckIndx(h_1291852607, 0, (t_1291852553.data).length - 1)].Field1, key_1291852554))) {
          result_1291852556 = h_1291852607;
          break BeforeRet;
          }
          
          h_1291852607 = nextTry_1308622883(h_1291852607, (t_1291852553.data).length - 1);
        }
    };
    result_1291852556 = subInt(-1, h_1291852607);
  };

  return result_1291852556;

}

function mgetOrPut_1291856121(t_1291856124, key_1291856125, val_1291856126) {
  var result_1291856127 = null;
  var result_1291856127_Idx = 0;

    if (((t_1291856124.data).length == 0)) {
    var correctSizeHEX60gensym315_1291856176 = slotsNeeded_1308622891(32);
    t_1291856124.counter = 0;
    t_1291856124.data = new Array(chckRange(correctSizeHEX60gensym315_1291856176, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym315_1291856176, 0, 2147483647) ; ++i) { t_1291856124.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291856181 = [0];
    var index_1291856188 = rawGet_1291848320(t_1291856124, key_1291856125, hc_1291856181, 0);
    if ((index_1291856188 < 0)) {
    if (((t_1291856124.data).length == 0)) {
    var correctSizeHEX60gensym318_1291856237 = slotsNeeded_1308622891(32);
    t_1291856124.counter = 0;
    t_1291856124.data = new Array(chckRange(correctSizeHEX60gensym318_1291856237, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym318_1291856237, 0, 2147483647) ; ++i) { t_1291856124.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    if (mustRehash_1291851923(t_1291856124)) {
    enlarge_1291852078(t_1291856124);
    index_1291856188 = rawGetKnownHC_1291852550(t_1291856124, key_1291856125, hc_1291856181[0]);
    }
    
    index_1291856188 = subInt(-1, index_1291856188);
    rawInsert_1291852372(t_1291856124, t_1291856124, "data", key_1291856125, val_1291856126, hc_1291856181[0], index_1291856188);
    t_1291856124.counter = addInt(t_1291856124.counter, 1);
    }
    
    result_1291856127 = t_1291856124.data[chckIndx(index_1291856188, 0, (t_1291856124.data).length - 1)]; result_1291856127_Idx = "Field2";

  return [result_1291856127, result_1291856127_Idx];

}

function changeLayoutProp_1291856091(self_1291856092, prop_1291856093, change_1291856094) {
    var Temporary1;

    HEX2BHEX3D_2147483761((Temporary1 = mgetOrPut_1291856121(self_1291856092.layout_props.props, prop_1291856093, 0.0), Temporary1)[0], Temporary1[1], change_1291856094);
    requestRender_2768240746(self_1291856092.platform, true);

  
}

function changeLayoutPropJsWrapper_1291856088(self_1291856372, prop_1291856373, change_1291856374) {
    changeLayoutProp_1291856091(self_1291856372, prop_1291856373, change_1291856374);

  
}
editor_prototype.changeLayoutProp = function(prop_ /* : string */, change_ /* : float32 */) { return (changeLayoutPropJsWrapper_1291856088(this, prop_ == undefined ? undefined : cstrToNimstr(prop_), change_));};

function toggleStatusBarLocation_1291856400(self_1291856401) {
    self_1291856401.statusBarOnTop = !(self_1291856401.statusBarOnTop);
    requestRender_2768240746(self_1291856401.platform, true);

  
}

function toggleStatusBarLocationJsWrapper_1291856397(self_1291856428) {
    toggleStatusBarLocation_1291856400(self_1291856428);

  
}
editor_prototype.toggleStatusBarLocation = function() { return (toggleStatusBarLocationJsWrapper_1291856397(this));};

function createEditorForDocument_1291848878(self_1291848879, document_1291848880) {
  var result_1291848881 = null;

  BeforeRet: {
    Label1: {
      var editor_1291848904 = null;
      var i_1291856476 = 0;
      var L_1291856477 = (self_1291848879.editor_defaults).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856476 < L_1291856477)) break Label3;
            editor_1291848904 = self_1291848879.editor_defaults[chckIndx(i_1291856476, 0, (self_1291848879.editor_defaults).length - 1)];
            if (canEdit_2415919228(editor_1291848904, document_1291848880)) {
            result_1291848881 = createWithDocument_2415919243(editor_1291848904, document_1291848880);
            break BeforeRet;
            }
            
            i_1291856476 = addInt(i_1291856476, 1);
            if (!(((self_1291848879.editor_defaults).length == L_1291856477))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    log_1174405220(logger_704643272[0], 5, [([78,111,32,101,100,105,116,111,114,32,102,111,117,110,100,32,119,104,105,99,104,32,99,97,110,32,101,100,105,116,32] || []).concat(HEX24_2197815310(document_1291848880) || [])]);
    result_1291848881 = null;
    break BeforeRet;
  };

  return result_1291848881;

}

function createView_1291848958(self_1291848959, document_1291848960) {
    
function HEX3Aanonymous_1291848973() {
        requestRender_2768240746(self_1291848959.platform, false);

      
    }

    var editor_1291848961 = createEditorForDocument_1291848878(self_1291848959, document_1291848960);
    injectDependencies_1291847761(editor_1291848961, self_1291848959);
    var _ = subscribe_1291848997(editor_1291848961.onMarkedDirty, HEX3Aanonymous_1291848973);
    var view_1291849024 = {document: document_1291848960, editor: editor_1291848961};
    self_1291848959.views.push(view_1291849024);;
    self_1291848959.currentView = subInt((self_1291848959.views).length, 1);
    requestRender_2768240746(self_1291848959.platform, false);

  
}

function createView_1291856437(self_1291856438) {
    createView_1291848958(self_1291856438, newTextDocument_2818579088([], [], false));

  
}

function createViewJsWrapper_1291856434(self_1291856470) {
    createView_1291856437(self_1291856470);

  
}
editor_prototype.createView = function() { return (createViewJsWrapper_1291856434(this));};

function delete_1291856486(x_1291856488, x_1291856488_Idx, i_1291856489) {
    x_1291856488[x_1291856488_Idx].splice(i_1291856489, 1);

  
}

function closeCurrentView_1291856484(self_1291856485) {
    unregister_2415919268(self_1291856485.views[chckIndx(self_1291856485.currentView, 0, (self_1291856485.views).length - 1)].editor);
    delete_1291856486(self_1291856485, "views", chckRange(self_1291856485.currentView, 0, 2147483647));
    self_1291856485.currentView = clamp_1660945119(self_1291856485.currentView, 0, subInt((self_1291856485.views).length, 1));
    requestRender_2768240746(self_1291856485.platform, false);

  
}

function closeCurrentViewJsWrapper_1291856481(self_1291856542) {
    closeCurrentView_1291856484(self_1291856542);

  
}
editor_prototype.closeCurrentView = function() { return (closeCurrentViewJsWrapper_1291856481(this));};

function insert_1291856569(x_1291856571, x_1291856571_Idx, item_1291856572, i_1291856573) {
    var it_1291856593 = null;
    x_1291856571[x_1291856571_Idx] = x_1291856571[x_1291856571_Idx] || []; x_1291856571[x_1291856571_Idx].splice(i_1291856573, 0, it_1291856593);
    x_1291856571[x_1291856571_Idx][chckIndx(i_1291856573, 0, (x_1291856571[x_1291856571_Idx]).length - 1)] = item_1291856572;

  
}

function moveCurrentViewToTop_1291856556(self_1291856557) {
    if ((0 < (self_1291856557.views).length)) {
    var view_1291856564 = self_1291856557.views[chckIndx(self_1291856557.currentView, 0, (self_1291856557.views).length - 1)];
    delete_1291856486(self_1291856557, "views", chckRange(self_1291856557.currentView, 0, 2147483647));
    insert_1291856569(self_1291856557, "views", view_1291856564, 0);
    }
    
    self_1291856557.currentView = 0;
    requestRender_2768240746(self_1291856557.platform, false);

  
}

function moveCurrentViewToTopJsWrapper_1291856553(self_1291856620) {
    moveCurrentViewToTop_1291856556(self_1291856620);

  
}
editor_prototype.moveCurrentViewToTop = function() { return (moveCurrentViewToTopJsWrapper_1291856553(this));};

function nextView_1291856630(self_1291856631) {
    var Temporary1;

    if (((self_1291856631.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_1291856631.currentView, 1), (self_1291856631.views).length);
    }
    
    self_1291856631.currentView = Temporary1;
    requestRender_2768240746(self_1291856631.platform, false);

  
}

function nextViewJsWrapper_1291856627(self_1291856664) {
    nextView_1291856630(self_1291856664);

  
}
editor_prototype.nextView = function() { return (nextViewJsWrapper_1291856627(this));};

function prevView_1291856673(self_1291856674) {
    var Temporary1;

    if (((self_1291856674.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_1291856674.currentView, (self_1291856674.views).length), 1), (self_1291856674.views).length);
    }
    
    self_1291856674.currentView = Temporary1;
    requestRender_2768240746(self_1291856674.platform, false);

  
}

function prevViewJsWrapper_1291856670(self_1291856710) {
    prevView_1291856673(self_1291856710);

  
}
editor_prototype.prevView = function() { return (prevViewJsWrapper_1291856670(this));};

function moveCurrentViewPrev_1291856719(self_1291856720) {
    if ((0 < (self_1291856720.views).length)) {
    var view_1291856727 = self_1291856720.views[chckIndx(self_1291856720.currentView, 0, (self_1291856720.views).length - 1)];
    var index_1291856734 = modInt(subInt(addInt(self_1291856720.currentView, (self_1291856720.views).length), 1), (self_1291856720.views).length);
    delete_1291856486(self_1291856720, "views", chckRange(self_1291856720.currentView, 0, 2147483647));
    insert_1291856569(self_1291856720, "views", view_1291856727, chckRange(index_1291856734, 0, 2147483647));
    self_1291856720.currentView = index_1291856734;
    }
    
    requestRender_2768240746(self_1291856720.platform, false);

  
}

function moveCurrentViewPrevJsWrapper_1291856716(self_1291856770) {
    moveCurrentViewPrev_1291856719(self_1291856770);

  
}
editor_prototype.moveCurrentViewPrev = function() { return (moveCurrentViewPrevJsWrapper_1291856716(this));};

function moveCurrentViewNext_1291856779(self_1291856780) {
    if ((0 < (self_1291856780.views).length)) {
    var view_1291856787 = self_1291856780.views[chckIndx(self_1291856780.currentView, 0, (self_1291856780.views).length - 1)];
    var index_1291856791 = modInt(addInt(self_1291856780.currentView, 1), (self_1291856780.views).length);
    delete_1291856486(self_1291856780, "views", chckRange(self_1291856780.currentView, 0, 2147483647));
    insert_1291856569(self_1291856780, "views", view_1291856787, chckRange(index_1291856791, 0, 2147483647));
    self_1291856780.currentView = index_1291856791;
    }
    
    requestRender_2768240746(self_1291856780.platform, false);

  
}

function moveCurrentViewNextJsWrapper_1291856776(self_1291856827) {
    moveCurrentViewNext_1291856779(self_1291856827);

  
}
editor_prototype.moveCurrentViewNext = function() { return (moveCurrentViewNextJsWrapper_1291856776(this));};

function setLayout_1291856836(self_1291856837, layout_1291856838) {
    var Temporary1;

    switch (toJSStr(layout_1291856838)) {
    case "horizontal":
      Temporary1 = {m_type: NTI1291845643};
      break;
    case "vertical":
      Temporary1 = {m_type: NTI1291845644};
      break;
    case "fibonacci":
      Temporary1 = {m_type: NTI1291845645};
      break;
    default: 
      Temporary1 = {m_type: NTI1291845643};
      break;
    }
    self_1291856837.layout = Temporary1;
    requestRender_2768240746(self_1291856837.platform, false);

  
}

function setLayoutJsWrapper_1291856833(self_1291856902, layout_1291856903) {
    setLayout_1291856836(self_1291856902, layout_1291856903);

  
}
editor_prototype.setLayout = function(layout_ /* : string */) { return (setLayoutJsWrapper_1291856833(this, layout_ == undefined ? undefined : cstrToNimstr(layout_)));};

function getCommandLineTextEditor_1291851061(self_1291851062) {
  var result_1291851063 = null;

    result_1291851063 = self_1291851062.commandLineTextEditor;

  return result_1291851063;

}

function commandLine_1291856917(self_1291856918, initialValue_1291856919) {
    contentHEX3D_2818573989(getCommandLineTextEditor_1291851061(self_1291856918).document, [nimCopy(null, initialValue_1291856919, NTI33554449)]);
    self_1291856918.commandLineMode = true;
    requestRender_2768240746(self_1291856918.platform, false);

  
}

function commandLineJsWrapper_1291856914(self_1291856951, initialValue_1291856952) {
    commandLine_1291856917(self_1291856951, initialValue_1291856952);

  
}
editor_prototype.commandLine = function(initialValue_ /* : string */) { return (commandLineJsWrapper_1291856914(this, initialValue_ == undefined ? undefined : cstrToNimstr(initialValue_)));};

function exitCommandLine_1291856966(self_1291856967) {
    contentHEX3D_2818573989(getCommandLineTextEditor_1291851061(self_1291856967).document, [[]]);
    self_1291856967.commandLineMode = false;
    requestRender_2768240746(self_1291856967.platform, false);

  
}

function exitCommandLineJsWrapper_1291856963(self_1291856998) {
    exitCommandLine_1291856966(self_1291856998);

  
}
editor_prototype.exitCommandLine = function() { return (exitCommandLineJsWrapper_1291856963(this));};

function find_1593835603(a_1593835606, item_1593835607) {
  var result_1593835608 = 0;

  BeforeRet: {
    result_1593835608 = 0;
    Label1: {
      var i_1593835609 = 0;
      var i_1291857076 = 0;
      var L_1291857077 = (a_1593835606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857076 < L_1291857077)) break Label3;
            i_1593835609 = a_1593835606[chckIndx(i_1291857076, 0, (a_1593835606).length - 1)];
            if ((i_1593835609 == item_1593835607)) {
            break BeforeRet;
            }
            
            result_1593835608 = addInt(result_1593835608, 1);
            i_1291857076 = addInt(i_1291857076, 1);
            if (!(((a_1593835606).length == L_1291857077))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1593835608 = -1;
  };

  return result_1593835608;

}

function parseAction_2113930650(action_2113930651) {
  var result_2113930654 = {Field0: [], Field1: []};

  BeforeRet: {
    var spaceIndex_2113930660 = find_1593835603(action_2113930651, 32);
    if ((spaceIndex_2113930660 == -1)) {
    var colontmp__1291857071 = nimCopy(null, action_2113930651, NTI33554449);
    var colontmp__1291857072 = [];
    result_2113930654 = nimCopy(result_2113930654, {Field0: nimCopy(null, colontmp__1291857071, NTI33554449), Field1: nimCopy(null, colontmp__1291857072, NTI33554449)}, NTI2113929938);
    break BeforeRet;
    }
    else {
      var colontmp__1291857073 = HEX5BHEX5D_855639291(action_2113930651, HEX2EHEX2E_805306418(0, subInt(spaceIndex_2113930660, 1)));
      var colontmp__1291857074 = HEX5BHEX5D_855639319(action_2113930651, HEX2EHEX2E_1040187488(addInt(spaceIndex_2113930660, 1), 1));
      result_2113930654 = nimCopy(result_2113930654, {Field0: nimCopy(null, colontmp__1291857073, NTI33554449), Field1: nimCopy(null, colontmp__1291857074, NTI33554449)}, NTI2113929938);
      break BeforeRet;
    }
    
  };

  return result_2113930654;

}

function executeCommandLine_1291857007(self_1291857008) {
  var result_1291857009 = false;

  BeforeRet: {
    try {
    self_1291857008.commandLineMode = false;
    var colontmp__1291857070 = parseAction_2113930650(nsuJoinSep(content_2818574085(getCommandLineTextEditor_1291851061(self_1291857008).document), []));
    var action_1291857010 = nimCopy(null, colontmp__1291857070["Field0"], NTI33554449);
    var arg_1291857011 = nimCopy(null, colontmp__1291857070["Field1"], NTI33554449);
    contentHEX3D_2818573989(getCommandLineTextEditor_1291851061(self_1291857008).document, [[]]);
    if (nsuStartsWith(arg_1291857011, [92])) {
    arg_1291857011 = nimCopy(null, HEX24_1627394481(newJString_1627389994(HEX5BHEX5D_855639319(arg_1291857011, HEX2EHEX2E_1040187488(1, 1)))), NTI33554449);
    }
    
    result_1291857009 = handleAction_1291848870(self_1291857008, action_1291857010, arg_1291857011);
    break BeforeRet;
    } finally {
    requestRender_2768240746(self_1291857008.platform, false);
    }
  };

  return result_1291857009;

}

function executeCommandLineJsWrapper_1291857004(self_1291857061) {
  var result_1291857062 = false;

    result_1291857062 = executeCommandLine_1291857007(self_1291857061);

  return result_1291857062;

}
editor_prototype.executeCommandLine = function() { return (executeCommandLineJsWrapper_1291857004(this));};

function writeFile_1291857108(self_1291857109, path_1291857110, app_1291857111) {
    try {
    if ((((0 <= self_1291857109.currentView) && (self_1291857109.currentView < (self_1291857109.views).length)) && !((self_1291857109.views[chckIndx(self_1291857109.currentView, 0, (self_1291857109.views).length - 1)].document == null)))) {
++excHandler;
    try {
    save_2197815316(self_1291857109.views[chckIndx(self_1291857109.currentView, 0, (self_1291857109.views).length - 1)].document, path_1291857110, app_1291857111);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857123 = [mnewString(0)];
    fmtRes_1291857123[0].push.apply(fmtRes_1291857123[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857123, 0, path_1291857110, []);
    fmtRes_1291857123[0].push.apply(fmtRes_1291857123[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857123, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857123[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857109.platform, false);
    }

  
}

function writeFileJsWrapper_1291857105(self_1291857152, path_1291857153, app_1291857154) {
    writeFile_1291857108(self_1291857152, path_1291857153, app_1291857154);

  
}
editor_prototype.writeFile = function(path_ /* : string */, app_ /* : bool */) { return (writeFileJsWrapper_1291857105(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function loadFile_1291857173(self_1291857174, path_1291857175) {
    try {
    if ((((0 <= self_1291857174.currentView) && (self_1291857174.currentView < (self_1291857174.views).length)) && !((self_1291857174.views[chckIndx(self_1291857174.currentView, 0, (self_1291857174.views).length - 1)].document == null)))) {
++excHandler;
    try {
    load_2197815320(self_1291857174.views[chckIndx(self_1291857174.currentView, 0, (self_1291857174.views).length - 1)].document, path_1291857175);
    handleDocumentChanged_2415919265(self_1291857174.views[chckIndx(self_1291857174.currentView, 0, (self_1291857174.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857187 = [mnewString(0)];
    fmtRes_1291857187[0].push.apply(fmtRes_1291857187[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857187, 0, path_1291857175, []);
    fmtRes_1291857187[0].push.apply(fmtRes_1291857187[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857187, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857187[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857174.platform, false);
    }

  
}

function loadFileJsWrapper_1291857170(self_1291857215, path_1291857216) {
    loadFile_1291857173(self_1291857215, path_1291857216);

  
}
editor_prototype.loadFile = function(path_ /* : string */) { return (loadFileJsWrapper_1291857170(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function nsuEndsWith(s_855639486, suffix_855639487) {
  var result_855639488 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_855639494 = (suffix_855639487).length;
    var sLenHEX60gensym153_855639495 = (s_855639486).length;
    var iHEX60gensym153_855639496 = 0;
    var jHEX60gensym153_855639497 = subInt(sLenHEX60gensym153_855639495, suffixLenHEX60gensym153_855639494);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497)) && (addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497) < sLenHEX60gensym153_855639495))) break Label2;
          if (!((s_855639486[chckIndx(addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497), 0, (s_855639486).length - 1)] == suffix_855639487[chckIndx(iHEX60gensym153_855639496, 0, (suffix_855639487).length - 1)]))) {
          result_855639488 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_855639496 = addInt(iHEX60gensym153_855639496, 1);
        }
    };
    if ((suffixLenHEX60gensym153_855639494 <= iHEX60gensym153_855639496)) {
    result_855639488 = true;
    break BeforeRet;
    }
    
  };

  return result_855639488;

}

function newAstDocument_2969571554(filename_2969571555, app_2969571556, workspaceFolder_2969571558) {
  var result_2969571559 = null;

    result_2969571559 = ({m_type: NTI2969568612, filename: [], symbols: ({data: [], counter: 0}), rootNode: null, nodes: ({data: [], counter: 0}), onNodeInserted: [], undoOps: [], redoOps: [], appFile: false, workspace: ({val: null})});
    result_2969571559.filename = nimCopy(null, filename_2969571555, NTI33554449);
    result_2969571559.rootNode = {kind: 7, parent: null, id: newId_2046820597(), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []};
    result_2969571559.symbols = nimCopy(result_2969571559.symbols, initTable_3019905097(32), NTI3087008713);
    result_2969571559.appFile = app_2969571556;
    result_2969571559.workspace = nimCopy(result_2969571559.workspace, workspaceFolder_2969571558, NTI2197815306);
    if ((0 < (filename_2969571555).length)) {
    load_2197815320(result_2969571559, []);
    }
    

  return result_2969571559;

}

function none_1291855522() {
  var result_1291855528 = ({val: null});

  return result_1291855528;

}

function newModel_3271561825(id_3271561826) {
  var result_3271561827 = null;

    result_3271561827 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), rootNodes: [], languages: [], importedModels: [], classesToLanguages: ({data: [], counter: 0}), nodes: ({data: [], counter: 0}), onNodeDeleted: ({handlers: []}), onNodeInserted: ({handlers: []}), onNodePropertyChanged: ({handlers: []}), onNodeReferenceChanged: ({handlers: []})});
    result_3271561827.id = nimCopy(result_3271561827.id, id_3271561826, NTI2046820355);

  return result_3271561827;

}

function mustRehash_3271563587(t_3271563589) {
  var result_3271563590 = false;

    if (!((t_3271563589.counter < (t_3271563589.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271563590 = ((mulInt((t_3271563589.data).length, 2) < mulInt(t_3271563589.counter, 3)) || (subInt((t_3271563589.data).length, t_3271563589.counter) < 4));

  return result_3271563590;

}

function rawInsert_3271564036(t_3271564040, data_3271564041, data_3271564041_Idx, key_3271564042, val_3271564043, hc_3271564044, h_3271564045) {
    data_3271564041[data_3271564041_Idx][chckIndx(h_3271564045, 0, (data_3271564041[data_3271564041_Idx]).length - 1)].Field1 = nimCopy(data_3271564041[data_3271564041_Idx][chckIndx(h_3271564045, 0, (data_3271564041[data_3271564041_Idx]).length - 1)].Field1, key_3271564042, NTI2046820355);
    data_3271564041[data_3271564041_Idx][chckIndx(h_3271564045, 0, (data_3271564041[data_3271564041_Idx]).length - 1)].Field2 = val_3271564043;
    data_3271564041[data_3271564041_Idx][chckIndx(h_3271564045, 0, (data_3271564041[data_3271564041_Idx]).length - 1)].Field0 = hc_3271564044;

  
}

function enlarge_3271563742(t_3271563745) {
    var n_3271563748 = [];
    n_3271563748 = new Array(chckRange(mulInt((t_3271563745.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271563745.data).length, 2), 0, 2147483647) ; ++i) { n_3271563748[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3271563745.data; t_3271563745.data = n_3271563748; n_3271563748 = Temporary1;    Label2: {
      var i_3271563812 = 0;
      var colontmp__1291857367 = 0;
      colontmp__1291857367 = (n_3271563748).length - 1;
      var res_1291857368 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291857368 <= colontmp__1291857367)) break Label4;
            i_3271563812 = res_1291857368;
            var eh_3271563866 = n_3271563748[chckIndx(i_3271563812, 0, (n_3271563748).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271563866)) {
            var j_3271563870 = (eh_3271563866 & (t_3271563745.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271563745.data[chckIndx(j_3271563870, 0, (t_3271563745.data).length - 1)].Field0)) break Label6;
                  j_3271563870 = nextTry_1308622883(j_3271563870, (t_3271563745.data).length - 1);
                }
            };
            rawInsert_3271564036(t_3271563745, t_3271563745, "data", n_3271563748[chckIndx(i_3271563812, 0, (n_3271563748).length - 1)].Field1, n_3271563748[chckIndx(i_3271563812, 0, (n_3271563748).length - 1)].Field2, eh_3271563866, j_3271563870);
            }
            
            res_1291857368 = addInt(res_1291857368, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271564205(t_3271564208, key_3271564209, hc_3271564210) {
  var result_3271564211 = 0;

  BeforeRet: {
    if (((t_3271564208.data).length == 0)) {
    result_3271564211 = -1;
    break BeforeRet;
    }
    
    var h_3271564262 = (hc_3271564210 & (t_3271564208.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271564208.data[chckIndx(h_3271564262, 0, (t_3271564208.data).length - 1)].Field0)) break Label2;
          if (((t_3271564208.data[chckIndx(h_3271564262, 0, (t_3271564208.data).length - 1)].Field0 == hc_3271564210) && HEX3DHEX3D_2046820626(t_3271564208.data[chckIndx(h_3271564262, 0, (t_3271564208.data).length - 1)].Field1, key_3271564209))) {
          result_3271564211 = h_3271564262;
          break BeforeRet;
          }
          
          h_3271564262 = nextTry_1308622883(h_3271564262, (t_3271564208.data).length - 1);
        }
    };
    result_3271564211 = subInt(-1, h_3271564262);
  };

  return result_3271564211;

}

function HEX5BHEX5DHEX3D_3271563414(t_3271563417, key_3271563418, val_3271563419) {
    if (((t_3271563417.data).length == 0)) {
    var correctSizeHEX60gensym85_3271563468 = slotsNeeded_1308622891(32);
    t_3271563417.counter = 0;
    t_3271563417.data = new Array(chckRange(correctSizeHEX60gensym85_3271563468, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym85_3271563468, 0, 2147483647) ; ++i) { t_3271563417.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3271563473 = [0];
    var index_3271563480 = rawGet_3271561240(t_3271563417, key_3271563418, hc_3271563473, 0);
    if ((0 <= index_3271563480)) {
    t_3271563417.data[chckIndx(index_3271563480, 0, (t_3271563417.data).length - 1)].Field2 = val_3271563419;
    }
    else {
      if (((t_3271563417.data).length == 0)) {
      var correctSizeHEX60gensym88_3271563582 = slotsNeeded_1308622891(32);
      t_3271563417.counter = 0;
      t_3271563417.data = new Array(chckRange(correctSizeHEX60gensym88_3271563582, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym88_3271563582, 0, 2147483647) ; ++i) { t_3271563417.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3271563587(t_3271563417)) {
      enlarge_3271563742(t_3271563417);
      index_3271563480 = rawGetKnownHC_3271564205(t_3271563417, key_3271563418, hc_3271563473[0]);
      }
      
      index_3271563480 = subInt(-1, index_3271563480);
      rawInsert_3271564036(t_3271563417, t_3271563417, "data", key_3271563418, val_3271563419, hc_3271563473[0], index_3271563480);
      t_3271563417.counter = addInt(t_3271563417.counter, 1);
    }
    

  
}

function addLanguage_3271563145(self_3271563146, language_3271563147) {
    self_3271563146.languages.push(language_3271563147);;
    Label1: {
      var c_3271563373 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var L_1291857359 = len_3271563200(language_3271563147.classes);
      Label2: {
        var h_1291857361 = 0;
        var colontmp__1291857362 = 0;
        colontmp__1291857362 = (language_3271563147.classes.data).length - 1;
        var res_1291857363 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291857363 <= colontmp__1291857362)) break Label4;
              h_1291857361 = res_1291857363;
              if (isFilled_1308622880(language_3271563147.classes.data[chckIndx(h_1291857361, 0, (language_3271563147.classes.data).length - 1)].Field0)) {
              c_3271563373 = language_3271563147.classes.data[chckIndx(h_1291857361, 0, (language_3271563147.classes.data).length - 1)].Field1;
              HEX5BHEX5DHEX3D_3271563414(self_3271563146.classesToLanguages, c_3271563373, language_3271563147);
              if (!((len_3271563200(language_3271563147.classes) == L_1291857359))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291857363 = addInt(res_1291857363, 1);
            }
        };
      };
    };

  
}

function addRootNode_3271564443(self_3271564444, node_3271564445) {
    
function HEX3Aanonymous_3271564451(nHEX60gensym96_3271564452) {
        var n_3271564453 = nHEX60gensym96_3271564452;
        n_3271564453.model = self_3271564444;
        HEX5BHEX5DHEX3D_3271564494(self_3271564444.nodes, n_3271564453.id, n_3271564453);

      
    }

    self_3271564444.rootNodes.push(node_3271564445);;
    forEach_3271557910(node_3271564445, HEX3Aanonymous_3271564451);

  
}

function addBuilder_3271570292(self_3271570293, other_3271570294) {
    Label1: {
      var pair_3271570578 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
      var L_1291857377 = len_3271570343(other_3271570294.builders);
      Label2: {
        var h_1291857379 = 0;
        var colontmp__1291857380 = 0;
        colontmp__1291857380 = (other_3271570294.builders.data).length - 1;
        var res_1291857381 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291857381 <= colontmp__1291857380)) break Label4;
              h_1291857379 = res_1291857381;
              if (isFilled_1308622880(other_3271570294.builders.data[chckIndx(h_1291857379, 0, (other_3271570294.builders.data).length - 1)].Field0)) {
              pair_3271570578 = nimCopy(pair_3271570578, {Field0: nimCopy(null, other_3271570294.builders.data[chckIndx(h_1291857379, 0, (other_3271570294.builders.data).length - 1)].Field1, NTI2046820355), Field1: nimCopy(null, other_3271570294.builders.data[chckIndx(h_1291857379, 0, (other_3271570294.builders.data).length - 1)].Field2, NTI3271557169)}, NTI3271564230);
              Label5: {
                var builder_3271570601 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
                var colontmp__1291857373 = [];
                colontmp__1291857373 = pair_3271570578["Field1"];
                var i_1291857374 = 0;
                var L_1291857375 = (colontmp__1291857373).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_1291857374 < L_1291857375)) break Label7;
                      builder_3271570601 = colontmp__1291857373[chckIndx(i_1291857374, 0, (colontmp__1291857373).length - 1)];
                      addBuilderFor_3271568748(self_3271570293, pair_3271570578["Field0"], builder_3271570601["Field0"], builder_3271570601["Field1"]);
                      i_1291857374 = addInt(i_1291857374, 1);
                      if (!(((colontmp__1291857373).length == L_1291857375))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_3271570343(other_3271570294.builders) == L_1291857377))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291857381 = addInt(res_1291857381, 1);
            }
        };
      };
    };
    Label8: {
      var pair_3271570876 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
      var L_1291857384 = len_3271570650(other_3271570294.preferredBuilders);
      Label9: {
        var h_1291857386 = 0;
        var colontmp__1291857387 = 0;
        colontmp__1291857387 = (other_3271570294.preferredBuilders.data).length - 1;
        var res_1291857388 = 0;
        Label10: {
            Label11: while (true) {
            if (!(res_1291857388 <= colontmp__1291857387)) break Label11;
              h_1291857386 = res_1291857388;
              if (isFilled_1308622880(other_3271570294.preferredBuilders.data[chckIndx(h_1291857386, 0, (other_3271570294.preferredBuilders.data).length - 1)].Field0)) {
              pair_3271570876 = nimCopy(pair_3271570876, {Field0: nimCopy(null, other_3271570294.preferredBuilders.data[chckIndx(h_1291857386, 0, (other_3271570294.preferredBuilders.data).length - 1)].Field1, NTI2046820355), Field1: nimCopy(null, other_3271570294.preferredBuilders.data[chckIndx(h_1291857386, 0, (other_3271570294.preferredBuilders.data).length - 1)].Field2, NTI2046820355)}, NTI3271564383);
              HEX5BHEX5DHEX3D_3003122010(self_3271570293.preferredBuilders, pair_3271570876["Field0"], pair_3271570876["Field1"]);
              if (!((len_3271570650(other_3271570294.preferredBuilders) == L_1291857384))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291857388 = addInt(res_1291857388, 1);
            }
        };
      };
    };

  
}

function builder_3271557596(selfHEX60gensym20_3271557597) {
  var result_3271557598 = null;

  BeforeRet: {
    result_3271557598 = selfHEX60gensym20_3271557597.builder;
    break BeforeRet;
  };

  return result_3271557598;

}

function rawGet_3271561944(t_3271561947, key_3271561948, hc_3271561949, hc_3271561949_Idx) {
  var result_3271561950 = 0;

  BeforeRet: {
    hc_3271561949[hc_3271561949_Idx] = hash_2046820630(key_3271561948);
    if ((hc_3271561949[hc_3271561949_Idx] == 0)) {
    hc_3271561949[hc_3271561949_Idx] = 314159265;
    }
    
    if (((t_3271561947.data).length == 0)) {
    result_3271561950 = -1;
    break BeforeRet;
    }
    
    var h_3271562001 = (hc_3271561949[hc_3271561949_Idx] & (t_3271561947.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271561947.data[chckIndx(h_3271562001, 0, (t_3271561947.data).length - 1)].Field0)) break Label2;
          if (((t_3271561947.data[chckIndx(h_3271562001, 0, (t_3271561947.data).length - 1)].Field0 == hc_3271561949[hc_3271561949_Idx]) && HEX3DHEX3D_2046820626(t_3271561947.data[chckIndx(h_3271562001, 0, (t_3271561947.data).length - 1)].Field1, key_3271561948))) {
          result_3271561950 = h_3271562001;
          break BeforeRet;
          }
          
          h_3271562001 = nextTry_1308622883(h_3271562001, (t_3271561947.data).length - 1);
        }
    };
    result_3271561950 = subInt(-1, h_3271562001);
  };

  return result_3271561950;

}

function mustRehash_3271562289(t_3271562291) {
  var result_3271562292 = false;

    if (!((t_3271562291.counter < (t_3271562291.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271562292 = ((mulInt((t_3271562291.data).length, 2) < mulInt(t_3271562291.counter, 3)) || (subInt((t_3271562291.data).length, t_3271562291.counter) < 4));

  return result_3271562292;

}

function rawInsert_3271562738(t_3271562742, data_3271562743, data_3271562743_Idx, key_3271562744, val_3271562745, hc_3271562746, h_3271562747) {
    data_3271562743[data_3271562743_Idx][chckIndx(h_3271562747, 0, (data_3271562743[data_3271562743_Idx]).length - 1)].Field1 = nimCopy(data_3271562743[data_3271562743_Idx][chckIndx(h_3271562747, 0, (data_3271562743[data_3271562743_Idx]).length - 1)].Field1, key_3271562744, NTI2046820355);
    data_3271562743[data_3271562743_Idx][chckIndx(h_3271562747, 0, (data_3271562743[data_3271562743_Idx]).length - 1)].Field2 = val_3271562745;
    data_3271562743[data_3271562743_Idx][chckIndx(h_3271562747, 0, (data_3271562743[data_3271562743_Idx]).length - 1)].Field0 = hc_3271562746;

  
}

function enlarge_3271562444(t_3271562447) {
    var n_3271562450 = [];
    n_3271562450 = new Array(chckRange(mulInt((t_3271562447.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271562447.data).length, 2), 0, 2147483647) ; ++i) { n_3271562450[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3271562447.data; t_3271562447.data = n_3271562450; n_3271562450 = Temporary1;    Label2: {
      var i_3271562514 = 0;
      var colontmp__1291857393 = 0;
      colontmp__1291857393 = (n_3271562450).length - 1;
      var res_1291857394 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291857394 <= colontmp__1291857393)) break Label4;
            i_3271562514 = res_1291857394;
            var eh_3271562568 = n_3271562450[chckIndx(i_3271562514, 0, (n_3271562450).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271562568)) {
            var j_3271562572 = (eh_3271562568 & (t_3271562447.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271562447.data[chckIndx(j_3271562572, 0, (t_3271562447.data).length - 1)].Field0)) break Label6;
                  j_3271562572 = nextTry_1308622883(j_3271562572, (t_3271562447.data).length - 1);
                }
            };
            rawInsert_3271562738(t_3271562447, t_3271562447, "data", n_3271562450[chckIndx(i_3271562514, 0, (n_3271562450).length - 1)].Field1, n_3271562450[chckIndx(i_3271562514, 0, (n_3271562450).length - 1)].Field2, eh_3271562568, j_3271562572);
            }
            
            res_1291857394 = addInt(res_1291857394, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271562907(t_3271562910, key_3271562911, hc_3271562912) {
  var result_3271562913 = 0;

  BeforeRet: {
    if (((t_3271562910.data).length == 0)) {
    result_3271562913 = -1;
    break BeforeRet;
    }
    
    var h_3271562964 = (hc_3271562912 & (t_3271562910.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271562910.data[chckIndx(h_3271562964, 0, (t_3271562910.data).length - 1)].Field0)) break Label2;
          if (((t_3271562910.data[chckIndx(h_3271562964, 0, (t_3271562910.data).length - 1)].Field0 == hc_3271562912) && HEX3DHEX3D_2046820626(t_3271562910.data[chckIndx(h_3271562964, 0, (t_3271562910.data).length - 1)].Field1, key_3271562911))) {
          result_3271562913 = h_3271562964;
          break BeforeRet;
          }
          
          h_3271562964 = nextTry_1308622883(h_3271562964, (t_3271562910.data).length - 1);
        }
    };
    result_3271562913 = subInt(-1, h_3271562964);
  };

  return result_3271562913;

}

function HEX5BHEX5DHEX3D_3271561883(t_3271561886, key_3271561887, val_3271561888) {
    if (((t_3271561886.data).length == 0)) {
    var correctSizeHEX60gensym69_3271561938 = slotsNeeded_1308622891(32);
    t_3271561886.counter = 0;
    t_3271561886.data = new Array(chckRange(correctSizeHEX60gensym69_3271561938, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym69_3271561938, 0, 2147483647) ; ++i) { t_3271561886.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3271561943 = [0];
    var index_3271562182 = rawGet_3271561944(t_3271561886, key_3271561887, hc_3271561943, 0);
    if ((0 <= index_3271562182)) {
    t_3271561886.data[chckIndx(index_3271562182, 0, (t_3271561886.data).length - 1)].Field2 = val_3271561888;
    }
    else {
      if (((t_3271561886.data).length == 0)) {
      var correctSizeHEX60gensym74_3271562284 = slotsNeeded_1308622891(32);
      t_3271561886.counter = 0;
      t_3271561886.data = new Array(chckRange(correctSizeHEX60gensym74_3271562284, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym74_3271562284, 0, 2147483647) ; ++i) { t_3271561886.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3271562289(t_3271561886)) {
      enlarge_3271562444(t_3271561886);
      index_3271562182 = rawGetKnownHC_3271562907(t_3271561886, key_3271561887, hc_3271561943[0]);
      }
      
      index_3271562182 = subInt(-1, index_3271562182);
      rawInsert_3271562738(t_3271561886, t_3271561886, "data", key_3271561887, val_3271561888, hc_3271561943[0], index_3271562182);
      t_3271561886.counter = addInt(t_3271561886.counter, 1);
    }
    

  
}

function addModel_3271561840(self_3271561841, model_3271561842) {
    HEX5BHEX5DHEX3D_3271561883(self_3271561841.models, model_3271561842.id, model_3271561842);

  
}

function newModelDocument_3254780282(filename_3254780283, app_3254780284, workspaceFolder_3254780286) {
  var result_3254780287 = null;

    result_3254780287 = ({m_type: NTI3254779967, filename: [], model: null, project: null, currentTransaction: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), operations: []}), undoList: [], redoList: [], onModelChanged: ({handlers: []}), onFinishedUndoTransaction: ({handlers: []}), onFinishedRedoTransaction: ({handlers: []}), builder: null, appFile: false, workspace: ({val: null})});
    result_3254780287.filename = nimCopy(null, filename_3254780283, NTI33554449);
    result_3254780287.appFile = app_3254780284;
    result_3254780287.workspace = nimCopy(result_3254780287.workspace, workspaceFolder_3254780286, NTI2197815306);
    result_3254780287.project = project_3254779953[0];
    var testModel_3254780291 = newModel_3271561825(newId_2046820597());
    addLanguage_3271563145(testModel_3254780291, baseLanguage_3321889815);
    var a_3254780292 = newAstNode_3271567013(stringLiteralClass_3321888812, none_3271567020());
    var b_3254780293 = newAstNode_3271567013(nodeReferenceClass_3321888810, none_3271567020());
    var c_3254780294 = newAstNode_3271567013(binaryExpressionClass_3321888787, none_3271567020());
    add_3271557906(c_3254780294, IdBinaryExpressionLeft_2986344530, a_3254780292);
    add_3271557906(c_3254780294, IdBinaryExpressionRight_2986344531, b_3254780293);
    addRootNode_3271564443(testModel_3254780291, c_3254780294);
    result_3254780287.model = testModel_3254780291;
    result_3254780287.builder = newCellBuilder_3271568734();
    Label1: {
      var language_3254780317 = null;
      var colontmp__1291857350 = [];
      colontmp__1291857350 = languages_3271557504(result_3254780287.model);
      var i_1291857351 = 0;
      var L_1291857352 = (colontmp__1291857350).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857351 < L_1291857352)) break Label3;
            language_3254780317 = colontmp__1291857350[chckIndx(i_1291857351, 0, (colontmp__1291857350).length - 1)];
            addBuilder_3271570292(result_3254780287.builder, builder_3271557596(language_3254780317));
            i_1291857351 = addInt(i_1291857351, 1);
            if (!(((colontmp__1291857350).length == L_1291857352))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    addModel_3271561840(project_3254779953[0], result_3254780287.model);
    project_3254779953[0].builder = result_3254780287.builder;
    if ((0 < (filename_3254780283).length)) {
    load_2197815320(result_3254780287, []);
    }
    

  return result_3254780287;

}

function newTextDocument_1291857266(filename_1291857268, content_1291857269, app_1291857270) {
  var result_1291857271 = null;

    result_1291857271 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857275 = result_1291857271;
    self_1291857275.filename = nimCopy(null, filename_1291857268, NTI33554449);
    self_1291857275.currentTree = null;
    self_1291857275.appFile = app_1291857270;
    var _ = initTreesitter_2818578870(self_1291857275);
    var language_1291857276 = getLanguageForFile_2902458372(filename_1291857268);
    if (isSome_2348810304(language_1291857276)) {
    self_1291857275.languageId = nimCopy(null, get_2818578907(language_1291857276), NTI33554449);
    }
    
    contentHEX3D_2818573989(self_1291857275, content_1291857269);

  return result_1291857271;

}

function openFile_1291857249(self_1291857250, path_1291857251, app_1291857252) {
      var Temporary3;

    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857251, [46,97,115,116])) {
    createView_1291848958(self_1291857250, newAstDocument_2969571554(path_1291857251, app_1291857252, none_1291855522()));
    }
    else {
    if (nsuEndsWith(path_1291857251, [46,97,109])) {
    createView_1291848958(self_1291857250, newModelDocument_3254780282(path_1291857251, app_1291857252, none_1291855522()));
    }
    else {
      if (app_1291857252) {
      Temporary3 = loadApplicationFile_2365587474(fs_2365587509, path_1291857251);
      }
      else {
      Temporary3 = loadFile_2365587463(fs_2365587509, path_1291857251);
      }
      
      var file_1291857265 = nimCopy(null, Temporary3, NTI33554449);
      createView_1291848958(self_1291857250, newTextDocument_1291857266(path_1291857251, nsuSplitLines(file_1291857265, false), app_1291857252));
    }
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857303 = [mnewString(0)];
    fmtRes_1291857303[0].push.apply(fmtRes_1291857303[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857303, 0, path_1291857251, []);
    fmtRes_1291857303[0].push.apply(fmtRes_1291857303[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857303, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857303[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2768240746(self_1291857250.platform, false);
    }

  
}

function openFileJsWrapper_1291857246(self_1291857332, path_1291857333, app_1291857334) {
    openFile_1291857249(self_1291857332, path_1291857333, app_1291857334);

  
}
editor_prototype.openFile = function(path_ /* : string */, app_ /* : bool */) { return (openFileJsWrapper_1291857246(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function removeFromLocalStorage_1291857458(self_1291857459) {
    var Temporary1;

    if ((((0 <= self_1291857459.currentView) && (self_1291857459.currentView < (self_1291857459.views).length)) && !((self_1291857459.views[chckIndx(self_1291857459.currentView, 0, (self_1291857459.views).length - 1)].document == null)))) {
    if (isObj(self_1291857459.views[chckIndx(self_1291857459.currentView, 0, (self_1291857459.views).length - 1)].document.m_type, NTI2818572427)) {
    Temporary1 = self_1291857459.views[chckIndx(self_1291857459.currentView, 0, (self_1291857459.views).length - 1)].document.filename;
    }
    else {
    Temporary1 = self_1291857459.views[chckIndx(self_1291857459.currentView, 0, (self_1291857459.views).length - 1)].document.filename;
    }
    
    var filename_1291857475 = nimCopy(null, Temporary1, NTI33554449);
    window.localStorage.removeItem(toJSStr(filename_1291857475));;
    }
    

  
}

function removeFromLocalStorageJsWrapper_1291857455(self_1291857502) {
    removeFromLocalStorage_1291857458(self_1291857502);

  
}
editor_prototype.removeFromLocalStorage = function() { return (removeFromLocalStorageJsWrapper_1291857455(this));};

function loadFromFile_2516586059(path_2516586060) {
  var result_2516586062 = ({val: null});

  return result_2516586062;

}

function isSome_1291851014(self_1291851016) {
  var result_1291851017 = false;

    result_1291851017 = !((self_1291851016.val == null));

  return result_1291851017;

}

function isNone_1291851042(self_1291851044) {
  var result_1291851045 = false;

    result_1291851045 = (self_1291851044.val == null);

  return result_1291851045;

}

function get_1291851034(self_1291851036) {
  var result_1291851037 = null;

    if (isNone_1291851042(self_1291851036)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291851037 = self_1291851036["val"];

  return result_1291851037;

}

function loadTheme_1291857511(self_1291857512, name_1291857513) {
      var Temporary2;

    try {
      var fmtRes_1291857518 = [mnewString(0)];
      fmtRes_1291857518[0].push.apply(fmtRes_1291857518[0], [46,47,116,104,101,109,101,115,47]);;
      formatValue_721420459(fmtRes_1291857518, 0, name_1291857513, []);
      fmtRes_1291857518[0].push.apply(fmtRes_1291857518[0], [46,106,115,111,110]);;
      var oHEX60gensym481_1291857521 = loadFromFile_2516586059(fmtRes_1291857518[0]);
      if (!isSome_1291851014(oHEX60gensym481_1291857521)) Temporary2 = false; else {        var theme_1291857544 = get_1291851034(oHEX60gensym481_1291857521);
        Temporary2 = true;      }    if (Temporary2) {
    self_1291857512.theme = theme_1291857544;
    }
    else {
      var fmtRes_1291857549 = [mnewString(0)];
      fmtRes_1291857549[0].push.apply(fmtRes_1291857549[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32]);;
      formatValue_721420459(fmtRes_1291857549, 0, name_1291857513, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857549[0], NTI33554449)]);
    }
    
    } finally {
    requestRender_2768240746(self_1291857512.platform, false);
    }

  
}

function loadThemeJsWrapper_1291857508(self_1291857577, name_1291857578) {
    loadTheme_1291857511(self_1291857577, name_1291857578);

  
}
editor_prototype.loadTheme = function(name_ /* : string */) { return (loadThemeJsWrapper_1291857508(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function pop_1560281227(s_1560281229, s_1560281229_Idx) {
  var result_1560281230 = [];

    var L_1560281234 = subInt((s_1560281229[s_1560281229_Idx]).length, 1);
    result_1560281230 = nimCopy(null, s_1560281229[s_1560281229_Idx][chckIndx(L_1560281234, 0, (s_1560281229[s_1560281229_Idx]).length - 1)], NTI33554449);
    if (s_1560281229[s_1560281229_Idx].length < chckRange(L_1560281234, 0, 2147483647)) { for (var i = s_1560281229[s_1560281229_Idx].length ; i < chckRange(L_1560281234, 0, 2147483647) ; ++i) s_1560281229[s_1560281229_Idx].push([]); }
               else { s_1560281229[s_1560281229_Idx].length = chckRange(L_1560281234, 0, 2147483647); };

  return result_1560281230;

}

function HEX5BHEX5D_33557562(s_33557563, i_33557564) {
  var result_33557565 = 0;

    result_33557565 = s_33557563[chckIndx(subInt((s_33557563).length, i_33557564), 0, (s_33557563).length - 1)];

  return result_33557565;

}

function HEX5BHEX5D_33557595(s_33557596, s_33557596_Idx, i_33557597) {
  var result_33557598 = null;
  var result_33557598_Idx = 0;

    result_33557598 = s_33557596[s_33557596_Idx]; result_33557598_Idx = chckIndx(subInt((s_33557596[s_33557596_Idx]).length, i_33557597), 0, (s_33557596[s_33557596_Idx]).length - 1);

  return [result_33557598, result_33557598_Idx];

}

function normalizePathEnd_1426063378(path_1426063379, path_1426063379_Idx, trailingSep_1426063380) {
  BeforeRet: {
    if (((path_1426063379[path_1426063379_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1426063381 = (path_1426063379[path_1426063379_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1426063381)) break Label2;
          if ((ConstSet273[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined)) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
          if ((((path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)] == 46) && (2 <= i_1426063381)) && (ConstSet274[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 2), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined))) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1426063380) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    addChar(path_1426063379[path_1426063379_Idx], 47);;
    }
    else {
    if ((0 < i_1426063381)) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    }
    else {
      path_1426063379[path_1426063379_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1442840582(it_1442840583, x_1442840584) {
  var result_1442840585 = false;

    result_1442840585 = (it_1442840583.i < (x_1442840584).length);

  return result_1442840585;

}

function next_1442840586(it_1442840587, x_1442840588) {
  var result_1442840589 = {Field0: 0, Field1: 0};

    it_1442840587.prev = it_1442840587.i;
    if ((!(it_1442840587.notFirst) && (ConstSet276[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) {
    it_1442840587.i = addInt(it_1442840587.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1442840587.i < (x_1442840588).length) && !((ConstSet277[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined)))) break Label2;
            it_1442840587.i = addInt(it_1442840587.i, 1);
          }
      };
    }
    
    if ((it_1442840587.prev < it_1442840587.i)) {
    var colontmp__1291857843 = it_1442840587.prev;
    var colontmp__1291857844 = subInt(it_1442840587.i, 1);
    result_1442840589 = nimCopy(result_1442840589, {Field0: colontmp__1291857843, Field1: colontmp__1291857844}, NTI1442840583);
    }
    else {
    if (hasNext_1442840582(it_1442840587, x_1442840588)) {
    result_1442840589 = nimCopy(result_1442840589, next_1442840586(it_1442840587, x_1442840588), NTI1442840583);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1442840587.i < (x_1442840588).length) && (ConstSet278[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) break Label4;
          it_1442840587.i = addInt(it_1442840587.i, 1);
        }
    };
    it_1442840587.notFirst = true;

  return result_1442840589;

}

function isSlash_1442840642(x_1442840643, bounds_1442840644) {
  var result_1442840645 = false;

    result_1442840645 = ((bounds_1442840644["Field1"] == bounds_1442840644["Field0"]) && (ConstSet279[x_1442840643[chckIndx(bounds_1442840644["Field0"], 0, (x_1442840643).length - 1)]] != undefined));

  return result_1442840645;

}

function isDotDot_1442840638(x_1442840639, bounds_1442840640) {
  var result_1442840641 = false;

    result_1442840641 = (((bounds_1442840640["Field1"] == addInt(bounds_1442840640["Field0"], 1)) && (x_1442840639[chckIndx(bounds_1442840640["Field0"], 0, (x_1442840639).length - 1)] == 46)) && (x_1442840639[chckIndx(addInt(bounds_1442840640["Field0"], 1), 0, (x_1442840639).length - 1)] == 46));

  return result_1442840641;

}

function isDot_1442840634(x_1442840635, bounds_1442840636) {
  var result_1442840637 = false;

    result_1442840637 = ((bounds_1442840636["Field1"] == bounds_1442840636["Field0"]) && (x_1442840635[chckIndx(bounds_1442840636["Field0"], 0, (x_1442840635).length - 1)] == 46));

  return result_1442840637;

}

function addNormalizePath_1442840650(x_1442840651, result_1442840652, result_1442840652_Idx, state_1442840653, state_1442840653_Idx, dirSep_1442840654) {
          var Temporary7;

    var it_1442840655 = [({i: 0, prev: 0, notFirst: false})];
    it_1442840655[0].notFirst = (0 < (state_1442840653[state_1442840653_Idx] >> 1));
    if (it_1442840655[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1442840655[0].i < (x_1442840651).length) && (ConstSet275[x_1442840651[chckIndx(it_1442840655[0].i, 0, (x_1442840651).length - 1)]] != undefined))) break Label2;
          it_1442840655[0].i = addInt(it_1442840655[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1442840582(it_1442840655[0], x_1442840651)) break Label4;
          var b_1442840669 = next_1442840586(it_1442840655[0], x_1442840651);
          if ((((state_1442840653[state_1442840653_Idx] >> 1) == 0) && isSlash_1442840642(x_1442840651, b_1442840669))) {
          if ((((result_1442840652[result_1442840652_Idx]).length == 0) || !((ConstSet280[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          state_1442840653[state_1442840653_Idx] = (state_1442840653[state_1442840653_Idx] | 1);
          }
          else {
          if (isDotDot_1442840638(x_1442840651, b_1442840669)) {
          if ((1 <= (state_1442840653[state_1442840653_Idx] >> 1))) {
          var d_1442840682 = (result_1442840652[result_1442840652_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1442840653[state_1442840653_Idx] & 1) < subInt(d_1442840682, 1)) && !((ConstSet281[result_1442840652[result_1442840652_Idx][chckIndx(subInt(d_1442840682, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1442840682 = subInt(d_1442840682, 1);
              }
          };
          if ((0 < d_1442840682)) {
          if (result_1442840652[result_1442840652_Idx].length < (Temporary7 = chckRange(subInt(d_1442840682, 1), 0, 2147483647), Temporary7)) { for (var i = result_1442840652[result_1442840652_Idx].length; i < Temporary7; ++i) result_1442840652[result_1442840652_Idx].push(0); }
         else {result_1442840652[result_1442840652_Idx].length = Temporary7; };
          state_1442840653[state_1442840653_Idx] = subInt(state_1442840653[state_1442840653_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet282[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
            }
            
            result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          }
          
          }
          else {
          if (isDot_1442840634(x_1442840651, b_1442840669)) {
          }
          else {
          if ((b_1442840669["Field0"] <= b_1442840669["Field1"])) {
          if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet283[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          state_1442840653[state_1442840653_Idx] = addInt(state_1442840653[state_1442840653_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1442840652[result_1442840652_Idx], []) && !(eqStrings(x_1442840651, [])))) {
    result_1442840652[result_1442840652_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1426063407(result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, tail_1426063410) {
    var Temporary1;

    var trailingSep_1426063419 = (((0 < (tail_1426063410).length) && (ConstSet271[HEX5BHEX5D_33557562(tail_1426063410, 1)] != undefined)) || (((tail_1426063410).length == 0) && ((0 < (result_1426063408[result_1426063408_Idx]).length) && (ConstSet272[(Temporary1 = HEX5BHEX5D_33557595(result_1426063408, result_1426063408_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, false);
    addNormalizePath_1442840650(tail_1426063410, result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, 47);
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, trailingSep_1426063419);

  
}

function nosjoinPath(head_1426063421, tail_1426063422) {
  var result_1426063423 = [[]];

    result_1426063423[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1426063424 = [0];
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, head_1426063421);
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, tail_1426063422);

  return result_1426063423[0];

}

function HEX2F_1426063446(head_1426063447, tail_1426063448) {
  var result_1426063449 = [];

    result_1426063449 = nimCopy(null, nosjoinPath(head_1426063447, tail_1426063448), NTI33554449);

  return result_1426063449;

}

function staticWalkDir_1560281124(dir_1560281125, relative_1560281126) {
  var result_1560281129 = [];

  return result_1560281129;

}

function chooseTheme_1291857592(self_1291857593) {
    
function HEX3Aanonymous_1291857596(popup_1291857597, text_1291857598) {
                          var Temporary9;
        
function HEX3Aanonymous_1291857612(a_1291857630, b_1291857631) {
          var result_1291857636 = 0;

            result_1291857636 = cmp_2969583631(a_1291857630.score, b_1291857631.score);

          return result_1291857636;

        }

      var result_1291857599 = [];

        Label1: {
          var file_1291857600 = [];
          var stack_1291857811 = [[[]]];
          var checkDir_1291857812 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_1291857811[0]).length)) break Label3;
                var d_1291857814 = pop_1560281227(stack_1291857811, 0);
                Label4: {
                  var k_1291857816 = 0;
                  var p_1291857817 = [];
                  var colontmp__1291857818 = [];
                  colontmp__1291857818 = HEX2F_1426063446([46,47,116,104,101,109,101,115], d_1291857814);
                  Label5: {
                    var k_1291857828 = 0;
                    var v_1291857829 = [];
                    var colontmp__1291857830 = [];
                    colontmp__1291857830 = staticWalkDir_1560281124(colontmp__1291857818, true);
                    var i_1291857831 = 0;
                    var L_1291857832 = (colontmp__1291857830).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_1291857831 < L_1291857832)) break Label7;
                          k_1291857828 = colontmp__1291857830[chckIndx(i_1291857831, 0, (colontmp__1291857830).length - 1)]["Field0"];
                          v_1291857829 = colontmp__1291857830[chckIndx(i_1291857831, 0, (colontmp__1291857830).length - 1)]["Field1"];
                          k_1291857816 = k_1291857828;
                          p_1291857817 = v_1291857829;
                          var rel_1291857834 = HEX2F_1426063446(d_1291857814, p_1291857817);
                          if (((ConstSet284[k_1291857816] != undefined) && (ConstSet285[k_1291857816] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_1291857834, NTI33554449);
                          stack_1291857811[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet286[k_1291857816] != undefined)) {
                          if (true) {
                          Temporary9 = rel_1291857834;
                          }
                          else {
                          Temporary9 = HEX2F_1426063446([46,47,116,104,101,109,101,115], rel_1291857834);
                          }
                          
                          file_1291857600 = Temporary9;
                          if (nsuEndsWith(file_1291857600, [46,106,115,111,110])) {
                          var name_1291857835 = nimCopy(null, nossplitFile(file_1291857600).Field1, NTI33554449);
                          var score_1291857836 = fuzzyMatchSmart_1979711572(text_1291857598, name_1291857835, true);
                          var fmtRes_1291857837 = [mnewString(0)];
                          fmtRes_1291857837[0].push.apply(fmtRes_1291857837[0], [46,47,116,104,101,109,101,115,47]);;
                          formatValue_721420459(fmtRes_1291857837, 0, file_1291857600, []);
                          result_1291857599.push({name: nimCopy(null, name_1291857835, NTI33554449), path: nimCopy(null, fmtRes_1291857837[0], NTI33554449), score: score_1291857836, m_type: NTI1291848506});;
                          }
                          
                          }
                          
                          i_1291857831 = addInt(i_1291857831, 1);
                          if (!(((colontmp__1291857830).length == L_1291857832))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_1291857812 = false;
              }
          };
        };
        sort_2969582285(result_1291857599, HEX3Aanonymous_1291857612, 0);

      return result_1291857599;

    }
    
function HEX3Aanonymous_1291857659(item_1291857660) {
          var Temporary1;

          var oHEX60gensym491_1291857663 = loadFromFile_2516586059(item_1291857660.path);
          if (!isSome_1291851014(oHEX60gensym491_1291857663)) Temporary1 = false; else {            var theme_1291857686 = get_1291851034(oHEX60gensym491_1291857663);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857593.theme = theme_1291857686;
        }
        

      
    }
    
function HEX3Aanonymous_1291857687(item_1291857688) {
          var Temporary1;

          var oHEX60gensym492_1291857691 = loadFromFile_2516586059(item_1291857688.path);
          if (!isSome_1291851014(oHEX60gensym492_1291857691)) Temporary1 = false; else {            var theme_1291857714 = get_1291851034(oHEX60gensym492_1291857691);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857593.theme = theme_1291857714;
        }
        

      
    }
    
function HEX3Aanonymous_1291857715() {
          var Temporary1;

          var oHEX60gensym493_1291857718 = loadFromFile_2516586059(originalTheme_1291857594);
          if (!isSome_1291851014(oHEX60gensym493_1291857718)) Temporary1 = false; else {            var theme_1291857741 = get_1291851034(oHEX60gensym493_1291857718);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857593.theme = theme_1291857741;
        }
        

      
    }

    try {
    var originalTheme_1291857594 = nimCopy(null, self_1291857593.theme.path, NTI33554449);
    var popup_1291857595 = newSelectorPopup_3187671905(self_1291857593);
    popup_1291857595.getCompletions = HEX3Aanonymous_1291857596;
    popup_1291857595.handleItemSelected = HEX3Aanonymous_1291857659;
    popup_1291857595.handleItemConfirmed = HEX3Aanonymous_1291857687;
    popup_1291857595.handleCanceled = HEX3Aanonymous_1291857715;
    updateCompletions_3187671226(popup_1291857595);
    pushPopup_1291849060(self_1291857593, popup_1291857595);
    } finally {
    requestRender_2768240746(self_1291857593.platform, false);
    }

  
}

function chooseThemeJsWrapper_1291857589(self_1291857777) {
    chooseTheme_1291857592(self_1291857777);

  
}
editor_prototype.chooseTheme = function() { return (chooseThemeJsWrapper_1291857589(this));};

function cancel_2499805208(token_2499805209) {
    token_2499805209.canceled = true;

  
}

function newCancellationToken_2499805188() {
  var result_2499805189 = null;

    result_2499805189 = {canceled: false};

  return result_2499805189;

}

function canceled_2499805210(token_2499805211) {
  var result_2499805212 = false;

    result_2499805212 = token_2499805211.canceled;

  return result_2499805212;

}
async function iterateDirectoryRec_1291857952(self_1291857953, folder_1291857954, path_1291857955, cancellationToken_1291857956, callback_1291857959) {
  var result_1291857961 = null;

  BeforeRet: {
    var path_1291857967 = nimCopy(null, path_1291857955, NTI33554449);
    var resultItems_1291857968 = [];
    var folders_1291857969 = [];
    if (canceled_2499805210(cancellationToken_1291857956)) {
    result_1291857961 = undefined;
    break BeforeRet;
    }
    
    var items_1291857974 = (await getDirectoryListing_2214592561(folder_1291857954, path_1291857967));
    if (canceled_2499805210(cancellationToken_1291857956)) {
    result_1291857961 = undefined;
    break BeforeRet;
    }
    
    Label1: {
      var file_1291857978 = [];
      var i_1291858271 = 0;
      var L_1291858272 = (items_1291857974.files).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858271 < L_1291858272)) break Label3;
            file_1291857978 = items_1291857974.files[chckIndx(i_1291858271, 0, (items_1291857974.files).length - 1)];
            resultItems_1291857968.push(HEX2F_1426063446(path_1291857967, file_1291857978));;
            i_1291858271 = addInt(i_1291858271, 1);
            if (!(((items_1291857974.files).length == L_1291858272))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      var dir_1291857986 = [];
      var i_1291858275 = 0;
      var L_1291858276 = (items_1291857974.folders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_1291858275 < L_1291858276)) break Label6;
            dir_1291857986 = items_1291857974.folders[chckIndx(i_1291858275, 0, (items_1291857974.folders).length - 1)];
            folders_1291857969.push(HEX2F_1426063446(path_1291857967, dir_1291857986));;
            i_1291858275 = addInt(i_1291858275, 1);
            if (!(((items_1291857974.folders).length == L_1291858276))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    callback_1291857959(resultItems_1291857968);
    if (canceled_2499805210(cancellationToken_1291857956)) {
    result_1291857961 = undefined;
    break BeforeRet;
    }
    
    var futs_1291857992 = [];
    Label7: {
      var dir_1291857996 = [];
      var i_1291858279 = 0;
      var L_1291858280 = (folders_1291857969).length;
      Label8: {
          Label9: while (true) {
          if (!(i_1291858279 < L_1291858280)) break Label9;
            dir_1291857996 = folders_1291857969[chckIndx(i_1291858279, 0, (folders_1291857969).length - 1)];
            futs_1291857992.push(iterateDirectoryRec_1291857952(self_1291857953, folder_1291857954, dir_1291857996, cancellationToken_1291857956, callback_1291857959));;
            i_1291858279 = addInt(i_1291858279, 1);
            if (!(((folders_1291857969).length == L_1291858280))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label10: {
      var fut_1291858023 = null;
      var i_1291858284 = 0;
      var L_1291858285 = (futs_1291857992).length;
      Label11: {
          Label12: while (true) {
          if (!(i_1291858284 < L_1291858285)) break Label12;
            fut_1291858023 = futs_1291857992[chckIndx(i_1291858284, 0, (futs_1291857992).length - 1)];
            (await fut_1291858023);
            i_1291858284 = addInt(i_1291858284, 1);
            if (!(((futs_1291857992).length == L_1291858285))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291857961 = undefined;
    break BeforeRet;
  };

  return result_1291857961;

}

function some_1291855509(val_1291855511) {
  var result_1291855512 = ({val: null});

    if (!(!((val_1291855511 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291855512.val = val_1291855511;

  return result_1291855512;

}

function loadWorkspaceFile_1291857225(self_1291857226, path_1291857227, folder_1291857228) {
    try {
    if ((((0 <= self_1291857226.currentView) && (self_1291857226.currentView < (self_1291857226.views).length)) && !((self_1291857226.views[chckIndx(self_1291857226.currentView, 0, (self_1291857226.views).length - 1)].document == null)))) {
++excHandler;
    try {
    self_1291857226.views[chckIndx(self_1291857226.currentView, 0, (self_1291857226.views).length - 1)].document.workspace = nimCopy(self_1291857226.views[chckIndx(self_1291857226.currentView, 0, (self_1291857226.views).length - 1)].document.workspace, some_1291855509(folder_1291857228), NTI2197815306);
    load_2197815320(self_1291857226.views[chckIndx(self_1291857226.currentView, 0, (self_1291857226.views).length - 1)].document, path_1291857227);
    handleDocumentChanged_2415919265(self_1291857226.views[chckIndx(self_1291857226.currentView, 0, (self_1291857226.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857243 = [mnewString(0)];
    fmtRes_1291857243[0].push.apply(fmtRes_1291857243[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857243, 0, path_1291857227, []);
    fmtRes_1291857243[0].push.apply(fmtRes_1291857243[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857243, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857243[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857226.platform, false);
    }

  
}

function isNone_2818579269(self_2818579271) {
  var result_2818579272 = false;

    result_2818579272 = (self_2818579271.val == null);

  return result_2818579272;

}

function get_1291858168(self_1291858170) {
  var result_1291858171 = null;
  var result_1291858171_Idx = 0;

  BeforeRet: {
    if (isNone_2818579269(self_1291858170)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291858171 = self_1291858170; result_1291858171_Idx = "val";
    break BeforeRet;
  };

  return [result_1291858171, result_1291858171_Idx];

}

function newTextDocument_1291857411(filename_1291857413, content_1291857414, app_1291857415) {
  var result_1291857416 = null;

    result_1291857416 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857420 = result_1291857416;
    self_1291857420.filename = nimCopy(null, filename_1291857413, NTI33554449);
    self_1291857420.currentTree = null;
    self_1291857420.appFile = app_1291857415;
    var _ = initTreesitter_2818578870(self_1291857420);
    var language_1291857421 = getLanguageForFile_2902458372(filename_1291857413);
    if (isSome_2348810304(language_1291857421)) {
    self_1291857420.languageId = nimCopy(null, get_2818578907(language_1291857421), NTI33554449);
    }
    
    contentHEX3D_2818573989(self_1291857420, content_1291857414);

  return result_1291857416;

}
async function updateDocumentContent_1291857080(self_1291857081, document_1291857082, path_1291857083, folder_1291857084) {
  var result_1291857086 = null;

  BeforeRet: {
    var content_1291857096 = (await loadFile_2214592545(folder_1291857084, path_1291857083));
    if (isObj(document_1291857082.m_type, NTI2818572427)) {
    contentHEX3D_2818573948(document_1291857082, content_1291857096);
    }
    
    result_1291857086 = undefined;
    break BeforeRet;
  };

  return result_1291857086;

}

function openWorkspaceFile_1291857397(self_1291857398, path_1291857399, folder_1291857400) {
    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857399, [46,97,115,116])) {
    createView_1291848958(self_1291857398, newAstDocument_2969571554(path_1291857399, false, some_1291855509(folder_1291857400)));
    }
    else {
    if (nsuEndsWith(path_1291857399, [46,97,109])) {
    createView_1291848958(self_1291857398, newModelDocument_3254780282(path_1291857399, false, some_1291855509(folder_1291857400)));
    }
    else {
      var document_1291857444 = newTextDocument_1291857411(path_1291857399, [], false);
      document_1291857444.workspace = nimCopy(document_1291857444.workspace, some_1291855509(folder_1291857400), NTI2197815306);
      var _ = updateDocumentContent_1291857080(self_1291857398, document_1291857444, path_1291857399, folder_1291857400);
      createView_1291848958(self_1291857398, document_1291857444);
    }
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857452 = [mnewString(0)];
    fmtRes_1291857452[0].push.apply(fmtRes_1291857452[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857452, 0, path_1291857399, []);
    fmtRes_1291857452[0].push.apply(fmtRes_1291857452[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857452, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857452[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2768240746(self_1291857398.platform, false);
    }

  
}

function chooseFile_1291858051(self_1291858052, view_1291858053) {
    async function HEX3Aanonymous_1291858056(popup_1291858057, text_1291858058) {
                text_1291858058 = nimCopy(null, text_1291858058, NTI33554449);
                
function HEX3Aanonymous_1291858075(files_1291858076) {
                    
function HEX3Aanonymous_1291858096(a_1291858114, b_1291858115) {
                      var result_1291858120 = 0;

                        result_1291858120 = cmp_2969583631(a_1291858114.score, b_1291858115.score);

                      return result_1291858120;

                    }

                    var folder_1291858077 = folder_1291858074;
                    Label1: {
                      var file_1291858081 = [];
                      var i_1291858264 = 0;
                      var L_1291858265 = (files_1291858076).length;
                      Label2: {
                          Label3: while (true) {
                          if (!(i_1291858264 < L_1291858265)) break Label3;
                            file_1291858081 = files_1291858076[chckIndx(i_1291858264, 0, (files_1291858076).length - 1)];
                            var name_1291858082 = nimCopy(null, nossplitFile(file_1291858081).Field1, NTI33554449);
                            var score_1291858083 = fuzzyMatchSmart_1979711572(text_1291858058, name_1291858082, true);
                            var fmtRes_1291858088 = [mnewString(0)];
                            formatValue_721420459(fmtRes_1291858088, 0, file_1291858081, []);
                            popup_1291858057.completions.push({path: nimCopy(null, fmtRes_1291858088[0], NTI33554449), score: score_1291858083, workspaceFolder: some_1291855509(folder_1291858077), m_type: NTI1291848508});;
                            i_1291858264 = addInt(i_1291858264, 1);
                            if (!(((files_1291858076).length == L_1291858265))) {
                            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    sort_2969582285(popup_1291858057.completions, HEX3Aanonymous_1291858096, 0);
                    markDirty_2483027989(popup_1291858057);

                  
                }

      var result_1291858060 = null;

      BeforeRet: {
        if (!((popup_1291858057.cancellationToken == null))) {
        cancel_2499805208(popup_1291858057.cancellationToken);
        }
        
        var cancellationToken_1291858069 = newCancellationToken_2499805188();
        popup_1291858057.cancellationToken = cancellationToken_1291858069;
        Label1: {
          var folder_1291858073 = null;
          var i_1291858267 = 0;
          var L_1291858268 = (self_1291858052.workspace.folders).length;
          Label2: {
              Label3: while (true) {
              if (!(i_1291858267 < L_1291858268)) break Label3;
                folder_1291858073 = self_1291858052.workspace.folders[chckIndx(i_1291858267, 0, (self_1291858052.workspace.folders).length - 1)];
                var folder_1291858074 = folder_1291858073;
                (await iterateDirectoryRec_1291857952(self_1291858052, folder_1291858074, [], cancellationToken_1291858069, HEX3Aanonymous_1291858075));
                i_1291858267 = addInt(i_1291858267, 1);
                if (!(((self_1291858052.workspace.folders).length == L_1291858268))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_1291858060 = undefined;
        break BeforeRet;
      };

      return result_1291858060;

    }
    view_1291858053 = nimCopy(null, view_1291858053, NTI33554449);
    
function HEX3Aanonymous_1291858147(item_1291858148) {
          var Temporary1;
          var Temporary2;

        switch (toJSStr(view_1291858053)) {
        case "current":
          if (isSome_2818579241(item_1291858148.workspaceFolder)) {
          loadWorkspaceFile_1291857225(self_1291858052, item_1291858148.path, (Temporary1 = get_1291858168(item_1291858148.workspaceFolder), Temporary1)[0][Temporary1[1]]);
          }
          else {
          loadFile_1291857173(self_1291858052, item_1291858148.path);
          }
          
          break;
        case "new":
          if (isSome_2818579241(item_1291858148.workspaceFolder)) {
          openWorkspaceFile_1291857397(self_1291858052, item_1291858148.path, (Temporary2 = get_1291858168(item_1291858148.workspaceFolder), Temporary2)[0][Temporary2[1]]);
          }
          else {
          openFile_1291857249(self_1291858052, item_1291858148.path, false);
          }
          
          break;
        default: 
          var fmtRes_1291858215 = [mnewString(0)];
          fmtRes_1291858215[0].push.apply(fmtRes_1291858215[0], [85,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32]);;
          formatValue_721420459(fmtRes_1291858215, 0, view_1291858053, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858215[0], NTI33554449)]);
          break;
        }

      
    }

    try {
    var popup_1291858054 = newSelectorPopup_3187671905(self_1291858052);
    popup_1291858054.getCompletionsAsyncIter = HEX3Aanonymous_1291858056;
    popup_1291858054.handleItemConfirmed = HEX3Aanonymous_1291858147;
    updateCompletions_3187671226(popup_1291858054);
    pushPopup_1291849060(self_1291858052, popup_1291858054);
    } finally {
    requestRender_2768240746(self_1291858052.platform, false);
    }

  
}

function chooseFileJsWrapper_1291858048(self_1291858252, view_1291858253) {
    chooseFile_1291858051(self_1291858252, view_1291858253);

  
}
editor_prototype.chooseFile = function(view_ /* : string */) { return (chooseFileJsWrapper_1291858048(this, view_ == undefined ? undefined : cstrToNimstr(view_)));};

function setGithubAccessToken_1291858292(self_1291858293, token_1291858294) {
    saveApplicationFile_2365587480(fs_2365587509, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110], token_1291858294);

  
}

function setGithubAccessTokenJsWrapper_1291858289(self_1291858322, token_1291858323) {
    setGithubAccessToken_1291858292(self_1291858322, token_1291858323);

  
}
editor_prototype.setGithubAccessToken = function(token_ /* : string */) { return (setGithubAccessTokenJsWrapper_1291858289(this, token_ == undefined ? undefined : cstrToNimstr(token_)));};

function reloadConfig_1291858337(self_1291858338) {
    try {
    if (!((self_1291858338.scriptContext == null))) {
++excHandler;
    try {
    reload_2751463441(self_1291858338.scriptContext);
    if (!(self_1291858338.initializeCalled)) {
    var _ = false;
    self_1291858338.initializeCalled = true;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291858351 = mnewString(0);
    fmtRes_1291858351.push.apply(fmtRes_1291858351, [70,97,105,108,101,100,32,116,111,32,114,101,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858351, NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291858338.platform, false);
    }

  
}

function reloadConfigJsWrapper_1291858334(self_1291858378) {
    reloadConfig_1291858337(self_1291858378);

  
}
editor_prototype.reloadConfig = function() { return (reloadConfigJsWrapper_1291858334(this));};

function logOptions_1291858387(self_1291858388) {
    log_1174405220(logger_704643272[0], 2, [pretty_1627394477(self_1291858388.options, 2)]);

  
}

function logOptionsJsWrapper_1291858384(self_1291858415) {
    logOptions_1291858387(self_1291858415);

  
}
editor_prototype.logOptions = function() { return (logOptionsJsWrapper_1291858384(this));};

function clear_2113930247(t_2113930250) {
    Label1: {
      var i_2113930302 = 0;
      var colontmp__1291858465 = 0;
      colontmp__1291858465 = (t_2113930250.data).length;
      var i_1291858466 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858466 < colontmp__1291858465)) break Label3;
            i_2113930302 = i_1291858466;
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field0 = 0;
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            i_1291858466 = addInt(i_1291858466, 1);
          }
      };
    };
    t_2113930250.counter = 0;

  
}

function clearCommands_2113930205(config_2113930206) {
    clear_2113930247(config_2113930206.commands);
    config_2113930206.revision = addInt(config_2113930206.revision, 1);

  
}

function clearCommands_1291858424(self_1291858425, context_1291858426) {
    clearCommands_2113930205(getEventHandlerConfig_1291849162(self_1291858425, context_1291858426));

  
}

function clearCommandsJsWrapper_1291858421(self_1291858454, context_1291858455) {
    clearCommands_1291858424(self_1291858454, context_1291858455);

  
}
editor_prototype.clearCommands = function(context_ /* : string */) { return (clearCommandsJsWrapper_1291858421(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function len_1291853924(t_1291853927) {
  var result_1291853928 = 0;

    result_1291853928 = t_1291853927.counter;

  return result_1291853928;

}

function getAllEditors_1291858473(self_1291858474) {
  var result_1291858475 = [];

    Label1: {
      var id_1291858696 = 0;
      var L_1291858754 = len_1291853924(self_1291858474.editors);
      Label2: {
        var h_1291858756 = 0;
        var colontmp__1291858757 = 0;
        colontmp__1291858757 = (self_1291858474.editors.data).length - 1;
        var res_1291858758 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291858758 <= colontmp__1291858757)) break Label4;
              h_1291858756 = res_1291858758;
              if (isFilled_1308622880(self_1291858474.editors.data[chckIndx(h_1291858756, 0, (self_1291858474.editors.data).length - 1)].Field0)) {
              id_1291858696 = self_1291858474.editors.data[chckIndx(h_1291858756, 0, (self_1291858474.editors.data).length - 1)]["Field1"];
              result_1291858475.push(id_1291858696);;
              if (!((len_1291853924(self_1291858474.editors) == L_1291858754))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291858758 = addInt(res_1291858758, 1);
            }
        };
      };
    };

  return result_1291858475;

}

function getAllEditorsJsWrapper_1291858470(self_1291858728) {
  var result_1291858729 = [];

    result_1291858729 = nimCopy(null, getAllEditors_1291858473(self_1291858728), NTI1291854034);

  return result_1291858729;

}
editor_prototype.getAllEditors = function() { return (getAllEditorsJsWrapper_1291858470(this));};

function getModeConfig_1291858760(self_1291858761, mode_1291858762) {
  var result_1291858763 = null;

  BeforeRet: {
    result_1291858763 = getEventHandlerConfig_1291849162(self_1291858761, ([101,100,105,116,111,114,46] || []).concat(mode_1291858762 || []));
    break BeforeRet;
  };

  return result_1291858763;

}

function setMode_1291858769(self_1291858770, mode_1291858771) {
        
function HEX3Aanonymous_1291858792(actionHEX60gensym571HEX60gensym572_1291858793, argHEX60gensym571HEX60gensym572_1291858794) {
            var Temporary1;

          var result_1291858795 = 0;

          BeforeRet: {
            if (handlerHEX60gensym571_1291858780.config.handleActions) {
            var action_1291858796 = nimCopy(null, actionHEX60gensym571HEX60gensym572_1291858793, NTI33554449);
            var arg_1291858797 = nimCopy(null, argHEX60gensym571HEX60gensym572_1291858794, NTI33554449);
            if (handleAction_1291848870(self_1291858770, action_1291858796, arg_1291858797)) {
            Temporary1 = 3;
            }
            else {
            Temporary1 = 1;
            }
            
            var responseHEX60gensym571HEX60gensym572_1291858798 = Temporary1;
            if (handlerHEX60gensym571_1291858780.config.consumeAllActions) {
            result_1291858795 = 3;
            break BeforeRet;
            }
            
            result_1291858795 = responseHEX60gensym571HEX60gensym572_1291858798;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym571_1291858780.config.consumeAllActions) {
            result_1291858795 = 3;
            break BeforeRet;
            }
            else {
              result_1291858795 = 1;
              break BeforeRet;
            }
            }
          };

          return result_1291858795;

        }
        
function HEX3Aanonymous_1291858800(inputHEX60gensym571HEX60gensym573_1291858801) {
          var result_1291858802 = 0;

          BeforeRet: {
            if (handlerHEX60gensym571_1291858780.config.handleInputs) {
            var input_1291858803 = nimCopy(null, inputHEX60gensym571HEX60gensym573_1291858801, NTI33554449);
            result_1291858802 = 1;
            break BeforeRet;
            }
            else {
              result_1291858802 = 1;
              break BeforeRet;
            }
            
          };

          return result_1291858802;

        }

    try {
    if (((mode_1291858771).length == 0)) {
    self_1291858770.modeEventHandler = null;
    }
    else {
      var config_1291858772 = getModeConfig_1291858760(self_1291858770, mode_1291858771);
      Label2: {
        var handlerHEX60gensym571_1291858780 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym571_1291858780.config = config_1291858772;
        handlerHEX60gensym571_1291858780.dfaInternal = buildDFA_2113929279(config_1291858772);
        handlerHEX60gensym571_1291858780.handleAction = HEX3Aanonymous_1291858792;
        handlerHEX60gensym571_1291858780.handleInput = HEX3Aanonymous_1291858800;
      };
      self_1291858770.modeEventHandler = handlerHEX60gensym571_1291858780;
    }
    
    self_1291858770.currentMode = nimCopy(null, mode_1291858771, NTI33554449);
    } finally {
    requestRender_2768240746(self_1291858770.platform, false);
    }

  
}

function setModeJsWrapper222_1291858766(self_1291858831, mode_1291858832) {
    setMode_1291858769(self_1291858831, mode_1291858832);

  
}
editor_prototype.setMode222 = function(mode_ /* : string */) { return (setModeJsWrapper222_1291858766(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_1291858847(self_1291858848) {
  var result_1291858849 = [];

  BeforeRet: {
    result_1291858849 = nimCopy(null, self_1291858848.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_1291858849;

}

function modeJsWrapper222_1291858844(self_1291858877) {
  var result_1291858878 = [];

    result_1291858878 = nimCopy(null, mode_1291858847(self_1291858877), NTI33554449);

  return result_1291858878;

}
editor_prototype.mode222 = function() { return toJSStr(modeJsWrapper222_1291858844(this));};

function getContextWithMode_1291858891(self_1291858892, context_1291858893) {
  var result_1291858894 = [];

  BeforeRet: {
    result_1291858894 = nimCopy(null, (context_1291858893 || []).concat([46] || [],self_1291858892.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_1291858894;

}

function getContextWithModeJsWrapper222_1291858888(self_1291858923, context_1291858924) {
  var result_1291858925 = [];

    result_1291858925 = nimCopy(null, getContextWithMode_1291858891(self_1291858923, context_1291858924), NTI33554449);

  return result_1291858925;

}
editor_prototype.getContextWithMode222 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper222_1291858888(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function scriptRunAction_1291859169(action_1291859170, arg_1291859171) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    var _ = handleAction_1291848870(gEditor, action_1291859170, arg_1291859171);
  };

  
}

function scriptRunActionJsWrapper_1291859167(action_1291859180, arg_1291859181) {
    scriptRunAction_1291859169(action_1291859180, arg_1291859181);

  
}
editor_prototype.scriptRunAction = function(action_ /* : string */, arg_ /* : string */) { return (scriptRunActionJsWrapper_1291859167(action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptLog_1291859199(message_1291859200) {
    var fmtRes_1291859205 = [mnewString(0)];
    fmtRes_1291859205[0].push.apply(fmtRes_1291859205[0], [91,115,99,114,105,112,116,93,32]);;
    formatValue_721420459(fmtRes_1291859205, 0, message_1291859200, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291859205[0], NTI33554449)]);

  
}

function scriptLogJsWrapper_1291859197(message_1291859210) {
    scriptLog_1291859199(message_1291859210);

  
}
editor_prototype.scriptLog = function(message_ /* : string */) { return (scriptLogJsWrapper_1291859197(message_ == undefined ? undefined : cstrToNimstr(message_)));};

function rawGet_1795162457(t_1795162460, key_1795162461, hc_1795162462, hc_1795162462_Idx) {
  var result_1795162463 = 0;

  BeforeRet: {
    hc_1795162462[hc_1795162462_Idx] = hash_1325400491(key_1795162461);
    if ((hc_1795162462[hc_1795162462_Idx] == 0)) {
    hc_1795162462[hc_1795162462_Idx] = 314159265;
    }
    
    if (((t_1795162460.data).length == 0)) {
    result_1795162463 = -1;
    break BeforeRet;
    }
    
    var h_1795162515 = (hc_1795162462[hc_1795162462_Idx] & (t_1795162460.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0)) break Label2;
          if (((t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0 == hc_1795162462[hc_1795162462_Idx]) && eqStrings(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field1, key_1795162461))) {
          result_1795162463 = h_1795162515;
          break BeforeRet;
          }
          
          h_1795162515 = nextTry_1308622883(h_1795162515, (t_1795162460.data).length - 1);
        }
    };
    result_1795162463 = subInt(-1, h_1795162515);
  };

  return result_1795162463;

}

function mustRehash_1795162905(t_1795162907) {
  var result_1795162908 = false;

    if (!((t_1795162907.counter < (t_1795162907.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1795162908 = ((mulInt((t_1795162907.data).length, 2) < mulInt(t_1795162907.counter, 3)) || (subInt((t_1795162907.data).length, t_1795162907.counter) < 4));

  return result_1795162908;

}

function rawInsert_1795163354(t_1795163358, data_1795163359, data_1795163359_Idx, key_1795163360, val_1795163361, hc_1795163362, h_1795163363) {
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field1 = nimCopy(null, key_1795163360, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field2 = nimCopy(null, val_1795163361, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field0 = hc_1795163362;

  
}

function enlarge_1795163060(t_1795163063) {
    var n_1795163066 = [];
    n_1795163066 = new Array(chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647) ; ++i) { n_1795163066[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1795163063.data; t_1795163063.data = n_1795163066; n_1795163066 = Temporary1;    Label2: {
      var i_1795163130 = 0;
      var colontmp__1291859291 = 0;
      colontmp__1291859291 = (n_1795163066).length - 1;
      var res_1291859292 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291859292 <= colontmp__1291859291)) break Label4;
            i_1795163130 = res_1291859292;
            var eh_1795163184 = n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field0;
            if (isFilled_1308622880(eh_1795163184)) {
            var j_1795163188 = (eh_1795163184 & (t_1795163063.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1795163063.data[chckIndx(j_1795163188, 0, (t_1795163063.data).length - 1)].Field0)) break Label6;
                  j_1795163188 = nextTry_1308622883(j_1795163188, (t_1795163063.data).length - 1);
                }
            };
            rawInsert_1795163354(t_1795163063, t_1795163063, "data", n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field1, n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field2, eh_1795163184, j_1795163188);
            }
            
            res_1291859292 = addInt(res_1291859292, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1795163523(t_1795163526, key_1795163527, hc_1795163528) {
  var result_1795163529 = 0;

  BeforeRet: {
    if (((t_1795163526.data).length == 0)) {
    result_1795163529 = -1;
    break BeforeRet;
    }
    
    var h_1795163580 = (hc_1795163528 & (t_1795163526.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0)) break Label2;
          if (((t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0 == hc_1795163528) && eqStrings(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field1, key_1795163527))) {
          result_1795163529 = h_1795163580;
          break BeforeRet;
          }
          
          h_1795163580 = nextTry_1308622883(h_1795163580, (t_1795163526.data).length - 1);
        }
    };
    result_1795163529 = subInt(-1, h_1795163580);
  };

  return result_1795163529;

}

function HEX5BHEX5DHEX3D_1795162732(t_1795162735, key_1795162736, val_1795162737) {
    if (((t_1795162735.data).length == 0)) {
    var correctSizeHEX60gensym8_1795162786 = slotsNeeded_1308622891(32);
    t_1795162735.counter = 0;
    t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1795162791 = [0];
    var index_1795162798 = rawGet_1795162457(t_1795162735, key_1795162736, hc_1795162791, 0);
    if ((0 <= index_1795162798)) {
    t_1795162735.data[chckIndx(index_1795162798, 0, (t_1795162735.data).length - 1)].Field2 = nimCopy(null, val_1795162737, NTI33554449);
    }
    else {
      if (((t_1795162735.data).length == 0)) {
      var correctSizeHEX60gensym11_1795162900 = slotsNeeded_1308622891(32);
      t_1795162735.counter = 0;
      t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1795162905(t_1795162735)) {
      enlarge_1795163060(t_1795162735);
      index_1795162798 = rawGetKnownHC_1795163523(t_1795162735, key_1795162736, hc_1795162791[0]);
      }
      
      index_1795162798 = subInt(-1, index_1795162798);
      rawInsert_1795163354(t_1795162735, t_1795162735, "data", key_1795162736, val_1795162737, hc_1795162791[0], index_1795162798);
      t_1795162735.counter = addInt(t_1795162735.counter, 1);
    }
    

  
}

function addCommand_2113929598(config_2113929599, keys_2113929600, action_2113929601) {
    HEX5BHEX5DHEX3D_1795162732(config_2113929599.commands, keys_2113929600, action_2113929601);
    config_2113929599.revision = addInt(config_2113929599.revision, 1);

  
}

function addCommandScript_1291859224(self_1291859225, context_1291859226, keys_1291859227, action_1291859228, arg_1291859229) {
    var Temporary1;

    if (((arg_1291859229).length == 0)) {
    Temporary1 = action_1291859228;
    }
    else {
    Temporary1 = (action_1291859228 || []).concat([32] || [],arg_1291859229 || []);
    }
    
    var command_1291859230 = nimCopy(null, Temporary1, NTI33554449);
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291859225, context_1291859226), keys_1291859227, command_1291859230);

  
}

function addCommandScriptJsWrapper_1291859221(self_1291859261, context_1291859262, keys_1291859263, action_1291859264, arg_1291859265) {
    addCommandScript_1291859224(self_1291859261, context_1291859262, keys_1291859263, action_1291859264, arg_1291859265);

  
}
editor_prototype.addCommandScript = function(context_ /* : string */, keys_ /* : string */, action_ /* : string */, arg_ /* : string */) { return (addCommandScriptJsWrapper_1291859221(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_), action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function del_2113929695(t_2113929698, key_2113929699) {
    var hc_2113929700 = [0];
    var i_2113929707 = rawGet_1795162457(t_2113929698, key_2113929699, hc_2113929700, 0);
    var mskHEX60gensym36_2113929711 = (t_2113929698.data).length - 1;
    if ((0 <= i_2113929707)) {
    t_2113929698.counter = subInt(t_2113929698.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2113929718 = i_2113929707;
            var rHEX60gensym36_2113929719 = jHEX60gensym36_2113929718;
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0 = 0;
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2113929707 = (addInt(i_2113929707, 1) & mskHEX60gensym36_2113929711);
                  if (isEmpty_1308622877(t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2113929719 = (t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0 & mskHEX60gensym36_2113929711);
                  if (!(((((rHEX60gensym36_2113929719 <= i_2113929707) && (jHEX60gensym36_2113929718 < rHEX60gensym36_2113929719)) || ((jHEX60gensym36_2113929718 < rHEX60gensym36_2113929719) && (i_2113929707 < jHEX60gensym36_2113929718))) || ((i_2113929707 < jHEX60gensym36_2113929718) && (rHEX60gensym36_2113929719 <= i_2113929707))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2113929698.data[chckIndx(jHEX60gensym36_2113929718, 0, (t_2113929698.data).length - 1)] = nimCopy(t_2113929698.data[chckIndx(jHEX60gensym36_2113929718, 0, (t_2113929698.data).length - 1)], t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)], NTI1795162126);
          }
      };
    };
    }
    

  
}

function removeCommand_2113929652(config_2113929653, keys_2113929654) {
    del_2113929695(config_2113929653.commands, keys_2113929654);
    config_2113929653.revision = addInt(config_2113929653.revision, 1);

  
}

function removeCommand_1291859300(self_1291859301, context_1291859302, keys_1291859303) {
    removeCommand_2113929652(getEventHandlerConfig_1291849162(self_1291859301, context_1291859302), keys_1291859303);

  
}

function removeCommandJsWrapper_1291859297(self_1291859332, context_1291859333, keys_1291859334) {
    removeCommand_1291859300(self_1291859332, context_1291859333, keys_1291859334);

  
}
editor_prototype.removeCommand = function(context_ /* : string */, keys_ /* : string */) { return (removeCommandJsWrapper_1291859297(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_)));};

function getActivePopup_1291859354() {
  var result_1291859355 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859355 = -1;
    break BeforeRet;
    }
    
    if ((0 < (gEditor.popups).length)) {
    result_1291859355 = gEditor.popups[chckIndx((gEditor.popups).length - 1, 0, (gEditor.popups).length - 1)].id;
    break BeforeRet;
    }
    
    result_1291859355 = -1;
    break BeforeRet;
  };

  return result_1291859355;

}

function getActivePopupJsWrapper_1291859352() {
  var result_1291859372 = 0;

    result_1291859372 = getActivePopup_1291859354();

  return result_1291859372;

}
editor_prototype.getActivePopup = function() { return (getActivePopupJsWrapper_1291859352());};

function getActiveEditor_1291859384() {
  var result_1291859385 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859385 = -1;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859385 = gEditor.commandLineTextEditor.id;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859385 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291859385 = -1;
    break BeforeRet;
  };

  return result_1291859385;

}

function getActiveEditorJsWrapper_1291859382() {
  var result_1291859396 = 0;

    result_1291859396 = getActiveEditor_1291859384();

  return result_1291859396;

}
editor_prototype.getActiveEditor = function() { return (getActiveEditorJsWrapper_1291859382());};

function getActiveEditor2_1291859409(self_1291859410) {
  var result_1291859411 = null;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859411 = null;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859411 = gEditor.commandLineTextEditor;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859411 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor;
    break BeforeRet;
    }
    
    result_1291859411 = null;
    break BeforeRet;
  };

  return result_1291859411;

}

function getActiveEditor2JsWrapper_1291859406(self_1291859445) {
  var result_1291859446 = null;

    result_1291859446 = getActiveEditor2_1291859409(self_1291859445);

  return result_1291859446;

}
editor_prototype.getActiveEditor2 = function() { return (getActiveEditor2JsWrapper_1291859406(this));};

function loadCurrentConfig_1291859452(self_1291859453) {
    createView_1291848958(self_1291859453, newTextDocument_2818579088([99,111,110,102,105,103,46,106,115], loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115]), true));

  
}

function loadCurrentConfigJsWrapper_1291859449(self_1291859485) {
    loadCurrentConfig_1291859452(self_1291859485);

  
}
editor_prototype.loadCurrentConfig = function() { return (loadCurrentConfigJsWrapper_1291859449(this));};

function sourceCurrentDocument_1291859494(self_1291859495) {
    var editor_1291859500 = getActiveEditor2_1291859409(self_1291859495);
    if (isObj(editor_1291859500.m_type, NTI2818572510)) {
    var document_1291859507 = editor_1291859500.document;
    var contentStrict_1291859508 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(contentString_2818574088(document_1291859507) || []);
    rawEcho(contentStrict_1291859508);
      var fmtRes_1291859513 = [mnewString(0)];
      fmtRes_1291859513[0].push.apply(fmtRes_1291859513[0], [89,111,117,32,97,114,101,32,97,98,111,117,116,32,116,111,32,101,118,97,108,40,41,32,115,111,109,101,32,106,97,118,97,115,99,114,105,112,116,32,40]);;
      formatValue_721420459(fmtRes_1291859513, 0, document_1291859507.filename, []);
      fmtRes_1291859513[0].push.apply(fmtRes_1291859513[0], [41,46,32,76,111,111,107,32,105,110,32,116,104,101,32,99,111,110,115,111,108,101,32,116,111,32,115,101,101,32,119,104,97,116,39,115,32,105,110,32,116,104,101,114,101,46]);;
    if (confirm(toJSStr(fmtRes_1291859513[0]))) {
    eval(toJSStr(contentStrict_1291859508));
    }
    else {
      var fmtRes_1291859518 = mnewString(0);
      fmtRes_1291859518.push.apply(fmtRes_1291859518, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_1291859518, NTI33554449)]);
    }
    
    }
    

  
}

function sourceCurrentDocumentJsWrapper_1291859491(self_1291859545) {
    sourceCurrentDocument_1291859494(self_1291859545);

  
}
editor_prototype.sourceCurrentDocument = function() { return (sourceCurrentDocumentJsWrapper_1291859491(this));};

function getEditor_1291859553(index_1291859554) {
  var result_1291859555 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859555 = -1;
    break BeforeRet;
    }
    
    if (((0 <= index_1291859554) && (index_1291859554 < (gEditor.views).length))) {
    result_1291859555 = gEditor.views[chckIndx(index_1291859554, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291859555 = -1;
    break BeforeRet;
  };

  return result_1291859555;

}

function getEditorJsWrapper_1291859551(index_1291859567) {
  var result_1291859568 = 0;

    result_1291859568 = getEditor_1291859553(index_1291859567);

  return result_1291859568;

}
editor_prototype.getEditor = function(index_ /* : int */) { return (getEditorJsWrapper_1291859551(index_));};

function rawGet_1291845908(t_1291845911, key_1291845912, hc_1291845913, hc_1291845913_Idx) {
  var result_1291845914 = 0;

  BeforeRet: {
    hc_1291845913[hc_1291845913_Idx] = hash_1325400236(key_1291845912);
    if ((hc_1291845913[hc_1291845913_Idx] == 0)) {
    hc_1291845913[hc_1291845913_Idx] = 314159265;
    }
    
    if (((t_1291845911.data).length == 0)) {
    result_1291845914 = -1;
    break BeforeRet;
    }
    
    var h_1291845968 = (hc_1291845913[hc_1291845913_Idx] & (t_1291845911.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field0)) break Label2;
          if (((t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field0 == hc_1291845913[hc_1291845913_Idx]) && (t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field1 == key_1291845912))) {
          result_1291845914 = h_1291845968;
          break BeforeRet;
          }
          
          h_1291845968 = nextTry_1308622883(h_1291845968, (t_1291845911.data).length - 1);
        }
    };
    result_1291845914 = subInt(-1, h_1291845968);
  };

  return result_1291845914;

}

function hasKey_1291850717(t_1291850720, key_1291850721) {
  var result_1291850722 = false;

    var hc_1291850723 = [0];
    result_1291850722 = (0 <= rawGet_1291845908(t_1291850720, key_1291850721, hc_1291850723, 0));

  return result_1291850722;

}

function contains_1291850711(t_1291850714, key_1291850715) {
  var result_1291850716 = false;

  BeforeRet: {
    result_1291850716 = hasKey_1291850717(t_1291850714, key_1291850715);
    break BeforeRet;
  };

  return result_1291850716;

}

function some_1291850863(val_1291850865) {
  var result_1291850866 = ({val: null});

    if (!(!((val_1291850865 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850866.val = val_1291850865;

  return result_1291850866;

}

function HEX5BHEX5D_1291850783(t_1291850786, key_1291850787) {
  var result_1291850788 = null;
  var result_1291850788_Idx = 0;

    var hcHEX60gensym22_1291850789 = [0];
    var indexHEX60gensym22_1291850796 = rawGet_1291845908(t_1291850786, key_1291850787, hcHEX60gensym22_1291850789, 0);
    if ((0 <= indexHEX60gensym22_1291850796)) {
    result_1291850788 = t_1291850786.data[chckIndx(indexHEX60gensym22_1291850796, 0, (t_1291850786.data).length - 1)]; result_1291850788_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_1291850787);
    }
    

  return [result_1291850788, result_1291850788_Idx];

}

function none_1291850879() {
  var result_1291850885 = ({val: null});

  return result_1291850885;

}

function getEditorForId_1291850661(self_1291850662, id_1291850663) {
    var Temporary1;

  var result_1291850668 = ({val: null});

  BeforeRet: {
    if (contains_1291850711(self_1291850662.editors, id_1291850663)) {
    result_1291850668 = nimCopy(result_1291850668, some_1291850863((Temporary1 = HEX5BHEX5D_1291850783(self_1291850662.editors, id_1291850663), Temporary1)[0][Temporary1[1]]), NTI1291848319);
    break BeforeRet;
    }
    
    if ((self_1291850662.commandLineTextEditor.id == id_1291850663)) {
    result_1291850668 = nimCopy(result_1291850668, some_1291850863(self_1291850662.commandLineTextEditor), NTI1291848319);
    break BeforeRet;
    }
    
    result_1291850668 = nimCopy(result_1291850668, none_1291850879(), NTI1291848319);
    break BeforeRet;
  };

  return result_1291850668;

}

function isSome_2818583961(self_2818583963) {
  var result_2818583964 = false;

    result_2818583964 = !((self_2818583963.val == null));

  return result_2818583964;

}

function isNone_2818583989(self_2818583991) {
  var result_2818583992 = false;

    result_2818583992 = (self_2818583991.val == null);

  return result_2818583992;

}

function get_2818583981(self_2818583983) {
  var result_2818583984 = null;

    if (isNone_2818583989(self_2818583983)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818583984 = self_2818583983["val"];

  return result_2818583984;

}

function scriptIsTextEditor_1291859585(editorId_1291859586) {
      var Temporary1;

  var result_1291859587 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859587 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym686_1291859593 = getEditorForId_1291850661(gEditor, editorId_1291859586);
      if (!isSome_2818583961(oHEX60gensym686_1291859593)) Temporary1 = false; else {        var editor_1291859616 = get_2818583981(oHEX60gensym686_1291859593);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291859587 = isObj(editor_1291859616.m_type, NTI2818572510);
    break BeforeRet;
    }
    
    result_1291859587 = false;
    break BeforeRet;
  };

  return result_1291859587;

}

function scriptIsTextEditorJsWrapper_1291859583(editorId_1291859628) {
  var result_1291859629 = false;

    result_1291859629 = scriptIsTextEditor_1291859585(editorId_1291859628);

  return result_1291859629;

}
editor_prototype.scriptIsTextEditor = function(editorId_ /* : EditorId */) { return (scriptIsTextEditorJsWrapper_1291859583(editorId_));};

function scriptIsAstEditor_1291859647(editorId_1291859648) {
      var Temporary1;

  var result_1291859649 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859649 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym694_1291859655 = getEditorForId_1291850661(gEditor, editorId_1291859648);
      if (!isSome_2818583961(oHEX60gensym694_1291859655)) Temporary1 = false; else {        var editor_1291859678 = get_2818583981(oHEX60gensym694_1291859655);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291859649 = isObj(editor_1291859678.m_type, NTI2969568641);
    break BeforeRet;
    }
    
    result_1291859649 = false;
    break BeforeRet;
  };

  return result_1291859649;

}

function scriptIsAstEditorJsWrapper_1291859645(editorId_1291859690) {
  var result_1291859691 = false;

    result_1291859691 = scriptIsAstEditor_1291859647(editorId_1291859690);

  return result_1291859691;

}
editor_prototype.scriptIsAstEditor = function(editorId_ /* : EditorId */) { return (scriptIsAstEditorJsWrapper_1291859645(editorId_));};

function scriptIsModelEditor_1291859708(editorId_1291859709) {
      var Temporary1;

  var result_1291859710 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859710 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym702_1291859716 = getEditorForId_1291850661(gEditor, editorId_1291859709);
      if (!isSome_2818583961(oHEX60gensym702_1291859716)) Temporary1 = false; else {        var editor_1291859739 = get_2818583981(oHEX60gensym702_1291859716);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291859710 = isObj(editor_1291859739.m_type, NTI3254780014);
    break BeforeRet;
    }
    
    result_1291859710 = false;
    break BeforeRet;
  };

  return result_1291859710;

}

function scriptIsModelEditorJsWrapper_1291859706(editorId_1291859751) {
  var result_1291859752 = false;

    result_1291859752 = scriptIsModelEditor_1291859708(editorId_1291859751);

  return result_1291859752;

}
editor_prototype.scriptIsModelEditor = function(editorId_ /* : EditorId */) { return (scriptIsModelEditorJsWrapper_1291859706(editorId_));};

function scriptRunActionFor_1291859769(editorId_1291859770, action_1291859771, arg_1291859772) {
      var Temporary2;
      var Temporary3;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym711_1291859778 = getEditorForId_1291850661(gEditor, editorId_1291859770);
      if (!isSome_2818583961(oHEX60gensym711_1291859778)) Temporary2 = false; else {        var editor_1291859801 = get_2818583981(oHEX60gensym711_1291859778);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291859801.eventHandler.handleAction(action_1291859771, arg_1291859772);
    }
    else {
      var oHEX60gensym712_1291859804 = getPopupForId_1291850895(gEditor, editorId_1291859770);
      if (!isSome_3187671416(oHEX60gensym712_1291859804)) Temporary3 = false; else {        var popup_1291859827 = get_3187671436(oHEX60gensym712_1291859804);
        Temporary3 = true;      }    if (Temporary3) {
    var _ = popup_1291859827.eventHandler.handleAction(action_1291859771, arg_1291859772);
    }
    }
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptRunActionForJsWrapper_1291859767(editorId_1291859838, action_1291859839, arg_1291859840) {
    scriptRunActionFor_1291859769(editorId_1291859838, action_1291859839, arg_1291859840);

  
}
editor_prototype.scriptRunActionFor = function(editorId_ /* : EditorId */, action_ /* : string */, arg_ /* : string */) { return (scriptRunActionForJsWrapper_1291859767(editorId_, action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptInsertTextInto_1291859863(editorId_1291859864, text_1291859865) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym720_1291859871 = getEditorForId_1291850661(gEditor, editorId_1291859864);
      if (!isSome_2818583961(oHEX60gensym720_1291859871)) Temporary2 = false; else {        var editor_1291859894 = get_2818583981(oHEX60gensym720_1291859871);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291859894.eventHandler.handleInput(text_1291859865);
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptInsertTextIntoJsWrapper_1291859861(editorId_1291859902, text_1291859903) {
    scriptInsertTextInto_1291859863(editorId_1291859902, text_1291859903);

  
}
editor_prototype.scriptInsertTextInto = function(editorId_ /* : EditorId */, text_ /* : string */) { return (scriptInsertTextIntoJsWrapper_1291859861(editorId_, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function scriptTextEditorSelection_1291859921(editorId_1291859922) {
      var Temporary2;

  var result_1291859923 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if ((gEditor == null)) {
    var colontmp__1291859979 = {Field0: 0, Field1: 0};
    var colontmp__1291859980 = {Field0: 0, Field1: 0};
    result_1291859923 = nimCopy(result_1291859923, {Field0: nimCopy(null, colontmp__1291859979, NTI2449473546), Field1: nimCopy(null, colontmp__1291859980, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym728_1291859929 = getEditorForId_1291850661(gEditor, editorId_1291859922);
      if (!isSome_2818583961(oHEX60gensym728_1291859929)) Temporary2 = false; else {        var editor_1291859952 = get_2818583981(oHEX60gensym728_1291859929);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291859952.m_type, NTI2818572510)) {
    var editor_1291859959 = editor_1291859952;
    result_1291859923 = nimCopy(result_1291859923, selection_2818572805(editor_1291859959), NTI2449473548);
    break BeforeRet;
    }
    
    }
    
    var colontmp__1291859981 = {Field0: 0, Field1: 0};
    var colontmp__1291859982 = {Field0: 0, Field1: 0};
    result_1291859923 = nimCopy(result_1291859923, {Field0: nimCopy(null, colontmp__1291859981, NTI2449473546), Field1: nimCopy(null, colontmp__1291859982, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  return result_1291859923;

}

function scriptTextEditorSelectionJsWrapper_1291859919(editorId_1291859965) {
  var result_1291859966 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291859966 = nimCopy(result_1291859966, scriptTextEditorSelection_1291859921(editorId_1291859965), NTI2449473548);

  return result_1291859966;

}
editor_prototype.scriptTextEditorSelection = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionJsWrapper_1291859919(editorId_));};

function scriptSetTextEditorSelection_1291859987(editorId_1291859988, selection_1291859989) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym736_1291859995 = getEditorForId_1291850661(gEditor, editorId_1291859988);
      if (!isSome_2818583961(oHEX60gensym736_1291859995)) Temporary2 = false; else {        var editor_1291860018 = get_2818583981(oHEX60gensym736_1291859995);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860018.m_type, NTI2818572510)) {
    selectionHEX3D_2818572811(editor_1291860018, selection_1291859989);
    }
    
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionJsWrapper_1291859985(editorId_1291860030, selection_1291860031) {
    scriptSetTextEditorSelection_1291859987(editorId_1291860030, selection_1291860031);

  
}
editor_prototype.scriptSetTextEditorSelection = function(editorId_ /* : EditorId */, selection_ /* : Selection */) { return (scriptSetTextEditorSelectionJsWrapper_1291859985(editorId_, selection_));};

function scriptTextEditorSelections_1291860049(editorId_1291860050) {
      var Temporary1;

  var result_1291860051 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860051 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291855119);
    break BeforeRet;
    }
    
      var oHEX60gensym744_1291860061 = getEditorForId_1291850661(gEditor, editorId_1291860050);
      if (!isSome_2818583961(oHEX60gensym744_1291860061)) Temporary1 = false; else {        var editor_1291860084 = get_2818583981(oHEX60gensym744_1291860061);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860084.m_type, NTI2818572510)) {
    var editor_1291860091 = editor_1291860084;
    result_1291860051 = nimCopy(null, selections_2818572802(editor_1291860091), NTI2449473556);
    break BeforeRet;
    }
    
    }
    
    result_1291860051 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291855119);
    break BeforeRet;
  };

  return result_1291860051;

}

function scriptTextEditorSelectionsJsWrapper_1291860047(editorId_1291860101) {
  var result_1291860102 = [];

    result_1291860102 = nimCopy(null, scriptTextEditorSelections_1291860049(editorId_1291860101), NTI1291855106);

  return result_1291860102;

}
editor_prototype.scriptTextEditorSelections = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionsJsWrapper_1291860047(editorId_));};

function scriptSetTextEditorSelections_1291860119(editorId_1291860120, selections_1291860121) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym752_1291860127 = getEditorForId_1291850661(gEditor, editorId_1291860120);
      if (!isSome_2818583961(oHEX60gensym752_1291860127)) Temporary2 = false; else {        var editor_1291860150 = get_2818583981(oHEX60gensym752_1291860127);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860150.m_type, NTI2818572510)) {
    selectionsHEX3D_2818573083(editor_1291860150, selections_1291860121);
    }
    
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionsJsWrapper_1291860117(editorId_1291860162, selections_1291860163) {
    scriptSetTextEditorSelections_1291860119(editorId_1291860162, selections_1291860163);

  
}
editor_prototype.scriptSetTextEditorSelections = function(editorId_ /* : EditorId */, selections_ /* : seq[Selection] */) { return (scriptSetTextEditorSelectionsJsWrapper_1291860117(editorId_, selections_));};

function scriptGetTextEditorLine_1291860181(editorId_1291860182, line_1291860183) {
      var Temporary1;
    var Temporary2;

  var result_1291860184 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860184 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
      var oHEX60gensym761_1291860190 = getEditorForId_1291850661(gEditor, editorId_1291860182);
      if (!isSome_2818583961(oHEX60gensym761_1291860190)) Temporary1 = false; else {        var editor_1291860213 = get_2818583981(oHEX60gensym761_1291860190);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860213.m_type, NTI2818572510)) {
    var editor_1291860220 = editor_1291860213;
    if (((0 <= line_1291860183) && (line_1291860183 < (content_2818574085(editor_1291860220.document)).length))) {
    result_1291860184 = nimCopy(null, (Temporary2 = content_2818574085(editor_1291860220.document), Temporary2)[chckIndx(line_1291860183, 0, (Temporary2).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_1291860184 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_1291860184;

}

function scriptGetTextEditorLineJsWrapper_1291860179(editorId_1291860230, line_1291860231) {
  var result_1291860232 = [];

    result_1291860232 = nimCopy(null, scriptGetTextEditorLine_1291860181(editorId_1291860230, line_1291860231), NTI33554449);

  return result_1291860232;

}
editor_prototype.scriptGetTextEditorLine = function(editorId_ /* : EditorId */, line_ /* : int */) { return toJSStr(scriptGetTextEditorLineJsWrapper_1291860179(editorId_, line_));};

function scriptGetTextEditorLineCount_1291860254(editorId_1291860255) {
      var Temporary1;

  var result_1291860256 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860256 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym770_1291860262 = getEditorForId_1291850661(gEditor, editorId_1291860255);
      if (!isSome_2818583961(oHEX60gensym770_1291860262)) Temporary1 = false; else {        var editor_1291860285 = get_2818583981(oHEX60gensym770_1291860262);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860285.m_type, NTI2818572510)) {
    var editor_1291860292 = editor_1291860285;
    result_1291860256 = (content_2818574085(editor_1291860292.document)).length;
    break BeforeRet;
    }
    
    }
    
    result_1291860256 = 0;
    break BeforeRet;
  };

  return result_1291860256;

}

function scriptGetTextEditorLineCountJsWrapper_1291860252(editorId_1291860301) {
  var result_1291860302 = 0;

    result_1291860302 = scriptGetTextEditorLineCount_1291860254(editorId_1291860301);

  return result_1291860302;

}
editor_prototype.scriptGetTextEditorLineCount = function(editorId_ /* : EditorId */) { return (scriptGetTextEditorLineCountJsWrapper_1291860252(editorId_));};

function scriptGetOptionInt_1291860330(path_1291860331, default_1291860332) {
  var result_1291860333 = 0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860333 = default_1291860332;
      break BeforeRet;
      }
      
      var nodeHEX60gensym779_1291860338 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860331, [46], -1));
      if ((nodeHEX60gensym779_1291860338 == null)) {
      result_1291860333 = default_1291860332;
      break BeforeRet;
      }
      
    };
    result_1291860333 = getInt_1627390118(nodeHEX60gensym779_1291860338, default_1291860332);
  };

  return result_1291860333;

}

function scriptGetOptionIntJsWrapper_1291860328(path_1291860348, default_1291860349) {
  var result_1291860350 = 0;

    result_1291860350 = scriptGetOptionInt_1291860330(path_1291860348, default_1291860349);

  return result_1291860350;

}
editor_prototype.scriptGetOptionInt = function(path_ /* : string */, default_ /* : int */) { return (scriptGetOptionIntJsWrapper_1291860328(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionFloat_1291860373(path_1291860374, default_1291860375) {
  var result_1291860376 = 0.0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860376 = default_1291860375;
      break BeforeRet;
      }
      
      var nodeHEX60gensym788_1291860381 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860374, [46], -1));
      if ((nodeHEX60gensym788_1291860381 == null)) {
      result_1291860376 = default_1291860375;
      break BeforeRet;
      }
      
    };
    result_1291860376 = getFloat_1627390140(nodeHEX60gensym788_1291860381, default_1291860375);
  };

  return result_1291860376;

}

function scriptGetOptionFloatJsWrapper_1291860371(path_1291860391, default_1291860392) {
  var result_1291860393 = 0.0;

    result_1291860393 = scriptGetOptionFloat_1291860373(path_1291860391, default_1291860392);

  return result_1291860393;

}
editor_prototype.scriptGetOptionFloat = function(path_ /* : string */, default_ /* : float */) { return (scriptGetOptionFloatJsWrapper_1291860371(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionBool_1291860474(path_1291860475, default_1291860476) {
  var result_1291860477 = false;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860477 = default_1291860476;
      break BeforeRet;
      }
      
      var nodeHEX60gensym803_1291860482 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860475, [46], -1));
      if ((nodeHEX60gensym803_1291860482 == null)) {
      result_1291860477 = default_1291860476;
      break BeforeRet;
      }
      
    };
    result_1291860477 = getBool_1627390147(nodeHEX60gensym803_1291860482, default_1291860476);
  };

  return result_1291860477;

}

function scriptGetOptionBoolJsWrapper_1291860472(path_1291860492, default_1291860493) {
  var result_1291860494 = false;

    result_1291860494 = scriptGetOptionBool_1291860474(path_1291860492, default_1291860493);

  return result_1291860494;

}
editor_prototype.scriptGetOptionBool = function(path_ /* : string */, default_ /* : bool */) { return (scriptGetOptionBoolJsWrapper_1291860472(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionString_1291860517(path_1291860518, default_1291860519) {
  var result_1291860520 = [];

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860520 = nimCopy(null, default_1291860519, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym812_1291860525 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860518, [46], -1));
      if ((nodeHEX60gensym812_1291860525 == null)) {
      result_1291860520 = nimCopy(null, default_1291860519, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_1291860520 = nimCopy(null, getStr_1627390106(nodeHEX60gensym812_1291860525, default_1291860519), NTI33554449);
  };

  return result_1291860520;

}

function scriptGetOptionStringJsWrapper_1291860515(path_1291860535, default_1291860536) {
  var result_1291860537 = [];

    result_1291860537 = nimCopy(null, scriptGetOptionString_1291860517(path_1291860535, default_1291860536), NTI33554449);

  return result_1291860537;

}
editor_prototype.scriptGetOptionString = function(path_ /* : string */, default_ /* : string */) { return toJSStr(scriptGetOptionStringJsWrapper_1291860515(path_ == undefined ? undefined : cstrToNimstr(path_), default_ == undefined ? undefined : cstrToNimstr(default_)));};

function scriptSetOptionInt_1291860560(path_1291860561, value_1291860562) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym820_1291860569 = nsuSplitString(path_1291860561, [46], -1);
      var nodeHEX60gensym820_1291860570 = gEditor.options;
      Label3: {
        var keyHEX60gensym820_1291860589 = [];
        var colontmp__1291860627 = [];
        colontmp__1291860627 = HEX5BHEX5D_2818589269(pathItemsHEX60gensym820_1291860569, HEX2EHEX2E_1040187488(0, 2));
        var i_1291860628 = 0;
        var L_1291860629 = (colontmp__1291860627).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291860628 < L_1291860629)) break Label5;
              keyHEX60gensym820_1291860589 = colontmp__1291860627[chckIndx(i_1291860628, 0, (colontmp__1291860627).length - 1)];
              if (!((nodeHEX60gensym820_1291860570.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym820_1291860570, keyHEX60gensym820_1291860589))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym820_1291860570, keyHEX60gensym820_1291860589, newJObject_1627390051());
              }
              
              nodeHEX60gensym820_1291860570 = HEX5BHEX5D_1627393037(nodeHEX60gensym820_1291860570, keyHEX60gensym820_1291860589);
              i_1291860628 = addInt(i_1291860628, 1);
              if (!(((colontmp__1291860627).length == L_1291860629))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym820_1291860570 == null) || !((nodeHEX60gensym820_1291860570.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym820_1291860570, HEX5BHEX5D_2701132581(pathItemsHEX60gensym820_1291860569, 1), newJInt_1627390040(value_1291860562));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionIntJsWrapper_1291860558(path_1291860610, value_1291860611) {
    scriptSetOptionInt_1291860560(path_1291860610, value_1291860611);

  
}
editor_prototype.scriptSetOptionInt = function(path_ /* : string */, value_ /* : int */) { return (scriptSetOptionIntJsWrapper_1291860558(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionFloat_1291860635(path_1291860636, value_1291860637) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym833_1291860644 = nsuSplitString(path_1291860636, [46], -1);
      var nodeHEX60gensym833_1291860645 = gEditor.options;
      Label3: {
        var keyHEX60gensym833_1291860664 = [];
        var colontmp__1291860702 = [];
        colontmp__1291860702 = HEX5BHEX5D_2818589269(pathItemsHEX60gensym833_1291860644, HEX2EHEX2E_1040187488(0, 2));
        var i_1291860703 = 0;
        var L_1291860704 = (colontmp__1291860702).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291860703 < L_1291860704)) break Label5;
              keyHEX60gensym833_1291860664 = colontmp__1291860702[chckIndx(i_1291860703, 0, (colontmp__1291860702).length - 1)];
              if (!((nodeHEX60gensym833_1291860645.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym833_1291860645, keyHEX60gensym833_1291860664))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym833_1291860645, keyHEX60gensym833_1291860664, newJObject_1627390051());
              }
              
              nodeHEX60gensym833_1291860645 = HEX5BHEX5D_1627393037(nodeHEX60gensym833_1291860645, keyHEX60gensym833_1291860664);
              i_1291860703 = addInt(i_1291860703, 1);
              if (!(((colontmp__1291860702).length == L_1291860704))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym833_1291860645 == null) || !((nodeHEX60gensym833_1291860645.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym833_1291860645, HEX5BHEX5D_2701132581(pathItemsHEX60gensym833_1291860644, 1), newJFloat_1627390043(value_1291860637));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionFloatJsWrapper_1291860633(path_1291860685, value_1291860686) {
    scriptSetOptionFloat_1291860635(path_1291860685, value_1291860686);

  
}
editor_prototype.scriptSetOptionFloat = function(path_ /* : string */, value_ /* : float */) { return (scriptSetOptionFloatJsWrapper_1291860633(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionBool_1291860710(path_1291860711, value_1291860712) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym846_1291860719 = nsuSplitString(path_1291860711, [46], -1);
      var nodeHEX60gensym846_1291860720 = gEditor.options;
      Label3: {
        var keyHEX60gensym846_1291860739 = [];
        var colontmp__1291860777 = [];
        colontmp__1291860777 = HEX5BHEX5D_2818589269(pathItemsHEX60gensym846_1291860719, HEX2EHEX2E_1040187488(0, 2));
        var i_1291860778 = 0;
        var L_1291860779 = (colontmp__1291860777).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291860778 < L_1291860779)) break Label5;
              keyHEX60gensym846_1291860739 = colontmp__1291860777[chckIndx(i_1291860778, 0, (colontmp__1291860777).length - 1)];
              if (!((nodeHEX60gensym846_1291860720.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym846_1291860720, keyHEX60gensym846_1291860739))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym846_1291860720, keyHEX60gensym846_1291860739, newJObject_1627390051());
              }
              
              nodeHEX60gensym846_1291860720 = HEX5BHEX5D_1627393037(nodeHEX60gensym846_1291860720, keyHEX60gensym846_1291860739);
              i_1291860778 = addInt(i_1291860778, 1);
              if (!(((colontmp__1291860777).length == L_1291860779))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym846_1291860720 == null) || !((nodeHEX60gensym846_1291860720.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym846_1291860720, HEX5BHEX5D_2701132581(pathItemsHEX60gensym846_1291860719, 1), newJBool_1627390046(value_1291860712));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionBoolJsWrapper_1291860708(path_1291860760, value_1291860761) {
    scriptSetOptionBool_1291860710(path_1291860760, value_1291860761);

  
}
editor_prototype.scriptSetOptionBool = function(path_ /* : string */, value_ /* : bool */) { return (scriptSetOptionBoolJsWrapper_1291860708(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionString_1291860785(path_1291860786, value_1291860787) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym859_1291860794 = nsuSplitString(path_1291860786, [46], -1);
      var nodeHEX60gensym859_1291860795 = gEditor.options;
      Label3: {
        var keyHEX60gensym859_1291860814 = [];
        var colontmp__1291860852 = [];
        colontmp__1291860852 = HEX5BHEX5D_2818589269(pathItemsHEX60gensym859_1291860794, HEX2EHEX2E_1040187488(0, 2));
        var i_1291860853 = 0;
        var L_1291860854 = (colontmp__1291860852).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291860853 < L_1291860854)) break Label5;
              keyHEX60gensym859_1291860814 = colontmp__1291860852[chckIndx(i_1291860853, 0, (colontmp__1291860852).length - 1)];
              if (!((nodeHEX60gensym859_1291860795.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym859_1291860795, keyHEX60gensym859_1291860814))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym859_1291860795, keyHEX60gensym859_1291860814, newJObject_1627390051());
              }
              
              nodeHEX60gensym859_1291860795 = HEX5BHEX5D_1627393037(nodeHEX60gensym859_1291860795, keyHEX60gensym859_1291860814);
              i_1291860853 = addInt(i_1291860853, 1);
              if (!(((colontmp__1291860852).length == L_1291860854))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym859_1291860795 == null) || !((nodeHEX60gensym859_1291860795.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym859_1291860795, HEX5BHEX5D_2701132581(pathItemsHEX60gensym859_1291860794, 1), newJString_1627389994(value_1291860787));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionStringJsWrapper_1291860783(path_1291860835, value_1291860836) {
    scriptSetOptionString_1291860785(path_1291860835, value_1291860836);

  
}
editor_prototype.scriptSetOptionString = function(path_ /* : string */, value_ /* : string */) { return (scriptSetOptionStringJsWrapper_1291860783(path_ == undefined ? undefined : cstrToNimstr(path_), value_ == undefined ? undefined : cstrToNimstr(value_)));};

function rawGet_1291847822(t_1291847825, key_1291847826, hc_1291847827, hc_1291847827_Idx) {
  var result_1291847828 = 0;

  BeforeRet: {
    hc_1291847827[hc_1291847827_Idx] = hash_1325400491(key_1291847826);
    if ((hc_1291847827[hc_1291847827_Idx] == 0)) {
    hc_1291847827[hc_1291847827_Idx] = 314159265;
    }
    
    if (((t_1291847825.data).length == 0)) {
    result_1291847828 = -1;
    break BeforeRet;
    }
    
    var h_1291847880 = (hc_1291847827[hc_1291847827_Idx] & (t_1291847825.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field0)) break Label2;
          if (((t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field0 == hc_1291847827[hc_1291847827_Idx]) && eqStrings(t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field1, key_1291847826))) {
          result_1291847828 = h_1291847880;
          break BeforeRet;
          }
          
          h_1291847880 = nextTry_1308622883(h_1291847880, (t_1291847825.data).length - 1);
        }
    };
    result_1291847828 = subInt(-1, h_1291847880);
  };

  return result_1291847828;

}

function mustRehash_3036680175(t_3036680177) {
  var result_3036680178 = false;

    if (!((t_3036680177.counter < (t_3036680177.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3036680178 = ((mulInt((t_3036680177.data).length, 2) < mulInt(t_3036680177.counter, 3)) || (subInt((t_3036680177.data).length, t_3036680177.counter) < 4));

  return result_3036680178;

}

function rawInsert_3036680868(t_3036680872, data_3036680873, data_3036680873_Idx, key_3036680874, val_3036680875, hc_3036680876, h_3036680877) {
    data_3036680873[data_3036680873_Idx][chckIndx(h_3036680877, 0, (data_3036680873[data_3036680873_Idx]).length - 1)].Field1 = nimCopy(null, key_3036680874, NTI33554449);
    data_3036680873[data_3036680873_Idx][chckIndx(h_3036680877, 0, (data_3036680873[data_3036680873_Idx]).length - 1)].Field2 = val_3036680875;
    data_3036680873[data_3036680873_Idx][chckIndx(h_3036680877, 0, (data_3036680873[data_3036680873_Idx]).length - 1)].Field0 = hc_3036680876;

  
}

function enlarge_3036680432(t_3036680435) {
    var n_3036680438 = [];
    n_3036680438 = new Array(chckRange(mulInt((t_3036680435.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3036680435.data).length, 2), 0, 2147483647) ; ++i) { n_3036680438[i] = {Field0: 0, Field1: [], Field2: 0}; }    var Temporary1 = t_3036680435.data; t_3036680435.data = n_3036680438; n_3036680438 = Temporary1;    Label2: {
      var i_3036680536 = 0;
      var colontmp__1291860934 = 0;
      colontmp__1291860934 = (n_3036680438).length - 1;
      var res_1291860935 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291860935 <= colontmp__1291860934)) break Label4;
            i_3036680536 = res_1291860935;
            var eh_3036680617 = n_3036680438[chckIndx(i_3036680536, 0, (n_3036680438).length - 1)].Field0;
            if (isFilled_1308622880(eh_3036680617)) {
            var j_3036680621 = (eh_3036680617 & (t_3036680435.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3036680435.data[chckIndx(j_3036680621, 0, (t_3036680435.data).length - 1)].Field0)) break Label6;
                  j_3036680621 = nextTry_1308622883(j_3036680621, (t_3036680435.data).length - 1);
                }
            };
            rawInsert_3036680868(t_3036680435, t_3036680435, "data", n_3036680438[chckIndx(i_3036680536, 0, (n_3036680438).length - 1)].Field1, n_3036680438[chckIndx(i_3036680536, 0, (n_3036680438).length - 1)].Field2, eh_3036680617, j_3036680621);
            }
            
            res_1291860935 = addInt(res_1291860935, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3036681118(t_3036681121, key_3036681122, hc_3036681123) {
  var result_3036681124 = 0;

  BeforeRet: {
    if (((t_3036681121.data).length == 0)) {
    result_3036681124 = -1;
    break BeforeRet;
    }
    
    var h_3036681209 = (hc_3036681123 & (t_3036681121.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036681121.data[chckIndx(h_3036681209, 0, (t_3036681121.data).length - 1)].Field0)) break Label2;
          if (((t_3036681121.data[chckIndx(h_3036681209, 0, (t_3036681121.data).length - 1)].Field0 == hc_3036681123) && eqStrings(t_3036681121.data[chckIndx(h_3036681209, 0, (t_3036681121.data).length - 1)].Field1, key_3036681122))) {
          result_3036681124 = h_3036681209;
          break BeforeRet;
          }
          
          h_3036681209 = nextTry_1308622883(h_3036681209, (t_3036681121.data).length - 1);
        }
    };
    result_3036681124 = subInt(-1, h_3036681209);
  };

  return result_3036681124;

}

function HEX5BHEX5DHEX3D_3036679907(t_3036679910, key_3036679911, val_3036679912) {
    if (((t_3036679910.data).length == 0)) {
    var correctSizeHEX60gensym30_3036679995 = slotsNeeded_1308622891(32);
    t_3036679910.counter = 0;
    t_3036679910.data = new Array(chckRange(correctSizeHEX60gensym30_3036679995, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym30_3036679995, 0, 2147483647) ; ++i) { t_3036679910.data[i] = {Field0: 0, Field1: [], Field2: 0}; }    }
    
    var hc_3036680000 = [0];
    var index_3036680007 = rawGet_1291847822(t_3036679910, key_3036679911, hc_3036680000, 0);
    if ((0 <= index_3036680007)) {
    t_3036679910.data[chckIndx(index_3036680007, 0, (t_3036679910.data).length - 1)].Field2 = val_3036679912;
    }
    else {
      if (((t_3036679910.data).length == 0)) {
      var correctSizeHEX60gensym33_3036680170 = slotsNeeded_1308622891(32);
      t_3036679910.counter = 0;
      t_3036679910.data = new Array(chckRange(correctSizeHEX60gensym33_3036680170, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym33_3036680170, 0, 2147483647) ; ++i) { t_3036679910.data[i] = {Field0: 0, Field1: [], Field2: 0}; }      }
      
      if (mustRehash_3036680175(t_3036679910)) {
      enlarge_3036680432(t_3036679910);
      index_3036680007 = rawGetKnownHC_3036681118(t_3036679910, key_3036679911, hc_3036680000[0]);
      }
      
      index_3036680007 = subInt(-1, index_3036680007);
      rawInsert_3036680868(t_3036679910, t_3036679910, "data", key_3036679911, val_3036679912, hc_3036680000[0], index_3036680007);
      t_3036679910.counter = addInt(t_3036679910.counter, 1);
    }
    

  
}

function scriptSetCallback_1291860860(path_1291860861, id_1291860862) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_3036679907(gEditor.callbacks, path_1291860861, id_1291860862);
  };

  
}

function scriptSetCallbackJsWrapper_1291860858(path_1291860917, id_1291860918) {
    scriptSetCallback_1291860860(path_1291860917, id_1291860918);

  
}
editor_prototype.scriptSetCallback = function(path_ /* : string */, id_ /* : int */) { return (scriptSetCallbackJsWrapper_1291860858(path_ == undefined ? undefined : cstrToNimstr(path_), id_));};

function initTable_3388997666(initialSize_3388997669) {
  var result_3388997675 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3388997677 = slotsNeeded_1308622891(chckRange(initialSize_3388997669, 0, 2147483647));
    result_3388997675.counter = 0;
    result_3388997675.data = new Array(chckRange(correctSizeHEX60gensym0_3388997677, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3388997677, 0, 2147483647) ; ++i) { result_3388997675.data[i] = {Field0: 0, Field1: 0, Field2: null}; }
  return result_3388997675;

}
var commandLineWidget_3388997662 = [null];
var mainStack_3388997663 = [null];
var viewPanel_3388997664 = [null];
var mainPanel_3388997665 = [null];
var widgetsPerEditor_3388997691 = [initTable_3388997666(32)];

function new_536870929() {
  var result_536870932 = null;

  BeforeRet: {
    var r_536870934 = null;
    r_536870934 = ({m_type: NTI3489660939, content: null, boundsStack: [], onResized: ({handlers: []}), mFontSize: 0.0, mLineHeight: 0.0, mLineDistance: 0.0, mCharWidth: 0.0, escapedText: null, domUpdates: [], currentEvent: null, redrawEverything: false, onKeyPress: ({handlers: []}), onKeyRelease: ({handlers: []}), onRune: ({handlers: []}), onMousePress: ({handlers: []}), onMouseRelease: ({handlers: []}), onMouseMove: ({handlers: []}), onScroll: ({handlers: []}), onCloseRequested: ({handlers: []}), onDropFile: ({handlers: []}), layoutOptions: ({getTextBounds: null})});
    result_536870932 = r_536870934;
    break BeforeRet;
  };

  return result_536870932;

}

function subscribe_1291851159(event_1291851161, callback_1291851163) {
  var result_1291851164 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851164 = nimCopy(result_1291851164, newId_2046820597(), NTI2046820355);
    event_1291851161.handlers.push({Field0: nimCopy(null, result_1291851164, NTI2046820355), Field1: callback_1291851163});;

  return result_1291851164;

}

function anyInProgress_2113930737(handlers_2113930738) {
  var result_2113930739 = false;

  BeforeRet: {
    Label1: {
      var h_2113930753 = null;
      var i_536871016 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871016 < (handlers_2113930738).length)) break Label3;
            h_2113930753 = handlers_2113930738[chckIndx(i_536871016, 0, (handlers_2113930738).length - 1)];
            if (!((h_2113930753.state.current == 0))) {
            result_2113930739 = true;
            break BeforeRet;
            }
            
            i_536871016 = addInt(i_536871016, 1);
          }
      };
    };
    result_2113930739 = false;
    break BeforeRet;
  };

  return result_2113930739;

}

function step_2013266020(dfa_2013266021, state_2013266022, currentInput_2013266023, mods_2013266024) {
    var Temporary1;

  var result_2013266025 = ({current: 0, persistent: 0});

  BeforeRet: {
    if ((currentInput_2013266023 == 0)) {
    log_1174405220(logger_704643272[0], 5, [[73,110,112,117,116,32,48,32,105,115,32,105,110,118,97,108,105,100]]);
    break BeforeRet;
    }
    
    if (!(contains_2013266068(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    if (!(contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    result_2013266025.current = (Temporary1 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024), Temporary1)[0][Temporary1[1]];
    if (dfa_2013266021.states[chckIndx(result_2013266025.current, 0, (dfa_2013266021.states).length - 1)].persistent) {
    result_2013266025.persistent = result_2013266025.current;
    }
    else {
      result_2013266025.persistent = state_2013266022.persistent;
    }
    
  };

  return result_2013266025;

}

function dfa_2113929567(handler_2113929568) {
  var result_2113929569 = null;

  BeforeRet: {
    if ((handler_2113929568.revision < handler_2113929568.config.revision)) {
    handler_2113929568.dfaInternal = buildDFA_2113929279(handler_2113929568.config);
    handler_2113929568.revision = handler_2113929568.config.revision;
    }
    
    result_2113929569 = handler_2113929568.dfaInternal;
    break BeforeRet;
  };

  return result_2113929569;

}

function HEX24_788529796(rune_788529797) {
  var result_788529798 = [];

    result_788529798 = nimCopy(null, nuctoUTF8(rune_788529797), NTI33554449);

  return result_788529798;

}

function inputAsString_2013267079(input_2013267080) {
    var Temporary1;

  var result_2013267081 = [];

    if (    input_2013267080 == -1    ){      Temporary1 = [69,78,84,69,82];
      }
    else if (    input_2013267080 == -2    ){      Temporary1 = [69,83,67,65,80,69];
      }
    else if (    input_2013267080 == -3    ){      Temporary1 = [66,65,67,75,83,80,65,67,69];
      }
    else if (    input_2013267080 == -4    ){      Temporary1 = [83,80,65,67,69];
      }
    else if (    input_2013267080 == -5    ){      Temporary1 = [68,69,76,69,84,69];
      }
    else if (    input_2013267080 == -6    ){      Temporary1 = [84,65,66];
      }
    else if (    input_2013267080 == -7    ){      Temporary1 = [76,69,70,84];
      }
    else if (    input_2013267080 == -8    ){      Temporary1 = [82,73,71,72,84];
      }
    else if (    input_2013267080 == -9    ){      Temporary1 = [85,80];
      }
    else if (    input_2013267080 == -10    ){      Temporary1 = [68,79,87,78];
      }
    else if (    input_2013267080 == -11    ){      Temporary1 = [72,79,77,69];
      }
    else if (    input_2013267080 == -12    ){      Temporary1 = [69,78,68];
      }
    else if (    input_2013267080 == -13    ){      Temporary1 = [80,65,71,69,95,85,80];
      }
    else if (    input_2013267080 == -14    ){      Temporary1 = [80,65,71,69,95,68,79,87,78];
      }
    else if (    input_2013267080 == -20    ){      Temporary1 = [70,49];
      }
    else if (    input_2013267080 == -21    ){      Temporary1 = [70,50];
      }
    else if (    input_2013267080 == -22    ){      Temporary1 = [70,51];
      }
    else if (    input_2013267080 == -23    ){      Temporary1 = [70,52];
      }
    else if (    input_2013267080 == -24    ){      Temporary1 = [70,53];
      }
    else if (    input_2013267080 == -25    ){      Temporary1 = [70,54];
      }
    else if (    input_2013267080 == -26    ){      Temporary1 = [70,55];
      }
    else if (    input_2013267080 == -27    ){      Temporary1 = [70,56];
      }
    else if (    input_2013267080 == -28    ){      Temporary1 = [70,57];
      }
    else if (    input_2013267080 == -29    ){      Temporary1 = [70,49,48];
      }
    else if (    input_2013267080 == -30    ){      Temporary1 = [70,49,49];
      }
    else if (    input_2013267080 == -31    ){      Temporary1 = [70,49,50];
      }
    else{
      Temporary1 = ([60] || []).concat(HEX24_369098763(input_2013267080) || [],[62] || []);
      }
    result_2013267081 = nimCopy(null, Temporary1, NTI33554449);

  return result_2013267081;

}

function inputToString_2013267082(input_2013267083, modifiers_2013267084) {
  var result_2013267085 = [];

    if ((!(SetEq(modifiers_2013267084, ConstSet289)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [60]);;
    }
    
    if ((modifiers_2013267084[0] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [67]);;
    }
    
    if ((modifiers_2013267084[1] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [83]);;
    }
    
    if ((modifiers_2013267084[2] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [65]);;
    }
    
    if ((modifiers_2013267084[3] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [77]);;
    }
    
    if (!(SetEq(modifiers_2013267084, ConstSet290))) {
    result_2013267085.push.apply(result_2013267085, [45]);;
    }
    
    if (((0 < input_2013267083) && (input_2013267083 <= 2147483647))) {
    var ch_2013267114 = chckRange(input_2013267083, -2147483648, 2147483647);
    result_2013267085.push.apply(result_2013267085, HEX24_788529796(ch_2013267114));;
    }
    else {
    result_2013267085.push.apply(result_2013267085, inputAsString_2013267079(input_2013267083));;
    }
    
    if ((!(SetEq(modifiers_2013267084, ConstSet291)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [62]);;
    }
    

  return result_2013267085;

}

function isTerminal_2013267067(dfa_2013267068, state_2013267069) {
  var result_2013267070 = false;

  BeforeRet: {
    result_2013267070 = dfa_2013267068.states[chckIndx(state_2013267069, 0, (dfa_2013267068.states).length - 1)].isTerminal;
    break BeforeRet;
  };

  return result_2013267070;

}

function getAction_2013267075(dfa_2013267076, state_2013267077) {
  var result_2013267078 = [];

  BeforeRet: {
    result_2013267078 = nimCopy(null, dfa_2013267076.states[chckIndx(state_2013267077, 0, (dfa_2013267076.states).length - 1)].function, NTI33554449);
    break BeforeRet;
  };

  return result_2013267078;

}

function getDefaultState_2013267071(dfa_2013267072, state_2013267073) {
  var result_2013267074 = 0;

  BeforeRet: {
    result_2013267074 = dfa_2013267072.states[chckIndx(state_2013267073, 0, (dfa_2013267072.states).length - 1)].nextState;
    break BeforeRet;
  };

  return result_2013267074;

}

function handleEvent_2113930703(handler_2113930704, handler_2113930704_Idx, input_2113930705, modifiers_2113930706, handleUnknownAsInput_2113930707) {
  var result_2113930708 = 0;

  BeforeRet: {
    if (!((input_2113930705 == 0))) {
    var prevState_2113930709 = nimCopy(null, handler_2113930704[handler_2113930704_Idx].state, NTI2013265955);
    handler_2113930704[handler_2113930704_Idx].state = nimCopy(handler_2113930704[handler_2113930704_Idx].state, step_2013266020(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state, input_2113930705, modifiers_2113930706), NTI2013265955);
    if ((handler_2113930704[handler_2113930704_Idx].state.current == 0)) {
    if ((prevState_2113930709.current == 0)) {
    if ((((handleUnknownAsInput_2113930707 && (0 < input_2113930705)) && SetEq(SetPlus(modifiers_2113930706, ConstSet287), ConstSet288)) && !((handler_2113930704[handler_2113930704_Idx].handleInput == null)))) {
    result_2113930708 = handler_2113930704[handler_2113930704_Idx].handleInput(inputToString_2013267082(input_2113930705, ConstSet292));
    break BeforeRet;
    }
    
    result_2113930708 = 1;
    break BeforeRet;
    }
    else {
      result_2113930708 = 2;
      break BeforeRet;
    }
    
    }
    else {
    if (isTerminal_2013267067(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current)) {
    var colontmp__536871018 = parseAction_2113930650(getAction_2013267075(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current));
    var action_2113930722 = nimCopy(null, colontmp__536871018["Field0"], NTI33554449);
    var arg_2113930723 = nimCopy(null, colontmp__536871018["Field1"], NTI33554449);
    handler_2113930704[handler_2113930704_Idx].state.current = getDefaultState_2013267071(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current);
    result_2113930708 = handler_2113930704[handler_2113930704_Idx].handleAction(action_2113930722, arg_2113930723);
    break BeforeRet;
    }
    else {
      result_2113930708 = 4;
      break BeforeRet;
    }
    }
    }
    else {
      result_2113930708 = 0;
      break BeforeRet;
    }
    
  };

  return result_2113930708;

}

function reset_2113930643(handler_2113930644, handler_2113930644_Idx) {
    handler_2113930644[handler_2113930644_Idx].state = nimCopy(handler_2113930644[handler_2113930644_Idx].state, ({current: 0, persistent: 0}), NTI2013265955);

  
}

function handleEvent_2113930763(handlers_2113930764, input_2113930765, modifiers_2113930766) {
            var Temporary4;

  var result_2113930767 = false;

    var anyInProgress_2113930768 = anyInProgress_2113930737(handlers_2113930764);
    var allowHandlingUnknownAsInput_2113930769 = true;
    Label1: {
      var i_2113930778 = 0;
      var colontmp__536871011 = 0;
      colontmp__536871011 = (handlers_2113930764).length;
      var i_536871012 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871012 < colontmp__536871011)) break Label3;
            i_2113930778 = i_536871012;
            var handlerIndex_2113930782 = subInt(subInt((handlers_2113930764).length, i_2113930778), 1);
            var handler_2113930783 = [handlers_2113930764[chckIndx(handlerIndex_2113930782, 0, (handlers_2113930764).length - 1)]];
            if (((anyInProgress_2113930768 && !((handler_2113930783[0].state.current == 0))) || (!(anyInProgress_2113930768) && (handler_2113930783[0].state.current == 0)))) {
            Temporary4 = handleEvent_2113930703(handler_2113930783, 0, input_2113930765, modifiers_2113930766, allowHandlingUnknownAsInput_2113930769);
            }
            else {
            Temporary4 = 1;
            }
            
            var response_2113930784 = Temporary4;
            if (!((response_2113930784 == 1))) {
            result_2113930767 = true;
            }
            
            switch (response_2113930784) {
            case 3:
              allowHandlingUnknownAsInput_2113930769 = false;
              Label5: {
                var k_2113930831 = 0;
                var h_2113930832 = null;
                var i_536871008 = 0;
                var L_536871009 = (handlers_2113930764).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536871008 < L_536871009)) break Label7;
                      k_2113930831 = i_536871008;
                      h_2113930832 = handlers_2113930764[chckIndx(i_536871008, 0, (handlers_2113930764).length - 1)];
                      if (!((k_2113930831 == handlerIndex_2113930782))) {
                      var h_2113930833 = [h_2113930832];
                      reset_2113930643(h_2113930833, 0);
                      }
                      
                      i_536871008 = addInt(i_536871008, 1);
                      if (!(((handlers_2113930764).length == L_536871009))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              break Label1;
              break;
            case 4:
              allowHandlingUnknownAsInput_2113930769 = false;
              break;
            case 0:
            case 2:
            case 1:
              break;
            }
            if (handler_2113930783[0].config.consumeAllInput) {
            break Label1;
            }
            
            i_536871012 = addInt(i_536871012, 1);
          }
      };
    };

  return result_2113930767;

}

function add_2969575620(x_2969575622, x_2969575622_Idx, y_2969575623) {
    var Temporary1;

    var xl_2969575627 = (x_2969575622[x_2969575622_Idx]).length;
    if (x_2969575622[x_2969575622_Idx].length < (Temporary1 = chckRange(addInt(xl_2969575627, (y_2969575623).length), 0, 2147483647), Temporary1)) { for (var i = x_2969575622[x_2969575622_Idx].length ; i < Temporary1 ; ++i) x_2969575622[x_2969575622_Idx].push(null); }
               else { x_2969575622[x_2969575622_Idx].length = Temporary1; };
    Label2: {
      var i_2969575642 = 0;
      var colontmp__536871020 = 0;
      colontmp__536871020 = (y_2969575623).length - 1;
      var res_536871021 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871021 <= colontmp__536871020)) break Label4;
            i_2969575642 = res_536871021;
            x_2969575622[x_2969575622_Idx][chckIndx(addInt(xl_2969575627, i_2969575642), 0, (x_2969575622[x_2969575622_Idx]).length - 1)] = y_2969575623[chckIndx(i_2969575642, 0, (y_2969575623).length - 1)];
            res_536871021 = addInt(res_536871021, 1);
          }
      };
    };

  
}

function currentEventHandlers_1291858938(self_1291858939) {
  var result_1291858940 = [[]];

    result_1291858940[0] = nimCopy(null, [self_1291858939.eventHandler], NTI2466250766);
    var modeOnTop_1291858954 = getOption_2818583615(self_1291858939, getContextWithMode_1291858891(self_1291858939, [101,100,105,116,111,114,46,99,117,115,116,111,109,45,109,111,100,101,45,111,110,45,116,111,112]), true);
    if ((!((self_1291858939.modeEventHandler == null)) && !(modeOnTop_1291858954))) {
    result_1291858940[0].push(self_1291858939.modeEventHandler);;
    }
    
    if (self_1291858939.commandLineMode) {
    add_2969575620(result_1291858940, 0, getEventHandlers_2415919261(getCommandLineTextEditor_1291851061(self_1291858939)));
    result_1291858940[0].push(self_1291858939.commandLineEventHandler);;
    }
    else {
    if ((0 < (self_1291858939.popups).length)) {
    add_2969575620(result_1291858940, 0, getEventHandlers_2483028027(self_1291858939.popups[chckIndx((self_1291858939.popups).length - 1, 0, (self_1291858939.popups).length - 1)]));
    }
    else {
    if (((0 <= self_1291858939.currentView) && (self_1291858939.currentView < (self_1291858939.views).length))) {
    add_2969575620(result_1291858940, 0, getEventHandlers_2415919261(self_1291858939.views[chckIndx(self_1291858939.currentView, 0, (self_1291858939.views).length - 1)].editor));
    }
    }}
    if ((!((self_1291858939.modeEventHandler == null)) && modeOnTop_1291858954)) {
    result_1291858940[0].push(self_1291858939.modeEventHandler);;
    }
    

  return result_1291858940[0];

}

function handleKeyPress_1291851064(self_1291851065, input_1291851066, modifiers_1291851067) {
    if (handleEvent_2113930763(currentEventHandlers_1291858938(self_1291851065), input_1291851066, modifiers_1291851067)) {
    preventDefault_2768240809(self_1291851065.platform);
    }
    

  
}

function handleKeyRelease_1291851068(self_1291851069, input_1291851070, modifiers_1291851071) {
  
}

function handleRune_1291851072(self_1291851073, input_1291851074, modifiers_1291851075) {
    var Temporary1;
      var Temporary2;

      if (!isAscii_2013266003(input_1291851074)) Temporary2 = false; else {        Temporary2 = nsuIsAlphaNumericChar(chckRange(input_1291851074, 0, 255));      }    if (Temporary2) {
    Temporary1 = modifiers_1291851075;
    }
    else {
    Temporary1 = ConstSet293;
    }
    
    var modifiers_1291859155 = nimCopy(null, Temporary1, NTI2013265950);
    if (handleEvent_2113930763(currentEventHandlers_1291858938(self_1291851073), input_1291851074, modifiers_1291859155)) {
    preventDefault_2768240809(self_1291851073.platform);
    }
    

  
}

function subscribe_1291851329(event_1291851331, callback_1291851333) {
  var result_1291851334 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851334 = nimCopy(result_1291851334, newId_2046820597(), NTI2046820355);
    event_1291851331.handlers.push({Field0: nimCopy(null, result_1291851334, NTI2046820355), Field1: callback_1291851333});;

  return result_1291851334;

}

function contains_2130706614(a_2130706615, b_2130706616) {
  var result_2130706617 = false;

  BeforeRet: {
    result_2130706617 = ((((a_2130706615.x <= b_2130706616.x) && (b_2130706616.x <= (a_2130706615.x + a_2130706615.w))) && (a_2130706615.y <= b_2130706616.y)) && (b_2130706616.y <= (a_2130706615.y + a_2130706615.h)));
    break BeforeRet;
  };

  return result_2130706617;

}

function handleMousePress_1291851076(self_1291851077, button_1291851078, modifiers_1291851079, mousePosWindow_1291851080) {
  BeforeRet: {
    Label1: {
      var i_1291859009 = 0;
      var colontmp__536871024 = 0;
      colontmp__536871024 = (self_1291851077.popups).length - 1;
      var res_536871025 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871025 <= colontmp__536871024)) break Label3;
            i_1291859009 = res_536871025;
            var popup_1291859013 = self_1291851077.popups[chckIndx(subInt((self_1291851077.popups).length - 1, i_1291859009), 0, (self_1291851077.popups).length - 1)];
            if (contains_2130706614(popup_1291859013.lastBounds, mousePosWindow_1291851080)) {
            handleMousePress_2483028038(popup_1291859013, button_1291851078, mousePosWindow_1291851080);
            break BeforeRet;
            }
            
            res_536871025 = addInt(res_536871025, 1);
          }
      };
    };
    var rects_1291859017 = layoutViews_1291848236(self_1291851077.layout, self_1291851077.layout_props, self_1291851077.lastBounds, (self_1291851077.views).length);
    Label4: {
      var i_1291859050 = 0;
      var view_1291859051 = null;
      var i_536871029 = 0;
      var L_536871030 = (self_1291851077.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871029 < L_536871030)) break Label6;
            i_1291859050 = i_536871029;
            view_1291859051 = self_1291851077.views[chckIndx(i_536871029, 0, (self_1291851077.views).length - 1)];
            if (((rects_1291859017).length <= i_1291859050)) {
            break BeforeRet;
            }
            
            if (contains_2130706614(rects_1291859017[chckIndx(i_1291859050, 0, (rects_1291859017).length - 1)], mousePosWindow_1291851080)) {
            self_1291851077.currentView = i_1291859050;
            handleMousePress_2415919278(view_1291859051.editor, button_1291851078, mousePosWindow_1291851080);
            break BeforeRet;
            }
            
            i_536871029 = addInt(i_536871029, 1);
            if (!(((self_1291851077.views).length == L_536871030))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function handleMouseRelease_1291851081(self_1291851082, button_1291851083, modifiers_1291851084, mousePosWindow_1291851085) {
  BeforeRet: {
    Label1: {
      var i_1291859068 = 0;
      var colontmp__536871033 = 0;
      colontmp__536871033 = (self_1291851082.popups).length - 1;
      var res_536871034 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871034 <= colontmp__536871033)) break Label3;
            i_1291859068 = res_536871034;
            var popup_1291859072 = self_1291851082.popups[chckIndx(subInt((self_1291851082.popups).length - 1, i_1291859068), 0, (self_1291851082.popups).length - 1)];
            if (contains_2130706614(popup_1291859072.lastBounds, mousePosWindow_1291851085)) {
            handleMouseRelease_2483028043(popup_1291859072, button_1291851083, mousePosWindow_1291851085);
            break BeforeRet;
            }
            
            res_536871034 = addInt(res_536871034, 1);
          }
      };
    };
    var rects_1291859076 = layoutViews_1291848236(self_1291851082.layout, self_1291851082.layout_props, self_1291851082.lastBounds, (self_1291851082.views).length);
    Label4: {
      var i_1291859082 = 0;
      var view_1291859083 = null;
      var i_536871037 = 0;
      var L_536871038 = (self_1291851082.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871037 < L_536871038)) break Label6;
            i_1291859082 = i_536871037;
            view_1291859083 = self_1291851082.views[chckIndx(i_536871037, 0, (self_1291851082.views).length - 1)];
            if (((rects_1291859076).length <= i_1291859082)) {
            break BeforeRet;
            }
            
            if (((self_1291851082.currentView == i_1291859082) && contains_2130706614(rects_1291859076[chckIndx(i_1291859082, 0, (rects_1291859076).length - 1)], mousePosWindow_1291851085))) {
            handleMouseRelease_2415919283(view_1291859083.editor, button_1291851083, mousePosWindow_1291851085);
            break BeforeRet;
            }
            
            i_536871037 = addInt(i_536871037, 1);
            if (!(((self_1291851082.views).length == L_536871038))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851450(event_1291851452, callback_1291851454) {
  var result_1291851455 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851455 = nimCopy(result_1291851455, newId_2046820597(), NTI2046820355);
    event_1291851452.handlers.push({Field0: nimCopy(null, result_1291851455, NTI2046820355), Field1: callback_1291851454});;

  return result_1291851455;

}

function handleMouseMove_1291851086(self_1291851087, mousePosWindow_1291851088, mousePosDelta_1291851089, modifiers_1291851090, buttons_1291851091) {
  BeforeRet: {
    Label1: {
      var i_1291859100 = 0;
      var colontmp__536871041 = 0;
      colontmp__536871041 = (self_1291851087.popups).length - 1;
      var res_536871042 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871042 <= colontmp__536871041)) break Label3;
            i_1291859100 = res_536871042;
            var popup_1291859104 = self_1291851087.popups[chckIndx(subInt((self_1291851087.popups).length - 1, i_1291859100), 0, (self_1291851087.popups).length - 1)];
            if (contains_2130706614(popup_1291859104.lastBounds, mousePosWindow_1291851088)) {
            handleMouseMove_2483028050(popup_1291859104, mousePosWindow_1291851088, mousePosDelta_1291851089, modifiers_1291851090, buttons_1291851091);
            break BeforeRet;
            }
            
            res_536871042 = addInt(res_536871042, 1);
          }
      };
    };
    var rects_1291859108 = layoutViews_1291848236(self_1291851087.layout, self_1291851087.layout_props, self_1291851087.lastBounds, (self_1291851087.views).length);
    Label4: {
      var i_1291859114 = 0;
      var view_1291859115 = null;
      var i_536871045 = 0;
      var L_536871046 = (self_1291851087.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871045 < L_536871046)) break Label6;
            i_1291859114 = i_536871045;
            view_1291859115 = self_1291851087.views[chckIndx(i_536871045, 0, (self_1291851087.views).length - 1)];
            if (((rects_1291859108).length <= i_1291859114)) {
            break BeforeRet;
            }
            
            if (((self_1291851087.currentView == i_1291859114) && contains_2130706614(rects_1291859108[chckIndx(i_1291859114, 0, (rects_1291859108).length - 1)], mousePosWindow_1291851088))) {
            handleMouseMove_2415919290(view_1291859115.editor, mousePosWindow_1291851088, mousePosDelta_1291851089, modifiers_1291851090, buttons_1291851091);
            break BeforeRet;
            }
            
            i_536871045 = addInt(i_536871045, 1);
            if (!(((self_1291851087.views).length == L_536871046))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851522(event_1291851524, callback_1291851526) {
  var result_1291851527 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851527 = nimCopy(result_1291851527, newId_2046820597(), NTI2046820355);
    event_1291851524.handlers.push({Field0: nimCopy(null, result_1291851527, NTI2046820355), Field1: callback_1291851526});;

  return result_1291851527;

}

function handleScroll_1291851092(self_1291851093, scroll_1291851094, mousePosWindow_1291851095, modifiers_1291851096) {
  BeforeRet: {
    Label1: {
      var i_1291859131 = 0;
      var colontmp__536871049 = 0;
      colontmp__536871049 = (self_1291851093.popups).length - 1;
      var res_536871050 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871050 <= colontmp__536871049)) break Label3;
            i_1291859131 = res_536871050;
            var popup_1291859135 = self_1291851093.popups[chckIndx(subInt((self_1291851093.popups).length - 1, i_1291859131), 0, (self_1291851093.popups).length - 1)];
            if (contains_2130706614(popup_1291859135.lastBounds, mousePosWindow_1291851095)) {
            handleScroll_2483028033(popup_1291859135, scroll_1291851094, mousePosWindow_1291851095);
            break BeforeRet;
            }
            
            res_536871050 = addInt(res_536871050, 1);
          }
      };
    };
    Label4: {
      var i_1291859141 = 0;
      var view_1291859142 = null;
      var i_536871053 = 0;
      var L_536871054 = (self_1291851093.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871053 < L_536871054)) break Label6;
            i_1291859141 = i_536871053;
            view_1291859142 = self_1291851093.views[chckIndx(i_536871053, 0, (self_1291851093.views).length - 1)];
            if (contains_2130706614(view_1291859142.editor.lastContentBounds, mousePosWindow_1291851095)) {
            handleScroll_2415919273(view_1291859142.editor, scroll_1291851094, mousePosWindow_1291851095);
            break BeforeRet;
            }
            
            i_536871053 = addInt(i_536871053, 1);
            if (!(((self_1291851093.views).length == L_536871054))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851594(event_1291851596, callback_1291851598) {
  var result_1291851599 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851599 = nimCopy(result_1291851599, newId_2046820597(), NTI2046820355);
    event_1291851596.handlers.push({Field0: nimCopy(null, result_1291851599, NTI2046820355), Field1: callback_1291851598});;

  return result_1291851599;

}

function handleDropFile_1291851097(self_1291851098, path_1291851099, content_1291851100) {
    createView_1291848958(self_1291851098, newTextDocument_2818579088(path_1291851099, content_1291851100, false));

  
}

function subscribe_1291851666(event_1291851668, callback_1291851670) {
  var result_1291851671 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851671 = nimCopy(result_1291851671, newId_2046820597(), NTI2046820355);
    event_1291851668.handlers.push({Field0: nimCopy(null, result_1291851671, NTI2046820355), Field1: callback_1291851670});;

  return result_1291851671;

}

function initTable_1291851681(initialSize_1291851684) {
  var result_1291851685 = ({data: [], counter: 0});

    var correctSizeHEX60gensym59_1291851687 = slotsNeeded_1308622891(chckRange(initialSize_1291851684, 0, 2147483647));
    result_1291851685.counter = 0;
    result_1291851685.data = new Array(chckRange(correctSizeHEX60gensym59_1291851687, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_1291851687, 0, 2147483647) ; ++i) { result_1291851685.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }
  return result_1291851685;

}

function HEX5BHEX5DHEX3D_1291851750(t_1291851753, key_1291851754, val_1291851755) {
    if (((t_1291851753.data).length == 0)) {
    var correctSizeHEX60gensym62_1291851804 = slotsNeeded_1308622891(32);
    t_1291851753.counter = 0;
    t_1291851753.data = new Array(chckRange(correctSizeHEX60gensym62_1291851804, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym62_1291851804, 0, 2147483647) ; ++i) { t_1291851753.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291851809 = [0];
    var index_1291851816 = rawGet_1291848320(t_1291851753, key_1291851754, hc_1291851809, 0);
    if ((0 <= index_1291851816)) {
    t_1291851753.data[chckIndx(index_1291851816, 0, (t_1291851753.data).length - 1)].Field2 = val_1291851755;
    }
    else {
      if (((t_1291851753.data).length == 0)) {
      var correctSizeHEX60gensym65_1291851918 = slotsNeeded_1308622891(32);
      t_1291851753.counter = 0;
      t_1291851753.data = new Array(chckRange(correctSizeHEX60gensym65_1291851918, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym65_1291851918, 0, 2147483647) ; ++i) { t_1291851753.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }      }
      
      if (mustRehash_1291851923(t_1291851753)) {
      enlarge_1291852078(t_1291851753);
      index_1291851816 = rawGetKnownHC_1291852550(t_1291851753, key_1291851754, hc_1291851809[0]);
      }
      
      index_1291851816 = subInt(-1, index_1291851816);
      rawInsert_1291852372(t_1291851753, t_1291851753, "data", key_1291851754, val_1291851755, hc_1291851809[0], index_1291851816);
      t_1291851753.counter = addInt(t_1291851753.counter, 1);
    }
    

  
}

function toTable_1291851676(pairs_1291851679) {
  var result_1291851680 = [({data: [], counter: 0})];

    result_1291851680[0] = nimCopy(result_1291851680[0], initTable_1291851681((pairs_1291851679).length), NTI1291845654);
    Label1: {
      var key_1291851708 = [];
      var val_1291851709 = 0.0;
      var i_536871058 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871058 < (pairs_1291851679).length)) break Label3;
            key_1291851708 = pairs_1291851679[chckIndx(i_536871058, 0, (pairs_1291851679).length - 1)]["Field0"];
            val_1291851709 = pairs_1291851679[chckIndx(i_536871058, 0, (pairs_1291851679).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1291851750(result_1291851680[0], key_1291851708, val_1291851709);
            i_536871058 = addInt(i_536871058, 1);
          }
      };
    };

  return result_1291851680[0];

}

function rawGet_2516583429(t_2516583432, key_2516583433, hc_2516583434, hc_2516583434_Idx) {
  var result_2516583435 = 0;

  BeforeRet: {
    hc_2516583434[hc_2516583434_Idx] = hash_1325400491(key_2516583433);
    if ((hc_2516583434[hc_2516583434_Idx] == 0)) {
    hc_2516583434[hc_2516583434_Idx] = 314159265;
    }
    
    if (((t_2516583432.data).length == 0)) {
    result_2516583435 = -1;
    break BeforeRet;
    }
    
    var h_2516583486 = (hc_2516583434[hc_2516583434_Idx] & (t_2516583432.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field0)) break Label2;
          if (((t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field0 == hc_2516583434[hc_2516583434_Idx]) && eqStrings(t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field1, key_2516583433))) {
          result_2516583435 = h_2516583486;
          break BeforeRet;
          }
          
          h_2516583486 = nextTry_1308622883(h_2516583486, (t_2516583432.data).length - 1);
        }
    };
    result_2516583435 = subInt(-1, h_2516583486);
  };

  return result_2516583435;

}

function mustRehash_2516583774(t_2516583776) {
  var result_2516583777 = false;

    if (!((t_2516583776.counter < (t_2516583776.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2516583777 = ((mulInt((t_2516583776.data).length, 2) < mulInt(t_2516583776.counter, 3)) || (subInt((t_2516583776.data).length, t_2516583776.counter) < 4));

  return result_2516583777;

}

function rawInsert_2516584223(t_2516584227, data_2516584228, data_2516584228_Idx, key_2516584229, val_2516584230, hc_2516584231, h_2516584232) {
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field1 = nimCopy(null, key_2516584229, NTI33554449);
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field2 = nimCopy(data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field2, val_2516584230, NTI2550136835);
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field0 = hc_2516584231;

  
}

function enlarge_2516583929(t_2516583932) {
    var n_2516583935 = [];
    n_2516583935 = new Array(chckRange(mulInt((t_2516583932.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2516583932.data).length, 2), 0, 2147483647) ; ++i) { n_2516583935[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    var Temporary1 = t_2516583932.data; t_2516583932.data = n_2516583935; n_2516583935 = Temporary1;    Label2: {
      var i_2516583999 = 0;
      var colontmp__536871063 = 0;
      colontmp__536871063 = (n_2516583935).length - 1;
      var res_536871064 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871064 <= colontmp__536871063)) break Label4;
            i_2516583999 = res_536871064;
            var eh_2516584053 = n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field0;
            if (isFilled_1308622880(eh_2516584053)) {
            var j_2516584057 = (eh_2516584053 & (t_2516583932.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2516583932.data[chckIndx(j_2516584057, 0, (t_2516583932.data).length - 1)].Field0)) break Label6;
                  j_2516584057 = nextTry_1308622883(j_2516584057, (t_2516583932.data).length - 1);
                }
            };
            rawInsert_2516584223(t_2516583932, t_2516583932, "data", n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field1, n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field2, eh_2516584053, j_2516584057);
            }
            
            res_536871064 = addInt(res_536871064, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2516584392(t_2516584395, key_2516584396, hc_2516584397) {
  var result_2516584398 = 0;

  BeforeRet: {
    if (((t_2516584395.data).length == 0)) {
    result_2516584398 = -1;
    break BeforeRet;
    }
    
    var h_2516584449 = (hc_2516584397 & (t_2516584395.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field0)) break Label2;
          if (((t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field0 == hc_2516584397) && eqStrings(t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field1, key_2516584396))) {
          result_2516584398 = h_2516584449;
          break BeforeRet;
          }
          
          h_2516584449 = nextTry_1308622883(h_2516584449, (t_2516584395.data).length - 1);
        }
    };
    result_2516584398 = subInt(-1, h_2516584449);
  };

  return result_2516584398;

}

function HEX5BHEX5DHEX3D_2516583368(t_2516583371, key_2516583372, val_2516583373) {
    if (((t_2516583371.data).length == 0)) {
    var correctSizeHEX60gensym23_2516583423 = slotsNeeded_1308622891(32);
    t_2516583371.counter = 0;
    t_2516583371.data = new Array(chckRange(correctSizeHEX60gensym23_2516583423, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2516583423, 0, 2147483647) ; ++i) { t_2516583371.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    }
    
    var hc_2516583428 = [0];
    var index_2516583667 = rawGet_2516583429(t_2516583371, key_2516583372, hc_2516583428, 0);
    if ((0 <= index_2516583667)) {
    t_2516583371.data[chckIndx(index_2516583667, 0, (t_2516583371.data).length - 1)].Field2 = nimCopy(t_2516583371.data[chckIndx(index_2516583667, 0, (t_2516583371.data).length - 1)].Field2, val_2516583373, NTI2550136835);
    }
    else {
      if (((t_2516583371.data).length == 0)) {
      var correctSizeHEX60gensym28_2516583769 = slotsNeeded_1308622891(32);
      t_2516583371.counter = 0;
      t_2516583371.data = new Array(chckRange(correctSizeHEX60gensym28_2516583769, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2516583769, 0, 2147483647) ; ++i) { t_2516583371.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }      }
      
      if (mustRehash_2516583774(t_2516583371)) {
      enlarge_2516583929(t_2516583371);
      index_2516583667 = rawGetKnownHC_2516584392(t_2516583371, key_2516583372, hc_2516583428[0]);
      }
      
      index_2516583667 = subInt(-1, index_2516583667);
      rawInsert_2516584223(t_2516583371, t_2516583371, "data", key_2516583372, val_2516583373, hc_2516583428[0], index_2516583667);
      t_2516583371.counter = addInt(t_2516583371.counter, 1);
    }
    

  
}

function c2n_2533359804(hex_2533359805, i_2533359806) {
  var result_2533359807 = 0;

  BeforeRet: {
    var c_2533359811 = hex_2533359805[chckIndx(i_2533359806, 0, (hex_2533359805).length - 1)];
    if (    c_2533359811 >= 48 && c_2533359811 <= 57    ){      result_2533359807 = subInt(c_2533359811, 48);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 97 && c_2533359811 <= 102    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 97);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 65 && c_2533359811 <= 70    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 65);
      break BeforeRet;
      }
    else{
      raiseException({message: [102,111,114,109,97,116,32,105,115,32,110,111,116,32,104,101,120], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
      }
  };

  return result_2533359807;

}

function parseHex_2533359858(hex_2533359859) {
  var result_2533359860 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359859).length == 6))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,57,57,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,54,96,32]);
    }
    
    result_2533359860.r = (addInt(mulInt(c2n_2533359804(hex_2533359859, 0), 16), c2n_2533359804(hex_2533359859, 1)) / 255.0);
    result_2533359860.g = (addInt(mulInt(c2n_2533359804(hex_2533359859, 2), 16), c2n_2533359804(hex_2533359859, 3)) / 255.0);
    result_2533359860.b = (addInt(mulInt(c2n_2533359804(hex_2533359859, 4), 16), c2n_2533359804(hex_2533359859, 5)) / 255.0);
    result_2533359860.a = 1.0;

  return result_2533359860;

}

function parseHexAlpha_2533359949(hex_2533359950) {
  var result_2533359951 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359950).length == 8))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,50,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,56,96,32]);
    }
    
    result_2533359951.r = (addInt(mulInt(c2n_2533359804(hex_2533359950, 0), 16), c2n_2533359804(hex_2533359950, 1)) / 255.0);
    result_2533359951.g = (addInt(mulInt(c2n_2533359804(hex_2533359950, 2), 16), c2n_2533359804(hex_2533359950, 3)) / 255.0);
    result_2533359951.b = (addInt(mulInt(c2n_2533359804(hex_2533359950, 4), 16), c2n_2533359804(hex_2533359950, 5)) / 255.0);
    result_2533359951.a = (addInt(mulInt(c2n_2533359804(hex_2533359950, 6), 16), c2n_2533359804(hex_2533359950, 7)) / 255.0);

  return result_2533359951;

}

function parseHtmlHexTiny_2533360059(hex_2533360060) {
  var result_2533360061 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!((hex_2533360060[chckIndx(0, 0, (hex_2533360060).length - 1)] == 35))) {
    raiseException({message: [69,120,112,101,99,116,101,100,32,39,35,39], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
    }
    
    if (!(((hex_2533360060).length == 4))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,54,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,52,96,32]);
    }
    
    result_2533360061.r = (c2n_2533359804(hex_2533360060, 1) / 15.0);
    result_2533360061.g = (c2n_2533359804(hex_2533360060, 2) / 15.0);
    result_2533360061.b = (c2n_2533359804(hex_2533360060, 3) / 15.0);
    result_2533360061.a = 1.0;

  return result_2533360061;

}

function parseHex_855639007(s_855639009, number_855639010, number_855639010_Idx, maxLen_855639011) {
    var Temporary1;

  var result_855639012 = 0;

    var i_855639013 = 0;
    var output_855639014 = 0;
    var foundDigit_855639015 = false;
    if ((maxLen_855639011 == 0)) {
    Temporary1 = (s_855639009).length;
    }
    else {
    Temporary1 = addInt(i_855639013, maxLen_855639011);
    }
    
    var last_855639022 = nimMin((s_855639009).length, Temporary1);
    if ((((addInt(i_855639013, 1) < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 48)) && (ConstSet294[s_855639009[chckIndx(addInt(i_855639013, 1), 0, (s_855639009).length - 1)]] != undefined))) {
    i_855639013 = addInt(i_855639013, 2);
    }
    else {
    if (((i_855639013 < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 35))) {
    i_855639013 = addInt(i_855639013, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_855639013 < last_855639022)) break Label3;
          switch (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_855639014 = ((output_855639014 << 4) | subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 48));
            foundDigit_855639015 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 97), 10));
            foundDigit_855639015 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 65), 10));
            foundDigit_855639015 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_855639013 = addInt(i_855639013, 1);
        }
    };
    if (foundDigit_855639015) {
    number_855639010[number_855639010_Idx] = output_855639014;
    result_855639012 = i_855639013;
    }
    

  return result_855639012;

}

function parseHex_855639000(s_855639002, number_855639003, number_855639003_Idx, start_855639004, maxLen_855639005) {
  var result_855639006 = 0;

    result_855639006 = parseHex_855639007((s_855639002.slice(start_855639004, (s_855639002).length - 1 + 1)), number_855639003, number_855639003_Idx, maxLen_855639005);

  return result_855639006;

}

function nsuParseHexInt(s_855638998) {
  var result_855638999 = [0];

    result_855638999[0] = 0;
    var L_855639072 = parseHex_855639000(s_855638998, result_855638999, 0, 0, 0);
    if ((!((L_855639072 == (s_855638998).length)) || (L_855639072 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638998 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638999[0];

}

function HEX5BHEX5D_2533359898(s_2533359901, x_2533359902) {
  var result_2533359903 = [];

    var a_2533359905 = subInt((s_2533359901).length, x_2533359902.a);
    var L_2533359907 = addInt(subInt(subInt((s_2533359901).length, x_2533359902.b), a_2533359905), 1);
    result_2533359903 = nimCopy(null, mnewString(chckRange(L_2533359907, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_2533359912 = 0;
      var i_536871069 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871069 < L_2533359907)) break Label3;
            i_2533359912 = i_536871069;
            result_2533359903[chckIndx(i_2533359912, 0, (result_2533359903).length - 1)] = s_2533359901[chckIndx(addInt(i_2533359912, a_2533359905), 0, (s_2533359901).length - 1)];
            i_536871069 = addInt(i_536871069, 1);
          }
      };
    };

  return result_2533359903;

}

function HEX2EHEX2E_2533359871(a_2533359874, b_2533359875) {
  var result_2533359878 = ({a: 0, b: 0});

    result_2533359878 = nimCopy(result_2533359878, {a: a_2533359874, b: b_2533359875}, NTI2533359773);

  return result_2533359878;

}

function parseHexVar_2516582448(text_2516582449) {
    var Temporary1;

  var result_2516582450 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (nsuStartsWith(text_2516582449, [35])) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var offset_2516582451 = Temporary1;
    if (((text_2516582449).length == addInt(6, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHex_2533359858(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(8, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHexAlpha_2533359949(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(3, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1)) || [])), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(4, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 2)) || [])), NTI2550136835);
    result_2516582450.a = (nsuParseHexInt(HEX5BHEX5D_2533359898(text_2516582449, HEX2EHEX2E_2533359871(1, 1))) / 255.0);
    break BeforeRet;
    }
    }}}
    rawEcho([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,104,101,120,32,99,111,108,111,114,32,39], text_2516582449, [39]);
    if (true) {
    failedAssertImpl_268435515([116,104,101,109,101,46,110,105,109,40,51,51,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
    result_2516582450 = nimCopy(result_2516582450, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI2550136835);
    break BeforeRet;
  };

  return result_2516582450;

}

function rawGet_2516582665(t_2516582668, key_2516582669, hc_2516582670, hc_2516582670_Idx) {
  var result_2516582671 = 0;

  BeforeRet: {
    hc_2516582670[hc_2516582670_Idx] = hash_1325400491(key_2516582669);
    if ((hc_2516582670[hc_2516582670_Idx] == 0)) {
    hc_2516582670[hc_2516582670_Idx] = 314159265;
    }
    
    if (((t_2516582668.data).length == 0)) {
    result_2516582671 = -1;
    break BeforeRet;
    }
    
    var h_2516582723 = (hc_2516582670[hc_2516582670_Idx] & (t_2516582668.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field0)) break Label2;
          if (((t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field0 == hc_2516582670[hc_2516582670_Idx]) && eqStrings(t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field1, key_2516582669))) {
          result_2516582671 = h_2516582723;
          break BeforeRet;
          }
          
          h_2516582723 = nextTry_1308622883(h_2516582723, (t_2516582668.data).length - 1);
        }
    };
    result_2516582671 = subInt(-1, h_2516582723);
  };

  return result_2516582671;

}

function mustRehash_2516584939(t_2516584941) {
  var result_2516584942 = false;

    if (!((t_2516584941.counter < (t_2516584941.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2516584942 = ((mulInt((t_2516584941.data).length, 2) < mulInt(t_2516584941.counter, 3)) || (subInt((t_2516584941.data).length, t_2516584941.counter) < 4));

  return result_2516584942;

}

function rawInsert_2516585388(t_2516585392, data_2516585393, data_2516585393_Idx, key_2516585394, val_2516585395, hc_2516585396, h_2516585397) {
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field1 = nimCopy(null, key_2516585394, NTI33554449);
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field2 = nimCopy(data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field2, val_2516585395, NTI2516582404);
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field0 = hc_2516585396;

  
}

function enlarge_2516585094(t_2516585097) {
    var n_2516585100 = [];
    n_2516585100 = new Array(chckRange(mulInt((t_2516585097.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2516585097.data).length, 2), 0, 2147483647) ; ++i) { n_2516585100[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    var Temporary1 = t_2516585097.data; t_2516585097.data = n_2516585100; n_2516585100 = Temporary1;    Label2: {
      var i_2516585164 = 0;
      var colontmp__536871074 = 0;
      colontmp__536871074 = (n_2516585100).length - 1;
      var res_536871075 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871075 <= colontmp__536871074)) break Label4;
            i_2516585164 = res_536871075;
            var eh_2516585218 = n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field0;
            if (isFilled_1308622880(eh_2516585218)) {
            var j_2516585222 = (eh_2516585218 & (t_2516585097.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2516585097.data[chckIndx(j_2516585222, 0, (t_2516585097.data).length - 1)].Field0)) break Label6;
                  j_2516585222 = nextTry_1308622883(j_2516585222, (t_2516585097.data).length - 1);
                }
            };
            rawInsert_2516585388(t_2516585097, t_2516585097, "data", n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field1, n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field2, eh_2516585218, j_2516585222);
            }
            
            res_536871075 = addInt(res_536871075, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2516585557(t_2516585560, key_2516585561, hc_2516585562) {
  var result_2516585563 = 0;

  BeforeRet: {
    if (((t_2516585560.data).length == 0)) {
    result_2516585563 = -1;
    break BeforeRet;
    }
    
    var h_2516585614 = (hc_2516585562 & (t_2516585560.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field0)) break Label2;
          if (((t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field0 == hc_2516585562) && eqStrings(t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field1, key_2516585561))) {
          result_2516585563 = h_2516585614;
          break BeforeRet;
          }
          
          h_2516585614 = nextTry_1308622883(h_2516585614, (t_2516585560.data).length - 1);
        }
    };
    result_2516585563 = subInt(-1, h_2516585614);
  };

  return result_2516585563;

}

function HEX5BHEX5DHEX3D_2516584766(t_2516584769, key_2516584770, val_2516584771) {
    if (((t_2516584769.data).length == 0)) {
    var correctSizeHEX60gensym37_2516584820 = slotsNeeded_1308622891(32);
    t_2516584769.counter = 0;
    t_2516584769.data = new Array(chckRange(correctSizeHEX60gensym37_2516584820, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2516584820, 0, 2147483647) ; ++i) { t_2516584769.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    }
    
    var hc_2516584825 = [0];
    var index_2516584832 = rawGet_2516582665(t_2516584769, key_2516584770, hc_2516584825, 0);
    if ((0 <= index_2516584832)) {
    t_2516584769.data[chckIndx(index_2516584832, 0, (t_2516584769.data).length - 1)].Field2 = nimCopy(t_2516584769.data[chckIndx(index_2516584832, 0, (t_2516584769.data).length - 1)].Field2, val_2516584771, NTI2516582404);
    }
    else {
      if (((t_2516584769.data).length == 0)) {
      var correctSizeHEX60gensym40_2516584934 = slotsNeeded_1308622891(32);
      t_2516584769.counter = 0;
      t_2516584769.data = new Array(chckRange(correctSizeHEX60gensym40_2516584934, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym40_2516584934, 0, 2147483647) ; ++i) { t_2516584769.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }      }
      
      if (mustRehash_2516584939(t_2516584769)) {
      enlarge_2516585094(t_2516584769);
      index_2516584832 = rawGetKnownHC_2516585557(t_2516584769, key_2516584770, hc_2516584825[0]);
      }
      
      index_2516584832 = subInt(-1, index_2516584832);
      rawInsert_2516585388(t_2516584769, t_2516584769, "data", key_2516584770, val_2516584771, hc_2516584825[0], index_2516584832);
      t_2516584769.counter = addInt(t_2516584769.counter, 1);
    }
    

  
}

function some_2516583251(val_2516583253) {
  var result_2516583254 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

    result_2516583254.has = true;
    result_2516583254.val = nimCopy(result_2516583254.val, val_2516583253, NTI2550136835);

  return result_2516583254;

}

function defaultTheme_2516586063() {
  var result_2516586064 = null;

    result_2516586064 = ({path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})});
    result_2516586064.name = nimCopy(null, [100,101,102,97,117,108,116], NTI33554449);
    result_2516586064.typ = nimCopy(null, [100,97,114,107], NTI33554449);
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,97,99,116,105,118,101,70,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,105,99,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,112,97,114,97,116,111,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,98,108,117,101], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,103,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,108,105,110,101,115], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,111,114,97,110,103,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,112,117,114,112,108,101], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,114,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,121,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,73,110,112,117,116,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,67,117,114,114,101,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,68,105,115,97,98,108,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,85,110,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,99,111,110,116,105,110,117,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,100,105,115,99,111,110,110,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,112,97,117,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,114,101,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,66,97,99,107,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,73,110,116,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,111,112,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,98,111,111,108,101,97,110], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,101,114,114,111,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,97,109,101], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,117,109,98,101,114], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,115,116,114,105,110,103], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,118,97,108,117,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,111,108,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,118,97,108,117,101,67,104,97,110,103,101,100,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,115,99,114,105,112,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,100,105,97,103,111,110,97,108,70,105,108,108], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,105,110,115,101,114,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,114,101,109,111,118,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,108,105,115,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,99,117,115,101,100,83,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,108,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,104,111,118,101,114,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,107,101,100,69,100,105,116,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,49], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,50], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,51], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,52], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,53], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,54], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,111,100,101,76,101,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,101,109,112,116,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,102,111,99,117,115,101,100,69,109,112,116,121,66,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,110,111,84,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,102,111,108,100,105,110,103,67,111,110,116,114,111,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,105,110,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,105,110,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,100,101,110,116,71,117,105,100,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,65,117,116,111,70,105,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,97,100,100,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,100,101,108,101,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,102,105,110,100,77,97,116,99,104,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,109,111,100,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,80,97,110,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,82,117,108,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,115,101,108,101,99,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,85,110,110,101,99,101,115,115,97,114,121,67,111,100,101,46,111,112,97,99,105,116,121], parseHexVar_2516582448([48,48,48,48,48,48,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,104,105,116,101,115,112,97,99,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,97,100,103,101,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,112,114,101,82,101,108,101,97,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,112,111,110,115,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,116,97,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,97,100,100,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,99,111,110,102,108,105,99,116,105,110,103,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,100,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,105,103,110,111,114,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,109,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,68,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,77,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,117,110,116,114,97,99,107,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,112,108,97,99,101,104,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,116,116,111,109,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,102,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,70,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,118,97,108,105,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,110,111,77,97,116,99,104,101,115,79,117,116,108,105,110,101], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,111,117,116,108,105,110,101], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,98,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,115,101,112,97,114,97,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,98,97,114,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,111,109,109,111,110,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,111,109,109,111,110,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,119,111,114,100,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,101,114,114,111,114,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([57,51,57,50,57,51,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,79,99,99,117,114,114,101,110,99,101,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([55,50,55,48,55,50,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,119,97,114,110,105,110,103,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,99,57,56,54,55,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,66,111,114,100,101,114,67,111,108,111,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,55,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,73,110,115,101,114,116,105,111,110,73,110,100,105,99,97,116,111,114], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,83,116,97,116,117,115,66,97,114,73,116,101,109,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,84,111,111,108,98,97,114,83,101,112,97,114,97,116,111,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,101,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,102,111,99,117,115,101,100,69,100,105,116,111,114,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,82,117,110,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,83,117,99,99,101,115,115,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,84,111,97,115,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,108,105,110,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,68,101,115,99,114,105,112,116,105,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,105,99,107,101,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,105,99,107,101,114,71,114,111,117,112,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,111,114,116,115,46,105,99,111,110,82,117,110,110,105,110,103,80,114,111,99,101,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,103,114,101,115,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,97,115,104,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,46,115,104,97,100,111,119], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,76,105,115,116,66,111,114,100,101,114], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,104,101,97,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,73,110,100,105,99,97,116,111,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,114,111,119,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,84,105,116,108,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,97,114,114,97,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,98,111,111,108,101,97,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,108,97,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,108,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,97,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,114,117,99,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,77,101,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,118,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,101,108,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,117,110,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,105,110,116,101,114,102,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,119,111,114,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,109,101,116,104,111,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,109,111,100,117,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,97,109,101,115,112,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,108,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,111,98,106,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,111,112,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,112,97,99,107,97,103,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,112,114,111,112,101,114,116,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,114,101,102,101,114,101,110,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,110,105,112,112,101,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,117,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,116,101,120,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,116,121,112,101,80,97,114,97,109,101,116,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,117,110,105,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,118,97,114,105,97,98,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,108,97,115,116,80,105,110,110,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,97,99,107], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,117,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,97,99,107], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,117,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,67,121,97,110], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,71,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,77,97,103,101,110,116,97], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,82,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,87,104,105,116,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,89,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,67,121,97,110], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,71,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,77,97,103,101,110,116,97], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,82,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,87,104,105,116,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,89,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,100,101,102,97,117,108,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,115,117,99,99,101,115,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,69,114,114,111,114,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,70,97,105,108,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,80,97,115,115,101,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,81,117,101,117,101,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,83,107,105,112,112,101,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,85,110,115,101,116], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,114,117,110,65,99,116,105,111,110], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,67,111,100,101,66,108,111,99,107,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,80,114,101,102,111,114,109,97,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,83,101,112,97,114,97,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,97,108,107,84,104,114,111,117,103,104,46,101,109,98,101,100,100,101,100,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,83,104,97,100,111,119], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,105,100,103,101,116,46,115,104,97,100,111,119], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516584766(result_2516586064.tokenColors, [99,111,109,109,101,110,116], {foreground: some_2516583251(parseHexVar_2516582448([55,50,55,48,55,50])), fontStyle: nimCopy(null, ConstSet295, NTI2516582423), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false})});

  return result_2516586064;

}

function setTheme_1291851004(self_1291851005, path_1291851006) {
      var Temporary1;

      var oHEX60gensym57_1291851009 = loadFromFile_2516586059(path_1291851006);
      if (!isSome_1291851014(oHEX60gensym57_1291851009)) Temporary1 = false; else {        var theme_1291851060 = get_1291851034(oHEX60gensym57_1291851009);
        Temporary1 = true;      }    if (Temporary1) {
    self_1291851005.theme = theme_1291851060;
    }
    
    requestRender_2768240746(self_1291851005.platform, false);

  
}

function symbolName_1291854223(a_1291854225) {
  var result_1291854226 = [];

    result_1291854226 = nimCopy(null, names_1291854228[chckIndx(subInt(a_1291854225, 0), 0, (names_1291854228).length - 1)], NTI33554449);

  return result_1291854226;

}

function toJson_1291854207(a_1291854209, opt_1291854210) {
    var Temporary1;

  var result_1291854211 = null;

    switch (opt_1291854210.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854209);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854223(a_1291854209), opt_1291854210);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854209, NTI2449473554), opt_1291854210);
      break;
    }
    result_1291854211 = Temporary1;

  return result_1291854211;

}

function none_1291854116() {
  var result_1291854122 = ({val: null});

  return result_1291854122;

}

function some_1291854123(val_1291854125) {
  var result_1291854126 = ({val: null});

    if (!(!((val_1291854125 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291854126.val = val_1291854125;

  return result_1291854126;

}

function getEditor_1291854107() {
  var result_1291854112 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291854112 = nimCopy(result_1291854112, none_1291854116(), NTI1291850607);
    break BeforeRet;
    }
    
    result_1291854112 = nimCopy(result_1291854112, some_1291854123(gEditor), NTI1291850607);
    break BeforeRet;
  };

  return result_1291854112;

}

function isNone_1291854160(self_1291854162) {
  var result_1291854163 = false;

    result_1291854163 = (self_1291854162.val == null);

  return result_1291854163;

}

function get_1291854180(self_1291854182) {
  var result_1291854183 = null;

    if (isNone_1291854160(self_1291854182)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291854183 = self_1291854182["val"];

  return result_1291854183;

}

function getBackendScript_1291854146_1291854153() {
  var result_1291854154 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym145_1291854155 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym145_1291854155)) {
      break BeforeRet;
      }
      
    };
    result_1291854154 = getBackend_1291854150(get_1291854180(rHEX60gensym145_1291854155));
  };

  return result_1291854154;

}

function getBackendApi_1291854205(HEX3Atmp_1291854148) {
  var result_1291854206 = null;

  BeforeRet: {
    result_1291854206 = newJNull_1627390049();
    result_1291854206 = toJson_1291854207(getBackendScript_1291854146_1291854153(), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291854206;

}

function saveAppStateScript_1291854306_1291855114() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym155_1291855115 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym155_1291855115)) {
      break BeforeRet;
      }
      
    };
    saveAppState_1291853872(get_1291854180(rHEX60gensym155_1291855115));
  };

  
}

function saveAppStateApi_1291855141(HEX3Atmp_1291854308) {
  var result_1291855142 = null;

    result_1291855142 = newJNull_1627390049();
    saveAppStateScript_1291854306_1291855114();

  return result_1291855142;

}

function requestRenderScript_1291855196_1291855203(redrawEverything_1291855204) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym170_1291855205 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym170_1291855205)) {
      break BeforeRet;
      }
      
    };
    requestRender_1291855200(get_1291854180(rHEX60gensym170_1291855205), redrawEverything_1291855204);
  };

  
}

function initFromJson_1627395343(dst_1627395344, dst_1627395344_Idx, jsonNode_1627395345, jsonPath_1627395346, jsonPath_1627395346_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395345, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395346[jsonPath_1627395346_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet296[jsonNode_1627395345.kind] != undefined))) {
    var msgHEX60gensym103_1627395516 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet297), nimCopy(null, jsonPath_1627395346[jsonPath_1627395346_Idx], NTI33554449), reprEnum(jsonNode_1627395345.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym103_1627395516, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1627395345;
    if (ConstSet298[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_1627395344[dst_1627395344_Idx] = Temporary1.bval;

  
}

function to_2818585071(node_2818585074) {
  var result_2818585076 = [false];

    var jsonPath_2818585077 = [[]];
    result_2818585076[0] = false;
    initFromJson_1627395343(result_2818585076, 0, node_2818585074, jsonPath_2818585077, 0);

  return result_2818585076[0];

}

function fromJson_2818585060(a_2818585062, a_2818585062_Idx, b_2818585063, opt_2818585064) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818585063, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [98,111,111,108], Field1: b_2818585063}));
    }
    
    a_2818585062[a_2818585062_Idx] = to_2818585071(b_2818585063);

  
}

function jsonTo_2818585054(b_2818585056, opt_2818585058) {
  var result_2818585059 = [false];

    fromJson_2818585060(result_2818585059, 0, b_2818585056, opt_2818585058);

  return result_2818585059[0];

}

function requestRenderApi_1291855232(HEX3Atmp_1291855198) {
      var Temporary2;

  var result_1291855233 = null;

    result_1291855233 = newJNull_1627390049();
    Label1: {
      if ((0 < len_1627392983(HEX3Atmp_1291855198))) {
      Temporary2 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291855198, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary2 = false;
      }
      
    };
    requestRenderScript_1291855196_1291855203(Temporary2);

  return result_1291855233;

}

function setHandleInputsScript_1291855241_1291855249(context_1291855250, value_1291855251) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym180_1291855252 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym180_1291855252)) {
      break BeforeRet;
      }
      
    };
    setHandleInputs_1291855245(get_1291854180(rHEX60gensym180_1291855252), context_1291855250, value_1291855251);
  };

  
}

function initFromJson_1627395339(dst_1627395340, dst_1627395340_Idx, jsonNode_1627395341, jsonPath_1627395342, jsonPath_1627395342_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395341, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395342[jsonPath_1627395342_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet299[jsonNode_1627395341.kind] != undefined))) {
    var msgHEX60gensym99_1627395476 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet300), nimCopy(null, jsonPath_1627395342[jsonPath_1627395342_Idx], NTI33554449), reprEnum(jsonNode_1627395341.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym99_1627395476, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1627395341.kind == 0)) {
    dst_1627395340[dst_1627395340_Idx] = nimCopy(null, [], NTI33554449);
    }
    else {
      var Temporary1 = jsonNode_1627395341;
      if (ConstSet301[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      dst_1627395340[dst_1627395340_Idx] = nimCopy(null, Temporary1.str, NTI33554449);
    }
    

  
}

function to_1811939905(node_1811939908) {
  var result_1811939910 = [[]];

    var jsonPath_1811939911 = [[]];
    result_1811939910[0] = nimCopy(null, [], NTI33554449);
    initFromJson_1627395339(result_1811939910, 0, node_1811939908, jsonPath_1811939911, 0);

  return result_1811939910[0];

}

function fromJson_1811939890(a_1811939892, a_1811939892_Idx, b_1811939893, opt_1811939894) {
    if (!(!(HEX3DHEX3D_1627392026(b_1811939893, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,116,114,105,110,103], Field1: b_1811939893}));
    }
    
    a_1811939892[a_1811939892_Idx] = nimCopy(null, to_1811939905(b_1811939893), NTI33554449);

  
}

function jsonTo_1811939884(b_1811939886, opt_1811939888) {
  var result_1811939889 = [[]];

    fromJson_1811939890(result_1811939889, 0, b_1811939886, opt_1811939888);

  return result_1811939889[0];

}

function setHandleInputsApi_1291855280(HEX3Atmp_1291855243) {
  var result_1291855281 = null;

    result_1291855281 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setHandleInputsScript_1291855241_1291855249(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855243, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291855243, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291855281;

}

function setHandleActionsScript_1291855294_1291855302(context_1291855303, value_1291855304) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym189_1291855305 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym189_1291855305)) {
      break BeforeRet;
      }
      
    };
    setHandleActions_1291855298(get_1291854180(rHEX60gensym189_1291855305), context_1291855303, value_1291855304);
  };

  
}

function setHandleActionsApi_1291855333(HEX3Atmp_1291855296) {
  var result_1291855334 = null;

    result_1291855334 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setHandleActionsScript_1291855294_1291855302(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855296, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291855296, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291855334;

}

function setConsumeAllActionsScript_1291855347_1291855355(context_1291855356, value_1291855357) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym198_1291855358 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym198_1291855358)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllActions_1291855351(get_1291854180(rHEX60gensym198_1291855358), context_1291855356, value_1291855357);
  };

  
}

function setConsumeAllActionsApi_1291855386(HEX3Atmp_1291855349) {
  var result_1291855387 = null;

    result_1291855387 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setConsumeAllActionsScript_1291855347_1291855355(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855349, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291855349, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291855387;

}

function setConsumeAllInputScript_1291855400_1291855408(context_1291855409, value_1291855410) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym207_1291855411 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym207_1291855411)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllInput_1291855404(get_1291854180(rHEX60gensym207_1291855411), context_1291855409, value_1291855410);
  };

  
}

function setConsumeAllInputApi_1291855439(HEX3Atmp_1291855402) {
  var result_1291855440 = null;

    result_1291855440 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setConsumeAllInputScript_1291855400_1291855408(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855402, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291855402, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291855440;

}

function clearWorkspaceCachesScript_1291855530_1291855540() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym219_1291855541 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym219_1291855541)) {
      break BeforeRet;
      }
      
    };
    clearWorkspaceCaches_1291855534(get_1291854180(rHEX60gensym219_1291855541));
  };

  
}

function clearWorkspaceCachesApi_1291855567(HEX3Atmp_1291855532) {
  var result_1291855568 = null;

    result_1291855568 = newJNull_1627390049();
    clearWorkspaceCachesScript_1291855530_1291855540();

  return result_1291855568;

}

function openGithubWorkspaceScript_1291855575_1291855584(user_1291855585, repository_1291855586, branchOrHash_1291855587) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym229_1291855588 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym229_1291855588)) {
      break BeforeRet;
      }
      
    };
    openGithubWorkspace_1291855579(get_1291854180(rHEX60gensym229_1291855588), user_1291855585, repository_1291855586, branchOrHash_1291855587);
  };

  
}

function openGithubWorkspaceApi_1291855617(HEX3Atmp_1291855577) {
  var result_1291855618 = null;

    result_1291855618 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
    };
    openGithubWorkspaceScript_1291855575_1291855584(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855577, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855577, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855577, 2), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291855618;

}

function openAbsytreeServerWorkspaceScript_1291855640_1291855647(url_1291855648) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym237_1291855649 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym237_1291855649)) {
      break BeforeRet;
      }
      
    };
    openAbsytreeServerWorkspace_1291855644(get_1291854180(rHEX60gensym237_1291855649), url_1291855648);
  };

  
}

function openAbsytreeServerWorkspaceApi_1291855676(HEX3Atmp_1291855642) {
  var result_1291855677 = null;

    result_1291855677 = newJNull_1627390049();
    Label1: {
    };
    openAbsytreeServerWorkspaceScript_1291855640_1291855647(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855642, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291855677;

}

function getFlagScript2_1291855685_1291855703(flag_1291855704, default_1291855705) {
  var result_1291855706 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym246_1291855707 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym246_1291855707)) {
      break BeforeRet;
      }
      
    };
    result_1291855706 = getFlag_1291848874(get_1291854180(rHEX60gensym246_1291855707), flag_1291855704, default_1291855705);
  };

  return result_1291855706;

}

function getFlagApi2_1291855736(HEX3Atmp_1291855687) {
      var Temporary3;

  var result_1291855737 = null;

  BeforeRet: {
    result_1291855737 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_1291855687))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291855687, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    result_1291855737 = toJson_2818588828(getFlagScript2_1291855685_1291855703(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855687, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291855737;

}

function setFlagScript2_1291855754_1291855817(flag_1291855818, value_1291855819) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym257_1291855820 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym257_1291855820)) {
      break BeforeRet;
      }
      
    };
    setFlag_1291848951(get_1291854180(rHEX60gensym257_1291855820), flag_1291855818, value_1291855819);
  };

  
}

function setFlagApi2_1291855848(HEX3Atmp_1291855756) {
  var result_1291855849 = null;

    result_1291855849 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setFlagScript2_1291855754_1291855817(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855756, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291855756, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291855849;

}

function toggleFlagScript_1291855868_1291855875(flag_1291855876) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym270_1291855877 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym270_1291855877)) {
      break BeforeRet;
      }
      
    };
    toggleFlag_1291848955(get_1291854180(rHEX60gensym270_1291855877), flag_1291855876);
  };

  
}

function toggleFlagApi_1291855904(HEX3Atmp_1291855870) {
  var result_1291855905 = null;

    result_1291855905 = newJNull_1627390049();
    Label1: {
    };
    toggleFlagScript_1291855868_1291855875(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855870, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291855905;

}

function setOptionScript_1291855913_1291855960(option_1291855961, value_1291855962) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym279_1291855963 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym279_1291855963)) {
      break BeforeRet;
      }
      
    };
    setOption_1291855917(get_1291854180(rHEX60gensym279_1291855963), option_1291855961, value_1291855962);
  };

  
}

function setOptionApi_1291855991(HEX3Atmp_1291855915) {
  var result_1291855992 = null;

    result_1291855992 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setOptionScript_1291855913_1291855960(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855915, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_1291855915, 1));

  return result_1291855992;

}

function quitScript_1291856005_1291856011() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym291_1291856012 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym291_1291856012)) {
      break BeforeRet;
      }
      
    };
    quit_1291856009(get_1291854180(rHEX60gensym291_1291856012));
  };

  
}

function quitApi_1291856038(HEX3Atmp_1291856007) {
  var result_1291856039 = null;

    result_1291856039 = newJNull_1627390049();
    quitScript_1291856005_1291856011();

  return result_1291856039;

}

function changeFontSizeScript_1291856042_1291856049(amount_1291856050) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym299_1291856051 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym299_1291856051)) {
      break BeforeRet;
      }
      
    };
    changeFontSize_1291856046(get_1291854180(rHEX60gensym299_1291856051), amount_1291856050);
  };

  
}

function initFromJson_2818586384(dst_2818586386, dst_2818586386_Idx, jsonNode_2818586387, jsonPath_2818586388, jsonPath_2818586388_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_2818586387.kind == 4)) {
    var Temporary1 = jsonNode_2818586387;
    if (ConstSet302[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_2818586393 = NaN;
      dst_2818586386[dst_2818586386_Idx] = b_2818586393;
      break;
    case "inf":
      var b_2818586394 = Infinity;
      dst_2818586386[dst_2818586386_Idx] = b_2818586394;
      break;
    case "-inf":
      var b_2818586395 = -Infinity;
      dst_2818586386[dst_2818586386_Idx] = b_2818586395;
      break;
    default: 
      var Temporary2 = jsonNode_2818586387;
      if (ConstSet303[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_2818586387, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818586388[jsonPath_2818586388_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet304[jsonNode_2818586387.kind] != undefined))) {
      var msgHEX60gensym382_2818586409 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet305), nimCopy(null, jsonPath_2818586388[jsonPath_2818586388_Idx], NTI33554449), reprEnum(jsonNode_2818586387.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym382_2818586409, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_2818586387.kind == 3)) {
      var Temporary3 = jsonNode_2818586387;
      if (ConstSet306[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_2818586386[dst_2818586386_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_2818586387;
        if (ConstSet307[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_2818586386[dst_2818586386_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_2818586373(node_2818586376) {
  var result_2818586378 = [0.0];

    var jsonPath_2818586379 = [[]];
    result_2818586378[0] = 0.0;
    initFromJson_2818586384(result_2818586378, 0, node_2818586376, jsonPath_2818586379, 0);

  return result_2818586378[0];

}

function fromJson_2818586358(a_2818586360, a_2818586360_Idx, b_2818586361, opt_2818586362) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818586361, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116,51,50], Field1: b_2818586361}));
    }
    
    a_2818586360[a_2818586360_Idx] = to_2818586373(b_2818586361);

  
}

function jsonTo_2818586352(b_2818586354, opt_2818586356) {
  var result_2818586357 = [0.0];

    fromJson_2818586358(result_2818586357, 0, b_2818586354, opt_2818586356);

  return result_2818586357[0];

}

function changeFontSizeApi_1291856078(HEX3Atmp_1291856044) {
  var result_1291856079 = null;

    result_1291856079 = newJNull_1627390049();
    Label1: {
    };
    changeFontSizeScript_1291856042_1291856049(jsonTo_2818586352(HEX5BHEX5D_1627393116(HEX3Atmp_1291856044, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291856079;

}

function changeLayoutPropScript_1291856087_1291856344(prop_1291856345, change_1291856346) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym308_1291856347 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym308_1291856347)) {
      break BeforeRet;
      }
      
    };
    changeLayoutProp_1291856091(get_1291854180(rHEX60gensym308_1291856347), prop_1291856345, change_1291856346);
  };

  
}

function changeLayoutPropApi_1291856375(HEX3Atmp_1291856089) {
  var result_1291856376 = null;

    result_1291856376 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    changeLayoutPropScript_1291856087_1291856344(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856089, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586352(HEX5BHEX5D_1627393116(HEX3Atmp_1291856089, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291856376;

}

function toggleStatusBarLocationScript_1291856396_1291856402() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym321_1291856403 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym321_1291856403)) {
      break BeforeRet;
      }
      
    };
    toggleStatusBarLocation_1291856400(get_1291854180(rHEX60gensym321_1291856403));
  };

  
}

function toggleStatusBarLocationApi_1291856429(HEX3Atmp_1291856398) {
  var result_1291856430 = null;

    result_1291856430 = newJNull_1627390049();
    toggleStatusBarLocationScript_1291856396_1291856402();

  return result_1291856430;

}

function createViewScript_1291856433_1291856444() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym328_1291856445 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym328_1291856445)) {
      break BeforeRet;
      }
      
    };
    createView_1291856437(get_1291854180(rHEX60gensym328_1291856445));
  };

  
}

function createViewApi_1291856471(HEX3Atmp_1291856435) {
  var result_1291856472 = null;

    result_1291856472 = newJNull_1627390049();
    createViewScript_1291856433_1291856444();

  return result_1291856472;

}

function closeCurrentViewScript_1291856480_1291856516() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym335_1291856517 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym335_1291856517)) {
      break BeforeRet;
      }
      
    };
    closeCurrentView_1291856484(get_1291854180(rHEX60gensym335_1291856517));
  };

  
}

function closeCurrentViewApi_1291856543(HEX3Atmp_1291856482) {
  var result_1291856544 = null;

    result_1291856544 = newJNull_1627390049();
    closeCurrentViewScript_1291856480_1291856516();

  return result_1291856544;

}

function moveCurrentViewToTopScript_1291856552_1291856594() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym344_1291856595 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym344_1291856595)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewToTop_1291856556(get_1291854180(rHEX60gensym344_1291856595));
  };

  
}

function moveCurrentViewToTopApi_1291856621(HEX3Atmp_1291856554) {
  var result_1291856622 = null;

    result_1291856622 = newJNull_1627390049();
    moveCurrentViewToTopScript_1291856552_1291856594();

  return result_1291856622;

}

function nextViewScript_1291856626_1291856638() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym354_1291856639 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym354_1291856639)) {
      break BeforeRet;
      }
      
    };
    nextView_1291856630(get_1291854180(rHEX60gensym354_1291856639));
  };

  
}

function nextViewApi_1291856665(HEX3Atmp_1291856628) {
  var result_1291856666 = null;

    result_1291856666 = newJNull_1627390049();
    nextViewScript_1291856626_1291856638();

  return result_1291856666;

}

function prevViewScript_1291856669_1291856684() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym361_1291856685 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym361_1291856685)) {
      break BeforeRet;
      }
      
    };
    prevView_1291856673(get_1291854180(rHEX60gensym361_1291856685));
  };

  
}

function prevViewApi_1291856711(HEX3Atmp_1291856671) {
  var result_1291856712 = null;

    result_1291856712 = newJNull_1627390049();
    prevViewScript_1291856669_1291856684();

  return result_1291856712;

}

function moveCurrentViewPrevScript_1291856715_1291856744() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym368_1291856745 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym368_1291856745)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewPrev_1291856719(get_1291854180(rHEX60gensym368_1291856745));
  };

  
}

function moveCurrentViewPrevApi_1291856771(HEX3Atmp_1291856717) {
  var result_1291856772 = null;

    result_1291856772 = newJNull_1627390049();
    moveCurrentViewPrevScript_1291856715_1291856744();

  return result_1291856772;

}

function moveCurrentViewNextScript_1291856775_1291856801() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym376_1291856802 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym376_1291856802)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewNext_1291856779(get_1291854180(rHEX60gensym376_1291856802));
  };

  
}

function moveCurrentViewNextApi_1291856828(HEX3Atmp_1291856777) {
  var result_1291856829 = null;

    result_1291856829 = newJNull_1627390049();
    moveCurrentViewNextScript_1291856775_1291856801();

  return result_1291856829;

}

function setLayoutScript_1291856832_1291856875(layout_1291856876) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym385_1291856877 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym385_1291856877)) {
      break BeforeRet;
      }
      
    };
    setLayout_1291856836(get_1291854180(rHEX60gensym385_1291856877), layout_1291856876);
  };

  
}

function setLayoutApi_1291856904(HEX3Atmp_1291856834) {
  var result_1291856905 = null;

    result_1291856905 = newJNull_1627390049();
    Label1: {
    };
    setLayoutScript_1291856832_1291856875(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856834, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291856905;

}

function commandLineScript_1291856913_1291856924(initialValue_1291856925) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym393_1291856926 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym393_1291856926)) {
      break BeforeRet;
      }
      
    };
    commandLine_1291856917(get_1291854180(rHEX60gensym393_1291856926), initialValue_1291856925);
  };

  
}

function commandLineApi_1291856953(HEX3Atmp_1291856915) {
      var Temporary2;

  var result_1291856954 = null;

    result_1291856954 = newJNull_1627390049();
    Label1: {
      if ((0 < len_1627392983(HEX3Atmp_1291856915))) {
      Temporary2 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856915, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary2 = [];
      }
      
    };
    commandLineScript_1291856913_1291856924(Temporary2);

  return result_1291856954;

}

function exitCommandLineScript_1291856962_1291856972() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym401_1291856973 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym401_1291856973)) {
      break BeforeRet;
      }
      
    };
    exitCommandLine_1291856966(get_1291854180(rHEX60gensym401_1291856973));
  };

  
}

function exitCommandLineApi_1291856999(HEX3Atmp_1291856964) {
  var result_1291857000 = null;

    result_1291857000 = newJNull_1627390049();
    exitCommandLineScript_1291856962_1291856972();

  return result_1291857000;

}

function executeCommandLineScript_1291857003_1291857034() {
  var result_1291857035 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym408_1291857036 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym408_1291857036)) {
      break BeforeRet;
      }
      
    };
    result_1291857035 = executeCommandLine_1291857007(get_1291854180(rHEX60gensym408_1291857036));
  };

  return result_1291857035;

}

function executeCommandLineApi_1291857063(HEX3Atmp_1291857005) {
  var result_1291857064 = null;

  BeforeRet: {
    result_1291857064 = newJNull_1627390049();
    result_1291857064 = toJson_2818588828(executeCommandLineScript_1291857003_1291857034(), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291857064;

}

function writeFileScript_1291857104_1291857124(path_1291857125, app_1291857126) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym424_1291857127 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym424_1291857127)) {
      break BeforeRet;
      }
      
    };
    writeFile_1291857108(get_1291854180(rHEX60gensym424_1291857127), path_1291857125, app_1291857126);
  };

  
}

function writeFileApi_1291857155(HEX3Atmp_1291857106) {
      var Temporary2;
      var Temporary4;

  var result_1291857156 = null;

    result_1291857156 = newJNull_1627390049();
    Label1: {
      if ((0 < len_1627392983(HEX3Atmp_1291857106))) {
      Temporary2 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857106, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary2 = [];
      }
      
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291857106))) {
      Temporary4 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291857106, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    writeFileScript_1291857104_1291857124(Temporary2, Temporary4);

  return result_1291857156;

}

function loadFileScript_1291857169_1291857188(path_1291857189) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym437_1291857190 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym437_1291857190)) {
      break BeforeRet;
      }
      
    };
    loadFile_1291857173(get_1291854180(rHEX60gensym437_1291857190), path_1291857189);
  };

  
}

function loadFileApi_1291857217(HEX3Atmp_1291857171) {
      var Temporary2;

  var result_1291857218 = null;

    result_1291857218 = newJNull_1627390049();
    Label1: {
      if ((0 < len_1627392983(HEX3Atmp_1291857171))) {
      Temporary2 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857171, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary2 = [];
      }
      
    };
    loadFileScript_1291857169_1291857188(Temporary2);

  return result_1291857218;

}

function openFileScript_1291857245_1291857304(path_1291857305, app_1291857306) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym453_1291857307 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym453_1291857307)) {
      break BeforeRet;
      }
      
    };
    openFile_1291857249(get_1291854180(rHEX60gensym453_1291857307), path_1291857305, app_1291857306);
  };

  
}

function openFileApi_1291857335(HEX3Atmp_1291857247) {
      var Temporary3;

  var result_1291857336 = null;

    result_1291857336 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_1291857247))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291857247, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    openFileScript_1291857245_1291857304(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857247, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_1291857336;

}

function removeFromLocalStorageScript_1291857454_1291857476() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym464_1291857477 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym464_1291857477)) {
      break BeforeRet;
      }
      
    };
    removeFromLocalStorage_1291857458(get_1291854180(rHEX60gensym464_1291857477));
  };

  
}

function removeFromLocalStorageApi_1291857503(HEX3Atmp_1291857456) {
  var result_1291857504 = null;

    result_1291857504 = newJNull_1627390049();
    removeFromLocalStorageScript_1291857454_1291857476();

  return result_1291857504;

}

function loadThemeScript_1291857507_1291857550(name_1291857551) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym474_1291857552 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym474_1291857552)) {
      break BeforeRet;
      }
      
    };
    loadTheme_1291857511(get_1291854180(rHEX60gensym474_1291857552), name_1291857551);
  };

  
}

function loadThemeApi_1291857579(HEX3Atmp_1291857509) {
  var result_1291857580 = null;

    result_1291857580 = newJNull_1627390049();
    Label1: {
    };
    loadThemeScript_1291857507_1291857550(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857509, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291857580;

}

function chooseThemeScript_1291857588_1291857751() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym484_1291857752 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym484_1291857752)) {
      break BeforeRet;
      }
      
    };
    chooseTheme_1291857592(get_1291854180(rHEX60gensym484_1291857752));
  };

  
}

function chooseThemeApi_1291857778(HEX3Atmp_1291857590) {
  var result_1291857779 = null;

    result_1291857779 = newJNull_1627390049();
    chooseThemeScript_1291857588_1291857751();

  return result_1291857779;

}

function chooseFileScript_1291858047_1291858225(view_1291858226) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym507_1291858227 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym507_1291858227)) {
      break BeforeRet;
      }
      
    };
    chooseFile_1291858051(get_1291854180(rHEX60gensym507_1291858227), view_1291858226);
  };

  
}

function chooseFileApi_1291858254(HEX3Atmp_1291858049) {
      var Temporary2;

  var result_1291858255 = null;

    result_1291858255 = newJNull_1627390049();
    Label1: {
      if ((0 < len_1627392983(HEX3Atmp_1291858049))) {
      Temporary2 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858049, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary2 = [110,101,119];
      }
      
    };
    chooseFileScript_1291858047_1291858225(Temporary2);

  return result_1291858255;

}

function setGithubAccessTokenScript_1291858288_1291858295(token_1291858296) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym523_1291858297 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym523_1291858297)) {
      break BeforeRet;
      }
      
    };
    setGithubAccessToken_1291858292(get_1291854180(rHEX60gensym523_1291858297), token_1291858296);
  };

  
}

function setGithubAccessTokenApi_1291858324(HEX3Atmp_1291858290) {
  var result_1291858325 = null;

    result_1291858325 = newJNull_1627390049();
    Label1: {
    };
    setGithubAccessTokenScript_1291858288_1291858295(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858290, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291858325;

}

function reloadConfigScript_1291858333_1291858352() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym530_1291858353 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym530_1291858353)) {
      break BeforeRet;
      }
      
    };
    reloadConfig_1291858337(get_1291854180(rHEX60gensym530_1291858353));
  };

  
}

function reloadConfigApi_1291858379(HEX3Atmp_1291858335) {
  var result_1291858380 = null;

    result_1291858380 = newJNull_1627390049();
    reloadConfigScript_1291858333_1291858352();

  return result_1291858380;

}

function logOptionsScript_1291858383_1291858389() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym539_1291858390 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym539_1291858390)) {
      break BeforeRet;
      }
      
    };
    logOptions_1291858387(get_1291854180(rHEX60gensym539_1291858390));
  };

  
}

function logOptionsApi_1291858416(HEX3Atmp_1291858385) {
  var result_1291858417 = null;

    result_1291858417 = newJNull_1627390049();
    logOptionsScript_1291858383_1291858389();

  return result_1291858417;

}

function clearCommandsScript_1291858420_1291858427(context_1291858428) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym547_1291858429 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym547_1291858429)) {
      break BeforeRet;
      }
      
    };
    clearCommands_1291858424(get_1291854180(rHEX60gensym547_1291858429), context_1291858428);
  };

  
}

function clearCommandsApi_1291858456(HEX3Atmp_1291858422) {
  var result_1291858457 = null;

    result_1291858457 = newJNull_1627390049();
    Label1: {
    };
    clearCommandsScript_1291858420_1291858427(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858422, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291858457;

}

function toJson_2818585130(a_2818585132, opt_2818585133) {
  var result_2818585134 = null;

    result_2818585134 = HEX25_1627391779(a_2818585132);

  return result_2818585134;

}

function toJson_1291858732(a_1291858734, opt_1291858735) {
  var result_1291858736 = null;

    result_1291858736 = newJArray_1627390082();
    Label1: {
      var ai_1291858743 = 0;
      var i_536871157 = 0;
      var L_536871158 = (a_1291858734).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871157 < L_536871158)) break Label3;
            ai_1291858743 = a_1291858734[chckIndx(i_536871157, 0, (a_1291858734).length - 1)];
            add_1627390190(result_1291858736, toJson_2818585130(ai_1291858743, opt_1291858735));
            i_536871157 = addInt(i_536871157, 1);
            if (!(((a_1291858734).length == L_536871158))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291858736;

}

function getAllEditorsScript_1291858469_1291858701() {
  var result_1291858702 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym554_1291858703 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym554_1291858703)) {
      break BeforeRet;
      }
      
    };
    result_1291858702 = nimCopy(null, getAllEditors_1291858473(get_1291854180(rHEX60gensym554_1291858703)), NTI1291854034);
  };

  return result_1291858702;

}

function getAllEditorsApi_1291858730(HEX3Atmp_1291858471) {
  var result_1291858731 = null;

  BeforeRet: {
    result_1291858731 = newJNull_1627390049();
    result_1291858731 = toJson_1291858732(getAllEditorsScript_1291858469_1291858701(), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291858731;

}

function setModeScript222_1291858765_1291858804(mode_1291858805) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym565_1291858806 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym565_1291858806)) {
      break BeforeRet;
      }
      
    };
    setMode_1291858769(get_1291854180(rHEX60gensym565_1291858806), mode_1291858805);
  };

  
}

function setModeApi222_1291858833(HEX3Atmp_1291858767) {
  var result_1291858834 = null;

    result_1291858834 = newJNull_1627390049();
    Label1: {
    };
    setModeScript222_1291858765_1291858804(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858767, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291858834;

}

function modeScript222_1291858843_1291858850() {
  var result_1291858851 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym575_1291858852 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym575_1291858852)) {
      break BeforeRet;
      }
      
    };
    result_1291858851 = nimCopy(null, mode_1291858847(get_1291854180(rHEX60gensym575_1291858852)), NTI33554449);
  };

  return result_1291858851;

}

function modeApi222_1291858879(HEX3Atmp_1291858845) {
  var result_1291858880 = null;

  BeforeRet: {
    result_1291858880 = newJNull_1627390049();
    result_1291858880 = toJson_1811939932(modeScript222_1291858843_1291858850(), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291858880;

}

function getContextWithModeScript222_1291858887_1291858895(context_1291858896) {
  var result_1291858897 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym584_1291858898 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym584_1291858898)) {
      break BeforeRet;
      }
      
    };
    result_1291858897 = nimCopy(null, getContextWithMode_1291858891(get_1291854180(rHEX60gensym584_1291858898), context_1291858896), NTI33554449);
  };

  return result_1291858897;

}

function getContextWithModeApi222_1291858926(HEX3Atmp_1291858889) {
  var result_1291858927 = null;

  BeforeRet: {
    result_1291858927 = newJNull_1627390049();
    Label1: {
    };
    result_1291858927 = toJson_1811939932(getContextWithModeScript222_1291858887_1291858895(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858889, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291858927;

}

function scriptRunActionScript_1291859166_1291859175(action_1291859176, arg_1291859177) {
    scriptRunAction_1291859169(action_1291859176, arg_1291859177);

  
}

function scriptRunActionApi_1291859182(HEX3Atmp_1291859168) {
  var result_1291859183 = null;

    result_1291859183 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scriptRunActionScript_1291859166_1291859175(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859168, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859168, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291859183;

}

function scriptLogScript_1291859196_1291859206(message_1291859207) {
    scriptLog_1291859199(message_1291859207);

  
}

function scriptLogApi_1291859211(HEX3Atmp_1291859198) {
  var result_1291859212 = null;

    result_1291859212 = newJNull_1627390049();
    Label1: {
    };
    scriptLogScript_1291859196_1291859206(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859198, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291859212;

}

function addCommandScriptScript_1291859220_1291859231(context_1291859232, keys_1291859233, action_1291859234, arg_1291859235) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym617_1291859236 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym617_1291859236)) {
      break BeforeRet;
      }
      
    };
    addCommandScript_1291859224(get_1291854180(rHEX60gensym617_1291859236), context_1291859232, keys_1291859233, action_1291859234, arg_1291859235);
  };

  
}

function addCommandScriptApi_1291859266(HEX3Atmp_1291859222) {
      var Temporary5;

  var result_1291859267 = null;

    result_1291859267 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((3 < len_1627392983(HEX3Atmp_1291859222))) {
      Temporary5 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859222, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = [];
      }
      
    };
    addCommandScriptScript_1291859220_1291859231(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859222, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859222, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859222, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5);

  return result_1291859267;

}

function removeCommandScript_1291859296_1291859304(context_1291859305, keys_1291859306) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym627_1291859307 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym627_1291859307)) {
      break BeforeRet;
      }
      
    };
    removeCommand_1291859300(get_1291854180(rHEX60gensym627_1291859307), context_1291859305, keys_1291859306);
  };

  
}

function removeCommandApi_1291859335(HEX3Atmp_1291859298) {
  var result_1291859336 = null;

    result_1291859336 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    removeCommandScript_1291859296_1291859304(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859298, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859298, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291859336;

}

function getActivePopupScript_1291859351_1291859368() {
  var result_1291859369 = 0;

    result_1291859369 = getActivePopup_1291859354();

  return result_1291859369;

}

function getActivePopupApi_1291859373(HEX3Atmp_1291859353) {
  var result_1291859374 = null;

  BeforeRet: {
    result_1291859374 = newJNull_1627390049();
    result_1291859374 = toJson_2818585130(getActivePopupScript_1291859351_1291859368(), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291859374;

}

function getActiveEditorScript_1291859381_1291859392() {
  var result_1291859393 = 0;

    result_1291859393 = getActiveEditor_1291859384();

  return result_1291859393;

}

function getActiveEditorApi_1291859397(HEX3Atmp_1291859383) {
  var result_1291859398 = null;

  BeforeRet: {
    result_1291859398 = newJNull_1627390049();
    result_1291859398 = toJson_2818585130(getActiveEditorScript_1291859381_1291859392(), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291859398;

}

function loadCurrentConfigScript_1291859448_1291859459() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym656_1291859460 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym656_1291859460)) {
      break BeforeRet;
      }
      
    };
    loadCurrentConfig_1291859452(get_1291854180(rHEX60gensym656_1291859460));
  };

  
}

function loadCurrentConfigApi_1291859486(HEX3Atmp_1291859450) {
  var result_1291859487 = null;

    result_1291859487 = newJNull_1627390049();
    loadCurrentConfigScript_1291859448_1291859459();

  return result_1291859487;

}

function sourceCurrentDocumentScript_1291859490_1291859519() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym663_1291859520 = getEditor_1291854107();
      if (isNone_1291854160(rHEX60gensym663_1291859520)) {
      break BeforeRet;
      }
      
    };
    sourceCurrentDocument_1291859494(get_1291854180(rHEX60gensym663_1291859520));
  };

  
}

function sourceCurrentDocumentApi_1291859546(HEX3Atmp_1291859492) {
  var result_1291859547 = null;

    result_1291859547 = newJNull_1627390049();
    sourceCurrentDocumentScript_1291859490_1291859519();

  return result_1291859547;

}

function getEditorScript_1291859550_1291859562(index_1291859563) {
  var result_1291859564 = 0;

    result_1291859564 = getEditor_1291859553(index_1291859563);

  return result_1291859564;

}

function getEditorApi_1291859569(HEX3Atmp_1291859552) {
  var result_1291859570 = null;

  BeforeRet: {
    result_1291859570 = newJNull_1627390049();
    Label1: {
    };
    result_1291859570 = toJson_2818585130(getEditorScript_1291859550_1291859562(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859552, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291859570;

}

function scriptIsTextEditorScript_1291859582_1291859623(editorId_1291859624) {
  var result_1291859625 = false;

    result_1291859625 = scriptIsTextEditor_1291859585(editorId_1291859624);

  return result_1291859625;

}

function scriptIsTextEditorApi_1291859630(HEX3Atmp_1291859584) {
  var result_1291859631 = null;

  BeforeRet: {
    result_1291859631 = newJNull_1627390049();
    Label1: {
    };
    result_1291859631 = toJson_2818588828(scriptIsTextEditorScript_1291859582_1291859623(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859584, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291859631;

}

function scriptIsAstEditorScript_1291859644_1291859685(editorId_1291859686) {
  var result_1291859687 = false;

    result_1291859687 = scriptIsAstEditor_1291859647(editorId_1291859686);

  return result_1291859687;

}

function scriptIsAstEditorApi_1291859692(HEX3Atmp_1291859646) {
  var result_1291859693 = null;

  BeforeRet: {
    result_1291859693 = newJNull_1627390049();
    Label1: {
    };
    result_1291859693 = toJson_2818588828(scriptIsAstEditorScript_1291859644_1291859685(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859646, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291859693;

}

function scriptIsModelEditorScript_1291859705_1291859746(editorId_1291859747) {
  var result_1291859748 = false;

    result_1291859748 = scriptIsModelEditor_1291859708(editorId_1291859747);

  return result_1291859748;

}

function scriptIsModelEditorApi_1291859753(HEX3Atmp_1291859707) {
  var result_1291859754 = null;

  BeforeRet: {
    result_1291859754 = newJNull_1627390049();
    Label1: {
    };
    result_1291859754 = toJson_2818588828(scriptIsModelEditorScript_1291859705_1291859746(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859707, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291859754;

}

function scriptRunActionForScript_1291859766_1291859832(editorId_1291859833, action_1291859834, arg_1291859835) {
    scriptRunActionFor_1291859769(editorId_1291859833, action_1291859834, arg_1291859835);

  
}

function scriptRunActionForApi_1291859841(HEX3Atmp_1291859768) {
  var result_1291859842 = null;

    result_1291859842 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
    };
    scriptRunActionForScript_1291859766_1291859832(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859768, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859768, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859768, 2), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291859842;

}

function scriptInsertTextIntoScript_1291859860_1291859897(editorId_1291859898, text_1291859899) {
    scriptInsertTextInto_1291859863(editorId_1291859898, text_1291859899);

  
}

function scriptInsertTextIntoApi_1291859904(HEX3Atmp_1291859862) {
  var result_1291859905 = null;

    result_1291859905 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scriptInsertTextIntoScript_1291859860_1291859897(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859862, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859862, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291859905;

}

function toJson_2818585117(a_2818585119, opt_2818585120) {
  var result_2818585121 = null;

    result_2818585121 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818585121, [108,105,110,101], toJson_2818585130(a_2818585119["Field0"], opt_2818585120));
    HEX5BHEX5DHEX3D_1627391903(result_2818585121, [99,111,108,117,109,110], toJson_2818585130(a_2818585119["Field1"], opt_2818585120));

  return result_2818585121;

}

function toJson_2818585104(a_2818585106, opt_2818585107) {
  var result_2818585108 = null;

    result_2818585108 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818585108, [102,105,114,115,116], toJson_2818585117(a_2818585106["Field0"], opt_2818585107));
    HEX5BHEX5DHEX3D_1627391903(result_2818585108, [108,97,115,116], toJson_2818585117(a_2818585106["Field1"], opt_2818585107));

  return result_2818585108;

}

function scriptTextEditorSelectionScript_1291859918_1291859960(editorId_1291859961) {
  var result_1291859962 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291859962 = nimCopy(result_1291859962, scriptTextEditorSelection_1291859921(editorId_1291859961), NTI2449473548);

  return result_1291859962;

}

function scriptTextEditorSelectionApi_1291859967(HEX3Atmp_1291859920) {
  var result_1291859968 = null;

  BeforeRet: {
    result_1291859968 = newJNull_1627390049();
    Label1: {
    };
    result_1291859968 = toJson_2818585104(scriptTextEditorSelectionScript_1291859918_1291859960(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859920, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291859968;

}

function scriptSetTextEditorSelectionScript_1291859984_1291860025(editorId_1291860026, selection_1291860027) {
    scriptSetTextEditorSelection_1291859987(editorId_1291860026, selection_1291860027);

  
}

function fromJson_2818584915(a_2818584917, b_2818584918, opt_2818584919) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584918, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,117,114,115,111,114], Field1: b_2818584918}));
    }
    
    if (!((b_2818584918.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584918.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584945 = 0;
    var numMatchedHEX60gensym25_2818584946 = 0;
    numHEX60gensym25_2818584945 = addInt(numHEX60gensym25_2818584945, 1);
    if (hasKey_1627393154(b_2818584918, [108,105,110,101])) {
    numMatchedHEX60gensym25_2818584946 = addInt(numMatchedHEX60gensym25_2818584946, 1);
    fromJson_2818584054(a_2818584917, "Field0", HEX5BHEX5D_1627393037(b_2818584918, [108,105,110,101]), opt_2818584919);
    }
    else {
    if (opt_2818584919.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,105,110,101], [67,117,114,115,111,114], pretty_1627394477(b_2818584918, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584945 = addInt(numHEX60gensym25_2818584945, 1);
    if (hasKey_1627393154(b_2818584918, [99,111,108,117,109,110])) {
    numMatchedHEX60gensym25_2818584946 = addInt(numMatchedHEX60gensym25_2818584946, 1);
    fromJson_2818584054(a_2818584917, "Field1", HEX5BHEX5D_1627393037(b_2818584918, [99,111,108,117,109,110]), opt_2818584919);
    }
    else {
    if (opt_2818584919.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[99,111,108,117,109,110], [67,117,114,115,111,114], pretty_1627394477(b_2818584918, 2)]));
      }
      
    }
    }
    if ((opt_2818584919.allowExtraKeys && opt_2818584919.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584919.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584945 == numMatchedHEX60gensym25_2818584946))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584945 == numMatchedHEX60gensym25_2818584946);
    }
    else {
    if (opt_2818584919.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584918) == numMatchedHEX60gensym25_2818584946);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584918) == numHEX60gensym25_2818584945) && (numHEX60gensym25_2818584945 == numMatchedHEX60gensym25_2818584946));
    }
    }}
    var okHEX60gensym25_2818585007 = Temporary1;
    if (!(okHEX60gensym25_2818585007)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584918)), HEX24_369098760(numHEX60gensym25_2818584945), [67,117,114,115,111,114], pretty_1627394477(b_2818584918, 2)]));
    }
    

  
}

function fromJson_2818584861(a_2818584863, b_2818584864, opt_2818584865) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584864, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110], Field1: b_2818584864}));
    }
    
    if (!((b_2818584864.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584864.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584891 = 0;
    var numMatchedHEX60gensym25_2818584892 = 0;
    numHEX60gensym25_2818584891 = addInt(numHEX60gensym25_2818584891, 1);
    if (hasKey_1627393154(b_2818584864, [102,105,114,115,116])) {
    numMatchedHEX60gensym25_2818584892 = addInt(numMatchedHEX60gensym25_2818584892, 1);
    fromJson_2818584915(a_2818584863["Field0"], HEX5BHEX5D_1627393037(b_2818584864, [102,105,114,115,116]), opt_2818584865);
    }
    else {
    if (opt_2818584865.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,114,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584864, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584891 = addInt(numHEX60gensym25_2818584891, 1);
    if (hasKey_1627393154(b_2818584864, [108,97,115,116])) {
    numMatchedHEX60gensym25_2818584892 = addInt(numMatchedHEX60gensym25_2818584892, 1);
    fromJson_2818584915(a_2818584863["Field1"], HEX5BHEX5D_1627393037(b_2818584864, [108,97,115,116]), opt_2818584865);
    }
    else {
    if (opt_2818584865.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584864, 2)]));
      }
      
    }
    }
    if ((opt_2818584865.allowExtraKeys && opt_2818584865.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584865.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584891 == numMatchedHEX60gensym25_2818584892))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584891 == numMatchedHEX60gensym25_2818584892);
    }
    else {
    if (opt_2818584865.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584864) == numMatchedHEX60gensym25_2818584892);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584864) == numHEX60gensym25_2818584891) && (numHEX60gensym25_2818584891 == numMatchedHEX60gensym25_2818584892));
    }
    }}
    var okHEX60gensym25_2818585045 = Temporary1;
    if (!(okHEX60gensym25_2818585045)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584864)), HEX24_369098760(numHEX60gensym25_2818584891), [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584864, 2)]));
    }
    

  
}

function jsonTo_2818586005(b_2818586007, opt_2818586009) {
  var result_2818586010 = [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}];

    fromJson_2818584861(result_2818586010[0], b_2818586007, opt_2818586009);

  return result_2818586010[0];

}

function scriptSetTextEditorSelectionApi_1291860032(HEX3Atmp_1291859986) {
  var result_1291860033 = null;

    result_1291860033 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scriptSetTextEditorSelectionScript_1291859984_1291860025(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859986, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586005(HEX5BHEX5D_1627393116(HEX3Atmp_1291859986, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291860033;

}

function toJson_2818585092(a_2818585094, opt_2818585095) {
  var result_2818585096 = null;

    result_2818585096 = newJArray_1627390082();
    Label1: {
      var ai_2818585103 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871193 = 0;
      var L_536871194 = (a_2818585094).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871193 < L_536871194)) break Label3;
            ai_2818585103 = a_2818585094[chckIndx(i_536871193, 0, (a_2818585094).length - 1)];
            add_1627390190(result_2818585096, toJson_2818585104(ai_2818585103, opt_2818585095));
            i_536871193 = addInt(i_536871193, 1);
            if (!(((a_2818585094).length == L_536871194))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818585096;

}

function scriptTextEditorSelectionsScript_1291860046_1291860096(editorId_1291860097) {
  var result_1291860098 = [];

    result_1291860098 = nimCopy(null, scriptTextEditorSelections_1291860049(editorId_1291860097), NTI1291855106);

  return result_1291860098;

}

function scriptTextEditorSelectionsApi_1291860103(HEX3Atmp_1291860048) {
  var result_1291860104 = null;

  BeforeRet: {
    result_1291860104 = newJNull_1627390049();
    Label1: {
    };
    result_1291860104 = toJson_2818585092(scriptTextEditorSelectionsScript_1291860046_1291860096(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860048, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291860104;

}

function scriptSetTextEditorSelectionsScript_1291860116_1291860157(editorId_1291860158, selections_1291860159) {
    scriptSetTextEditorSelections_1291860119(editorId_1291860158, selections_1291860159);

  
}

function getElems_1627390175(n_1627390176, default_1627390181) {
      var Temporary1;

  var result_1627390182 = [];

  BeforeRet: {
    if (((n_1627390176 == null) || !((n_1627390176.kind == 6)))) {
    result_1627390182 = nimCopy(null, default_1627390181, NTI1627390088);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390176;
      if (ConstSet308[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390182 = nimCopy(null, Temporary1.elems, NTI1627389974);
      break BeforeRet;
    }
    
  };

  return result_1627390182;

}

function fromJson_2818584806(a_2818584808, a_2818584808_Idx, b_2818584809, opt_2818584810) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584809, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,83,101,108,101,99,116,105,111,110,93], Field1: b_2818584809}));
    }
    
    if (a_2818584808[a_2818584808_Idx].length < (Temporary1 = chckRange(len_1627392983(b_2818584809), 0, 2147483647), Temporary1)) { for (var i = a_2818584808[a_2818584808_Idx].length ; i < Temporary1 ; ++i) a_2818584808[a_2818584808_Idx].push({Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}); }
               else { a_2818584808[a_2818584808_Idx].length = Temporary1; };
    Label2: {
      var i_2818584859 = 0;
      var val_2818584860 = null;
      var colontmp__536871199 = [];
      colontmp__536871199 = getElems_1627390175(b_2818584809, []);
      var i_536871201 = 0;
      var L_536871202 = (colontmp__536871199).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871201 < L_536871202)) break Label4;
            i_2818584859 = i_536871201;
            val_2818584860 = colontmp__536871199[chckIndx(i_536871201, 0, (colontmp__536871199).length - 1)];
            fromJson_2818584861(a_2818584808[a_2818584808_Idx][chckIndx(i_2818584859, 0, (a_2818584808[a_2818584808_Idx]).length - 1)], val_2818584860, opt_2818584810);
            i_536871201 = addInt(i_536871201, 1);
            if (!(((colontmp__536871199).length == L_536871202))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function jsonTo_2818584800(b_2818584802, opt_2818584804) {
  var result_2818584805 = [[]];

    fromJson_2818584806(result_2818584805, 0, b_2818584802, opt_2818584804);

  return result_2818584805[0];

}

function scriptSetTextEditorSelectionsApi_1291860164(HEX3Atmp_1291860118) {
  var result_1291860165 = null;

    result_1291860165 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scriptSetTextEditorSelectionsScript_1291860116_1291860157(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860118, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584800(HEX5BHEX5D_1627393116(HEX3Atmp_1291860118, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291860165;

}

function scriptGetTextEditorLineScript_1291860178_1291860224(editorId_1291860225, line_1291860226) {
  var result_1291860227 = [];

    result_1291860227 = nimCopy(null, scriptGetTextEditorLine_1291860181(editorId_1291860225, line_1291860226), NTI33554449);

  return result_1291860227;

}

function scriptGetTextEditorLineApi_1291860233(HEX3Atmp_1291860180) {
  var result_1291860234 = null;

  BeforeRet: {
    result_1291860234 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_1291860234 = toJson_1811939932(scriptGetTextEditorLineScript_1291860178_1291860224(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860180, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860180, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291860234;

}

function scriptGetTextEditorLineCountScript_1291860251_1291860296(editorId_1291860297) {
  var result_1291860298 = 0;

    result_1291860298 = scriptGetTextEditorLineCount_1291860254(editorId_1291860297);

  return result_1291860298;

}

function scriptGetTextEditorLineCountApi_1291860303(HEX3Atmp_1291860253) {
  var result_1291860304 = null;

  BeforeRet: {
    result_1291860304 = newJNull_1627390049();
    Label1: {
    };
    result_1291860304 = toJson_2818585130(scriptGetTextEditorLineCountScript_1291860251_1291860296(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860253, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291860304;

}

function scriptGetOptionIntScript_1291860327_1291860342(path_1291860343, default_1291860344) {
  var result_1291860345 = 0;

    result_1291860345 = scriptGetOptionInt_1291860330(path_1291860343, default_1291860344);

  return result_1291860345;

}

function scriptGetOptionIntApi_1291860351(HEX3Atmp_1291860329) {
  var result_1291860352 = null;

  BeforeRet: {
    result_1291860352 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_1291860352 = toJson_2818585130(scriptGetOptionIntScript_1291860327_1291860342(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860329, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860329, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291860352;

}

function scriptGetOptionFloatScript_1291860370_1291860385(path_1291860386, default_1291860387) {
  var result_1291860388 = 0.0;

    result_1291860388 = scriptGetOptionFloat_1291860373(path_1291860386, default_1291860387);

  return result_1291860388;

}

function initFromJson_1291860433(dst_1291860435, dst_1291860435_Idx, jsonNode_1291860436, jsonPath_1291860437, jsonPath_1291860437_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_1291860436.kind == 4)) {
    var Temporary1 = jsonNode_1291860436;
    if (ConstSet309[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_1291860442 = NaN;
      dst_1291860435[dst_1291860435_Idx] = b_1291860442;
      break;
    case "inf":
      var b_1291860443 = Infinity;
      dst_1291860435[dst_1291860435_Idx] = b_1291860443;
      break;
    case "-inf":
      var b_1291860444 = -Infinity;
      dst_1291860435[dst_1291860435_Idx] = b_1291860444;
      break;
    default: 
      var Temporary2 = jsonNode_1291860436;
      if (ConstSet310[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_1291860436, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1291860437[jsonPath_1291860437_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet311[jsonNode_1291860436.kind] != undefined))) {
      var msgHEX60gensym791_1291860458 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet312), nimCopy(null, jsonPath_1291860437[jsonPath_1291860437_Idx], NTI33554449), reprEnum(jsonNode_1291860436.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym791_1291860458, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_1291860436.kind == 3)) {
      var Temporary3 = jsonNode_1291860436;
      if (ConstSet313[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_1291860435[dst_1291860435_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_1291860436;
        if (ConstSet314[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_1291860435[dst_1291860435_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_1291860422(node_1291860425) {
  var result_1291860427 = [0.0];

    var jsonPath_1291860428 = [[]];
    result_1291860427[0] = 0.0;
    initFromJson_1291860433(result_1291860427, 0, node_1291860425, jsonPath_1291860428, 0);

  return result_1291860427[0];

}

function fromJson_1291860407(a_1291860409, a_1291860409_Idx, b_1291860410, opt_1291860411) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291860410, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116], Field1: b_1291860410}));
    }
    
    a_1291860409[a_1291860409_Idx] = to_1291860422(b_1291860410);

  
}

function jsonTo_1291860401(b_1291860403, opt_1291860405) {
  var result_1291860406 = [0.0];

    fromJson_1291860407(result_1291860406, 0, b_1291860403, opt_1291860405);

  return result_1291860406[0];

}

function scriptGetOptionFloatApi_1291860394(HEX3Atmp_1291860372) {
  var result_1291860395 = null;

  BeforeRet: {
    result_1291860395 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_1291860395 = toJson_1291854888(scriptGetOptionFloatScript_1291860370_1291860385(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860372, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860401(HEX5BHEX5D_1627393116(HEX3Atmp_1291860372, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291860395;

}

function scriptGetOptionBoolScript_1291860471_1291860486(path_1291860487, default_1291860488) {
  var result_1291860489 = false;

    result_1291860489 = scriptGetOptionBool_1291860474(path_1291860487, default_1291860488);

  return result_1291860489;

}

function scriptGetOptionBoolApi_1291860495(HEX3Atmp_1291860473) {
  var result_1291860496 = null;

  BeforeRet: {
    result_1291860496 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_1291860496 = toJson_2818588828(scriptGetOptionBoolScript_1291860471_1291860486(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860473, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291860473, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291860496;

}

function scriptGetOptionStringScript_1291860514_1291860529(path_1291860530, default_1291860531) {
  var result_1291860532 = [];

    result_1291860532 = nimCopy(null, scriptGetOptionString_1291860517(path_1291860530, default_1291860531), NTI33554449);

  return result_1291860532;

}

function scriptGetOptionStringApi_1291860538(HEX3Atmp_1291860516) {
  var result_1291860539 = null;

  BeforeRet: {
    result_1291860539 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_1291860539 = toJson_1811939932(scriptGetOptionStringScript_1291860514_1291860529(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860516, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860516, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_1291860539;

}

function scriptSetOptionIntScript_1291860557_1291860605(path_1291860606, value_1291860607) {
    scriptSetOptionInt_1291860560(path_1291860606, value_1291860607);

  
}

function scriptSetOptionIntApi_1291860612(HEX3Atmp_1291860559) {
  var result_1291860613 = null;

    result_1291860613 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scriptSetOptionIntScript_1291860557_1291860605(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860559, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860559, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291860613;

}

function scriptSetOptionFloatScript_1291860632_1291860680(path_1291860681, value_1291860682) {
    scriptSetOptionFloat_1291860635(path_1291860681, value_1291860682);

  
}

function scriptSetOptionFloatApi_1291860687(HEX3Atmp_1291860634) {
  var result_1291860688 = null;

    result_1291860688 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scriptSetOptionFloatScript_1291860632_1291860680(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860634, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860401(HEX5BHEX5D_1627393116(HEX3Atmp_1291860634, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291860688;

}

function scriptSetOptionBoolScript_1291860707_1291860755(path_1291860756, value_1291860757) {
    scriptSetOptionBool_1291860710(path_1291860756, value_1291860757);

  
}

function scriptSetOptionBoolApi_1291860762(HEX3Atmp_1291860709) {
  var result_1291860763 = null;

    result_1291860763 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scriptSetOptionBoolScript_1291860707_1291860755(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860709, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_1291860709, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291860763;

}

function scriptSetOptionStringScript_1291860782_1291860830(path_1291860831, value_1291860832) {
    scriptSetOptionString_1291860785(path_1291860831, value_1291860832);

  
}

function scriptSetOptionStringApi_1291860837(HEX3Atmp_1291860784) {
  var result_1291860838 = null;

    result_1291860838 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scriptSetOptionStringScript_1291860782_1291860830(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860784, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860784, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291860838;

}

function scriptSetCallbackScript_1291860857_1291860912(path_1291860913, id_1291860914) {
    scriptSetCallback_1291860860(path_1291860913, id_1291860914);

  
}

function scriptSetCallbackApi_1291860919(HEX3Atmp_1291860859) {
  var result_1291860920 = null;

    result_1291860920 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scriptSetCallbackScript_1291860857_1291860912(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860859, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860859, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_1291860920;

}

function dispatch_1291860941(command_1291860940, arg_1291860939) {
    var Temporary1;

  var result_1291860943 = ({val: null});

    switch (toJSStr(command_1291860940)) {
    case "getBackend":
    case "get-backend":
      Temporary1 = some_2818593171(getBackendApi_1291854205(arg_1291860939));
      break;
    case "saveAppState":
    case "save-app-state":
      Temporary1 = some_2818593171(saveAppStateApi_1291855141(arg_1291860939));
      break;
    case "requestRender":
    case "request-render":
      Temporary1 = some_2818593171(requestRenderApi_1291855232(arg_1291860939));
      break;
    case "setHandleInputs":
    case "set-handle-inputs":
      Temporary1 = some_2818593171(setHandleInputsApi_1291855280(arg_1291860939));
      break;
    case "setHandleActions":
    case "set-handle-actions":
      Temporary1 = some_2818593171(setHandleActionsApi_1291855333(arg_1291860939));
      break;
    case "setConsumeAllActions":
    case "set-consume-all-actions":
      Temporary1 = some_2818593171(setConsumeAllActionsApi_1291855386(arg_1291860939));
      break;
    case "setConsumeAllInput":
    case "set-consume-all-input":
      Temporary1 = some_2818593171(setConsumeAllInputApi_1291855439(arg_1291860939));
      break;
    case "clearWorkspaceCaches":
    case "clear-workspace-caches":
      Temporary1 = some_2818593171(clearWorkspaceCachesApi_1291855567(arg_1291860939));
      break;
    case "openGithubWorkspace":
    case "open-github-workspace":
      Temporary1 = some_2818593171(openGithubWorkspaceApi_1291855617(arg_1291860939));
      break;
    case "openAbsytreeServerWorkspace":
    case "open-absytree-server-workspace":
      Temporary1 = some_2818593171(openAbsytreeServerWorkspaceApi_1291855676(arg_1291860939));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818593171(getFlagApi2_1291855736(arg_1291860939));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818593171(setFlagApi2_1291855848(arg_1291860939));
      break;
    case "toggleFlag":
    case "toggle-flag":
      Temporary1 = some_2818593171(toggleFlagApi_1291855904(arg_1291860939));
      break;
    case "setOption":
    case "set-option":
      Temporary1 = some_2818593171(setOptionApi_1291855991(arg_1291860939));
      break;
    case "quit":
      Temporary1 = some_2818593171(quitApi_1291856038(arg_1291860939));
      break;
    case "changeFontSize":
    case "change-font-size":
      Temporary1 = some_2818593171(changeFontSizeApi_1291856078(arg_1291860939));
      break;
    case "changeLayoutProp":
    case "change-layout-prop":
      Temporary1 = some_2818593171(changeLayoutPropApi_1291856375(arg_1291860939));
      break;
    case "toggleStatusBarLocation":
    case "toggle-status-bar-location":
      Temporary1 = some_2818593171(toggleStatusBarLocationApi_1291856429(arg_1291860939));
      break;
    case "createView":
    case "create-view":
      Temporary1 = some_2818593171(createViewApi_1291856471(arg_1291860939));
      break;
    case "closeCurrentView":
    case "close-current-view":
      Temporary1 = some_2818593171(closeCurrentViewApi_1291856543(arg_1291860939));
      break;
    case "moveCurrentViewToTop":
    case "move-current-view-to-top":
      Temporary1 = some_2818593171(moveCurrentViewToTopApi_1291856621(arg_1291860939));
      break;
    case "nextView":
    case "next-view":
      Temporary1 = some_2818593171(nextViewApi_1291856665(arg_1291860939));
      break;
    case "prevView":
    case "prev-view":
      Temporary1 = some_2818593171(prevViewApi_1291856711(arg_1291860939));
      break;
    case "moveCurrentViewPrev":
    case "move-current-view-prev":
      Temporary1 = some_2818593171(moveCurrentViewPrevApi_1291856771(arg_1291860939));
      break;
    case "moveCurrentViewNext":
    case "move-current-view-next":
      Temporary1 = some_2818593171(moveCurrentViewNextApi_1291856828(arg_1291860939));
      break;
    case "setLayout":
    case "set-layout":
      Temporary1 = some_2818593171(setLayoutApi_1291856904(arg_1291860939));
      break;
    case "commandLine":
    case "command-line":
      Temporary1 = some_2818593171(commandLineApi_1291856953(arg_1291860939));
      break;
    case "exitCommandLine":
    case "exit-command-line":
      Temporary1 = some_2818593171(exitCommandLineApi_1291856999(arg_1291860939));
      break;
    case "executeCommandLine":
    case "execute-command-line":
      Temporary1 = some_2818593171(executeCommandLineApi_1291857063(arg_1291860939));
      break;
    case "writeFile":
    case "write-file":
      Temporary1 = some_2818593171(writeFileApi_1291857155(arg_1291860939));
      break;
    case "loadFile":
    case "load-file":
      Temporary1 = some_2818593171(loadFileApi_1291857217(arg_1291860939));
      break;
    case "openFile":
    case "open-file":
      Temporary1 = some_2818593171(openFileApi_1291857335(arg_1291860939));
      break;
    case "removeFromLocalStorage":
    case "remove-from-local-storage":
      Temporary1 = some_2818593171(removeFromLocalStorageApi_1291857503(arg_1291860939));
      break;
    case "loadTheme":
    case "load-theme":
      Temporary1 = some_2818593171(loadThemeApi_1291857579(arg_1291860939));
      break;
    case "chooseTheme":
    case "choose-theme":
      Temporary1 = some_2818593171(chooseThemeApi_1291857778(arg_1291860939));
      break;
    case "chooseFile":
    case "choose-file":
      Temporary1 = some_2818593171(chooseFileApi_1291858254(arg_1291860939));
      break;
    case "setGithubAccessToken":
    case "set-github-access-token":
      Temporary1 = some_2818593171(setGithubAccessTokenApi_1291858324(arg_1291860939));
      break;
    case "reloadConfig":
    case "reload-config":
      Temporary1 = some_2818593171(reloadConfigApi_1291858379(arg_1291860939));
      break;
    case "logOptions":
    case "log-options":
      Temporary1 = some_2818593171(logOptionsApi_1291858416(arg_1291860939));
      break;
    case "clearCommands":
    case "clear-commands":
      Temporary1 = some_2818593171(clearCommandsApi_1291858456(arg_1291860939));
      break;
    case "getAllEditors":
    case "get-all-editors":
      Temporary1 = some_2818593171(getAllEditorsApi_1291858730(arg_1291860939));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593171(setModeApi222_1291858833(arg_1291860939));
      break;
    case "mode":
      Temporary1 = some_2818593171(modeApi222_1291858879(arg_1291860939));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593171(getContextWithModeApi222_1291858926(arg_1291860939));
      break;
    case "scriptRunAction":
    case "script-run-action":
      Temporary1 = some_2818593171(scriptRunActionApi_1291859182(arg_1291860939));
      break;
    case "scriptLog":
    case "script-log":
      Temporary1 = some_2818593171(scriptLogApi_1291859211(arg_1291860939));
      break;
    case "addCommandScript":
    case "add-command-script":
      Temporary1 = some_2818593171(addCommandScriptApi_1291859266(arg_1291860939));
      break;
    case "removeCommand":
    case "remove-command":
      Temporary1 = some_2818593171(removeCommandApi_1291859335(arg_1291860939));
      break;
    case "getActivePopup":
    case "get-active-popup":
      Temporary1 = some_2818593171(getActivePopupApi_1291859373(arg_1291860939));
      break;
    case "getActiveEditor":
    case "get-active-editor":
      Temporary1 = some_2818593171(getActiveEditorApi_1291859397(arg_1291860939));
      break;
    case "loadCurrentConfig":
    case "load-current-config":
      Temporary1 = some_2818593171(loadCurrentConfigApi_1291859486(arg_1291860939));
      break;
    case "sourceCurrentDocument":
    case "source-current-document":
      Temporary1 = some_2818593171(sourceCurrentDocumentApi_1291859546(arg_1291860939));
      break;
    case "getEditor":
    case "get-editor":
      Temporary1 = some_2818593171(getEditorApi_1291859569(arg_1291860939));
      break;
    case "scriptIsTextEditor":
    case "script-is-text-editor":
      Temporary1 = some_2818593171(scriptIsTextEditorApi_1291859630(arg_1291860939));
      break;
    case "scriptIsAstEditor":
    case "script-is-ast-editor":
      Temporary1 = some_2818593171(scriptIsAstEditorApi_1291859692(arg_1291860939));
      break;
    case "scriptIsModelEditor":
    case "script-is-model-editor":
      Temporary1 = some_2818593171(scriptIsModelEditorApi_1291859753(arg_1291860939));
      break;
    case "scriptRunActionFor":
    case "script-run-action-for":
      Temporary1 = some_2818593171(scriptRunActionForApi_1291859841(arg_1291860939));
      break;
    case "scriptInsertTextInto":
    case "script-insert-text-into":
      Temporary1 = some_2818593171(scriptInsertTextIntoApi_1291859904(arg_1291860939));
      break;
    case "scriptTextEditorSelection":
    case "script-text-editor-selection":
      Temporary1 = some_2818593171(scriptTextEditorSelectionApi_1291859967(arg_1291860939));
      break;
    case "scriptSetTextEditorSelection":
    case "script-set-text-editor-selection":
      Temporary1 = some_2818593171(scriptSetTextEditorSelectionApi_1291860032(arg_1291860939));
      break;
    case "scriptTextEditorSelections":
    case "script-text-editor-selections":
      Temporary1 = some_2818593171(scriptTextEditorSelectionsApi_1291860103(arg_1291860939));
      break;
    case "scriptSetTextEditorSelections":
    case "script-set-text-editor-selections":
      Temporary1 = some_2818593171(scriptSetTextEditorSelectionsApi_1291860164(arg_1291860939));
      break;
    case "scriptGetTextEditorLine":
    case "script-get-text-editor-line":
      Temporary1 = some_2818593171(scriptGetTextEditorLineApi_1291860233(arg_1291860939));
      break;
    case "scriptGetTextEditorLineCount":
    case "script-get-text-editor-line-count":
      Temporary1 = some_2818593171(scriptGetTextEditorLineCountApi_1291860303(arg_1291860939));
      break;
    case "scriptGetOptionInt":
    case "script-get-option-int":
      Temporary1 = some_2818593171(scriptGetOptionIntApi_1291860351(arg_1291860939));
      break;
    case "scriptGetOptionFloat":
    case "script-get-option-float":
      Temporary1 = some_2818593171(scriptGetOptionFloatApi_1291860394(arg_1291860939));
      break;
    case "scriptGetOptionBool":
    case "script-get-option-bool":
      Temporary1 = some_2818593171(scriptGetOptionBoolApi_1291860495(arg_1291860939));
      break;
    case "scriptGetOptionString":
    case "script-get-option-string":
      Temporary1 = some_2818593171(scriptGetOptionStringApi_1291860538(arg_1291860939));
      break;
    case "scriptSetOptionInt":
    case "script-set-option-int":
      Temporary1 = some_2818593171(scriptSetOptionIntApi_1291860612(arg_1291860939));
      break;
    case "scriptSetOptionFloat":
    case "script-set-option-float":
      Temporary1 = some_2818593171(scriptSetOptionFloatApi_1291860687(arg_1291860939));
      break;
    case "scriptSetOptionBool":
    case "script-set-option-bool":
      Temporary1 = some_2818593171(scriptSetOptionBoolApi_1291860762(arg_1291860939));
      break;
    case "scriptSetOptionString":
    case "script-set-option-string":
      Temporary1 = some_2818593171(scriptSetOptionStringApi_1291860837(arg_1291860939));
      break;
    case "scriptSetCallback":
    case "script-set-callback":
      Temporary1 = some_2818593171(scriptSetCallbackApi_1291860919(arg_1291860939));
      break;
    default: 
      Temporary1 = none_2818593370();
      break;
    }
    result_1291860943 = nimCopy(result_1291860943, Temporary1, NTI2818584815);

  return result_1291860943;

}

function handleAction_1291848870(self_1291848871, action_1291848872, arg_1291848873) {
  var result_1291861173 = false;

  BeforeRet: {
    log_1174405220(logger_704643272[0], 2, [nsuFormatOpenArray([91,101,100,93,32,65,99,116,105,111,110,32,39,36,49,32,36,50,39], [nimCopy(null, action_1291848872, NTI33554449), nimCopy(null, arg_1291848873, NTI33554449)])]);
    var args_1291861174 = newJArray_1627390082();
    Label1: {
      var a_1291861175 = null;
      var colontmp__536871079 = null;
      colontmp__536871079 = newStringStream_1660945417(arg_1291848873);
      var p_536871080 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871080[0], colontmp__536871079, [], false);
      try {
      var _ = getTok_1694499270(p_536871080[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536871080[0].tok == 1))) break Label4;
            a_1291861175 = parseJson_1627395211(p_536871080[0], false, false, 0);
            add_1627390190(args_1291861174, a_1291861175);
          }
      };
      } finally {
      close_1694498967(p_536871080[0]);
      }
    };
++excHandler;
    try {
    if (handleGlobalAction_2751463463(self_1291848871.scriptContext, action_1291848872, args_1291861174)) {
    result_1291861173 = true;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291861180 = [mnewString(0)];
    fmtRes_1291861180[0].push.apply(fmtRes_1291861180[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,71,108,111,98,97,108,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291861180, 0, action_1291848872, []);
    fmtRes_1291861180[0].push.apply(fmtRes_1291861180[0], [32]);;
    formatValue_721420459(fmtRes_1291861180, 0, arg_1291848873, []);
    fmtRes_1291861180[0].push.apply(fmtRes_1291861180[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291861180, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291861180[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291861173 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291861173 = isSome_2818593438(dispatch_1291860941(action_1291848872, args_1291861174));
    break BeforeRet;
  };

  return result_1291861173;

}

function getBiggestInt_1627390129(n_1627390130, default_1627390131) {
      var Temporary1;

  var result_1627390132 = 0;

  BeforeRet: {
    if (((n_1627390130 == null) || !((n_1627390130.kind == 2)))) {
    result_1627390132 = default_1627390131;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390130;
      if (ConstSet315[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390132 = Temporary1.num;
      break BeforeRet;
    }
    
  };

  return result_1627390132;

}

function parseEnum_1291853195(s_1291853197) {
    var Temporary1;

  var result_1291853198 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_1291853197))) {
    case "Local":
      Temporary1 = 0;
      break;
    case "Absytreeserver":
      Temporary1 = 1;
      break;
    case "Github":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_1291853197 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1291853198 = Temporary1;

  return result_1291853198;

}

function fromJson_1291853183(a_1291853185, a_1291853185_Idx, b_1291853186, opt_1291853187) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853186, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], Field1: b_1291853186}));
    }
    
    switch (b_1291853186.kind) {
    case 2:
      a_1291853185[a_1291853185_Idx] = chckRange(getBiggestInt_1627390129(b_1291853186, 0), 0, 2);
      break;
    case 4:
      a_1291853185[a_1291853185_Idx] = parseEnum_1291853195(getStr_1627390106(b_1291853186, []));
      break;
    default: 
      if (true) {
      var fmtRes_1291853233 = [mnewString(0)];
      fmtRes_1291853233[0].push.apply(fmtRes_1291853233[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_1291853233, 0, [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], []);
      fmtRes_1291853233[0].push.apply(fmtRes_1291853233[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_1291853233, 0, pretty_1627394477(b_1291853186, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_1291853233[0]);
      }
      
      break;
    }

  
}

function fromJson_1291853298(a_1291853300, a_1291853300_Idx, b_1291853301, opt_1291853302) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853301, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [74,115,111,110,78,111,100,101], Field1: b_1291853301}));
    }
    
    a_1291853300[a_1291853300_Idx] = b_1291853301;

  
}

function fromJson_1291853125(a_1291853127, b_1291853128, opt_1291853129) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853128, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101], Field1: b_1291853128}));
    }
    
    if (!((b_1291853128.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853128.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853164 = 0;
    var numMatchedHEX60gensym16_1291853165 = 0;
    numHEX60gensym16_1291853164 = addInt(numHEX60gensym16_1291853164, 1);
    if (hasKey_1627393154(b_1291853128, [107,105,110,100])) {
    numMatchedHEX60gensym16_1291853165 = addInt(numMatchedHEX60gensym16_1291853165, 1);
    fromJson_1291853183(a_1291853127, "kind", HEX5BHEX5D_1627393037(b_1291853128, [107,105,110,100]), opt_1291853129);
    }
    else {
    if (opt_1291853129.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[107,105,110,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853128, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853164 = addInt(numHEX60gensym16_1291853164, 1);
    if (hasKey_1627393154(b_1291853128, [105,100])) {
    numMatchedHEX60gensym16_1291853165 = addInt(numMatchedHEX60gensym16_1291853165, 1);
    fromJson_1811939890(a_1291853127, "id", HEX5BHEX5D_1627393037(b_1291853128, [105,100]), opt_1291853129);
    }
    else {
    if (opt_1291853129.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[105,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853128, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853164 = addInt(numHEX60gensym16_1291853164, 1);
    if (hasKey_1627393154(b_1291853128, [110,97,109,101])) {
    numMatchedHEX60gensym16_1291853165 = addInt(numMatchedHEX60gensym16_1291853165, 1);
    fromJson_1811939890(a_1291853127, "name", HEX5BHEX5D_1627393037(b_1291853128, [110,97,109,101]), opt_1291853129);
    }
    else {
    if (opt_1291853129.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[110,97,109,101], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853128, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853164 = addInt(numHEX60gensym16_1291853164, 1);
    if (hasKey_1627393154(b_1291853128, [115,101,116,116,105,110,103,115])) {
    numMatchedHEX60gensym16_1291853165 = addInt(numMatchedHEX60gensym16_1291853165, 1);
    fromJson_1291853298(a_1291853127, "settings", HEX5BHEX5D_1627393037(b_1291853128, [115,101,116,116,105,110,103,115]), opt_1291853129);
    }
    else {
    if (opt_1291853129.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[115,101,116,116,105,110,103,115], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853128, 2)]));
      }
      
    }
    }
    if ((opt_1291853129.allowExtraKeys && opt_1291853129.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853129.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853164 == numMatchedHEX60gensym16_1291853165))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853164 == numMatchedHEX60gensym16_1291853165);
    }
    else {
    if (opt_1291853129.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853128) == numMatchedHEX60gensym16_1291853165);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853128) == numHEX60gensym16_1291853164) && (numHEX60gensym16_1291853164 == numMatchedHEX60gensym16_1291853165));
    }
    }}
    var okHEX60gensym16_1291853321 = Temporary1;
    if (!(okHEX60gensym16_1291853321)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853128)), HEX24_369098760(numHEX60gensym16_1291853164), [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853128, 2)]));
    }
    

  
}

function fromJson_1291853097(a_1291853099, a_1291853099_Idx, b_1291853100, opt_1291853101) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853100, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,87,111,114,107,115,112,97,99,101,93], Field1: b_1291853100}));
    }
    
    if (a_1291853099[a_1291853099_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853100), 0, 2147483647), Temporary1)) { for (var i = a_1291853099[a_1291853099_Idx].length ; i < Temporary1 ; ++i) a_1291853099[a_1291853099_Idx].push(({kind: 0, id: [], name: [], settings: null})); }
               else { a_1291853099[a_1291853099_Idx].length = Temporary1; };
    Label2: {
      var i_1291853123 = 0;
      var val_1291853124 = null;
      var colontmp__536871226 = [];
      colontmp__536871226 = getElems_1627390175(b_1291853100, []);
      var i_536871227 = 0;
      var L_536871228 = (colontmp__536871226).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871227 < L_536871228)) break Label4;
            i_1291853123 = i_536871227;
            val_1291853124 = colontmp__536871226[chckIndx(i_536871227, 0, (colontmp__536871226).length - 1)];
            fromJson_1291853125(a_1291853099[a_1291853099_Idx][chckIndx(i_1291853123, 0, (a_1291853099[a_1291853099_Idx]).length - 1)], val_1291853124, opt_1291853101);
            i_536871227 = addInt(i_536871227, 1);
            if (!(((colontmp__536871226).length == L_536871228))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291853370(a_1291853372, b_1291853373, opt_1291853374) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853373, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,69,100,105,116,111,114], Field1: b_1291853373}));
    }
    
    if (!((b_1291853373.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853373.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853409 = 0;
    var numMatchedHEX60gensym16_1291853410 = 0;
    numHEX60gensym16_1291853409 = addInt(numHEX60gensym16_1291853409, 1);
    if (hasKey_1627393154(b_1291853373, [102,105,108,101,110,97,109,101])) {
    numMatchedHEX60gensym16_1291853410 = addInt(numMatchedHEX60gensym16_1291853410, 1);
    fromJson_1811939890(a_1291853372, "filename", HEX5BHEX5D_1627393037(b_1291853373, [102,105,108,101,110,97,109,101]), opt_1291853374);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,108,101,110,97,109,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853409 = addInt(numHEX60gensym16_1291853409, 1);
    if (hasKey_1627393154(b_1291853373, [97,115,116])) {
    numMatchedHEX60gensym16_1291853410 = addInt(numMatchedHEX60gensym16_1291853410, 1);
    fromJson_2818585060(a_1291853372, "ast", HEX5BHEX5D_1627393037(b_1291853373, [97,115,116]), opt_1291853374);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,115,116], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853409 = addInt(numHEX60gensym16_1291853409, 1);
    if (hasKey_1627393154(b_1291853373, [108,97,110,103,117,97,103,101,73,68])) {
    numMatchedHEX60gensym16_1291853410 = addInt(numMatchedHEX60gensym16_1291853410, 1);
    fromJson_1811939890(a_1291853372, "languageID", HEX5BHEX5D_1627393037(b_1291853373, [108,97,110,103,117,97,103,101,73,68]), opt_1291853374);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,110,103,117,97,103,101,73,68], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853409 = addInt(numHEX60gensym16_1291853409, 1);
    if (hasKey_1627393154(b_1291853373, [97,112,112,70,105,108,101])) {
    numMatchedHEX60gensym16_1291853410 = addInt(numMatchedHEX60gensym16_1291853410, 1);
    fromJson_2818585060(a_1291853372, "appFile", HEX5BHEX5D_1627393037(b_1291853373, [97,112,112,70,105,108,101]), opt_1291853374);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,112,112,70,105,108,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853409 = addInt(numHEX60gensym16_1291853409, 1);
    if (hasKey_1627393154(b_1291853373, [119,111,114,107,115,112,97,99,101,73,100])) {
    numMatchedHEX60gensym16_1291853410 = addInt(numMatchedHEX60gensym16_1291853410, 1);
    fromJson_1811939890(a_1291853372, "workspaceId", HEX5BHEX5D_1627393037(b_1291853373, [119,111,114,107,115,112,97,99,101,73,100]), opt_1291853374);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,73,100], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
      }
      
    }
    }
    if ((opt_1291853374.allowExtraKeys && opt_1291853374.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853374.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853409 == numMatchedHEX60gensym16_1291853410))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853409 == numMatchedHEX60gensym16_1291853410);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853373) == numMatchedHEX60gensym16_1291853410);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853373) == numHEX60gensym16_1291853409) && (numHEX60gensym16_1291853409 == numMatchedHEX60gensym16_1291853410));
    }
    }}
    var okHEX60gensym16_1291853529 = Temporary1;
    if (!(okHEX60gensym16_1291853529)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853373)), HEX24_369098760(numHEX60gensym16_1291853409), [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
    }
    

  
}

function fromJson_1291853342(a_1291853344, a_1291853344_Idx, b_1291853345, opt_1291853346) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853345, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,69,100,105,116,111,114,93], Field1: b_1291853345}));
    }
    
    if (a_1291853344[a_1291853344_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853345), 0, 2147483647), Temporary1)) { for (var i = a_1291853344[a_1291853344_Idx].length ; i < Temporary1 ; ++i) a_1291853344[a_1291853344_Idx].push(({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []})); }
               else { a_1291853344[a_1291853344_Idx].length = Temporary1; };
    Label2: {
      var i_1291853368 = 0;
      var val_1291853369 = null;
      var colontmp__536871231 = [];
      colontmp__536871231 = getElems_1627390175(b_1291853345, []);
      var i_536871232 = 0;
      var L_536871233 = (colontmp__536871231).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871232 < L_536871233)) break Label4;
            i_1291853368 = i_536871232;
            val_1291853369 = colontmp__536871231[chckIndx(i_536871232, 0, (colontmp__536871231).length - 1)];
            fromJson_1291853370(a_1291853344[a_1291853344_Idx][chckIndx(i_1291853368, 0, (a_1291853344[a_1291853344_Idx]).length - 1)], val_1291853369, opt_1291853346);
            i_536871232 = addInt(i_536871232, 1);
            if (!(((colontmp__536871231).length == L_536871233))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291852899(a_1291852901, b_1291852902, opt_1291852903) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852902, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [69,100,105,116,111,114,83,116,97,116,101], Field1: b_1291852902}));
    }
    
    if (!((b_1291852902.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291852902.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291852946 = 0;
    var numMatchedHEX60gensym16_1291852947 = 0;
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [116,104,101,109,101])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1811939890(a_1291852901, "theme", HEX5BHEX5D_1627393037(b_1291852902, [116,104,101,109,101]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[116,104,101,109,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [102,111,110,116,83,105,122,101])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_2818586358(a_1291852901, "fontSize", HEX5BHEX5D_1627393037(b_1291852902, [102,111,110,116,83,105,122,101]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,83,105,122,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [102,111,110,116,82,101,103,117,108,97,114])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1811939890(a_1291852901, "fontRegular", HEX5BHEX5D_1627393037(b_1291852902, [102,111,110,116,82,101,103,117,108,97,114]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,82,101,103,117,108,97,114], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [102,111,110,116,66,111,108,100])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1811939890(a_1291852901, "fontBold", HEX5BHEX5D_1627393037(b_1291852902, [102,111,110,116,66,111,108,100]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [102,111,110,116,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1811939890(a_1291852901, "fontItalic", HEX5BHEX5D_1627393037(b_1291852902, [102,111,110,116,73,116,97,108,105,99]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [102,111,110,116,66,111,108,100,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1811939890(a_1291852901, "fontBoldItalic", HEX5BHEX5D_1627393037(b_1291852902, [102,111,110,116,66,111,108,100,73,116,97,108,105,99]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1291853097(a_1291852901, "workspaceFolders", HEX5BHEX5D_1627393037(b_1291852902, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [111,112,101,110,69,100,105,116,111,114,115])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1291853342(a_1291852901, "openEditors", HEX5BHEX5D_1627393037(b_1291852902, [111,112,101,110,69,100,105,116,111,114,115]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[111,112,101,110,69,100,105,116,111,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    if ((opt_1291852903.allowExtraKeys && opt_1291852903.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291852903.allowExtraKeys) {
    if (!((numHEX60gensym16_1291852946 == numMatchedHEX60gensym16_1291852947))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291852946 == numMatchedHEX60gensym16_1291852947);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291852902) == numMatchedHEX60gensym16_1291852947);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291852902) == numHEX60gensym16_1291852946) && (numHEX60gensym16_1291852946 == numMatchedHEX60gensym16_1291852947));
    }
    }}
    var okHEX60gensym16_1291853541 = Temporary1;
    if (!(okHEX60gensym16_1291853541)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291852902)), HEX24_369098760(numHEX60gensym16_1291852946), [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
    }
    

  
}

function jsonTo_1291852893(b_1291852895, opt_1291852897) {
  var result_1291852898 = [({theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []})];

    fromJson_1291852899(result_1291852898[0], b_1291852895, opt_1291852897);

  return result_1291852898[0];

}

function getVarType_1627395261(x_1627395262, isRawNumber_1627395263, isRawNumber_1627395263_Idx) {
        var Temporary1;

  var result_1627395264 = 0;

  BeforeRet: {
    result_1627395264 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1627395262)))) {
    case "[object Array]":
      result_1627395264 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1627395264 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1627395262)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1627395262) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1627395262)) {
      result_1627395264 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1627395263[isRawNumber_1627395263_Idx] = true;
        result_1627395264 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1627395264 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1627395264 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1627395264 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1627395264 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,57,56,51,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }
  };

  return result_1627395264;

}

function len_1627395282(x_1627395283) {
  var result_1627395284 = 0;

          result_1627395284 = x_1627395283.length;
    

  return result_1627395284;

}

function convertObject_1627395285(x_1627395286) {
  var result_1627395287 = null;

    var isRawNumber_1627395288 = [false];
    switch (getVarType_1627395261(x_1627395286, isRawNumber_1627395288, 0)) {
    case 6:
      result_1627395287 = newJArray_1627390082();
      Label1: {
        var i_1627395293 = 0;
        var colontmp__536871236 = 0;
        colontmp__536871236 = len_1627395282(x_1627395286);
        var i_536871237 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_536871237 < colontmp__536871236)) break Label3;
              i_1627395293 = i_536871237;
              add_1627390190(result_1627395287, convertObject_1627395285(x_1627395286[i_1627395293]));
              i_536871237 = addInt(i_536871237, 1);
            }
        };
      };
      break;
    case 5:
      result_1627395287 = newJObject_1627390051();
      for (var property in x_1627395286) {
        if (x_1627395286.hasOwnProperty(property)) {
      
      var nimProperty_1627395294 = null;
      var nimValue_1627395295 = null;
      nimProperty_1627395294 = property; nimValue_1627395295 = x_1627395286[property];
      HEX5BHEX5DHEX3D_1627391903(result_1627395287, cstrToNimstr(nimProperty_1627395294), convertObject_1627395285(nimValue_1627395295));
      }}
      break;
    case 2:
      result_1627395287 = newJInt_1627390040((x_1627395286));
      break;
    case 3:
      result_1627395287 = newJFloat_1627390043((x_1627395286));
      break;
    case 4:
      if (isRawNumber_1627395288[0]) {
      var value_1627395304 = null;
      value_1627395304 = x_1627395286.toString();
      result_1627395287 = newJRawNumber_1627390037(cstrToNimstr(value_1627395304));
      }
      else {
        result_1627395287 = newJString_1627389994(cstrToNimstr((x_1627395286)));
      }
      
      break;
    case 1:
      result_1627395287 = newJBool_1627390046((x_1627395286));
      break;
    case 0:
      result_1627395287 = newJNull_1627390049();
      break;
    }

  return result_1627395287;

}

function parseJson_1627395313(buffer_1627395314) {
  var result_1627395315 = null;

  BeforeRet: {
    result_1627395315 = convertObject_1627395285(JSON.parse(toJSStr(buffer_1627395314)));
    break BeforeRet;
  };

  return result_1627395315;

}

function nosisAbsolute(path_1426063472) {
  var result_1426063473 = false;

  BeforeRet: {
    if (((path_1426063472).length == 0)) {
    result_1426063473 = false;
    break BeforeRet;
    }
    
    result_1426063473 = (path_1426063472[chckIndx(0, 0, (path_1426063472).length - 1)] == 47);
  };

  return result_1426063473;

}

function absolutePath_1426063704(path_1426063705, root_1426063706) {
    var Temporary1;

  var result_1426063707 = [];

    if (nosisAbsolute(path_1426063705)) {
    Temporary1 = path_1426063705;
    }
    else {
      if (!(nosisAbsolute(root_1426063706))) {
      raiseException({message: ([84,104,101,32,115,112,101,99,105,102,105,101,100,32,114,111,111,116,32,105,115,32,110,111,116,32,97,98,115,111,108,117,116,101,58,32] || []).concat(root_1426063706 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      
    Temporary1 = nosjoinPath(root_1426063706, path_1426063705);
    }
    
    result_1426063707 = nimCopy(null, Temporary1, NTI33554449);

  return result_1426063707;

}

function nosgetCurrentDir() {
  var result_1426063698 = [];

    if (true) {
    failedAssertImpl_268435515(makeNimstrLit("ospaths2.nim(849, 7) `false` use -d:nodejs to have `getCurrentDir` defined"));
    }
    

  return result_1426063698;

}

function newWorkspaceFolderLocal_2264924264(path_2264924265) {
  var result_2264924266 = null;

    result_2264924266 = ({m_type: NTI2264924164, path: [], name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2264924266.path = nimCopy(null, path_2264924265, NTI33554449);
    var fmtRes_2264924274 = [mnewString(0)];
    fmtRes_2264924274[0].push.apply(fmtRes_2264924274[0], [76,111,99,97,108,58]);;
    formatValue_721420459(fmtRes_2264924274, 0, absolutePath_1426063704(path_2264924265, nosgetCurrentDir()), []);
    result_2264924266.name = nimCopy(null, fmtRes_2264924274[0], NTI33554449);

  return result_2264924266;

}

function newWorkspaceFolderLocal_2264924293(settings_2264924294) {
  var result_2264924295 = null;

  BeforeRet: {
    var path_2264924296 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2264924294, [112,97,116,104]), []);
    result_2264924295 = newWorkspaceFolderLocal_2264924264(path_2264924296);
    break BeforeRet;
  };

  return result_2264924295;

}

function newWorkspaceFolderAbsytreeServer_2399144372(settings_2399144373) {
  var result_2399144374 = null;

  BeforeRet: {
    var url_2399144375 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2399144373, [98,97,115,101,85,114,108]), []);
    result_2399144374 = newWorkspaceFolderAbsytreeServer_2399144348(url_2399144375);
    break BeforeRet;
  };

  return result_2399144374;

}

function newWorkspaceFolderGithub_2281703740(settings_2281703741) {
  var result_2281703742 = null;

  BeforeRet: {
    var user_2281703743 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [117,115,101,114]), []);
    var repository_2281703744 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [114,101,112,111,115,105,116,111,114,121]), []);
    var branchOrHash_2281703745 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [98,114,97,110,99,104,79,114,72,97,115,104]), []);
    result_2281703742 = newWorkspaceFolderGithub_2281703680(user_2281703743, repository_2281703744, branchOrHash_2281703745);
    break BeforeRet;
  };

  return result_2281703742;

}

function formatValue_1291853583(result_1291853585, result_1291853585_Idx, value_1291853586, specifier_1291853587) {
    formatValue_721420459(result_1291853585, result_1291853585_Idx, reprEnum(value_1291853586, NTI1291845663), specifier_1291853587);

  
}

function new_1291853620() {
  var result_1291853623 = null;

  BeforeRet: {
    var r_1291853625 = null;
    r_1291853625 = ({m_type: NTI2801795076});
    result_1291853623 = r_1291853625;
    break BeforeRet;
  };

  return result_1291853623;

}

function getWorkspaceFolder_1291851106(self_1291851107, id_1291851108) {
  var result_1291855504 = ({val: null});

  BeforeRet: {
    Label1: {
      var wf_1291855508 = null;
      var i_536871240 = 0;
      var L_536871241 = (self_1291851107.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871240 < L_536871241)) break Label3;
            wf_1291855508 = self_1291851107.workspace.folders[chckIndx(i_536871240, 0, (self_1291851107.workspace.folders).length - 1)];
            if (HEX3DHEX3D_2046820626(wf_1291855508.id, id_1291851108)) {
            result_1291855504 = nimCopy(result_1291855504, some_1291855509(wf_1291855508), NTI2197815306);
            break BeforeRet;
            }
            
            i_536871240 = addInt(i_536871240, 1);
            if (!(((self_1291851107.workspace.folders).length == L_536871241))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291855504 = nimCopy(result_1291855504, none_1291855522(), NTI2197815306);
    break BeforeRet;
  };

  return result_1291855504;

}

function newTextDocument_2818579082(filename_2818579083, app_2818579084, workspaceFolder_2818579086) {
  var result_2818579087 = null;

    result_2818579087 = newTextDocument_2818579088(filename_2818579083, [], app_2818579084);
    result_2818579087.workspace = nimCopy(result_2818579087.workspace, workspaceFolder_2818579086, NTI2197815306);
    load_2197815320(result_2818579087, []);

  return result_2818579087;

}

function newEditor_1291851110(backend_1291851111, platform_1291851112) {
    
function HEX3Aanonymous_1291851126(event_1291851144) {
        handleKeyPress_1291851064(self_1291851114, event_1291851144.Field0, event_1291851144.Field1);

      
    }
    
function HEX3Aanonymous_1291851198(event_1291851216) {
        handleKeyRelease_1291851068(self_1291851114, event_1291851216.Field0, event_1291851216.Field1);

      
    }
    
function HEX3Aanonymous_1291851247(event_1291851265) {
        handleRune_1291851072(self_1291851114, event_1291851265.Field0, event_1291851265.Field1);

      
    }
    
function HEX3Aanonymous_1291851296(event_1291851314) {
        handleMousePress_1291851076(self_1291851114, event_1291851314.Field0, event_1291851314.Field1, event_1291851314.Field2);

      
    }
    
function HEX3Aanonymous_1291851368(event_1291851386) {
        handleMouseRelease_1291851081(self_1291851114, event_1291851386.Field0, event_1291851386.Field1, event_1291851386.Field2);

      
    }
    
function HEX3Aanonymous_1291851417(event_1291851435) {
        handleMouseMove_1291851086(self_1291851114, event_1291851435.Field0, event_1291851435.Field1, event_1291851435.Field2, event_1291851435.Field3);

      
    }
    
function HEX3Aanonymous_1291851489(event_1291851507) {
        handleScroll_1291851092(self_1291851114, event_1291851507.Field1, event_1291851507.Field0, event_1291851507.Field2);

      
    }
    
function HEX3Aanonymous_1291851561(event_1291851579) {
        handleDropFile_1291851097(self_1291851114, event_1291851579.Field0, event_1291851579.Field1);

      
    }
    
function HEX3Aanonymous_1291851633() {
        self_1291851114.closeRequested = true;

      
    }
      
function HEX3Aanonymous_1291852841(actionHEX60gensym73HEX60gensym74_1291852842, argHEX60gensym73HEX60gensym74_1291852843) {
          var Temporary1;

        var result_1291852844 = 0;

        BeforeRet: {
          if (handlerHEX60gensym73_1291852829.config.handleActions) {
          var action_1291852845 = nimCopy(null, actionHEX60gensym73HEX60gensym74_1291852842, NTI33554449);
          var arg_1291852846 = nimCopy(null, argHEX60gensym73HEX60gensym74_1291852843, NTI33554449);
          if (handleAction_1291848870(self_1291851114, action_1291852845, arg_1291852846)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym73HEX60gensym74_1291852847 = Temporary1;
          if (handlerHEX60gensym73_1291852829.config.consumeAllActions) {
          result_1291852844 = 3;
          break BeforeRet;
          }
          
          result_1291852844 = responseHEX60gensym73HEX60gensym74_1291852847;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym73_1291852829.config.consumeAllActions) {
          result_1291852844 = 3;
          break BeforeRet;
          }
          else {
            result_1291852844 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852844;

      }
      
function HEX3Aanonymous_1291852849(inputHEX60gensym73HEX60gensym75_1291852850) {
        var result_1291852851 = 0;

        BeforeRet: {
          if (handlerHEX60gensym73_1291852829.config.handleInputs) {
          var input_1291852852 = nimCopy(null, inputHEX60gensym73HEX60gensym75_1291852850, NTI33554449);
          result_1291852851 = 1;
          break BeforeRet;
          }
          else {
            result_1291852851 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852851;

      }
      
function HEX3Aanonymous_1291852872(actionHEX60gensym76HEX60gensym77_1291852873, argHEX60gensym76HEX60gensym77_1291852874) {
          var Temporary1;

        var result_1291852875 = 0;

        BeforeRet: {
          if (handlerHEX60gensym76_1291852860.config.handleActions) {
          var action_1291852876 = nimCopy(null, actionHEX60gensym76HEX60gensym77_1291852873, NTI33554449);
          var arg_1291852877 = nimCopy(null, argHEX60gensym76HEX60gensym77_1291852874, NTI33554449);
          if (handleAction_1291848870(self_1291851114, action_1291852876, arg_1291852877)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym76HEX60gensym77_1291852878 = Temporary1;
          if (handlerHEX60gensym76_1291852860.config.consumeAllActions) {
          result_1291852875 = 3;
          break BeforeRet;
          }
          
          result_1291852875 = responseHEX60gensym76HEX60gensym77_1291852878;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym76_1291852860.config.consumeAllActions) {
          result_1291852875 = 3;
          break BeforeRet;
          }
          else {
            result_1291852875 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852875;

      }
      
function HEX3Aanonymous_1291852880(inputHEX60gensym76HEX60gensym78_1291852881) {
        var result_1291852882 = 0;

        BeforeRet: {
          if (handlerHEX60gensym76_1291852860.config.handleInputs) {
          var input_1291852883 = nimCopy(null, inputHEX60gensym76HEX60gensym78_1291852881, NTI33554449);
          result_1291852882 = 1;
          break BeforeRet;
          }
          else {
            result_1291852882 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852882;

      }
              var Temporary8;
        var Temporary12;
              var Temporary19;
              var Temporary20;
                var Temporary22;

  var result_1291851113 = null;

  BeforeRet: {
    var self_1291851114 = {backend: 0, platform: null, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], clearAtlasTimer: 0.0, timer: 0.0, frameTimer: 0.0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), closeRequested: false, widget: null, eventHandlerConfigs: ({data: [], counter: 0}), options: null, callbacks: ({data: [], counter: 0}), logger: null, workspace: null, scriptContext: null, initializeCalled: false, statusBarOnTop: false, currentView: 0, views: [], layout: null, layout_props: null, theme: null, loadedFontSize: 0.0, editors: ({data: [], counter: 0}), popups: [], onEditorRegistered: ({handlers: []}), onEditorDeregistered: ({handlers: []}), commandLineTextEditor: null, eventHandler: null, commandLineEventHandler: null, commandLineMode: false, modeEventHandler: null, currentMode: [], editor_defaults: []};
    self_1291851114 = createWithPrototype(editor_prototype, self_1291851114);
    gEditor = self_1291851114;
    self_1291851114.platform = platform_1291851112;
    self_1291851114.backend = backend_1291851111;
    self_1291851114.statusBarOnTop = false;
    var _ = subscribe_1291851159(platform_1291851112.onKeyPress, HEX3Aanonymous_1291851126);
    var _ = subscribe_1291851159(platform_1291851112.onKeyRelease, HEX3Aanonymous_1291851198);
    var _ = subscribe_1291851159(platform_1291851112.onRune, HEX3Aanonymous_1291851247);
    var _ = subscribe_1291851329(platform_1291851112.onMousePress, HEX3Aanonymous_1291851296);
    var _ = subscribe_1291851329(platform_1291851112.onMouseRelease, HEX3Aanonymous_1291851368);
    var _ = subscribe_1291851450(platform_1291851112.onMouseMove, HEX3Aanonymous_1291851417);
    var _ = subscribe_1291851522(platform_1291851112.onScroll, HEX3Aanonymous_1291851489);
    var _ = subscribe_1291851594(platform_1291851112.onDropFile, HEX3Aanonymous_1291851561);
    var _ = subscribe_1291851666(platform_1291851112.onCloseRequested, HEX3Aanonymous_1291851633);
    self_1291851114.timer = startTimer_2080374869();
    self_1291851114.frameTimer = startTimer_2080374869();
    self_1291851114.layout = {m_type: NTI1291845643};
    self_1291851114.layout_props = {props: toTable_1291851676([{Field0: [109,97,105,110,45,115,112,108,105,116], Field1: 0.5}])};
    fontSizeHEX3D_2768240776(self_1291851114.platform, 20.0);
    self_1291851114.fontRegular = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], NTI33554449);
    self_1291851114.fontBold = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], NTI33554449);
    self_1291851114.fontItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851114.fontBoldItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851114.editor_defaults = nimCopy(null, [{m_type: NTI2818572510, editor: null, document: null, selectionsInternal: [], selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, disableScrolling: false, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], disableCompletions: false, completions: [], selectedCompletion: 0, completionsBaseIndex: 0, completionsScrollOffset: 0.0, lastItems: [], lastCompletionsWidget: null, lastCompletionWidgets: [], showCompletions: false, scrollToCompletion: ({val: 0, has: false}), id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI2969568641, editor: null, document: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), lastRootNode: null, currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditor: null, textDocument: null, textEditEventHandler: null, textEditorWidget: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], completionsBaseIndex: 0, completionsScrollOffset: 0.0, scrollToCompletion: ({val: 0, has: false}), lastCompletionsWidget: null, scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI3254780014, editor: null, document: null, transactionCursors: ({data: [], counter: 0}), modeEventHandler: null, completionEventHandler: null, currentMode: [], nodeToCell: ({data: [], counter: 0}), logicalLines: [], cellWidgetContext: null, mCursor: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), mCursorBeforeTransaction: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), useDefaultCellBuilder: false, scrollOffset: 0.0, previousBaseIndex: [], lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), showCompletions: false, completionText: [], hasCompletions: false, filteredCompletions: [], unfilteredCompletions: [], selectedCompletion: 0, lastItems: [], completionsBaseIndex: 0, completionsScrollOffset: 0.0, scrollToCompletion: ({val: 0, has: false}), lastCompletionsWidget: null, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}], NTI1291849426);
    self_1291851114.workspace = ({folders: []});
    self_1291851114.theme = defaultTheme_2516586063();
    setTheme_1291851004(self_1291851114, [46,47,116,104,101,109,101,115,47,116,111,107,121,111,45,110,105,103,104,116,45,99,111,108,111,114,45,116,104,101,109,101,46,106,115,111,110]);
    self_1291851114.currentView = 0;
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291851114, [101,100,105,116,111,114]), [60,67,45,120,62,60,67,45,120,62], [113,117,105,116]);
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291851114, [101,100,105,116,111,114]), [60,67,65,83,45,114,62], [114,101,108,111,97,100,45,99,111,110,102,105,103]);
    self_1291851114.options = newJObject_1627390051();
    Label1: {
      var handlerHEX60gensym73_1291852829 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym73_1291852829.config = getEventHandlerConfig_1291849162(self_1291851114, [101,100,105,116,111,114]);
      handlerHEX60gensym73_1291852829.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(self_1291851114, [101,100,105,116,111,114]));
      handlerHEX60gensym73_1291852829.handleAction = HEX3Aanonymous_1291852841;
      handlerHEX60gensym73_1291852829.handleInput = HEX3Aanonymous_1291852849;
    };
    self_1291851114.eventHandler = handlerHEX60gensym73_1291852829;
    Label2: {
      var handlerHEX60gensym76_1291852860 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym76_1291852860.config = getEventHandlerConfig_1291849162(self_1291851114, [99,111,109,109,97,110,100,76,105,110,101]);
      handlerHEX60gensym76_1291852860.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(self_1291851114, [99,111,109,109,97,110,100,76,105,110,101]));
      handlerHEX60gensym76_1291852860.handleAction = HEX3Aanonymous_1291852872;
      handlerHEX60gensym76_1291852860.handleInput = HEX3Aanonymous_1291852880;
    };
    self_1291851114.commandLineEventHandler = handlerHEX60gensym76_1291852860;
    self_1291851114.commandLineMode = false;
    self_1291851114.commandLineTextEditor = newTextEditor_2818593568(newTextDocument_2818579088([], [], false), self_1291851114);
    self_1291851114.commandLineTextEditor.renderHeader = false;
    self_1291851114.commandLineTextEditor.lineNumbers = nimCopy(self_1291851114.commandLineTextEditor.lineNumbers, some_3187671914(0), NTI2818572554);
    getCommandLineTextEditor_1291851061(self_1291851114).hideCursorWhenInactive = true;
    var state_1291852892 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
++excHandler;
    try {
    state_1291852892 = nimCopy(state_1291852892, jsonTo_1291852893(parseJson_1627395313(loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115,111,110])), {allowMissingKeys: true, allowExtraKeys: true}), NTI1291845666);
    setTheme_1291851004(self_1291851114, state_1291852892.theme);
    self_1291851114.loadedFontSize = state_1291852892.fontSize;
    fontSizeHEX3D_2768240776(self_1291851114.platform, state_1291852892.fontSize);
    if ((0 < (state_1291852892.fontRegular).length)) {
    self_1291851114.fontRegular = nimCopy(null, state_1291852892.fontRegular, NTI33554449);
    }
    
    if ((0 < (state_1291852892.fontBold).length)) {
    self_1291851114.fontBold = nimCopy(null, state_1291852892.fontBold, NTI33554449);
    }
    
    if ((0 < (state_1291852892.fontItalic).length)) {
    self_1291851114.fontItalic = nimCopy(null, state_1291852892.fontItalic, NTI33554449);
    }
    
    if ((0 < (state_1291852892.fontBoldItalic).length)) {
    self_1291851114.fontBoldItalic = nimCopy(null, state_1291852892.fontBoldItalic, NTI33554449);
    }
    
    self_1291851114.options = parseJson_1627395313(loadApplicationFile_2365587474(fs_2365587509, [111,112,116,105,111,110,115,46,106,115,111,110]));
    var fmtRes_1291853549 = [mnewString(0)];
    fmtRes_1291853549[0].push.apply(fmtRes_1291853549[0], [82,101,115,116,111,114,105,110,103,32,111,112,116,105,111,110,115,58,32]);;
    formatValue_721420459(fmtRes_1291853549, 0, pretty_1627394477(self_1291851114.options, 2), []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853549[0], NTI33554449)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853554 = [mnewString(0)];
    fmtRes_1291853554[0].push.apply(fmtRes_1291853554[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,112,114,101,118,105,111,117,115,32,115,116,97,116,101,32,102,114,111,109,32,99,111,110,102,105,103,32,102,105,108,101,58,32]);;
    formatValue_721420459(fmtRes_1291853554, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853554[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848874(self_1291851114, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,119,111,114,107,115,112,97,99,101,115], false)) {
    Label4: {
      var wf_1291853577 = ({kind: 0, id: [], name: [], settings: null});
      var i_536870985 = 0;
      var L_536870986 = (state_1291852892.workspaceFolders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536870985 < L_536870986)) break Label6;
            wf_1291853577 = state_1291852892.workspaceFolders[chckIndx(i_536870985, 0, (state_1291852892.workspaceFolders).length - 1)];
            Label7: {
              switch (wf_1291853577.kind) {
              case 0:
                Temporary8 = newWorkspaceFolderLocal_2264924293(wf_1291853577.settings);
                break;
              case 1:
                Temporary8 = newWorkspaceFolderAbsytreeServer_2399144372(wf_1291853577.settings);
                break;
              case 2:
                Temporary8 = newWorkspaceFolderGithub_2281703740(wf_1291853577.settings);
                break;
              default: 
                var fmtRes_1291853582 = [mnewString(0)];
                fmtRes_1291853582[0].push.apply(fmtRes_1291853582[0], makeNimstrLit("[editor][restore-open-workspaces] Unhandled or unknown workspace folder kind "));;
                formatValue_1291853583(fmtRes_1291853582, 0, wf_1291853577.kind, []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853582[0], NTI33554449)]);
                break Label7;
                break;
              }
              var folder_1291853591 = Temporary8;
              folder_1291853591.id = nimCopy(folder_1291853591.id, parseId_2046820640(wf_1291853577.id), NTI2046820355);
              folder_1291853591.name = nimCopy(null, wf_1291853577.name, NTI33554449);
              if (addWorkspaceFolder_1291851103(self_1291851114, folder_1291853591)) {
              var fmtRes_1291853596 = [mnewString(0)];
              fmtRes_1291853596[0].push.apply(fmtRes_1291853596[0], [82,101,115,116,111,114,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
              formatValue_721420459(fmtRes_1291853596, 0, folder_1291853591.name, []);
              fmtRes_1291853596[0].push.apply(fmtRes_1291853596[0], [32,40]);;
              formatValue_3036676344(fmtRes_1291853596, 0, folder_1291853591.id, []);
              fmtRes_1291853596[0].push.apply(fmtRes_1291853596[0], [41]);;
              log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853596[0], NTI33554449)]);
              }
              
            };
            i_536870985 = addInt(i_536870985, 1);
            if (!(((state_1291852892.workspaceFolders).length == L_536870986))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
++excHandler;
    try {
    var searchPaths_1291853606 = [[115,114,99], [115,99,114,105,112,116,105,110,103]];
    var searchPathsJson_1291853611 = HEX7BHEX7D_1627393316(self_1291851114.options, [[115,99,114,105,112,116,105,110,103], [115,101,97,114,99,104,45,112,97,116,104,115]]);
    if (!((searchPathsJson_1291853611 == null))) {
    Label10: {
      var sp_1291853615 = null;
      if (!((searchPathsJson_1291853611.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(searchPathsJson_1291853611.kind, NTI1627389955) || []));
      }
      
      Label11: {
        var i_536870995 = null;
        var colontmp__536870996 = [];
        var Temporary12 = searchPathsJson_1291853611;
        if (ConstSet316[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__536870996 = Temporary12.elems;
        var i_536870997 = 0;
        var L_536870998 = (colontmp__536870996).length;
        Label13: {
            Label14: while (true) {
            if (!(i_536870997 < L_536870998)) break Label14;
              i_536870995 = colontmp__536870996[chckIndx(i_536870997, 0, (colontmp__536870996).length - 1)];
              sp_1291853615 = i_536870995;
              searchPaths_1291853606.push(getStr_1627390106(sp_1291853615, []));;
              i_536870997 = addInt(i_536870997, 1);
              if (!(((colontmp__536870996).length == L_536870998))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    self_1291851114.scriptContext = new_1291853620();
    init_2751463438(self_1291851114.scriptContext, []);
    var _ = false;
    self_1291851114.initializeCalled = true;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853656 = [mnewString(0)];
    fmtRes_1291853656[0].push.apply(fmtRes_1291853656[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,99,111,110,102,105,103,58,32]);;
    formatValue_721420459(fmtRes_1291853656, 0, getCurrentExceptionMsg_33556469(), []);
    addChar(fmtRes_1291853656[0], 10);;
    formatValue_721420459(fmtRes_1291853656, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853656[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848874(self_1291851114, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,101,100,105,116,111,114,115], false)) {
    Label15: {
      var editorState_1291853679 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_536871002 = 0;
      var L_536871003 = (state_1291852892.openEditors).length;
      Label16: {
          Label17: while (true) {
          if (!(i_536871002 < L_536871003)) break Label17;
            editorState_1291853679 = state_1291852892.openEditors[chckIndx(i_536871002, 0, (state_1291852892.openEditors).length - 1)];
            Label18: {
              var workspaceFolder_1291853680 = getWorkspaceFolder_1291851106(self_1291851114, parseId_2046820640(editorState_1291853679.workspaceId));
              if (editorState_1291853679.ast) {
              Temporary19 = newAstDocument_2969571554(editorState_1291853679.filename, editorState_1291853679.appFile, workspaceFolder_1291853680);
              }
              else {
              if (nsuEndsWith(editorState_1291853679.filename, [46,97,109])) {
++excHandler;
              try {
              Temporary20 = newModelDocument_3254780282(editorState_1291853679.filename, editorState_1291853679.appFile, workspaceFolder_1291853680);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              var fmtRes_1291853685 = [mnewString(0)];
              fmtRes_1291853685[0].push.apply(fmtRes_1291853685[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
              formatValue_721420459(fmtRes_1291853685, 0, editorState_1291853679.filename, []);
              fmtRes_1291853685[0].push.apply(fmtRes_1291853685[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
              formatValue_721420459(fmtRes_1291853685, 0, getCurrentExceptionMsg_33556469(), []);
              log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853685[0], NTI33554449)]);
              break Label18;
              lastJSError = prevJSError;
              } finally {
              }
              Temporary19 = Temporary20;
              }
              else {
++excHandler;
                try {
                Temporary22 = newTextDocument_2818579082(editorState_1291853679.filename, editorState_1291853679.appFile, workspaceFolder_1291853680);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                var fmtRes_1291853690 = [mnewString(0)];
                fmtRes_1291853690[0].push.apply(fmtRes_1291853690[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
                formatValue_721420459(fmtRes_1291853690, 0, editorState_1291853679.filename, []);
                fmtRes_1291853690[0].push.apply(fmtRes_1291853690[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
                formatValue_721420459(fmtRes_1291853690, 0, getCurrentExceptionMsg_33556469(), []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853690[0], NTI33554449)]);
                break Label18;
                lastJSError = prevJSError;
                } finally {
                }
              Temporary19 = Temporary22;
              }
              }
              var document_1291853691 = Temporary19;
              createView_1291848958(self_1291851114, document_1291853691);
            };
            i_536871002 = addInt(i_536871002, 1);
            if (!(((state_1291852892.openEditors).length == L_536871003))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    result_1291851113 = self_1291851114;
    break BeforeRet;
  };

  return result_1291851113;

}

function fromJsonHook_2516583208(color_2516583209, jsonNode_2516583210) {
    var Temporary1;

  BeforeRet: {
    if ((jsonNode_2516583210.kind == 0)) {
    color_2516583209 = nimCopy(color_2516583209, parseHex_2533359858([48,48,48,48,48,48]), NTI2550136835);
    break BeforeRet;
    }
    
    var Temporary1 = jsonNode_2516583210;
    if (ConstSet318[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    color_2516583209 = nimCopy(color_2516583209, parseHexVar_2516582448(Temporary1.str), NTI2550136835);
  };

  
}

function fromJson_2516583240(a_2516583242, b_2516583243, opt_2516583244) {
    if (!(!(HEX3DHEX3D_1627392026(b_2516583243, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,111,108,111,114], Field1: b_2516583243}));
    }
    
    fromJsonHook_2516583208(a_2516583242, b_2516583243);

  
}

function jsonTo_2516583234(b_2516583236, opt_2516583238) {
  var result_2516583239 = [({r: 0.0, g: 0.0, b: 0.0, a: 0.0})];

    fromJson_2516583240(result_2516583239[0], b_2516583236, opt_2516583238);

  return result_2516583239[0];

}

function hasKey_2516582658(t_2516582661, key_2516582662) {
  var result_2516582663 = false;

    var hc_2516582664 = [0];
    result_2516582663 = (0 <= rawGet_2516582665(t_2516582661, key_2516582662, hc_2516582664, 0));

  return result_2516582663;

}

function contains_2516582652(t_2516582655, key_2516582656) {
  var result_2516582657 = false;

  BeforeRet: {
    result_2516582657 = hasKey_2516582658(t_2516582655, key_2516582656);
    break BeforeRet;
  };

  return result_2516582657;

}

function none_2516583264() {
  var result_2516583271 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

  return result_2516583271;

}

function HEX5BHEX5D_2516582957(t_2516582960, key_2516582961) {
  var result_2516582962 = null;

    var hcHEX60gensym22_2516582963 = [0];
    var indexHEX60gensym22_2516582970 = rawGet_2516582665(t_2516582960, key_2516582961, hcHEX60gensym22_2516582963, 0);
    if ((0 <= indexHEX60gensym22_2516582970)) {
    result_2516582962 = t_2516582960.data[chckIndx(indexHEX60gensym22_2516582970, 0, (t_2516582960.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2516582961);
    }
    

  return result_2516582962;

}

function contains_855639877(s_855639878, sub_855639879) {
  var result_855639880 = false;

  BeforeRet: {
    result_855639880 = (0 <= nsuFindStr(s_855639878, sub_855639879, 0, -1));
    break BeforeRet;
  };

  return result_855639880;

}

function fromJsonHook_2516583215(style_2516583216, jsonNode_2516583217) {
    var Temporary1;

    style_2516583216 = nimCopy(style_2516583216, ConstSet323, NTI2516582915);
    var Temporary1 = jsonNode_2516583217;
    if (ConstSet324[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var text_2516583218 = nimCopy(null, Temporary1.str, NTI33554449);
    if (contains_855639877(text_2516583218, [105,116,97,108,105,99])) {
    style_2516583216[0] = true;
    }
    
    if (contains_855639877(text_2516583218, [98,111,108,100])) {
    style_2516583216[2] = true;
    }
    
    if (contains_855639877(text_2516583218, [117,110,100,101,114,108,105,110,101])) {
    style_2516583216[1] = true;
    }
    

  
}

function fromJson_2516583278(a_2516583280, b_2516583281, opt_2516583282) {
    if (!(!(HEX3DHEX3D_1627392026(b_2516583281, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,116,91,70,111,110,116,83,116,121,108,101,93], Field1: b_2516583281}));
    }
    
    fromJsonHook_2516583215(a_2516583280, b_2516583281);

  
}

function jsonTo_2516583272(b_2516583274, opt_2516583276) {
  var result_2516583277 = [{}];

    fromJson_2516583278(result_2516583277[0], b_2516583274, opt_2516583276);

  return result_2516583277[0];

}

function jsonToTheme_2516583298(json_2516583299, opt_2516583300) {
      var Temporary2;
      var Temporary6;
            var Temporary9;
                var Temporary12;
                      var Temporary15;

  var result_2516583301 = null;

    result_2516583301 = {path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})};
    result_2516583301.name = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [110,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    if (hasKey_1627393154(json_2516583299, [116,121,112,101])) {
    result_2516583301.typ = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [116,121,112,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2516583299, [99,111,108,111,114,83,112,97,99,101,78,97,109,101])) {
    result_2516583301.colorSpace = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [99,111,108,111,114,83,112,97,99,101,78,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2516583299, [99,111,108,111,114,115])) {
    Label1: {
      var key_2516583321 = [];
      var value_2516583322 = null;
      var colontmp__536871244 = ({data: [], counter: 0, first: 0, last: 0});
      var Temporary2 = HEX5BHEX5D_1627393037(json_2516583299, [99,111,108,111,114,115]);
      if (ConstSet317[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      colontmp__536871244 = nimCopy(colontmp__536871244, Temporary2.fields, NTI1627389966);
      var L_536871245 = len_1627392114(colontmp__536871244);
      if ((0 < colontmp__536871244.counter)) {
      var h_536871246 = colontmp__536871244.first;
      Label3: {
          Label4: while (true) {
          if (!(0 <= h_536871246)) break Label4;
            var nxt_536871248 = colontmp__536871244.data[chckIndx(h_536871246, 0, (colontmp__536871244.data).length - 1)].Field1;
            if (isFilled_1308622880(colontmp__536871244.data[chckIndx(h_536871246, 0, (colontmp__536871244.data).length - 1)].Field0)) {
            var colontmp__536871250 = nimCopy(null, {Field0: nimCopy(null, colontmp__536871244.data[chckIndx(h_536871246, 0, (colontmp__536871244.data).length - 1)].Field2, NTI33554449), Field1: colontmp__536871244.data[chckIndx(h_536871246, 0, (colontmp__536871244.data).length - 1)].Field3}, NTI1627391161);
            key_2516583321 = colontmp__536871250["Field0"];
            value_2516583322 = colontmp__536871250["Field1"];
            HEX5BHEX5DHEX3D_2516583368(result_2516583301.colors, key_2516583321, jsonTo_2516583234(value_2516583322, {allowExtraKeys: false, allowMissingKeys: false}));
            if (!((len_1627392114(colontmp__536871244) == L_536871245))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_536871246 = nxt_536871248;
          }
      };
      }
      
    };
    }
    
    if (hasKey_1627393154(json_2516583299, [116,111,107,101,110,67,111,108,111,114,115])) {
    Label5: {
      var item_2516584633 = null;
      var colontmp__536871261 = [];
      var Temporary6 = HEX5BHEX5D_1627393037(json_2516583299, [116,111,107,101,110,67,111,108,111,114,115]);
      if (ConstSet319[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      colontmp__536871261 = Temporary6.elems;
      var i_536871262 = 0;
      var L_536871263 = (colontmp__536871261).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536871262 < L_536871263)) break Label8;
            item_2516584633 = colontmp__536871261[chckIndx(i_536871262, 0, (colontmp__536871261).length - 1)];
            var scopes_2516584638 = [];
            if (hasKey_1627393154(item_2516584633, [115,99,111,112,101])) {
            var scope_2516584639 = HEX5BHEX5D_1627393037(item_2516584633, [115,99,111,112,101]);
            if ((scope_2516584639.kind == 4)) {
            var Temporary9 = scope_2516584639;
            if (ConstSet320[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
            var Temporary10 = nimCopy(null, Temporary9.str, NTI33554449);
            scopes_2516584638.push(Temporary10);;
            }
            else {
              Label11: {
                var scopeName_2516584651 = null;
                var colontmp__536871253 = [];
                var Temporary12 = scope_2516584639;
                if (ConstSet321[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
                colontmp__536871253 = Temporary12.elems;
                var i_536871254 = 0;
                var L_536871255 = (colontmp__536871253).length;
                Label13: {
                    Label14: while (true) {
                    if (!(i_536871254 < L_536871255)) break Label14;
                      scopeName_2516584651 = colontmp__536871253[chckIndx(i_536871254, 0, (colontmp__536871253).length - 1)];
                      var Temporary15 = scopeName_2516584651;
                      if (ConstSet322[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
                      var Temporary16 = nimCopy(null, Temporary15.str, NTI33554449);
                      scopes_2516584638.push(Temporary16);;
                      i_536871254 = addInt(i_536871254, 1);
                      if (!(((colontmp__536871253).length == L_536871255))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            }
            
            }
            else {
            scopes_2516584638.push([46]);;
            }
            
            var settings_2516584660 = HEX5BHEX5D_1627393037(item_2516584633, [115,101,116,116,105,110,103,115]);
            Label17: {
              var scope_2516584664 = [];
              var i_536871258 = 0;
              var L_536871259 = (scopes_2516584638).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536871258 < L_536871259)) break Label19;
                    scope_2516584664 = scopes_2516584638[chckIndx(i_536871258, 0, (scopes_2516584638).length - 1)];
                    if (!(contains_2516582652(result_2516583301.tokenColors, scope_2516584664))) {
                    HEX5BHEX5DHEX3D_2516584766(result_2516583301.tokenColors, scope_2516584664, {foreground: none_2516583264(), background: none_2516583264(), fontStyle: {}});
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [102,111,114,101,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).foreground = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).foreground, some_2516583251(jsonTo_2516583234(HEX5BHEX5D_1627393037(settings_2516584660, [102,111,114,101,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2516582412);
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [98,97,99,107,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).background = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).background, some_2516583251(jsonTo_2516583234(HEX5BHEX5D_1627393037(settings_2516584660, [98,97,99,107,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2516582412);
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [102,111,110,116,83,116,121,108,101])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).fontStyle = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).fontStyle, jsonTo_2516583272(HEX5BHEX5D_1627393037(settings_2516584660, [102,111,110,116,83,116,121,108,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2516582423);
                    }
                    
                    i_536871258 = addInt(i_536871258, 1);
                    if (!(((scopes_2516584638).length == L_536871259))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536871262 = addInt(i_536871262, 1);
            if (!(((colontmp__536871261).length == L_536871263))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  return result_2516583301;

}

function some_2516586018(val_2516586020) {
  var result_2516586021 = ({val: null});

    if (!(!((val_2516586020 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2516586021.val = val_2516586020;

  return result_2516586021;

}

function none_2516586043() {
  var result_2516586049 = ({val: null});

  return result_2516586049;

}

function loadFromString_2516586008(input_2516586009, path_2516586010) {
  var result_2516586015 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var json_2516586016 = parseJson_1627395313(input_2516586009);
    var newTheme_2516586017 = jsonToTheme_2516583298(json_2516586016, {allowExtraKeys: false, allowMissingKeys: false});
    newTheme_2516586017.path = nimCopy(null, path_2516586010, NTI33554449);
    result_2516586015 = nimCopy(result_2516586015, some_2516586018(newTheme_2516586017), NTI2516584388);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2516586036 = [mnewString(0)];
    fmtRes_2516586036[0].push.apply(fmtRes_2516586036[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32,102,114,111,109,32]);;
    formatValue_721420459(fmtRes_2516586036, 0, path_2516586010, []);
    fmtRes_2516586036[0].push.apply(fmtRes_2516586036[0], [58,32]);;
    formatValue_721420459(fmtRes_2516586036, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516586036[0], NTI33554449)]);
    var fmtRes_2516586042 = [mnewString(0)];
    formatValue_721420459(fmtRes_2516586042, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516586042[0], NTI33554449)]);
    result_2516586015 = nimCopy(result_2516586015, none_2516586043(), NTI2516584388);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2516586015;

}
  var Temporary287;
var rend_536870947 = [new_536870929()];
init_2768240764(rend_536870947[0]);
var initializedEditor_536870948 = [false];
var ed_536870949 = [newEditor_1291851110(2, rend_536870947[0])];
  var oHEX60gensym0_536870953 = loadFromString_2516586008(makeNimstrLit("{\x0A    \"name\": \"Tokyo Night Storm\",\x0A    \"author\": \"Enkia\",\x0A    \"maintainers\": [\"Enkia <enki77@gmail.com>\"],\x0A    \"type\": \"dark\",\x0A    \"semanticTokenColors\": {\x0A        \"parameter.declaration\": {\x0A            \"foreground\": \"#e0af68\"\x0A        },\x0A        \"parameter\": {\x0A            \"foreground\": \"#cfc9c2\"\x0A        },\x0A        \"property.declaration\": {\x0A            \"foreground\": \"#73daca\"\x0A        },\x0A        \"property.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"*.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.declaration\": {\x0A            \"foreground\": \"#bb9af7\"\x0A        },\x0A        \"variable\": {\x0A            \"foreground\": \"#c0caf5\"\x0A        }\x0A    },\x0A    \"semanticClass\": \"tokyo-night-storm\",\x0A    \"colors\": {\x0A        \"foreground\": \"#7982a9\",\x0A        \"descriptionForeground\": \"#545c7e\",\x0A        \"focusBorder\": \"#545c7e33\",\x0A        \"errorForeground\": \"#5a607d\",\x0A        \"widget.shadow\": \"#ffffff00\",\x0A        \"scrollbar.shadow\": \"#00000033\",\x0A        \"badge.background\": \"#7e83b233\",\x0A        \"badge.foreground\": \"#a9b1d6\",\x0A        \"icon.foreground\": \"#7982a9\",\x0A        \"settings.headerForeground\": \"#6183bb\",\x0A        \"window.activeBorder\": \"#0d0f17\",\x0A        \"window.inactiveBorder\": \"#0d0f17\",\x0A        \"sash.hoverBorder\": \"#29355a\",\x0A\x0A        \"toolbar.activeBackground\": \"#2c324a\",\x0A        \"toolbar.hoverBackground\": \"#2c324a\",\x0A\x0A        \"extensionButton.prominentBackground\": \"#3d59a1DD\",\x0A        \"extensionButton.prominentHoverBackground\": \"#3d59a1AA\",\x0A        \"extensionButton.prominentForeground\": \"#ffffff\",\x0A        \"extensionBadge.remoteBackground\": \"#3d59a1\",\x0A        \"extensionBadge.remoteForeground\": \"#ffffff\",\x0A\x0A        \"button.background\": \"#3d59a1dd\",\x0A        \"button.hoverBackground\": \"#3d59a1AA\",\x0A        \"button.secondaryBackground\": \"#41496b\",\x0A        \"button.foreground\": \"#ffffff\",\x0A        \"progressBar.background\": \"#3d59a1\",\x0A\x0A        \"input.background\": \"#1b1e2e\",\x0A        \"input.foreground\": \"#a9b1d6\",\x0A        \"input.border\": \"#282e44\",\x0A        \"input.placeholderForeground\": \"#4a5272\",\x0A        \"inputOption.activeForeground\": \"#c0caf5\",\x0A        \"inputOption.activeBackground\": \"#3d59a144\",\x0A\x0A        \"inputValidation.infoForeground\": \"#000000\",\x0A        \"inputValidation.infoBackground\": \"#0da0ba\",\x0A        \"inputValidation.infoBorder\": \"#0db9d7\",\x0A        \"inputValidation.warningForeground\": \"#000000\",\x0A        \"inputValidation.warningBackground\": \"#c2985b\",\x0A        \"inputValidation.warningBorder\": \"#e0af68\",\x0A        \"inputValidation.errorForeground\": \"#bbc2e0\",\x0A        \"inputValidation.errorBackground\": \"#85353e\",\x0A        \"inputValidation.errorBorder\": \"#963c47\",\x0A\x0A        \"dropdown.foreground\": \"#7982a9\",\x0A        \"dropdown.background\": \"#1b1e2e\",\x0A        \"dropdown.listBackground\": \"#1b1e2e\",\x0A\x0A        \"activityBar.background\": \"#1f2335\",\x0A        \"activityBar.foreground\": \"#7982a9\",\x0A        \"activityBar.inactiveForeground\": \"#41496b\",\x0A        \"activityBar.border\": \"#1f2335\",\x0A        \"activityBarBadge.background\": \"#3d59a1\",\x0A        \"activityBarBadge.foreground\": \"#fff\",\x0A\x0A        \"tree.indentGuidesStroke\": \"#2e344f\",\x0A        \"sideBar.foreground\": \"#7982a9\",\x0A        \"sideBar.background\": \"#1f2335\",\x0A        \"sideBar.border\": \"#1b1e2e\",\x0A        \"sideBarTitle.foreground\": \"#7982a9\",\x0A        \"sideBarSectionHeader.background\": \"#1f2335\",\x0A        \"sideBarSectionHeader.foreground\": \"#a9b1d6\",\x0A        \"sideBarSectionHeader.border\": \"#1b1e2e\",\x0A        \"sideBar.dropBackground\": \"#292e42\",\x0A\x0A        \"list.dropBackground\": \"#292e42\",\x0A        \"list.deemphasizedForeground\": \"#7982a9\",\x0A        \"list.activeSelectionBackground\": \"#2c324a\",\x0A\x0A        \"list.activeSelectionForeground\": \"#a9b1d6\",\x0A        \"list.inactiveSelectionBackground\": \"#292e42\",\x0A        \"list.inactiveSelectionForeground\": \"#a9b1d6\",\x0A        \"list.focusBackground\": \"#292e42\",\x0A        \"list.focusForeground\": \"#a9b1d6\",\x0A        \"list.hoverBackground\": \"#1b1e2e\",\x0A        \"list.hoverForeground\": \"#a9b1d6\",\x0A\x0A        \"list.highlightForeground\": \"#668ac4\",\x0A        \"list.invalidItemForeground\": \"#c97018\",\x0A        \"list.errorForeground\": \"#bb616b\",\x0A        \"list.warningForeground\": \"#c49a5a\",\x0A\x0A        \"listFilterWidget.background\": \"#1b1e2e\",\x0A        \"listFilterWidget.outline\": \"#3d59a1\",\x0A        \"listFilterWidget.noMatchesOutline\": \"#a6333f\",\x0A\x0A        \"pickerGroup.foreground\": \"#a9b1d6\",\x0A        \"pickerGroup.border\": \"#1b1e2e\",\x0A\x0A        \"scrollbarSlider.background\": \"#9cacff15\",\x0A        \"scrollbarSlider.hoverBackground\": \"#9cacff10\",\x0A        \"scrollbarSlider.activeBackground\": \"#9cacff22\",\x0A\x0A        \"editorBracketHighlight.foreground1\": \"#698cd6\",\x0A        \"editorBracketHighlight.foreground2\": \"#68b3de\",\x0A        \"editorBracketHighlight.foreground3\": \"#9a7ecc\",\x0A        \"editorBracketHighlight.foreground4\": \"#25aac2\",\x0A        \"editorBracketHighlight.foreground5\": \"#80a856\",\x0A        \"editorBracketHighlight.foreground6\": \"#cfa25f\",\x0A        \"editorBracketHighlight.unexpectedBracket.foreground\": \"#db4b4b\",\x0A\x0A        \"editorBracketPairGuide.activeBackground1\": \"#698cd6\",\x0A        \"editorBracketPairGuide.activeBackground2\": \"#68b3de\",\x0A        \"editorBracketPairGuide.activeBackground3\": \"#9a7ecc\",\x0A        \"editorBracketPairGuide.activeBackground4\": \"#25aac2\",\x0A        \"editorBracketPairGuide.activeBackground5\": \"#80a856\",\x0A        \"editorBracketPairGuide.activeBackground6\": \"#cfa25f\",\x0A\x0A        \"selection.background\": \"#7c89ca49\",\x0A        \"editor.background\": \"#24283b\",\x0A        \"editor.foreground\": \"#a9b1d6\",\x0A        \"editor.foldBackground\": \"#181b294a\",\x0A        \"editorLink.activeForeground\": \"#a9b1d6\",\x0A\x0A        \"editor.selectionBackground\": \"#6f7bb630\",\x0A        \"editor.inactiveSelectionBackground\": \"#6f7bb615\",\x0A\x0A        \"editor.findMatchBackground\": \"#3d59a166\",\x0A        \"editor.findMatchBorder\": \"#ffdb69aa\",\x0A        \"editor.findMatchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"editor.findRangeHighlightBackground\": \"#6f7bb625\",\x0A        \"editor.rangeHighlightBackground\": \"#aaa82c31\",\x0A        \"editor.wordHighlightBackground\": \"#6f7bb633\",\x0A        \"editor.wordHighlightStrongBackground\": \"#6f7bb644\",\x0A        \"editor.selectionHighlightBackground\": \"#6f7bb633\",\x0A\x0A        \"editorCursor.foreground\": \"#c0caf5\",\x0A        \"editorIndentGuide.background\": \"#292e42\",\x0A        \"editorIndentGuide.activeBackground\": \"#3b4261\",\x0A        \"editorLineNumber.foreground\": \"#3b4261\",\x0A        \"editorLineNumber.activeForeground\": \"#737aa2\",\x0A        \"editor.lineHighlightBackground\": \"#292e42\",\x0A        \"editorWhitespace.foreground\": \"#3b4261\",\x0A\x0A        \"editorMarkerNavigation.background\": \"#1f2335\",\x0A        \"editorHoverWidget.background\": \"#1f2335\",\x0A        \"editorHoverWidget.border\": \"#1b1e2e\",\x0A\x0A        \"editorBracketMatch.background\": \"#1f2335\",\x0A        \"editorBracketMatch.border\": \"#545c7e\",\x0A\x0A        \"editorOverviewRuler.border\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.errorForeground\": \"#db4b4b\",\x0A        \"editorOverviewRuler.warningForeground\": \"#e0af68\",\x0A        \"editorOverviewRuler.infoForeground\": \"#1abc9c\",\x0A        \"editorOverviewRuler.bracketMatchForeground\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.findMatchForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.rangeHighlightForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.selectionHighlightForeground\": \"#a9b1d622\",\x0A        \"editorOverviewRuler.wordHighlightForeground\": \"#bb9af755\",\x0A        \"editorOverviewRuler.wordHighlightStrongForeground\": \"#bb9af766\",\x0A        \"editorOverviewRuler.modifiedForeground\": \"#3d547a\",\x0A        \"editorOverviewRuler.addedForeground\": \"#164846\",\x0A        \"editorOverviewRuler.deletedForeground\": \"#703438\",\x0A\x0A        \"editorRuler.foreground\": \"#1b1e2e\",\x0A        \"editorError.foreground\": \"#db4b4b\",\x0A        \"editorWarning.foreground\": \"#e0af68\",\x0A        \"editorInfo.foreground\": \"#0da0ba\",\x0A        \"editorHint.foreground\": \"#0da0ba\",\x0A\x0A        \"editorGutter.modifiedBackground\": \"#3d547a\",\x0A        \"editorGutter.addedBackground\": \"#164846\",\x0A        \"editorGutter.deletedBackground\": \"#823c41\",\x0A\x0A        \"editorGhostText.foreground\": \"#7582ba\",\x0A\x0A        \"minimapGutter.modifiedBackground\": \"#3d547a\",\x0A        \"minimapGutter.addedBackground\": \"#1C5957\",\x0A        \"minimapGutter.deletedBackground\": \"#944449\",\x0A\x0A        \"editorGroup.border\": \"#1b1e2e\",\x0A        \"editorGroup.dropBackground\": \"#292e42\",\x0A        \"editorGroupHeader.tabsBorder\": \"#1b1e2e\",\x0A        \"editorGroupHeader.tabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.noTabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.border\": \"#1b1e2e\",\x0A\x0A        \"editorPane.background\": \"#1f2335\",\x0A\x0A        \"editorWidget.background\": \"#1f2335\",\x0A        \"editorWidget.resizeBorder\": \"#545c7e33\",\x0A\x0A        \"editorSuggestWidget.background\": \"#1f2335\",\x0A        \"editorSuggestWidget.border\": \"#1b1e2e\",\x0A        \"editorSuggestWidget.selectedBackground\": \"#282e44\",\x0A        \"editorSuggestWidget.highlightForeground\": \"#668ac4\",\x0A\x0A        \"editorCodeLens.foreground\": \"#565f89\",\x0A        \"editorLightBulb.foreground\": \"#e0af68\",\x0A        \"editorLightBulbAutoFix.foreground\": \"#e0af68\",\x0A\x0A        \"peekView.border\": \"#1b1e2e\",\x0A        \"peekViewEditor.background\": \"#1f2335\",\x0A        \"peekViewEditor.matchHighlightBackground\": \"#3d59a166\",\x0A        \"peekViewTitle.background\": \"#1b1e2e\",\x0A        \"peekViewTitleLabel.foreground\": \"#a9b1d6\",\x0A        \"peekViewTitleDescription.foreground\": \"#7982a9\",\x0A        \"peekViewResult.background\": \"#1b1e2e\",\x0A        \"peekViewResult.selectionForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.selectionBackground\": \"#3d59a133\",\x0A        \"peekViewResult.lineForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.fileForeground\": \"#7982a9\",\x0A        \"peekViewResult.matchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"diffEditor.insertedTextBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedTextBackground\": \"#db4b4b22\",\x0A        \"diffEditor.insertedLineBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorGutter.insertedLineBackground\": \"#41a6b525\",\x0A        \"diffEditorGutter.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorOverview.insertedForeground\": \"#41a6b525\",\x0A        \"diffEditorOverview.removedForeground\": \"#db4b4b22\",\x0A        \"diffEditor.diagonalFill\": \"#2c324a\",\x0A\x0A        \"breadcrumb.background\": \"#1f2335\",\x0A        \"breadcrumbPicker.background\": \"#1f2335\",\x0A        \"breadcrumb.foreground\": \"#545c7e\",\x0A        \"breadcrumb.focusForeground\": \"#a9b1d6\",\x0A        \"breadcrumb.activeSelectionForeground\": \"#a9b1d6\",\x0A\x0A        \"tab.activeBackground\": \"#1f2335\",\x0A        \"tab.inactiveBackground\": \"#1f2335\",\x0A        \"tab.activeForeground\": \"#a9b1d6\",\x0A        \"tab.hoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeBorder\": \"#3d59a1\",\x0A        \"tab.inactiveForeground\": \"#7982a9\",\x0A        \"tab.border\": \"#1b1e2e\",\x0A        \"tab.unfocusedActiveForeground\": \"#a9b1d6\",\x0A        \"tab.unfocusedInactiveForeground\": \"#7982a9\",\x0A        \"tab.unfocusedHoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeModifiedBorder\": \"#282d42\",\x0A        \"tab.inactiveModifiedBorder\": \"#282d42\",\x0A        \"tab.unfocusedActiveBorder\": \"#3b4261\",\x0A        \"tab.lastPinnedBorder\": \"#2c3147\",\x0A\x0A        \"panel.background\": \"#1f2335\",\x0A        \"panel.border\": \"#1b1e2e\",\x0A        \"panelTitle.activeForeground\": \"#a9b1d6\",\x0A        \"panelTitle.inactiveForeground\": \"#7982a9\",\x0A        \"panelTitle.activeBorder\": \"#3d59a1\",\x0A        \"panelInput.border\": \"#1f2335\",\x0A\x0A        \"statusBar.foreground\": \"#7982a9\",\x0A        \"statusBar.background\": \"#1f2335\",\x0A        \"statusBar.border\": \"#1b1e2e\",\x0A        \"statusBar.noFolderBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingForeground\": \"#7982a9\",\x0A        \"statusBarItem.activeBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.hoverBackground\": \"#282e44\",\x0A        \"statusBarItem.prominentBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.prominentHoverBackground\": \"#282e44\",\x0A\x0A        \"titleBar.activeForeground\": \"#7982a9\",\x0A        \"titleBar.inactiveForeground\": \"#7982a9\",\x0A        \"titleBar.activeBackground\": \"#1f2335\",\x0A        \"titleBar.inactiveBackground\": \"#1f2335\",\x0A        \"titleBar.border\": \"#1b1e2e\",\x0A\x0A        \"walkThrough.embeddedEditorBackground\": \"#1f2335\",\x0A        \"textLink.foreground\": \"#668ac4\",\x0A        \"textLink.activeForeground\": \"#7dcfff\",\x0A        \"textPreformat.foreground\": \"#73daca\",\x0A        \"textBlockQuote.background\": \"#1f2335\",\x0A        \"textCodeBlock.background\": \"#1f2335\",\x0A        \"textSeparator.foreground\": \"#545c7e\",\x0A\x0A        \"debugExceptionWidget.border\": \"#963c47\",\x0A        \"debugExceptionWidget.background\": \"#1b1e2e\",\x0A        \"debugToolBar.background\": \"#1b1e2e\",\x0A\x0A        \"debugConsole.infoForeground\": \"#7982a9\",\x0A        \"debugConsole.errorForeground\": \"#bb616b\",\x0A        \"debugConsole.sourceForeground\": \"#7982a9\",\x0A        \"debugConsole.warningForeground\": \"#c49a5a\",\x0A        \"debugConsoleInputIcon.foreground\": \"#73daca\",\x0A\x0A        \"editor.stackFrameHighlightBackground\": \"#e2bd3a20\",\x0A        \"editor.focusedStackFrameHighlightBackground\": \"#73daca20\",\x0A        \"debugView.stateLabelForeground\": \"#7982a9\",\x0A        \"debugView.stateLabelBackground\": \"#1b1e2e\",\x0A        \"debugView.valueChangedHighlight\": \"#3d59a1cc\",\x0A        \"debugTokenExpression.name\": \"#7dcfff\",\x0A        \"debugTokenExpression.value\": \"#9aa5ce\",\x0A        \"debugTokenExpression.string\": \"#9ece6a\",\x0A        \"debugTokenExpression.boolean\": \"#ff9e64\",\x0A        \"debugTokenExpression.number\": \"#ff9e64\",\x0A        \"debugTokenExpression.error\": \"#bb616b\",\x0A\x0A        \"debugIcon.breakpointForeground\": \"#db4b4b\",\x0A        \"debugIcon.breakpointDisabledForeground\": \"#545c7e\",\x0A        \"debugIcon.breakpointUnverifiedForeground\": \"#c24242\",\x0A\x0A        \"terminal.background\": \"#1f2335\",\x0A        \"terminal.foreground\": \"#7982a9\",\x0A        \"terminal.selectionBackground\": \"#6f7bb620\",\x0A\x0A        \"terminal.ansiBlack\": \"#414868\",\x0A        \"terminal.ansiRed\": \"#f7768e\",\x0A        \"terminal.ansiGreen\": \"#73daca\",\x0A        \"terminal.ansiYellow\": \"#e0af68\",\x0A        \"terminal.ansiBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiCyan\": \"#7dcfff\",\x0A        \"terminal.ansiWhite\": \"#7982a9\",\x0A        \"terminal.ansiBrightBlack\": \"#414868\",\x0A        \"terminal.ansiBrightRed\": \"#f7768e\",\x0A        \"terminal.ansiBrightGreen\": \"#73daca\",\x0A        \"terminal.ansiBrightYellow\": \"#e0af68\",\x0A        \"terminal.ansiBrightBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiBrightMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiBrightCyan\": \"#7dcfff\",\x0A        \"terminal.ansiBrightWhite\": \"#a9b1d6\",\x0A\x0A        \"gitDecoration.modifiedResourceForeground\": \"#6183bb\",\x0A        \"gitDecoration.ignoredResourceForeground\": \"#545c7e\",\x0A        \"gitDecoration.deletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.renamedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.addedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.untrackedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.conflictingResourceForeground\": \"#e0af68cc\",\x0A        \"gitDecoration.stageDeletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.stageModifiedResourceForeground\": \"#6183bb\",\x0A\x0A        \"notebook.editorBackground\": \"#24283b\",\x0A        \"notebook.cellEditorBackground\": \"#1f2335\",\x0A        \"notebook.cellBorderColor\": \"#1b1e2e\",\x0A        \"notebook.focusedCellBorder\": \"#29355a\",\x0A        \"notebook.cellStatusBarItemHoverBackground\": \"#2c324a\",\x0A\x0A        \"charts.red\": \"#f7768e\",\x0A        \"charts.blue\": \"#7aa2f7\",\x0A        \"charts.yellow\": \"#e0af68\",\x0A        \"charts.orange\": \"#ff9e64\",\x0A        \"charts.green\": \"#73daca\",\x0A        \"charts.purple\": \"#9d7cd8\",\x0A        \"charts.foreground\": \"#9AA5CE\",\x0A        \"charts.lines\": \"#1f2335\",\x0A\x0A        \"merge.currentHeaderBackground\": \"#41a6b525\",\x0A        \"merge.currentContentBackground\": \"#007a7544\",\x0A        \"merge.incomingHeaderBackground\": \"#3d59a1aa\",\x0A        \"merge.incomingContentBackground\": \"#3d59a144\",\x0A        \"mergeEditor.change.background\": \"#41a6b525\",\x0A        \"mergeEditor.change.word.background\": \"#41a6b540\",\x0A        \"mergeEditor.conflict.unhandledUnfocused.border\": \"#e0af6888\",\x0A        \"mergeEditor.conflict.unhandledFocused.border\": \"#e0af68d9\",\x0A        \"mergeEditor.conflict.handledUnfocused.border\": \"#41a6b525\",\x0A        \"mergeEditor.conflict.handledFocused.border\": \"#41a6b565\",\x0A        \"mergeEditor.conflict.handled.minimapOverViewRuler\": \"#449dab\",\x0A        \"mergeEditor.conflict.unhandled.minimapOverViewRuler\": \"#e0af68\",\x0A\x0A        \"gitlens.trailingLineForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterUncommittedForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterForegroundColor\": \"#565f89\",\x0A\x0A        \"notificationCenterHeader.background\": \"#1b1e2e\",\x0A        \"notifications.background\": \"#1b1e2e\",\x0A        \"notificationLink.foreground\": \"#6183bb\",\x0A        \"notificationsErrorIcon.foreground\": \"#bb616b\",\x0A        \"notificationsWarningIcon.foreground\": \"#bba461\",\x0A        \"notificationsInfoIcon.foreground\": \"#0da0ba\",\x0A\x0A        \"menubar.selectionForeground\": \"#c0caf5\",\x0A        \"menubar.selectionBackground\": \"#2f3549\",\x0A        \"menubar.selectionBorder\": \"#1b1e2e\",\x0A        \"menu.foreground\": \"#7982a9\",\x0A        \"menu.background\": \"#1f2335\",\x0A        \"menu.selectionForeground\": \"#c0caf5\",\x0A        \"menu.selectionBackground\": \"#2f3549\",\x0A        \"menu.separatorBackground\": \"#1b1e2e\",\x0A        \"menu.border\": \"#1b1e2e\"\x0A    },\x0A    \"tokenColors\": [{\x0A            \"name\": \"Italics - Comments, Storage, Keyword Flow, Vue attributes, Decorators\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"meta.var.expr storage.type\",\x0A                \"keyword.control.flow\",\x0A                \"keyword.control.return\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\",\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Fix YAML block scalar\",\x0A            \"scope\": \"keyword.control.flow.block-scalar.literal\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"comment.block.documentation\",\x0A                \"punctuation.definition.comment\",\x0A                \"comment.block.documentation punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc\",\x0A            \"scope\": [\x0A                \"keyword.operator.assignment.jsdoc\",\x0A                \"comment.block.documentation variable\",\x0A                \"comment.block.documentation storage\",\x0A                \"comment.block.documentation keyword\",\x0A                \"comment.block.documentation support\",\x0A                \"comment.block.documentation markup\",\x0A                \"comment.block.documentation markup.inline.raw.string.markdown\",\x0A                \"meta.other.type.phpdoc.php keyword.other.type.php\",\x0A                \"meta.other.type.phpdoc.php support.other.namespace.php\",\x0A                \"meta.other.type.phpdoc.php punctuation.separator.inheritance.php\",\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"keyword.other.phpdoc.php\",\x0A                \"log.date\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#6a75a8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc Emphasized\",\x0A            \"scope\": [\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"comment.block.documentation storage.type\",\x0A                \"comment.block.documentation punctuation.definition.block.tag\",\x0A                \"comment.block.documentation entity.name.type.instance\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7582ba\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Number, Boolean, Undefined, Null\",\x0A            \"scope\": [\x0A                \"variable.other.constant\",\x0A                \"punctuation.definition.constant\",\x0A                \"constant.language\",\x0A                \"constant.numeric\",\x0A                \"support.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"String, Symbols\",\x0A            \"scope\": [\x0A                \"string\",\x0A                \"constant.other.symbol\",\x0A                \"constant.other.key\",\x0A                \"meta.attribute-selector\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Colors\",\x0A            \"scope\": [\x0A                \"constant.other.color\",\x0A                \"constant.other.color.rgb-value.hex punctuation.definition.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid\",\x0A            \"scope\": [\x0A                \"invalid\",\x0A                \"invalid.illegal\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff5370\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid deprecated\",\x0A            \"scope\": \"invalid.deprecated\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage Type\",\x0A            \"scope\": \"storage.type\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage - modifier, var, const, let\",\x0A            \"scope\": [\x0A                \"meta.var.expr storage.type\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Interpolation / PHP tags / Smarty tags\",\x0A            \"scope\": [\x0A                \"punctuation.definition.template-expression\",\x0A                \"punctuation.section.embedded\",\x0A                \"meta.embedded.line.tag.smarty\",\x0A                \"support.constant.handlebars\",\x0A                \"punctuation.section.tag.twig\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Twig, Smarty, Blade, Handlebars keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.smarty\",\x0A                \"keyword.control.twig\",\x0A                \"support.constant.handlebars keyword.control\",\x0A                \"keyword.operator.comparison.twig\",\x0A                \"keyword.blade\",\x0A                \"entity.name.function.blade\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Spread\",\x0A            \"scope\": [\x0A                \"keyword.operator.spread\",\x0A                \"keyword.operator.rest\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\",\x0A                \"fontStyle\": \"bold\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Operator, Misc\",\x0A            \"scope\": [\x0A                \"keyword.operator\",\x0A                \"keyword.control.as\",\x0A                \"keyword.other\",\x0A                \"keyword.operator.bitwise.shift\",\x0A                \"punctuation\",\x0A                \"expression.embbeded.vue punctuation.definition.tag\",\x0A                \"text.html.twig meta.tag.inline.any.html\",\x0A                \"meta.tag.template.value.twig meta.function.arguments.twig\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"punctuation.definition.constant.markdown\",\x0A                \"punctuation.definition.string\",\x0A                \"punctuation.support.type.property-name\",\x0A                \"text.html.vue-html meta.tag\",\x0A                \"punctuation.definition.keyword\",\x0A                \"punctuation.terminator.rule\",\x0A                \"punctuation.definition.entity\",\x0A                \"punctuation.separator.inheritance.php\",\x0A                \"keyword.other.template\",\x0A                \"keyword.other.substitution\",\x0A                \"entity.name.operator\",\x0A                \"meta.property-list punctuation.separator.key-value\",\x0A                \"meta.at-rule.mixin punctuation.separator.key-value\",\x0A                \"meta.at-rule.function variable.parameter.url\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Import, Export, From, Default\",\x0A            \"scope\": [\x0A                \"keyword.control.import\",\x0A                \"keyword.control.export\",\x0A                \"keyword.control.from\",\x0A                \"keyword.control.default\",\x0A                \"meta.import keyword.other\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword\",\x0A            \"scope\": [\x0A                \"keyword\",\x0A                \"keyword.control\",\x0A                \"keyword.other.important\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f79aeb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword SQL\",\x0A            \"scope\": \"keyword.other.DML\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword Operator Logical, Arrow, Ternary, Comparison\",\x0A            \"scope\": [\x0A                \"keyword.operator.logical\",\x0A                \"storage.type.function\",\x0A                \"keyword.operator.bitwise\",\x0A                \"keyword.operator.ternary\",\x0A                \"keyword.operator.comparison\",\x0A                \"keyword.operator.relational\",\x0A                \"keyword.operator.or.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag\",\x0A            \"scope\": \"entity.name.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Component\",\x0A            \"scope\": [\x0A                \"entity.name.tag support.class.component\",\x0A                \"meta.tag\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#de5971\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Punctuation\",\x0A            \"scope\": \"punctuation.definition.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ba3c97\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Globals, PHP Constants, etc\",\x0A            \"scope\": [\x0A                \"constant.other.php\",\x0A                \"variable.other.global.safer\",\x0A                \"variable.other.global.safer punctuation.definition.variable\",\x0A                \"variable.other.global\",\x0A                \"variable.other.global punctuation.definition.variable\",\x0A                \"constant.other.haskell\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variables\",\x0A            \"scope\": [\x0A                \"variable\",\x0A                \"support.variable\",\x0A                \"string constant.other.placeholder\",\x0A                \"variable.parameter.handlebars\",\x0A                \"variable.other.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \" Variable Array Key\",\x0A            \"scope\": \"meta.array.literal variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Key\",\x0A            \"scope\": [\x0A                \"meta.object-literal.key\",\x0A                \"entity.name.type.hcl\",\x0A                \"string.alias.graphql\",\x0A                \"string.unquoted.graphql\",\x0A                \"string.unquoted.alias.graphql\",\x0A                \"meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js\",\x0A                \"meta.field.declaration.ts variable.object.property\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": [\x0A                \"variable.other.property\",\x0A                \"support.variable.property\",\x0A                \"support.variable.property.dom\",\x0A                \"meta.function-call variable.other.object.property\",\x0A                \"variable.other.object.property.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": \"variable.other.object.property\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Literal Member lvl 3 (Vue Prop Validation)\",\x0A            \"scope\": \"meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.object-literal.key\",\x0A            \"settings\": {\x0A                \"foreground\": \"#41a6b5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"C-related Block Level Variables\",\x0A            \"scope\": \"source.cpp meta.block variable.other\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Other Variable\",\x0A            \"scope\": \"support.other.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Methods\",\x0A            \"scope\": [\x0A                \"meta.class-method.js entity.name.function.js\",\x0A                \"entity.name.method.js\",\x0A                \"variable.function.constructor\",\x0A                \"keyword.other.special-method\",\x0A                \"storage.type.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Definition\",\x0A            \"scope\": [\x0A                \"entity.name.function\",\x0A                \"variable.other.enummember\",\x0A                \"meta.function-call\",\x0A                \"meta.function-call entity.name.function\",\x0A                \"variable.function\",\x0A                \"meta.definition.method entity.name.function\",\x0A                \"meta.object-literal entity.name.function\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Argument\",\x0A            \"scope\": [\x0A                \"variable.parameter.function.language.special\",\x0A                \"variable.parameter\",\x0A                \"meta.function.parameters punctuation.definition.variable\",\x0A                \"meta.function.parameter variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0ce68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Constant, Tag Attribute\",\x0A            \"scope\": [\x0A                \"keyword.other.type.php\",\x0A                \"storage.type.php\",\x0A                \"constant.character\",\x0A                \"constant.escape\",\x0A                \"keyword.other.unit\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable Definition\",\x0A            \"scope\": [\x0A                \"meta.definition.variable variable.other.constant\",\x0A                \"meta.definition.variable variable.other.readwrite\",\x0A                \"variable.declaration.hcl variable.other.readwrite.hcl\",\x0A                \"meta.mapping.key.hcl variable.other.readwrite.hcl\",\x0A                \"variable.other.declaration\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inherited Class\",\x0A            \"scope\": \"entity.other.inherited-class\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class, Support, DOM, etc\",\x0A            \"scope\": [\x0A                \"support.class\",\x0A                \"support.type\",\x0A                \"variable.other.readwrite.alias\",\x0A                \"support.orther.namespace.use.php\",\x0A                \"meta.use.php\",\x0A                \"support.other.namespace.php\",\x0A                \"support.type.sys-types\",\x0A                \"support.variable.dom\",\x0A                \"support.constant.math\",\x0A                \"support.type.object.module\",\x0A                \"support.constant.json\",\x0A                \"entity.name.namespace\",\x0A                \"meta.import.qualifier\",\x0A                \"variable.other.constant.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class Name\",\x0A            \"scope\": \"entity.name\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Support Function\",\x0A            \"scope\": \"support.function\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class and Support\",\x0A            \"scope\": [\x0A                \"source.css support.type.property-name\",\x0A                \"source.sass support.type.property-name\",\x0A                \"source.scss support.type.property-name\",\x0A                \"source.less support.type.property-name\",\x0A                \"source.stylus support.type.property-name\",\x0A                \"source.postcss support.type.property-name\",\x0A                \"support.type.property-name.css\",\x0A                \"support.type.vendored.property-name\",\x0A                \"support.type.map.key\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Font\",\x0A            \"scope\": [\x0A                \"support.constant.font-name\",\x0A                \"meta.definition.variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.class\",\x0A                \"meta.at-rule.mixin.scss entity.name.function.scss\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\",\x0A            \"scope\": \"entity.other.attribute-name.id\",\x0A            \"settings\": {\x0A                \"foreground\": \"#fc7b7b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag\",\x0A            \"scope\": \"entity.name.tag.css\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag Reference, Pseudo & Class Punctuation\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.pseudo-element punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.class punctuation.definition.entity\",\x0A                \"entity.name.tag.reference\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation\",\x0A            \"scope\": \"meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS at-rule fix\",\x0A            \"scope\": [\x0A                \"meta.property-list meta.at-rule.if\",\x0A                \"meta.at-rule.return variable.parameter.url\",\x0A                \"meta.property-list meta.at-rule.else\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Parent Selector Entity\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.parent-selector-suffix punctuation.definition.entity.css\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation comma fix\",\x0A            \"scope\": \"meta.property-list meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS @\",\x0A            \"scope\": [\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.include entity.name.function.scss\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Mixins, Extends, Include Keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.at-rule.include punctuation.definition.keyword\",\x0A                \"keyword.control.at-rule.mixin punctuation.definition.keyword\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\",\x0A                \"keyword.control.at-rule.extend punctuation.definition.keyword\",\x0A                \"meta.at-rule.extend keyword.control.at-rule.extend\",\x0A                \"entity.other.attribute-name.placeholder.css punctuation.definition.entity.css\",\x0A                \"meta.at-rule.media keyword.control.at-rule.media\",\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.function keyword.control.at-rule.function\",\x0A                \"keyword.control punctuation.definition.keyword\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Include Mixin Argument\",\x0A            \"scope\": \"meta.property-list meta.at-rule.include\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS value\",\x0A            \"scope\": \"support.constant.property-value\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Sub-methods\",\x0A            \"scope\": [\x0A                \"entity.name.module.js\",\x0A                \"variable.import.parameter.js\",\x0A                \"variable.other.class.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Language methods\",\x0A            \"scope\": \"variable.language\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable punctuation\",\x0A            \"scope\": \"variable.other punctuation.definition.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword this with Punctuation, ES7 Bind Operator\",\x0A            \"scope\": [\x0A                \"source.js constant.other.object.key.js string.unquoted.label.js\",\x0A                \"variable.language.this punctuation.definition.variable\",\x0A                \"keyword.other.this\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name\",\x0A                \"text.html.basic entity.other.attribute-name.html\",\x0A                \"text.html.basic entity.other.attribute-name\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Character Entity\",\x0A            \"scope\": \"text.html constant.character.entity\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2AC3DE\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Vue Template attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.id.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\'s\",\x0A            \"scope\": \"source.sass keyword.control\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS psuedo selectors\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class\",\x0A                \"entity.other.attribute-name.pseudo-element\",\x0A                \"entity.other.attribute-name.placeholder\",\x0A                \"meta.property-list meta.property-value\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inserted\",\x0A            \"scope\": \"markup.inserted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#449dab\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Deleted\",\x0A            \"scope\": \"markup.deleted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#914c54\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Changed\",\x0A            \"scope\": \"markup.changed\",\x0A            \"settings\": {\x0A                \"foreground\": \"#6183bb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions\",\x0A            \"scope\": \"string.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b4f9f8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Punctuation\",\x0A            \"scope\": \"punctuation.definition.group\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class Set\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.set.regexp\",\x0A                \"punctuation.definition.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Quantifier\",\x0A            \"scope\": \"keyword.operator.quantifier.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Backslash\",\x0A            \"scope\": \"constant.character.escape.backslash\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Escape Characters\",\x0A            \"scope\": \"constant.character.escape\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Decorators\",\x0A            \"scope\": [\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Units\",\x0A            \"scope\": \"keyword.other.unit\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 0\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 1\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 2\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 3\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 4\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 5\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 6\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 7\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 8\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Plain Punctuation\",\x0A            \"scope\": \"punctuation.definition.list_item.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Block Punctuation\",\x0A            \"scope\": [\x0A                \"meta.block\",\x0A                \"meta.brace\",\x0A                \"punctuation.definition.block\",\x0A                \"punctuation.definition.use\",\x0A                \"punctuation.definition.class\",\x0A                \"punctuation.definition.begin.bracket\",\x0A                \"punctuation.definition.end.bracket\",\x0A                \"punctuation.definition.switch-expression.begin.bracket\",\x0A                \"punctuation.definition.switch-expression.end.bracket\",\x0A                \"punctuation.definition.section.switch-block.begin.bracket\",\x0A                \"punctuation.definition.section.switch-block.end.bracket\",\x0A                \"punctuation.definition.group.shell\",\x0A                \"punctuation.definition.parameters\",\x0A                \"punctuation.definition.arguments\",\x0A                \"punctuation.definition.dictionary\",\x0A                \"punctuation.definition.array\",\x0A                \"punctuation.section\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Plain\",\x0A            \"scope\": [\x0A                \"meta.jsx.children\",\x0A                \"meta.embedded.block\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML text\",\x0A            \"scope\": \"text.html\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline Punctuation\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown punctuation.definition.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 1\",\x0A            \"scope\": [\x0A                \"heading.1.markdown entity.name\",\x0A                \"heading.1.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 2\",\x0A            \"scope\": [\x0A                \"heading.2.markdown entity.name\",\x0A                \"heading.2.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#61bdf2\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 3\",\x0A            \"scope\": [\x0A                \"heading.3.markdown entity.name\",\x0A                \"heading.3.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 4\",\x0A            \"scope\": [\x0A                \"heading.4.markdown entity.name\",\x0A                \"heading.4.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#6d91de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 5\",\x0A            \"scope\": [\x0A                \"heading.5.markdown entity.name\",\x0A                \"heading.5.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 6\",\x0A            \"scope\": [\x0A                \"heading.6.markdown entity.name\",\x0A                \"heading.6.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#747ca1\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Italic\",\x0A            \"scope\": [\x0A                \"markup.italic\",\x0A                \"markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold\",\x0A            \"scope\": [\x0A                \"markup.bold\",\x0A                \"markup.bold punctuation\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold-Italic\",\x0A            \"scope\": [\x0A                \"markup.bold markup.italic\",\x0A                \"markup.bold markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Underline\",\x0A            \"scope\": [\x0A                \"markup.underline\",\x0A                \"markup.underline punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"underline\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Blockquote\",\x0A            \"scope\": \"markup.quote punctuation.definition.blockquote.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Quote\",\x0A            \"scope\": \"markup.quote\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Link\",\x0A            \"scope\": [\x0A                \"string.other.link\",\x0A                \"markup.underline.link\",\x0A                \"constant.other.reference.link.markdown\",\x0A                \"string.other.link.description.title.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Fenced Code Block\",\x0A            \"scope\": [\x0A                \"markup.fenced_code.block.markdown\",\x0A                \"markup.inline.raw.string.markdown\",\x0A                \"variable.language.fenced.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Separator\",\x0A            \"scope\": \"meta.separator\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Table\",\x0A            \"scope\": \"markup.table\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0cefc\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Info\",\x0A            \"scope\": \"token.info-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#0db9d7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Warn\",\x0A            \"scope\": \"token.warn-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ffdb69\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Error\",\x0A            \"scope\": \"token.error-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#db4b4b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Debug\",\x0A            \"scope\": \"token.debug-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b267e6\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Apache Tag\",\x0A            \"scope\": \"entity.tag.apacheconf\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Preprocessor\",\x0A            \"scope\": [\x0A                \"meta.preprocessor\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"ENV value\",\x0A            \"scope\": \"source.env\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        }\x0A    ]\x0A}"), [115,116,114,105,110,103]);
  if (!isSome_1291851014(oHEX60gensym0_536870953)) Temporary287 = false; else {    var theme_536870976 = get_1291851034(oHEX60gensym0_536870953);
    Temporary287 = true;  }if (Temporary287) {
ed_536870949[0].theme = theme_536870976;
}

setLayout_1291856836(ed_536870949[0], [102,105,98,111,110,97,99,99,105]);
var frameTime_536870977 = [0.0];
var frameIndex_536870978 = [0];
var hasRequestedRerender_536870979 = [false];
var isRenderInProgress_536870980 = [false];

function add_2785018080(self_2785018081, child_2785018082) {
    child_2785018082.parent = self_2785018081;
    self_2785018081.children.push(child_2785018082);;

  
}

function color_2550136904(r_2550136905, g_2550136906, b_2550136907, a_2550136908) {
  var result_2550136909 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2550136909 = nimCopy(result_2550136909, {r: r_2550136905, g: g_2550136906, b: b_2550136907, a: a_2550136908}, NTI2550136835);

  return result_2550136909;

}

function setLen_2785018073(self_2785018074, len_2785018075) {
    if (self_2785018074.children.length < chckRange(len_2785018075, 0, 2147483647)) { for (var i = self_2785018074.children.length ; i < chckRange(len_2785018075, 0, 2147483647) ; ++i) self_2785018074.children.push(null); }
               else { self_2785018074.children.length = chckRange(len_2785018075, 0, 2147483647); };

  
}

function rawGet_3388997778(t_3388997781, key_3388997782, hc_3388997783, hc_3388997783_Idx) {
  var result_3388997784 = 0;

  BeforeRet: {
    hc_3388997783[hc_3388997783_Idx] = hash_1325400236(key_3388997782);
    if ((hc_3388997783[hc_3388997783_Idx] == 0)) {
    hc_3388997783[hc_3388997783_Idx] = 314159265;
    }
    
    if (((t_3388997781.data).length == 0)) {
    result_3388997784 = -1;
    break BeforeRet;
    }
    
    var h_3388997839 = (hc_3388997783[hc_3388997783_Idx] & (t_3388997781.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3388997781.data[chckIndx(h_3388997839, 0, (t_3388997781.data).length - 1)].Field0)) break Label2;
          if (((t_3388997781.data[chckIndx(h_3388997839, 0, (t_3388997781.data).length - 1)].Field0 == hc_3388997783[hc_3388997783_Idx]) && (t_3388997781.data[chckIndx(h_3388997839, 0, (t_3388997781.data).length - 1)].Field1 == key_3388997782))) {
          result_3388997784 = h_3388997839;
          break BeforeRet;
          }
          
          h_3388997839 = nextTry_1308622883(h_3388997839, (t_3388997781.data).length - 1);
        }
    };
    result_3388997784 = subInt(-1, h_3388997839);
  };

  return result_3388997784;

}

function hasKey_3388997771(t_3388997774, key_3388997775) {
  var result_3388997776 = false;

    var hc_3388997777 = [0];
    result_3388997776 = (0 <= rawGet_3388997778(t_3388997774, key_3388997775, hc_3388997777, 0));

  return result_3388997776;

}

function contains_3388997765(t_3388997768, key_3388997769) {
  var result_3388997770 = false;

  BeforeRet: {
    result_3388997770 = hasKey_3388997771(t_3388997768, key_3388997769);
    break BeforeRet;
  };

  return result_3388997770;

}

function HEX5BHEX5D_3388998064(t_3388998067, key_3388998068) {
  var result_3388998069 = null;
  var result_3388998069_Idx = 0;

    var hcHEX60gensym22_3388998070 = [0];
    var indexHEX60gensym22_3388998077 = rawGet_3388997778(t_3388998067, key_3388998068, hcHEX60gensym22_3388998070, 0);
    if ((0 <= indexHEX60gensym22_3388998077)) {
    result_3388998069 = t_3388998067.data[chckIndx(indexHEX60gensym22_3388998077, 0, (t_3388998067.data).length - 1)]; result_3388998069_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3388998068);
    }
    

  return [result_3388998069, result_3388998069_Idx];

}

function mustRehash_3388998356(t_3388998358) {
  var result_3388998359 = false;

    if (!((t_3388998358.counter < (t_3388998358.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3388998359 = ((mulInt((t_3388998358.data).length, 2) < mulInt(t_3388998358.counter, 3)) || (subInt((t_3388998358.data).length, t_3388998358.counter) < 4));

  return result_3388998359;

}

function rawInsert_3388998805(t_3388998809, data_3388998810, data_3388998810_Idx, key_3388998811, val_3388998812, hc_3388998813, h_3388998814) {
    data_3388998810[data_3388998810_Idx][chckIndx(h_3388998814, 0, (data_3388998810[data_3388998810_Idx]).length - 1)].Field1 = key_3388998811;
    data_3388998810[data_3388998810_Idx][chckIndx(h_3388998814, 0, (data_3388998810[data_3388998810_Idx]).length - 1)].Field2 = val_3388998812;
    data_3388998810[data_3388998810_Idx][chckIndx(h_3388998814, 0, (data_3388998810[data_3388998810_Idx]).length - 1)].Field0 = hc_3388998813;

  
}

function enlarge_3388998511(t_3388998514) {
    var n_3388998517 = [];
    n_3388998517 = new Array(chckRange(mulInt((t_3388998514.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3388998514.data).length, 2), 0, 2147483647) ; ++i) { n_3388998517[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3388998514.data; t_3388998514.data = n_3388998517; n_3388998517 = Temporary1;    Label2: {
      var i_3388998581 = 0;
      var colontmp__536871862 = 0;
      colontmp__536871862 = (n_3388998517).length - 1;
      var res_536871863 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871863 <= colontmp__536871862)) break Label4;
            i_3388998581 = res_536871863;
            var eh_3388998635 = n_3388998517[chckIndx(i_3388998581, 0, (n_3388998517).length - 1)].Field0;
            if (isFilled_1308622880(eh_3388998635)) {
            var j_3388998639 = (eh_3388998635 & (t_3388998514.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3388998514.data[chckIndx(j_3388998639, 0, (t_3388998514.data).length - 1)].Field0)) break Label6;
                  j_3388998639 = nextTry_1308622883(j_3388998639, (t_3388998514.data).length - 1);
                }
            };
            rawInsert_3388998805(t_3388998514, t_3388998514, "data", n_3388998517[chckIndx(i_3388998581, 0, (n_3388998517).length - 1)].Field1, n_3388998517[chckIndx(i_3388998581, 0, (n_3388998517).length - 1)].Field2, eh_3388998635, j_3388998639);
            }
            
            res_536871863 = addInt(res_536871863, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3388998974(t_3388998977, key_3388998978, hc_3388998979) {
  var result_3388998980 = 0;

  BeforeRet: {
    if (((t_3388998977.data).length == 0)) {
    result_3388998980 = -1;
    break BeforeRet;
    }
    
    var h_3388999031 = (hc_3388998979 & (t_3388998977.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3388998977.data[chckIndx(h_3388999031, 0, (t_3388998977.data).length - 1)].Field0)) break Label2;
          if (((t_3388998977.data[chckIndx(h_3388999031, 0, (t_3388998977.data).length - 1)].Field0 == hc_3388998979) && (t_3388998977.data[chckIndx(h_3388999031, 0, (t_3388998977.data).length - 1)].Field1 == key_3388998978))) {
          result_3388998980 = h_3388999031;
          break BeforeRet;
          }
          
          h_3388999031 = nextTry_1308622883(h_3388999031, (t_3388998977.data).length - 1);
        }
    };
    result_3388998980 = subInt(-1, h_3388999031);
  };

  return result_3388998980;

}

function HEX5BHEX5DHEX3D_3388998183(t_3388998186, key_3388998187, val_3388998188) {
    if (((t_3388998186.data).length == 0)) {
    var correctSizeHEX60gensym5_3388998237 = slotsNeeded_1308622891(32);
    t_3388998186.counter = 0;
    t_3388998186.data = new Array(chckRange(correctSizeHEX60gensym5_3388998237, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym5_3388998237, 0, 2147483647) ; ++i) { t_3388998186.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3388998242 = [0];
    var index_3388998249 = rawGet_3388997778(t_3388998186, key_3388998187, hc_3388998242, 0);
    if ((0 <= index_3388998249)) {
    t_3388998186.data[chckIndx(index_3388998249, 0, (t_3388998186.data).length - 1)].Field2 = val_3388998188;
    }
    else {
      if (((t_3388998186.data).length == 0)) {
      var correctSizeHEX60gensym8_3388998351 = slotsNeeded_1308622891(32);
      t_3388998186.counter = 0;
      t_3388998186.data = new Array(chckRange(correctSizeHEX60gensym8_3388998351, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3388998351, 0, 2147483647) ; ++i) { t_3388998186.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3388998356(t_3388998186)) {
      enlarge_3388998511(t_3388998186);
      index_3388998249 = rawGetKnownHC_3388998974(t_3388998186, key_3388998187, hc_3388998242[0]);
      }
      
      index_3388998249 = subInt(-1, index_3388998249);
      rawInsert_3388998805(t_3388998186, t_3388998186, "data", key_3388998187, val_3388998188, hc_3388998242[0], index_3388998249);
      t_3388998186.counter = addInt(t_3388998186.counter, 1);
    }
    

  
}

function activeHEX3D_2415919215(self_2415919216, newActive_2415919217) {
    if (!((newActive_2415919217 == self_2415919216.active))) {
    markDirty_2415919143(self_2415919216);
    }
    
    self_2415919216.active = newActive_2415919217;

  
}

function HEX5BHEX5D_3388999224(s_3388999228, x_3388999229) {
  var result_3388999230 = [];

    var a_3388999232 = x_3388999229.a;
    var L_3388999238 = addInt(subInt(subInt((s_3388999228).length, x_3388999229.b), a_3388999232), 1);
    result_3388999230 = new Array(chckRange(L_3388999238, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3388999238, 0, 2147483647) ; ++i) { result_3388999230[i] = null; }    Label1: {
      var i_3388999247 = 0;
      var i_536871867 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871867 < L_3388999238)) break Label3;
            i_3388999247 = i_536871867;
            result_3388999230[chckIndx(i_3388999247, 0, (result_3388999230).length - 1)] = s_3388999228[chckIndx(addInt(i_3388999247, a_3388999232), 0, (s_3388999228).length - 1)];
            i_536871867 = addInt(i_536871867, 1);
          }
      };
    };

  return result_3388999230;

}

function find_3388999452(a_3388999455, item_3388999456) {
  var result_3388999457 = 0;

  BeforeRet: {
    result_3388999457 = 0;
    Label1: {
      var i_3388999470 = null;
      var i_536871871 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871871 < (a_3388999455).length)) break Label3;
            i_3388999470 = a_3388999455[chckIndx(i_536871871, 0, (a_3388999455).length - 1)];
            if ((i_3388999470 == item_3388999456)) {
            break BeforeRet;
            }
            
            result_3388999457 = addInt(result_3388999457, 1);
            i_536871871 = addInt(i_536871871, 1);
          }
      };
    };
    result_3388999457 = -1;
  };

  return result_3388999457;

}

function contains_3388999447(a_3388999449, item_3388999450) {
  var result_3388999451 = false;

  BeforeRet: {
    result_3388999451 = (0 <= find_3388999452(a_3388999449, item_3388999450));
    break BeforeRet;
  };

  return result_3388999451;

}

function contains_2130706618(a_2130706619, b_2130706620) {
  var result_2130706621 = false;

  BeforeRet: {
    result_2130706621 = ((((a_2130706619.x <= b_2130706620.x) && ((b_2130706620.x + b_2130706620.w) <= (a_2130706619.x + a_2130706619.w))) && (a_2130706619.y <= b_2130706620.y)) && ((b_2130706620.y + b_2130706620.h) <= (a_2130706619.y + a_2130706619.h)));
    break BeforeRet;
  };

  return result_2130706621;

}

function invalidate_2785018438(self_2785018439, currentIndex_2785018440, rect_2785018441) {
  BeforeRet: {
    if ((!(intersects_2130706609(self_2785018439.lastBounds, rect_2785018441)) || ((currentIndex_2785018440 <= self_2785018439.lastInvalidation) && contains_2130706618(self_2785018439.lastInvalidationRect, rect_2785018441)))) {
    break BeforeRet;
    }
    
    self_2785018439.lastInvalidationRect = nimCopy(self_2785018439.lastInvalidationRect, and_2147483732(rect_2785018441, self_2785018439.lastBounds), NTI2147483653);
    self_2785018439.lastInvalidation = currentIndex_2785018440;
    if (isObj(self_2785018439.m_type, NTI2785017871)) {
    Label1: {
      var c_2785018451 = null;
      var colontmp__536871874 = [];
      colontmp__536871874 = self_2785018439.children;
      var i_536871875 = 0;
      var L_536871876 = (colontmp__536871874).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871875 < L_536871876)) break Label3;
            c_2785018451 = colontmp__536871874[chckIndx(i_536871875, 0, (colontmp__536871874).length - 1)];
            invalidate_2785018438(c_2785018451, currentIndex_2785018440, self_2785018439.lastInvalidationRect);
            i_536871875 = addInt(i_536871875, 1);
            if (!(((colontmp__536871874).length == L_536871876))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018439.m_type, NTI2785017873)) {
    Label4: {
      var c_2785018461 = null;
      var colontmp__536871879 = [];
      colontmp__536871879 = self_2785018439.children;
      var i_536871880 = 0;
      var L_536871881 = (colontmp__536871879).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871880 < L_536871881)) break Label6;
            c_2785018461 = colontmp__536871879[chckIndx(i_536871880, 0, (colontmp__536871879).length - 1)];
            invalidate_2785018438(c_2785018461, currentIndex_2785018440, self_2785018439.lastInvalidationRect);
            i_536871880 = addInt(i_536871880, 1);
            if (!(((colontmp__536871879).length == L_536871881))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018439.m_type, NTI2785017875)) {
    Label7: {
      var c_2785018471 = null;
      var colontmp__536871884 = [];
      colontmp__536871884 = self_2785018439.children;
      var i_536871885 = 0;
      var L_536871886 = (colontmp__536871884).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871885 < L_536871886)) break Label9;
            c_2785018471 = colontmp__536871884[chckIndx(i_536871885, 0, (colontmp__536871884).length - 1)];
            invalidate_2785018438(c_2785018471, currentIndex_2785018440, self_2785018439.lastInvalidationRect);
            i_536871885 = addInt(i_536871885, 1);
            if (!(((colontmp__536871884).length == L_536871886))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018439.m_type, NTI2785017877)) {
    Label10: {
      var c_2785018481 = null;
      var colontmp__536871889 = [];
      colontmp__536871889 = self_2785018439.children;
      var i_536871890 = 0;
      var L_536871891 = (colontmp__536871889).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871890 < L_536871891)) break Label12;
            c_2785018481 = colontmp__536871889[chckIndx(i_536871890, 0, (colontmp__536871889).length - 1)];
            invalidate_2785018438(c_2785018481, currentIndex_2785018440, self_2785018439.lastInvalidationRect);
            i_536871890 = addInt(i_536871890, 1);
            if (!(((colontmp__536871889).length == L_536871891))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}
  };

  
}

function len_2785018037(self_2785018038) {
  var result_2785018039 = 0;

    result_2785018039 = (self_2785018038.children).length;

  return result_2785018039;

}

function HEX5BHEX5D_2785018033(self_2785018034, index_2785018035) {
  var result_2785018036 = null;

    result_2785018036 = self_2785018034.children[chckIndx(index_2785018035, 0, (self_2785018034.children).length - 1)];

  return result_2785018036;

}

function hasKey_3221226060(t_3221226063, key_3221226064) {
  var result_3221226065 = false;

    var hc_3221226066 = [0];
    result_3221226065 = (0 <= rawGet_2516583429(t_3221226063, key_3221226064, hc_3221226066, 0));

  return result_3221226065;

}

function contains_3221226054(t_3221226057, key_3221226058) {
  var result_3221226059 = false;

  BeforeRet: {
    result_3221226059 = hasKey_3221226060(t_3221226057, key_3221226058);
    break BeforeRet;
  };

  return result_3221226059;

}

function HEX5BHEX5D_3221226144(t_3221226147, key_3221226148) {
  var result_3221226149 = null;

    var hcHEX60gensym22_3221226150 = [0];
    var indexHEX60gensym22_3221226157 = rawGet_2516583429(t_3221226147, key_3221226148, hcHEX60gensym22_3221226150, 0);
    if ((0 <= indexHEX60gensym22_3221226157)) {
    result_3221226149 = t_3221226147.data[chckIndx(indexHEX60gensym22_3221226157, 0, (t_3221226147.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_3221226148);
    }
    

  return result_3221226149;

}

function max_855639778(x_855639780, y_855639781) {
    var Temporary1;

  var result_855639782 = 0;

    if ((y_855639781 <= x_855639780)) {
    Temporary1 = x_855639780;
    }
    else {
    Temporary1 = y_855639781;
    }
    
    result_855639782 = Temporary1;

  return result_855639782;

}

function nsuRFindStr(s_855639772, sub_855639773, start_855639774, last_855639775) {
    var Temporary1;
    var Temporary2;

  var result_855639776 = 0;

  BeforeRet: {
    if (((sub_855639773).length == 0)) {
    if ((last_855639775 < 0)) {
    Temporary1 = (s_855639772).length;
    }
    else {
    Temporary1 = last_855639775;
    }
    
    var rightIndex_855639777 = chckRange(Temporary1, 0, 2147483647);
    result_855639776 = max_855639778(start_855639774, rightIndex_855639777);
    break BeforeRet;
    }
    
    if ((subInt((s_855639772).length, start_855639774) < (sub_855639773).length)) {
    result_855639776 = -1;
    break BeforeRet;
    }
    
    if ((last_855639775 == -1)) {
    Temporary2 = (s_855639772).length - 1;
    }
    else {
    Temporary2 = last_855639775;
    }
    
    var last_855639783 = Temporary2;
    result_855639776 = 0;
    Label3: {
      var i_855639789 = 0;
      var colontmp__536871898 = 0;
      var colontmp__536871899 = 0;
      colontmp__536871898 = addInt(subInt(last_855639783, (sub_855639773).length), 1);
      colontmp__536871899 = start_855639774;
      var res_536871900 = colontmp__536871898;
      Label4: {
          Label5: while (true) {
          if (!(colontmp__536871899 <= res_536871900)) break Label5;
            i_855639789 = res_536871900;
            Label6: {
              var j_855639794 = 0;
              var colontmp__536871895 = 0;
              colontmp__536871895 = subInt((sub_855639773).length, 1);
              var res_536871896 = 0;
              Label7: {
                  Label8: while (true) {
                  if (!(res_536871896 <= colontmp__536871895)) break Label8;
                    j_855639794 = res_536871896;
                    result_855639776 = i_855639789;
                    if (!((sub_855639773[chckIndx(j_855639794, 0, (sub_855639773).length - 1)] == s_855639772[chckIndx(addInt(i_855639789, j_855639794), 0, (s_855639772).length - 1)]))) {
                    result_855639776 = -1;
                    break Label6;
                    }
                    
                    res_536871896 = addInt(res_536871896, 1);
                  }
              };
            };
            if (!((result_855639776 == -1))) {
            break BeforeRet;
            }
            
            res_536871900 = subInt(res_536871900, 1);
          }
      };
    };
    result_855639776 = -1;
    break BeforeRet;
  };

  return result_855639776;

}

function getCascading_3439329461(table_3439329463, key_3439329464, default_3439329465) {
  var result_3439329466 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (contains_3221226054(table_3439329463, key_3439329464)) {
    result_3439329466 = nimCopy(result_3439329466, HEX5BHEX5D_3221226144(table_3439329463, key_3439329464), NTI2550136835);
    break BeforeRet;
    }
    
    var index_3439329572 = nsuRFindStr(key_3439329464, [46], 0, -1);
    if (!((index_3439329572 == -1))) {
    result_3439329466 = nimCopy(result_3439329466, getCascading_3439329461(table_3439329463, HEX5BHEX5D_855639291(key_3439329464, HEX2EHEX2E_805306418(0, subInt(index_3439329572, 1))), default_3439329465), NTI2550136835);
    break BeforeRet;
    }
    
    result_3439329466 = nimCopy(result_3439329466, default_3439329465, NTI2550136835);
    break BeforeRet;
  };

  return result_3439329466;

}

function color_3439329450(theme_3439329452, name_3439329453, default_3439329454) {
  var result_3439329455 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3439329455 = nimCopy(result_3439329455, getCascading_3439329461(theme_3439329452.colors, name_3439329453, color_2634022945(default_3439329454)), NTI2550136835);
    break BeforeRet;
  };

  return result_3439329455;

}

function HEX3DHEX3D_2785018351(x_2785018353, y_2785018354) {
  var result_2785018355 = false;

  BeforeRet: {
    if (!((x_2785018353.r == y_2785018354.r))) {
    result_2785018355 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018353.g == y_2785018354.g))) {
    result_2785018355 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018353.b == y_2785018354.b))) {
    result_2785018355 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018353.a == y_2785018354.a))) {
    result_2785018355 = false;
    break BeforeRet;
    }
    
    result_2785018355 = true;
    break BeforeRet;
  };

  return result_2785018355;

}

function updateForegroundColor_2785018347(self_2785018348, color_2785018349, frameIndex_2785018350) {
    if (!(HEX3DHEX3D_2785018351(self_2785018348.foregroundColor, color_2785018349))) {
    self_2785018348.lastHierarchyChange = nimMax(self_2785018348.lastHierarchyChange, frameIndex_2785018350);
    }
    
    self_2785018348.foregroundColor = nimCopy(self_2785018348.foregroundColor, color_2785018349, NTI2550136835);

  
}

function updateLastHierarchyChangeFromChildren_2785018369(self_2785018370, currentIndex_2785018371) {
    if (isObj(self_2785018370.m_type, NTI2785017871)) {
    Label1: {
      var c_2785018381 = null;
      var colontmp__536871903 = [];
      colontmp__536871903 = self_2785018370.children;
      var i_536871904 = 0;
      var L_536871905 = (colontmp__536871903).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871904 < L_536871905)) break Label3;
            c_2785018381 = colontmp__536871903[chckIndx(i_536871904, 0, (colontmp__536871903).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018369(c_2785018381, currentIndex_2785018371);
            self_2785018370.lastHierarchyChange = nimMax(nimMax(self_2785018370.lastHierarchyChange, c_2785018381.lastHierarchyChange), c_2785018381.lastBoundsChange);
            i_536871904 = addInt(i_536871904, 1);
            if (!(((colontmp__536871903).length == L_536871905))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018370.m_type, NTI2785017873)) {
    Label4: {
      var c_2785018391 = null;
      var colontmp__536871908 = [];
      colontmp__536871908 = self_2785018370.children;
      var i_536871909 = 0;
      var L_536871910 = (colontmp__536871908).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871909 < L_536871910)) break Label6;
            c_2785018391 = colontmp__536871908[chckIndx(i_536871909, 0, (colontmp__536871908).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018369(c_2785018391, currentIndex_2785018371);
            self_2785018370.lastHierarchyChange = nimMax(nimMax(self_2785018370.lastHierarchyChange, c_2785018391.lastHierarchyChange), c_2785018391.lastBoundsChange);
            i_536871909 = addInt(i_536871909, 1);
            if (!(((colontmp__536871908).length == L_536871910))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018370.m_type, NTI2785017875)) {
    Label7: {
      var c_2785018402 = null;
      var colontmp__536871913 = [];
      colontmp__536871913 = self_2785018370.children;
      var i_536871914 = 0;
      var L_536871915 = (colontmp__536871913).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871914 < L_536871915)) break Label9;
            c_2785018402 = colontmp__536871913[chckIndx(i_536871914, 0, (colontmp__536871913).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018369(c_2785018402, currentIndex_2785018371);
            self_2785018370.lastHierarchyChange = nimMax(nimMax(self_2785018370.lastHierarchyChange, c_2785018402.lastHierarchyChange), c_2785018402.lastBoundsChange);
            i_536871914 = addInt(i_536871914, 1);
            if (!(((colontmp__536871913).length == L_536871915))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018370.m_type, NTI2785017877)) {
    Label10: {
      var c_2785018413 = null;
      var colontmp__536871918 = [];
      colontmp__536871918 = self_2785018370.children;
      var i_536871919 = 0;
      var L_536871920 = (colontmp__536871918).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871919 < L_536871920)) break Label12;
            c_2785018413 = colontmp__536871918[chckIndx(i_536871919, 0, (colontmp__536871918).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018369(c_2785018413, currentIndex_2785018371);
            self_2785018370.lastHierarchyChange = nimMax(nimMax(self_2785018370.lastHierarchyChange, c_2785018413.lastHierarchyChange), c_2785018413.lastBoundsChange);
            i_536871919 = addInt(i_536871919, 1);
            if (!(((colontmp__536871918).length == L_536871920))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018370.m_type, NTI2785017879)) {
    if (!(eqStrings(self_2785018370.text, self_2785018370.lastRenderedText))) {
    self_2785018370.lastHierarchyChange = nimMax(self_2785018370.lastHierarchyChange, currentIndex_2785018371);
    }
    
    }
    }}}}

  
}

function updateStatusBar_3388997650(self_3388997651, frameIndex_3388997652, statusBarWidget_3388997653) {
    var Temporary1;

    var statusWidget_3388997654 = null;
    var commandLineWidget_3388997655 = null;
    if ((len_2785018037(statusBarWidget_3388997653) == 0)) {
    statusWidget_3388997654 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.5)}, NTI2785017869), lastHierarchyChange: frameIndex_3388997652, m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(statusBarWidget_3388997653, statusWidget_3388997654);
    commandLineWidget_3388997655 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.5), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3388997652, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(statusBarWidget_3388997653, commandLineWidget_3388997655);
    layoutWidget_2785018531(statusWidget_3388997654, statusBarWidget_3388997653.lastBounds, frameIndex_3388997652, self_3388997651.platform.layoutOptions);
    layoutWidget_2785018531(commandLineWidget_3388997655, statusBarWidget_3388997653.lastBounds, frameIndex_3388997652, self_3388997651.platform.layoutOptions);
    }
    else {
      statusWidget_3388997654 = HEX5BHEX5D_2785018033(statusBarWidget_3388997653, 0);
      commandLineWidget_3388997655 = HEX5BHEX5D_2785018033(statusBarWidget_3388997653, 1);
    }
    
    var textColor_3388997661 = color_3439329450(self_3388997651.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((self_3388997651.currentMode).length == 0)) {
    Temporary1 = [110,111,114,109,97,108];
    }
    else {
    Temporary1 = self_3388997651.currentMode;
    }
    
    statusWidget_3388997654.text = nimCopy(null, Temporary1, NTI33554449);
    updateForegroundColor_2785018347(statusWidget_3388997654, textColor_3388997661, frameIndex_3388997652);
    updateLastHierarchyChangeFromChildren_2785018369(statusWidget_3388997654, frameIndex_3388997652);
    statusBarWidget_3388997653.lastHierarchyChange = nimMax(statusBarWidget_3388997653.lastHierarchyChange, statusWidget_3388997654.lastHierarchyChange);
    activeHEX3D_2415919215(getCommandLineTextEditor_1291851061(self_3388997651), self_3388997651.commandLineMode);
    updateWidget_3405774859(getCommandLineTextEditor_1291851061(self_3388997651), self_3388997651, commandLineWidget_3388997655, frameIndex_3388997652);
    statusBarWidget_3388997653.lastHierarchyChange = nimMax(statusBarWidget_3388997653.lastHierarchyChange, commandLineWidget_3388997655.lastHierarchyChange);

  
}

function updateInvalidationFromChildren_2785018482(self_2785018483, currentIndex_2785018484, recurse_2785018485) {
    if (isObj(self_2785018483.m_type, NTI2785017871)) {
    Label1: {
      var c_2785018495 = null;
      var colontmp__536871923 = [];
      colontmp__536871923 = self_2785018483.children;
      var i_536871924 = 0;
      var L_536871925 = (colontmp__536871923).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871924 < L_536871925)) break Label3;
            c_2785018495 = colontmp__536871923[chckIndx(i_536871924, 0, (colontmp__536871923).length - 1)];
            if (recurse_2785018485) {
            updateInvalidationFromChildren_2785018482(c_2785018495, currentIndex_2785018484, recurse_2785018485);
            }
            
            self_2785018483.lastInvalidation = nimMax(nimMax(self_2785018483.lastInvalidation, c_2785018495.lastInvalidation), currentIndex_2785018484);
            i_536871924 = addInt(i_536871924, 1);
            if (!(((colontmp__536871923).length == L_536871925))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018483.m_type, NTI2785017873)) {
    Label4: {
      var c_2785018505 = null;
      var colontmp__536871928 = [];
      colontmp__536871928 = self_2785018483.children;
      var i_536871929 = 0;
      var L_536871930 = (colontmp__536871928).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871929 < L_536871930)) break Label6;
            c_2785018505 = colontmp__536871928[chckIndx(i_536871929, 0, (colontmp__536871928).length - 1)];
            if (recurse_2785018485) {
            updateInvalidationFromChildren_2785018482(c_2785018505, currentIndex_2785018484, recurse_2785018485);
            }
            
            self_2785018483.lastInvalidation = nimMax(nimMax(self_2785018483.lastInvalidation, c_2785018505.lastInvalidation), currentIndex_2785018484);
            i_536871929 = addInt(i_536871929, 1);
            if (!(((colontmp__536871928).length == L_536871930))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018483.m_type, NTI2785017875)) {
    Label7: {
      var c_2785018515 = null;
      var colontmp__536871933 = [];
      colontmp__536871933 = self_2785018483.children;
      var i_536871934 = 0;
      var L_536871935 = (colontmp__536871933).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871934 < L_536871935)) break Label9;
            c_2785018515 = colontmp__536871933[chckIndx(i_536871934, 0, (colontmp__536871933).length - 1)];
            if (recurse_2785018485) {
            updateInvalidationFromChildren_2785018482(c_2785018515, currentIndex_2785018484, recurse_2785018485);
            }
            
            self_2785018483.lastInvalidation = nimMax(nimMax(self_2785018483.lastInvalidation, c_2785018515.lastInvalidation), currentIndex_2785018484);
            i_536871934 = addInt(i_536871934, 1);
            if (!(((colontmp__536871933).length == L_536871935))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018483.m_type, NTI2785017877)) {
    Label10: {
      var c_2785018525 = null;
      var colontmp__536871938 = [];
      colontmp__536871938 = self_2785018483.children;
      var i_536871939 = 0;
      var L_536871940 = (colontmp__536871938).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871939 < L_536871940)) break Label12;
            c_2785018525 = colontmp__536871938[chckIndx(i_536871939, 0, (colontmp__536871938).length - 1)];
            if (recurse_2785018485) {
            updateInvalidationFromChildren_2785018482(c_2785018525, currentIndex_2785018484, recurse_2785018485);
            }
            
            self_2785018483.lastInvalidation = nimMax(nimMax(self_2785018483.lastInvalidation, c_2785018525.lastInvalidation), currentIndex_2785018484);
            i_536871939 = addInt(i_536871939, 1);
            if (!(((colontmp__536871938).length == L_536871940))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}

  
}

function updateWidgetTree_3388997701(self_3388997702, frameIndex_3388997703) {
            var Temporary4;
            var Temporary8;

    if ((self_3388997702.widget == null)) {
    mainStack_3388997663[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), right: -1.0, logLayout: false, m_type: NTI2785017873, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    self_3388997702.widget = mainStack_3388997663[0];
    mainPanel_3388997665[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    mainStack_3388997663[0].children.push(mainPanel_3388997665[0]);;
    viewPanel_3388997664[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), bottom: (-2.0 * totalLineHeight_2768240810(self_3388997702.platform)), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(mainPanel_3388997665[0], viewPanel_3388997664[0]);
    commandLineWidget_3388997662[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 1.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), top: (-2.0 * totalLineHeight_2768240810(self_3388997702.platform)), fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(mainPanel_3388997665[0], commandLineWidget_3388997662[0]);
    layoutWidget_2785018531(self_3388997702.widget, rect_2147483672(vec2_2164261725(0.0, 0.0), size_2768240760(self_3388997702.platform)), frameIndex_3388997703, self_3388997702.platform.layoutOptions);
    }
    
    setLen_2785018073(viewPanel_3388997664[0], 0);
    var rects_3388997714 = layoutViews_1291848236(self_3388997702.layout, self_3388997702.layout_props, rect_2147483666(0.0, 0.0, 1.0, 1.0), (self_3388997702.views).length);
    Label1: {
      var i_3388997720 = 0;
      var view_3388997721 = null;
      var i_536871839 = 0;
      var L_536871840 = (self_3388997702.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871839 < L_536871840)) break Label3;
            i_3388997720 = i_536871839;
            view_3388997721 = self_3388997702.views[chckIndx(i_536871839, 0, (self_3388997702.views).length - 1)];
            var widget_3388997722 = null;
            if (contains_3388997765(widgetsPerEditor_3388997691[0], view_3388997721.editor.id)) {
            widget_3388997722 = (Temporary4 = HEX5BHEX5D_3388998064(widgetsPerEditor_3388997691[0], view_3388997721.editor.id), Temporary4)[0][Temporary4[1]];
            }
            else {
              widget_3388997722 = {lastHierarchyChange: frameIndex_3388997703, logLayout: false, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
              HEX5BHEX5DHEX3D_3388998183(widgetsPerEditor_3388997691[0], view_3388997721.editor.id, widget_3388997722);
            }
            
            if ((i_3388997720 < (rects_3388997714).length)) {
            var colontmp__536871837 = xy_2147483680(rects_3388997714[chckIndx(i_3388997720, 0, (rects_3388997714).length - 1)]);
            var colontmp__536871838 = vec2_2164261725((rects_3388997714[chckIndx(i_3388997720, 0, (rects_3388997714).length - 1)].x + rects_3388997714[chckIndx(i_3388997720, 0, (rects_3388997714).length - 1)].w), (rects_3388997714[chckIndx(i_3388997720, 0, (rects_3388997714).length - 1)].y + rects_3388997714[chckIndx(i_3388997720, 0, (rects_3388997714).length - 1)].h));
            widget_3388997722.anchor = nimCopy(widget_3388997722.anchor, {Field0: nimCopy(null, colontmp__536871837, NTI2164261152), Field1: nimCopy(null, colontmp__536871838, NTI2164261152)}, NTI2785017869);
            layoutWidget_2785018531(widget_3388997722, viewPanel_3388997664[0].lastBounds, frameIndex_3388997703, self_3388997702.platform.layoutOptions);
            add_2785018080(viewPanel_3388997664[0], widget_3388997722);
            activeHEX3D_2415919215(view_3388997721.editor, (self_3388997702.currentView == i_3388997720));
            updateWidget_3405774859(view_3388997721.editor, self_3388997702, widget_3388997722, frameIndex_3388997703);
            viewPanel_3388997664[0].lastHierarchyChange = nimMax(viewPanel_3388997664[0].lastHierarchyChange, widget_3388997722.lastHierarchyChange);
            }
            
            i_536871839 = addInt(i_536871839, 1);
            if (!(((self_3388997702.views).length == L_536871840))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    mainPanel_3388997665[0].lastHierarchyChange = nimMax(mainPanel_3388997665[0].lastHierarchyChange, viewPanel_3388997664[0].lastHierarchyChange);
    var lastPopups_3388999248 = HEX5BHEX5D_3388999224(mainStack_3388997663[0].children, HEX2EHEX2E_1040187488(1, 1));
    if (mainStack_3388997663[0].children.length < 1) { for (var i = mainStack_3388997663[0].children.length ; i < 1 ; ++i) mainStack_3388997663[0].children.push(null); }
               else { mainStack_3388997663[0].children.length = 1; };
    Label5: {
      var i_3388999285 = 0;
      var popup_3388999286 = null;
      var i_536871846 = 0;
      var L_536871847 = (self_3388997702.popups).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536871846 < L_536871847)) break Label7;
            i_3388999285 = i_536871846;
            popup_3388999286 = self_3388997702.popups[chckIndx(i_536871846, 0, (self_3388997702.popups).length - 1)];
            var widget_3388999287 = null;
            if (contains_3388997765(widgetsPerEditor_3388997691[0], popup_3388999286.id)) {
            widget_3388999287 = (Temporary8 = HEX5BHEX5D_3388998064(widgetsPerEditor_3388997691[0], popup_3388999286.id), Temporary8)[0][Temporary8[1]];
            }
            else {
              widget_3388999287 = {backgroundColor: color_2550136904(1.0, 0.0, 1.0, 1.0), fillBackground: true, lastHierarchyChange: frameIndex_3388997703, logLayout: false, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
              HEX5BHEX5DHEX3D_3388998183(widgetsPerEditor_3388997691[0], popup_3388999286.id, widget_3388999287);
            }
            
            var colontmp__536871843 = vec2_2164261725(0.25, 0.25);
            var colontmp__536871844 = vec2_2164261725(0.75, 0.75);
            widget_3388999287.anchor = nimCopy(widget_3388999287.anchor, {Field0: nimCopy(null, colontmp__536871843, NTI2164261152), Field1: nimCopy(null, colontmp__536871844, NTI2164261152)}, NTI2785017869);
            layoutWidget_2785018531(widget_3388999287, mainStack_3388997663[0].lastBounds, frameIndex_3388997703, self_3388997702.platform.layoutOptions);
            mainStack_3388997663[0].children.push(widget_3388999287);;
            updateWidget_3405774865(popup_3388999286, self_3388997702, widget_3388999287, frameIndex_3388997703);
            mainStack_3388997663[0].lastHierarchyChange = nimMax(mainStack_3388997663[0].lastHierarchyChange, widget_3388999287.lastHierarchyChange);
            i_536871846 = addInt(i_536871846, 1);
            if (!(((self_3388997702.popups).length == L_536871847))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      var p_3388999446 = null;
      var i_536871856 = 0;
      var L_536871857 = (lastPopups_3388999248).length;
      Label10: {
          Label11: while (true) {
          if (!(i_536871856 < L_536871857)) break Label11;
            p_3388999446 = lastPopups_3388999248[chckIndx(i_536871856, 0, (lastPopups_3388999248).length - 1)];
            Label12: {
              if (contains_3388999447(mainStack_3388997663[0].children, p_3388999446)) {
              break Label12;
              }
              
              Label13: {
                var c_3388999483 = null;
                var i_536871853 = 0;
                var L_536871854 = (mainStack_3388997663[0].children).length;
                Label14: {
                    Label15: while (true) {
                    if (!(i_536871853 < L_536871854)) break Label15;
                      c_3388999483 = mainStack_3388997663[0].children[chckIndx(i_536871853, 0, (mainStack_3388997663[0].children).length - 1)];
                      invalidate_2785018438(c_3388999483, frameIndex_3388997703, p_3388999446.lastBounds);
                      i_536871853 = addInt(i_536871853, 1);
                      if (!(((mainStack_3388997663[0].children).length == L_536871854))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            i_536871856 = addInt(i_536871856, 1);
            if (!(((lastPopups_3388999248).length == L_536871857))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    updateStatusBar_3388997650(self_3388997702, frameIndex_3388997703, commandLineWidget_3388997662[0]);
    mainPanel_3388997665[0].lastHierarchyChange = nimMax(mainPanel_3388997665[0].lastHierarchyChange, commandLineWidget_3388997662[0].lastHierarchyChange);
    mainStack_3388997663[0].lastHierarchyChange = nimMax(mainStack_3388997663[0].lastHierarchyChange, mainPanel_3388997665[0].lastHierarchyChange);
    updateInvalidationFromChildren_2785018482(mainStack_3388997663[0], -1, false);
    self_3388997702.widget.lastHierarchyChange = nimMax(self_3388997702.widget.lastHierarchyChange, commandLineWidget_3388997662[0].lastHierarchyChange);

  
}

function layoutWidgetTree_3388999484(self_3388999485, size_3388999486, frameIndex_3388999487) {
  BeforeRet: {
    self_3388999485.lastBounds = nimCopy(self_3388999485.lastBounds, rect_2147483672(vec2_2164261725(0.0, 0.0), size_3388999486), NTI2147483653);
    if ((self_3388999485.widget == null)) {
    break BeforeRet;
    }
    
    layoutWidget_2785018531(self_3388999485.widget, self_3388999485.lastBounds, frameIndex_3388999487, self_3388999485.platform.layoutOptions);
  };

  
}

function requestRender_536871265(redrawEverything_536871266) {
    
function HEX3Aanonymous_536871267(time_536871268) {
        hasRequestedRerender_536870979[0] = false;
        isRenderInProgress_536870980[0] = true;
        try {
        try {
        var layoutTime_536871274 = 0.0;
        var updateTime_536871275 = 0.0;
        var renderTime_536871276 = 0.0;
        Label3: {
          ed_536870949[0].frameTimer = startTimer_2080374869();
          var updateTimer_536871277 = startTimer_2080374869();
          updateWidgetTree_3388997701(ed_536870949[0], frameIndex_536870978[0]);
          updateTime_536871275 = ms_2080374842(elapsed_2080374866(updateTimer_536871277));
          var layoutTimer_536871278 = startTimer_2080374869();
          layoutWidgetTree_3388999484(ed_536870949[0], size_2768240760(rend_536870947[0]), frameIndex_536870978[0]);
          layoutTime_536871274 = ms_2080374842(elapsed_2080374866(layoutTimer_536871278));
          var renderTimer_536871279 = startTimer_2080374869();
          render_2768240751(rend_536870947[0], ed_536870949[0].widget, frameIndex_536870978[0]);
          renderTime_536871276 = ms_2080374842(elapsed_2080374866(renderTimer_536871279));
          frameTime_536870977[0] = ms_2080374842(elapsed_2080374866(ed_536870949[0].frameTimer));
        };
        if ((20.0 < frameTime_536870977[0])) {
        var fmtRes_536871284 = [mnewString(0)];
        fmtRes_536871284[0].push.apply(fmtRes_536871284[0], [70,114,97,109,101,58,32]);;
        formatValue_2785018168(fmtRes_536871284, 0, frameTime_536870977[0], [62,53,46,50]);
        fmtRes_536871284[0].push.apply(fmtRes_536871284[0], [109,115,32,40,117,58,32]);;
        formatValue_2785018168(fmtRes_536871284, 0, updateTime_536871275, [62,53,46,50]);
        fmtRes_536871284[0].push.apply(fmtRes_536871284[0], [109,115,44,32,108,58,32]);;
        formatValue_2785018168(fmtRes_536871284, 0, layoutTime_536871274, [62,53,46,50]);
        fmtRes_536871284[0].push.apply(fmtRes_536871284[0], [109,115,44,32,114,58,32]);;
        formatValue_2785018168(fmtRes_536871284, 0, renderTime_536871276, [62,53,46,50]);
        fmtRes_536871284[0].push.apply(fmtRes_536871284[0], [109,115,41]);;
        log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_536871284[0], NTI33554449)]);
        }
        
        } finally {
        frameIndex_536870978[0] = addInt(frameIndex_536870978[0], 1);
        }
        } finally {
        isRenderInProgress_536870980[0] = false;
        }

      
    }

  BeforeRet: {
    if (!(initializedEditor_536870948[0])) {
    break BeforeRet;
    }
    
    if (hasRequestedRerender_536870979[0]) {
    break BeforeRet;
    }
    
    if (isRenderInProgress_536870980[0]) {
    break BeforeRet;
    }
    
    var _ = window.requestAnimationFrame(HEX3Aanonymous_536871267);
  };

  
}

function subscribe_536871752(event_536871754, callback_536871756) {
  var result_536871757 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_536871757 = nimCopy(result_536871757, newId_2046820597(), NTI2046820355);
    event_536871754.handlers.push({Field0: nimCopy(null, result_536871757, NTI2046820355), Field1: callback_536871756});;

  return result_536871757;

}

function HEX3Aanonymous_536871334(event_536871352) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871383(event_536871401) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871432(event_536871450) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871481(event_536871499) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871530(event_536871548) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871579(event_536871597) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871628(event_536871646) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871677() {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871726(redrawEverything_536871727) {
    requestRender_536871265(redrawEverything_536871727);

  
}
var _ = subscribe_1291851159(rend_536870947[0].onKeyPress, HEX3Aanonymous_536871334);
var _ = subscribe_1291851159(rend_536870947[0].onKeyRelease, HEX3Aanonymous_536871383);
var _ = subscribe_1291851159(rend_536870947[0].onRune, HEX3Aanonymous_536871432);
var _ = subscribe_1291851329(rend_536870947[0].onMousePress, HEX3Aanonymous_536871481);
var _ = subscribe_1291851329(rend_536870947[0].onMouseRelease, HEX3Aanonymous_536871530);
var _ = subscribe_1291851450(rend_536870947[0].onMouseMove, HEX3Aanonymous_536871579);
var _ = subscribe_1291851522(rend_536870947[0].onScroll, HEX3Aanonymous_536871628);
var _ = subscribe_1291851666(rend_536870947[0].onCloseRequested, HEX3Aanonymous_536871677);
var _ = subscribe_536871752(rend_536870947[0].onResized, HEX3Aanonymous_536871726);
Label325: {
  setHandleInputs_1291855245(ed_536870949[0], [101,100,105,116,111,114,46,116,101,120,116], true);
  scriptSetOptionString_1291860785([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116,46], [98,111,116,104]);
  scriptSetOptionBool_1291860710([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101,46], false);
  addCommandScript_1291859224(ed_536870949[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,108], [108,111,97,100,45,99,117,114,114,101,110,116,45,99,111,110,102,105,103], []);
  addCommandScript_1291859224(ed_536870949[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,115], [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116], []);
};
initializedEditor_536870948[0] = true;
requestRender_536871265(false);

function nimStrToCStr(str_536871943) {
  var result_536871944 = null;

    result_536871944 = toJSStr(str_536871943);

  return result_536871944;

}
const hiXorLoJs_override_mask = BigInt("0xffffffffffffffff");
const hiXorLoJs_override_shift = BigInt("64");
function hiXorLoJs_override(a, b) {
    var prod = (a * b);
    return ((prod >> hiXorLoJs_override_shift) ^ (prod & hiXorLoJs_override_mask));
}

var hashWangYi1_override_c1 = BigInt("0xa0761d6478bd642f");
var hashWangYi1_override_c2 = BigInt("0xe7037ed1a0b428db");
var hashWangYi1_override_c3 = BigInt("0xeb44accab455d16d");

function hashWangYi1_override(x) {
    if (typeof BigInt != 'undefined') {
        var res = hiXorLoJs_override(hiXorLoJs_override(hashWangYi1_override_c1, (BigInt(x) ^ hashWangYi1_override_c2)), hashWangYi1_override_c3);
        return Number(BigInt.asIntN(32, res));
    }
    else {
        return (x & 4294967295);
    }
}

let nimCopyCounters = new Map();
let nimCopyTimers = new Map();
let breakOnCopyType = null;
let stats = []

function clearNimCopyStats() {
    nimCopyCounters.clear();
    nimCopyTimers.clear();
}

function dumpNimCopyStatsImpl(desc, map, sortBy, setBreakOnCopyTypeIndex) {
    let values = []
    for (let entry of map.entries()) {
        values.push(entry)
    }

    values.sort((a, b) => b[1][sortBy] - a[1][sortBy])

    stats = values

    console.log(desc)

    let i = 0;
    for (let [type, stat] of values) {
        if (i == setBreakOnCopyTypeIndex) {
            breakOnCopyType = type
        }
        console.log(stat, ": ", type)
        i++
        if (i > 20) {
          break
        }
    }
}

function selectType(setBreakOnCopyTypeIndex) {
    if (setBreakOnCopyTypeIndex < stats.length) {
        breakOnCopyType = stats[setBreakOnCopyTypeIndex][0]
    }
}

function dumpNimCopyStats(sortBy, setBreakOnCopyTypeIndex) {
    //dumpNimCopyStatsImpl("Counts: ", nimCopyCounters)
    dumpNimCopyStatsImpl("Times: ", nimCopyTimers, sortBy || 0, setBreakOnCopyTypeIndex)
}

function nimCopyOverride(dest, src, ti) {
    if (ti === breakOnCopyType) {
      debugger;
    }

    let existing = nimCopyCounters.get(ti) || 0;
    nimCopyCounters.set(ti, existing + 1)

    let start = Date.now()
    let result = window._old_nimCopy(dest, src, ti);
    let elapsed = Date.now() - start

    let existingTime = nimCopyTimers.get(ti) || [0, 0];
    nimCopyTimers.set(ti, [existingTime[0] + elapsed, existingTime[1] + 1])

    return result;
}


function hashWangYi1_1325400278(x_1325400280) {
  var result_1325400281 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym10_1325400300 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym10_1325400301 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym10_1325400302 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym10_1325400303 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym10_1325400300, (BigInt(x_1325400280) ^ P1HEX60gensym10_1325400301)), P58HEX60gensym10_1325400302);
    result_1325400281 = Number((() => { const i = resHEX60gensym10_1325400303, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400281 = (x_1325400280 & 4294967295);
    }
    

  return result_1325400281;

}

function hashWangYi1_536871967(x_536871969) {
  var result_536871970 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_536871983 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_536871984 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_536871985 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_536871986 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_536871983, (BigInt(x_536871969) ^ P1HEX60gensym6_536871984)), P58HEX60gensym6_536871985);
    result_536871970 = Number((() => { const i = resHEX60gensym6_536871986, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_536871970 = (x_536871969 & 4294967295);
    }
    

  return result_536871970;

}
window._old_hashWangYi1_1325400278 = hashWangYi1_1325400278;
window.hashWangYi1_1325400278 = hashWangYi1_override;
window._old_hashWangYi1_1325400244 = hashWangYi1_1325400244;
window.hashWangYi1_1325400244 = hashWangYi1_override;
window._old_hashWangYi1_536871967 = hashWangYi1_536871967;
window.hashWangYi1_536871967 = hashWangYi1_override;

function formatValue_1291848865(result_1291848867, result_1291848867_Idx, value_1291848868, specifier_1291848869) {
    formatValue_721420459(result_1291848867, result_1291848867_Idx, HEX24_1627394481(value_1291848868), specifier_1291848869);

  
}

function handleUnknownDocumentEditorAction_1291848854(self_1291848855, editor_1291848856, action_1291848857, args_1291848858) {
  var result_1291848859 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (handleUnknownDocumentEditorAction_2751463456(self_1291848855.scriptContext, editor_1291848856, action_1291848857, args_1291848858)) {
    result_1291848859 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848864 = [mnewString(0)];
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,68,111,99,117,109,101,110,116,69,100,105,116,111,114,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848864, 0, action_1291848857, []);
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [32]);;
    formatValue_1291848865(fmtRes_1291848864, 0, args_1291848858, []);
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848864, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848864[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848859 = 0;
    break BeforeRet;
  };

  return result_1291848859;

}

function insert_2818593409(x_2818593411, x_2818593411_Idx, item_2818593412, i_2818593413) {
    var it_2818593433 = null;
    x_2818593411[x_2818593411_Idx] = x_2818593411[x_2818593411_Idx] || []; x_2818593411[x_2818593411_Idx].splice(i_2818593413, 0, it_2818593433);
    x_2818593411[x_2818593411_Idx][chckIndx(i_2818593413, 0, (x_2818593411[x_2818593411_Idx]).length - 1)] = item_2818593412;

  
}

function toJson_2818584041(self_2818584042, opt_2818584043) {
  var result_2818584044 = null;

    result_2818584044 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818584044, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,116,101,120,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2818584044, [105,100], newJInt_1627390040(self_2818584042.id));

  return result_2818584044;

}

function none_2818583947() {
  var result_2818583953 = ({val: null});

  return result_2818583953;

}

function some_2818584006(val_2818584008) {
  var result_2818584009 = ({val: null});

    if (!(!((val_2818584008 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818584009.val = val_2818584008;

  return result_2818584009;

}

function getTextDocumentEditor_2818583937(wrapper_2818583938) {
      var Temporary1;

  var result_2818583943 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2818583943 = nimCopy(result_2818583943, none_2818583947(), NTI2818578635);
    break BeforeRet;
    }
    
      var oHEX60gensym171_2818583956 = getEditorForId_1291850661(gEditor, wrapper_2818583938.id);
      if (!isSome_2818583961(oHEX60gensym171_2818583956)) Temporary1 = false; else {        var editor_2818583998 = get_2818583981(oHEX60gensym171_2818583956);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2818583998.m_type, NTI2818572510)) {
    result_2818583943 = nimCopy(result_2818583943, some_2818584006(editor_2818583998), NTI2818578635);
    break BeforeRet;
    }
    
    }
    
    result_2818583943 = nimCopy(result_2818583943, none_2818583947(), NTI2818578635);
    break BeforeRet;
  };

  return result_2818583943;

}

function isNone_2818584297(self_2818584299) {
  var result_2818584300 = false;

    result_2818584300 = (self_2818584299.val == null);

  return result_2818584300;

}

function get_2818584317(self_2818584319) {
  var result_2818584320 = null;

    if (isNone_2818584297(self_2818584319)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818584320 = self_2818584319["val"];

  return result_2818584320;

}

function setModeScript_2818584183_2818584289(self_2818584290, mode_2818584291) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym182_2818584292 = getTextDocumentEditor_2818583937(self_2818584290);
      if (isNone_2818584297(rHEX60gensym182_2818584292)) {
      break BeforeRet;
      }
      
    };
    setMode_2818584222(get_2818584317(rHEX60gensym182_2818584292), mode_2818584291);
  };

  
}

function fromJsonHook_2818584045(t_2818584046, jsonNode_2818584047) {
    t_2818584046.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_2818584047, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2818584357(a_2818584359, b_2818584360, opt_2818584361) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584360, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [84,101,120,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2818584360}));
    }
    
    fromJsonHook_2818584045(a_2818584359, b_2818584360);

  
}

function jsonTo_2818584351(b_2818584353, opt_2818584355) {
  var result_2818584356 = [({id: 0})];

    fromJson_2818584357(result_2818584356[0], b_2818584353, opt_2818584355);

  return result_2818584356[0];

}

function setModeApi_2818584349(HEX3Atmp_2818584186) {
  var result_2818584350 = null;

    result_2818584350 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setModeScript_2818584183_2818584289(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818584186, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584186, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818584350;

}

function modeScript_2818584467_2818584474(self_2818584475) {
  var result_2818584476 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym195_2818584477 = getTextDocumentEditor_2818583937(self_2818584475);
      if (isNone_2818584297(rHEX60gensym195_2818584477)) {
      break BeforeRet;
      }
      
    };
    result_2818584476 = nimCopy(null, mode_2818584471(get_2818584317(rHEX60gensym195_2818584477)), NTI33554449);
  };

  return result_2818584476;

}

function modeApi_2818584504(HEX3Atmp_2818584469) {
  var result_2818584505 = null;

  BeforeRet: {
    result_2818584505 = newJNull_1627390049();
    Label1: {
    };
    result_2818584505 = toJson_1811939932(modeScript_2818584467_2818584474(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818584469, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818584505;

}

function getContextWithModeScript_2818584517_2818584525(self_2818584526, context_2818584527) {
  var result_2818584528 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym204_2818584529 = getTextDocumentEditor_2818583937(self_2818584526);
      if (isNone_2818584297(rHEX60gensym204_2818584529)) {
      break BeforeRet;
      }
      
    };
    result_2818584528 = nimCopy(null, getContextWithMode_2818583609(get_2818584317(rHEX60gensym204_2818584529), context_2818584527), NTI33554449);
  };

  return result_2818584528;

}

function getContextWithModeApi_2818584557(HEX3Atmp_2818584519) {
  var result_2818584558 = null;

  BeforeRet: {
    result_2818584558 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_2818584558 = toJson_1811939932(getContextWithModeScript_2818584517_2818584525(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818584519, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584519, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818584558;

}

function updateTargetColumnScript_2818584575_2818584582(self_2818584583, cursor_2818584584) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym213_2818584585 = getTextDocumentEditor_2818583937(self_2818584583);
      if (isNone_2818584297(rHEX60gensym213_2818584585)) {
      break BeforeRet;
      }
      
    };
    updateTargetColumn_2818584579(get_2818584317(rHEX60gensym213_2818584585), cursor_2818584584);
  };

  
}

function parseEnum_2818584637(s_2818584639) {
    var Temporary1;

  var result_2818584640 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818584639))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_2818584639 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2818584640 = Temporary1;

  return result_2818584640;

}

function fromJson_2818584625(a_2818584627, a_2818584627_Idx, b_2818584628, opt_2818584629) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584628, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], Field1: b_2818584628}));
    }
    
    switch (b_2818584628.kind) {
    case 2:
      a_2818584627[a_2818584627_Idx] = chckRange(getBiggestInt_1627390129(b_2818584628, 0), 0, 4);
      break;
    case 4:
      a_2818584627[a_2818584627_Idx] = parseEnum_2818584637(getStr_1627390106(b_2818584628, []));
      break;
    default: 
      if (true) {
      var fmtRes_2818584665 = [mnewString(0)];
      fmtRes_2818584665[0].push.apply(fmtRes_2818584665[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_2818584665, 0, [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], []);
      fmtRes_2818584665[0].push.apply(fmtRes_2818584665[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_2818584665, 0, pretty_1627394477(b_2818584628, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_2818584665[0]);
      }
      
      break;
    }

  
}

function jsonTo_2818584619(b_2818584621, opt_2818584623) {
  var result_2818584624 = [0];

    fromJson_2818584625(result_2818584624, 0, b_2818584621, opt_2818584623);

  return result_2818584624[0];

}

function updateTargetColumnApi_2818584612(HEX3Atmp_2818584577) {
  var result_2818584613 = null;

    result_2818584613 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    updateTargetColumnScript_2818584575_2818584582(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818584577, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818584577, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818584613;

}

function invertSelectionScript_2818584685_2818584691(self_2818584692) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym226_2818584693 = getTextDocumentEditor_2818583937(self_2818584692);
      if (isNone_2818584297(rHEX60gensym226_2818584693)) {
      break BeforeRet;
      }
      
    };
    invertSelection_2818584689(get_2818584317(rHEX60gensym226_2818584693));
  };

  
}

function invertSelectionApi_2818584719(HEX3Atmp_2818584687) {
  var result_2818584720 = null;

    result_2818584720 = newJNull_1627390049();
    Label1: {
    };
    invertSelectionScript_2818584685_2818584691(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818584687, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818584720;

}

function insertScript_2818584741_2818584753(self_2818584754, selections_2818584755, text_2818584756, notify_2818584757, record_2818584758, autoIndent_2818584759) {
  var result_2818584760 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym238_2818584761 = getTextDocumentEditor_2818583937(self_2818584754);
      if (isNone_2818584297(rHEX60gensym238_2818584761)) {
      break BeforeRet;
      }
      
    };
    result_2818584760 = nimCopy(null, insert_2818584745(get_2818584317(rHEX60gensym238_2818584761), selections_2818584755, text_2818584756, notify_2818584757, record_2818584758, autoIndent_2818584759), NTI2818579243);
  };

  return result_2818584760;

}

function insertApi_2818584793(HEX3Atmp_2818584743) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818584794 = null;

  BeforeRet: {
    result_2818584794 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((3 < len_1627392983(HEX3Atmp_2818584743))) {
      Temporary5 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818584743, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    Label6: {
      if ((4 < len_1627392983(HEX3Atmp_2818584743))) {
      Temporary7 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818584743, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((5 < len_1627392983(HEX3Atmp_2818584743))) {
      Temporary9 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818584743, 5), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = true;
      }
      
    };
    result_2818584794 = toJson_2818585092(insertScript_2818584741_2818584753(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818584743, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584800(HEX5BHEX5D_1627393116(HEX3Atmp_2818584743, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584743, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818584794;

}

function deleteScript_2818585235_2818585245(self_2818585246, selections_2818585247, notify_2818585248, record_2818585249) {
  var result_2818585250 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym270_2818585251 = getTextDocumentEditor_2818583937(self_2818585246);
      if (isNone_2818584297(rHEX60gensym270_2818585251)) {
      break BeforeRet;
      }
      
    };
    result_2818585250 = nimCopy(null, delete_2818585239(get_2818584317(rHEX60gensym270_2818585251), selections_2818585247, notify_2818585248, record_2818585249), NTI2818579744);
  };

  return result_2818585250;

}

function deleteApi_2818585281(HEX3Atmp_2818585237) {
      var Temporary4;
      var Temporary6;

  var result_2818585282 = null;

  BeforeRet: {
    result_2818585282 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818585237))) {
      Temporary4 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818585237, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = true;
      }
      
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818585237))) {
      Temporary6 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818585237, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    result_2818585282 = toJson_2818585092(deleteScript_2818585235_2818585245(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818585237, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584800(HEX5BHEX5D_1627393116(HEX3Atmp_2818585237, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818585282;

}

function selectPrevScript_2818585344_2818585517(self_2818585518) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym280_2818585519 = getTextDocumentEditor_2818583937(self_2818585518);
      if (isNone_2818584297(rHEX60gensym280_2818585519)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2818585348(get_2818584317(rHEX60gensym280_2818585519));
  };

  
}

function selectPrevApi_2818585545(HEX3Atmp_2818585346) {
  var result_2818585546 = null;

    result_2818585546 = newJNull_1627390049();
    Label1: {
    };
    selectPrevScript_2818585344_2818585517(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818585346, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818585546;

}

function selectNextScript_2818585555_2818585705(self_2818585706) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym290_2818585707 = getTextDocumentEditor_2818583937(self_2818585706);
      if (isNone_2818584297(rHEX60gensym290_2818585707)) {
      break BeforeRet;
      }
      
    };
    selectNext_2818585559(get_2818584317(rHEX60gensym290_2818585707));
  };

  
}

function selectNextApi_2818585733(HEX3Atmp_2818585557) {
  var result_2818585734 = null;

    result_2818585734 = newJNull_1627390049();
    Label1: {
    };
    selectNextScript_2818585555_2818585705(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818585557, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818585734;

}

function selectInsideScript_2818585742_2818585760(self_2818585761, cursor_2818585762) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym299_2818585763 = getTextDocumentEditor_2818583937(self_2818585761);
      if (isNone_2818584297(rHEX60gensym299_2818585763)) {
      break BeforeRet;
      }
      
    };
    selectInside_2818585746(get_2818584317(rHEX60gensym299_2818585763), cursor_2818585762);
  };

  
}

function jsonTo_2818585797(b_2818585799, opt_2818585801) {
  var result_2818585802 = [{Field0: 0, Field1: 0}];

    fromJson_2818584915(result_2818585802[0], b_2818585799, opt_2818585801);

  return result_2818585802[0];

}

function selectInsideApi_2818585790(HEX3Atmp_2818585744) {
  var result_2818585791 = null;

    result_2818585791 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    selectInsideScript_2818585742_2818585760(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818585744, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585797(HEX5BHEX5D_1627393116(HEX3Atmp_2818585744, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818585791;

}

function selectInsideCurrentScript_2818585812_2818585818(self_2818585819) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym307_2818585820 = getTextDocumentEditor_2818583937(self_2818585819);
      if (isNone_2818584297(rHEX60gensym307_2818585820)) {
      break BeforeRet;
      }
      
    };
    selectInsideCurrent_2818585816(get_2818584317(rHEX60gensym307_2818585820));
  };

  
}

function selectInsideCurrentApi_2818585846(HEX3Atmp_2818585814) {
  var result_2818585847 = null;

    result_2818585847 = newJNull_1627390049();
    Label1: {
    };
    selectInsideCurrentScript_2818585812_2818585818(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818585814, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818585847;

}

function selectLineScript_2818585855_2818585862(self_2818585863, line_2818585864) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym315_2818585865 = getTextDocumentEditor_2818583937(self_2818585863);
      if (isNone_2818584297(rHEX60gensym315_2818585865)) {
      break BeforeRet;
      }
      
    };
    selectLine_2818585859(get_2818584317(rHEX60gensym315_2818585865), line_2818585864);
  };

  
}

function selectLineApi_2818585892(HEX3Atmp_2818585857) {
  var result_2818585893 = null;

    result_2818585893 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    selectLineScript_2818585855_2818585862(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818585857, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818585857, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818585893;

}

function selectLineCurrentScript_2818585906_2818585912(self_2818585913) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym322_2818585914 = getTextDocumentEditor_2818583937(self_2818585913);
      if (isNone_2818584297(rHEX60gensym322_2818585914)) {
      break BeforeRet;
      }
      
    };
    selectLineCurrent_2818585910(get_2818584317(rHEX60gensym322_2818585914));
  };

  
}

function selectLineCurrentApi_2818585940(HEX3Atmp_2818585908) {
  var result_2818585941 = null;

    result_2818585941 = newJNull_1627390049();
    Label1: {
    };
    selectLineCurrentScript_2818585906_2818585912(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818585908, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818585941;

}

function selectParentTsScript_2818585949_2818585968(self_2818585969, selection_2818585970) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym330_2818585971 = getTextDocumentEditor_2818583937(self_2818585969);
      if (isNone_2818584297(rHEX60gensym330_2818585971)) {
      break BeforeRet;
      }
      
    };
    selectParentTs_2818585953(get_2818584317(rHEX60gensym330_2818585971), selection_2818585970);
  };

  
}

function selectParentTsApi_2818585998(HEX3Atmp_2818585951) {
  var result_2818585999 = null;

    result_2818585999 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    selectParentTsScript_2818585949_2818585968(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818585951, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586005(HEX5BHEX5D_1627393116(HEX3Atmp_2818585951, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818585999;

}

function selectParentCurrentTsScript_2818586025_2818586031(self_2818586032) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym338_2818586033 = getTextDocumentEditor_2818583937(self_2818586032);
      if (isNone_2818584297(rHEX60gensym338_2818586033)) {
      break BeforeRet;
      }
      
    };
    selectParentCurrentTs_2818586029(get_2818584317(rHEX60gensym338_2818586033));
  };

  
}

function selectParentCurrentTsApi_2818586059(HEX3Atmp_2818586027) {
  var result_2818586060 = null;

    result_2818586060 = newJNull_1627390049();
    Label1: {
    };
    selectParentCurrentTsScript_2818586025_2818586031(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818586027, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818586060;

}

function insertTextScript_2818586071_2818586079(self_2818586080, text_2818586081) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym347_2818586082 = getTextDocumentEditor_2818583937(self_2818586080);
      if (isNone_2818584297(rHEX60gensym347_2818586082)) {
      break BeforeRet;
      }
      
    };
    insertText_2818586075(get_2818584317(rHEX60gensym347_2818586082), text_2818586081);
  };

  
}

function insertTextApi_2818586109(HEX3Atmp_2818586073) {
  var result_2818586110 = null;

    result_2818586110 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    insertTextScript_2818586071_2818586079(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818586073, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818586073, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818586110;

}

function undoScript_2818586136_2818586190(self_2818586191) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym356_2818586192 = getTextDocumentEditor_2818583937(self_2818586191);
      if (isNone_2818584297(rHEX60gensym356_2818586192)) {
      break BeforeRet;
      }
      
    };
    undo_2818586140(get_2818584317(rHEX60gensym356_2818586192));
  };

  
}

function undoApi_2818586218(HEX3Atmp_2818586138) {
  var result_2818586219 = null;

    result_2818586219 = newJNull_1627390049();
    Label1: {
    };
    undoScript_2818586136_2818586190(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818586138, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818586219;

}

function redoScript_2818586231_2818586263(self_2818586264) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym365_2818586265 = getTextDocumentEditor_2818583937(self_2818586264);
      if (isNone_2818584297(rHEX60gensym365_2818586265)) {
      break BeforeRet;
      }
      
    };
    redo_2818586235(get_2818584317(rHEX60gensym365_2818586265));
  };

  
}

function redoApi_2818586291(HEX3Atmp_2818586233) {
  var result_2818586292 = null;

    result_2818586292 = newJNull_1627390049();
    Label1: {
    };
    redoScript_2818586231_2818586263(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818586233, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818586292;

}

function scrollTextScript_2818586304_2818586315(self_2818586316, amount_2818586317) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym374_2818586318 = getTextDocumentEditor_2818583937(self_2818586316);
      if (isNone_2818584297(rHEX60gensym374_2818586318)) {
      break BeforeRet;
      }
      
    };
    scrollText_2818586308(get_2818584317(rHEX60gensym374_2818586318), amount_2818586317);
  };

  
}

function scrollTextApi_2818586345(HEX3Atmp_2818586306) {
  var result_2818586346 = null;

    result_2818586346 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scrollTextScript_2818586304_2818586315(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818586306, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586306, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818586346;

}

function duplicateLastSelectionScript_2818586417_2818586465(self_2818586466) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym387_2818586467 = getTextDocumentEditor_2818583937(self_2818586466);
      if (isNone_2818584297(rHEX60gensym387_2818586467)) {
      break BeforeRet;
      }
      
    };
    duplicateLastSelection_2818586421(get_2818584317(rHEX60gensym387_2818586467));
  };

  
}

function duplicateLastSelectionApi_2818586493(HEX3Atmp_2818586419) {
  var result_2818586494 = null;

    result_2818586494 = newJNull_1627390049();
    Label1: {
    };
    duplicateLastSelectionScript_2818586417_2818586465(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818586419, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818586494;

}

function addCursorBelowScript_2818586510_2818586528(self_2818586529) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym394_2818586530 = getTextDocumentEditor_2818583937(self_2818586529);
      if (isNone_2818584297(rHEX60gensym394_2818586530)) {
      break BeforeRet;
      }
      
    };
    addCursorBelow_2818586514(get_2818584317(rHEX60gensym394_2818586530));
  };

  
}

function addCursorBelowApi_2818586556(HEX3Atmp_2818586512) {
  var result_2818586557 = null;

    result_2818586557 = newJNull_1627390049();
    Label1: {
    };
    addCursorBelowScript_2818586510_2818586528(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818586512, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818586557;

}

function addCursorAboveScript_2818586569_2818586587(self_2818586588) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym401_2818586589 = getTextDocumentEditor_2818583937(self_2818586588);
      if (isNone_2818584297(rHEX60gensym401_2818586589)) {
      break BeforeRet;
      }
      
    };
    addCursorAbove_2818586573(get_2818584317(rHEX60gensym401_2818586589));
  };

  
}

function addCursorAboveApi_2818586615(HEX3Atmp_2818586571) {
  var result_2818586616 = null;

    result_2818586616 = newJNull_1627390049();
    Label1: {
    };
    addCursorAboveScript_2818586569_2818586587(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818586571, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818586616;

}

function getPrevFindResultScript_2818586624_2818586903(self_2818586904, cursor_2818586905, offset_2818586906) {
  var result_2818586907 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym410_2818586908 = getTextDocumentEditor_2818583937(self_2818586904);
      if (isNone_2818584297(rHEX60gensym410_2818586908)) {
      break BeforeRet;
      }
      
    };
    result_2818586907 = nimCopy(result_2818586907, getPrevFindResult_2818583550(get_2818584317(rHEX60gensym410_2818586908), cursor_2818586905, offset_2818586906), NTI2449473548);
  };

  return result_2818586907;

}

function getPrevFindResultApi_2818586937(HEX3Atmp_2818586626) {
      var Temporary4;

  var result_2818586938 = null;

  BeforeRet: {
    result_2818586938 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818586626))) {
      Temporary4 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818586626, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    result_2818586938 = toJson_2818585104(getPrevFindResultScript_2818586624_2818586903(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818586626, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585797(HEX5BHEX5D_1627393116(HEX3Atmp_2818586626, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818586938;

}

function getNextFindResultScript_2818586968_2818587140(self_2818587141, cursor_2818587142, offset_2818587143) {
  var result_2818587144 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym421_2818587145 = getTextDocumentEditor_2818583937(self_2818587141);
      if (isNone_2818584297(rHEX60gensym421_2818587145)) {
      break BeforeRet;
      }
      
    };
    result_2818587144 = nimCopy(result_2818587144, getNextFindResult_2818583554(get_2818584317(rHEX60gensym421_2818587145), cursor_2818587142, offset_2818587143), NTI2449473548);
  };

  return result_2818587144;

}

function getNextFindResultApi_2818587174(HEX3Atmp_2818586970) {
      var Temporary4;

  var result_2818587175 = null;

  BeforeRet: {
    result_2818587175 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818586970))) {
      Temporary4 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818586970, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    result_2818587175 = toJson_2818585104(getNextFindResultScript_2818586968_2818587140(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818586970, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585797(HEX5BHEX5D_1627393116(HEX3Atmp_2818586970, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818587175;

}

function addNextFindResultToSelectionScript_2818587207_2818587221(self_2818587222) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym430_2818587223 = getTextDocumentEditor_2818583937(self_2818587222);
      if (isNone_2818584297(rHEX60gensym430_2818587223)) {
      break BeforeRet;
      }
      
    };
    addNextFindResultToSelection_2818587211(get_2818584317(rHEX60gensym430_2818587223));
  };

  
}

function addNextFindResultToSelectionApi_2818587249(HEX3Atmp_2818587209) {
  var result_2818587250 = null;

    result_2818587250 = newJNull_1627390049();
    Label1: {
    };
    addNextFindResultToSelectionScript_2818587207_2818587221(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818587209, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818587250;

}

function addPrevFindResultToSelectionScript_2818587258_2818587272(self_2818587273) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym437_2818587274 = getTextDocumentEditor_2818583937(self_2818587273);
      if (isNone_2818584297(rHEX60gensym437_2818587274)) {
      break BeforeRet;
      }
      
    };
    addPrevFindResultToSelection_2818587262(get_2818584317(rHEX60gensym437_2818587274));
  };

  
}

function addPrevFindResultToSelectionApi_2818587300(HEX3Atmp_2818587260) {
  var result_2818587301 = null;

    result_2818587301 = newJNull_1627390049();
    Label1: {
    };
    addPrevFindResultToSelectionScript_2818587258_2818587272(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818587260, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818587301;

}

function setAllFindResultToSelectionScript_2818587309_2818587639(self_2818587640) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym444_2818587641 = getTextDocumentEditor_2818583937(self_2818587640);
      if (isNone_2818584297(rHEX60gensym444_2818587641)) {
      break BeforeRet;
      }
      
    };
    setAllFindResultToSelection_2818587313(get_2818584317(rHEX60gensym444_2818587641));
  };

  
}

function setAllFindResultToSelectionApi_2818587667(HEX3Atmp_2818587311) {
  var result_2818587668 = null;

    result_2818587668 = newJNull_1627390049();
    Label1: {
    };
    setAllFindResultToSelectionScript_2818587309_2818587639(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818587311, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818587668;

}

function clearSelectionsScript_2818587691_2818587703(self_2818587704) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym453_2818587705 = getTextDocumentEditor_2818583937(self_2818587704);
      if (isNone_2818584297(rHEX60gensym453_2818587705)) {
      break BeforeRet;
      }
      
    };
    clearSelections_2818587695(get_2818584317(rHEX60gensym453_2818587705));
  };

  
}

function clearSelectionsApi_2818587731(HEX3Atmp_2818587693) {
  var result_2818587732 = null;

    result_2818587732 = newJNull_1627390049();
    Label1: {
    };
    clearSelectionsScript_2818587691_2818587703(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818587693, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818587732;

}

function moveCursorColumnScript_2818587740_2818587767(self_2818587768, distance_2818587769, cursor_2818587770, all_2818587771) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym464_2818587772 = getTextDocumentEditor_2818583937(self_2818587768);
      if (isNone_2818584297(rHEX60gensym464_2818587772)) {
      break BeforeRet;
      }
      
    };
    moveCursorColumn_2818587744(get_2818584317(rHEX60gensym464_2818587772), distance_2818587769, cursor_2818587770, all_2818587771);
  };

  
}

function moveCursorColumnApi_2818587801(HEX3Atmp_2818587742) {
      var Temporary4;
      var Temporary6;

  var result_2818587802 = null;

    result_2818587802 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818587742))) {
      Temporary4 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818587742, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818587742))) {
      Temporary6 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818587742, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorColumnScript_2818587740_2818587767(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818587742, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818587742, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);

  return result_2818587802;

}

function moveCursorLineScript_2818587841_2818587850(self_2818587851, distance_2818587852, cursor_2818587853, all_2818587854) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym476_2818587855 = getTextDocumentEditor_2818583937(self_2818587851);
      if (isNone_2818584297(rHEX60gensym476_2818587855)) {
      break BeforeRet;
      }
      
    };
    moveCursorLine_2818587845(get_2818584317(rHEX60gensym476_2818587855), distance_2818587852, cursor_2818587853, all_2818587854);
  };

  
}

function moveCursorLineApi_2818587884(HEX3Atmp_2818587843) {
      var Temporary4;
      var Temporary6;

  var result_2818587885 = null;

    result_2818587885 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818587843))) {
      Temporary4 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818587843, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818587843))) {
      Temporary6 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818587843, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorLineScript_2818587841_2818587850(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818587843, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818587843, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);

  return result_2818587885;

}

function moveCursorHomeScript_2818587908_2818587916(self_2818587917, cursor_2818587918, all_2818587919) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym487_2818587920 = getTextDocumentEditor_2818583937(self_2818587917);
      if (isNone_2818584297(rHEX60gensym487_2818587920)) {
      break BeforeRet;
      }
      
    };
    moveCursorHome_2818587912(get_2818584317(rHEX60gensym487_2818587920), cursor_2818587918, all_2818587919);
  };

  
}

function moveCursorHomeApi_2818587948(HEX3Atmp_2818587910) {
      var Temporary3;
      var Temporary5;

  var result_2818587949 = null;

    result_2818587949 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_2818587910))) {
      Temporary3 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818587910, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = 0;
      }
      
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587910))) {
      Temporary5 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818587910, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    moveCursorHomeScript_2818587908_2818587916(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818587910, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3, Temporary5);

  return result_2818587949;

}

function moveCursorEndScript_2818587969_2818587977(self_2818587978, cursor_2818587979, all_2818587980) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym498_2818587981 = getTextDocumentEditor_2818583937(self_2818587978);
      if (isNone_2818584297(rHEX60gensym498_2818587981)) {
      break BeforeRet;
      }
      
    };
    moveCursorEnd_2818587973(get_2818584317(rHEX60gensym498_2818587981), cursor_2818587979, all_2818587980);
  };

  
}

function moveCursorEndApi_2818588009(HEX3Atmp_2818587971) {
      var Temporary3;
      var Temporary5;

  var result_2818588010 = null;

    result_2818588010 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_2818587971))) {
      Temporary3 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818587971, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = 0;
      }
      
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587971))) {
      Temporary5 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818587971, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    moveCursorEndScript_2818587969_2818587977(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818587971, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3, Temporary5);

  return result_2818588010;

}

function moveCursorToScript_2818588030_2818588046(self_2818588047, str_2818588048, cursor_2818588049, all_2818588050) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym510_2818588051 = getTextDocumentEditor_2818583937(self_2818588047);
      if (isNone_2818584297(rHEX60gensym510_2818588051)) {
      break BeforeRet;
      }
      
    };
    moveCursorTo_2818588034(get_2818584317(rHEX60gensym510_2818588051), str_2818588048, cursor_2818588049, all_2818588050);
  };

  
}

function moveCursorToApi_2818588080(HEX3Atmp_2818588032) {
      var Temporary4;
      var Temporary6;

  var result_2818588081 = null;

    result_2818588081 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818588032))) {
      Temporary4 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818588032, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818588032))) {
      Temporary6 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818588032, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorToScript_2818588030_2818588046(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588032, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588032, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);

  return result_2818588081;

}

function moveCursorBeforeScript_2818588106_2818588122(self_2818588123, str_2818588124, cursor_2818588125, all_2818588126) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym523_2818588127 = getTextDocumentEditor_2818583937(self_2818588123);
      if (isNone_2818584297(rHEX60gensym523_2818588127)) {
      break BeforeRet;
      }
      
    };
    moveCursorBefore_2818588110(get_2818584317(rHEX60gensym523_2818588127), str_2818588124, cursor_2818588125, all_2818588126);
  };

  
}

function moveCursorBeforeApi_2818588156(HEX3Atmp_2818588108) {
      var Temporary4;
      var Temporary6;

  var result_2818588157 = null;

    result_2818588157 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818588108))) {
      Temporary4 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818588108, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818588108))) {
      Temporary6 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818588108, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorBeforeScript_2818588106_2818588122(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588108, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588108, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);

  return result_2818588157;

}

function moveCursorNextFindResultScript_2818588182_2818588190(self_2818588191, cursor_2818588192, all_2818588193) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym535_2818588194 = getTextDocumentEditor_2818583937(self_2818588191);
      if (isNone_2818584297(rHEX60gensym535_2818588194)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextFindResult_2818588186(get_2818584317(rHEX60gensym535_2818588194), cursor_2818588192, all_2818588193);
  };

  
}

function moveCursorNextFindResultApi_2818588222(HEX3Atmp_2818588184) {
      var Temporary3;
      var Temporary5;

  var result_2818588223 = null;

    result_2818588223 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_2818588184))) {
      Temporary3 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818588184, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = 0;
      }
      
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588184))) {
      Temporary5 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818588184, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    moveCursorNextFindResultScript_2818588182_2818588190(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588184, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3, Temporary5);

  return result_2818588223;

}

function moveCursorPrevFindResultScript_2818588241_2818588249(self_2818588250, cursor_2818588251, all_2818588252) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym546_2818588253 = getTextDocumentEditor_2818583937(self_2818588250);
      if (isNone_2818584297(rHEX60gensym546_2818588253)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevFindResult_2818588245(get_2818584317(rHEX60gensym546_2818588253), cursor_2818588251, all_2818588252);
  };

  
}

function moveCursorPrevFindResultApi_2818588281(HEX3Atmp_2818588243) {
      var Temporary3;
      var Temporary5;

  var result_2818588282 = null;

    result_2818588282 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_2818588243))) {
      Temporary3 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818588243, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = 0;
      }
      
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588243))) {
      Temporary5 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818588243, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    moveCursorPrevFindResultScript_2818588241_2818588249(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588243, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3, Temporary5);

  return result_2818588282;

}

function scrollToCursorScript_2818588300_2818588307(self_2818588308, cursor_2818588309) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym556_2818588310 = getTextDocumentEditor_2818583937(self_2818588308);
      if (isNone_2818584297(rHEX60gensym556_2818588310)) {
      break BeforeRet;
      }
      
    };
    scrollToCursor_2818584038(get_2818584317(rHEX60gensym556_2818588310), cursor_2818588309);
  };

  
}

function scrollToCursorApi_2818588337(HEX3Atmp_2818588302) {
      var Temporary3;

  var result_2818588338 = null;

    result_2818588338 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_2818588302))) {
      Temporary3 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818588302, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = 0;
      }
      
    };
    scrollToCursorScript_2818588300_2818588307(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588302, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_2818588338;

}

function reloadTreesitterScript_2818588351_2818588357(self_2818588358) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym564_2818588359 = getTextDocumentEditor_2818583937(self_2818588358);
      if (isNone_2818584297(rHEX60gensym564_2818588359)) {
      break BeforeRet;
      }
      
    };
    reloadTreesitter_2818588355(get_2818584317(rHEX60gensym564_2818588359));
  };

  
}

function reloadTreesitterApi_2818588385(HEX3Atmp_2818588353) {
  var result_2818588386 = null;

    result_2818588386 = newJNull_1627390049();
    Label1: {
    };
    reloadTreesitterScript_2818588351_2818588357(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588353, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818588386;

}

function deleteLeftScript_2818588400_2818588414(self_2818588415) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym572_2818588416 = getTextDocumentEditor_2818583937(self_2818588415);
      if (isNone_2818584297(rHEX60gensym572_2818588416)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_2818588404(get_2818584317(rHEX60gensym572_2818588416));
  };

  
}

function deleteLeftApi_2818588442(HEX3Atmp_2818588402) {
  var result_2818588443 = null;

    result_2818588443 = newJNull_1627390049();
    Label1: {
    };
    deleteLeftScript_2818588400_2818588414(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588402, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818588443;

}

function deleteRightScript_2818588457_2818588471(self_2818588472) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym579_2818588473 = getTextDocumentEditor_2818583937(self_2818588472);
      if (isNone_2818584297(rHEX60gensym579_2818588473)) {
      break BeforeRet;
      }
      
    };
    deleteRight_2818588461(get_2818584317(rHEX60gensym579_2818588473));
  };

  
}

function deleteRightApi_2818588499(HEX3Atmp_2818588459) {
  var result_2818588500 = null;

    result_2818588500 = newJNull_1627390049();
    Label1: {
    };
    deleteRightScript_2818588457_2818588471(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588459, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818588500;

}

function getCommandCountScript_2818588514_2818588521(self_2818588522) {
  var result_2818588523 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym586_2818588524 = getTextDocumentEditor_2818583937(self_2818588522);
      if (isNone_2818584297(rHEX60gensym586_2818588524)) {
      break BeforeRet;
      }
      
    };
    result_2818588523 = getCommandCount_2818588518(get_2818584317(rHEX60gensym586_2818588524));
  };

  return result_2818588523;

}

function getCommandCountApi_2818588551(HEX3Atmp_2818588516) {
  var result_2818588552 = null;

  BeforeRet: {
    result_2818588552 = newJNull_1627390049();
    Label1: {
    };
    result_2818588552 = toJson_2818585130(getCommandCountScript_2818588514_2818588521(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588516, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818588552;

}

function setCommandCountScript_2818588564_2818588571(self_2818588572, count_2818588573) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym595_2818588574 = getTextDocumentEditor_2818583937(self_2818588572);
      if (isNone_2818584297(rHEX60gensym595_2818588574)) {
      break BeforeRet;
      }
      
    };
    setCommandCount_2818588568(get_2818584317(rHEX60gensym595_2818588574), count_2818588573);
  };

  
}

function setCommandCountApi_2818588601(HEX3Atmp_2818588566) {
  var result_2818588602 = null;

    result_2818588602 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setCommandCountScript_2818588564_2818588571(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588566, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588566, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818588602;

}

function setCommandCountRestoreScript_2818588615_2818588622(self_2818588623, count_2818588624) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym603_2818588625 = getTextDocumentEditor_2818583937(self_2818588623);
      if (isNone_2818584297(rHEX60gensym603_2818588625)) {
      break BeforeRet;
      }
      
    };
    setCommandCountRestore_2818588619(get_2818584317(rHEX60gensym603_2818588625), count_2818588624);
  };

  
}

function setCommandCountRestoreApi_2818588652(HEX3Atmp_2818588617) {
  var result_2818588653 = null;

    result_2818588653 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setCommandCountRestoreScript_2818588615_2818588622(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588617, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588617, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818588653;

}

function updateCommandCountScript_2818588666_2818588673(self_2818588674, digit_2818588675) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym611_2818588676 = getTextDocumentEditor_2818583937(self_2818588674);
      if (isNone_2818584297(rHEX60gensym611_2818588676)) {
      break BeforeRet;
      }
      
    };
    updateCommandCount_2818588670(get_2818584317(rHEX60gensym611_2818588676), digit_2818588675);
  };

  
}

function updateCommandCountApi_2818588703(HEX3Atmp_2818588668) {
  var result_2818588704 = null;

    result_2818588704 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    updateCommandCountScript_2818588666_2818588673(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588668, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588668, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818588704;

}

function setFlagScript_2818588717_2818588725(self_2818588726, name_2818588727, value_2818588728) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym620_2818588729 = getTextDocumentEditor_2818583937(self_2818588726);
      if (isNone_2818584297(rHEX60gensym620_2818588729)) {
      break BeforeRet;
      }
      
    };
    setFlag_2818588721(get_2818584317(rHEX60gensym620_2818588729), name_2818588727, value_2818588728);
  };

  
}

function setFlagApi_2818588757(HEX3Atmp_2818588719) {
  var result_2818588758 = null;

    result_2818588758 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
    };
    setFlagScript_2818588717_2818588725(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588719, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588719, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818588719, 2), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818588758;

}

function getFlagScript_2818588776_2818588784(self_2818588785, name_2818588786) {
  var result_2818588787 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym628_2818588788 = getTextDocumentEditor_2818583937(self_2818588785);
      if (isNone_2818584297(rHEX60gensym628_2818588788)) {
      break BeforeRet;
      }
      
    };
    result_2818588787 = getFlag_2818588780(get_2818584317(rHEX60gensym628_2818588788), name_2818588786);
  };

  return result_2818588787;

}

function getFlagApi_2818588816(HEX3Atmp_2818588778) {
  var result_2818588817 = null;

  BeforeRet: {
    result_2818588817 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_2818588817 = toJson_2818588828(getFlagScript_2818588776_2818588784(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588778, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588778, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818588817;

}

function runActionScript_2818588839_2818588852(self_2818588853, action_2818588854, args_2818588855) {
  var result_2818588856 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym638_2818588857 = getTextDocumentEditor_2818583937(self_2818588853);
      if (isNone_2818584297(rHEX60gensym638_2818588857)) {
      break BeforeRet;
      }
      
    };
    result_2818588856 = runAction_2818588843(get_2818584317(rHEX60gensym638_2818588857), action_2818588854, args_2818588855);
  };

  return result_2818588856;

}

function runActionApi_2818588886(HEX3Atmp_2818588841) {
  var result_2818588887 = null;

  BeforeRet: {
    result_2818588887 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
    };
    result_2818588887 = toJson_2818588828(runActionScript_2818588839_2818588852(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588841, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588841, 1), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_2818588841, 2)), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818588887;

}

function findWordBoundaryScript_2818588907_2818588942(self_2818588943, cursor_2818588944) {
  var result_2818588945 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym647_2818588946 = getTextDocumentEditor_2818583937(self_2818588943);
      if (isNone_2818584297(rHEX60gensym647_2818588946)) {
      break BeforeRet;
      }
      
    };
    result_2818588945 = nimCopy(result_2818588945, findWordBoundary_2818588911(get_2818584317(rHEX60gensym647_2818588946), cursor_2818588944), NTI2449473548);
  };

  return result_2818588945;

}

function findWordBoundaryApi_2818588974(HEX3Atmp_2818588909) {
  var result_2818588975 = null;

  BeforeRet: {
    result_2818588975 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_2818588975 = toJson_2818585104(findWordBoundaryScript_2818588907_2818588942(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588909, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585797(HEX5BHEX5D_1627393116(HEX3Atmp_2818588909, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818588975;

}

function getSelectionForMoveScript_2818588994_2818589096(self_2818589097, cursor_2818589098, move_2818589099, count_2818589100) {
  var result_2818589101 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym662_2818589102 = getTextDocumentEditor_2818583937(self_2818589097);
      if (isNone_2818584297(rHEX60gensym662_2818589102)) {
      break BeforeRet;
      }
      
    };
    result_2818589101 = nimCopy(result_2818589101, getSelectionForMove_2818588998(get_2818584317(rHEX60gensym662_2818589102), cursor_2818589098, move_2818589099, count_2818589100), NTI2449473548);
  };

  return result_2818589101;

}

function getSelectionForMoveApi_2818589132(HEX3Atmp_2818588996) {
      var Temporary5;

  var result_2818589133 = null;

  BeforeRet: {
    result_2818589133 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((3 < len_1627392983(HEX3Atmp_2818588996))) {
      Temporary5 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588996, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818589133 = toJson_2818585104(getSelectionForMoveScript_2818588994_2818589096(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818588996, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585797(HEX5BHEX5D_1627393116(HEX3Atmp_2818588996, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588996, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2818589133;

}

function setMoveScript_2818589232_2818589427(self_2818589428, args_2818589429) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym683_2818589430 = getTextDocumentEditor_2818583937(self_2818589428);
      if (isNone_2818584297(rHEX60gensym683_2818589430)) {
      break BeforeRet;
      }
      
    };
    setMove_2818589236(get_2818584317(rHEX60gensym683_2818589430), args_2818589429);
  };

  
}

function HEX5BHEX5D_2818589471(a_2818589474, x_2818589475) {
  var result_2818589476 = null;

    if (!((a_2818589474.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,48,44,32,57,41,32,96,97,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    result_2818589476 = newJArray_1627390082();
    var xa_2818589487 = x_2818589475.a;
    var L_2818589489 = addInt(subInt(subInt(len_1627392983(a_2818589474), x_2818589475.b), xa_2818589487), 1);
    Label1: {
      var i_2818589494 = 0;
      var i_536872149 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872149 < L_2818589489)) break Label3;
            i_2818589494 = i_536872149;
            add_1627390190(result_2818589476, HEX5BHEX5D_1627393116(a_2818589474, addInt(i_2818589494, xa_2818589487)));
            i_536872149 = addInt(i_536872149, 1);
          }
      };
    };

  return result_2818589476;

}

function setMoveApi_2818589457(HEX3Atmp_2818589234) {
  var result_2818589458 = null;

    result_2818589458 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setMoveScript_2818589232_2818589427(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818589234, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_2818589471(HEX3Atmp_2818589234, HEX2EHEX2E_1040187488(1, 1)));

  return result_2818589458;

}

function deleteMoveScript_2818589517_2818589556(self_2818589557, move_2818589558, which_2818589559, all_2818589560) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym709_2818589561 = getTextDocumentEditor_2818583937(self_2818589557);
      if (isNone_2818584297(rHEX60gensym709_2818589561)) {
      break BeforeRet;
      }
      
    };
    deleteMove_2818589521(get_2818584317(rHEX60gensym709_2818589561), move_2818589558, which_2818589559, all_2818589560);
  };

  
}

function deleteMoveApi_2818589590(HEX3Atmp_2818589519) {
      var Temporary4;
      var Temporary6;

  var result_2818589591 = null;

    result_2818589591 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818589519))) {
      Temporary4 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818589519, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818589519))) {
      Temporary6 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818589519, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    deleteMoveScript_2818589517_2818589556(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818589519, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589519, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);

  return result_2818589591;

}

function selectMoveScript_2818589614_2818589678(self_2818589679, move_2818589680, which_2818589681, all_2818589682) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym721_2818589683 = getTextDocumentEditor_2818583937(self_2818589679);
      if (isNone_2818584297(rHEX60gensym721_2818589683)) {
      break BeforeRet;
      }
      
    };
    selectMove_2818589618(get_2818584317(rHEX60gensym721_2818589683), move_2818589680, which_2818589681, all_2818589682);
  };

  
}

function selectMoveApi_2818589712(HEX3Atmp_2818589616) {
      var Temporary4;
      var Temporary6;

  var result_2818589713 = null;

    result_2818589713 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818589616))) {
      Temporary4 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818589616, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818589616))) {
      Temporary6 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818589616, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    selectMoveScript_2818589614_2818589678(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818589616, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589616, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);

  return result_2818589713;

}

function changeMoveScript_2818589736_2818589775(self_2818589776, move_2818589777, which_2818589778, all_2818589779) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym734_2818589780 = getTextDocumentEditor_2818583937(self_2818589776);
      if (isNone_2818584297(rHEX60gensym734_2818589780)) {
      break BeforeRet;
      }
      
    };
    changeMove_2818589740(get_2818584317(rHEX60gensym734_2818589780), move_2818589777, which_2818589778, all_2818589779);
  };

  
}

function changeMoveApi_2818589809(HEX3Atmp_2818589738) {
      var Temporary4;
      var Temporary6;

  var result_2818589810 = null;

    result_2818589810 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818589738))) {
      Temporary4 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818589738, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818589738))) {
      Temporary6 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818589738, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    changeMoveScript_2818589736_2818589775(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818589738, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589738, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);

  return result_2818589810;

}

function moveLastScript_2818589833_2818589880(self_2818589881, move_2818589882, which_2818589883, all_2818589884, count_2818589885) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym747_2818589886 = getTextDocumentEditor_2818583937(self_2818589881);
      if (isNone_2818584297(rHEX60gensym747_2818589886)) {
      break BeforeRet;
      }
      
    };
    moveLast_2818589837(get_2818584317(rHEX60gensym747_2818589886), move_2818589882, which_2818589883, all_2818589884, count_2818589885);
  };

  
}

function moveLastApi_2818589916(HEX3Atmp_2818589835) {
      var Temporary4;
      var Temporary6;
      var Temporary8;

  var result_2818589917 = null;

    result_2818589917 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818589835))) {
      Temporary4 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818589835, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818589835))) {
      Temporary6 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818589835, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1627392983(HEX3Atmp_2818589835))) {
      Temporary8 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818589835, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = 0;
      }
      
    };
    moveLastScript_2818589833_2818589880(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818589835, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589835, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6, Temporary8);

  return result_2818589917;

}

function moveFirstScript_2818589953_2818590000(self_2818590001, move_2818590002, which_2818590003, all_2818590004, count_2818590005) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym761_2818590006 = getTextDocumentEditor_2818583937(self_2818590001);
      if (isNone_2818584297(rHEX60gensym761_2818590006)) {
      break BeforeRet;
      }
      
    };
    moveFirst_2818589957(get_2818584317(rHEX60gensym761_2818590006), move_2818590002, which_2818590003, all_2818590004, count_2818590005);
  };

  
}

function moveFirstApi_2818590036(HEX3Atmp_2818589955) {
      var Temporary4;
      var Temporary6;
      var Temporary8;

  var result_2818590037 = null;

    result_2818590037 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818589955))) {
      Temporary4 = jsonTo_2818584619(HEX5BHEX5D_1627393116(HEX3Atmp_2818589955, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818589955))) {
      Temporary6 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2818589955, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1627392983(HEX3Atmp_2818589955))) {
      Temporary8 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818589955, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = 0;
      }
      
    };
    moveFirstScript_2818589953_2818590000(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818589955, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589955, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6, Temporary8);

  return result_2818590037;

}

function setSearchQueryScript_2818590065_2818590086(self_2818590087, query_2818590088) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym772_2818590089 = getTextDocumentEditor_2818583937(self_2818590087);
      if (isNone_2818584297(rHEX60gensym772_2818590089)) {
      break BeforeRet;
      }
      
    };
    setSearchQuery_2818590069(get_2818584317(rHEX60gensym772_2818590089), query_2818590088);
  };

  
}

function setSearchQueryApi_2818590116(HEX3Atmp_2818590067) {
  var result_2818590117 = null;

    result_2818590117 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setSearchQueryScript_2818590065_2818590086(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818590067, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590067, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818590117;

}

function setSearchQueryFromMoveScript_2818590150_2818590159(self_2818590160, move_2818590161, count_2818590162) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym781_2818590163 = getTextDocumentEditor_2818583937(self_2818590160);
      if (isNone_2818584297(rHEX60gensym781_2818590163)) {
      break BeforeRet;
      }
      
    };
    setSearchQueryFromMove_2818590154(get_2818584317(rHEX60gensym781_2818590163), move_2818590161, count_2818590162);
  };

  
}

function setSearchQueryFromMoveApi_2818590191(HEX3Atmp_2818590152) {
      var Temporary4;

  var result_2818590192 = null;

    result_2818590192 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    Label3: {
      if ((2 < len_1627392983(HEX3Atmp_2818590152))) {
      Temporary4 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818590152, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    setSearchQueryFromMoveScript_2818590150_2818590159(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818590152, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590152, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);

  return result_2818590192;

}

function gotoDefinitionScript_2818592666_2818592672(self_2818592673) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym825_2818592674 = getTextDocumentEditor_2818583937(self_2818592673);
      if (isNone_2818584297(rHEX60gensym825_2818592674)) {
      break BeforeRet;
      }
      
    };
    gotoDefinition_2818592670(get_2818584317(rHEX60gensym825_2818592674));
  };

  
}

function gotoDefinitionApi_2818592700(HEX3Atmp_2818592668) {
  var result_2818592701 = null;

    result_2818592701 = newJNull_1627390049();
    Label1: {
    };
    gotoDefinitionScript_2818592666_2818592672(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818592668, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818592701;

}

function getCompletionsScript_2818592723_2818592729(self_2818592730) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym833_2818592731 = getTextDocumentEditor_2818583937(self_2818592730);
      if (isNone_2818584297(rHEX60gensym833_2818592731)) {
      break BeforeRet;
      }
      
    };
    getCompletions_2818592727(get_2818584317(rHEX60gensym833_2818592731));
  };

  
}

function getCompletionsApi_2818592757(HEX3Atmp_2818592725) {
  var result_2818592758 = null;

    result_2818592758 = newJNull_1627390049();
    Label1: {
    };
    getCompletionsScript_2818592723_2818592729(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818592725, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818592758;

}

function hideCompletionsScript_2818592802_2818592808(self_2818592809) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym841_2818592810 = getTextDocumentEditor_2818583937(self_2818592809);
      if (isNone_2818584297(rHEX60gensym841_2818592810)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_2818592806(get_2818584317(rHEX60gensym841_2818592810));
  };

  
}

function hideCompletionsApi_2818592836(HEX3Atmp_2818592804) {
  var result_2818592837 = null;

    result_2818592837 = newJNull_1627390049();
    Label1: {
    };
    hideCompletionsScript_2818592802_2818592808(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818592804, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818592837;

}

function selectPrevCompletionScript_2818592845_2818592868(self_2818592869) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym848_2818592870 = getTextDocumentEditor_2818583937(self_2818592869);
      if (isNone_2818584297(rHEX60gensym848_2818592870)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2818592849(get_2818584317(rHEX60gensym848_2818592870));
  };

  
}

function selectPrevCompletionApi_2818592896(HEX3Atmp_2818592847) {
  var result_2818592897 = null;

    result_2818592897 = newJNull_1627390049();
    Label1: {
    };
    selectPrevCompletionScript_2818592845_2818592868(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818592847, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818592897;

}

function selectNextCompletionScript_2818592905_2818592928(self_2818592929) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym856_2818592930 = getTextDocumentEditor_2818583937(self_2818592929);
      if (isNone_2818584297(rHEX60gensym856_2818592930)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2818592909(get_2818584317(rHEX60gensym856_2818592930));
  };

  
}

function selectNextCompletionApi_2818592956(HEX3Atmp_2818592907) {
  var result_2818592957 = null;

    result_2818592957 = newJNull_1627390049();
    Label1: {
    };
    selectNextCompletionScript_2818592905_2818592928(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818592907, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818592957;

}

function applySelectedCompletionScript_2818592965_2818593104(self_2818593105) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym864_2818593106 = getTextDocumentEditor_2818583937(self_2818593105);
      if (isNone_2818584297(rHEX60gensym864_2818593106)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2818592969(get_2818584317(rHEX60gensym864_2818593106));
  };

  
}

function applySelectedCompletionApi_2818593132(HEX3Atmp_2818592967) {
  var result_2818593133 = null;

    result_2818593133 = newJNull_1627390049();
    Label1: {
    };
    applySelectedCompletionScript_2818592965_2818593104(jsonTo_2818584351(HEX5BHEX5D_1627393116(HEX3Atmp_2818592967, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2818593133;

}

function dispatch_2818593165(command_2818593164, arg_2818593163) {
    var Temporary1;

  var result_2818593170 = ({val: null});

    switch (toJSStr(command_2818593164)) {
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593171(setModeApi_2818584349(arg_2818593163));
      break;
    case "mode":
      Temporary1 = some_2818593171(modeApi_2818584504(arg_2818593163));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593171(getContextWithModeApi_2818584557(arg_2818593163));
      break;
    case "updateTargetColumn":
    case "update-target-column":
      Temporary1 = some_2818593171(updateTargetColumnApi_2818584612(arg_2818593163));
      break;
    case "invertSelection":
    case "invert-selection":
      Temporary1 = some_2818593171(invertSelectionApi_2818584719(arg_2818593163));
      break;
    case "insert":
      Temporary1 = some_2818593171(insertApi_2818584793(arg_2818593163));
      break;
    case "delete":
      Temporary1 = some_2818593171(deleteApi_2818585281(arg_2818593163));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818593171(selectPrevApi_2818585545(arg_2818593163));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818593171(selectNextApi_2818585733(arg_2818593163));
      break;
    case "selectInside":
    case "select-inside":
      Temporary1 = some_2818593171(selectInsideApi_2818585790(arg_2818593163));
      break;
    case "selectInsideCurrent":
    case "select-inside-current":
      Temporary1 = some_2818593171(selectInsideCurrentApi_2818585846(arg_2818593163));
      break;
    case "selectLine":
    case "select-line":
      Temporary1 = some_2818593171(selectLineApi_2818585892(arg_2818593163));
      break;
    case "selectLineCurrent":
    case "select-line-current":
      Temporary1 = some_2818593171(selectLineCurrentApi_2818585940(arg_2818593163));
      break;
    case "selectParentTs":
    case "select-parent-ts":
      Temporary1 = some_2818593171(selectParentTsApi_2818585998(arg_2818593163));
      break;
    case "selectParentCurrentTs":
    case "select-parent-current-ts":
      Temporary1 = some_2818593171(selectParentCurrentTsApi_2818586059(arg_2818593163));
      break;
    case "insertText":
    case "insert-text":
      Temporary1 = some_2818593171(insertTextApi_2818586109(arg_2818593163));
      break;
    case "undo":
      Temporary1 = some_2818593171(undoApi_2818586218(arg_2818593163));
      break;
    case "redo":
      Temporary1 = some_2818593171(redoApi_2818586291(arg_2818593163));
      break;
    case "scrollText":
    case "scroll-text":
      Temporary1 = some_2818593171(scrollTextApi_2818586345(arg_2818593163));
      break;
    case "duplicateLastSelection":
    case "duplicate-last-selection":
      Temporary1 = some_2818593171(duplicateLastSelectionApi_2818586493(arg_2818593163));
      break;
    case "addCursorBelow":
    case "add-cursor-below":
      Temporary1 = some_2818593171(addCursorBelowApi_2818586556(arg_2818593163));
      break;
    case "addCursorAbove":
    case "add-cursor-above":
      Temporary1 = some_2818593171(addCursorAboveApi_2818586615(arg_2818593163));
      break;
    case "getPrevFindResult":
    case "get-prev-find-result":
      Temporary1 = some_2818593171(getPrevFindResultApi_2818586937(arg_2818593163));
      break;
    case "getNextFindResult":
    case "get-next-find-result":
      Temporary1 = some_2818593171(getNextFindResultApi_2818587174(arg_2818593163));
      break;
    case "addNextFindResultToSelection":
    case "add-next-find-result-to-selection":
      Temporary1 = some_2818593171(addNextFindResultToSelectionApi_2818587249(arg_2818593163));
      break;
    case "addPrevFindResultToSelection":
    case "add-prev-find-result-to-selection":
      Temporary1 = some_2818593171(addPrevFindResultToSelectionApi_2818587300(arg_2818593163));
      break;
    case "setAllFindResultToSelection":
    case "set-all-find-result-to-selection":
      Temporary1 = some_2818593171(setAllFindResultToSelectionApi_2818587667(arg_2818593163));
      break;
    case "clearSelections":
    case "clear-selections":
      Temporary1 = some_2818593171(clearSelectionsApi_2818587731(arg_2818593163));
      break;
    case "moveCursorColumn":
    case "move-cursor-column":
      Temporary1 = some_2818593171(moveCursorColumnApi_2818587801(arg_2818593163));
      break;
    case "moveCursorLine":
    case "move-cursor-line":
      Temporary1 = some_2818593171(moveCursorLineApi_2818587884(arg_2818593163));
      break;
    case "moveCursorHome":
    case "move-cursor-home":
      Temporary1 = some_2818593171(moveCursorHomeApi_2818587948(arg_2818593163));
      break;
    case "moveCursorEnd":
    case "move-cursor-end":
      Temporary1 = some_2818593171(moveCursorEndApi_2818588009(arg_2818593163));
      break;
    case "moveCursorTo":
    case "move-cursor-to":
      Temporary1 = some_2818593171(moveCursorToApi_2818588080(arg_2818593163));
      break;
    case "moveCursorBefore":
    case "move-cursor-before":
      Temporary1 = some_2818593171(moveCursorBeforeApi_2818588156(arg_2818593163));
      break;
    case "moveCursorNextFindResult":
    case "move-cursor-next-find-result":
      Temporary1 = some_2818593171(moveCursorNextFindResultApi_2818588222(arg_2818593163));
      break;
    case "moveCursorPrevFindResult":
    case "move-cursor-prev-find-result":
      Temporary1 = some_2818593171(moveCursorPrevFindResultApi_2818588281(arg_2818593163));
      break;
    case "scrollToCursor":
    case "scroll-to-cursor":
      Temporary1 = some_2818593171(scrollToCursorApi_2818588337(arg_2818593163));
      break;
    case "reloadTreesitter":
    case "reload-treesitter":
      Temporary1 = some_2818593171(reloadTreesitterApi_2818588385(arg_2818593163));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2818593171(deleteLeftApi_2818588442(arg_2818593163));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2818593171(deleteRightApi_2818588499(arg_2818593163));
      break;
    case "getCommandCount":
    case "get-command-count":
      Temporary1 = some_2818593171(getCommandCountApi_2818588551(arg_2818593163));
      break;
    case "setCommandCount":
    case "set-command-count":
      Temporary1 = some_2818593171(setCommandCountApi_2818588601(arg_2818593163));
      break;
    case "setCommandCountRestore":
    case "set-command-count-restore":
      Temporary1 = some_2818593171(setCommandCountRestoreApi_2818588652(arg_2818593163));
      break;
    case "updateCommandCount":
    case "update-command-count":
      Temporary1 = some_2818593171(updateCommandCountApi_2818588703(arg_2818593163));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818593171(setFlagApi_2818588757(arg_2818593163));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818593171(getFlagApi_2818588816(arg_2818593163));
      break;
    case "runAction":
    case "run-action":
      Temporary1 = some_2818593171(runActionApi_2818588886(arg_2818593163));
      break;
    case "findWordBoundary":
    case "find-word-boundary":
      Temporary1 = some_2818593171(findWordBoundaryApi_2818588974(arg_2818593163));
      break;
    case "getSelectionForMove":
    case "get-selection-for-move":
      Temporary1 = some_2818593171(getSelectionForMoveApi_2818589132(arg_2818593163));
      break;
    case "setMove":
    case "set-move":
      Temporary1 = some_2818593171(setMoveApi_2818589457(arg_2818593163));
      break;
    case "deleteMove":
    case "delete-move":
      Temporary1 = some_2818593171(deleteMoveApi_2818589590(arg_2818593163));
      break;
    case "selectMove":
    case "select-move":
      Temporary1 = some_2818593171(selectMoveApi_2818589712(arg_2818593163));
      break;
    case "changeMove":
    case "change-move":
      Temporary1 = some_2818593171(changeMoveApi_2818589809(arg_2818593163));
      break;
    case "moveLast":
    case "move-last":
      Temporary1 = some_2818593171(moveLastApi_2818589916(arg_2818593163));
      break;
    case "moveFirst":
    case "move-first":
      Temporary1 = some_2818593171(moveFirstApi_2818590036(arg_2818593163));
      break;
    case "setSearchQuery":
    case "set-search-query":
      Temporary1 = some_2818593171(setSearchQueryApi_2818590116(arg_2818593163));
      break;
    case "setSearchQueryFromMove":
    case "set-search-query-from-move":
      Temporary1 = some_2818593171(setSearchQueryFromMoveApi_2818590191(arg_2818593163));
      break;
    case "gotoDefinition":
    case "goto-definition":
      Temporary1 = some_2818593171(gotoDefinitionApi_2818592700(arg_2818593163));
      break;
    case "getCompletions":
    case "get-completions":
      Temporary1 = some_2818593171(getCompletionsApi_2818592757(arg_2818593163));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2818593171(hideCompletionsApi_2818592836(arg_2818593163));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818593171(selectPrevCompletionApi_2818592896(arg_2818593163));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818593171(selectNextCompletionApi_2818592956(arg_2818593163));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818593171(applySelectedCompletionApi_2818593132(arg_2818593163));
      break;
    default: 
      Temporary1 = none_2818593370();
      break;
    }
    result_2818593170 = nimCopy(result_2818593170, Temporary1, NTI2818584815);

  return result_2818593170;

}

function isNone_2818593455(self_2818593457) {
  var result_2818593458 = false;

    result_2818593458 = (self_2818593457.val == null);

  return result_2818593458;

}

function handleActionInternal_2818572659(self_2818572660, action_2818572661, args_2818572662) {
    var Temporary3;

  var result_2818593390 = 0;

  BeforeRet: {
    if ((handleUnknownDocumentEditorAction_1291848854(self_2818572660.editor, self_2818572660, action_2818572661, args_2818572662) == 3)) {
    self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
    Label1: {
        Label2: while (true) {
        if (!(0 < self_2818572660.commandCount)) break Label2;
          if (!((handleUnknownDocumentEditorAction_1291848854(self_2818572660.editor, self_2818572660, action_2818572661, args_2818572662) == 3))) {
          break Label1;
          }
          
          self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
        }
    };
    self_2818572660.commandCount = self_2818572660.commandCountRestore;
    self_2818572660.commandCountRestore = 0;
    result_2818593390 = 3;
    break BeforeRet;
    }
    
    var Temporary3 = args_2818572662;
    if (ConstSet325[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
    insert_2818593409(Temporary3, "elems", toJson_2818584041({id: self_2818572660.id}, initToJsonOptions_1811939362()), 0);
    if (isSome_2818593438(dispatch_2818593165(action_2818572661, args_2818572662))) {
    self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
    Label4: {
        Label5: while (true) {
        if (!(0 < self_2818572660.commandCount)) break Label5;
          if (isNone_2818593455(dispatch_2818593165(action_2818572661, args_2818572662))) {
          break Label4;
          }
          
          self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
        }
    };
    self_2818572660.commandCount = self_2818572660.commandCountRestore;
    self_2818572660.commandCountRestore = 0;
    result_2818593390 = 3;
    break BeforeRet;
    }
    
    result_2818593390 = 1;
    break BeforeRet;
  };

  return result_2818593390;

}

function handleAction_2818572655(self_2818572656, action_2818572657, arg_2818572658) {
  var result_2818593472 = 0;

  BeforeRet: {
    var args_2818593473 = newJArray_1627390082();
++excHandler;
    try {
    Label2: {
      var a_2818593474 = null;
      var colontmp__536871988 = null;
      colontmp__536871988 = newStringStream_1660945417(arg_2818572658);
      var p_536871989 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871989[0], colontmp__536871988, [], false);
      try {
      var _ = getTok_1694499270(p_536871989[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871989[0].tok == 1))) break Label5;
            a_2818593474 = parseJson_1627395211(p_536871989[0], false, false, 0);
            add_1627390190(args_2818593473, a_2818593474);
          }
      };
      } finally {
      close_1694498967(p_536871989[0]);
      }
    };
    result_2818593472 = handleActionInternal_2818572659(self_2818572656, action_2818572657, args_2818593473);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818593479 = [mnewString(0)];
    fmtRes_2818593479[0].push.apply(fmtRes_2818593479[0], [91,101,100,105,116,111,114,46,116,101,120,116,93,32,104,97,110,100,108,101,65,99,116,105,111,110,58,32]);;
    formatValue_721420459(fmtRes_2818593479, 0, action_2818572657, []);
    fmtRes_2818593479[0].push.apply(fmtRes_2818593479[0], [44,32,70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,114,103,115,58,32,39]);;
    formatValue_721420459(fmtRes_2818593479, 0, arg_2818572658, []);
    fmtRes_2818593479[0].push.apply(fmtRes_2818593479[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818593479[0], NTI33554449)]);
    result_2818593472 = 0;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818593472;

}

function hasKey_1291847815(t_1291847818, key_1291847819) {
  var result_1291847820 = false;

    var hc_1291847821 = [0];
    result_1291847820 = (0 <= rawGet_1291847822(t_1291847818, key_1291847819, hc_1291847821, 0));

  return result_1291847820;

}

function contains_1291847809(t_1291847812, key_1291847813) {
  var result_1291847814 = false;

  BeforeRet: {
    result_1291847814 = hasKey_1291847815(t_1291847812, key_1291847813);
    break BeforeRet;
  };

  return result_1291847814;

}

function HEX5BHEX5D_1291848114(t_1291848117, key_1291848118) {
  var result_1291848119 = null;
  var result_1291848119_Idx = 0;

    var hcHEX60gensym22_1291848120 = [0];
    var indexHEX60gensym22_1291848127 = rawGet_1291847822(t_1291848117, key_1291848118, hcHEX60gensym22_1291848120, 0);
    if ((0 <= indexHEX60gensym22_1291848127)) {
    result_1291848119 = t_1291848117.data[chckIndx(indexHEX60gensym22_1291848127, 0, (t_1291848117.data).length - 1)]; result_1291848119_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291848118);
    }
    

  return [result_1291848119, result_1291848119_Idx];

}

function invokeCallback_1291847762(self_1291847763, context_1291847764, args_1291847765) {
    var Temporary1;

  var result_1291847766 = false;

  BeforeRet: {
    if (!(contains_1291847809(self_1291847763.callbacks, context_1291847764))) {
    result_1291847766 = false;
    break BeforeRet;
    }
    
    var id_1291848184 = (Temporary1 = HEX5BHEX5D_1291848114(self_1291847763.callbacks, context_1291847764), Temporary1)[0][Temporary1[1]];
++excHandler;
    try {
    result_1291847766 = false;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848195 = [mnewString(0)];
    fmtRes_1291848195[0].push.apply(fmtRes_1291848195[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,67,97,108,108,98,97,99,107,32]);;
    formatValue_2701131945(fmtRes_1291848195, 0, id_1291848184, []);
    fmtRes_1291848195[0].push.apply(fmtRes_1291848195[0], [58,32]);;
    formatValue_721420459(fmtRes_1291848195, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848195[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291847766 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291847766;

}

function handleInput_2818572663(self_2818572664, input_2818572665) {
  var result_2818593483 = 0;

  BeforeRet: {
    if (invokeCallback_1291847762(self_2818572664.editor, getContextWithMode_2818583609(self_2818572664, [101,100,105,116,111,114,46,116,101,120,116,46,105,110,112,117,116,45,104,97,110,100,108,101,114]), newJString_1627389994(input_2818572665))) {
    result_2818593483 = 3;
    break BeforeRet;
    }
    
    insertText_2818586075(self_2818572664, input_2818572665);
    result_2818593483 = 3;
    break BeforeRet;
  };

  return result_2818593483;

}

function toJson_2969578814(self_2969578815, opt_2969578816) {
  var result_2969578817 = null;

    result_2969578817 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2969578817, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,97,115,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2969578817, [105,100], newJInt_1627390040(self_2969578815.id));

  return result_2969578817;

}

function none_2969578746() {
  var result_2969578752 = ({val: null});

  return result_2969578752;

}

function some_2969578786(val_2969578788) {
  var result_2969578789 = ({val: null});

    if (!(!((val_2969578788 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2969578789.val = val_2969578788;

  return result_2969578789;

}

function getAstDocumentEditor_2969578736(wrapper_2969578737) {
      var Temporary1;

  var result_2969578742 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2969578742 = nimCopy(result_2969578742, none_2969578746(), NTI2969574382);
    break BeforeRet;
    }
    
      var oHEX60gensym531_2969578755 = getEditorForId_1291850661(gEditor, wrapper_2969578737.id);
      if (!isSome_2818583961(oHEX60gensym531_2969578755)) Temporary1 = false; else {        var editor_2969578778 = get_2818583981(oHEX60gensym531_2969578755);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2969578778.m_type, NTI2969568641)) {
    result_2969578742 = nimCopy(result_2969578742, some_2969578786(editor_2969578778), NTI2969574382);
    break BeforeRet;
    }
    
    }
    
    result_2969578742 = nimCopy(result_2969578742, none_2969578746(), NTI2969574382);
    break BeforeRet;
  };

  return result_2969578742;

}

function isNone_2969578844(self_2969578846) {
  var result_2969578847 = false;

    result_2969578847 = (self_2969578846.val == null);

  return result_2969578847;

}

function get_2969578864(self_2969578866) {
  var result_2969578867 = null;

    if (isNone_2969578844(self_2969578866)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969578867 = self_2969578866["val"];

  return result_2969578867;

}

function moveCursorScript_2969578827_2969578836(self_2969578837, direction_2969578838) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym536_2969578839 = getAstDocumentEditor_2969578736(self_2969578837);
      if (isNone_2969578844(rHEX60gensym536_2969578839)) {
      break BeforeRet;
      }
      
    };
    moveCursor_2969578831(get_2969578864(rHEX60gensym536_2969578839), direction_2969578838);
  };

  
}

function fromJsonHook_2969578818(t_2969578819, jsonNode_2969578820) {
    t_2969578819.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_2969578820, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2969578897(a_2969578899, b_2969578900, opt_2969578901) {
    if (!(!(HEX3DHEX3D_1627392026(b_2969578900, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2969578900}));
    }
    
    fromJsonHook_2969578818(a_2969578899, b_2969578900);

  
}

function jsonTo_2969578891(b_2969578893, opt_2969578895) {
  var result_2969578896 = [({id: 0})];

    fromJson_2969578897(result_2969578896[0], b_2969578893, opt_2969578895);

  return result_2969578896[0];

}

function moveCursorApi_2969578889(HEX3Atmp_2969578829) {
  var result_2969578890 = null;

    result_2969578890 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    moveCursorScript_2969578827_2969578836(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969578829, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2969578829, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969578890;

}

function moveCursorUpScript_2969578986_2969579004(self_2969579005) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym547_2969579006 = getAstDocumentEditor_2969578736(self_2969579005);
      if (isNone_2969578844(rHEX60gensym547_2969579006)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_2969578990(get_2969578864(rHEX60gensym547_2969579006));
  };

  
}

function moveCursorUpApi_2969579032(HEX3Atmp_2969578988) {
  var result_2969579033 = null;

    result_2969579033 = newJNull_1627390049();
    Label1: {
    };
    moveCursorUpScript_2969578986_2969579004(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969578988, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579033;

}

function moveCursorDownScript_2969579041_2969579047(self_2969579048) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym557_2969579049 = getAstDocumentEditor_2969578736(self_2969579048);
      if (isNone_2969578844(rHEX60gensym557_2969579049)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_2969579045(get_2969578864(rHEX60gensym557_2969579049));
  };

  
}

function moveCursorDownApi_2969579075(HEX3Atmp_2969579043) {
  var result_2969579076 = null;

    result_2969579076 = newJNull_1627390049();
    Label1: {
    };
    moveCursorDownScript_2969579041_2969579047(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579043, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579076;

}

function moveCursorNextScript_2969579084_2969579097(self_2969579098) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym565_2969579099 = getAstDocumentEditor_2969578736(self_2969579098);
      if (isNone_2969578844(rHEX60gensym565_2969579099)) {
      break BeforeRet;
      }
      
    };
    moveCursorNext_2969579088(get_2969578864(rHEX60gensym565_2969579099));
  };

  
}

function moveCursorNextApi_2969579125(HEX3Atmp_2969579086) {
  var result_2969579126 = null;

    result_2969579126 = newJNull_1627390049();
    Label1: {
    };
    moveCursorNextScript_2969579084_2969579097(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579086, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579126;

}

function moveCursorPrevScript_2969579145_2969579157(self_2969579158) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym573_2969579159 = getAstDocumentEditor_2969578736(self_2969579158);
      if (isNone_2969578844(rHEX60gensym573_2969579159)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrev_2969579149(get_2969578864(rHEX60gensym573_2969579159));
  };

  
}

function moveCursorPrevApi_2969579185(HEX3Atmp_2969579147) {
  var result_2969579186 = null;

    result_2969579186 = newJNull_1627390049();
    Label1: {
    };
    moveCursorPrevScript_2969579145_2969579157(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579147, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579186;

}

function moveCursorNextLineScript_2969579204_2969579236(self_2969579237) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym581_2969579238 = getAstDocumentEditor_2969578736(self_2969579237);
      if (isNone_2969578844(rHEX60gensym581_2969579238)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextLine_2969579208(get_2969578864(rHEX60gensym581_2969579238));
  };

  
}

function moveCursorNextLineApi_2969579264(HEX3Atmp_2969579206) {
  var result_2969579265 = null;

    result_2969579265 = newJNull_1627390049();
    Label1: {
    };
    moveCursorNextLineScript_2969579204_2969579236(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579206, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579265;

}

function moveCursorPrevLineScript_2969579282_2969579314(self_2969579315) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym589_2969579316 = getAstDocumentEditor_2969578736(self_2969579315);
      if (isNone_2969578844(rHEX60gensym589_2969579316)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevLine_2969579286(get_2969578864(rHEX60gensym589_2969579316));
  };

  
}

function moveCursorPrevLineApi_2969579342(HEX3Atmp_2969579284) {
  var result_2969579343 = null;

    result_2969579343 = newJNull_1627390049();
    Label1: {
    };
    moveCursorPrevLineScript_2969579282_2969579314(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579284, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579343;

}

function selectContainingScript_2969579361_2969579524(self_2969579525, container_2969579526) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym598_2969579527 = getAstDocumentEditor_2969578736(self_2969579525);
      if (isNone_2969578844(rHEX60gensym598_2969579527)) {
      break BeforeRet;
      }
      
    };
    selectContaining_2969579365(get_2969578864(rHEX60gensym598_2969579527), container_2969579526);
  };

  
}

function selectContainingApi_2969579554(HEX3Atmp_2969579363) {
  var result_2969579555 = null;

    result_2969579555 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    selectContainingScript_2969579361_2969579524(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579363, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969579363, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579555;

}

function deleteSelectedScript_2969579568_2969579577(self_2969579578) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym611_2969579579 = getAstDocumentEditor_2969578736(self_2969579578);
      if (isNone_2969578844(rHEX60gensym611_2969579579)) {
      break BeforeRet;
      }
      
    };
    deleteSelected_2969579572(get_2969578864(rHEX60gensym611_2969579579));
  };

  
}

function deleteSelectedApi_2969579605(HEX3Atmp_2969579570) {
  var result_2969579606 = null;

    result_2969579606 = newJNull_1627390049();
    Label1: {
    };
    deleteSelectedScript_2969579568_2969579577(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579570, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579606;

}

function copySelectedScript_2969579668_2969579677(self_2969579678) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym618_2969579679 = getAstDocumentEditor_2969578736(self_2969579678);
      if (isNone_2969578844(rHEX60gensym618_2969579679)) {
      break BeforeRet;
      }
      
    };
    copySelected_2969579672(get_2969578864(rHEX60gensym618_2969579679));
  };

  
}

function copySelectedApi_2969579705(HEX3Atmp_2969579670) {
  var result_2969579706 = null;

    result_2969579706 = newJNull_1627390049();
    Label1: {
    };
    copySelectedScript_2969579668_2969579677(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579670, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579706;

}

function finishEditScript_2969579729_2969579778(self_2969579779, apply_2969579780) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym626_2969579781 = getAstDocumentEditor_2969578736(self_2969579779);
      if (isNone_2969578844(rHEX60gensym626_2969579781)) {
      break BeforeRet;
      }
      
    };
    finishEdit_2969575583(get_2969578864(rHEX60gensym626_2969579781), apply_2969579780);
  };

  
}

function finishEditApi_2969579808(HEX3Atmp_2969579731) {
  var result_2969579809 = null;

    result_2969579809 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    finishEditScript_2969579729_2969579778(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579731, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_2969579731, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579809;

}

function undoScript2_2969579862_2969579894(self_2969579895) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym636_2969579896 = getAstDocumentEditor_2969578736(self_2969579895);
      if (isNone_2969578844(rHEX60gensym636_2969579896)) {
      break BeforeRet;
      }
      
    };
    undo_2969579866(get_2969578864(rHEX60gensym636_2969579896));
  };

  
}

function undoApi2_2969579922(HEX3Atmp_2969579864) {
  var result_2969579923 = null;

    result_2969579923 = newJNull_1627390049();
    Label1: {
    };
    undoScript2_2969579862_2969579894(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579864, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579923;

}

function redoScript2_2969579932_2969579964(self_2969579965) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym644_2969579966 = getAstDocumentEditor_2969578736(self_2969579965);
      if (isNone_2969578844(rHEX60gensym644_2969579966)) {
      break BeforeRet;
      }
      
    };
    redo_2969579936(get_2969578864(rHEX60gensym644_2969579966));
  };

  
}

function redoApi2_2969579992(HEX3Atmp_2969579934) {
  var result_2969579993 = null;

    result_2969579993 = newJNull_1627390049();
    Label1: {
    };
    redoScript2_2969579932_2969579964(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969579934, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969579993;

}

function insertAfterSmartScript_2969580001_2969580125(self_2969580126, nodeTemplate_2969580127) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym653_2969580128 = getAstDocumentEditor_2969578736(self_2969580126);
      if (isNone_2969578844(rHEX60gensym653_2969580128)) {
      break BeforeRet;
      }
      
    };
    insertAfterSmart_2969580005(get_2969578864(rHEX60gensym653_2969580128), nodeTemplate_2969580127);
  };

  
}

function insertAfterSmartApi_2969580155(HEX3Atmp_2969580003) {
  var result_2969580156 = null;

    result_2969580156 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    insertAfterSmartScript_2969580001_2969580125(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969580003, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580003, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969580156;

}

function insertAfterScript_2969580349_2969580441(self_2969580442, nodeTemplate_2969580443) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym665_2969580444 = getAstDocumentEditor_2969578736(self_2969580442);
      if (isNone_2969578844(rHEX60gensym665_2969580444)) {
      break BeforeRet;
      }
      
    };
    insertAfter_2969580353(get_2969578864(rHEX60gensym665_2969580444), nodeTemplate_2969580443);
  };

  
}

function insertAfterApi_2969580471(HEX3Atmp_2969580351) {
  var result_2969580472 = null;

    result_2969580472 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    insertAfterScript_2969580349_2969580441(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969580351, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580351, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969580472;

}

function insertBeforeScript_2969580497_2969580588(self_2969580589, nodeTemplate_2969580590) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym676_2969580591 = getAstDocumentEditor_2969578736(self_2969580589);
      if (isNone_2969578844(rHEX60gensym676_2969580591)) {
      break BeforeRet;
      }
      
    };
    insertBefore_2969580501(get_2969578864(rHEX60gensym676_2969580591), nodeTemplate_2969580590);
  };

  
}

function insertBeforeApi_2969580618(HEX3Atmp_2969580499) {
  var result_2969580619 = null;

    result_2969580619 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    insertBeforeScript_2969580497_2969580588(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969580499, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580499, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969580619;

}

function insertChildScript_2969580644_2969580734(self_2969580735, nodeTemplate_2969580736) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym687_2969580737 = getAstDocumentEditor_2969578736(self_2969580735);
      if (isNone_2969578844(rHEX60gensym687_2969580737)) {
      break BeforeRet;
      }
      
    };
    insertChild_2969580648(get_2969578864(rHEX60gensym687_2969580737), nodeTemplate_2969580736);
  };

  
}

function insertChildApi_2969580764(HEX3Atmp_2969580646) {
  var result_2969580765 = null;

    result_2969580765 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    insertChildScript_2969580644_2969580734(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969580646, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580646, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969580765;

}

function replaceScript_2969580790_2969580834(self_2969580835, nodeTemplate_2969580836) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym698_2969580837 = getAstDocumentEditor_2969578736(self_2969580835);
      if (isNone_2969578844(rHEX60gensym698_2969580837)) {
      break BeforeRet;
      }
      
    };
    replace_2969580794(get_2969578864(rHEX60gensym698_2969580837), nodeTemplate_2969580836);
  };

  
}

function replaceApi_2969580864(HEX3Atmp_2969580792) {
  var result_2969580865 = null;

    result_2969580865 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    replaceScript_2969580790_2969580834(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969580792, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580792, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969580865;

}

function replaceEmptyScript_2969580890_2969580938(self_2969580939, nodeTemplate_2969580940) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym707_2969580941 = getAstDocumentEditor_2969578736(self_2969580939);
      if (isNone_2969578844(rHEX60gensym707_2969580941)) {
      break BeforeRet;
      }
      
    };
    replaceEmpty_2969580894(get_2969578864(rHEX60gensym707_2969580941), nodeTemplate_2969580940);
  };

  
}

function replaceEmptyApi_2969580968(HEX3Atmp_2969580892) {
  var result_2969580969 = null;

    result_2969580969 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    replaceEmptyScript_2969580890_2969580938(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969580892, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580892, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969580969;

}

function replaceParentScript_2969580994_2969581010(self_2969581011) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym715_2969581012 = getAstDocumentEditor_2969578736(self_2969581011);
      if (isNone_2969578844(rHEX60gensym715_2969581012)) {
      break BeforeRet;
      }
      
    };
    replaceParent_2969580998(get_2969578864(rHEX60gensym715_2969581012));
  };

  
}

function replaceParentApi_2969581038(HEX3Atmp_2969580996) {
  var result_2969581039 = null;

    result_2969581039 = newJNull_1627390049();
    Label1: {
    };
    replaceParentScript_2969580994_2969581010(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969580996, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581039;

}

function wrapScript_2969581047_2969581115(self_2969581116, nodeTemplate_2969581117) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym723_2969581118 = getAstDocumentEditor_2969578736(self_2969581116);
      if (isNone_2969578844(rHEX60gensym723_2969581118)) {
      break BeforeRet;
      }
      
    };
    wrap_2969581051(get_2969578864(rHEX60gensym723_2969581118), nodeTemplate_2969581117);
  };

  
}

function wrapApi_2969581145(HEX3Atmp_2969581049) {
  var result_2969581146 = null;

    result_2969581146 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    wrapScript_2969581047_2969581115(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581049, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969581049, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581146;

}

function editPrevEmptyScript_2969581183_2969581195(self_2969581196) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym731_2969581197 = getAstDocumentEditor_2969578736(self_2969581196);
      if (isNone_2969578844(rHEX60gensym731_2969581197)) {
      break BeforeRet;
      }
      
    };
    editPrevEmpty_2969581187(get_2969578864(rHEX60gensym731_2969581197));
  };

  
}

function editPrevEmptyApi_2969581223(HEX3Atmp_2969581185) {
  var result_2969581224 = null;

    result_2969581224 = newJNull_1627390049();
    Label1: {
    };
    editPrevEmptyScript_2969581183_2969581195(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581185, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581224;

}

function editNextEmptyScript_2969581239_2969581259(self_2969581260) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym739_2969581261 = getAstDocumentEditor_2969578736(self_2969581260);
      if (isNone_2969578844(rHEX60gensym739_2969581261)) {
      break BeforeRet;
      }
      
    };
    editNextEmpty_2969581243(get_2969578864(rHEX60gensym739_2969581261));
  };

  
}

function editNextEmptyApi_2969581287(HEX3Atmp_2969581241) {
  var result_2969581288 = null;

    result_2969581288 = newJNull_1627390049();
    Label1: {
    };
    editNextEmptyScript_2969581239_2969581259(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581241, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581288;

}

function renameScript_2969581309_2969581315(self_2969581316) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym747_2969581317 = getAstDocumentEditor_2969578736(self_2969581316);
      if (isNone_2969578844(rHEX60gensym747_2969581317)) {
      break BeforeRet;
      }
      
    };
    rename_2969581313(get_2969578864(rHEX60gensym747_2969581317));
  };

  
}

function renameApi_2969581343(HEX3Atmp_2969581311) {
  var result_2969581344 = null;

    result_2969581344 = newJNull_1627390049();
    Label1: {
    };
    renameScript_2969581309_2969581315(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581311, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581344;

}

function selectPrevCompletionScript2_2969581352_2969581375(self_2969581376) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym754_2969581377 = getAstDocumentEditor_2969578736(self_2969581376);
      if (isNone_2969578844(rHEX60gensym754_2969581377)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2969581356(get_2969578864(rHEX60gensym754_2969581377));
  };

  
}

function selectPrevCompletionApi2_2969581403(HEX3Atmp_2969581354) {
  var result_2969581404 = null;

    result_2969581404 = newJNull_1627390049();
    Label1: {
    };
    selectPrevCompletionScript2_2969581352_2969581375(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581354, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581404;

}

function selectNextCompletionScript2_2969581412_2969581435(self_2969581436) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym762_2969581437 = getAstDocumentEditor_2969578736(self_2969581436);
      if (isNone_2969578844(rHEX60gensym762_2969581437)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2969581416(get_2969578864(rHEX60gensym762_2969581437));
  };

  
}

function selectNextCompletionApi2_2969581463(HEX3Atmp_2969581414) {
  var result_2969581464 = null;

    result_2969581464 = newJNull_1627390049();
    Label1: {
    };
    selectNextCompletionScript2_2969581412_2969581435(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581414, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581464;

}

function applySelectedCompletionScript2_2969581472_2969581591(self_2969581592) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym770_2969581593 = getAstDocumentEditor_2969578736(self_2969581592);
      if (isNone_2969578844(rHEX60gensym770_2969581593)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2969581476(get_2969578864(rHEX60gensym770_2969581593));
  };

  
}

function applySelectedCompletionApi2_2969581619(HEX3Atmp_2969581474) {
  var result_2969581620 = null;

    result_2969581620 = newJNull_1627390049();
    Label1: {
    };
    applySelectedCompletionScript2_2969581472_2969581591(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581474, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581620;

}

function cancelAndNextCompletionScript_2969581676_2969581682(self_2969581683) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym784_2969581684 = getAstDocumentEditor_2969578736(self_2969581683);
      if (isNone_2969578844(rHEX60gensym784_2969581684)) {
      break BeforeRet;
      }
      
    };
    cancelAndNextCompletion_2969581680(get_2969578864(rHEX60gensym784_2969581684));
  };

  
}

function cancelAndNextCompletionApi_2969581710(HEX3Atmp_2969581678) {
  var result_2969581711 = null;

    result_2969581711 = newJNull_1627390049();
    Label1: {
    };
    cancelAndNextCompletionScript_2969581676_2969581682(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581678, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581711;

}

function cancelAndPrevCompletionScript_2969581719_2969581725(self_2969581726) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym791_2969581727 = getAstDocumentEditor_2969578736(self_2969581726);
      if (isNone_2969578844(rHEX60gensym791_2969581727)) {
      break BeforeRet;
      }
      
    };
    cancelAndPrevCompletion_2969581723(get_2969578864(rHEX60gensym791_2969581727));
  };

  
}

function cancelAndPrevCompletionApi_2969581753(HEX3Atmp_2969581721) {
  var result_2969581754 = null;

    result_2969581754 = newJNull_1627390049();
    Label1: {
    };
    cancelAndPrevCompletionScript_2969581719_2969581725(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581721, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581754;

}

function cancelAndDeleteScript_2969581762_2969581771(self_2969581772) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym798_2969581773 = getAstDocumentEditor_2969578736(self_2969581772);
      if (isNone_2969578844(rHEX60gensym798_2969581773)) {
      break BeforeRet;
      }
      
    };
    cancelAndDelete_2969581766(get_2969578864(rHEX60gensym798_2969581773));
  };

  
}

function cancelAndDeleteApi_2969581799(HEX3Atmp_2969581764) {
  var result_2969581800 = null;

    result_2969581800 = newJNull_1627390049();
    Label1: {
    };
    cancelAndDeleteScript_2969581762_2969581771(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581764, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581800;

}

function moveNodeToPrevSpaceScript_2969581808_2969581918(self_2969581919) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym805_2969581920 = getAstDocumentEditor_2969578736(self_2969581919);
      if (isNone_2969578844(rHEX60gensym805_2969581920)) {
      break BeforeRet;
      }
      
    };
    moveNodeToPrevSpace_2969581812(get_2969578864(rHEX60gensym805_2969581920));
  };

  
}

function moveNodeToPrevSpaceApi_2969581946(HEX3Atmp_2969581810) {
  var result_2969581947 = null;

    result_2969581947 = newJNull_1627390049();
    Label1: {
    };
    moveNodeToPrevSpaceScript_2969581808_2969581918(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581810, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969581947;

}

function moveNodeToNextSpaceScript_2969581963_2969582074(self_2969582075) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym817_2969582076 = getAstDocumentEditor_2969578736(self_2969582075);
      if (isNone_2969578844(rHEX60gensym817_2969582076)) {
      break BeforeRet;
      }
      
    };
    moveNodeToNextSpace_2969581967(get_2969578864(rHEX60gensym817_2969582076));
  };

  
}

function moveNodeToNextSpaceApi_2969582102(HEX3Atmp_2969581965) {
  var result_2969582103 = null;

    result_2969582103 = newJNull_1627390049();
    Label1: {
    };
    moveNodeToNextSpaceScript_2969581963_2969582074(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969581965, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969582103;

}

function selectPrevScript2_2969582122_2969582128(self_2969582129) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym828_2969582130 = getAstDocumentEditor_2969578736(self_2969582129);
      if (isNone_2969578844(rHEX60gensym828_2969582130)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2969582126(get_2969578864(rHEX60gensym828_2969582130));
  };

  
}

function selectPrevApi2_2969582156(HEX3Atmp_2969582124) {
  var result_2969582157 = null;

    result_2969582157 = newJNull_1627390049();
    Label1: {
    };
    selectPrevScript2_2969582122_2969582128(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969582124, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969582157;

}

function selectNextScript2_2969582166_2969582172(self_2969582173) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym835_2969582174 = getAstDocumentEditor_2969578736(self_2969582173);
      if (isNone_2969578844(rHEX60gensym835_2969582174)) {
      break BeforeRet;
      }
      
    };
    selectNext_2969582170(get_2969578864(rHEX60gensym835_2969582174));
  };

  
}

function selectNextApi2_2969582200(HEX3Atmp_2969582168) {
  var result_2969582201 = null;

    result_2969582201 = newJNull_1627390049();
    Label1: {
    };
    selectNextScript2_2969582166_2969582172(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969582168, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969582201;

}

function openGotoSymbolPopupScript_2969582227_2969582472(self_2969582473) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym843_2969582474 = getAstDocumentEditor_2969578736(self_2969582473);
      if (isNone_2969578844(rHEX60gensym843_2969582474)) {
      break BeforeRet;
      }
      
    };
    openGotoSymbolPopup_2969582231(get_2969578864(rHEX60gensym843_2969582474));
  };

  
}

function openGotoSymbolPopupApi_2969582500(HEX3Atmp_2969582229) {
  var result_2969582501 = null;

    result_2969582501 = newJNull_1627390049();
    Label1: {
    };
    openGotoSymbolPopupScript_2969582227_2969582472(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969582229, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969582501;

}

function gotoScript_2969582642_2969583071(self_2969583072, where_2969583073) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym855_2969583074 = getAstDocumentEditor_2969578736(self_2969583072);
      if (isNone_2969578844(rHEX60gensym855_2969583074)) {
      break BeforeRet;
      }
      
    };
    goto_2969582646(get_2969578864(rHEX60gensym855_2969583074), where_2969583073);
  };

  
}

function gotoApi_2969583101(HEX3Atmp_2969582644) {
  var result_2969583102 = null;

    result_2969583102 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    gotoScript_2969582642_2969583071(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969582644, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969582644, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969583102;

}

function runSelectedFunctionScript_2969583205_2969583430(self_2969583431) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym877_2969583432 = getAstDocumentEditor_2969578736(self_2969583431);
      if (isNone_2969578844(rHEX60gensym877_2969583432)) {
      break BeforeRet;
      }
      
    };
    runSelectedFunction_2969583209(get_2969578864(rHEX60gensym877_2969583432));
  };

  
}

function runSelectedFunctionApi_2969583458(HEX3Atmp_2969583207) {
  var result_2969583459 = null;

    result_2969583459 = newJNull_1627390049();
    Label1: {
    };
    runSelectedFunctionScript_2969583205_2969583430(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969583207, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969583459;

}

function toggleOptionScript_2969583476_2969583483(self_2969583484, name_2969583485) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym899_2969583486 = getAstDocumentEditor_2969578736(self_2969583484);
      if (isNone_2969578844(rHEX60gensym899_2969583486)) {
      break BeforeRet;
      }
      
    };
    toggleOption_2969583480(get_2969578864(rHEX60gensym899_2969583486), name_2969583485);
  };

  
}

function toggleOptionApi_2969583513(HEX3Atmp_2969583478) {
  var result_2969583514 = null;

    result_2969583514 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    toggleOptionScript_2969583476_2969583483(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969583478, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969583478, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969583514;

}

function runLastCommandScript_2969583531_2969583538(self_2969583539, which_2969583540) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym907_2969583541 = getAstDocumentEditor_2969578736(self_2969583539);
      if (isNone_2969578844(rHEX60gensym907_2969583541)) {
      break BeforeRet;
      }
      
    };
    runLastCommand_2969583535(get_2969578864(rHEX60gensym907_2969583541), which_2969583540);
  };

  
}

function runLastCommandApi_2969583568(HEX3Atmp_2969583533) {
  var result_2969583569 = null;

    result_2969583569 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    runLastCommandScript_2969583531_2969583538(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969583533, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969583533, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969583569;

}

function selectCenterNodeScript_2969583582_2969583845(self_2969583846) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym914_2969583847 = getAstDocumentEditor_2969578736(self_2969583846);
      if (isNone_2969578844(rHEX60gensym914_2969583847)) {
      break BeforeRet;
      }
      
    };
    selectCenterNode_2969583586(get_2969578864(rHEX60gensym914_2969583847));
  };

  
}

function selectCenterNodeApi_2969583873(HEX3Atmp_2969583584) {
  var result_2969583874 = null;

    result_2969583874 = newJNull_1627390049();
    Label1: {
    };
    selectCenterNodeScript_2969583582_2969583845(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969583584, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969583874;

}

function scrollScript_2969583911_2969583922(self_2969583923, amount_2969583924) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym930_2969583925 = getAstDocumentEditor_2969578736(self_2969583923);
      if (isNone_2969578844(rHEX60gensym930_2969583925)) {
      break BeforeRet;
      }
      
    };
    scroll_2969583915(get_2969578864(rHEX60gensym930_2969583925), amount_2969583924);
  };

  
}

function scrollApi_2969583952(HEX3Atmp_2969583913) {
  var result_2969583953 = null;

    result_2969583953 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scrollScript_2969583911_2969583922(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969583913, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586352(HEX5BHEX5D_1627393116(HEX3Atmp_2969583913, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969583953;

}

function scrollOutputScript_2969583966_2969583984(self_2969583985, arg_2969583986) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym938_2969583987 = getAstDocumentEditor_2969578736(self_2969583985);
      if (isNone_2969578844(rHEX60gensym938_2969583987)) {
      break BeforeRet;
      }
      
    };
    scrollOutput_2969583970(get_2969578864(rHEX60gensym938_2969583987), arg_2969583986);
  };

  
}

function scrollOutputApi_2969584014(HEX3Atmp_2969583968) {
  var result_2969584015 = null;

    result_2969584015 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scrollOutputScript_2969583966_2969583984(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969583968, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969583968, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969584015;

}

function dumpContextScript_2969584028_2969584034(self_2969584035) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym945_2969584036 = getAstDocumentEditor_2969578736(self_2969584035);
      if (isNone_2969578844(rHEX60gensym945_2969584036)) {
      break BeforeRet;
      }
      
    };
    dumpContext_2969584032(get_2969578864(rHEX60gensym945_2969584036));
  };

  
}

function dumpContextApi_2969584062(HEX3Atmp_2969584030) {
  var result_2969584063 = null;

    result_2969584063 = newJNull_1627390049();
    Label1: {
    };
    dumpContextScript_2969584028_2969584034(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969584030, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969584063;

}

function setModeScript2_2969584163_2969584202(self_2969584203, mode_2969584204) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym953_2969584205 = getAstDocumentEditor_2969578736(self_2969584203);
      if (isNone_2969578844(rHEX60gensym953_2969584205)) {
      break BeforeRet;
      }
      
    };
    setMode_2969584167(get_2969578864(rHEX60gensym953_2969584205), mode_2969584204);
  };

  
}

function setModeApi2_2969584232(HEX3Atmp_2969584165) {
  var result_2969584233 = null;

    result_2969584233 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setModeScript2_2969584163_2969584202(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969584165, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584165, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_2969584233;

}

function modeScript2_2969584247_2969584254(self_2969584255) {
  var result_2969584256 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym963_2969584257 = getAstDocumentEditor_2969578736(self_2969584255);
      if (isNone_2969578844(rHEX60gensym963_2969584257)) {
      break BeforeRet;
      }
      
    };
    result_2969584256 = nimCopy(null, mode_2969584251(get_2969578864(rHEX60gensym963_2969584257)), NTI33554449);
  };

  return result_2969584256;

}

function modeApi2_2969584284(HEX3Atmp_2969584249) {
  var result_2969584285 = null;

  BeforeRet: {
    result_2969584285 = newJNull_1627390049();
    Label1: {
    };
    result_2969584285 = toJson_1811939932(modeScript2_2969584247_2969584254(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969584249, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2969584285;

}

function getContextWithModeScript2_2969584297_2969584305(self_2969584306, context_2969584307) {
  var result_2969584308 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym972_2969584309 = getAstDocumentEditor_2969578736(self_2969584306);
      if (isNone_2969578844(rHEX60gensym972_2969584309)) {
      break BeforeRet;
      }
      
    };
    result_2969584308 = nimCopy(null, getContextWithMode_2969584301(get_2969578864(rHEX60gensym972_2969584309), context_2969584307), NTI33554449);
  };

  return result_2969584308;

}

function getContextWithModeApi2_2969584337(HEX3Atmp_2969584299) {
  var result_2969584338 = null;

  BeforeRet: {
    result_2969584338 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_2969584338 = toJson_1811939932(getContextWithModeScript2_2969584297_2969584305(jsonTo_2969578891(HEX5BHEX5D_1627393116(HEX3Atmp_2969584299, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584299, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_2969584338;

}

function dispatch_2969584357(command_2969584356, arg_2969584355) {
    var Temporary1;

  var result_2969584359 = ({val: null});

    switch (toJSStr(command_2969584356)) {
    case "moveCursor":
    case "move-cursor":
      Temporary1 = some_2818593171(moveCursorApi_2969578889(arg_2969584355));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2818593171(moveCursorUpApi_2969579032(arg_2969584355));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2818593171(moveCursorDownApi_2969579075(arg_2969584355));
      break;
    case "moveCursorNext":
    case "move-cursor-next":
      Temporary1 = some_2818593171(moveCursorNextApi_2969579125(arg_2969584355));
      break;
    case "moveCursorPrev":
    case "move-cursor-prev":
      Temporary1 = some_2818593171(moveCursorPrevApi_2969579185(arg_2969584355));
      break;
    case "moveCursorNextLine":
    case "move-cursor-next-line":
      Temporary1 = some_2818593171(moveCursorNextLineApi_2969579264(arg_2969584355));
      break;
    case "moveCursorPrevLine":
    case "move-cursor-prev-line":
      Temporary1 = some_2818593171(moveCursorPrevLineApi_2969579342(arg_2969584355));
      break;
    case "selectContaining":
    case "select-containing":
      Temporary1 = some_2818593171(selectContainingApi_2969579554(arg_2969584355));
      break;
    case "deleteSelected":
    case "delete-selected":
      Temporary1 = some_2818593171(deleteSelectedApi_2969579605(arg_2969584355));
      break;
    case "copySelected":
    case "copy-selected":
      Temporary1 = some_2818593171(copySelectedApi_2969579705(arg_2969584355));
      break;
    case "finishEdit":
    case "finish-edit":
      Temporary1 = some_2818593171(finishEditApi_2969579808(arg_2969584355));
      break;
    case "undo":
      Temporary1 = some_2818593171(undoApi2_2969579922(arg_2969584355));
      break;
    case "redo":
      Temporary1 = some_2818593171(redoApi2_2969579992(arg_2969584355));
      break;
    case "insertAfterSmart":
    case "insert-after-smart":
      Temporary1 = some_2818593171(insertAfterSmartApi_2969580155(arg_2969584355));
      break;
    case "insertAfter":
    case "insert-after":
      Temporary1 = some_2818593171(insertAfterApi_2969580471(arg_2969584355));
      break;
    case "insertBefore":
    case "insert-before":
      Temporary1 = some_2818593171(insertBeforeApi_2969580618(arg_2969584355));
      break;
    case "insertChild":
    case "insert-child":
      Temporary1 = some_2818593171(insertChildApi_2969580764(arg_2969584355));
      break;
    case "replace":
      Temporary1 = some_2818593171(replaceApi_2969580864(arg_2969584355));
      break;
    case "replaceEmpty":
    case "replace-empty":
      Temporary1 = some_2818593171(replaceEmptyApi_2969580968(arg_2969584355));
      break;
    case "replaceParent":
    case "replace-parent":
      Temporary1 = some_2818593171(replaceParentApi_2969581038(arg_2969584355));
      break;
    case "wrap":
      Temporary1 = some_2818593171(wrapApi_2969581145(arg_2969584355));
      break;
    case "editPrevEmpty":
    case "edit-prev-empty":
      Temporary1 = some_2818593171(editPrevEmptyApi_2969581223(arg_2969584355));
      break;
    case "editNextEmpty":
    case "edit-next-empty":
      Temporary1 = some_2818593171(editNextEmptyApi_2969581287(arg_2969584355));
      break;
    case "rename":
      Temporary1 = some_2818593171(renameApi_2969581343(arg_2969584355));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818593171(selectPrevCompletionApi2_2969581403(arg_2969584355));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818593171(selectNextCompletionApi2_2969581463(arg_2969584355));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818593171(applySelectedCompletionApi2_2969581619(arg_2969584355));
      break;
    case "cancelAndNextCompletion":
    case "cancel-and-next-completion":
      Temporary1 = some_2818593171(cancelAndNextCompletionApi_2969581710(arg_2969584355));
      break;
    case "cancelAndPrevCompletion":
    case "cancel-and-prev-completion":
      Temporary1 = some_2818593171(cancelAndPrevCompletionApi_2969581753(arg_2969584355));
      break;
    case "cancelAndDelete":
    case "cancel-and-delete":
      Temporary1 = some_2818593171(cancelAndDeleteApi_2969581799(arg_2969584355));
      break;
    case "moveNodeToPrevSpace":
    case "move-node-to-prev-space":
      Temporary1 = some_2818593171(moveNodeToPrevSpaceApi_2969581946(arg_2969584355));
      break;
    case "moveNodeToNextSpace":
    case "move-node-to-next-space":
      Temporary1 = some_2818593171(moveNodeToNextSpaceApi_2969582102(arg_2969584355));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818593171(selectPrevApi2_2969582156(arg_2969584355));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818593171(selectNextApi2_2969582200(arg_2969584355));
      break;
    case "openGotoSymbolPopup":
    case "open-goto-symbol-popup":
      Temporary1 = some_2818593171(openGotoSymbolPopupApi_2969582500(arg_2969584355));
      break;
    case "goto":
      Temporary1 = some_2818593171(gotoApi_2969583101(arg_2969584355));
      break;
    case "runSelectedFunction":
    case "run-selected-function":
      Temporary1 = some_2818593171(runSelectedFunctionApi_2969583458(arg_2969584355));
      break;
    case "toggleOption":
    case "toggle-option":
      Temporary1 = some_2818593171(toggleOptionApi_2969583513(arg_2969584355));
      break;
    case "runLastCommand":
    case "run-last-command":
      Temporary1 = some_2818593171(runLastCommandApi_2969583568(arg_2969584355));
      break;
    case "selectCenterNode":
    case "select-center-node":
      Temporary1 = some_2818593171(selectCenterNodeApi_2969583873(arg_2969584355));
      break;
    case "scroll":
      Temporary1 = some_2818593171(scrollApi_2969583952(arg_2969584355));
      break;
    case "scrollOutput":
    case "scroll-output":
      Temporary1 = some_2818593171(scrollOutputApi_2969584014(arg_2969584355));
      break;
    case "dumpContext":
    case "dump-context":
      Temporary1 = some_2818593171(dumpContextApi_2969584062(arg_2969584355));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593171(setModeApi2_2969584232(arg_2969584355));
      break;
    case "mode":
      Temporary1 = some_2818593171(modeApi2_2969584284(arg_2969584355));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593171(getContextWithModeApi2_2969584337(arg_2969584355));
      break;
    default: 
      Temporary1 = none_2818593370();
      break;
    }
    result_2969584359 = nimCopy(result_2969584359, Temporary1, NTI2818584815);

  return result_2969584359;

}

function handleAction_2969583526(self_2969583527, action_2969583528, arg_2969583529) {
  var result_2969584508 = 0;

  BeforeRet: {
    var args_2969584509 = newJArray_1627390082();
    add_1627390190(args_2969584509, toJson_2969578814({id: self_2969583527.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_2969584510 = null;
      var colontmp__536872198 = null;
      colontmp__536872198 = newStringStream_1660945417(arg_2969583529);
      var p_536872199 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872199[0], colontmp__536872198, [], false);
      try {
      var _ = getTok_1694499270(p_536872199[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536872199[0].tok == 1))) break Label4;
            a_2969584510 = parseJson_1627395211(p_536872199[0], false, false, 0);
            add_1627390190(args_2969584509, a_2969584510);
          }
      };
      } finally {
      close_1694498967(p_536872199[0]);
      }
    };
    var newLastCommand_2969584511 = {Field0: nimCopy(null, action_2969583528, NTI33554449), Field1: nimCopy(null, arg_2969583529, NTI33554449)};
    try {
    if ((handleUnknownDocumentEditorAction_1291848854(self_2969583527.editor, self_2969583527, action_2969583528, args_2969584509) == 3)) {
    result_2969584508 = 3;
    break BeforeRet;
    }
    
    if (isSome_2818593438(dispatch_2969584357(action_2969583528, args_2969584509))) {
    result_2969584508 = 3;
    break BeforeRet;
    }
    
    result_2969584508 = 1;
    break BeforeRet;
    } finally {
    self_2969583527.lastCommand = nimCopy(self_2969583527.lastCommand, newLastCommand_2969584511, NTI2969568667);
    }
  };

  return result_2969584508;

}

function toJson_3254793025(self_3254793026, opt_3254793027) {
  var result_3254793028 = null;

    result_3254793028 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3254793028, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,109,111,100,101,108]));
    HEX5BHEX5DHEX3D_1627391903(result_3254793028, [105,100], newJInt_1627390040(self_3254793026.id));

  return result_3254793028;

}

function none_3254794464() {
  var result_3254794470 = ({val: null});

  return result_3254794470;

}

function some_3254794504(val_3254794506) {
  var result_3254794507 = ({val: null});

    if (!(!((val_3254794506 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3254794507.val = val_3254794506;

  return result_3254794507;

}

function getModelDocumentEditor_3254794454(wrapper_3254794455) {
      var Temporary1;

  var result_3254794460 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3254794460 = nimCopy(result_3254794460, none_3254794464(), NTI3254787440);
    break BeforeRet;
    }
    
      var oHEX60gensym205_3254794473 = getEditorForId_1291850661(gEditor, wrapper_3254794455.id);
      if (!isSome_2818583961(oHEX60gensym205_3254794473)) Temporary1 = false; else {        var editor_3254794496 = get_2818583981(oHEX60gensym205_3254794473);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3254794496.m_type, NTI3254780014)) {
    result_3254794460 = nimCopy(result_3254794460, some_3254794504(editor_3254794496), NTI3254787440);
    break BeforeRet;
    }
    
    }
    
    result_3254794460 = nimCopy(result_3254794460, none_3254794464(), NTI3254787440);
    break BeforeRet;
  };

  return result_3254794460;

}

function isNone_3254794598(self_3254794600) {
  var result_3254794601 = false;

    result_3254794601 = (self_3254794600.val == null);

  return result_3254794601;

}

function get_3254794618(self_3254794620) {
  var result_3254794621 = null;

    if (isNone_3254794598(self_3254794620)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3254794621 = self_3254794620["val"];

  return result_3254794621;

}

function scrollScript2_3254794579_3254794590(self_3254794591, amount_3254794592) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym213_3254794593 = getModelDocumentEditor_3254794454(self_3254794591);
      if (isNone_3254794598(rHEX60gensym213_3254794593)) {
      break BeforeRet;
      }
      
    };
    scroll_3254794583(get_3254794618(rHEX60gensym213_3254794593), amount_3254794592);
  };

  
}

function fromJsonHook_3254793029(t_3254793030, jsonNode_3254793031) {
    t_3254793030.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_3254793031, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3254794651(a_3254794653, b_3254794654, opt_3254794655) {
    if (!(!(HEX3DHEX3D_1627392026(b_3254794654, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [77,111,100,101,108,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_3254794654}));
    }
    
    fromJsonHook_3254793029(a_3254794653, b_3254794654);

  
}

function jsonTo_3254794645(b_3254794647, opt_3254794649) {
  var result_3254794650 = [({id: 0})];

    fromJson_3254794651(result_3254794650[0], b_3254794647, opt_3254794649);

  return result_3254794650[0];

}

function scrollApi2_3254794643(HEX3Atmp_3254794581) {
  var result_3254794644 = null;

    result_3254794644 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    scrollScript2_3254794579_3254794590(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254794581, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586352(HEX5BHEX5D_1627393116(HEX3Atmp_3254794581, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254794644;

}

function setModeScript22_3254794682_3254794721(self_3254794722, mode_3254794723) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym223_3254794724 = getModelDocumentEditor_3254794454(self_3254794722);
      if (isNone_3254794598(rHEX60gensym223_3254794724)) {
      break BeforeRet;
      }
      
    };
    setMode_3254794686(get_3254794618(rHEX60gensym223_3254794724), mode_3254794723);
  };

  
}

function setModeApi22_3254794751(HEX3Atmp_3254794684) {
  var result_3254794752 = null;

    result_3254794752 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    setModeScript22_3254794682_3254794721(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254794684, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_3254794684, 1), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254794752;

}

function modeScript22_3254797973_3254797980(self_3254797981) {
  var result_3254797982 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym316_3254797983 = getModelDocumentEditor_3254794454(self_3254797981);
      if (isNone_3254794598(rHEX60gensym316_3254797983)) {
      break BeforeRet;
      }
      
    };
    result_3254797982 = nimCopy(null, mode_3254797977(get_3254794618(rHEX60gensym316_3254797983)), NTI33554449);
  };

  return result_3254797982;

}

function modeApi22_3254798010(HEX3Atmp_3254797975) {
  var result_3254798011 = null;

  BeforeRet: {
    result_3254798011 = newJNull_1627390049();
    Label1: {
    };
    result_3254798011 = toJson_1811939932(modeScript22_3254797973_3254797980(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254797975, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_3254798011;

}

function getContextWithModeScript22_3254798023_3254798031(self_3254798032, context_3254798033) {
  var result_3254798034 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym325_3254798035 = getModelDocumentEditor_3254794454(self_3254798032);
      if (isNone_3254794598(rHEX60gensym325_3254798035)) {
      break BeforeRet;
      }
      
    };
    result_3254798034 = nimCopy(null, getContextWithMode_3254798027(get_3254794618(rHEX60gensym325_3254798035), context_3254798033), NTI33554449);
  };

  return result_3254798034;

}

function getContextWithModeApi22_3254798063(HEX3Atmp_3254798025) {
  var result_3254798064 = null;

  BeforeRet: {
    result_3254798064 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_3254798064 = toJson_1811939932(getContextWithModeScript22_3254798023_3254798031(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798025, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_3254798025, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_3254798064;

}

function moveCursorLeftScript_3254798081_3254798118(self_3254798119, select_3254798120) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym334_3254798121 = getModelDocumentEditor_3254794454(self_3254798119);
      if (isNone_3254794598(rHEX60gensym334_3254798121)) {
      break BeforeRet;
      }
      
    };
    moveCursorLeft_3254798085(get_3254794618(rHEX60gensym334_3254798121), select_3254798120);
  };

  
}

function moveCursorLeftApi_3254798148(HEX3Atmp_3254798083) {
      var Temporary3;

  var result_3254798149 = null;

    result_3254798149 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254798083))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254798083, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorLeftScript_3254798081_3254798118(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798083, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254798149;

}

function moveCursorRightScript_3254798199_3254798236(self_3254798237, select_3254798238) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym345_3254798239 = getModelDocumentEditor_3254794454(self_3254798237);
      if (isNone_3254794598(rHEX60gensym345_3254798239)) {
      break BeforeRet;
      }
      
    };
    moveCursorRight_3254798203(get_3254794618(rHEX60gensym345_3254798239), select_3254798238);
  };

  
}

function moveCursorRightApi_3254798266(HEX3Atmp_3254798201) {
      var Temporary3;

  var result_3254798267 = null;

    result_3254798267 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254798201))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254798201, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorRightScript_3254798199_3254798236(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798201, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254798267;

}

function moveCursorLeftLineScript_3254798280_3254798319(self_3254798320, select_3254798321) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym356_3254798322 = getModelDocumentEditor_3254794454(self_3254798320);
      if (isNone_3254794598(rHEX60gensym356_3254798322)) {
      break BeforeRet;
      }
      
    };
    moveCursorLeftLine_3254798284(get_3254794618(rHEX60gensym356_3254798322), select_3254798321);
  };

  
}

function moveCursorLeftLineApi_3254798349(HEX3Atmp_3254798282) {
      var Temporary3;

  var result_3254798350 = null;

    result_3254798350 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254798282))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254798282, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorLeftLineScript_3254798280_3254798319(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798282, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254798350;

}

function moveCursorRightLineScript_3254798376_3254798415(self_3254798416, select_3254798417) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym366_3254798418 = getModelDocumentEditor_3254794454(self_3254798416);
      if (isNone_3254794598(rHEX60gensym366_3254798418)) {
      break BeforeRet;
      }
      
    };
    moveCursorRightLine_3254798380(get_3254794618(rHEX60gensym366_3254798418), select_3254798417);
  };

  
}

function moveCursorRightLineApi_3254798445(HEX3Atmp_3254798378) {
      var Temporary3;

  var result_3254798446 = null;

    result_3254798446 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254798378))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254798378, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorRightLineScript_3254798376_3254798415(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798378, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254798446;

}

function moveCursorLineStartScript_3254798469_3254798509(self_3254798510, select_3254798511) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym376_3254798512 = getModelDocumentEditor_3254794454(self_3254798510);
      if (isNone_3254794598(rHEX60gensym376_3254798512)) {
      break BeforeRet;
      }
      
    };
    moveCursorLineStart_3254798473(get_3254794618(rHEX60gensym376_3254798512), select_3254798511);
  };

  
}

function moveCursorLineStartApi_3254798539(HEX3Atmp_3254798471) {
      var Temporary3;

  var result_3254798540 = null;

    result_3254798540 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254798471))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254798471, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorLineStartScript_3254798469_3254798509(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798471, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254798540;

}

function moveCursorLineEndScript_3254798553_3254798596(self_3254798597, select_3254798598) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym388_3254798599 = getModelDocumentEditor_3254794454(self_3254798597);
      if (isNone_3254794598(rHEX60gensym388_3254798599)) {
      break BeforeRet;
      }
      
    };
    moveCursorLineEnd_3254798557(get_3254794618(rHEX60gensym388_3254798599), select_3254798598);
  };

  
}

function moveCursorLineEndApi_3254798626(HEX3Atmp_3254798555) {
      var Temporary3;

  var result_3254798627 = null;

    result_3254798627 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254798555))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254798555, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorLineEndScript_3254798553_3254798596(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798555, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254798627;

}

function moveCursorLineStartInlineScript_3254798640_3254798680(self_3254798681, select_3254798682) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym400_3254798683 = getModelDocumentEditor_3254794454(self_3254798681);
      if (isNone_3254794598(rHEX60gensym400_3254798683)) {
      break BeforeRet;
      }
      
    };
    moveCursorLineStartInline_3254798644(get_3254794618(rHEX60gensym400_3254798683), select_3254798682);
  };

  
}

function moveCursorLineStartInlineApi_3254798710(HEX3Atmp_3254798642) {
      var Temporary3;

  var result_3254798711 = null;

    result_3254798711 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254798642))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254798642, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorLineStartInlineScript_3254798640_3254798680(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798642, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254798711;

}

function moveCursorLineEndInlineScript_3254798726_3254798766(self_3254798767, select_3254798768) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym411_3254798769 = getModelDocumentEditor_3254794454(self_3254798767);
      if (isNone_3254794598(rHEX60gensym411_3254798769)) {
      break BeforeRet;
      }
      
    };
    moveCursorLineEndInline_3254798730(get_3254794618(rHEX60gensym411_3254798769), select_3254798768);
  };

  
}

function moveCursorLineEndInlineApi_3254798796(HEX3Atmp_3254798728) {
      var Temporary3;

  var result_3254798797 = null;

    result_3254798797 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254798728))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254798728, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorLineEndInlineScript_3254798726_3254798766(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798728, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254798797;

}

function moveCursorUpScript2_3254798811_3254798873(self_3254798874, select_3254798875) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym422_3254798876 = getModelDocumentEditor_3254794454(self_3254798874);
      if (isNone_3254794598(rHEX60gensym422_3254798876)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_3254798815(get_3254794618(rHEX60gensym422_3254798876), select_3254798875);
  };

  
}

function moveCursorUpApi2_3254798903(HEX3Atmp_3254798813) {
      var Temporary3;

  var result_3254798904 = null;

    result_3254798904 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254798813))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254798813, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorUpScript2_3254798811_3254798873(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798813, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254798904;

}

function moveCursorDownScript2_3254798924_3254798986(self_3254798987, select_3254798988) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym434_3254798989 = getModelDocumentEditor_3254794454(self_3254798987);
      if (isNone_3254794598(rHEX60gensym434_3254798989)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_3254798928(get_3254794618(rHEX60gensym434_3254798989), select_3254798988);
  };

  
}

function moveCursorDownApi2_3254799016(HEX3Atmp_3254798926) {
      var Temporary3;

  var result_3254799017 = null;

    result_3254799017 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254798926))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254798926, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorDownScript2_3254798924_3254798986(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254798926, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254799017;

}

function moveCursorLeftCellScript_3254799030_3254799089(self_3254799090, select_3254799091) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym445_3254799092 = getModelDocumentEditor_3254794454(self_3254799090);
      if (isNone_3254794598(rHEX60gensym445_3254799092)) {
      break BeforeRet;
      }
      
    };
    moveCursorLeftCell_3254799034(get_3254794618(rHEX60gensym445_3254799092), select_3254799091);
  };

  
}

function moveCursorLeftCellApi_3254799119(HEX3Atmp_3254799032) {
      var Temporary3;

  var result_3254799120 = null;

    result_3254799120 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254799032))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254799032, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorLeftCellScript_3254799030_3254799089(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254799032, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254799120;

}

function moveCursorRightCellScript_3254799135_3254799194(self_3254799195, select_3254799196) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym456_3254799197 = getModelDocumentEditor_3254794454(self_3254799195);
      if (isNone_3254794598(rHEX60gensym456_3254799197)) {
      break BeforeRet;
      }
      
    };
    moveCursorRightCell_3254799139(get_3254794618(rHEX60gensym456_3254799197), select_3254799196);
  };

  
}

function moveCursorRightCellApi_3254799224(HEX3Atmp_3254799137) {
      var Temporary3;

  var result_3254799225 = null;

    result_3254799225 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254799137))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254799137, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    moveCursorRightCellScript_3254799135_3254799194(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254799137, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254799225;

}

function selectNodeScript_3254799240_3254799329(self_3254799330, select_3254799331) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym467_3254799332 = getModelDocumentEditor_3254794454(self_3254799330);
      if (isNone_3254794598(rHEX60gensym467_3254799332)) {
      break BeforeRet;
      }
      
    };
    selectNode_3254799244(get_3254794618(rHEX60gensym467_3254799332), select_3254799331);
  };

  
}

function selectNodeApi_3254799359(HEX3Atmp_3254799242) {
      var Temporary3;

  var result_3254799360 = null;

    result_3254799360 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254799242))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254799242, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    selectNodeScript_3254799240_3254799329(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254799242, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254799360;

}

function selectParentCellScript_3254799374_3254799380(self_3254799381) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym476_3254799382 = getModelDocumentEditor_3254794454(self_3254799381);
      if (isNone_3254794598(rHEX60gensym476_3254799382)) {
      break BeforeRet;
      }
      
    };
    selectParentCell_3254799378(get_3254794618(rHEX60gensym476_3254799382));
  };

  
}

function selectParentCellApi_3254799408(HEX3Atmp_3254799376) {
  var result_3254799409 = null;

    result_3254799409 = newJNull_1627390049();
    Label1: {
    };
    selectParentCellScript_3254799374_3254799380(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254799376, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254799409;

}

function selectPrevPlaceholderScript_3254799431_3254799467(self_3254799468, select_3254799469) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym485_3254799470 = getModelDocumentEditor_3254794454(self_3254799468);
      if (isNone_3254794598(rHEX60gensym485_3254799470)) {
      break BeforeRet;
      }
      
    };
    selectPrevPlaceholder_3254799435(get_3254794618(rHEX60gensym485_3254799470), select_3254799469);
  };

  
}

function selectPrevPlaceholderApi_3254799497(HEX3Atmp_3254799433) {
      var Temporary3;

  var result_3254799498 = null;

    result_3254799498 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254799433))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254799433, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    selectPrevPlaceholderScript_3254799431_3254799467(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254799433, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254799498;

}

function selectNextPlaceholderScript_3254799511_3254799547(self_3254799548, select_3254799549) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym495_3254799550 = getModelDocumentEditor_3254794454(self_3254799548);
      if (isNone_3254794598(rHEX60gensym495_3254799550)) {
      break BeforeRet;
      }
      
    };
    selectNextPlaceholder_3254799515(get_3254794618(rHEX60gensym495_3254799550), select_3254799549);
  };

  
}

function selectNextPlaceholderApi_3254799577(HEX3Atmp_3254799513) {
      var Temporary3;

  var result_3254799578 = null;

    result_3254799578 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
      if ((1 < len_1627392983(HEX3Atmp_3254799513))) {
      Temporary3 = jsonTo_2818585054(HEX5BHEX5D_1627393116(HEX3Atmp_3254799513, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    selectNextPlaceholderScript_3254799511_3254799547(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254799513, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary3);

  return result_3254799578;

}

function deleteLeftScript2_3254800445_3254800451(self_3254800452) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym531_3254800453 = getModelDocumentEditor_3254794454(self_3254800452);
      if (isNone_3254794598(rHEX60gensym531_3254800453)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_3254800449(get_3254794618(rHEX60gensym531_3254800453));
  };

  
}

function deleteLeftApi2_3254800479(HEX3Atmp_3254800447) {
  var result_3254800480 = null;

    result_3254800480 = newJNull_1627390049();
    Label1: {
    };
    deleteLeftScript2_3254800445_3254800451(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254800447, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254800480;

}

function deleteRightScript2_3254800607_3254800613(self_3254800614) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym538_3254800615 = getModelDocumentEditor_3254794454(self_3254800614);
      if (isNone_3254794598(rHEX60gensym538_3254800615)) {
      break BeforeRet;
      }
      
    };
    deleteRight_3254800611(get_3254794618(rHEX60gensym538_3254800615));
  };

  
}

function deleteRightApi2_3254800641(HEX3Atmp_3254800609) {
  var result_3254800642 = null;

    result_3254800642 = newJNull_1627390049();
    Label1: {
    };
    deleteRightScript2_3254800607_3254800613(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254800609, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254800642;

}

function createNewNodeScript_3254801201_3254801248(self_3254801249) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym568_3254801250 = getModelDocumentEditor_3254794454(self_3254801249);
      if (isNone_3254794598(rHEX60gensym568_3254801250)) {
      break BeforeRet;
      }
      
    };
    createNewNode_3254801205(get_3254794618(rHEX60gensym568_3254801250));
  };

  
}

function createNewNodeApi_3254801276(HEX3Atmp_3254801203) {
  var result_3254801277 = null;

    result_3254801277 = newJNull_1627390049();
    Label1: {
    };
    createNewNodeScript_3254801201_3254801248(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254801203, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254801277;

}

function insertTextAtCursorScript_3254801314_3254801352(self_3254801353, input_3254801354) {
  var result_3254801355 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym578_3254801356 = getModelDocumentEditor_3254794454(self_3254801353);
      if (isNone_3254794598(rHEX60gensym578_3254801356)) {
      break BeforeRet;
      }
      
    };
    result_3254801355 = insertTextAtCursor_3254780241(get_3254794618(rHEX60gensym578_3254801356), input_3254801354);
  };

  return result_3254801355;

}

function insertTextAtCursorApi_3254801384(HEX3Atmp_3254801316) {
  var result_3254801385 = null;

  BeforeRet: {
    result_3254801385 = newJNull_1627390049();
    Label1: {
    };
    Label2: {
    };
    result_3254801385 = toJson_2818588828(insertTextAtCursorScript_3254801314_3254801352(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254801316, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_3254801316, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
  };

  return result_3254801385;

}

function undoScript22_3254801520_3254801848(self_3254801849) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym589_3254801850 = getModelDocumentEditor_3254794454(self_3254801849);
      if (isNone_3254794598(rHEX60gensym589_3254801850)) {
      break BeforeRet;
      }
      
    };
    undo_3254801524(get_3254794618(rHEX60gensym589_3254801850));
  };

  
}

function undoApi22_3254801876(HEX3Atmp_3254801522) {
  var result_3254801877 = null;

    result_3254801877 = newJNull_1627390049();
    Label1: {
    };
    undoScript22_3254801520_3254801848(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254801522, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254801877;

}

function redoScript22_3254801913_3254802116(self_3254802117) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym599_3254802118 = getModelDocumentEditor_3254794454(self_3254802117);
      if (isNone_3254794598(rHEX60gensym599_3254802118)) {
      break BeforeRet;
      }
      
    };
    redo_3254801917(get_3254794618(rHEX60gensym599_3254802118));
  };

  
}

function redoApi22_3254802144(HEX3Atmp_3254801915) {
  var result_3254802145 = null;

    result_3254802145 = newJNull_1627390049();
    Label1: {
    };
    redoScript22_3254801913_3254802116(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254801915, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254802145;

}

function toggleUseDefaultCellBuilderScript_3254802157_3254802163(self_3254802164) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym608_3254802165 = getModelDocumentEditor_3254794454(self_3254802164);
      if (isNone_3254794598(rHEX60gensym608_3254802165)) {
      break BeforeRet;
      }
      
    };
    toggleUseDefaultCellBuilder_3254802161(get_3254794618(rHEX60gensym608_3254802165));
  };

  
}

function toggleUseDefaultCellBuilderApi_3254802191(HEX3Atmp_3254802159) {
  var result_3254802192 = null;

    result_3254802192 = newJNull_1627390049();
    Label1: {
    };
    toggleUseDefaultCellBuilderScript_3254802157_3254802163(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254802159, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254802192;

}

function showCompletionsScript_3254802200_3254802206(self_3254802207) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym615_3254802208 = getModelDocumentEditor_3254794454(self_3254802207);
      if (isNone_3254794598(rHEX60gensym615_3254802208)) {
      break BeforeRet;
      }
      
    };
    showCompletions_3254802204(get_3254794618(rHEX60gensym615_3254802208));
  };

  
}

function showCompletionsApi_3254802234(HEX3Atmp_3254802202) {
  var result_3254802235 = null;

    result_3254802235 = newJNull_1627390049();
    Label1: {
    };
    showCompletionsScript_3254802200_3254802206(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254802202, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254802235;

}

function hideCompletionsScript2_3254802243_3254802253(self_3254802254) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym622_3254802255 = getModelDocumentEditor_3254794454(self_3254802254);
      if (isNone_3254794598(rHEX60gensym622_3254802255)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_3254802247(get_3254794618(rHEX60gensym622_3254802255));
  };

  
}

function hideCompletionsApi2_3254802281(HEX3Atmp_3254802245) {
  var result_3254802282 = null;

    result_3254802282 = newJNull_1627390049();
    Label1: {
    };
    hideCompletionsScript2_3254802243_3254802253(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254802245, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254802282;

}

function selectPrevCompletionScript22_3254802290_3254802304(self_3254802305) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym629_3254802306 = getModelDocumentEditor_3254794454(self_3254802305);
      if (isNone_3254794598(rHEX60gensym629_3254802306)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_3254802294(get_3254794618(rHEX60gensym629_3254802306));
  };

  
}

function selectPrevCompletionApi22_3254802332(HEX3Atmp_3254802292) {
  var result_3254802333 = null;

    result_3254802333 = newJNull_1627390049();
    Label1: {
    };
    selectPrevCompletionScript22_3254802290_3254802304(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254802292, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254802333;

}

function selectNextCompletionScript22_3254802341_3254802355(self_3254802356) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym637_3254802357 = getModelDocumentEditor_3254794454(self_3254802356);
      if (isNone_3254794598(rHEX60gensym637_3254802357)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_3254802345(get_3254794618(rHEX60gensym637_3254802357));
  };

  
}

function selectNextCompletionApi22_3254802383(HEX3Atmp_3254802343) {
  var result_3254802384 = null;

    result_3254802384 = newJNull_1627390049();
    Label1: {
    };
    selectNextCompletionScript22_3254802341_3254802355(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254802343, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254802384;

}

function applySelectedCompletionScript22_3254802392_3254802434(self_3254802435) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym645_3254802436 = getModelDocumentEditor_3254794454(self_3254802435);
      if (isNone_3254794598(rHEX60gensym645_3254802436)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_3254780253(get_3254794618(rHEX60gensym645_3254802436));
  };

  
}

function applySelectedCompletionApi22_3254802462(HEX3Atmp_3254802394) {
  var result_3254802463 = null;

    result_3254802463 = newJNull_1627390049();
    Label1: {
    };
    applySelectedCompletionScript22_3254802392_3254802434(jsonTo_3254794645(HEX5BHEX5D_1627393116(HEX3Atmp_3254802394, 0), {allowExtraKeys: false, allowMissingKeys: false}));

  return result_3254802463;

}

function dispatch_3254802478(command_3254802477, arg_3254802476) {
    var Temporary1;

  var result_3254802480 = ({val: null});

    switch (toJSStr(command_3254802477)) {
    case "scroll":
      Temporary1 = some_2818593171(scrollApi2_3254794643(arg_3254802476));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593171(setModeApi22_3254794751(arg_3254802476));
      break;
    case "mode":
      Temporary1 = some_2818593171(modeApi22_3254798010(arg_3254802476));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593171(getContextWithModeApi22_3254798063(arg_3254802476));
      break;
    case "moveCursorLeft":
    case "move-cursor-left":
      Temporary1 = some_2818593171(moveCursorLeftApi_3254798148(arg_3254802476));
      break;
    case "moveCursorRight":
    case "move-cursor-right":
      Temporary1 = some_2818593171(moveCursorRightApi_3254798266(arg_3254802476));
      break;
    case "moveCursorLeftLine":
    case "move-cursor-left-line":
      Temporary1 = some_2818593171(moveCursorLeftLineApi_3254798349(arg_3254802476));
      break;
    case "moveCursorRightLine":
    case "move-cursor-right-line":
      Temporary1 = some_2818593171(moveCursorRightLineApi_3254798445(arg_3254802476));
      break;
    case "moveCursorLineStart":
    case "move-cursor-line-start":
      Temporary1 = some_2818593171(moveCursorLineStartApi_3254798539(arg_3254802476));
      break;
    case "moveCursorLineEnd":
    case "move-cursor-line-end":
      Temporary1 = some_2818593171(moveCursorLineEndApi_3254798626(arg_3254802476));
      break;
    case "moveCursorLineStartInline":
    case "move-cursor-line-start-inline":
      Temporary1 = some_2818593171(moveCursorLineStartInlineApi_3254798710(arg_3254802476));
      break;
    case "moveCursorLineEndInline":
    case "move-cursor-line-end-inline":
      Temporary1 = some_2818593171(moveCursorLineEndInlineApi_3254798796(arg_3254802476));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2818593171(moveCursorUpApi2_3254798903(arg_3254802476));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2818593171(moveCursorDownApi2_3254799016(arg_3254802476));
      break;
    case "moveCursorLeftCell":
    case "move-cursor-left-cell":
      Temporary1 = some_2818593171(moveCursorLeftCellApi_3254799119(arg_3254802476));
      break;
    case "moveCursorRightCell":
    case "move-cursor-right-cell":
      Temporary1 = some_2818593171(moveCursorRightCellApi_3254799224(arg_3254802476));
      break;
    case "selectNode":
    case "select-node":
      Temporary1 = some_2818593171(selectNodeApi_3254799359(arg_3254802476));
      break;
    case "selectParentCell":
    case "select-parent-cell":
      Temporary1 = some_2818593171(selectParentCellApi_3254799408(arg_3254802476));
      break;
    case "selectPrevPlaceholder":
    case "select-prev-placeholder":
      Temporary1 = some_2818593171(selectPrevPlaceholderApi_3254799497(arg_3254802476));
      break;
    case "selectNextPlaceholder":
    case "select-next-placeholder":
      Temporary1 = some_2818593171(selectNextPlaceholderApi_3254799577(arg_3254802476));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2818593171(deleteLeftApi2_3254800479(arg_3254802476));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2818593171(deleteRightApi2_3254800641(arg_3254802476));
      break;
    case "createNewNode":
    case "create-new-node":
      Temporary1 = some_2818593171(createNewNodeApi_3254801276(arg_3254802476));
      break;
    case "insertTextAtCursor":
    case "insert-text-at-cursor":
      Temporary1 = some_2818593171(insertTextAtCursorApi_3254801384(arg_3254802476));
      break;
    case "undo":
      Temporary1 = some_2818593171(undoApi22_3254801876(arg_3254802476));
      break;
    case "redo":
      Temporary1 = some_2818593171(redoApi22_3254802144(arg_3254802476));
      break;
    case "toggleUseDefaultCellBuilder":
    case "toggle-use-default-cell-builder":
      Temporary1 = some_2818593171(toggleUseDefaultCellBuilderApi_3254802191(arg_3254802476));
      break;
    case "showCompletions":
    case "show-completions":
      Temporary1 = some_2818593171(showCompletionsApi_3254802234(arg_3254802476));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2818593171(hideCompletionsApi2_3254802281(arg_3254802476));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818593171(selectPrevCompletionApi22_3254802332(arg_3254802476));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818593171(selectNextCompletionApi22_3254802383(arg_3254802476));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818593171(applySelectedCompletionApi22_3254802462(arg_3254802476));
      break;
    default: 
      Temporary1 = none_2818593370();
      break;
    }
    result_3254802480 = nimCopy(result_3254802480, Temporary1, NTI2818584815);

  return result_3254802480;

}

function handleAction_3254780231(self_3254780232, action_3254780233, arg_3254780234) {
  var result_3254802587 = 0;

  BeforeRet: {
    try {
    self_3254780232.mCursorBeforeTransaction = nimCopy(self_3254780232.mCursorBeforeTransaction, self_3254780232.mCursor, NTI3254779907);
    var args_3254802599 = newJArray_1627390082();
    add_1627390190(args_3254802599, toJson_3254793025({id: self_3254780232.id}, initToJsonOptions_1811939362()));
    Label2: {
      var a_3254802600 = null;
      var colontmp__536872311 = null;
      colontmp__536872311 = newStringStream_1660945417(arg_3254780234);
      var p_536872312 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872312[0], colontmp__536872311, [], false);
      try {
      var _ = getTok_1694499270(p_536872312[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536872312[0].tok == 1))) break Label5;
            a_3254802600 = parseJson_1627395211(p_536872312[0], false, false, 0);
            add_1627390190(args_3254802599, a_3254802600);
          }
      };
      } finally {
      close_1694498967(p_536872312[0]);
      }
    };
    if ((handleUnknownDocumentEditorAction_1291848854(self_3254780232.editor, self_3254780232, action_3254780233, args_3254802599) == 3)) {
    result_3254802587 = 3;
    break BeforeRet;
    }
    
    if (isSome_2818593438(dispatch_3254802478(action_3254780233, args_3254802599))) {
    result_3254802587 = 3;
    break BeforeRet;
    }
    
    result_3254802587 = 1;
    break BeforeRet;
    } finally {
    var fmtRes_3254802588 = [mnewString(0)];
    fmtRes_3254802588[0].push.apply(fmtRes_3254802588[0], [108,105,110,101,58,32]);;
    formatValue_2701131945(fmtRes_3254802588, 0, targetCell_3254780021(cursor_3254784719(self_3254780232)).line, []);
    fmtRes_3254802588[0].push.apply(fmtRes_3254802588[0], [44,32,99,117,114,115,111,114,58,32]);;
    formatValue_3254800998(fmtRes_3254802588, 0, cursor_3254784719(self_3254780232), []);
    fmtRes_3254802588[0].push.apply(fmtRes_3254802588[0], [44,10,99,101,108,108,58,32]);;
    formatValue_721420459(fmtRes_3254802588, 0, dump_3271570945(cursor_3254784719(self_3254780232).cell, false), []);
    fmtRes_3254802588[0].push.apply(fmtRes_3254802588[0], [10,116,97,114,103,101,116,67,101,108,108,58,32]);;
    formatValue_721420459(fmtRes_3254802588, 0, dump_3271570945(targetCell_3254780021(cursor_3254784719(self_3254780232)), false), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254802588[0], NTI33554449)]);
    }
  };

  return result_3254802587;

}

function sysFatal_33556946(message_33556949) {
    raiseException({message: nimCopy(null, message_33556949, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33556945, p_33556945_Idx) {
    if ((p_33556945 == null && p_33556945_Idx == 0)) {
    sysFatal_33556946([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function isSome_704643153(self_704643155) {
  var result_704643156 = false;

    result_704643156 = !((self_704643155.val == null));

  return result_704643156;

}

function isNone_704643181(self_704643183) {
  var result_704643184 = false;

    result_704643184 = (self_704643183.val == null);

  return result_704643184;

}

function get_704643173(self_704643175) {
  var result_704643176 = null;

    if (isNone_704643181(self_704643175)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643176 = self_704643175["val"];

  return result_704643176;

}

function isSome_704643207(self_704643209) {
  var result_704643210 = false;

    result_704643210 = !((self_704643209.val == null));

  return result_704643210;

}

function isNone_704643235(self_704643237) {
  var result_704643238 = false;

    result_704643238 = (self_704643237.val == null);

  return result_704643238;

}

function get_704643227(self_704643229) {
  var result_704643230 = null;

    if (isNone_704643235(self_704643229)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643230 = self_704643229["val"];

  return result_704643230;

}

function log_704643142(self_704643143, level_704643144, args_704643145) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym2_704643148 = nimCopy(null, self_704643143.fileLogger, NTI704643097);
      if (!isSome_704643153(oHEX60gensym2_704643148)) Temporary1 = false; else {        var l_704643199 = get_704643173(oHEX60gensym2_704643148);
        Temporary1 = true;      }    if (Temporary1) {
    log_1174405220(l_704643199, level_704643144, args_704643145);
    }
    
      var oHEX60gensym4_704643202 = nimCopy(null, self_704643143.consoleLogger, NTI704643084);
      if (!isSome_704643207(oHEX60gensym4_704643202)) Temporary2 = false; else {        var l_704643253 = get_704643227(oHEX60gensym4_704643202);
        Temporary2 = true;      }    if (Temporary2) {
    log_1174405220(l_704643253, level_704643144, args_704643145);
    }
    

  
}

function nsuIntToStr(x_855638860, minchars_855638861) {
  var result_855638862 = [];

    result_855638862 = nimCopy(null, HEX24_369098760(absInt(x_855638860)), NTI33554449);
    Label1: {
      var i_855638867 = 0;
      var colontmp__536872406 = 0;
      colontmp__536872406 = subInt(minchars_855638861, (result_855638862).length);
      var res_536872407 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_536872407 <= colontmp__536872406)) break Label3;
            i_855638867 = res_536872407;
            result_855638862 = nimCopy(null, [48].concat(result_855638862 || []), NTI33554449);
            res_536872407 = addInt(res_536872407, 1);
          }
      };
    };
    if ((x_855638860 < 0)) {
    result_855638862 = nimCopy(null, [45].concat(result_855638862 || []), NTI33554449);
    }
    

  return result_855638862;

}

function monthday_1191183564(dt_1191183565) {
  var result_1191183566 = 0;

    if (!(!((dt_1191183565.monthdayZero == 0)))) {
    failedAssertImpl_268435515(makeNimstrLit("times.nim(1062, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1191183566 = dt_1191183565.monthdayZero;

  return result_1191183566;

}

function ntgetDateStr(dt_1191183915) {
  var result_1191183916 = [];

    if (!(!((dt_1191183915.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,56,56,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183916 = nimCopy(null, (HEX24_369098760(dt_1191183915.year) || []).concat([45],nsuIntToStr(dt_1191183915.monthZero, 2) || [],[45],nsuIntToStr(monthday_1191183564(dt_1191183915), 2) || []), NTI33554449);

  return result_1191183916;

}

function HEX2B_1191182354(a_1191182355, b_1191182356) {
  var result_1191182357 = 0;

    result_1191182357 = (a_1191182355 + b_1191182356);

  return result_1191182357;

}

function HEX2A_1191182346(a_1191182347, b_1191182348) {
  var result_1191182349 = 0;

    result_1191182349 = (a_1191182347 * b_1191182348);

  return result_1191182349;

}

function convert_1191182803(unitFrom_1191182805, unitTo_1191182806, quantity_1191182807) {
    var Temporary1;

  var result_1191182808 = 0;

    if ((unitFrom_1191182805 < unitTo_1191182806)) {
    Temporary1 = divInt(quantity_1191182807, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182807);
    }
    
    result_1191182808 = Temporary1;

  return result_1191182808;

}

function convert_1191182870(unitFrom_1191182872, unitTo_1191182873, quantity_1191182874) {
    var Temporary1;

  var result_1191182875 = 0;

    if ((unitFrom_1191182872 < unitTo_1191182873)) {
    Temporary1 = chckRange(divInt(quantity_1191182874, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182874), -2147483648, 2147483647);
    }
    
    result_1191182875 = Temporary1;

  return result_1191182875;

}

function normalize_1191183440(seconds_1191183442, nanoseconds_1191183443) {
  var result_1191183444 = ({seconds: 0, nanosecond: 0});

    result_1191183444.seconds = HEX2B_1191182354(seconds_1191183442, convert_1191182803(0, 3, nanoseconds_1191183443));
    var nanosecond_1191183455 = modInt(nanoseconds_1191183443, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191183455 < 0)) {
    nanosecond_1191183455 = addInt(nanosecond_1191183455, convert_1191182870(3, 0, 1));
    result_1191183444.seconds = subInt(result_1191183444.seconds, 1);
    }
    
    result_1191183444.nanosecond = chckRange(chckRange(nanosecond_1191183455, -2147483648, 2147483647), 0, 999999999);

  return result_1191183444;

}

function HEX2D_1191182362(a_1191182363, b_1191182364) {
  var result_1191182365 = 0;

    result_1191182365 = (a_1191182363 - b_1191182364);

  return result_1191182365;

}

function HEX2D_1191182366(a_1191182367, b_1191182368) {
  var result_1191182369 = 0;

    result_1191182369 = (a_1191182367 - b_1191182368);

  return result_1191182369;

}

function ntSubTime(a_1191183470, b_1191183471) {
  var result_1191183472 = ({seconds: 0, nanosecond: 0});

    result_1191183472 = nimCopy(result_1191183472, normalize_1191183440(HEX2D_1191182362(a_1191183470.seconds, b_1191183471.seconds), HEX2D_1191182366(a_1191183470.nanosecond, b_1191183471.nanosecond)), NTI1191182368);

  return result_1191183472;

}

function normalize_1191182860(seconds_1191182862, nanoseconds_1191182863) {
  var result_1191182864 = ({seconds: 0, nanosecond: 0});

    result_1191182864.seconds = HEX2B_1191182354(seconds_1191182862, convert_1191182803(0, 3, nanoseconds_1191182863));
    var nanosecond_1191182880 = modInt(nanoseconds_1191182863, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191182880 < 0)) {
    nanosecond_1191182880 = addInt(nanosecond_1191182880, convert_1191182870(3, 0, 1));
    result_1191182864.seconds = subInt(result_1191182864.seconds, 1);
    }
    
    result_1191182864.nanosecond = chckRange(chckRange(nanosecond_1191182880, -2147483648, 2147483647), 0, 999999999);

  return result_1191182864;

}

function initDuration_1191182793(nanoseconds_1191182794, microseconds_1191182795, milliseconds_1191182796, seconds_1191182797, minutes_1191182798, hours_1191182799, days_1191182800, weeks_1191182801) {
  var result_1191182802 = ({seconds: 0, nanosecond: 0});

    var seconds_1191182848 = HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(7, 3, weeks_1191182801), convert_1191182803(6, 3, days_1191182800)), convert_1191182803(4, 3, minutes_1191182798)), convert_1191182803(5, 3, hours_1191182799)), convert_1191182803(3, 3, seconds_1191182797)), convert_1191182803(2, 3, milliseconds_1191182796)), convert_1191182803(1, 3, microseconds_1191182795)), convert_1191182803(0, 3, nanoseconds_1191182794));
    var nanoseconds_1191182859 = chckRange(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(2, 0, modInt(milliseconds_1191182796, 1000)), convert_1191182803(1, 0, modInt(microseconds_1191182795, 1000000))), modInt(nanoseconds_1191182794, 1000000000)), -2147483648, 2147483647);
    result_1191182802 = nimCopy(result_1191182802, normalize_1191182860(seconds_1191182848, nanoseconds_1191182859), NTI1191182370);

  return result_1191182802;

}

function floorDiv_1191182634(x_1191182636, y_1191182637) {
  var result_1191182638 = 0;

    result_1191182638 = Math.trunc(x_1191182636 / y_1191182637);
    var r_1191182639 = Math.trunc(x_1191182636 % y_1191182637);
    if ((((0 < r_1191182639) && (y_1191182637 < 0)) || ((r_1191182639 < 0) && (0 < y_1191182637)))) {
    result_1191182638 -= 1;
    }
    

  return result_1191182638;

}

function inc_1191182378(a_1191182379, a_1191182379_Idx, b_1191182380) {
    a_1191182379[a_1191182379_Idx] += b_1191182380;

  
}

function fromEpochDay_1191182567(epochday_1191182568) {
    var Temporary1;
    var Temporary2;

  var result_1191182572 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_1191182573 = [epochday_1191182568];
    inc_1191182378(z_1191182573, 0, 719468);
    if ((0 <= z_1191182573[0])) {
    Temporary1 = z_1191182573[0];
    }
    else {
    Temporary1 = HEX2D_1191182362(z_1191182573[0], 146096);
    }
    
    var era_1191182574 = divInt(Temporary1, 146097);
    var doe_1191182575 = HEX2D_1191182362(z_1191182573[0], HEX2A_1191182346(era_1191182574, 146097));
    var yoe_1191182576 = divInt(HEX2D_1191182362(HEX2B_1191182354(HEX2D_1191182362(doe_1191182575, divInt(doe_1191182575, 1460)), divInt(doe_1191182575, 36524)), divInt(doe_1191182575, 146096)), 365);
    var y_1191182577 = HEX2B_1191182354(yoe_1191182576, HEX2A_1191182346(era_1191182574, 400));
    var doy_1191182578 = HEX2D_1191182362(doe_1191182575, HEX2D_1191182362(HEX2B_1191182354(HEX2A_1191182346(365, yoe_1191182576), divInt(yoe_1191182576, 4)), divInt(yoe_1191182576, 100)));
    var mp_1191182579 = divInt(HEX2B_1191182354(HEX2A_1191182346(5, doy_1191182578), 2), 153);
    var d_1191182580 = HEX2B_1191182354(HEX2D_1191182362(doy_1191182578, divInt(HEX2B_1191182354(HEX2A_1191182346(153, mp_1191182579), 2), 5)), 1);
    if ((mp_1191182579 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1191182581 = HEX2B_1191182354(mp_1191182579, Temporary2);
    var colontmp__536872410 = chckRange(d_1191182580, 1, 31);
    var colontmp__536872411 = chckRange(m_1191182581, 1, 12);
    var colontmp__536872412 = chckRange(HEX2B_1191182354(y_1191182577, ((m_1191182581 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1191182572 = nimCopy(result_1191182572, {Field0: nimCopy(null, colontmp__536872410, NTI1191182360), Field1: colontmp__536872411, Field2: colontmp__536872412}, NTI1191182532);
    break BeforeRet;
  };

  return result_1191182572;

}

function isLeapYear_1191182509(year_1191182510) {
  var result_1191182511 = false;

    result_1191182511 = ((modInt(year_1191182510, 4) == 0) && (!((modInt(year_1191182510, 100) == 0)) || (modInt(year_1191182510, 400) == 0)));

  return result_1191182511;

}

function getDaysInMonth_1191182512(month_1191182513, year_1191182514) {
      var Temporary1;

  var result_1191182515 = 0;

    switch (month_1191182513) {
    case 2:
      if (isLeapYear_1191182509(year_1191182514)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1191182515 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1191182515 = 30;
      break;
    default: 
      result_1191182515 = 31;
      break;
    }

  return result_1191182515;

}

function assertValidDate_1191182516(monthday_1191182517, month_1191182518, year_1191182519) {
    if (!((monthday_1191182517 <= getDaysInMonth_1191182512(month_1191182518, year_1191182519)))) {
    failedAssertImpl_268435515(([116,105,109,101,115,46,110,105,109,40,52,54,49,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_369098760(year_1191182519) || [],[45] || [],nsuIntToStr(month_1191182518, 2) || [],[45] || [],HEX24_369098760(monthday_1191182517) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_1191182350(a_1191182351, b_1191182352) {
  var result_1191182353 = 0;

    result_1191182353 = (a_1191182351 * b_1191182352);

  return result_1191182353;

}

function HEX2B_1191182358(a_1191182359, b_1191182360) {
  var result_1191182361 = 0;

    result_1191182361 = (a_1191182359 + b_1191182360);

  return result_1191182361;

}

function toEpochDay_1191182538(monthday_1191182539, month_1191182540, year_1191182541) {
    var Temporary1;
    var Temporary2;

  var result_1191182542 = 0;

  BeforeRet: {
    assertValidDate_1191182516(monthday_1191182539, month_1191182540, year_1191182541);
    var colontmp__536872413 = {Field0: year_1191182541, Field1: month_1191182540, Field2: monthday_1191182539};
    var y_1191182546 = colontmp__536872413["Field0"];
    var m_1191182547 = colontmp__536872413["Field1"];
    var d_1191182548 = colontmp__536872413["Field2"];
    if ((m_1191182547 <= 2)) {
    y_1191182546 = subInt(y_1191182546, 1);
    }
    
    if ((0 <= y_1191182546)) {
    Temporary1 = y_1191182546;
    }
    else {
    Temporary1 = HEX2D_1191182366(y_1191182546, 399);
    }
    
    var era_1191182554 = divInt(Temporary1, 400);
    var yoe_1191182555 = HEX2D_1191182366(y_1191182546, HEX2A_1191182350(era_1191182554, 400));
    if ((2 < m_1191182547)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1191182556 = HEX2D_1191182366(HEX2B_1191182358(divInt(HEX2B_1191182358(HEX2A_1191182350(153, HEX2B_1191182358(m_1191182547, Temporary2)), 2), 5), d_1191182548), 1);
    var doe_1191182557 = HEX2B_1191182358(HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(yoe_1191182555, 365), divInt(yoe_1191182555, 4)), divInt(yoe_1191182555, 100)), doy_1191182556);
    result_1191182542 = HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(era_1191182554, 146097), doe_1191182557), 719468);
    break BeforeRet;
  };

  return result_1191182542;

}

function getDayOfWeek_1191182628(monthday_1191182629, month_1191182630, year_1191182631) {
    var Temporary1;

  var result_1191182632 = 0;

    assertValidDate_1191182516(monthday_1191182629, month_1191182630, year_1191182631);
    var days_1191182633 = HEX2D_1191182362(toEpochDay_1191182538(monthday_1191182629, month_1191182630, year_1191182631), 3);
    var weeks_1191182645 = floorDiv_1191182634(days_1191182633, 7);
    var wd_1191182646 = HEX2D_1191182362(days_1191182633, HEX2A_1191182346(weeks_1191182645, 7));
    if ((wd_1191182646 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1191182362(wd_1191182646, 1), 0, 6);
    }
    
    result_1191182632 = Temporary1;

  return result_1191182632;

}

function getDayOfYear_1191182603(monthday_1191182604, month_1191182605, year_1191182606) {
  var result_1191182607 = 0;

    assertValidDate_1191182516(monthday_1191182604, month_1191182605, year_1191182606);
    if (isLeapYear_1191182509(year_1191182606)) {
    result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonthLeap_1191182609[chckIndx(month_1191182605, 1, (daysUntilMonthLeap_1191182609).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    else {
      result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonth_1191182608[chckIndx(month_1191182605, 1, (daysUntilMonth_1191182608).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    

  return result_1191182607;

}

function initDateTime_1191183671(zt_1191183672, zone_1191183673) {
  var result_1191183674 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1191183675 = ntSubTime(zt_1191183672.time, initDuration_1191182793(0, 0, 0, zt_1191183672.utcOffset, 0, 0, 0, 0));
    var s_1191183676 = adjTime_1191183675.seconds;
    var epochday_1191183681 = floorDiv_1191182634(s_1191183676, 86400);
    var rem_1191183682 = HEX2D_1191182362(s_1191183676, HEX2A_1191182346(epochday_1191183681, 86400));
    var hour_1191183683 = divInt(rem_1191183682, 3600);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(hour_1191183683, 3600));
    var minute_1191183684 = divInt(rem_1191183682, 60);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(minute_1191183684, 60));
    var second_1191183685 = rem_1191183682;
    var colontmp__536872409 = fromEpochDay_1191182567(epochday_1191183681);
    var d_1191183686 = colontmp__536872409["Field0"];
    var m_1191183687 = colontmp__536872409["Field1"];
    var y_1191183688 = colontmp__536872409["Field2"];
    result_1191183674 = nimCopy(result_1191183674, {year: y_1191183688, monthZero: ((m_1191183687) | 0), monthdayZero: d_1191183686, hour: nimCopy(null, chckRange(hour_1191183683, 0, 23), NTI1191182361), minute: nimCopy(null, chckRange(minute_1191183684, 0, 59), NTI1191182362), second: nimCopy(null, chckRange(second_1191183685, 0, 60), NTI1191182363), nanosecond: nimCopy(null, zt_1191183672.time.nanosecond, NTI1191182365), weekday: getDayOfWeek_1191182628(d_1191183686, m_1191183687, y_1191183688), yearday: getDayOfYear_1191182603(d_1191183686, m_1191183687, y_1191183688), isDst: zt_1191183672.isDst, timezone: zone_1191183673, utcOffset: zt_1191183672.utcOffset, m_type: NTI1191182369}, NTI1191182369);

  return result_1191183674;

}

function zonedTimeFromTime_1191183728(zone_1191183729, time_1191183730) {
  var result_1191183731 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1191183731 = nimCopy(result_1191183731, zone_1191183729.zonedTimeFromTimeImpl(time_1191183730), NTI1191182375);

  return result_1191183731;

}

function inZone_1191183768(time_1191183769, zone_1191183770) {
  var result_1191183771 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183771 = nimCopy(result_1191183771, initDateTime_1191183671(zonedTimeFromTime_1191183728(zone_1191183770, time_1191183769), zone_1191183770), NTI1191182369);

  return result_1191183771;

}

function newTimezone_1191183698(name_1191183699, zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl_1191183705) {
  var result_1191183706 = null;

    result_1191183706 = {name: nimCopy(null, name_1191183699, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1191183705};

  return result_1191183706;

}

function localZonedTimeFromTime_1191183786(time_1191183787) {
  var result_1191183788 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1191183792 = new Date(HEX2A_1191182346(time_1191183787.seconds, 1000));
    var offset_1191183793 = HEX2A_1191182350(jsDate_1191183792.getTimezoneOffset(), 60);
    result_1191183788.time = nimCopy(result_1191183788.time, time_1191183787, NTI1191182368);
    result_1191183788.utcOffset = offset_1191183793;
    result_1191183788.isDst = false;

  return result_1191183788;

}

function ntAddTime(a_1191183434, b_1191183435) {
  var result_1191183436 = ({seconds: 0, nanosecond: 0});

    result_1191183436 = nimCopy(result_1191183436, normalize_1191183440(HEX2B_1191182354(a_1191183434.seconds, b_1191183435.seconds), HEX2B_1191182358(a_1191183434.nanosecond, b_1191183435.nanosecond)), NTI1191182368);

  return result_1191183436;

}

function localZonedTimeFromAdjTime_1191183794(adjTime_1191183795) {
  var result_1191183796 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1191183800 = new Date(HEX2A_1191182346(adjTime_1191183795.seconds, 1000));
    var localDate_1191183801 = new Date(utcDate_1191183800.getUTCFullYear(),utcDate_1191183800.getUTCMonth(),utcDate_1191183800.getUTCDate(),utcDate_1191183800.getUTCHours(),utcDate_1191183800.getUTCMinutes(),utcDate_1191183800.getUTCSeconds(),0);
    if (contains_1191183809(HEX2EHEX2E_805306418(0, 99), utcDate_1191183800.getUTCFullYear())) {
    localDate_1191183801.setFullYear(utcDate_1191183800.getUTCFullYear());
    }
    
    result_1191183796.utcOffset = HEX2A_1191182350(localDate_1191183801.getTimezoneOffset(), 60);
    result_1191183796.time = nimCopy(result_1191183796.time, ntAddTime(adjTime_1191183795, initDuration_1191182793(0, 0, 0, result_1191183796.utcOffset, 0, 0, 0, 0)), NTI1191182368);
    result_1191183796.isDst = false;

  return result_1191183796;

}

function local_1191183835() {
  var result_1191183836 = null;

    if ((localInstance_1191183820[0] == null)) {
    localInstance_1191183820[0] = newTimezone_1191183698([76,79,67,65,76], localZonedTimeFromTime_1191183786, localZonedTimeFromAdjTime_1191183794);
    }
    
    result_1191183836 = localInstance_1191183820[0];

  return result_1191183836;

}

function local_1191183849(t_1191183850) {
  var result_1191183851 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183851 = nimCopy(result_1191183851, inZone_1191183768(t_1191183850, local_1191183835()), NTI1191182369);

  return result_1191183851;

}

function initTime_1191183319(unix_1191183320, nanosecond_1191183321) {
  var result_1191183322 = ({seconds: 0, nanosecond: 0});

    result_1191183322.seconds = unix_1191183320;
    result_1191183322.nanosecond = nanosecond_1191183321;

  return result_1191183322;

}

function getTime_1191183389() {
  var result_1191183390 = ({seconds: 0, nanosecond: 0});

    var millis_1191183395 = new Date().getTime();
    var seconds_1191183401 = convert_1191182870(2, 3, millis_1191183395);
    var nanos_1191183412 = convert_1191182870(2, 0, modInt(millis_1191183395, convert_1191182870(3, 2, 1)));
    result_1191183390 = nimCopy(result_1191183390, initTime_1191183319(seconds_1191183401, chckRange(nanos_1191183412, 0, 999999999)), NTI1191182368);

  return result_1191183390;

}

function now_1191183852() {
  var result_1191183853 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183853 = nimCopy(result_1191183853, local_1191183849(getTime_1191183389()), NTI1191182369);

  return result_1191183853;

}

function ntgetClockStr(dt_1191183923) {
  var result_1191183924 = [];

    if (!(!((dt_1191183923.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,57,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183924 = nimCopy(null, (nsuIntToStr(dt_1191183923.hour, 2) || []).concat([58],nsuIntToStr(dt_1191183923.minute, 2) || [],[58],nsuIntToStr(dt_1191183923.second, 2) || []), NTI33554449);

  return result_1191183924;

}

function substituteLog_1174405176(frmt_1174405177, level_1174405178, args_1174405179) {
                  var Temporary8;

  var result_1174405180 = [];

    var msgLen_1174405181 = 0;
    Label1: {
      var arg_1174405185 = [];
      var i_536872398 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872398 < (args_1174405179).length)) break Label3;
            arg_1174405185 = args_1174405179[chckIndx(i_536872398, 0, (args_1174405179).length - 1)];
            msgLen_1174405181 = addInt(msgLen_1174405181, (arg_1174405185).length);
            i_536872398 = addInt(i_536872398, 1);
          }
      };
    };
    result_1174405180 = nimCopy(null, mnewString(0), NTI33554449);
    var i_1174405190 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_1174405190 < (frmt_1174405177).length)) break Label5;
          if (!((frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)] == 36))) {
          addChar(result_1174405180, frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]);;
          i_1174405190 = addInt(i_1174405190, 1);
          }
          else {
            i_1174405190 = addInt(i_1174405190, 1);
            var v_1174405201 = [];
            var app_1174405202 = [];
            Label6: {
                Label7: while (true) {
                  if (!(i_1174405190 < (frmt_1174405177).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet326[frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_1174405201, nsuToLowerAsciiChar(frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]));;
                  i_1174405190 = addInt(i_1174405190, 1);
                }
            };
            switch (toJSStr(v_1174405201)) {
            case "date":
              result_1174405180.push.apply(result_1174405180, ntgetDateStr(now_1191183852()));;
              break;
            case "time":
              result_1174405180.push.apply(result_1174405180, ntgetClockStr(now_1191183852()));;
              break;
            case "datetime":
              result_1174405180.push.apply(result_1174405180, (ntgetDateStr(now_1191183852()) || []).concat([84] || [],ntgetClockStr(now_1191183852()) || []));;
              break;
            case "app":
              result_1174405180.push.apply(result_1174405180, app_1174405202);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)][chckIndx(0, 0, (LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]).length - 1)]);;
              break;
            case "levelname":
              result_1174405180.push.apply(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]);;
              break;
            default: 
              break;
            }
          }
          
        }
    };
    Label9: {
      var arg_1174405215 = [];
      var i_536872403 = 0;
      Label10: {
          Label11: while (true) {
          if (!(i_536872403 < (args_1174405179).length)) break Label11;
            arg_1174405215 = args_1174405179[chckIndx(i_536872403, 0, (args_1174405179).length - 1)];
            result_1174405180.push.apply(result_1174405180, arg_1174405215);;
            i_536872403 = addInt(i_536872403, 1);
          }
      };
    };

  return result_1174405180;

}

function log_1174405221(logger_1174405222, level_1174405223, args_1174405224) {
    if (((level_1174405147[0] <= level_1174405223) && (logger_1174405222.levelThreshold <= level_1174405223))) {
    var ln_1174405233 = substituteLog_1174405176(logger_1174405222.fmtStr, level_1174405223, args_1174405224);
    var cln_1174405234 = toJSStr(ln_1174405233);
    switch (level_1174405223) {
    case 1:
      console.debug(cln_1174405234);
      break;
    case 2:
      console.info(cln_1174405234);
      break;
    case 4:
      console.warn(cln_1174405234);
      break;
    case 5:
      console.error(cln_1174405234);
      break;
    default: 
      console.log(cln_1174405234);
      break;
    }
    }
    

  
}

function log_1174405216(logger_1174405217, level_1174405218, args_1174405219) {
  
}

function log_1174405220(logger_1174405217, level_1174405218, args_1174405219) {
    chckNilDisp(logger_1174405217);
    if (isObj(logger_1174405217.m_type, NTI704643078)) {
    log_704643142(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405134)) {
    log_1174405221(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405133)) {
    log_1174405216(logger_1174405217, level_1174405218, args_1174405219);
    }
    }}

  
}

function isReadOnly_2399141915(self_2399141916) {
  var result_2399141917 = false;

    result_2399141917 = false;

  return result_2399141917;

}

function isReadOnly_2281701431(self_2281701432) {
  var result_2281701433 = false;

    result_2281701433 = true;

  return result_2281701433;

}

function isReadOnly_2264924176(self_2264924177) {
  var result_2264924178 = false;

    result_2264924178 = false;

  return result_2264924178;

}

function isReadOnly_2214592526(self_2214592527) {
  var result_2214592528 = false;

    result_2214592528 = true;

  return result_2214592528;

}

function isReadOnly_2214592529(self_2214592527) {
  var result_2214592530 = false;

  BeforeRet: {
    chckNilDisp(self_2214592527);
    if (isObj(self_2214592527.m_type, NTI2399141893)) {
    result_2214592530 = isReadOnly_2399141915(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2281701380)) {
    result_2214592530 = isReadOnly_2281701431(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2264924164)) {
    result_2214592530 = isReadOnly_2264924176(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2214592520)) {
    result_2214592530 = isReadOnly_2214592526(self_2214592527);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592530;

}

function settings_2399141918(self_2399141919) {
  var result_2399141920 = null;

    result_2399141920 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2399141920, [98,97,115,101,85,114,108], newJString_1627389994(self_2399141919.baseUrl));

  return result_2399141920;

}

function settings_2281701434(self_2281701435) {
  var result_2281701436 = null;

    result_2281701436 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [98,97,115,101,85,114,108], newJString_1627389994(self_2281701435.baseUrl));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [117,115,101,114], newJString_1627389994(self_2281701435.user));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [114,101,112,111,115,105,116,111,114,121], newJString_1627389994(self_2281701435.repository));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [98,114,97,110,99,104,79,114,72,97,115,104], newJString_1627389994(self_2281701435.branchOrHash));

  return result_2281701436;

}

function settings_2264924169(self_2264924170) {
  var result_2264924171 = null;

    result_2264924171 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2264924171, [112,97,116,104], newJString_1627389994(self_2264924170.path));

  return result_2264924171;

}

function settings_2214592531(self_2214592532) {
  var result_2214592533 = null;

  return result_2214592533;

}

function settings_2214592534(self_2214592532) {
  var result_2214592535 = null;

  BeforeRet: {
    chckNilDisp(self_2214592532);
    if (isObj(self_2214592532.m_type, NTI2399141893)) {
    result_2214592535 = settings_2399141918(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2281701380)) {
    result_2214592535 = settings_2281701434(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2264924164)) {
    result_2214592535 = settings_2264924169(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2214592520)) {
    result_2214592535 = settings_2214592531(self_2214592532);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592535;

}

function clear_2399141963(t_2399141966) {
    Label1: {
      var i_2399142019 = 0;
      var colontmp__536872415 = 0;
      colontmp__536872415 = (t_2399141966.data).length;
      var i_536872416 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872416 < colontmp__536872415)) break Label3;
            i_2399142019 = i_536872416;
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field0 = 0;
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field2 = nimCopy(t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field2, ({done: false, listing: ({files: [], folders: []})}), NTI2399141891);
            i_536872416 = addInt(i_536872416, 1);
          }
      };
    };
    t_2399141966.counter = 0;

  
}

function clearDirectoryCache_2399141921(self_2399141922) {
    clear_2399141963(self_2399141922.cachedDirectoryListings);

  
}

function clear_2281701479(t_2281701482) {
    Label1: {
      var i_2281701535 = 0;
      var colontmp__536872419 = 0;
      colontmp__536872419 = (t_2281701482.data).length;
      var i_536872420 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872420 < colontmp__536872419)) break Label3;
            i_2281701535 = i_536872420;
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field0 = 0;
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field2 = nimCopy(t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field2, ({files: [], folders: []}), NTI2214592517);
            i_536872420 = addInt(i_536872420, 1);
          }
      };
    };
    t_2281701482.counter = 0;

  
}

function clearDirectoryCache_2281701437(self_2281701438) {
    clear_2281701479(self_2281701438.cachedDirectoryListings);

  
}

function clearDirectoryCache_2214592536(self_2214592537) {
  
}

function clearDirectoryCache_2214592538(self_2214592537) {
    chckNilDisp(self_2214592537);
    if (isObj(self_2214592537.m_type, NTI2399141893)) {
    clearDirectoryCache_2399141921(self_2214592537);
    }
    else {
    if (isObj(self_2214592537.m_type, NTI2281701380)) {
    clearDirectoryCache_2281701437(self_2214592537);
    }
    else {
    if (isObj(self_2214592537.m_type, NTI2214592520)) {
    clearDirectoryCache_2214592536(self_2214592537);
    }
    }}

  
}
async function httpGet_2348810256(url_2348810257, authToken_2348810271) {
  var result_2348810273 = null;

  BeforeRet: {
    var cstr_2348810313 = (await getAsyncJs(toJSStr(url_2348810257), toJSStr(get_2348810295(authToken_2348810271, []))));
    result_2348810273 = cstrToNimstr(cstr_2348810313);
    break BeforeRet;
  };

  return result_2348810273;

}
async function loadFile_2399142382(self_2399142383, relativePath_2399142384) {
    var Temporary1;

  var result_2399142386 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2399142384, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2399142384, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2399142384;
    }
    
    var relativePath_2399142414 = nimCopy(null, Temporary1, NTI33554449);
    var url_2399142415 = (self_2399142383.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2399142414 || []);
    var fmtRes_2399142420 = [mnewString(0)];
    fmtRes_2399142420[0].push.apply(fmtRes_2399142420[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2399142420, 0, url_2399142415, []);
    fmtRes_2399142420[0].push.apply(fmtRes_2399142420[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2399142420[0], NTI33554449)]);
    result_2399142386 = (await httpGet_2348810256(url_2399142415, none_2348810263()));
    break BeforeRet;
  };

  return result_2399142386;

}

function hasKey_1795162450(t_1795162453, key_1795162454) {
  var result_1795162455 = false;

    var hc_1795162456 = [0];
    result_1795162455 = (0 <= rawGet_1795162457(t_1795162453, key_1795162454, hc_1795162456, 0));

  return result_1795162455;

}

function contains_2382364741(t_2382364744, key_2382364745) {
  var result_2382364746 = false;

  BeforeRet: {
    result_2382364746 = hasKey_1795162450(t_2382364744, key_2382364745);
    break BeforeRet;
  };

  return result_2382364746;

}

function HEX5BHEX5D_1795163814(t_1795163817, key_1795163818) {
  var result_1795163819 = null;
  var result_1795163819_Idx = 0;

    var hcHEX60gensym22_1795163820 = [0];
    var indexHEX60gensym22_1795163827 = rawGet_1795162457(t_1795163817, key_1795163818, hcHEX60gensym22_1795163820, 0);
    if ((0 <= indexHEX60gensym22_1795163827)) {
    result_1795163819 = t_1795163817.data[chckIndx(indexHEX60gensym22_1795163827, 0, (t_1795163817.data).length - 1)]; result_1795163819_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1795163818);
    }
    

  return [result_1795163819, result_1795163819_Idx];

}

function loadApplicationFile_2382364695(self_2382364696, name_2382364697) {
    var Temporary1;

  var result_2382364698 = [];

  BeforeRet: {
    if ((window.localStorage.getItem(toJSStr(name_2382364697)) !== null)) {
    result_2382364698 = nimCopy(null, cstrToNimstr(window.localStorage.getItem(toJSStr(name_2382364697))), NTI33554449);
    break BeforeRet;
    }
    
    if (!(contains_2382364741(cachedAppFiles_2382364694[0], name_2382364697))) {
    HEX5BHEX5DHEX3D_1795162732(cachedAppFiles_2382364694[0], name_2382364697, cstrToNimstr(loadFileSync(toJSStr(name_2382364697))));
    }
    
    result_2382364698 = nimCopy(null, (Temporary1 = HEX5BHEX5D_1795163814(cachedAppFiles_2382364694[0], name_2382364697), Temporary1)[0][Temporary1[1]], NTI33554449);
    break BeforeRet;
  };

  return result_2382364698;

}

function loadApplicationFile_2365587470(self_2365587471, name_2365587472) {
  var result_2365587473 = [];

  return result_2365587473;

}

function loadApplicationFile_2365587474(self_2365587471, name_2365587472) {
  var result_2365587475 = [];

  BeforeRet: {
    chckNilDisp(self_2365587471);
    if (isObj(self_2365587471.m_type, NTI2382364676)) {
    result_2365587475 = loadApplicationFile_2382364695(self_2365587471, name_2365587472);
    break BeforeRet;
    }
    else {
    if (isObj(self_2365587471.m_type, NTI2365587460)) {
    result_2365587475 = loadApplicationFile_2365587470(self_2365587471, name_2365587472);
    break BeforeRet;
    }
    }
  };

  return result_2365587475;

}

function getAccessToken_2281701406() {
  var result_2281701408 = ({val: [], has: false});

  BeforeRet: {
    var token_2281701409 = loadApplicationFile_2365587474(fs_2365587509, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110]);
    if ((0 < (token_2281701409).length)) {
    result_2281701408 = nimCopy(result_2281701408, some_2281701410(token_2281701409), NTI2348810261);
    break BeforeRet;
    }
    
    result_2281701408 = nimCopy(result_2281701408, none_2348810263(), NTI2348810261);
    break BeforeRet;
  };

  return result_2281701408;

}

function decode_2315256303(s_2315256304) {
    
function decodeSize_2315256306(size_2315256307) {
      var result_2315256308 = 0;

      BeforeRet: {
        result_2315256308 = addInt(divInt(mulInt(size_2315256307, 3), 4), 6);
        break BeforeRet;
      };

      return result_2315256308;

    }
    var Temporary1;

  var result_2315256305 = [];

  BeforeRet: {
    if (((s_2315256304).length == 0)) {
    break BeforeRet;
    }
    
    if (result_2315256305.length < (Temporary1 = chckRange(decodeSize_2315256306((s_2315256304).length), 0, 2147483647), Temporary1)) { for (var i = result_2315256305.length; i < Temporary1; ++i) result_2315256305.push(0); }
         else {result_2315256305.length = Temporary1; };
    var inputIndex_2315256313 = 0;
    var outputIndex_2315256314 = 0;
    var inputLen_2315256315 = (s_2315256304).length;
    var inputEnds_2315256316 = 0;
    Label2: {
        Label3: while (true) {
        if (!(ConstSet327[s_2315256304[chckIndx(subInt(inputLen_2315256315, 1), 0, (s_2315256304).length - 1)]] != undefined)) break Label3;
          inputLen_2315256315 = subInt(inputLen_2315256315, 1);
        }
    };
    inputEnds_2315256316 = subInt(inputLen_2315256315, 4);
    Label4: {
        Label5: while (true) {
        if (!(inputIndex_2315256313 <= inputEnds_2315256316)) break Label5;
          Label6: {
              Label7: while (true) {
              if (!(ConstSet328[s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]] != undefined)) break Label7;
                inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
              }
          };
          var a_2315256338 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((a_2315256338 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var b_2315256351 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((b_2315256351 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var c_2315256364 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((c_2315256364 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var d_2315256377 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((d_2315256377 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256338 << 2) | (b_2315256351 >> 4)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((b_2315256351 << 4) | (c_2315256364 >> 2)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((c_2315256364 << 6) | (d_2315256377 >> 0)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
        }
    };
    var leftLen_2315256426 = absInt(modInt(subInt(inputIndex_2315256313, inputLen_2315256315), 4));
    if ((leftLen_2315256426 == 2)) {
    var a_2315256430 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((a_2315256430 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var b_2315256443 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((b_2315256443 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256430 << 2) | (b_2315256443 >> 4)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    }
    else {
    if ((leftLen_2315256426 == 3)) {
    var a_2315256469 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((a_2315256469 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var b_2315256482 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((b_2315256482 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var c_2315256495 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((c_2315256495 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256469 << 2) | (b_2315256482 >> 4)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((b_2315256482 << 4) | (c_2315256495 >> 2)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    }
    }
    if (result_2315256305.length < chckRange(outputIndex_2315256314, 0, 2147483647)) { for (var i = result_2315256305.length; i < chckRange(outputIndex_2315256314, 0, 2147483647); ++i) result_2315256305.push(0); }
         else {result_2315256305.length = chckRange(outputIndex_2315256314, 0, 2147483647); };
  };

  return result_2315256305;

}
async function loadFile_2281701875(self_2281701876, relativePath_2281701877) {
    var Temporary1;

  var result_2281701879 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2281701877, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2281701877, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2281701877;
    }
    
    var relativePath_2281701907 = nimCopy(null, Temporary1, NTI33554449);
    var url_2281701908 = (self_2281701876.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2281701907 || [],[63,114,101,102,61] || [],self_2281701876.branchOrHash || []);
    var fmtRes_2281701913 = [mnewString(0)];
    fmtRes_2281701913[0].push.apply(fmtRes_2281701913[0], [91,103,105,116,104,117,98,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2281701913, 0, url_2281701908, []);
    fmtRes_2281701913[0].push.apply(fmtRes_2281701913[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2281701913[0], NTI33554449)]);
    var token_2281701914 = getAccessToken_2281701406();
    var response_2281701919 = (await httpGet_2348810256(url_2281701908, token_2281701914));
++excHandler;
    try {
    var jsn_2281701920 = parseJson_1627395313(response_2281701919);
    if (hasKey_1627393154(jsn_2281701920, [99,111,110,116,101,110,116])) {
    var contentBase64_2281701921 = getStr_1627390106(HEX5BHEX5D_1627393037(jsn_2281701920, [99,111,110,116,101,110,116]), []);
    var content_2281701922 = decode_2315256303(contentBase64_2281701921);
    result_2281701879 = content_2281701922;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2281701930 = [mnewString(0)];
    fmtRes_2281701930[0].push.apply(fmtRes_2281701930[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2281701930, 0, response_2281701919, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281701930[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2281701879 = [];
    break BeforeRet;
  };

  return result_2281701879;

}

function open_503316852(f_503316853, f_503316853_Idx, filename_503316854, mode_503316855, bufSize_503316856) {
    var Temporary1;

  var result_503316857 = false;

    var p_503316858 = (Temporary1 = fopen(toJSStr(filename_503316854), FormatOpen_503316842[chckIndx(mode_503316855, 0, (FormatOpen_503316842).length - 1)]), Temporary1)[0], p_503316858_Idx = Temporary1[1];
    if (!((p_503316858 == null && p_503316858_Idx == 0))) {
    var f2_503316859 = p_503316858;
    result_503316857 = true;
    f_503316853[f_503316853_Idx] = p_503316858;
    if (((0 < bufSize_503316856) && ((bufSize_503316856 >>> 0) <= 4294967295))) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IOFBF, (bufSize_503316856 >>> 0));
    }
    else {
    if ((bufSize_503316856 == 0)) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_503316857;

}

function rawFileSize_503316808(file_503316809) {
  var result_503316810 = 0;

    var oldPos_503316811 = ftello(file_503316809);
    var _ = fseeko(file_503316809, 0, 2);
    result_503316810 = ftello(file_503316809);
    var _ = fseeko(file_503316809, oldPos_503316811, 0);

  return result_503316810;

}

function raiseEIO_503316567(msg_503316568) {
    raiseException({message: nimCopy(null, msg_503316568, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_503316612(f_503316613) {
    if (!((ferror(f_503316613) == 0))) {
    var msg_503316614 = ([101,114,114,110,111,58,32] || []).concat(HEX24_369098760(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    clearerr(f_503316613);
    raiseEIO_503316567(msg_503316614);
    }
    

  
}

function readBuffer_503316615(f_503316616, buffer_503316617, buffer_503316617_Idx, len_503316618) {
  var result_503316619 = 0;

    result_503316619 = (fread(buffer_503316617, buffer_503316617_Idx, 1, (len_503316618 >>> 0), f_503316616) | 0);
    if (!((result_503316619 == len_503316618))) {
    checkErr_503316612(f_503316616);
    }
    

  return result_503316619;

}

function endOfFile_503316812(f_503316813) {
  var result_503316814 = false;

  BeforeRet: {
    var c_503316815 = fgetc(f_503316813);
    var _ = ungetc(c_503316815, f_503316813);
    result_503316814 = (c_503316815 < 0);
    break BeforeRet;
  };

  return result_503316814;

}

function readAllBuffer_503316803(file_503316804) {
  var result_503316805 = [];

    result_503316805 = nimCopy(null, [], NTI33554449);
    var buffer_503316806 = mnewString(4000);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_503316807 = readBuffer_503316615(file_503316804, buffer_503316806, chckIndx(0, 0, (buffer_503316806).length - 1), 4000);
          if ((bytesRead_503316807 == 4000)) {
          result_503316805.push.apply(result_503316805, buffer_503316806);;
          }
          else {
            if (buffer_503316806.length < chckRange(bytesRead_503316807, 0, 2147483647)) { for (var i = buffer_503316806.length; i < chckRange(bytesRead_503316807, 0, 2147483647); ++i) buffer_503316806.push(0); }
         else {buffer_503316806.length = chckRange(bytesRead_503316807, 0, 2147483647); };
            result_503316805.push.apply(result_503316805, buffer_503316806);;
            break Label1;
          }
          
        }
    };

  return result_503316805;

}

function readAllFile_503316816(file_503316817, len_503316818) {
  var result_503316819 = [];

    result_503316819 = nimCopy(null, mnewString(chckRange(len_503316818, 0, 2147483647)), NTI33554449);
    var bytes_503316820 = readBuffer_503316615(file_503316817, result_503316819, chckIndx(0, 0, (result_503316819).length - 1), chckRange(len_503316818, 0, 2147483647));
    if (endOfFile_503316812(file_503316817)) {
    if ((bytes_503316820 < len_503316818)) {
    if (result_503316819.length < chckRange(bytes_503316820, 0, 2147483647)) { for (var i = result_503316819.length; i < chckRange(bytes_503316820, 0, 2147483647); ++i) result_503316819.push(0); }
         else {result_503316819.length = chckRange(bytes_503316820, 0, 2147483647); };
    }
    
    }
    else {
    result_503316819.push.apply(result_503316819, readAllBuffer_503316803(file_503316817));;
    }
    

  return result_503316819;

}

function readAll_503316825(file_503316826) {
  var result_503316827 = [];

    var len_503316828 = rawFileSize_503316808(file_503316826);
    if ((0 < len_503316828)) {
    result_503316827 = nimCopy(null, readAllFile_503316816(file_503316826, len_503316828), NTI33554449);
    }
    else {
      result_503316827 = nimCopy(null, readAllBuffer_503316803(file_503316826), NTI33554449);
    }
    

  return result_503316827;

}

function close_503316691(f_503316692) {
    if (!((f_503316692 == null))) {
    var _ = fclose(f_503316692);
    }
    

  
}

function readFile_503316918(filename_503316919) {
  var result_503316920 = [];

    var f_503316921 = [null];
    if (open_503316852(f_503316921, 0, filename_503316919, 0, -1)) {
    try {
    result_503316920 = nimCopy(null, readAll_503316825(f_503316921[0]), NTI33554449);
    } finally {
    close_503316691(f_503316921[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316919 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_503316920;

}

function getAbsolutePath_2264924172(self_2264924173, relativePath_2264924174) {
  var result_2264924175 = [];

    result_2264924175 = nimCopy(null, HEX2F_1426063446(self_2264924173.path, relativePath_2264924174), NTI33554449);

  return result_2264924175;

}
async function loadFile_2264924200(self_2264924201, relativePath_2264924202) {
  var result_2264924204 = null;

  BeforeRet: {
    result_2264924204 = readFile_503316918(getAbsolutePath_2264924172(self_2264924201, relativePath_2264924202));
    break BeforeRet;
  };

  return result_2264924204;

}

function loadFile_2214592539(self_2214592540, relativePath_2214592541) {
  var result_2214592544 = null;

  return result_2214592544;

}

function loadFile_2214592545(self_2214592540, relativePath_2214592541) {
  var result_2214592546 = null;

  BeforeRet: {
    chckNilDisp(self_2214592540);
    if (isObj(self_2214592540.m_type, NTI2399141893)) {
    result_2214592546 = loadFile_2399142382(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2281701380)) {
    result_2214592546 = loadFile_2281701875(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2264924164)) {
    result_2214592546 = loadFile_2264924200(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2214592520)) {
    result_2214592546 = loadFile_2214592539(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592546;

}
async function httpPost_2348810327(url_2348810328, content_2348810329, authToken_2348810338) {
  var result_2348810340 = null;

  BeforeRet: {
    (await postAsyncJs(toJSStr(url_2348810328), toJSStr(content_2348810329), toJSStr(get_2348810295(authToken_2348810338, []))));
    result_2348810340 = undefined;
    break BeforeRet;
  };

  return result_2348810340;

}
async function saveFile_2399142429(self_2399142430, relativePath_2399142431, content_2399142432) {
    var Temporary1;

  var result_2399142434 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2399142431, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2399142431, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2399142431;
    }
    
    var relativePath_2399142458 = nimCopy(null, Temporary1, NTI33554449);
    var url_2399142459 = (self_2399142430.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2399142458 || []);
    var fmtRes_2399142464 = [mnewString(0)];
    fmtRes_2399142464[0].push.apply(fmtRes_2399142464[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,115,97,118,101,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2399142464, 0, url_2399142459, []);
    fmtRes_2399142464[0].push.apply(fmtRes_2399142464[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2399142464[0], NTI33554449)]);
    (await httpPost_2348810327(url_2399142459, content_2399142432, none_2348810263()));
    result_2399142434 = undefined;
    break BeforeRet;
  };

  return result_2399142434;

}
async function saveFile_2281701935(self_2281701936, relativePath_2281701937, content_2281701938) {
  var result_2281701940 = null;

  BeforeRet: {
    result_2281701940 = undefined;
    break BeforeRet;
  };

  return result_2281701940;

}

function writeBuffer_503316646(f_503316647, buffer_503316648, buffer_503316648_Idx, len_503316649) {
  var result_503316650 = 0;

    result_503316650 = (fwrite(buffer_503316648, buffer_503316648_Idx, 1, (len_503316649 >>> 0), f_503316647) | 0);
    checkErr_503316612(f_503316647);

  return result_503316650;

}

function write_503316684(f_503316685, s_503316686) {
    if (!((writeBuffer_503316646(f_503316685, toJSStr(s_503316686), chckRange((s_503316686).length, 0, 2147483647)) == (s_503316686).length))) {
    raiseEIO_503316567([99,97,110,110,111,116,32,119,114,105,116,101,32,115,116,114,105,110,103,32,116,111,32,102,105,108,101]);
    }
    

  
}

function writeFile_503316923(filename_503316924, content_503316925) {
    var f_503316926 = [null];
    if (open_503316852(f_503316926, 0, filename_503316924, 1, -1)) {
    try {
    write_503316684(f_503316926[0], content_503316925);
    } finally {
    close_503316691(f_503316926[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316924 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  
}
async function saveFile_2264924227(self_2264924228, relativePath_2264924229, content_2264924230) {
  var result_2264924232 = null;

  BeforeRet: {
    writeFile_503316923(getAbsolutePath_2264924172(self_2264924228, relativePath_2264924229), content_2264924230);
    result_2264924232 = undefined;
    break BeforeRet;
  };

  return result_2264924232;

}

function saveFile_2214592547(self_2214592548, relativePath_2214592549, content_2214592550) {
  var result_2214592552 = null;

  return result_2214592552;

}

function saveFile_2214592553(self_2214592548, relativePath_2214592549, content_2214592550) {
  var result_2214592554 = null;

  BeforeRet: {
    chckNilDisp(self_2214592548);
    if (isObj(self_2214592548.m_type, NTI2399141893)) {
    result_2214592554 = saveFile_2399142429(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2281701380)) {
    result_2214592554 = saveFile_2281701935(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2264924164)) {
    result_2214592554 = saveFile_2264924227(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2214592520)) {
    result_2214592554 = saveFile_2214592547(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592554;

}

function rawGet_2399142566(t_2399142569, key_2399142570, hc_2399142571, hc_2399142571_Idx) {
  var result_2399142572 = 0;

  BeforeRet: {
    hc_2399142571[hc_2399142571_Idx] = hash_1325400491(key_2399142570);
    if ((hc_2399142571[hc_2399142571_Idx] == 0)) {
    hc_2399142571[hc_2399142571_Idx] = 314159265;
    }
    
    if (((t_2399142569.data).length == 0)) {
    result_2399142572 = -1;
    break BeforeRet;
    }
    
    var h_2399142623 = (hc_2399142571[hc_2399142571_Idx] & (t_2399142569.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field0)) break Label2;
          if (((t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field0 == hc_2399142571[hc_2399142571_Idx]) && eqStrings(t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field1, key_2399142570))) {
          result_2399142572 = h_2399142623;
          break BeforeRet;
          }
          
          h_2399142623 = nextTry_1308622883(h_2399142623, (t_2399142569.data).length - 1);
        }
    };
    result_2399142572 = subInt(-1, h_2399142623);
  };

  return result_2399142572;

}

function hasKey_2399142559(t_2399142562, key_2399142563) {
  var result_2399142564 = false;

    var hc_2399142565 = [0];
    result_2399142564 = (0 <= rawGet_2399142566(t_2399142562, key_2399142563, hc_2399142565, 0));

  return result_2399142564;

}

function contains_2399142553(t_2399142556, key_2399142557) {
  var result_2399142558 = false;

  BeforeRet: {
    result_2399142558 = hasKey_2399142559(t_2399142556, key_2399142557);
    break BeforeRet;
  };

  return result_2399142558;

}

function HEX5BHEX5D_2399142857(t_2399142860, key_2399142861) {
  var result_2399142862 = null;

    var hcHEX60gensym22_2399142863 = [0];
    var indexHEX60gensym22_2399142870 = rawGet_2399142566(t_2399142860, key_2399142861, hcHEX60gensym22_2399142863, 0);
    if ((0 <= indexHEX60gensym22_2399142870)) {
    result_2399142862 = t_2399142860.data[chckIndx(indexHEX60gensym22_2399142870, 0, (t_2399142860.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2399142861);
    }
    

  return result_2399142862;

}

function mustRehash_2399143261(t_2399143263) {
  var result_2399143264 = false;

    if (!((t_2399143263.counter < (t_2399143263.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2399143264 = ((mulInt((t_2399143263.data).length, 2) < mulInt(t_2399143263.counter, 3)) || (subInt((t_2399143263.data).length, t_2399143263.counter) < 4));

  return result_2399143264;

}

function rawInsert_2399143710(t_2399143714, data_2399143715, data_2399143715_Idx, key_2399143716, val_2399143717, hc_2399143718, h_2399143719) {
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field1 = nimCopy(null, key_2399143716, NTI33554449);
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field2 = nimCopy(data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field2, val_2399143717, NTI2399141891);
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field0 = hc_2399143718;

  
}

function enlarge_2399143416(t_2399143419) {
    var n_2399143422 = [];
    n_2399143422 = new Array(chckRange(mulInt((t_2399143419.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2399143419.data).length, 2), 0, 2147483647) ; ++i) { n_2399143422[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }    var Temporary1 = t_2399143419.data; t_2399143419.data = n_2399143422; n_2399143422 = Temporary1;    Label2: {
      var i_2399143486 = 0;
      var colontmp__536872430 = 0;
      colontmp__536872430 = (n_2399143422).length - 1;
      var res_536872431 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872431 <= colontmp__536872430)) break Label4;
            i_2399143486 = res_536872431;
            var eh_2399143540 = n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field0;
            if (isFilled_1308622880(eh_2399143540)) {
            var j_2399143544 = (eh_2399143540 & (t_2399143419.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2399143419.data[chckIndx(j_2399143544, 0, (t_2399143419.data).length - 1)].Field0)) break Label6;
                  j_2399143544 = nextTry_1308622883(j_2399143544, (t_2399143419.data).length - 1);
                }
            };
            rawInsert_2399143710(t_2399143419, t_2399143419, "data", n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field1, n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field2, eh_2399143540, j_2399143544);
            }
            
            res_536872431 = addInt(res_536872431, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2399143879(t_2399143882, key_2399143883, hc_2399143884) {
  var result_2399143885 = 0;

  BeforeRet: {
    if (((t_2399143882.data).length == 0)) {
    result_2399143885 = -1;
    break BeforeRet;
    }
    
    var h_2399143936 = (hc_2399143884 & (t_2399143882.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field0)) break Label2;
          if (((t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field0 == hc_2399143884) && eqStrings(t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field1, key_2399143883))) {
          result_2399143885 = h_2399143936;
          break BeforeRet;
          }
          
          h_2399143936 = nextTry_1308622883(h_2399143936, (t_2399143882.data).length - 1);
        }
    };
    result_2399143885 = subInt(-1, h_2399143936);
  };

  return result_2399143885;

}

function HEX5BHEX5DHEX3D_2399143088(t_2399143091, key_2399143092, val_2399143093) {
    if (((t_2399143091.data).length == 0)) {
    var correctSizeHEX60gensym25_2399143142 = slotsNeeded_1308622891(32);
    t_2399143091.counter = 0;
    t_2399143091.data = new Array(chckRange(correctSizeHEX60gensym25_2399143142, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2399143142, 0, 2147483647) ; ++i) { t_2399143091.data[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }    }
    
    var hc_2399143147 = [0];
    var index_2399143154 = rawGet_2399142566(t_2399143091, key_2399143092, hc_2399143147, 0);
    if ((0 <= index_2399143154)) {
    t_2399143091.data[chckIndx(index_2399143154, 0, (t_2399143091.data).length - 1)].Field2 = nimCopy(t_2399143091.data[chckIndx(index_2399143154, 0, (t_2399143091.data).length - 1)].Field2, val_2399143093, NTI2399141891);
    }
    else {
      if (((t_2399143091.data).length == 0)) {
      var correctSizeHEX60gensym28_2399143256 = slotsNeeded_1308622891(32);
      t_2399143091.counter = 0;
      t_2399143091.data = new Array(chckRange(correctSizeHEX60gensym28_2399143256, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2399143256, 0, 2147483647) ; ++i) { t_2399143091.data[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }      }
      
      if (mustRehash_2399143261(t_2399143091)) {
      enlarge_2399143416(t_2399143091);
      index_2399143154 = rawGetKnownHC_2399143879(t_2399143091, key_2399143092, hc_2399143147[0]);
      }
      
      index_2399143154 = subInt(-1, index_2399143154);
      rawInsert_2399143710(t_2399143091, t_2399143091, "data", key_2399143092, val_2399143093, hc_2399143147[0], index_2399143154);
      t_2399143091.counter = addInt(t_2399143091.counter, 1);
    }
    

  
}

function parseDirectoryListing_2399142469(self_2399142470, basePath_2399142471, jsn_2399142472) {
        var Temporary3;
        var Temporary8;

  var result_2399142473 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2399142472, [102,105,108,101,115]) && (HEX5BHEX5D_1627393037(jsn_2399142472, [102,105,108,101,115]).kind == 6))) {
    var files_2399142478 = HEX5BHEX5D_1627393037(jsn_2399142472, [102,105,108,101,115]);
    Label1: {
      var item_2399142479 = null;
      if (!((files_2399142478.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(files_2399142478.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872436 = null;
        var colontmp__536872437 = [];
        var Temporary3 = files_2399142478;
        if (ConstSet329[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872437 = Temporary3.elems;
        var i_536872438 = 0;
        var L_536872439 = (colontmp__536872437).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872438 < L_536872439)) break Label5;
              i_536872436 = colontmp__536872437[chckIndx(i_536872438, 0, (colontmp__536872437).length - 1)];
              item_2399142479 = i_536872436;
              result_2399142473.files.push(getStr_1627390106(item_2399142479, []));;
              i_536872438 = addInt(i_536872438, 1);
              if (!(((colontmp__536872437).length == L_536872439))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    if ((hasKey_1627393154(jsn_2399142472, [102,111,108,100,101,114,115]) && (HEX5BHEX5D_1627393037(jsn_2399142472, [102,111,108,100,101,114,115]).kind == 6))) {
    var folders_2399142488 = HEX5BHEX5D_1627393037(jsn_2399142472, [102,111,108,100,101,114,115]);
    Label6: {
      var item_2399142489 = null;
      if (!((folders_2399142488.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(folders_2399142488.kind, NTI1627389955) || []));
      }
      
      Label7: {
        var i_536872443 = null;
        var colontmp__536872444 = [];
        var Temporary8 = folders_2399142488;
        if (ConstSet330[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        colontmp__536872444 = Temporary8.elems;
        var i_536872445 = 0;
        var L_536872446 = (colontmp__536872444).length;
        Label9: {
            Label10: while (true) {
            if (!(i_536872445 < L_536872446)) break Label10;
              i_536872443 = colontmp__536872444[chckIndx(i_536872445, 0, (colontmp__536872444).length - 1)];
              item_2399142489 = i_536872443;
              result_2399142473.folders.push(getStr_1627390106(item_2399142489, []));;
              i_536872445 = addInt(i_536872445, 1);
              if (!(((colontmp__536872444).length == L_536872446))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2399142473;

}
async function getDirectoryListing_2399142497(self_2399142498, relativePath_2399142499) {
    var Temporary3;

  var result_2399142501 = null;

  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499) && !(HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).done))) break Label2;
          (await (new Promise(resolve => setTimeout(resolve, 2))));
        }
    };
    if (contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499)) {
    result_2399142501 = HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).listing;
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_2399143088(self_2399142498.cachedDirectoryListings, relativePath_2399142499, {done: false, listing: ({files: [], folders: []})});
    if ((((relativePath_2399142499).length == 0) || eqStrings(relativePath_2399142499, [46]))) {
    Temporary3 = (self_2399142498.baseUrl || []).concat([47,108,105,115,116] || []);
    }
    else {
    Temporary3 = (self_2399142498.baseUrl || []).concat([47,108,105,115,116,47] || [],relativePath_2399142499 || []);
    }
    
    var url_2399144117 = nimCopy(null, Temporary3, NTI33554449);
    var response_2399144122 = (await httpGet_2348810256(url_2399144117, none_2348810263()));
++excHandler;
    try {
    var jsn_2399144123 = parseJson_1627395313(response_2399144122);
    var listing_2399144124 = parseDirectoryListing_2399142469(self_2399142498, relativePath_2399142499, jsn_2399144123);
    HEX5BHEX5DHEX3D_2399143088(self_2399142498.cachedDirectoryListings, relativePath_2399142499, {done: true, listing: nimCopy(null, listing_2399144124, NTI2214592517)});
    result_2399142501 = listing_2399144124;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2399144178 = [mnewString(0)];
    fmtRes_2399144178[0].push.apply(fmtRes_2399144178[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2399144178, 0, response_2399144122, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2399144178[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499)) {
    HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).done = true;
    result_2399142501 = HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).listing;
    break BeforeRet;
    }
    
    result_2399142501 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2399142501;

}

function rawGet_2281702091(t_2281702094, key_2281702095, hc_2281702096, hc_2281702096_Idx) {
  var result_2281702097 = 0;

  BeforeRet: {
    hc_2281702096[hc_2281702096_Idx] = hash_1325400491(key_2281702095);
    if ((hc_2281702096[hc_2281702096_Idx] == 0)) {
    hc_2281702096[hc_2281702096_Idx] = 314159265;
    }
    
    if (((t_2281702094.data).length == 0)) {
    result_2281702097 = -1;
    break BeforeRet;
    }
    
    var h_2281702148 = (hc_2281702096[hc_2281702096_Idx] & (t_2281702094.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field0)) break Label2;
          if (((t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field0 == hc_2281702096[hc_2281702096_Idx]) && eqStrings(t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field1, key_2281702095))) {
          result_2281702097 = h_2281702148;
          break BeforeRet;
          }
          
          h_2281702148 = nextTry_1308622883(h_2281702148, (t_2281702094.data).length - 1);
        }
    };
    result_2281702097 = subInt(-1, h_2281702148);
  };

  return result_2281702097;

}

function hasKey_2281702084(t_2281702087, key_2281702088) {
  var result_2281702089 = false;

    var hc_2281702090 = [0];
    result_2281702089 = (0 <= rawGet_2281702091(t_2281702087, key_2281702088, hc_2281702090, 0));

  return result_2281702089;

}

function contains_2281702078(t_2281702081, key_2281702082) {
  var result_2281702083 = false;

  BeforeRet: {
    result_2281702083 = hasKey_2281702084(t_2281702081, key_2281702082);
    break BeforeRet;
  };

  return result_2281702083;

}

function HEX5BHEX5D_2281702382(t_2281702385, key_2281702386) {
  var result_2281702387 = null;

    var hcHEX60gensym22_2281702388 = [0];
    var indexHEX60gensym22_2281702395 = rawGet_2281702091(t_2281702385, key_2281702386, hcHEX60gensym22_2281702388, 0);
    if ((0 <= indexHEX60gensym22_2281702395)) {
    result_2281702387 = t_2281702385.data[chckIndx(indexHEX60gensym22_2281702395, 0, (t_2281702385.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2281702386);
    }
    

  return result_2281702387;

}

function parseDirectoryListing_2281701946(self_2281701947, basePath_2281701948, jsn_2281701949) {
        var Temporary3;

  var result_2281701950 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2281701949, [116,114,101,101]) && (HEX5BHEX5D_1627393037(jsn_2281701949, [116,114,101,101]).kind == 6))) {
    var tree_2281701955 = HEX5BHEX5D_1627393037(jsn_2281701949, [116,114,101,101]);
    Label1: {
      var item_2281701956 = null;
      if (!((tree_2281701955.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(tree_2281701955.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872452 = null;
        var colontmp__536872453 = [];
        var Temporary3 = tree_2281701955;
        if (ConstSet331[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872453 = Temporary3.elems;
        var i_536872454 = 0;
        var L_536872455 = (colontmp__536872453).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872454 < L_536872455)) break Label5;
              i_536872452 = colontmp__536872453[chckIndx(i_536872454, 0, (colontmp__536872453).length - 1)];
              item_2281701956 = i_536872452;
              Label6: {
                if (!((item_2281701956.kind == 5))) {
                break Label6;
                }
                
                var path_2281701961 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [112,97,116,104]), []);
                var typ_2281701962 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [116,121,112,101]), []);
                var url_2281701963 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [117,114,108]), []);
                var sha_2281701964 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [115,104,97]), []);
                HEX5BHEX5DHEX3D_1795162732(self_2281701947.pathToSha, HEX2F_1426063446(basePath_2281701948, path_2281701961), sha_2281701964);
                switch (toJSStr(typ_2281701962)) {
                case "blob":
                  var Temporary7 = nimCopy(null, path_2281701961, NTI33554449);
                  result_2281701950.files.push(Temporary7);;
                  break;
                case "tree":
                  var Temporary8 = nimCopy(null, path_2281701961, NTI33554449);
                  result_2281701950.folders.push(Temporary8);;
                  break;
                default: 
                  break;
                }
              };
              i_536872454 = addInt(i_536872454, 1);
              if (!(((colontmp__536872453).length == L_536872455))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2281701950;

}

function mustRehash_2281702804(t_2281702806) {
  var result_2281702807 = false;

    if (!((t_2281702806.counter < (t_2281702806.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2281702807 = ((mulInt((t_2281702806.data).length, 2) < mulInt(t_2281702806.counter, 3)) || (subInt((t_2281702806.data).length, t_2281702806.counter) < 4));

  return result_2281702807;

}

function rawInsert_2281703253(t_2281703257, data_2281703258, data_2281703258_Idx, key_2281703259, val_2281703260, hc_2281703261, h_2281703262) {
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field1 = nimCopy(null, key_2281703259, NTI33554449);
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field2 = nimCopy(data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field2, val_2281703260, NTI2214592517);
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field0 = hc_2281703261;

  
}

function enlarge_2281702959(t_2281702962) {
    var n_2281702965 = [];
    n_2281702965 = new Array(chckRange(mulInt((t_2281702962.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2281702962.data).length, 2), 0, 2147483647) ; ++i) { n_2281702965[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    var Temporary1 = t_2281702962.data; t_2281702962.data = n_2281702965; n_2281702965 = Temporary1;    Label2: {
      var i_2281703029 = 0;
      var colontmp__536872459 = 0;
      colontmp__536872459 = (n_2281702965).length - 1;
      var res_536872460 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872460 <= colontmp__536872459)) break Label4;
            i_2281703029 = res_536872460;
            var eh_2281703083 = n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field0;
            if (isFilled_1308622880(eh_2281703083)) {
            var j_2281703087 = (eh_2281703083 & (t_2281702962.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2281702962.data[chckIndx(j_2281703087, 0, (t_2281702962.data).length - 1)].Field0)) break Label6;
                  j_2281703087 = nextTry_1308622883(j_2281703087, (t_2281702962.data).length - 1);
                }
            };
            rawInsert_2281703253(t_2281702962, t_2281702962, "data", n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field1, n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field2, eh_2281703083, j_2281703087);
            }
            
            res_536872460 = addInt(res_536872460, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2281703422(t_2281703425, key_2281703426, hc_2281703427) {
  var result_2281703428 = 0;

  BeforeRet: {
    if (((t_2281703425.data).length == 0)) {
    result_2281703428 = -1;
    break BeforeRet;
    }
    
    var h_2281703479 = (hc_2281703427 & (t_2281703425.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field0)) break Label2;
          if (((t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field0 == hc_2281703427) && eqStrings(t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field1, key_2281703426))) {
          result_2281703428 = h_2281703479;
          break BeforeRet;
          }
          
          h_2281703479 = nextTry_1308622883(h_2281703479, (t_2281703425.data).length - 1);
        }
    };
    result_2281703428 = subInt(-1, h_2281703479);
  };

  return result_2281703428;

}

function HEX5BHEX5DHEX3D_2281702631(t_2281702634, key_2281702635, val_2281702636) {
    if (((t_2281702634.data).length == 0)) {
    var correctSizeHEX60gensym22_2281702685 = slotsNeeded_1308622891(32);
    t_2281702634.counter = 0;
    t_2281702634.data = new Array(chckRange(correctSizeHEX60gensym22_2281702685, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym22_2281702685, 0, 2147483647) ; ++i) { t_2281702634.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    }
    
    var hc_2281702690 = [0];
    var index_2281702697 = rawGet_2281702091(t_2281702634, key_2281702635, hc_2281702690, 0);
    if ((0 <= index_2281702697)) {
    t_2281702634.data[chckIndx(index_2281702697, 0, (t_2281702634.data).length - 1)].Field2 = nimCopy(t_2281702634.data[chckIndx(index_2281702697, 0, (t_2281702634.data).length - 1)].Field2, val_2281702636, NTI2214592517);
    }
    else {
      if (((t_2281702634.data).length == 0)) {
      var correctSizeHEX60gensym25_2281702799 = slotsNeeded_1308622891(32);
      t_2281702634.counter = 0;
      t_2281702634.data = new Array(chckRange(correctSizeHEX60gensym25_2281702799, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2281702799, 0, 2147483647) ; ++i) { t_2281702634.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }      }
      
      if (mustRehash_2281702804(t_2281702634)) {
      enlarge_2281702959(t_2281702634);
      index_2281702697 = rawGetKnownHC_2281703422(t_2281702634, key_2281702635, hc_2281702690[0]);
      }
      
      index_2281702697 = subInt(-1, index_2281702697);
      rawInsert_2281703253(t_2281702634, t_2281702634, "data", key_2281702635, val_2281702636, hc_2281702690[0], index_2281702697);
      t_2281702634.counter = addInt(t_2281702634.counter, 1);
    }
    

  
}
async function getDirectoryListing_2281702022(self_2281702023, relativePath_2281702024) {
    var Temporary1;
    var Temporary2;

  var result_2281702026 = null;

  BeforeRet: {
    if (contains_2281702078(self_2281702023.cachedDirectoryListings, relativePath_2281702024)) {
    result_2281702026 = HEX5BHEX5D_2281702382(self_2281702023.cachedDirectoryListings, relativePath_2281702024);
    break BeforeRet;
    }
    
    var fmtRes_2281702468 = [mnewString(0)];
    fmtRes_2281702468[0].push.apply(fmtRes_2281702468[0], [91,103,105,116,104,117,98,93,32,103,101,116,68,105,114,101,99,116,111,114,121,76,105,115,116,105,110,103,32,102,111,114,32]);;
    formatValue_721420459(fmtRes_2281702468, 0, self_2281702023.baseUrl, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2281702468[0], NTI33554449)]);
    var token_2281702469 = getAccessToken_2281701406();
    if ((((relativePath_2281702024).length == 0) || eqStrings(relativePath_2281702024, [46]))) {
    Temporary1 = (self_2281702023.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],self_2281702023.branchOrHash || []);
    }
    else {
    if (contains_2382364741(self_2281702023.pathToSha, relativePath_2281702024)) {
    Temporary1 = (self_2281702023.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],(Temporary2 = HEX5BHEX5D_1795163814(self_2281702023.pathToSha, relativePath_2281702024), Temporary2)[0][Temporary2[1]] || []);
    }
    else {
      var fmtRes_2281702579 = [mnewString(0)];
      fmtRes_2281702579[0].push.apply(fmtRes_2281702579[0], [91,103,105,116,104,117,98,93,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,100,105,114,101,99,116,111,114,121,32,108,105,115,116,105,110,103,32,102,111,114,32,39]);;
      formatValue_721420459(fmtRes_2281702579, 0, relativePath_2281702024, []);
      fmtRes_2281702579[0].push.apply(fmtRes_2281702579[0], [39]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281702579[0], NTI33554449)]);
      result_2281702026 = {files: [], folders: []};
      break BeforeRet;
    }
    }
    var url_2281702583 = nimCopy(null, Temporary1, NTI33554449);
    var response_2281702588 = (await httpGet_2348810256(url_2281702583, token_2281702469));
++excHandler;
    try {
    var jsn_2281702589 = parseJson_1627395313(response_2281702588);
    var listing_2281702590 = parseDirectoryListing_2281701946(self_2281702023, relativePath_2281702024, jsn_2281702589);
    HEX5BHEX5DHEX3D_2281702631(self_2281702023.cachedDirectoryListings, relativePath_2281702024, listing_2281702590);
    result_2281702026 = listing_2281702590;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2281703667 = [mnewString(0)];
    fmtRes_2281703667[0].push.apply(fmtRes_2281703667[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2281703667, 0, response_2281702588, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281703667[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2281702026 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2281702026;

}
async function getDirectoryListing_2264924250(self_2264924251, relativePath_2264924252) {
  var result_2264924254 = null;

  return result_2264924254;

}

function getDirectoryListing_2214592555(self_2214592556, relativePath_2214592557) {
  var result_2214592560 = null;

  return result_2214592560;

}

function getDirectoryListing_2214592561(self_2214592556, relativePath_2214592557) {
  var result_2214592562 = null;

  BeforeRet: {
    chckNilDisp(self_2214592556);
    if (isObj(self_2214592556.m_type, NTI2399141893)) {
    result_2214592562 = getDirectoryListing_2399142497(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2281701380)) {
    result_2214592562 = getDirectoryListing_2281702022(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2264924164)) {
    result_2214592562 = getDirectoryListing_2264924250(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2214592520)) {
    result_2214592562 = getDirectoryListing_2214592555(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592562;

}

function loadFile_2382364680(self_2382364681, path_2382364682) {
  var result_2382364683 = [];

  BeforeRet: {
    result_2382364683 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(path_2382364682))), NTI33554449);
    break BeforeRet;
  };

  return result_2382364683;

}

function loadFile_2365587459(self_2365587460, path_2365587461) {
  var result_2365587462 = [];

  return result_2365587462;

}

function loadFile_2365587463(self_2365587460, path_2365587461) {
  var result_2365587464 = [];

  BeforeRet: {
    chckNilDisp(self_2365587460);
    if (isObj(self_2365587460.m_type, NTI2382364676)) {
    result_2365587464 = loadFile_2382364680(self_2365587460, path_2365587461);
    break BeforeRet;
    }
    else {
    if (isObj(self_2365587460.m_type, NTI2365587460)) {
    result_2365587464 = loadFile_2365587459(self_2365587460, path_2365587461);
    break BeforeRet;
    }
    }
  };

  return result_2365587464;

}

function saveFile_2382364684(self_2382364685, path_2382364686, content_2382364687) {
  
}

function saveFile_2365587465(self_2365587466, path_2365587467, content_2365587468) {
  
}

function saveFile_2365587469(self_2365587466, path_2365587467, content_2365587468) {
    chckNilDisp(self_2365587466);
    if (isObj(self_2365587466.m_type, NTI2382364676)) {
    saveFile_2382364684(self_2365587466, path_2365587467, content_2365587468);
    }
    else {
    if (isObj(self_2365587466.m_type, NTI2365587460)) {
    saveFile_2365587465(self_2365587466, path_2365587467, content_2365587468);
    }
    }

  
}

function saveApplicationFile_2382364856(self_2382364857, name_2382364858, content_2382364859) {
    window.localStorage.setItem(toJSStr(name_2382364858), toJSStr(content_2382364859));

  
}

function saveApplicationFile_2365587476(self_2365587477, name_2365587478, content_2365587479) {
  
}

function saveApplicationFile_2365587480(self_2365587477, name_2365587478, content_2365587479) {
    chckNilDisp(self_2365587477);
    if (isObj(self_2365587477.m_type, NTI2382364676)) {
    saveApplicationFile_2382364856(self_2365587477, name_2365587478, content_2365587479);
    }
    else {
    if (isObj(self_2365587477.m_type, NTI2365587460)) {
    saveApplicationFile_2365587476(self_2365587477, name_2365587478, content_2365587479);
    }
    }

  
}
async function updateWorkspaceName_2399142357(self_2399142358) {
  var result_2399142360 = null;

  BeforeRet: {
    var url_2399142366 = (self_2399142358.baseUrl || []).concat([47,105,110,102,111,47,110,97,109,101] || []);
    var localFolder_2399142371 = (await httpGet_2348810256(url_2399142366, none_2348810263()));
    var fmtRes_2399142376 = [mnewString(0)];
    fmtRes_2399142376[0].push.apply(fmtRes_2399142376[0], [65,98,115,121,116,114,101,101,83,101,114,118,101,114,58]);;
    formatValue_721420459(fmtRes_2399142376, 0, self_2399142358.baseUrl, []);
    fmtRes_2399142376[0].push.apply(fmtRes_2399142376[0], [47]);;
    formatValue_721420459(fmtRes_2399142376, 0, localFolder_2399142371, []);
    self_2399142358.name = nimCopy(null, fmtRes_2399142376[0], NTI33554449);
    result_2399142360 = undefined;
    break BeforeRet;
  };

  return result_2399142360;

}
async function updateWorkspaceName_2399142377(self_2399142358) {
  var result_2399142378 = null;

  BeforeRet: {
    result_2399142378 = updateWorkspaceName_2399142357(self_2399142358);
    break BeforeRet;
  };

  return result_2399142378;

}

function HEX24_3254780279(document_3254780280) {
  var result_3254780281 = [];

  BeforeRet: {
    result_3254780281 = nimCopy(null, document_3254780280.filename, NTI33554449);
    break BeforeRet;
  };

  return result_3254780281;

}

function HEX24_2969571551(document_2969571552) {
  var result_2969571553 = [];

  BeforeRet: {
    result_2969571553 = nimCopy(null, document_2969571552.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2969571553;

}

function HEX24_2818579226(document_2818579227) {
  var result_2818579228 = [];

  BeforeRet: {
    result_2818579228 = nimCopy(null, document_2818579227.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2818579228;

}

function HEX24_2197815307(document_2197815308) {
  var result_2197815309 = [];

  BeforeRet: {
    result_2197815309 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2197815309;

}

function HEX24_2197815310(document_2197815308) {
  var result_2197815311 = [];

  BeforeRet: {
    chckNilDisp(document_2197815308);
    if (isObj(document_2197815308.m_type, NTI3254779967)) {
    result_2197815311 = HEX24_3254780279(document_2197815308);
    break BeforeRet;
    }
    else {
    if (isObj(document_2197815308.m_type, NTI2969568612)) {
    result_2197815311 = HEX24_2969571551(document_2197815308);
    break BeforeRet;
    }
    else {
    if (isObj(document_2197815308.m_type, NTI2818572427)) {
    result_2197815311 = HEX24_2818579226(document_2197815308);
    break BeforeRet;
    }
    else {
    if (isObj(document_2197815308.m_type, NTI2197815300)) {
    result_2197815311 = HEX24_2197815307(document_2197815308);
    break BeforeRet;
    }
    }}}
  };

  return result_2197815311;

}

function save_3254780345(self_3254780346, filename_3254780347, app_3254780348) {
    var Temporary1;

    if ((0 < (filename_3254780347).length)) {
    Temporary1 = filename_3254780347;
    }
    else {
    Temporary1 = self_3254780346.filename;
    }
    
    self_3254780346.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_3254780346.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_3254780354 = [mnewString(0)];
    fmtRes_3254780354[0].push.apply(fmtRes_3254780354[0], [91,109,111,100,101,108,100,111,99,93,32,83,97,118,105,110,103,32,109,111,100,101,108,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_3254780354, 0, self_3254780346.filename, []);
    fmtRes_3254780354[0].push.apply(fmtRes_3254780354[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3254780354[0], NTI33554449)]);

  
}

function toJson_3003123902(kind_3003123903, opt_3003123904) {
  var result_3003123905 = null;

  BeforeRet: {
    result_3003123905 = newJString_1627389994(reprEnum(kind_3003123903, NTI3003121667));
    break BeforeRet;
  };

  return result_3003123905;

}

function toJson_2046820654(id_2046820655, opt_2046820656) {
  var result_2046820657 = null;

  BeforeRet: {
    result_2046820657 = newJString_1627389994(HEX24_2046820617(id_2046820655));
    break BeforeRet;
  };

  return result_2046820657;

}

function join_3003123944(a_3003123946, sep_3003123947) {
  var result_3003123948 = [];

    result_3003123948 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3003123963 = 0;
      var x_3003123964 = 0;
      var i_536872469 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872469 < (a_3003123946).length)) break Label3;
            i_3003123963 = i_536872469;
            x_3003123964 = a_3003123946[chckIndx(i_536872469, 0, (a_3003123946).length - 1)];
            if ((0 < i_3003123963)) {
            result_3003123948.push.apply(result_3003123948, sep_3003123947);;
            }
            
            result_3003123948.push.apply(result_3003123948, HEX24_369098760(x_3003123964));;
            i_536872469 = addInt(i_536872469, 1);
          }
      };
    };

  return result_3003123948;

}

function toJson_3003123936(node_3003123937, opt_3003123938) {
  var result_3003123939 = null;

    result_3003123939 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [107,105,110,100], toJson_3003123902(node_3003123937.kind, opt_3003123938));
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [105,100], toJson_2046820654(node_3003123937.id, opt_3003123938));
    if (!(HEX3DHEX3D_2046820626(node_3003123937.reff, null_2046820646))) {
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [114,101,102,102], toJson_2046820654(node_3003123937.reff, opt_3003123938));
    }
    
    if ((0 < (node_3003123937.text).length)) {
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [116,101,120,116], toJson_1811939932(node_3003123937.text, opt_3003123938));
    }
    
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [112,97,116,104], newJString_1627389994(join_3003123944(path_3003123619(node_3003123937), [44,32])));
    if ((0 < len_3003121752(node_3003123937))) {
    var children_3003123965 = newJArray_1627390082();
    Label1: {
      var child_3003123969 = null;
      var i_536872464 = 0;
      var L_536872465 = (node_3003123937.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872464 < L_536872465)) break Label3;
            child_3003123969 = node_3003123937.children[chckIndx(i_536872464, 0, (node_3003123937.children).length - 1)];
            add_1627390190(children_3003123965, toJson_3003123936(child_3003123969, opt_3003123938));
            i_536872464 = addInt(i_536872464, 1);
            if (!(((node_3003123937.children).length == L_536872465))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [99,104,105,108,100,114,101,110], children_3003123965);
    }
    

  return result_3003123939;

}

function get_2818579261(self_2818579263) {
  var result_2818579264 = null;

    if (isNone_2818579269(self_2818579263)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818579264 = self_2818579263["val"];

  return result_2818579264;

}

function saveHtml_2969571577(self_2969571578) {
  
}

function save_2969571579(self_2969571580, filename_2969571581, app_2969571582) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2969571581).length)) {
    Temporary1 = filename_2969571581;
    }
    else {
    Temporary1 = self_2969571580.filename;
    }
    
    self_2969571580.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2969571580.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_2969571588 = [mnewString(0)];
    fmtRes_2969571588[0].push.apply(fmtRes_2969571588[0], [91,97,115,116,100,111,99,93,32,83,97,118,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969571588, 0, self_2969571580.filename, []);
    fmtRes_2969571588[0].push.apply(fmtRes_2969571588[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571588[0], NTI33554449)]);
    var serialized_2969571589 = toJson_3003123936(self_2969571580.rootNode, initToJsonOptions_1811939362());
      var oHEX60gensym79_2969571592 = nimCopy(null, self_2969571580.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym79_2969571592)) Temporary2 = false; else {        var ws_2969571615 = get_2818579261(oHEX60gensym79_2969571592);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2214592553(ws_2969571615, self_2969571580.filename, pretty_1627394477(serialized_2969571589, 2));
    }
    else {
    if (self_2969571580.appFile) {
    saveApplicationFile_2365587480(fs_2365587509, self_2969571580.filename, pretty_1627394477(serialized_2969571589, 2));
    }
    else {
    saveFile_2365587469(fs_2365587509, self_2969571580.filename, pretty_1627394477(serialized_2969571589, 2));
    }
    }
    saveHtml_2969571577(self_2969571580);

  
}

function save_2818579229(self_2818579230, filename_2818579231, app_2818579232) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2818579231).length)) {
    Temporary1 = filename_2818579231;
    }
    else {
    Temporary1 = self_2818579230.filename;
    }
    
    self_2818579230.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2818579230.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818579230.appFile = app_2818579232;
      var oHEX60gensym103_2818579236 = nimCopy(null, self_2818579230.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym103_2818579236)) Temporary2 = false; else {        var ws_2818579287 = get_2818579261(oHEX60gensym103_2818579236);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2214592553(ws_2818579287, self_2818579230.filename, contentString_2818574088(self_2818579230));
    }
    else {
    if (self_2818579230.appFile) {
    saveApplicationFile_2365587480(fs_2365587509, self_2818579230.filename, contentString_2818574088(self_2818579230));
    }
    else {
    saveFile_2365587469(fs_2365587509, self_2818579230.filename, contentString_2818574088(self_2818579230));
    }
    }

  
}

function save_2197815312(self_2197815313, filename_2197815314, app_2197815315) {
  
}

function save_2197815316(self_2197815313, filename_2197815314, app_2197815315) {
    chckNilDisp(self_2197815313);
    if (isObj(self_2197815313.m_type, NTI3254779967)) {
    save_3254780345(self_2197815313, filename_2197815314, app_2197815315);
    }
    else {
    if (isObj(self_2197815313.m_type, NTI2969568612)) {
    save_2969571579(self_2197815313, filename_2197815314, app_2197815315);
    }
    else {
    if (isObj(self_2197815313.m_type, NTI2818572427)) {
    save_2818579229(self_2197815313, filename_2197815314, app_2197815315);
    }
    else {
    if (isObj(self_2197815313.m_type, NTI2197815300)) {
    save_2197815312(self_2197815313, filename_2197815314, app_2197815315);
    }
    }}}

  
}

function parseEnum_3003123912(s_3003123914, default_3003123915) {
    var Temporary1;

  var result_3003123916 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3003123914))) {
    case "Empty":
      Temporary1 = 0;
      break;
    case "Identifier":
      Temporary1 = 1;
      break;
    case "Numberliteral":
      Temporary1 = 2;
      break;
    case "Stringliteral":
      Temporary1 = 3;
      break;
    case "Constdecl":
      Temporary1 = 4;
      break;
    case "Letdecl":
      Temporary1 = 5;
      break;
    case "Vardecl":
      Temporary1 = 6;
      break;
    case "Nodelist":
      Temporary1 = 7;
      break;
    case "Call":
      Temporary1 = 8;
      break;
    case "If":
      Temporary1 = 9;
      break;
    case "While":
      Temporary1 = 10;
      break;
    case "Functiondefinition":
      Temporary1 = 11;
      break;
    case "Params":
      Temporary1 = 12;
      break;
    case "Assignment":
      Temporary1 = 13;
      break;
    default: 
      Temporary1 = default_3003123915;
      break;
    }
    result_3003123916 = Temporary1;

  return result_3003123916;

}

function fromJsonHook_3003123909(t_3003123910, t_3003123910_Idx, jsonNode_3003123911) {
    var Temporary1;

    var Temporary1 = jsonNode_3003123911;
    if (ConstSet332[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    t_3003123910[t_3003123910_Idx] = parseEnum_3003123912(Temporary1.str, 0);

  
}

function fromJson_3003123980(a_3003123982, a_3003123982_Idx, b_3003123983, opt_3003123984) {
    if (!(!(HEX3DHEX3D_1627392026(b_3003123983, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,78,111,100,101,75,105,110,100], Field1: b_3003123983}));
    }
    
    fromJsonHook_3003123909(a_3003123982, a_3003123982_Idx, b_3003123983);

  
}

function jsonTo_3003123974(b_3003123976, opt_3003123978) {
  var result_3003123979 = [0];

    fromJson_3003123980(result_3003123979, 0, b_3003123976, opt_3003123978);

  return result_3003123979[0];

}

function raiseKeyError_3254784068(key_3254784070) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(reprEnum(key_3254784070, NTI3003121667) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3254783977(t_3254783980, key_3254783981) {
  var result_3254783982 = null;

    var hcHEX60gensym22_3254783983 = [0];
    var indexHEX60gensym22_3254783990 = rawGet_3254780510(t_3254783980, key_3254783981, hcHEX60gensym22_3254783983, 0);
    if ((0 <= indexHEX60gensym22_3254783990)) {
    result_3254783982 = t_3254783980.data[chckIndx(indexHEX60gensym22_3254783990, 0, (t_3254783980.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3254784068(key_3254783981);
    }
    

  return result_3254783982;

}

function some_3254784093(val_3254784095) {
  var result_3254784096 = ({val: ({padding: 0, time: 0, fuzz: 0, count: 0}), has: false});

    result_3254784096.has = true;
    result_3254784096.val = nimCopy(result_3254784096.val, val_3254784095, NTI2046820355);

  return result_3254784096;

}

function fromJsonHook_2046820647(id_2046820648, json_2046820649) {
    var Temporary1;

    if ((json_2046820649.kind == 4)) {
    var Temporary1 = json_2046820649;
    if (ConstSet333[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    id_2046820648 = nimCopy(id_2046820648, parseId_2046820640(Temporary1.str), NTI2046820355);
    }
    else {
      id_2046820648 = nimCopy(id_2046820648, null_2046820646, NTI2046820355);
    }
    

  
}

function fromJson_3003123997(a_3003123999, b_3003124000, opt_3003124001) {
    if (!(!(HEX3DHEX3D_1627392026(b_3003124000, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [73,100], Field1: b_3003124000}));
    }
    
    fromJsonHook_2046820647(a_3003123999, b_3003124000);

  
}

function jsonTo_3003123991(b_3003123993, opt_3003123995) {
  var result_3003123996 = [({padding: 0, time: 0, fuzz: 0, count: 0})];

    fromJson_3003123997(result_3003123996[0], b_3003123993, opt_3003123995);

  return result_3003123996[0];

}

function hasKey_3254784234(t_3254784237, key_3254784238) {
  var result_3254784239 = false;

    var hc_3254784240 = [0];
    result_3254784239 = (0 <= rawGet_3271558148(t_3254784237, key_3254784238, hc_3254784240, 0));

  return result_3254784239;

}

function contains_3254784228(t_3254784231, key_3254784232) {
  var result_3254784233 = false;

  BeforeRet: {
    result_3254784233 = hasKey_3254784234(t_3254784231, key_3254784232);
    break BeforeRet;
  };

  return result_3254784233;

}

function HEX5BHEX5D_3254784324(t_3254784327, key_3254784328) {
  var result_3254784329 = null;
  var result_3254784329_Idx = 0;

    var hcHEX60gensym22_3254784330 = [0];
    var indexHEX60gensym22_3254784337 = rawGet_3271558148(t_3254784327, key_3254784328, hcHEX60gensym22_3254784330, 0);
    if ((0 <= indexHEX60gensym22_3254784337)) {
    result_3254784329 = t_3254784327.data[chckIndx(indexHEX60gensym22_3254784337, 0, (t_3254784327.data).length - 1)]; result_3254784329_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3254784328);
    }
    

  return [result_3254784329, result_3254784329_Idx];

}

function HEX5BHEX5D_3254784605(s_3254784609, x_3254784610) {
  var result_3254784611 = [];

    var a_3254784613 = x_3254784610.a;
    var L_3254784618 = addInt(subInt(subInt((s_3254784609).length, x_3254784610.b), a_3254784613), 1);
    result_3254784611 = new Array(chckRange(L_3254784618, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3254784618, 0, 2147483647) ; ++i) { result_3254784611[i] = null; }    Label1: {
      var i_3254784627 = 0;
      var i_536872506 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872506 < L_3254784618)) break Label3;
            i_3254784627 = i_536872506;
            result_3254784611[chckIndx(i_3254784627, 0, (result_3254784611).length - 1)] = s_3254784609[chckIndx(addInt(i_3254784627, a_3254784613), 0, (s_3254784609).length - 1)];
            i_536872506 = addInt(i_536872506, 1);
          }
      };
    };

  return result_3254784611;

}

function toModel_3254783890(json_3254783891, root_3254783892) {
    var Temporary1;
      var Temporary8;
      var Temporary9;
        var Temporary23;

  var result_3254783893 = null;

  BeforeRet: {
    var kind_3254783899 = jsonTo_3003123974(HEX5BHEX5D_1627393037(json_3254783891, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    var data_3254784087 = nimCopy(null, HEX5BHEX5D_3254783977(classes_3254780382[0], kind_3254783899), NTI3254780213);
    var node_3254784098 = newAstNode_3271567013(data_3254784087.Field0, some_3254784093(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783891, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
    if ((kind_3254783899 == 0)) {
    result_3254783893 = null;
    break BeforeRet;
    }
    
    if (hasKey_1627393154(json_3254783891, [114,101,102,102])) {
    var target_3254784108 = jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783891, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false});
    if (HEX3DHEX3D_2046820626(target_3254784108, IdString_2986344461)) {
    node_3254784098 = newAstNode_3271567013(stringTypeClass_3321888780, some_3254784093(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783891, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
    }
    else {
    if (HEX3DHEX3D_2046820626(target_3254784108, IdInt_2986344460)) {
    node_3254784098 = newAstNode_3271567013(intTypeClass_3321888781, some_3254784093(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783891, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
    }
    else {
    if (HEX3DHEX3D_2046820626(target_3254784108, IdVoid_2986344462)) {
    node_3254784098 = newAstNode_3271567013(voidTypeClass_3321888782, some_3254784093(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783891, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
    }
    else {
    setReference_3271566718(node_3254784098, data_3254784087.Field1, target_3254784108);
    }
    }}
    }
    
    if (hasKey_1627393154(json_3254783891, [116,101,120,116])) {
    if ((kind_3254783899 == 2)) {
    setProperty_3271566852(node_3254784098, data_3254784087.Field1, {kind: 0, intValue: nsuParseInt(jsonTo_1811939884(HEX5BHEX5D_1627393037(json_3254783891, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false})), stringValue: [], boolValue: false}, HEX2EHEX2E_805306418(0, 0));
    }
    else {
    setProperty_3271566852(node_3254784098, data_3254784087.Field1, {kind: 1, stringValue: jsonTo_1811939884(HEX5BHEX5D_1627393037(json_3254783891, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), intValue: 0, boolValue: false}, HEX2EHEX2E_805306418(0, 0));
    }
    
    }
    
    if (hasKey_1627393154(json_3254783891, [99,104,105,108,100,114,101,110])) {
    var Temporary1 = HEX5BHEX5D_1627393037(json_3254783891, [99,104,105,108,100,114,101,110]);
    if (ConstSet334[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var children_3254784147 = nimCopy(null, Temporary1.elems, NTI1627389974);
    switch (kind_3254783899) {
    case 7:
      if (root_3254783892) {
      node_3254784098 = newAstNode_3271567013(nodeListClass_3321888817, some_3254784093(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783891, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
      Label2: {
        var c_3254784159 = null;
        var i_536872477 = 0;
        var L_536872478 = (children_3254784147).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536872477 < L_536872478)) break Label4;
              c_3254784159 = children_3254784147[chckIndx(i_536872477, 0, (children_3254784147).length - 1)];
              add_3271557906(node_3254784098, IdNodeListChildren_2986344516, toModel_3254783890(c_3254784159, false));
              add_3271557906(node_3254784098, IdNodeListChildren_2986344516, newAstNode_3271567013(emptyLineClass_3321888789, none_3271567020()));
              i_536872477 = addInt(i_536872477, 1);
              if (!(((children_3254784147).length == L_536872478))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      else {
        Label5: {
          var c_3254784163 = null;
          var i_536872481 = 0;
          var L_536872482 = (children_3254784147).length;
          Label6: {
              Label7: while (true) {
              if (!(i_536872481 < L_536872482)) break Label7;
                c_3254784163 = children_3254784147[chckIndx(i_536872481, 0, (children_3254784147).length - 1)];
                add_3271557906(node_3254784098, IdBlockChildren_2986344490, toModel_3254783890(c_3254784163, false));
                i_536872481 = addInt(i_536872481, 1);
                if (!(((children_3254784147).length == L_536872482))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      }
      
      break;
    case 4:
      add_3271557906(node_3254784098, IdConstDeclValue_2986344524, toModel_3254783890(children_3254784147[chckIndx(0, 0, (children_3254784147).length - 1)], false));
      break;
    case 5:
      add_3271557906(node_3254784098, IdLetDeclType_2986344522, toModel_3254783890(children_3254784147[chckIndx(0, 0, (children_3254784147).length - 1)], false));
      add_3271557906(node_3254784098, IdLetDeclValue_2986344521, toModel_3254783890(children_3254784147[chckIndx(1, 0, (children_3254784147).length - 1)], false));
      break;
    case 6:
      add_3271557906(node_3254784098, IdVarDeclType_2986344519, toModel_3254783890(children_3254784147[chckIndx(0, 0, (children_3254784147).length - 1)], false));
      add_3271557906(node_3254784098, IdVarDeclValue_2986344518, toModel_3254783890(children_3254784147[chckIndx(1, 0, (children_3254784147).length - 1)], false));
      break;
    case 8:
      var fun_3254784169 = jsonTo_3003123991(HEX5BHEX5D_1627393037(children_3254784147[chckIndx(0, 0, (children_3254784147).length - 1)], [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false});
      if (contains_3254784228(binaryOperators_3254782916[0], fun_3254784169)) {
      node_3254784098 = newAstNode_3271567013((Temporary8 = HEX5BHEX5D_3254784324(binaryOperators_3254782916[0], fun_3254784169), Temporary8)[0][Temporary8[1]], some_3254784093(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783891, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
      add_3271557906(node_3254784098, IdBinaryExpressionLeft_2986344530, toModel_3254783890(children_3254784147[chckIndx(1, 0, (children_3254784147).length - 1)], false));
      add_3271557906(node_3254784098, IdBinaryExpressionRight_2986344531, toModel_3254783890(children_3254784147[chckIndx(2, 0, (children_3254784147).length - 1)], false));
      }
      else {
      if (contains_3254784228(unaryOperators_3254783761[0], fun_3254784169)) {
      node_3254784098 = newAstNode_3271567013((Temporary9 = HEX5BHEX5D_3254784324(unaryOperators_3254783761[0], fun_3254784169), Temporary9)[0][Temporary9[1]], some_3254784093(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783891, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
      add_3271557906(node_3254784098, IdUnaryExpressionChild_2986344481, toModel_3254783890(children_3254784147[chckIndx(1, 0, (children_3254784147).length - 1)], false));
      }
      else {
      if (HEX3DHEX3D_2046820626(fun_3254784169, IdPrint_2986344450)) {
      node_3254784098 = newAstNode_3271567013(printExpressionClass_3321888807, some_3254784093(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783891, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
      Label10: {
        var c_3254784631 = null;
        var colontmp__536872485 = [];
        colontmp__536872485 = HEX5BHEX5D_3254784605(children_3254784147, HEX2EHEX2E_1040187488(1, 1));
        var i_536872486 = 0;
        var L_536872487 = (colontmp__536872485).length;
        Label11: {
            Label12: while (true) {
            if (!(i_536872486 < L_536872487)) break Label12;
              c_3254784631 = colontmp__536872485[chckIndx(i_536872486, 0, (colontmp__536872485).length - 1)];
              add_3271557906(node_3254784098, IdPrintArguments_2986344478, toModel_3254783890(c_3254784631, false));
              i_536872486 = addInt(i_536872486, 1);
              if (!(((colontmp__536872485).length == L_536872487))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      else {
      if (HEX3DHEX3D_2046820626(fun_3254784169, IdBuildString_2986344472)) {
      node_3254784098 = newAstNode_3271567013(buildExpressionClass_3321888808, some_3254784093(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783891, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
      Label13: {
        var c_3254784658 = null;
        var colontmp__536872490 = [];
        colontmp__536872490 = HEX5BHEX5D_3254784605(children_3254784147, HEX2EHEX2E_1040187488(1, 1));
        var i_536872491 = 0;
        var L_536872492 = (colontmp__536872490).length;
        Label14: {
            Label15: while (true) {
            if (!(i_536872491 < L_536872492)) break Label15;
              c_3254784658 = colontmp__536872490[chckIndx(i_536872491, 0, (colontmp__536872490).length - 1)];
              add_3271557906(node_3254784098, IdBuildArguments_2986344479, toModel_3254783890(c_3254784658, false));
              i_536872491 = addInt(i_536872491, 1);
              if (!(((colontmp__536872490).length == L_536872492))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      else {
        add_3271557906(node_3254784098, IdCallFunction_2986344514, toModel_3254783890(children_3254784147[chckIndx(0, 0, (children_3254784147).length - 1)], false));
        Label16: {
          var c_3254784677 = null;
          var colontmp__536872495 = [];
          colontmp__536872495 = HEX5BHEX5D_3254784605(children_3254784147, HEX2EHEX2E_1040187488(1, 1));
          var i_536872496 = 0;
          var L_536872497 = (colontmp__536872495).length;
          Label17: {
              Label18: while (true) {
              if (!(i_536872496 < L_536872497)) break Label18;
                c_3254784677 = colontmp__536872495[chckIndx(i_536872496, 0, (colontmp__536872495).length - 1)];
                add_3271557906(node_3254784098, IdCallArguments_2986344513, toModel_3254783890(c_3254784677, false));
                i_536872496 = addInt(i_536872496, 1);
                if (!(((colontmp__536872495).length == L_536872497))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      }
      }}}
      break;
    case 9:
      var i_3254784678 = 0;
      Label19: {
          Label20: while (true) {
          if (!(addInt(i_3254784678, 1) < (children_3254784147).length)) break Label20;
            try {
            var fmtRes_3254784691 = [mnewString(0)];
            fmtRes_3254784691[0].push.apply(fmtRes_3254784691[0], [116,104,101,110,32]);;
            formatValue_2701131945(fmtRes_3254784691, 0, i_3254784678, []);
            log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254784691[0], NTI33554449)]);
            var thenCase_3254784697 = newAstNode_3271567013(thenCaseClass_3321888820, none_3271567020());
            add_3271557906(thenCase_3254784697, IdThenCaseCondition_2986344510, toModel_3254783890(children_3254784147[chckIndx(i_3254784678, 0, (children_3254784147).length - 1)], false));
            add_3271557906(thenCase_3254784697, IdThenCaseBody_2986344511, toModel_3254783890(children_3254784147[chckIndx(addInt(i_3254784678, 1), 0, (children_3254784147).length - 1)], false));
            add_3271557906(node_3254784098, IdIfExpressionThenCase_2986344508, thenCase_3254784697);
            rawEcho(HEX24_369098760(childCount_3271566615(node_3254784098, IdIfExpressionThenCase_2986344508)));
            } finally {
            i_3254784678 = addInt(i_3254784678, 2);
            }
          }
      };
      if ((i_3254784678 < (children_3254784147).length)) {
      add_3271557906(node_3254784098, IdIfExpressionElseCase_2986344507, toModel_3254783890(children_3254784147[chckIndx(i_3254784678, 0, (children_3254784147).length - 1)], false));
      }
      
      break;
    case 10:
      add_3271557906(node_3254784098, IdWhileExpressionCondition_2986344505, toModel_3254783890(children_3254784147[chckIndx(0, 0, (children_3254784147).length - 1)], false));
      add_3271557906(node_3254784098, IdWhileExpressionBody_2986344504, toModel_3254783890(children_3254784147[chckIndx(1, 0, (children_3254784147).length - 1)], false));
      break;
    case 13:
      add_3271557906(node_3254784098, IdAssignmentTarget_2986344495, toModel_3254783890(children_3254784147[chckIndx(0, 0, (children_3254784147).length - 1)], false));
      add_3271557906(node_3254784098, IdAssignmentValue_2986344494, toModel_3254783890(children_3254784147[chckIndx(1, 0, (children_3254784147).length - 1)], false));
      break;
    case 11:
      if (hasKey_1627393154(children_3254784147[chckIndx(0, 0, (children_3254784147).length - 1)], [99,104,105,108,100,114,101,110])) {
      Label22: {
        var c_3254784704 = null;
        var colontmp__536872501 = [];
        var Temporary23 = HEX5BHEX5D_1627393037(children_3254784147[chckIndx(0, 0, (children_3254784147).length - 1)], [99,104,105,108,100,114,101,110]);
        if (ConstSet335[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI1627389955)); }
        colontmp__536872501 = Temporary23.elems;
        var i_536872502 = 0;
        var L_536872503 = (colontmp__536872501).length;
        Label24: {
            Label25: while (true) {
            if (!(i_536872502 < L_536872503)) break Label25;
              c_3254784704 = colontmp__536872501[chckIndx(i_536872502, 0, (colontmp__536872501).length - 1)];
              var param_3254784713 = newAstNode_3271567013(parameterDeclClass_3321888823, some_3254784093(jsonTo_3003123991(HEX5BHEX5D_1627393037(c_3254784704, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
              setProperty_3271566852(param_3254784713, IdINamedName_2986344492, {kind: 1, stringValue: jsonTo_1811939884(HEX5BHEX5D_1627393037(c_3254784704, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), intValue: 0, boolValue: false}, HEX2EHEX2E_805306418(0, 0));
              add_3271557906(param_3254784713, IdParameterDeclType_2986344502, toModel_3254783890(HEX5BHEX5D_1627393116(HEX5BHEX5D_1627393037(c_3254784704, [99,104,105,108,100,114,101,110]), 0), false));
              add_3271557906(node_3254784098, IdFunctionDefinitionParameters_2986344499, param_3254784713);
              i_536872502 = addInt(i_536872502, 1);
              if (!(((colontmp__536872501).length == L_536872503))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      
      add_3271557906(node_3254784098, IdFunctionDefinitionReturnType_2986344498, toModel_3254783890(children_3254784147[chckIndx(1, 0, (children_3254784147).length - 1)], false));
      add_3271557906(node_3254784098, IdFunctionDefinitionBody_2986344497, toModel_3254783890(children_3254784147[chckIndx(2, 0, (children_3254784147).length - 1)], false));
      break;
    default: 
      break;
    }
    }
    
    result_3254783893 = node_3254784098;
    break BeforeRet;
  };

  return result_3254783893;

}

function subscribe_3254784911(event_3254784913, callback_3254784915) {
  var result_3254784916 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_3254784916 = nimCopy(result_3254784916, newId_2046820597(), NTI2046820355);
    event_3254784913.handlers.push({Field0: nimCopy(null, result_3254784916, NTI2046820355), Field1: callback_3254784915});;

  return result_3254784916;

}

function handleNodeDeleted_3254784738(self_3254784739, model_3254784740, parent_3254784741, child_3254784742, role_3254784743, index_3254784744) {
    self_3254784739.currentTransaction.operations.push({kind: 0, parent: parent_3254784741, node: child_3254784742, idx: index_3254784744, role: nimCopy(null, role_3254784743, NTI2046820355), value: {kind: 0, intValue: 0, stringValue: [], boolValue: false}, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), slice: ({a: 0, b: 0})});;

  
}

function handleNodeInserted_3254784783(self_3254784784, model_3254784785, parent_3254784786, child_3254784787, role_3254784788, index_3254784789) {
    self_3254784784.currentTransaction.operations.push({kind: 2, parent: parent_3254784786, node: child_3254784787, idx: index_3254784789, role: nimCopy(null, role_3254784788, NTI2046820355), value: {kind: 0, intValue: 0, stringValue: [], boolValue: false}, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), slice: ({a: 0, b: 0})});;

  
}

function subscribe_3254785032(event_3254785034, callback_3254785036) {
  var result_3254785037 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_3254785037 = nimCopy(result_3254785037, newId_2046820597(), NTI2046820355);
    event_3254785034.handlers.push({Field0: nimCopy(null, result_3254785037, NTI2046820355), Field1: callback_3254785036});;

  return result_3254785037;

}

function handleNodePropertyChanged_3254784794(self_3254784795, model_3254784796, node_3254784797, role_3254784798, oldValue_3254784799, newValue_3254784800, slice_3254784802) {
    self_3254784795.currentTransaction.operations.push({kind: 3, node: node_3254784797, role: nimCopy(null, role_3254784798, NTI2046820355), value: nimCopy(null, oldValue_3254784799, NTI3271557124), slice: nimCopy(null, slice_3254784802, NTI805306392), parent: null, idx: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;

  
}

function subscribe_3254785104(event_3254785106, callback_3254785108) {
  var result_3254785109 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_3254785109 = nimCopy(result_3254785109, newId_2046820597(), NTI2046820355);
    event_3254785106.handlers.push({Field0: nimCopy(null, result_3254785109, NTI2046820355), Field1: callback_3254785108});;

  return result_3254785109;

}

function handleNodeReferenceChanged_3254784807(self_3254784808, model_3254784809, node_3254784810, role_3254784811, oldRef_3254784812, newRef_3254784813) {
    self_3254784808.currentTransaction.operations.push({kind: 4, node: node_3254784810, role: nimCopy(null, role_3254784811, NTI2046820355), id: nimCopy(null, oldRef_3254784812, NTI2046820355), value: {kind: 0, intValue: 0, stringValue: [], boolValue: false}, parent: null, idx: 0, slice: ({a: 0, b: 0})});;

  
}

function invoke_3254785177(event_3254785179, arg_3254785180) {
    Label1: {
      var h_3254785203 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872510 = 0;
      var L_536872511 = (event_3254785179.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872510 < L_536872511)) break Label3;
            h_3254785203 = event_3254785179.handlers[chckIndx(i_536872510, 0, (event_3254785179.handlers).length - 1)];
            h_3254785203.Field1(arg_3254785180);
            i_536872510 = addInt(i_536872510, 1);
            if (!(((event_3254785179.handlers).length == L_536872511))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}
async function loadAsync_3254784819(self_3254784820) {
      var Temporary2;
    
function HEX3Aanonymous_3254784878(d_3254784896) {
        handleNodeDeleted_3254784738(self_3254784820, d_3254784896["Field0"], d_3254784896["Field1"], d_3254784896["Field2"], d_3254784896["Field3"], d_3254784896["Field4"]);

      
    }
    
function HEX3Aanonymous_3254784950(d_3254784968) {
        handleNodeInserted_3254784783(self_3254784820, d_3254784968["Field0"], d_3254784968["Field1"], d_3254784968["Field2"], d_3254784968["Field3"], d_3254784968["Field4"]);

      
    }
    
function HEX3Aanonymous_3254784999(d_3254785017) {
        handleNodePropertyChanged_3254784794(self_3254784820, d_3254785017["Field0"], d_3254785017["Field1"], d_3254785017["Field2"], d_3254785017["Field3"], d_3254785017["Field4"], d_3254785017["Field5"]);

      
    }
    
function HEX3Aanonymous_3254785071(d_3254785089) {
        handleNodeReferenceChanged_3254784807(self_3254784820, d_3254785089["Field0"], d_3254785089["Field1"], d_3254785089["Field2"], d_3254785089["Field3"], d_3254785089["Field4"]);

      
    }

  var result_3254784822 = null;

  BeforeRet: {
    var fmtRes_3254784832 = [mnewString(0)];
    fmtRes_3254784832[0].push.apply(fmtRes_3254784832[0], [91,109,111,100,101,108,100,111,99,93,32,76,111,97,100,105,110,103,32,109,111,100,101,108,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_3254784832, 0, self_3254784820.filename, []);
    fmtRes_3254784832[0].push.apply(fmtRes_3254784832[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3254784832[0], NTI33554449)]);
++excHandler;
    try {
    var jsonText_3254784833 = [];
      var oHEX60gensym47_3254784836 = nimCopy(null, self_3254784820.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym47_3254784836)) Temporary2 = false; else {        var ws_3254784859 = get_2818579261(oHEX60gensym47_3254784836);
        Temporary2 = true;      }    if (Temporary2) {
    jsonText_3254784833 = nimCopy(null, (await loadFile_2214592545(ws_3254784859, self_3254784820.filename)), NTI33554449);
    }
    else {
    if (self_3254784820.appFile) {
    jsonText_3254784833 = nimCopy(null, loadApplicationFile_2365587474(fs_2365587509, self_3254784820.filename), NTI33554449);
    }
    else {
      jsonText_3254784833 = nimCopy(null, loadFile_2365587463(fs_2365587509, self_3254784820.filename), NTI33554449);
    }
    }
    var json_3254784864 = parseJson_1627395313(jsonText_3254784833);
    var testModel_3254784865 = newModel_3271561825(newId_2046820597());
    addLanguage_3271563145(testModel_3254784865, baseLanguage_3321889815);
    var root_3254784866 = toModel_3254783890(json_3254784864, true);
    addRootNode_3271564443(testModel_3254784865, root_3254784866);
    self_3254784820.model = testModel_3254784865;
    var _ = subscribe_3254784911(self_3254784820.model.onNodeDeleted, HEX3Aanonymous_3254784878);
    var _ = subscribe_3254784911(self_3254784820.model.onNodeInserted, HEX3Aanonymous_3254784950);
    var _ = subscribe_3254785032(self_3254784820.model.onNodePropertyChanged, HEX3Aanonymous_3254784999);
    var _ = subscribe_3254785104(self_3254784820.model.onNodeReferenceChanged, HEX3Aanonymous_3254785071);
    self_3254784820.builder = newCellBuilder_3271568734();
    Label3: {
      var language_3254785135 = null;
      var colontmp__536872472 = [];
      colontmp__536872472 = languages_3271557504(self_3254784820.model);
      var i_536872473 = 0;
      var L_536872474 = (colontmp__536872472).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872473 < L_536872474)) break Label5;
            language_3254785135 = colontmp__536872472[chckIndx(i_536872473, 0, (colontmp__536872472).length - 1)];
            addBuilder_3271570292(self_3254784820.builder, builder_3271557596(language_3254785135));
            i_536872473 = addInt(i_536872473, 1);
            if (!(((colontmp__536872472).length == L_536872474))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    addModel_3271561840(project_3254779953[0], self_3254784820.model);
    project_3254779953[0].builder = self_3254784820.builder;
    var uiae_3254785136 = HEX24_3271557901(root_3254784866, true);
    var fmtRes_3254785141 = [mnewString(0)];
    fmtRes_3254785141[0].push.apply(fmtRes_3254785141[0], [91,109,111,100,101,108,100,111,99,93,32,76,111,97,100,32,110,101,119,32,109,111,100,101,108,32]);;
    formatValue_721420459(fmtRes_3254785141, 0, uiae_3254785136, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254785141[0], NTI33554449)]);
    if (self_3254784820.undoList.length < 0) { for (var i = self_3254784820.undoList.length ; i < 0 ; ++i) self_3254784820.undoList.push(({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), operations: []})); }
               else { self_3254784820.undoList.length = 0; };
    if (self_3254784820.redoList.length < 0) { for (var i = self_3254784820.redoList.length ; i < 0 ; ++i) self_3254784820.redoList.push(({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), operations: []})); }
               else { self_3254784820.redoList.length = 0; };
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_3254785154 = [mnewString(0)];
    fmtRes_3254785154[0].push.apply(fmtRes_3254785154[0], [91,109,111,100,101,108,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,109,111,100,101,108,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_3254785154, 0, self_3254784820.filename, []);
    fmtRes_3254785154[0].push.apply(fmtRes_3254785154[0], [39,58,32]);;
    formatValue_721420459(fmtRes_3254785154, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3254785154[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    invoke_3254785177(self_3254784820.onModelChanged, self_3254784820);
    result_3254784822 = undefined;
    break BeforeRet;
  };

  return result_3254784822;

}

function load_3254785224(self_3254785225, filename_3254785226) {
    var Temporary1;

    if ((0 < (filename_3254785226).length)) {
    Temporary1 = filename_3254785226;
    }
    else {
    Temporary1 = self_3254785225.filename;
    }
    
    var filename_3254785227 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_3254785227).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_3254785225.filename = nimCopy(null, filename_3254785227, NTI33554449);
    var _ = loadAsync_3254784819(self_3254785225);

  
}

function jsonToAstNode_3003123970(json_3003123971, opt_3003123972) {
        var Temporary3;

  var result_3003123973 = null;

    result_3003123973 = {parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []};
    result_3003123973.kind = jsonTo_3003123974(HEX5BHEX5D_1627393037(json_3003123971, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    result_3003123973.id = nimCopy(result_3003123973.id, jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3003123971, [105,100]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    if (hasKey_1627393154(json_3003123971, [114,101,102,102])) {
    result_3003123973.reff = nimCopy(result_3003123973.reff, jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3003123971, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    }
    
    if (hasKey_1627393154(json_3003123971, [116,101,120,116])) {
    result_3003123973.text = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_3003123971, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_3003123971, [99,104,105,108,100,114,101,110])) {
    Label1: {
      var child_3003124018 = null;
      var colontmp__536872521 = null;
      colontmp__536872521 = HEX5BHEX5D_1627393037(json_3003123971, [99,104,105,108,100,114,101,110]);
      if (!((colontmp__536872521.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__536872521.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872523 = null;
        var colontmp__536872524 = [];
        var Temporary3 = colontmp__536872521;
        if (ConstSet336[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872524 = Temporary3.elems;
        var i_536872525 = 0;
        var L_536872526 = (colontmp__536872524).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872525 < L_536872526)) break Label5;
              i_536872523 = colontmp__536872524[chckIndx(i_536872525, 0, (colontmp__536872524).length - 1)];
              child_3003124018 = i_536872523;
              add_3003121702(result_3003123973, jsonToAstNode_3003123970(child_3003124018, {allowExtraKeys: false, allowMissingKeys: false}));
              i_536872525 = addInt(i_536872525, 1);
              if (!(((colontmp__536872524).length == L_536872526))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_3003123973;

}

function clear_3019955856(t_3019955859) {
    t_3019955859.clear();

  
}

function clear_3019956016(t_3019956019) {
    t_3019956019.clear();

  
}

function clear_3019956098(t_3019956101) {
    t_3019956101.clear();

  
}

function clear_3019956180(t_3019956183) {
    t_3019956183.clear();

  
}

function clear_3019956262(t_3019956265) {
    t_3019956265.clear();

  
}

function clear_3019956344(t_3019956347) {
    t_3019956347.clear();

  
}

function clear_3019956426(t_3019956429) {
    t_3019956429.clear();

  
}

function clear_3019956508(t_3019956511) {
    t_3019956511.clear();

  
}

function clear_3019956590(t_3019956593) {
    t_3019956593.clear();

  
}

function clear_3019956672(t_3019956675) {
    t_3019956675.clear();

  
}

function clear_3019956754(t_3019956757) {
    t_3019956757.clear();

  
}

function clear_3019956836(t_3019956839) {
    t_3019956839.clear();

  
}

function clear_3019956918(t_3019956921) {
    t_3019956921.clear();

  
}

function clear_3019957000(t_3019957003) {
    t_3019957003.clear();

  
}

function clear_3019957082(t_3019957085) {
    t_3019957085.clear();

  
}

function deleteAllNodesAndSymbols_3019955776(ctx_3019955777) {
    ctx_3019955777.depGraph.revision = addInt(ctx_3019955777.depGraph.revision, 1);
    clear_3019955856(ctx_3019955777.depGraph.changed);
    clear_3019955856(ctx_3019955777.depGraph.verified);
    clear_3019956016(ctx_3019955777.depGraph.fingerprints);
    clear_3019956098(ctx_3019955777.depGraph.dependencies);
    clear_3019956180(ctx_3019955777.itemsAstNode);
    clear_3019956262(ctx_3019955777.itemsSymbol);
    clear_3019956344(ctx_3019955777.itemsNodeLayoutInput);
    clear_3019956426(ctx_3019955777.itemsFunctionExecutionContext);
    clear_3019956508(ctx_3019955777.queryCacheType);
    clear_3019956590(ctx_3019955777.queryCacheValue);
    clear_3019956672(ctx_3019955777.queryCacheSymbolType);
    clear_3019956754(ctx_3019955777.queryCacheSymbolValue);
    clear_3019956836(ctx_3019955777.queryCacheSymbol);
    clear_3019956918(ctx_3019955777.queryCacheSymbols);
    clear_3019957000(ctx_3019955777.queryCacheFunctionExecution);
    clear_3019957082(ctx_3019955777.queryCacheNodeLayout);

  
}

function clear_2969571738(t_2969571741) {
    Label1: {
      var i_2969571809 = 0;
      var colontmp__536872529 = 0;
      colontmp__536872529 = (t_2969571741.data).length;
      var i_536872530 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872530 < colontmp__536872529)) break Label3;
            i_2969571809 = i_536872530;
            t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field0 = 0;
            t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field1 = nimCopy(t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field2 = null;
            i_536872530 = addInt(i_536872530, 1);
          }
      };
    };
    t_2969571741.counter = 0;

  
}
async function loadAsync_2969571620(self_2969571621) {
      var Temporary2;

  var result_2969571623 = null;

  BeforeRet: {
    var fmtRes_2969571633 = [mnewString(0)];
    fmtRes_2969571633[0].push.apply(fmtRes_2969571633[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969571633, 0, self_2969571621.filename, []);
    fmtRes_2969571633[0].push.apply(fmtRes_2969571633[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571633[0], NTI33554449)]);
++excHandler;
    try {
    var jsonText_2969571634 = [];
      var oHEX60gensym86_2969571637 = nimCopy(null, self_2969571621.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym86_2969571637)) Temporary2 = false; else {        var ws_2969571660 = get_2818579261(oHEX60gensym86_2969571637);
        Temporary2 = true;      }    if (Temporary2) {
    jsonText_2969571634 = nimCopy(null, (await loadFile_2214592545(ws_2969571660, self_2969571621.filename)), NTI33554449);
    }
    else {
    if (self_2969571621.appFile) {
    jsonText_2969571634 = nimCopy(null, loadApplicationFile_2365587474(fs_2365587509, self_2969571621.filename), NTI33554449);
    }
    else {
      jsonText_2969571634 = nimCopy(null, loadFile_2365587463(fs_2365587509, self_2969571621.filename), NTI33554449);
    }
    }
    var json_2969571665 = parseJson_1627395313(jsonText_2969571634);
    var newAst_2969571666 = jsonToAstNode_3003123970(json_2969571665, {allowExtraKeys: false, allowMissingKeys: false});
    var fmtRes_2969571671 = [mnewString(0)];
    fmtRes_2969571671[0].push.apply(fmtRes_2969571671[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,32,110,101,119,32,97,115,116,32]);;
    formatValue_3087008590(fmtRes_2969571671, 0, newAst_2969571666, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571671[0], NTI33554449)]);
    deleteAllNodesAndSymbols_3019955776(ctx_2969567289);
    Label3: {
      var symbol_2969571681 = null;
      var L_536872514 = len_3019954306(ctx_2969567289.globalScope);
      Label4: {
        var h_536872516 = 0;
        var colontmp__536872517 = 0;
        colontmp__536872517 = (ctx_2969567289.globalScope.data).length - 1;
        var res_536872518 = 0;
        Label5: {
            Label6: while (true) {
            if (!(res_536872518 <= colontmp__536872517)) break Label6;
              h_536872516 = res_536872518;
              if (isFilled_1308622880(ctx_2969567289.globalScope.data[chckIndx(h_536872516, 0, (ctx_2969567289.globalScope.data).length - 1)].Field0)) {
              symbol_2969571681 = ctx_2969567289.globalScope.data[chckIndx(h_536872516, 0, (ctx_2969567289.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_3019907758(ctx_2969567289, symbol_2969571681);
              if (!((len_3019954306(ctx_2969567289.globalScope) == L_536872514))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872518 = addInt(res_536872518, 1);
            }
        };
      };
    };
    clear_2969571738(self_2969571621.nodes);
    self_2969571621.rootNode = newAst_2969571666;
    handleNodeInserted_2969571616(self_2969571621, self_2969571621.rootNode);
    if (self_2969571621.undoOps.length < 0) { for (var i = self_2969571621.undoOps.length ; i < 0 ; ++i) self_2969571621.undoOps.push(null); }
               else { self_2969571621.undoOps.length = 0; };
    if (self_2969571621.redoOps.length < 0) { for (var i = self_2969571621.redoOps.length ; i < 0 ; ++i) self_2969571621.redoOps.push(null); }
               else { self_2969571621.redoOps.length = 0; };
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2969572293 = [mnewString(0)];
    fmtRes_2969572293[0].push.apply(fmtRes_2969572293[0], [91,97,115,116,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969572293, 0, self_2969571621.filename, []);
    fmtRes_2969572293[0].push.apply(fmtRes_2969572293[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969572293[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    saveHtml_2969571577(self_2969571621);
    result_2969571623 = undefined;
    break BeforeRet;
  };

  return result_2969571623;

}

function load_2969572294(self_2969572295, filename_2969572296) {
    var Temporary1;

    if ((0 < (filename_2969572296).length)) {
    Temporary1 = filename_2969572296;
    }
    else {
    Temporary1 = self_2969572295.filename;
    }
    
    var filename_2969572297 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2969572297).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2969572295.filename = nimCopy(null, filename_2969572297, NTI33554449);
    var _ = loadAsync_2969571620(self_2969572295);

  
}
async function loadAsync_2818579298(self_2818579299, ws_2818579300) {
  var result_2818579302 = null;

  BeforeRet: {
    contentHEX3D_2818573948(self_2818579299, (await loadFile_2214592545(ws_2818579300, self_2818579299.filename)));
    result_2818579302 = undefined;
    break BeforeRet;
  };

  return result_2818579302;

}

function load_2818579312(self_2818579313, filename_2818579314) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2818579314).length)) {
    Temporary1 = filename_2818579314;
    }
    else {
    Temporary1 = self_2818579313.filename;
    }
    
    var filename_2818579315 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2818579315).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818579313.filename = nimCopy(null, filename_2818579315, NTI33554449);
      var oHEX60gensym112_2818579319 = nimCopy(null, self_2818579313.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym112_2818579319)) Temporary2 = false; else {        var ws_2818579342 = get_2818579261(oHEX60gensym112_2818579319);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = loadAsync_2818579298(self_2818579313, ws_2818579342);
    }
    else {
    if (self_2818579313.appFile) {
    contentHEX3D_2818573948(self_2818579313, loadApplicationFile_2365587474(fs_2365587509, self_2818579313.filename));
    }
    else {
    contentHEX3D_2818573948(self_2818579313, loadFile_2365587463(fs_2365587509, self_2818579313.filename));
    }
    }

  
}

function load_2197815317(self_2197815318, filename_2197815319) {
  
}

function load_2197815320(self_2197815318, filename_2197815319) {
    chckNilDisp(self_2197815318);
    if (isObj(self_2197815318.m_type, NTI3254779967)) {
    load_3254785224(self_2197815318, filename_2197815319);
    }
    else {
    if (isObj(self_2197815318.m_type, NTI2969568612)) {
    load_2969572294(self_2197815318, filename_2197815319);
    }
    else {
    if (isObj(self_2197815318.m_type, NTI2818572427)) {
    load_2818579312(self_2197815318, filename_2197815319);
    }
    else {
    if (isObj(self_2197815318.m_type, NTI2197815300)) {
    load_2197815317(self_2197815318, filename_2197815319);
    }
    }}}

  
}

function hasKey_2919238868(t_2919238871, key_2919238872) {
  var result_2919238873 = false;

    var hc_2919238874 = [0];
    result_2919238873 = (0 <= rawGet_2919236185(t_2919238871, key_2919238872, hc_2919238874, 0));

  return result_2919238873;

}

function contains_2919238862(t_2919238865, key_2919238866) {
  var result_2919238867 = false;

  BeforeRet: {
    result_2919238867 = hasKey_2919238868(t_2919238865, key_2919238866);
    break BeforeRet;
  };

  return result_2919238867;

}

function del_2919238921(t_2919238924, key_2919238925) {
    var hc_2919238926 = [0];
    var i_2919238933 = rawGet_2919236185(t_2919238924, key_2919238925, hc_2919238926, 0);
    var mskHEX60gensym36_2919238937 = (t_2919238924.data).length - 1;
    if ((0 <= i_2919238933)) {
    t_2919238924.counter = subInt(t_2919238924.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2919238944 = i_2919238933;
            var rHEX60gensym36_2919238945 = jHEX60gensym36_2919238944;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field1 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2919238933 = (addInt(i_2919238933, 1) & mskHEX60gensym36_2919238937);
                  if (isEmpty_1308622877(t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2919238945 = (t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 & mskHEX60gensym36_2919238937);
                  if (!(((((rHEX60gensym36_2919238945 <= i_2919238933) && (jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945)) || ((jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945) && (i_2919238933 < jHEX60gensym36_2919238944))) || ((i_2919238933 < jHEX60gensym36_2919238944) && (rHEX60gensym36_2919238945 <= i_2919238933))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)] = nimCopy(t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)], t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)], NTI2919235608);
          }
      };
    };
    }
    

  
}

function len_2919239477(t_2919239480) {
  var result_2919239481 = 0;

    result_2919239481 = t_2919239480.counter;

  return result_2919239481;

}

function find_2919239714(a_2919239717, item_2919239718) {
  var result_2919239719 = 0;

  BeforeRet: {
    result_2919239719 = 0;
    Label1: {
      var i_2919239723 = 0;
      var i_536872549 = 0;
      var L_536872550 = (a_2919239717).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872549 < L_536872550)) break Label3;
            i_2919239723 = a_2919239717[chckIndx(i_536872549, 0, (a_2919239717).length - 1)];
            if ((i_2919239723 == item_2919239718)) {
            break BeforeRet;
            }
            
            result_2919239719 = addInt(result_2919239719, 1);
            i_536872549 = addInt(i_536872549, 1);
            if (!(((a_2919239717).length == L_536872550))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2919239719 = -1;
  };

  return result_2919239719;

}

function delete_2919239730(x_2919239732, x_2919239732_Idx, i_2919239733) {
    x_2919239732[x_2919239732_Idx].splice(i_2919239733, 1);

  
}

function removeOnRequestSaveHandler_2919238817(self_2919238818, handle_2919238819) {
    if (contains_2919238862(self_2919238818.onRequestSave, handle_2919238819)) {
    del_2919238921(self_2919238818.onRequestSave, handle_2919238819);
    Label1: {
      var __2919239712 = [];
      var list_2919239713 = null;
      var list_2919239713_Idx = 0;
      var L_536872537 = len_2919239477(self_2919238818.onRequestSaveIndex);
      Label2: {
        var h_536872539 = 0;
        var colontmp__536872540 = 0;
        colontmp__536872540 = (self_2919238818.onRequestSaveIndex.data).length - 1;
        var res_536872541 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872541 <= colontmp__536872540)) break Label4;
              h_536872539 = res_536872541;
              if (isFilled_1308622880(self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872539, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field0)) {
              var colontmp__536872544 = nimCopy(null, {Field0: nimCopy(null, self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872539, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field1, NTI33554449), Field1: [self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872539, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)], "Field2"]}, NTI2919237548);
              __2919239712 = colontmp__536872544["Field0"];
              list_2919239713 = colontmp__536872544["Field1"][0]; list_2919239713_Idx = colontmp__536872544["Field1"][1];
              var index_2919239729 = find_2919239714(list_2919239713[list_2919239713_Idx], handle_2919238819);
              if ((0 <= index_2919239729)) {
              delete_2919239730(list_2919239713, list_2919239713_Idx, chckRange(index_2919239729, 0, 2147483647));
              }
              
              if (!((len_2919239477(self_2919238818.onRequestSaveIndex) == L_536872537))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(723, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872541 = addInt(res_536872541, 1);
            }
        };
      };
    };
    }
    

  
}

function stop_2919235636(self_2919235637) {
  
}

function stop_2919235638(self_2919235637) {
    stop_2919235636(self_2919235637);

  
}

function destroy_2818579148(self_2818579149) {
    var Temporary1;
    var Temporary2;

    if (!((self_2818579149.tsParser == null))) {
    deinit_2885681592(self_2818579149.tsParser);
    self_2818579149.tsParser = null;
    }
    
    if (isSome_2818579157(self_2818579149.languageServer)) {
    removeOnRequestSaveHandler_2919238817((Temporary1 = get_2818579177(self_2818579149.languageServer), Temporary1)[0][Temporary1[1]], self_2818579149.onRequestSaveHandle);
    stop_2919235638((Temporary2 = get_2818579177(self_2818579149.languageServer), Temporary2)[0][Temporary2[1]]);
    self_2818579149.languageServer = nimCopy(self_2818579149.languageServer, none_2936012824(), NTI2818572486);
    }
    

  
}

function shutdown_2818579224(self_2818579225) {
    destroy_2818579148(self_2818579225.document);

  
}

function shutdown_2415919221(self_2415919222) {
  
}

function shutdown_2415919223(self_2415919222) {
    chckNilDisp(self_2415919222);
    if (isObj(self_2415919222.m_type, NTI2818572510)) {
    shutdown_2818579224(self_2415919222);
    }
    else {
    if (isObj(self_2415919222.m_type, NTI2415919108)) {
    shutdown_2415919221(self_2415919222);
    }
    }

  
}

function canEdit_3254794136(self_3254794137, document_3254794138) {
  var result_3254794139 = false;

  BeforeRet: {
    if (isObj(document_3254794138.m_type, NTI3254779967)) {
    result_3254794139 = true;
    break BeforeRet;
    }
    else {
      result_3254794139 = false;
      break BeforeRet;
    }
    
  };

  return result_3254794139;

}

function canEdit_2969575591(self_2969575592, document_2969575593) {
  var result_2969575594 = false;

  BeforeRet: {
    if (isObj(document_2969575593.m_type, NTI2969568612)) {
    result_2969575594 = true;
    break BeforeRet;
    }
    else {
      result_2969575594 = false;
      break BeforeRet;
    }
    
  };

  return result_2969575594;

}

function canEdit_2818580265(self_2818580266, document_2818580267) {
  var result_2818580268 = false;

  BeforeRet: {
    if (isObj(document_2818580267.m_type, NTI2818572427)) {
    result_2818580268 = true;
    break BeforeRet;
    }
    else {
      result_2818580268 = false;
      break BeforeRet;
    }
    
  };

  return result_2818580268;

}

function canEdit_2415919224(self_2415919225, document_2415919226) {
  var result_2415919227 = false;

  BeforeRet: {
    result_2415919227 = false;
    break BeforeRet;
  };

  return result_2415919227;

}

function canEdit_2415919228(self_2415919225, document_2415919226) {
  var result_2415919229 = false;

  BeforeRet: {
    chckNilDisp(self_2415919225);
    if (isObj(self_2415919225.m_type, NTI3254780014)) {
    result_2415919229 = canEdit_3254794136(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919225.m_type, NTI2969568641)) {
    result_2415919229 = canEdit_2969575591(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919225.m_type, NTI2818572510)) {
    result_2415919229 = canEdit_2818580265(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919225.m_type, NTI2415919108)) {
    result_2415919229 = canEdit_2415919224(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    }}}
  };

  return result_2415919229;

}

function subscribe_3254794214(event_3254794216, callback_3254794218) {
  var result_3254794219 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_3254794219 = nimCopy(result_3254794219, newId_2046820597(), NTI2046820355);
    event_3254794216.handlers.push({Field0: nimCopy(null, result_3254794219, NTI2046820355), Field1: callback_3254794218});;

  return result_3254794219;

}

function handleNodeDeleted_3254785964(self_3254785965, model_3254785966, parent_3254785967, child_3254785968, role_3254785969, index_3254785970) {
    invalidateCompletions_3254780257(self_3254785965);

  
}

function handleNodeInserted_3254785971(self_3254785972, model_3254785973, parent_3254785974, child_3254785975, role_3254785976, index_3254785977) {
    invalidateCompletions_3254780257(self_3254785972);

  
}

function handleNodePropertyChanged_3254785978(self_3254785979, model_3254785980, node_3254785981, role_3254785982, oldValue_3254785983, newValue_3254785984, slice_3254785986) {
    invalidateCompletions_3254780257(self_3254785979);

  
}

function handleNodeReferenceChanged_3254785987(self_3254785988, model_3254785989, node_3254785990, role_3254785991, oldRef_3254785992, newRef_3254785993) {
    invalidateCompletions_3254780257(self_3254785988);

  
}

function handleModelChanged_3254785994(self_3254785995, document_3254785996) {
    
function HEX3Aanonymous_3254786008(d_3254786026) {
        handleNodeDeleted_3254785964(self_3254785995, d_3254786026["Field0"], d_3254786026["Field1"], d_3254786026["Field2"], d_3254786026["Field3"], d_3254786026["Field4"]);

      
    }
    
function HEX3Aanonymous_3254786057(d_3254786075) {
        handleNodeInserted_3254785971(self_3254785995, d_3254786075["Field0"], d_3254786075["Field1"], d_3254786075["Field2"], d_3254786075["Field3"], d_3254786075["Field4"]);

      
    }
    
function HEX3Aanonymous_3254786106(d_3254786124) {
        handleNodePropertyChanged_3254785978(self_3254785995, d_3254786124["Field0"], d_3254786124["Field1"], d_3254786124["Field2"], d_3254786124["Field3"], d_3254786124["Field4"], d_3254786124["Field5"]);

      
    }
    
function HEX3Aanonymous_3254786155(d_3254786173) {
        handleNodeReferenceChanged_3254785987(self_3254785995, d_3254786173["Field0"], d_3254786173["Field1"], d_3254786173["Field2"], d_3254786173["Field3"], d_3254786173["Field4"]);

      
    }
    var Temporary1;

    var _ = subscribe_3254784911(self_3254785995.document.model.onNodeDeleted, HEX3Aanonymous_3254786008);
    var _ = subscribe_3254784911(self_3254785995.document.model.onNodeInserted, HEX3Aanonymous_3254786057);
    var _ = subscribe_3254785032(self_3254785995.document.model.onNodePropertyChanged, HEX3Aanonymous_3254786106);
    var _ = subscribe_3254785104(self_3254785995.document.model.onNodeReferenceChanged, HEX3Aanonymous_3254786155);
    rebuildCells_3254780235(self_3254785995);
    cursorHEX3D_3254784731(self_3254785995, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254785995, (Temporary1 = rootNodes_3271557492(self_3254785995.document.model), Temporary1)[chckIndx(0, 0, (Temporary1).length - 1)])));
    self_3254785995.mCursorBeforeTransaction = nimCopy(self_3254785995.mCursorBeforeTransaction, self_3254785995.mCursor, NTI3254779907);
    markDirty_2415919143(self_3254785995);

  
}

function subscribe_3254794286(event_3254794288, callback_3254794290) {
  var result_3254794291 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_3254794291 = nimCopy(result_3254794291, newId_2046820597(), NTI2046820355);
    event_3254794288.handlers.push({Field0: nimCopy(null, result_3254794291, NTI2046820355), Field1: callback_3254794290});;

  return result_3254794291;

}

function mustRehash_3254786841(t_3254786843) {
  var result_3254786844 = false;

    if (!((t_3254786843.counter < (t_3254786843.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3254786844 = ((mulInt((t_3254786843.data).length, 2) < mulInt(t_3254786843.counter, 3)) || (subInt((t_3254786843.data).length, t_3254786843.counter) < 4));

  return result_3254786844;

}

function rawInsert_3254787450(t_3254787454, data_3254787455, data_3254787455_Idx, key_3254787456, val_3254787457, hc_3254787458, h_3254787459) {
    data_3254787455[data_3254787455_Idx][chckIndx(h_3254787459, 0, (data_3254787455[data_3254787455_Idx]).length - 1)].Field1 = nimCopy(data_3254787455[data_3254787455_Idx][chckIndx(h_3254787459, 0, (data_3254787455[data_3254787455_Idx]).length - 1)].Field1, key_3254787456, NTI2046820355);
    data_3254787455[data_3254787455_Idx][chckIndx(h_3254787459, 0, (data_3254787455[data_3254787455_Idx]).length - 1)].Field2 = nimCopy(data_3254787455[data_3254787455_Idx][chckIndx(h_3254787459, 0, (data_3254787455[data_3254787455_Idx]).length - 1)].Field2, val_3254787457, NTI3254779907);
    data_3254787455[data_3254787455_Idx][chckIndx(h_3254787459, 0, (data_3254787455[data_3254787455_Idx]).length - 1)].Field0 = hc_3254787458;

  
}

function enlarge_3254787044(t_3254787047) {
    var n_3254787050 = [];
    n_3254787050 = new Array(chckRange(mulInt((t_3254787047.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3254787047.data).length, 2), 0, 2147483647) ; ++i) { n_3254787050[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})}; }    var Temporary1 = t_3254787047.data; t_3254787047.data = n_3254787050; n_3254787050 = Temporary1;    Label2: {
      var i_3254787130 = 0;
      var colontmp__536872559 = 0;
      colontmp__536872559 = (n_3254787050).length - 1;
      var res_536872560 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872560 <= colontmp__536872559)) break Label4;
            i_3254787130 = res_536872560;
            var eh_3254787208 = n_3254787050[chckIndx(i_3254787130, 0, (n_3254787050).length - 1)].Field0;
            if (isFilled_1308622880(eh_3254787208)) {
            var j_3254787212 = (eh_3254787208 & (t_3254787047.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3254787047.data[chckIndx(j_3254787212, 0, (t_3254787047.data).length - 1)].Field0)) break Label6;
                  j_3254787212 = nextTry_1308622883(j_3254787212, (t_3254787047.data).length - 1);
                }
            };
            rawInsert_3254787450(t_3254787047, t_3254787047, "data", n_3254787050[chckIndx(i_3254787130, 0, (n_3254787050).length - 1)].Field1, n_3254787050[chckIndx(i_3254787130, 0, (n_3254787050).length - 1)].Field2, eh_3254787208, j_3254787212);
            }
            
            res_536872560 = addInt(res_536872560, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3254787691(t_3254787694, key_3254787695, hc_3254787696) {
  var result_3254787697 = 0;

  BeforeRet: {
    if (((t_3254787694.data).length == 0)) {
    result_3254787697 = -1;
    break BeforeRet;
    }
    
    var h_3254787764 = (hc_3254787696 & (t_3254787694.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254787694.data[chckIndx(h_3254787764, 0, (t_3254787694.data).length - 1)].Field0)) break Label2;
          if (((t_3254787694.data[chckIndx(h_3254787764, 0, (t_3254787694.data).length - 1)].Field0 == hc_3254787696) && HEX3DHEX3D_2046820626(t_3254787694.data[chckIndx(h_3254787764, 0, (t_3254787694.data).length - 1)].Field1, key_3254787695))) {
          result_3254787697 = h_3254787764;
          break BeforeRet;
          }
          
          h_3254787764 = nextTry_1308622883(h_3254787764, (t_3254787694.data).length - 1);
        }
    };
    result_3254787697 = subInt(-1, h_3254787764);
  };

  return result_3254787697;

}

function HEX5BHEX5DHEX3D_3254786291(t_3254786294, key_3254786295, val_3254786296) {
    if (((t_3254786294.data).length == 0)) {
    var correctSizeHEX60gensym81_3254786362 = slotsNeeded_1308622891(32);
    t_3254786294.counter = 0;
    t_3254786294.data = new Array(chckRange(correctSizeHEX60gensym81_3254786362, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym81_3254786362, 0, 2147483647) ; ++i) { t_3254786294.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})}; }    }
    
    var hc_3254786367 = [0];
    var index_3254786694 = rawGet_3254786368(t_3254786294, key_3254786295, hc_3254786367, 0);
    if ((0 <= index_3254786694)) {
    t_3254786294.data[chckIndx(index_3254786694, 0, (t_3254786294.data).length - 1)].Field2 = nimCopy(t_3254786294.data[chckIndx(index_3254786694, 0, (t_3254786294.data).length - 1)].Field2, val_3254786296, NTI3254779907);
    }
    else {
      if (((t_3254786294.data).length == 0)) {
      var correctSizeHEX60gensym86_3254786836 = slotsNeeded_1308622891(32);
      t_3254786294.counter = 0;
      t_3254786294.data = new Array(chckRange(correctSizeHEX60gensym86_3254786836, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym86_3254786836, 0, 2147483647) ; ++i) { t_3254786294.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})}; }      }
      
      if (mustRehash_3254786841(t_3254786294)) {
      enlarge_3254787044(t_3254786294);
      index_3254786694 = rawGetKnownHC_3254787691(t_3254786294, key_3254786295, hc_3254786367[0]);
      }
      
      index_3254786694 = subInt(-1, index_3254786694);
      rawInsert_3254787450(t_3254786294, t_3254786294, "data", key_3254786295, val_3254786296, hc_3254786367[0], index_3254786694);
      t_3254786294.counter = addInt(t_3254786294.counter, 1);
    }
    

  
}

function handleFinishedUndoTransaction_3254786237(self_3254786238, document_3254786239, transaction_3254786240) {
    HEX5BHEX5DHEX3D_3254786291(self_3254786238.transactionCursors, transaction_3254786240.id, self_3254786238.mCursorBeforeTransaction);
    self_3254786238.mCursorBeforeTransaction = nimCopy(self_3254786238.mCursorBeforeTransaction, self_3254786238.mCursor, NTI3254779907);

  
}

function handleFinishedRedoTransaction_3254788017(self_3254788018, document_3254788019, transaction_3254788020) {
    HEX5BHEX5DHEX3D_3254786291(self_3254788018.transactionCursors, transaction_3254788020.id, self_3254788018.mCursorBeforeTransaction);
    self_3254788018.mCursorBeforeTransaction = nimCopy(self_3254788018.mCursorBeforeTransaction, self_3254788018.mCursor, NTI3254779907);

  
}

function createWithDocument_3254794165(__3254794166, document_3254794167) {
    
function HEX3Aanonymous_3254794181(d_3254794199) {
        handleModelChanged_3254785994(self_3254794169, d_3254794199);

      
    }
    
function HEX3Aanonymous_3254794253(d_3254794271) {
        handleFinishedUndoTransaction_3254786237(self_3254794169, d_3254794271["Field0"], d_3254794271["Field1"]);

      
    }
    
function HEX3Aanonymous_3254794325(d_3254794343) {
        handleFinishedRedoTransaction_3254788017(self_3254794169, d_3254794343["Field0"], d_3254794343["Field1"]);

      
    }
    var Temporary1;

  var result_3254794168 = null;

  BeforeRet: {
    var self_3254794169 = {eventHandler: null, document: document_3254794167, m_type: NTI3254780014, editor: null, transactionCursors: ({data: [], counter: 0}), modeEventHandler: null, completionEventHandler: null, currentMode: [], nodeToCell: ({data: [], counter: 0}), logicalLines: [], cellWidgetContext: null, mCursor: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), mCursorBeforeTransaction: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), useDefaultCellBuilder: false, scrollOffset: 0.0, previousBaseIndex: [], lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), showCompletions: false, completionText: [], hasCompletions: false, filteredCompletions: [], unfilteredCompletions: [], selectedCompletion: 0, lastItems: [], completionsBaseIndex: 0, completionsScrollOffset: 0.0, scrollToCompletion: ({val: 0, has: false}), lastCompletionsWidget: null, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    self_3254794169 = createWithPrototype(editor_model_prototype, self_3254794169);
    init_2415919138(self_3254794169);
    var _ = subscribe_3254794214(self_3254794169.document.onModelChanged, HEX3Aanonymous_3254794181);
    var _ = subscribe_3254794286(self_3254794169.document.onFinishedUndoTransaction, HEX3Aanonymous_3254794253);
    var _ = subscribe_3254794286(self_3254794169.document.onFinishedRedoTransaction, HEX3Aanonymous_3254794325);
    rebuildCells_3254780235(self_3254794169);
    cursorHEX3D_3254784731(self_3254794169, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254794169, (Temporary1 = rootNodes_3271557492(self_3254794169.document.model), Temporary1)[chckIndx(0, 0, (Temporary1).length - 1)])));
    result_3254794168 = self_3254794169;
    break BeforeRet;
  };

  return result_3254794168;

}

function addQuoted_2969575101(s_2969575103, s_2969575103_Idx, x_2969575104) {
    s_2969575103[s_2969575103_Idx].push.apply(s_2969575103[s_2969575103_Idx], HEX24_3003123671(x_2969575104));;

  
}

function HEX24_2969575090(self_2969575092) {
  var result_2969575093 = [[]];

    if (isSome_3003123546(self_2969575092)) {
    result_2969575093[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2969575101(result_2969575093, 0, self_2969575092.val);
    result_2969575093[0].push.apply(result_2969575093[0], [41]);;
    }
    else {
      result_2969575093[0] = nimCopy(null, [110,111,110,101,40,65,115,116,78,111,100,101,41], NTI33554449);
    }
    

  return result_2969575093[0];

}

function formatValue_2969575023(result_2969575025, result_2969575025_Idx, value_2969575026, specifier_2969575027) {
    formatValue_721420459(result_2969575025, result_2969575025_Idx, HEX24_2969575090(value_2969575026), specifier_2969575027);

  
}

function handleNodeInserted_2969575005(self_2969575006, doc_2969575007, node_2969575008) {
      var Temporary1;
      var Temporary2;

    if (!((doc_2969575007.rootNode == self_2969575006.lastRootNode))) {
    nodeHEX3D_2969570829(self_2969575006, HEX5BHEX5D_3003121748(doc_2969575007.rootNode, 0));
    self_2969575006.lastRootNode = doc_2969575007.rootNode;
    }
    
    var fmtRes_2969575017 = [mnewString(0)];
    fmtRes_2969575017[0].push.apply(fmtRes_2969575017[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008590(fmtRes_2969575017, 0, node_2969575008, []);
    fmtRes_2969575017[0].push.apply(fmtRes_2969575017[0], [44,32]);;
    formatValue_2969575023(fmtRes_2969575017, 0, self_2969575006.deletedNode, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575017[0], NTI33554449)]);
      var oHEX60gensym113_2969575113 = nimCopy(null, self_2969575006.deletedNode, NTI3003121783);
      if (!isSome_3003123546(oHEX60gensym113_2969575113)) Temporary2 = false; else {        var deletedNode_2969575136 = get_3003123566(oHEX60gensym113_2969575113);
        Temporary2 = true;      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (deletedNode_2969575136 == node_2969575008);      }    if (Temporary1) {
    self_2969575006.deletedNode = nimCopy(self_2969575006.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969575008)), NTI3003121783);
    var fmtRes_2969575148 = mnewString(0);
    fmtRes_2969575148.push.apply(fmtRes_2969575148, makeNimstrLit("[asteditor] Clearing editor.deletedNode because it was just inserted"));;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575148, NTI33554449)]);
    }
    
    markDirty_2415919143(self_2969575006);

  
}

function createWithDocument_2969584859(self_2969584860, document_2969584861) {
    
function HEX3Aanonymous_2969584864(doc_2969584865, node_2969584866) {
        handleNodeInserted_2969575005(editor_2969584863, doc_2969584865, node_2969584866);

      
    }

  var result_2969584862 = null;

  BeforeRet: {
    var editor_2969584863 = {eventHandler: null, document: document_2969584861, textDocument: null, textEditor: null, m_type: NTI2969568641, editor: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), lastRootNode: null, currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditEventHandler: null, textEditorWidget: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], completionsBaseIndex: 0, completionsScrollOffset: 0.0, scrollToCompletion: ({val: 0, has: false}), lastCompletionsWidget: null, scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2969584863 = createWithPrototype(editor_ast_prototype, editor_2969584863);
    init_2415919138(editor_2969584863);
    editor_2969584863.document.onNodeInserted.push(HEX3Aanonymous_2969584864);;
    editor_2969584863.selectedCompletion = 0;
    editor_2969584863.completions = nimCopy(null, [], NTI3204448274);
    Label1: {
      var tmpHEX60gensym1036_2969584880 = null;
      Label2: {
        var res_2969584886 = null;
        res_2969584886 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2969584886.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      };
    };
    add_3003121702(editor_2969584863.document.rootNode, res_2969584886);
    Label4: {
      var c_2969584899 = null;
      var i_536872566 = 0;
      var L_536872567 = (editor_2969584863.document.rootNode.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872566 < L_536872567)) break Label6;
            c_2969584899 = editor_2969584863.document.rootNode.children[chckIndx(i_536872566, 0, (editor_2969584863.document.rootNode.children).length - 1)];
            handleNodeInserted_2969571616(editor_2969584863.document, c_2969584899);
            i_536872566 = addInt(i_536872566, 1);
            if (!(((editor_2969584863.document.rootNode.children).length == L_536872567))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    insertNode_3019954804(ctx_2969567289, editor_2969584863.document.rootNode);
    nodeHEX3D_2969570829(editor_2969584863, HEX5BHEX5D_3003121748(editor_2969584863.document.rootNode, 0));
    result_2969584862 = editor_2969584863;
    break BeforeRet;
  };

  return result_2969584862;

}

function createWithDocument_2818593644(self_2818593645, document_2818593646) {
    
function HEX3Aanonymous_2818593667(__2818593668) {
        handleTextDocumentTextChanged_2818593550(editor_2818593648);

      
    }

  var result_2818593647 = null;

  BeforeRet: {
    var editor_2818593648 = createTextEditorInstance_2818593552();
    editor_2818593648.document = document_2818593646;
    init_2415919138(editor_2818593648);
    if (((editor_2818593648.document.lines).length == 0)) {
    editor_2818593648.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var _ = subscribe_2818593616(editor_2818593648.document.textChanged, HEX3Aanonymous_2818593667);
    result_2818593647 = editor_2818593648;
    break BeforeRet;
  };

  return result_2818593647;

}

function createWithDocument_2415919230(self_2415919231, document_2415919232) {
  var result_2415919233 = null;

  BeforeRet: {
    result_2415919233 = null;
    break BeforeRet;
  };

  return result_2415919233;

}

function createWithDocument_2415919243(self_2415919231, document_2415919232) {
  var result_2415919244 = null;

  BeforeRet: {
    chckNilDisp(self_2415919231);
    if (isObj(self_2415919231.m_type, NTI3254780014)) {
    result_2415919244 = createWithDocument_3254794165(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919231.m_type, NTI2969568641)) {
    result_2415919244 = createWithDocument_2969584859(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919231.m_type, NTI2818572510)) {
    result_2415919244 = createWithDocument_2818593644(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919231.m_type, NTI2415919108)) {
    result_2415919244 = createWithDocument_2415919230(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    }}}
  };

  return result_2415919244;

}

function getEventHandlers_2969575602(self_2969575603) {
  var result_2969575604 = [[]];

    result_2969575604[0].push(self_2969575603.eventHandler);;
    if (!((self_2969575603.modeEventHandler == null))) {
    result_2969575604[0].push(self_2969575603.modeEventHandler);;
    }
    
    if (!((self_2969575603.textEditor == null))) {
    add_2969575620(result_2969575604, 0, getEventHandlers_2415919261(self_2969575603.textEditor));
    result_2969575604[0].push(self_2969575603.textEditEventHandler);;
    }
    

  return result_2969575604[0];

}

function getEventHandlers_2818580276(self_2818580277) {
  var result_2818580278 = [];

    result_2818580278 = nimCopy(null, [self_2818580277.eventHandler], NTI2466250766);
    if (!((self_2818580277.modeEventHandler == null))) {
    result_2818580278.push(self_2818580277.modeEventHandler);;
    }
    
    if (self_2818580277.showCompletions) {
    result_2818580278.push(self_2818580277.completionEventHandler);;
    }
    

  return result_2818580278;

}

function getEventHandlers_2466250757(self_2466250758) {
  var result_2466250759 = [];

  BeforeRet: {
    result_2466250759 = nimCopy(null, [self_2466250758.eventHandler], NTI2466250766);
    break BeforeRet;
  };

  return result_2466250759;

}

function getEventHandlers_3254794147(self_3254794148) {
  var result_3254794149 = [];

    result_3254794149.push(self_3254794148.eventHandler);;
    if (!((self_3254794148.modeEventHandler == null))) {
    result_3254794149.push(self_3254794148.modeEventHandler);;
    }
    
    if (self_3254794148.showCompletions) {
    result_3254794149.push(self_3254794148.completionEventHandler);;
    }
    

  return result_3254794149;

}

function getEventHandlers_2415919245(self_2415919246) {
  var result_2415919247 = [];

  BeforeRet: {
    result_2415919247 = nimCopy(null, [], NTI2415919187);
    break BeforeRet;
  };

  return result_2415919247;

}

function getEventHandlers_2415919261(self_2415919246) {
  var result_2415919262 = [];

  BeforeRet: {
    chckNilDisp(self_2415919246);
    if (isObj(self_2415919246.m_type, NTI2969568641)) {
    result_2415919262 = getEventHandlers_2969575602(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2818572510)) {
    result_2415919262 = getEventHandlers_2818580276(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2466250756)) {
    result_2415919262 = getEventHandlers_2466250757(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI3254780014)) {
    result_2415919262 = getEventHandlers_3254794147(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2415919108)) {
    result_2415919262 = getEventHandlers_2415919245(self_2415919246);
    break BeforeRet;
    }
    }}}}
  };

  return result_2415919262;

}

function newNode_3254788135(x_3254788137) {
  var result_3254788138 = null;

    var nodes_3254788139 = [];
    Label1: {
      var e_3254788143 = 0;
      var i_536872570 = 0;
      var L_536872571 = (x_3254788137).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872570 < L_536872571)) break Label3;
            e_3254788143 = x_3254788137[chckIndx(i_536872570, 0, (x_3254788137).length - 1)];
            nodes_3254788139.push(newNodeFromBaseType_3321889872(e_3254788143));;
            i_536872570 = addInt(i_536872570, 1);
            if (!(((x_3254788137).length == L_536872571))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254788138 = {kind: 10, nodes: nimCopy(null, nodes_3254788139, NTI3254784092), value: []};

  return result_3254788138;

}

function newNodeFromBaseType_3254788128(x_3254788130) {
  var result_3254788131 = null;

    result_3254788131 = newNode_3254788135(x_3254788130);

  return result_3254788131;

}

function newNode_3254788243(x_3254788245) {
  var result_3254788246 = null;

    var nodes_3254788247 = [];
    Label1: {
      var e_3254788251 = null;
      var i_536872574 = 0;
      var L_536872575 = (x_3254788245).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872574 < L_536872575)) break Label3;
            e_3254788251 = x_3254788245[chckIndx(i_536872574, 0, (x_3254788245).length - 1)];
            nodes_3254788247.push(newNodeFromBaseType_3254788155(e_3254788251));;
            i_536872574 = addInt(i_536872574, 1);
            if (!(((x_3254788245).length == L_536872575))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254788246 = {kind: 10, nodes: nimCopy(null, nodes_3254788247, NTI3254784171), value: []};

  return result_3254788246;

}

function newNodeFromBaseType_3254788236(x_3254788238) {
  var result_3254788239 = null;

    result_3254788239 = newNode_3254788243(x_3254788238);

  return result_3254788239;

}

function newNode_3254788270(x_3254788272) {
  var result_3254788273 = null;

    var nodes_3254788274 = [];
    Label1: {
      var e_3254788278 = null;
      var i_536872578 = 0;
      var L_536872579 = (x_3254788272).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872578 < L_536872579)) break Label3;
            e_3254788278 = x_3254788272[chckIndx(i_536872578, 0, (x_3254788272).length - 1)];
            nodes_3254788274.push(newNodeFromBaseType_3321889820(e_3254788278));;
            i_536872578 = addInt(i_536872578, 1);
            if (!(((x_3254788272).length == L_536872579))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254788273 = {kind: 10, nodes: nimCopy(null, nodes_3254788274, NTI3254784193), value: []};

  return result_3254788273;

}

function newNodeFromBaseType_3254788263(x_3254788265) {
  var result_3254788266 = null;

    result_3254788266 = newNode_3254788270(x_3254788265);

  return result_3254788266;

}

function newNode_3254788297(x_3254788299) {
  var result_3254788300 = null;

    var nodes_3254788301 = [];
    Label1: {
      var e_3254788324 = null;
      var i_536872583 = 0;
      var L_536872584 = (x_3254788299).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872583 < L_536872584)) break Label3;
            e_3254788324 = x_3254788299[chckIndx(i_536872583, 0, (x_3254788299).length - 1)];
            nodes_3254788301.push(newNodeFromBaseType_3254788199(e_3254788324));;
            i_536872583 = addInt(i_536872583, 1);
            if (!(((x_3254788299).length == L_536872584))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254788300 = {kind: 10, nodes: nimCopy(null, nodes_3254788301, NTI3254784215), value: []};

  return result_3254788300;

}

function newNodeFromBaseType_3254788290(x_3254788292) {
  var result_3254788293 = null;

    result_3254788293 = newNode_3254788297(x_3254788292);

  return result_3254788293;

}

function len_3254788431(t_3254788434) {
  var result_3254788435 = 0;

    result_3254788435 = t_3254788434.counter;

  return result_3254788435;

}

function newNode_3254788361(x_3254788364) {
  var result_3254788365 = null;

    var nodes_3254788366 = [];
    Label1: {
      var k_3254788754 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3254788755 = null;
      var L_536872591 = len_3254788431(x_3254788364);
      Label2: {
        var h_536872593 = 0;
        var colontmp__536872594 = 0;
        colontmp__536872594 = (x_3254788364.data).length - 1;
        var res_536872595 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872595 <= colontmp__536872594)) break Label4;
              h_536872593 = res_536872595;
              if (isFilled_1308622880(x_3254788364.data[chckIndx(h_536872593, 0, (x_3254788364.data).length - 1)].Field0)) {
              k_3254788754 = nimCopy(k_3254788754, x_3254788364.data[chckIndx(h_536872593, 0, (x_3254788364.data).length - 1)].Field1, NTI2046820355);
              v_3254788755 = x_3254788364.data[chckIndx(h_536872593, 0, (x_3254788364.data).length - 1)].Field2;
              nodes_3254788366.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889850(k_3254788754), newNodeFromBaseType_3321889820(v_3254788755)));;
              if (!((len_3254788431(x_3254788364) == L_536872591))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872595 = addInt(res_536872595, 1);
            }
        };
      };
    };
    result_3254788365 = {kind: 13, nodes: nimCopy(null, nodes_3254788366, NTI3254784259), value: []};

  return result_3254788365;

}

function newNodeFromBaseType_3254788345(x_3254788347) {
  var result_3254788348 = null;

    result_3254788348 = newNode_3254788361(x_3254788347);

  return result_3254788348;

}

function len_3254788856(t_3254788859) {
  var result_3254788860 = 0;

    result_3254788860 = t_3254788859.counter;

  return result_3254788860;

}

function newNode_3254788786(x_3254788789) {
  var result_3254788790 = null;

    var nodes_3254788791 = [];
    Label1: {
      var k_3254789179 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3254789180 = null;
      var L_536872602 = len_3254788856(x_3254788789);
      Label2: {
        var h_536872604 = 0;
        var colontmp__536872605 = 0;
        colontmp__536872605 = (x_3254788789.data).length - 1;
        var res_536872606 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872606 <= colontmp__536872605)) break Label4;
              h_536872604 = res_536872606;
              if (isFilled_1308622880(x_3254788789.data[chckIndx(h_536872604, 0, (x_3254788789.data).length - 1)].Field0)) {
              k_3254789179 = nimCopy(k_3254789179, x_3254788789.data[chckIndx(h_536872604, 0, (x_3254788789.data).length - 1)].Field1, NTI2046820355);
              v_3254789180 = x_3254788789.data[chckIndx(h_536872604, 0, (x_3254788789.data).length - 1)].Field2;
              nodes_3254788791.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889850(k_3254789179), newNodeFromBaseType_3254788155(v_3254789180)));;
              if (!((len_3254788856(x_3254788789) == L_536872602))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872606 = addInt(res_536872606, 1);
            }
        };
      };
    };
    result_3254788790 = {kind: 13, nodes: nimCopy(null, nodes_3254788791, NTI3254784458), value: []};

  return result_3254788790;

}

function newNodeFromBaseType_3254788770(x_3254788772) {
  var result_3254788773 = null;

    result_3254788773 = newNode_3254788786(x_3254788772);

  return result_3254788773;

}

function newNode_3254789341(x_3254789343) {
  var result_3254789344 = null;

    result_3254789344 = {kind: 4, value: makeNimstrLit("proc x(i0: tuple[self: Model, parent: AstNode, child: AstNode, role: Id,\x0A                 index: int])"), nodes: []};

  return result_3254789344;

}

function newNodeFromBaseType_3254789334(x_3254789336) {
  var result_3254789337 = null;

    result_3254789337 = newNode_3254789341(x_3254789336);

  return result_3254789337;

}

function newNode_3254789319(x_3254789321) {
  var result_3254789322 = null;

    var nodes_3254789323 = [];
    nodes_3254789323.push(newNodeFromBaseType_3321889850(x_3254789321["Field0"]));;
    nodes_3254789323.push(newNodeFromBaseType_3254789334(x_3254789321["Field1"]));;
    result_3254789322 = {kind: 12, nodes: nimCopy(null, nodes_3254789323, NTI3254784708), value: []};

  return result_3254789322;

}

function newNodeFromBaseType_3254789312(x_3254789314) {
  var result_3254789315 = null;

    result_3254789315 = newNode_3254789319(x_3254789314);

  return result_3254789315;

}

function newNode_3254789303(x_3254789305) {
  var result_3254789306 = null;

    var nodes_3254789307 = [];
    Label1: {
      var e_3254789311 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872609 = 0;
      var L_536872610 = (x_3254789305).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872609 < L_536872610)) break Label3;
            e_3254789311 = x_3254789305[chckIndx(i_536872609, 0, (x_3254789305).length - 1)];
            nodes_3254789307.push(newNodeFromBaseType_3254789312(e_3254789311));;
            i_536872609 = addInt(i_536872609, 1);
            if (!(((x_3254789305).length == L_536872610))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254789306 = {kind: 10, nodes: nimCopy(null, nodes_3254789307, NTI3254784696), value: []};

  return result_3254789306;

}

function newNodeFromBaseType_3254789296(x_3254789298) {
  var result_3254789299 = null;

    result_3254789299 = newNode_3254789303(x_3254789298);

  return result_3254789299;

}

function newNode_3254789211(x_3254789213) {
  var result_3254789214 = null;

    var nodes_3254789215 = [];
    nodes_3254789215.push(newFieldPairNode_3305111712(newNameNode_3305111683([104,97,110,100,108,101,114,115]), newNodeFromBaseType_3254789296(x_3254789213.handlers)));;
    result_3254789214 = {kind: 14, value: makeNimstrLit("Event[tuple[self: Model, parent: AstNode, child: AstNode, role: Id, index: int]]"), nodes: nimCopy(null, nodes_3254789215, NTI3254784656)};

  return result_3254789214;

}

function newNodeFromBaseType_3254789195(x_3254789197) {
  var result_3254789198 = null;

    result_3254789198 = newNode_3254789211(x_3254789197);

  return result_3254789198;

}

function newNode_3254789519(x_3254789521) {
  var result_3254789522 = null;

    result_3254789522 = {kind: 4, value: makeNimstrLit("proc x(i0: tuple[self: Model, node: AstNode, role: Id, oldValue: PropertyValue,\x0A                 newValue: PropertyValue, slice: Slice[int]])"), nodes: []};

  return result_3254789522;

}

function newNodeFromBaseType_3254789512(x_3254789514) {
  var result_3254789515 = null;

    result_3254789515 = newNode_3254789519(x_3254789514);

  return result_3254789515;

}

function newNode_3254789497(x_3254789499) {
  var result_3254789500 = null;

    var nodes_3254789501 = [];
    nodes_3254789501.push(newNodeFromBaseType_3321889850(x_3254789499["Field0"]));;
    nodes_3254789501.push(newNodeFromBaseType_3254789512(x_3254789499["Field1"]));;
    result_3254789500 = {kind: 12, nodes: nimCopy(null, nodes_3254789501, NTI3254784810), value: []};

  return result_3254789500;

}

function newNodeFromBaseType_3254789490(x_3254789492) {
  var result_3254789493 = null;

    result_3254789493 = newNode_3254789497(x_3254789492);

  return result_3254789493;

}

function newNode_3254789481(x_3254789483) {
  var result_3254789484 = null;

    var nodes_3254789485 = [];
    Label1: {
      var e_3254789489 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872613 = 0;
      var L_536872614 = (x_3254789483).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872613 < L_536872614)) break Label3;
            e_3254789489 = x_3254789483[chckIndx(i_536872613, 0, (x_3254789483).length - 1)];
            nodes_3254789485.push(newNodeFromBaseType_3254789490(e_3254789489));;
            i_536872613 = addInt(i_536872613, 1);
            if (!(((x_3254789483).length == L_536872614))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254789484 = {kind: 10, nodes: nimCopy(null, nodes_3254789485, NTI3254784798), value: []};

  return result_3254789484;

}

function newNodeFromBaseType_3254789474(x_3254789476) {
  var result_3254789477 = null;

    result_3254789477 = newNode_3254789481(x_3254789476);

  return result_3254789477;

}

function newNode_3254789389(x_3254789391) {
  var result_3254789392 = null;

    var nodes_3254789393 = [];
    nodes_3254789393.push(newFieldPairNode_3305111712(newNameNode_3305111683([104,97,110,100,108,101,114,115]), newNodeFromBaseType_3254789474(x_3254789391.handlers)));;
    result_3254789392 = {kind: 14, value: makeNimstrLit("Event[tuple[self: Model, node: AstNode, role: Id, oldValue: PropertyValue, newValue: PropertyValue, slice: Slice[system.int]]]"), nodes: nimCopy(null, nodes_3254789393, NTI3254784758)};

  return result_3254789392;

}

function newNodeFromBaseType_3254789373(x_3254789375) {
  var result_3254789376 = null;

    result_3254789376 = newNode_3254789389(x_3254789375);

  return result_3254789376;

}

function newNode_3254789690(x_3254789692) {
  var result_3254789693 = null;

    result_3254789693 = {kind: 4, value: makeNimstrLit("proc x(i0: tuple[self: Model, node: AstNode, role: Id, oldRef: Id, newRef: Id])"), nodes: []};

  return result_3254789693;

}

function newNodeFromBaseType_3254789683(x_3254789685) {
  var result_3254789686 = null;

    result_3254789686 = newNode_3254789690(x_3254789685);

  return result_3254789686;

}

function newNode_3254789668(x_3254789670) {
  var result_3254789671 = null;

    var nodes_3254789672 = [];
    nodes_3254789672.push(newNodeFromBaseType_3321889850(x_3254789670["Field0"]));;
    nodes_3254789672.push(newNodeFromBaseType_3254789683(x_3254789670["Field1"]));;
    result_3254789671 = {kind: 12, nodes: nimCopy(null, nodes_3254789672, NTI3254784907), value: []};

  return result_3254789671;

}

function newNodeFromBaseType_3254789661(x_3254789663) {
  var result_3254789664 = null;

    result_3254789664 = newNode_3254789668(x_3254789663);

  return result_3254789664;

}

function newNode_3254789652(x_3254789654) {
  var result_3254789655 = null;

    var nodes_3254789656 = [];
    Label1: {
      var e_3254789660 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872617 = 0;
      var L_536872618 = (x_3254789654).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872617 < L_536872618)) break Label3;
            e_3254789660 = x_3254789654[chckIndx(i_536872617, 0, (x_3254789654).length - 1)];
            nodes_3254789656.push(newNodeFromBaseType_3254789661(e_3254789660));;
            i_536872617 = addInt(i_536872617, 1);
            if (!(((x_3254789654).length == L_536872618))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254789655 = {kind: 10, nodes: nimCopy(null, nodes_3254789656, NTI3254784895), value: []};

  return result_3254789655;

}

function newNodeFromBaseType_3254789645(x_3254789647) {
  var result_3254789648 = null;

    result_3254789648 = newNode_3254789652(x_3254789647);

  return result_3254789648;

}

function newNode_3254789560(x_3254789562) {
  var result_3254789563 = null;

    var nodes_3254789564 = [];
    nodes_3254789564.push(newFieldPairNode_3305111712(newNameNode_3305111683([104,97,110,100,108,101,114,115]), newNodeFromBaseType_3254789645(x_3254789562.handlers)));;
    result_3254789563 = {kind: 14, value: makeNimstrLit("Event[tuple[self: Model, node: AstNode, role: Id, oldRef: Id, newRef: Id]]"), nodes: nimCopy(null, nodes_3254789564, NTI3254784855)};

  return result_3254789563;

}

function newNodeFromBaseType_3254789544(x_3254789546) {
  var result_3254789547 = null;

    result_3254789547 = newNode_3254789560(x_3254789546);

  return result_3254789547;

}

function newNode_3254788221(x_3254788223) {
  var result_3254788224 = null;

    var nodes_3254788225 = [];
    nodes_3254788225.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889850(x_3254788223.id)));;
    nodes_3254788225.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,111,111,116,78,111,100,101,115]), newNodeFromBaseType_3254788236(x_3254788223.rootNodes)));;
    nodes_3254788225.push(newFieldPairNode_3305111712(newNameNode_3305111683([108,97,110,103,117,97,103,101,115]), newNodeFromBaseType_3254788263(x_3254788223.languages)));;
    nodes_3254788225.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,109,112,111,114,116,101,100,77,111,100,101,108,115]), newNodeFromBaseType_3254788290(x_3254788223.importedModels)));;
    nodes_3254788225.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,108,97,115,115,101,115,84,111,76,97,110,103,117,97,103,101,115]), newNodeFromBaseType_3254788345(x_3254788223.classesToLanguages)));;
    nodes_3254788225.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,100,101,115]), newNodeFromBaseType_3254788770(x_3254788223.nodes)));;
    nodes_3254788225.push(newFieldPairNode_3305111712(newNameNode_3305111683([111,110,78,111,100,101,68,101,108,101,116,101,100]), newNodeFromBaseType_3254789195(x_3254788223.onNodeDeleted)));;
    nodes_3254788225.push(newFieldPairNode_3305111712(newNameNode_3305111683([111,110,78,111,100,101,73,110,115,101,114,116,101,100]), newNodeFromBaseType_3254789195(x_3254788223.onNodeInserted)));;
    nodes_3254788225.push(newFieldPairNode_3305111712(newNameNode_3305111683([111,110,78,111,100,101,80,114,111,112,101,114,116,121,67,104,97,110,103,101,100]), newNodeFromBaseType_3254789373(x_3254788223.onNodePropertyChanged)));;
    nodes_3254788225.push(newFieldPairNode_3305111712(newNameNode_3305111683([111,110,78,111,100,101,82,101,102,101,114,101,110,99,101,67,104,97,110,103,101,100]), newNodeFromBaseType_3254789544(x_3254788223.onNodeReferenceChanged)));;
    result_3254788224 = {kind: 14, value: [77,111,100,101,108,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3254788225, NTI3254784156)};

  return result_3254788224;

}

function newNodeFromBaseType_3254788214(x_3254788216) {
  var result_3254788217 = null;

    result_3254788217 = newNode_3254788221(x_3254788216);

  return result_3254788217;

}

function newNode_3254788206(x_3254788208) {
    var Temporary1;

  var result_3254788209 = null;

    if (!((x_3254788208 == null))) {
    Temporary1 = newNodeFromBaseType_3254788214(x_3254788208);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3254788209 = Temporary1;

  return result_3254788209;

}

function newNodeFromBaseType_3254788199(x_3254788201) {
  var result_3254788202 = null;

    result_3254788202 = newNode_3254788206(x_3254788201);

  return result_3254788202;

}

function newNode_3254789781(x_3254789783) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3254789784 = null;

    var nodes_3254789785 = [];
    nodes_3254789785.push(newFieldPairNode_3305111712(newNameNode_3305111683([107,105,110,100]), newNodeFromBaseType_3321890192(x_3254789783.kind)));;
    switch (x_3254789783.kind) {
    case 0:
      var Temporary1 = x_3254789783;
      if (ConstSet337[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3271557123)); }
      nodes_3254789785.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,110,116,86,97,108,117,101]), newNodeFromBaseType_3321889872(Temporary1.intValue)));;
      break;
    case 1:
      var Temporary2 = x_3254789783;
      if (ConstSet338[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3271557123)); }
      nodes_3254789785.push(newFieldPairNode_3305111712(newNameNode_3305111683([115,116,114,105,110,103,86,97,108,117,101]), newNodeFromBaseType_3321890077(Temporary2.stringValue)));;
      break;
    case 2:
      var Temporary3 = x_3254789783;
      if (ConstSet339[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3271557123)); }
      nodes_3254789785.push(newFieldPairNode_3305111712(newNameNode_3305111683([98,111,111,108,86,97,108,117,101]), newNodeFromBaseType_3321890129(Temporary3.boolValue)));;
      break;
    }
    result_3254789784 = {kind: 14, value: [80,114,111,112,101,114,116,121,86,97,108,117,101], nodes: nimCopy(null, nodes_3254789785, NTI3254784990)};

  return result_3254789784;

}

function newNodeFromBaseType_3254789774(x_3254789776) {
  var result_3254789777 = null;

    result_3254789777 = newNode_3254789781(x_3254789776);

  return result_3254789777;

}

function newNode_3254789759(x_3254789761) {
  var result_3254789762 = null;

    var nodes_3254789763 = [];
    nodes_3254789763.push(newNodeFromBaseType_3321889850(x_3254789761["Field0"]));;
    nodes_3254789763.push(newNodeFromBaseType_3254789774(x_3254789761["Field1"]));;
    result_3254789762 = {kind: 12, nodes: nimCopy(null, nodes_3254789763, NTI3254784975), value: []};

  return result_3254789762;

}

function newNodeFromBaseType_3254789752(x_3254789754) {
  var result_3254789755 = null;

    result_3254789755 = newNode_3254789759(x_3254789754);

  return result_3254789755;

}

function newNode_3254789743(x_3254789745) {
  var result_3254789746 = null;

    var nodes_3254789747 = [];
    Label1: {
      var e_3254789751 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({kind: 0, intValue: 0, stringValue: [], boolValue: false})};
      var i_536872621 = 0;
      var L_536872622 = (x_3254789745).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872621 < L_536872622)) break Label3;
            e_3254789751 = x_3254789745[chckIndx(i_536872621, 0, (x_3254789745).length - 1)];
            nodes_3254789747.push(newNodeFromBaseType_3254789752(e_3254789751));;
            i_536872621 = addInt(i_536872621, 1);
            if (!(((x_3254789745).length == L_536872622))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254789746 = {kind: 10, nodes: nimCopy(null, nodes_3254789747, NTI3254784963), value: []};

  return result_3254789746;

}

function newNodeFromBaseType_3254789736(x_3254789738) {
  var result_3254789739 = null;

    result_3254789739 = newNode_3254789743(x_3254789738);

  return result_3254789739;

}

function newNode_3254789855(x_3254789857) {
  var result_3254789858 = null;

    var nodes_3254789859 = [];
    nodes_3254789859.push(newNodeFromBaseType_3321889850(x_3254789857["Field0"]));;
    nodes_3254789859.push(newNodeFromBaseType_3321889850(x_3254789857["Field1"]));;
    result_3254789858 = {kind: 12, nodes: nimCopy(null, nodes_3254789859, NTI3254785051), value: []};

  return result_3254789858;

}

function newNodeFromBaseType_3254789848(x_3254789850) {
  var result_3254789851 = null;

    result_3254789851 = newNode_3254789855(x_3254789850);

  return result_3254789851;

}

function newNode_3254789839(x_3254789841) {
  var result_3254789842 = null;

    var nodes_3254789843 = [];
    Label1: {
      var e_3254789847 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
      var i_536872625 = 0;
      var L_536872626 = (x_3254789841).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872625 < L_536872626)) break Label3;
            e_3254789847 = x_3254789841[chckIndx(i_536872625, 0, (x_3254789841).length - 1)];
            nodes_3254789843.push(newNodeFromBaseType_3254789848(e_3254789847));;
            i_536872625 = addInt(i_536872625, 1);
            if (!(((x_3254789841).length == L_536872626))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254789842 = {kind: 10, nodes: nimCopy(null, nodes_3254789843, NTI3254785039), value: []};

  return result_3254789842;

}

function newNodeFromBaseType_3254789832(x_3254789834) {
  var result_3254789835 = null;

    result_3254789835 = newNode_3254789839(x_3254789834);

  return result_3254789835;

}

function newNode_3254789908(x_3254789910) {
  var result_3254789911 = null;

    var nodes_3254789912 = [];
    nodes_3254789912.push(newNodeFromBaseType_3321889850(x_3254789910["Field0"]));;
    nodes_3254789912.push(newNodeFromBaseType_3254788236(x_3254789910["Field1"]));;
    result_3254789911 = {kind: 12, nodes: nimCopy(null, nodes_3254789912, NTI3254785091), value: []};

  return result_3254789911;

}

function newNodeFromBaseType_3254789901(x_3254789903) {
  var result_3254789904 = null;

    result_3254789904 = newNode_3254789908(x_3254789903);

  return result_3254789904;

}

function newNode_3254789892(x_3254789894) {
  var result_3254789895 = null;

    var nodes_3254789896 = [];
    Label1: {
      var e_3254789900 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
      var i_536872629 = 0;
      var L_536872630 = (x_3254789894).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872629 < L_536872630)) break Label3;
            e_3254789900 = x_3254789894[chckIndx(i_536872629, 0, (x_3254789894).length - 1)];
            nodes_3254789896.push(newNodeFromBaseType_3254789901(e_3254789900));;
            i_536872629 = addInt(i_536872629, 1);
            if (!(((x_3254789894).length == L_536872630))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254789895 = {kind: 10, nodes: nimCopy(null, nodes_3254789896, NTI3254785079), value: []};

  return result_3254789895;

}

function newNodeFromBaseType_3254789885(x_3254789887) {
  var result_3254789888 = null;

    result_3254789888 = newNode_3254789892(x_3254789887);

  return result_3254789888;

}

function newNode_3254788177(x_3254788179) {
  var result_3254788180 = null;

    var nodes_3254788181 = [];
    nodes_3254788181.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889850(x_3254788179.id)));;
    nodes_3254788181.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,108,97,115,115]), newNodeFromBaseType_3321889850(x_3254788179.class)));;
    nodes_3254788181.push(newFieldPairNode_3305111712(newNameNode_3305111683([109,111,100,101,108]), newNodeFromBaseType_3254788199(x_3254788179.model)));;
    nodes_3254788181.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,97,114,101,110,116]), newNodeFromBaseType_3254788155(x_3254788179.parent)));;
    nodes_3254788181.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,111,108,101]), newNodeFromBaseType_3321889850(x_3254788179.role)));;
    nodes_3254788181.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,114,111,112,101,114,116,105,101,115]), newNodeFromBaseType_3254789736(x_3254788179.properties)));;
    nodes_3254788181.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,101,102,101,114,101,110,99,101,115]), newNodeFromBaseType_3254789832(x_3254788179.references)));;
    nodes_3254788181.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,104,105,108,100,76,105,115,116,115]), newNodeFromBaseType_3254789885(x_3254788179.childLists)));;
    result_3254788180 = {kind: 14, value: [65,115,116,78,111,100,101,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3254788181, NTI3254784125)};

  return result_3254788180;

}

function newNodeFromBaseType_3254788170(x_3254788172) {
  var result_3254788173 = null;

    result_3254788173 = newNode_3254788177(x_3254788172);

  return result_3254788173;

}

function newNode_3254788162(x_3254788164) {
    var Temporary1;

  var result_3254788165 = null;

    if (!((x_3254788164 == null))) {
    Temporary1 = newNodeFromBaseType_3254788170(x_3254788164);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3254788165 = Temporary1;

  return result_3254788165;

}

function newNodeFromBaseType_3254788155(x_3254788157) {
  var result_3254788158 = null;

    result_3254788158 = newNode_3254788162(x_3254788157);

  return result_3254788158;

}

function newNode_3254790019(x_3254790021) {
  var result_3254790022 = null;

    var nodes_3254790023 = [];
    nodes_3254790023.push(newFieldPairNode_3305111712(newNameNode_3305111683([118,97,108]), newNodeFromBaseType_3321890077(x_3254790021.val)));;
    nodes_3254790023.push(newFieldPairNode_3305111712(newNameNode_3305111683([104,97,115]), newNodeFromBaseType_3321890129(x_3254790021.has)));;
    result_3254790022 = {kind: 14, value: [79,112,116,105,111,110,91,115,121,115,116,101,109,46,115,116,114,105,110,103,93], nodes: nimCopy(null, nodes_3254790023, NTI3254785171)};

  return result_3254790022;

}

function newNodeFromBaseType_3254790003(x_3254790005) {
  var result_3254790006 = null;

    result_3254790006 = newNode_3254790019(x_3254790005);

  return result_3254790006;

}

function newNode_3254790139(x_3254790141) {
  var result_3254790142 = null;

    result_3254790142 = {kind: 4, value: [112,114,111,99,32,120,40,41], nodes: []};

  return result_3254790142;

}

function newNodeFromBaseType_3254790132(x_3254790134) {
  var result_3254790135 = null;

    result_3254790135 = newNode_3254790139(x_3254790134);

  return result_3254790135;

}

function newNode_3254790163(x_3254790165) {
  var result_3254790166 = null;

    result_3254790166 = {kind: 4, value: [67,101,108,108,73,115,86,105,115,105,98,108,101,80,114,101,100,105,99,97,116,101], nodes: []};

  return result_3254790166;

}

function newNodeFromBaseType_3254790156(x_3254790158) {
  var result_3254790159 = null;

    result_3254790159 = newNode_3254790163(x_3254790158);

  return result_3254790159;

}

function newNode_3254790183(x_3254790185) {
  var result_3254790186 = null;

    result_3254790186 = {kind: 4, value: [67,101,108,108,78,111,100,101,70,97,99,116,111,114,121], nodes: []};

  return result_3254790186;

}

function newNodeFromBaseType_3254790176(x_3254790178) {
  var result_3254790179 = null;

    result_3254790179 = newNode_3254790183(x_3254790178);

  return result_3254790179;

}

function newNode_3254790218(x_3254790220) {
  var result_3254790221 = null;

    var nodes_3254790222 = [];
    nodes_3254790222.push(newFieldPairNode_3305111712(newNameNode_3305111683([111,110,78,101,119,76,105,110,101]), newNodeFromBaseType_3321890129(x_3254790220.onNewLine)));;
    nodes_3254790222.push(newFieldPairNode_3305111712(newNameNode_3305111683([97,100,100,78,101,119,108,105,110,101,65,102,116,101,114]), newNodeFromBaseType_3321890129(x_3254790220.addNewlineAfter)));;
    nodes_3254790222.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,110,100,101,110,116,67,104,105,108,100,114,101,110]), newNodeFromBaseType_3321890129(x_3254790220.indentChildren)));;
    nodes_3254790222.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,83,112,97,99,101,76,101,102,116]), newNodeFromBaseType_3321890129(x_3254790220.noSpaceLeft)));;
    nodes_3254790222.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,83,112,97,99,101,82,105,103,104,116]), newNodeFromBaseType_3321890129(x_3254790220.noSpaceRight)));;
    result_3254790221 = {kind: 14, value: [67,101,108,108,83,116,121,108,101,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3254790222, NTI3254785285)};

  return result_3254790221;

}

function newNodeFromBaseType_3254790211(x_3254790213) {
  var result_3254790214 = null;

    result_3254790214 = newNode_3254790218(x_3254790213);

  return result_3254790214;

}

function newNode_3254790203(x_3254790205) {
    var Temporary1;

  var result_3254790206 = null;

    if (!((x_3254790205 == null))) {
    Temporary1 = newNodeFromBaseType_3254790211(x_3254790205);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3254790206 = Temporary1;

  return result_3254790206;

}

function newNodeFromBaseType_3254790196(x_3254790198) {
  var result_3254790199 = null;

    result_3254790199 = newNode_3254790203(x_3254790198);

  return result_3254790199;

}

function newNode_3254790338(x_3254790340) {
  var result_3254790341 = null;

    result_3254790341 = {kind: 3, value: HEX24_33557336(x_3254790340), nodes: []};

  return result_3254790341;

}

function newNodeFromBaseType_3254790331(x_3254790333) {
  var result_3254790334 = null;

    result_3254790334 = newNode_3254790338(x_3254790333);

  return result_3254790334;

}

function newNode_3254790356(x_3254790358) {
  var result_3254790359 = null;

    var nodes_3254790360 = [];
    Label1: {
      var e_3254790364 = [];
      var i_536872633 = 0;
      var L_536872634 = (x_3254790358).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872633 < L_536872634)) break Label3;
            e_3254790364 = x_3254790358[chckIndx(i_536872633, 0, (x_3254790358).length - 1)];
            nodes_3254790360.push(newNodeFromBaseType_3321890077(e_3254790364));;
            i_536872633 = addInt(i_536872633, 1);
            if (!(((x_3254790358).length == L_536872634))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254790359 = {kind: 10, nodes: nimCopy(null, nodes_3254790360, NTI3254785383), value: []};

  return result_3254790359;

}

function newNodeFromBaseType_3254790349(x_3254790351) {
  var result_3254790352 = null;

    result_3254790352 = newNode_3254790356(x_3254790351);

  return result_3254790352;

}

function newNode_3254790405(x_3254790407) {
  var result_3254790408 = null;

    result_3254790408 = {kind: 3, value: HEX24_2164261794(x_3254790407), nodes: []};

  return result_3254790408;

}

function newNodeFromBaseType_3254790398(x_3254790400) {
  var result_3254790401 = null;

    result_3254790401 = newNode_3254790405(x_3254790400);

  return result_3254790401;

}

function newNode_3254790390(x_3254790392) {
  var result_3254790393 = null;

    var nodes_3254790394 = [];
    nodes_3254790394.push(newFieldPairNode_3305111712(newNameNode_3305111683([114]), newNodeFromBaseType_3254790398(x_3254790392.r)));;
    nodes_3254790394.push(newFieldPairNode_3305111712(newNameNode_3305111683([103]), newNodeFromBaseType_3254790398(x_3254790392.g)));;
    nodes_3254790394.push(newFieldPairNode_3305111712(newNameNode_3305111683([98]), newNodeFromBaseType_3254790398(x_3254790392.b)));;
    nodes_3254790394.push(newFieldPairNode_3305111712(newNameNode_3305111683([97]), newNodeFromBaseType_3254790398(x_3254790392.a)));;
    result_3254790393 = {kind: 14, value: [67,111,108,111,114], nodes: nimCopy(null, nodes_3254790394, NTI3254785409)};

  return result_3254790393;

}

function newNodeFromBaseType_3254790383(x_3254790385) {
  var result_3254790386 = null;

    result_3254790386 = newNode_3254790390(x_3254790385);

  return result_3254790386;

}

function newNode_3254789967(x_3254789969) {
  var result_3254789970 = null;

    var nodes_3254789971 = [];
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889850(x_3254789969.id)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,97,114,101,110,116]), newNodeFromBaseType_3254789945(x_3254789969.parent)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,100,101]), newNodeFromBaseType_3254788155(x_3254789969.node)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([108,105,110,101]), newNodeFromBaseType_3321889872(x_3254789969.line)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,105,115,112,108,97,121,84,101,120,116]), newNodeFromBaseType_3254790003(x_3254789969.displayText)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([115,104,97,100,111,119,84,101,120,116]), newNodeFromBaseType_3321890077(x_3254789969.shadowText)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([102,105,108,108,67,104,105,108,100,114,101,110]), newNodeFromBaseType_3254790132(x_3254789969.fillChildren)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([102,105,108,108,101,100]), newNodeFromBaseType_3321890129(x_3254789969.filled)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,115,86,105,115,105,98,108,101]), newNodeFromBaseType_3254790156(x_3254789969.isVisible)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,100,101,70,97,99,116,111,114,121]), newNodeFromBaseType_3254790176(x_3254789969.nodeFactory)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([115,116,121,108,101]), newNodeFromBaseType_3254790196(x_3254789969.style)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,105,115,97,98,108,101,83,101,108,101,99,116,105,111,110]), newNodeFromBaseType_3321890129(x_3254789969.disableSelection)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,105,115,97,98,108,101,69,100,105,116,105,110,103]), newNodeFromBaseType_3321890129(x_3254789969.disableEditing)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,101,108,101,116,101,73,109,109,101,100,105,97,116,101,108,121]), newNodeFromBaseType_3321890129(x_3254789969.deleteImmediately)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,101,108,101,116,101,78,101,105,103,104,98,111,114]), newNodeFromBaseType_3321890129(x_3254789969.deleteNeighbor)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,111,110,116,82,101,112,108,97,99,101,87,105,116,104,68,101,102,97,117,108,116]), newNodeFromBaseType_3321890129(x_3254789969.dontReplaceWithDefault)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,110,99,114,101,97,115,101,73,110,100,101,110,116,66,101,102,111,114,101]), newNodeFromBaseType_3321890129(x_3254789969.increaseIndentBefore)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,101,99,114,101,97,115,101,73,110,100,101,110,116,66,101,102,111,114,101]), newNodeFromBaseType_3321890129(x_3254789969.decreaseIndentBefore)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,110,99,114,101,97,115,101,73,110,100,101,110,116,65,102,116,101,114]), newNodeFromBaseType_3321890129(x_3254789969.increaseIndentAfter)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,101,99,114,101,97,115,101,73,110,100,101,110,116,65,102,116,101,114]), newNodeFromBaseType_3321890129(x_3254789969.decreaseIndentAfter)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([102,111,110,116,83,105,122,101,73,110,99,114,101,97,115,101,80,101,114,99,101,110,116]), newNodeFromBaseType_3254790331(x_3254789969.fontSizeIncreasePercent)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([116,104,101,109,101,70,111,114,101,103,114,111,117,110,100,67,111,108,111,114,115]), newNodeFromBaseType_3254790349(x_3254789969.themeForegroundColors)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([116,104,101,109,101,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,115]), newNodeFromBaseType_3254790349(x_3254789969.themeBackgroundColors)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([102,111,114,101,103,114,111,117,110,100,67,111,108,111,114]), newNodeFromBaseType_3254790383(x_3254789969.foregroundColor)));;
    nodes_3254789971.push(newFieldPairNode_3305111712(newNameNode_3305111683([98,97,99,107,103,114,111,117,110,100,67,111,108,111,114]), newNodeFromBaseType_3254790383(x_3254789969.backgroundColor)));;
    result_3254789970 = {kind: 14, value: [67,101,108,108,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3254789971, NTI3254785136)};

  return result_3254789970;

}

function newNodeFromBaseType_3254789960(x_3254789962) {
  var result_3254789963 = null;

    result_3254789963 = newNode_3254789967(x_3254789962);

  return result_3254789963;

}

function newNode_3254789952(x_3254789954) {
    var Temporary1;

  var result_3254789955 = null;

    if (!((x_3254789954 == null))) {
    Temporary1 = newNodeFromBaseType_3254789960(x_3254789954);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3254789955 = Temporary1;

  return result_3254789955;

}

function newNodeFromBaseType_3254789945(x_3254789947) {
  var result_3254789948 = null;

    result_3254789948 = newNode_3254789952(x_3254789947);

  return result_3254789948;

}

function newNode_3254788106(x_3254788108) {
  var result_3254788109 = null;

    var nodes_3254788110 = [];
    nodes_3254788110.push(newFieldPairNode_3305111712(newNameNode_3305111683([102,105,114,115,116,73,110,100,101,120]), newNodeFromBaseType_3321889872(x_3254788108.firstIndex)));;
    nodes_3254788110.push(newFieldPairNode_3305111712(newNameNode_3305111683([108,97,115,116,73,110,100,101,120]), newNodeFromBaseType_3321889872(x_3254788108.lastIndex)));;
    nodes_3254788110.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,97,116,104]), newNodeFromBaseType_3254788128(x_3254788108.path)));;
    nodes_3254788110.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,100,101]), newNodeFromBaseType_3254788155(x_3254788108.node)));;
    nodes_3254788110.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,101,108,108]), newNodeFromBaseType_3254789945(x_3254788108.cell)));;
    result_3254788109 = {kind: 14, value: [67,101,108,108,67,117,114,115,111,114], nodes: nimCopy(null, nodes_3254788110, NTI3254784072)};

  return result_3254788109;

}

function newNodeFromBaseType_3254788099(x_3254788101) {
  var result_3254788102 = null;

    result_3254788102 = newNode_3254788106(x_3254788101);

  return result_3254788102;

}

function handleDocumentChanged_3254788077(self_3254788078) {
    var Temporary1;

    var fmtRes_3254788083 = mnewString(0);
    fmtRes_3254788083.push.apply(fmtRes_3254788083, [91,109,111,100,101,108,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3254788083, NTI33554449)]);
    rebuildCells_3254780235(self_3254788078);
    cursorHEX3D_3254784731(self_3254788078, get_3254786205(getFirstEditableCellOfNode_3254780267(self_3254788078, (Temporary1 = rootNodes_3271557492(self_3254788078.document.model), Temporary1)[chckIndx(0, 0, (Temporary1).length - 1)])));
    printNodes_3305112157([newTopPairNode_3305111686(newNameNode_3305111683([115,101,108,102,46,99,117,114,115,111,114]), newNodeFromBaseType_3254788099(cursor_3254784719(self_3254788078)))]);
    markDirty_2415919143(self_3254788078);

  
}

function reset_2969575717(obj_2969575719, obj_2969575719_Idx) {
    obj_2969575719[obj_2969575719_Idx] = null;

  
}

function clear_2969575710(deq_2969575712) {
    Label1: {
      var el_2969575716 = null;
      var el_2969575716_Idx = 0;
      var i_536872644 = deq_2969575712.head;
      Label2: {
        var c_536872646 = 0;
        var i_536872647 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872647 < deq_2969575712.count)) break Label4;
              c_536872646 = i_536872647;
              el_2969575716 = deq_2969575712.data; el_2969575716_Idx = chckIndx(i_536872644, 0, (deq_2969575712.data).length - 1);
              reset_2969575717(el_2969575716, el_2969575716_Idx);
              i_536872644 = (addInt(i_536872644, 1) & deq_2969575712.mask);
              i_536872647 = addInt(i_536872647, 1);
            }
        };
      };
    };
    deq_2969575712.count = 0;
    deq_2969575712.tail = deq_2969575712.head;

  
}

function handleDocumentChanged_2969575647(self_2969575648) {
    var fmtRes_2969575653 = mnewString(0);
    fmtRes_2969575653.push.apply(fmtRes_2969575653, [91,97,115,116,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575653, NTI33554449)]);
    clear_2969575710(self_2969575648.selectionHistory);
    clear_2969575710(self_2969575648.selectionFuture);
    finishEdit_2969575583(self_2969575648, false);
    Label1: {
      var symbol_2969575787 = null;
      var L_536872637 = len_3019954306(ctx_2969567289.globalScope);
      Label2: {
        var h_536872639 = 0;
        var colontmp__536872640 = 0;
        colontmp__536872640 = (ctx_2969567289.globalScope.data).length - 1;
        var res_536872641 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872641 <= colontmp__536872640)) break Label4;
              h_536872639 = res_536872641;
              if (isFilled_1308622880(ctx_2969567289.globalScope.data[chckIndx(h_536872639, 0, (ctx_2969567289.globalScope.data).length - 1)].Field0)) {
              symbol_2969575787 = ctx_2969567289.globalScope.data[chckIndx(h_536872639, 0, (ctx_2969567289.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_3019907758(ctx_2969567289, symbol_2969575787);
              if (!((len_3019954306(ctx_2969567289.globalScope) == L_536872637))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872641 = addInt(res_536872641, 1);
            }
        };
      };
    };
    nodeHEX3D_2969570829(self_2969575648, HEX5BHEX5D_3003121748(self_2969575648.document.rootNode, 0));
    markDirty_2415919143(self_2969575648);

  
}

function handleDocumentChanged_2818583515(self_2818583516) {
    selectionHEX3D_2818572811(self_2818583516, {Field0: clampCursor_2818572708(self_2818583516, selection_2818572805(self_2818583516).Field0), Field1: clampCursor_2818572708(self_2818583516, selection_2818572805(self_2818583516).Field1)});
    updateSearchResults_2818580294(self_2818583516);

  
}

function handleDocumentChanged_2415919263(self_2415919264) {
  
}

function handleDocumentChanged_2415919265(self_2415919264) {
    chckNilDisp(self_2415919264);
    if (isObj(self_2415919264.m_type, NTI3254780014)) {
    handleDocumentChanged_3254788077(self_2415919264);
    }
    else {
    if (isObj(self_2415919264.m_type, NTI2969568641)) {
    handleDocumentChanged_2969575647(self_2415919264);
    }
    else {
    if (isObj(self_2415919264.m_type, NTI2818572510)) {
    handleDocumentChanged_2818583515(self_2415919264);
    }
    else {
    if (isObj(self_2415919264.m_type, NTI2415919108)) {
    handleDocumentChanged_2415919263(self_2415919264);
    }
    }}}

  
}

function del_1291847224(t_1291847227, key_1291847228) {
    var hc_1291847229 = [0];
    var i_1291847236 = rawGet_1291845908(t_1291847227, key_1291847228, hc_1291847229, 0);
    var mskHEX60gensym36_1291847240 = (t_1291847227.data).length - 1;
    if ((0 <= i_1291847236)) {
    t_1291847227.counter = subInt(t_1291847227.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1291847247 = i_1291847236;
            var rHEX60gensym36_1291847248 = jHEX60gensym36_1291847247;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0 = 0;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field1 = 0;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1291847236 = (addInt(i_1291847236, 1) & mskHEX60gensym36_1291847240);
                  if (isEmpty_1308622877(t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1291847248 = (t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0 & mskHEX60gensym36_1291847240);
                  if (!(((((rHEX60gensym36_1291847248 <= i_1291847236) && (jHEX60gensym36_1291847247 < rHEX60gensym36_1291847248)) || ((jHEX60gensym36_1291847247 < rHEX60gensym36_1291847248) && (i_1291847236 < jHEX60gensym36_1291847247))) || ((i_1291847236 < jHEX60gensym36_1291847247) && (rHEX60gensym36_1291847248 <= i_1291847236))))) {
                  break Label4;
                  }
                  
                }
            };
            t_1291847227.data[chckIndx(jHEX60gensym36_1291847247, 0, (t_1291847227.data).length - 1)] = nimCopy(t_1291847227.data[chckIndx(jHEX60gensym36_1291847247, 0, (t_1291847227.data).length - 1)], t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)], NTI1291845716);
          }
      };
    };
    }
    

  
}

function invoke_1291847134(event_1291847136, arg_1291847137) {
    Label1: {
      var h_1291847160 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872653 = 0;
      var L_536872654 = (event_1291847136.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872653 < L_536872654)) break Label3;
            h_1291847160 = event_1291847136.handlers[chckIndx(i_536872653, 0, (event_1291847136.handlers).length - 1)];
            h_1291847160.Field1(arg_1291847137);
            i_536872653 = addInt(i_536872653, 1);
            if (!(((event_1291847136.handlers).length == L_536872654))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function unregisterEditor_1291847181(self_1291847182, editor_1291847183) {
    del_1291847224(self_1291847182.editors, editor_1291847183.id);
    invoke_1291847134(self_1291847182.onEditorDeregistered, editor_1291847183);

  
}

function unregister_3254794452(self_3254794453) {
    unregisterEditor_1291847181(self_3254794453.editor, self_3254794453);

  
}

function unregister_2969584983(self_2969584984) {
    finishEdit_2969575583(self_2969584984, false);
    unregisterEditor_1291847181(self_2969584984.editor, self_2969584984);

  
}

function unregister_2818593998(self_2818593999) {
    unregisterEditor_1291847181(self_2818593999.editor, self_2818593999);

  
}

function unregister_2415919266(self_2415919267) {
  
}

function unregister_2415919268(self_2415919267) {
    chckNilDisp(self_2415919267);
    if (isObj(self_2415919267.m_type, NTI3254780014)) {
    unregister_3254794452(self_2415919267);
    }
    else {
    if (isObj(self_2415919267.m_type, NTI2969568641)) {
    unregister_2969584983(self_2415919267);
    }
    else {
    if (isObj(self_2415919267.m_type, NTI2818572510)) {
    unregister_2818593998(self_2415919267);
    }
    else {
    if (isObj(self_2415919267.m_type, NTI2415919108)) {
    unregister_2415919266(self_2415919267);
    }
    }}}

  
}

function getOption_2818583898(editor_2818583900, path_2818583901, default_2818583902) {
  var result_2818583908 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583900 == null)) {
      result_2818583908 = default_2818583902;
      break BeforeRet;
      }
      
      var nodeHEX60gensym170_2818583921 = HEX7BHEX7D_1627393316(editor_2818583900.options, nsuSplitString(path_2818583901, [46], -1));
      if ((nodeHEX60gensym170_2818583921 == null)) {
      result_2818583908 = default_2818583902;
      break BeforeRet;
      }
      
    };
    result_2818583908 = getFloat_1627390140(nodeHEX60gensym170_2818583921, default_2818583902);
    break BeforeRet;
  };

  return result_2818583908;

}

function handleScroll_3254793066(self_3254793067, scroll_3254793068, mousePosWindow_3254793069) {
    var scrollAmount_3254793079 = (scroll_3254793068.y * getOption_2818583898(self_3254793067.editor, [109,111,100,101,108,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0));
    if (((self_3254793067.showCompletions && !((self_3254793067.lastCompletionsWidget == null))) && contains_2130706614(self_3254793067.lastCompletionsWidget.lastBounds, mousePosWindow_3254793069))) {
    HEX2BHEX3D_855640304(self_3254793067, "completionsScrollOffset", scrollAmount_3254793079);
    markDirty_2415919143(self_3254793067);
    }
    else {
      HEX2BHEX3D_855640304(self_3254793067, "scrollOffset", scrollAmount_3254793079);
      markDirty_2415919143(self_3254793067);
    }
    

  
}

function handleScroll_2969584550(self_2969584551, scroll_2969584552, mousePosWindow_2969584553) {
    var scrollAmount_2969584563 = (scroll_2969584552.y * getOption_2818583898(self_2969584551.editor, [97,115,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0));
    if ((!((self_2969584551.lastCompletionsWidget == null)) && contains_2130706614(self_2969584551.lastCompletionsWidget.lastBounds, mousePosWindow_2969584553))) {
    HEX2BHEX3D_855640304(self_2969584551, "completionsScrollOffset", scrollAmount_2969584563);
    markDirty_2415919143(self_2969584551);
    }
    else {
      HEX2BHEX3D_855640304(self_2969584551, "scrollOffset", scrollAmount_2969584563);
      markDirty_2415919143(self_2969584551);
    }
    

  
}

function handleScroll_2818583894(self_2818583895, scroll_2818583896, mousePosWindow_2818583897) {
  BeforeRet: {
    if (self_2818583895.disableScrolling) {
    break BeforeRet;
    }
    
    var scrollAmount_2818583925 = (scroll_2818583896.y * getOption_2818583898(self_2818583895.editor, [116,101,120,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 40.0));
    if ((!((self_2818583895.lastCompletionsWidget == null)) && contains_2130706614(self_2818583895.lastCompletionsWidget.lastBounds, mousePosWindow_2818583897))) {
    HEX2BHEX3D_855640304(self_2818583895, "completionsScrollOffset", scrollAmount_2818583925);
    }
    else {
    HEX2BHEX3D_855640304(self_2818583895, "scrollOffset", scrollAmount_2818583925);
    }
    
    markDirty_2415919143(self_2818583895);
  };

  
}

function handleScroll_2415919269(self_2415919270, scroll_2415919271, mousePosWindow_2415919272) {
  
}

function handleScroll_2415919273(self_2415919270, scroll_2415919271, mousePosWindow_2415919272) {
    chckNilDisp(self_2415919270);
    if (isObj(self_2415919270.m_type, NTI3254780014)) {
    handleScroll_3254793066(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    else {
    if (isObj(self_2415919270.m_type, NTI2969568641)) {
    handleScroll_2969584550(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    else {
    if (isObj(self_2415919270.m_type, NTI2818572510)) {
    handleScroll_2818583894(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    else {
    if (isObj(self_2415919270.m_type, NTI2415919108)) {
    handleScroll_2415919269(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    }}}

  
}

function getItemAtPixelPosition_3254793046(self_3254793047, posWindow_3254793048) {
  var result_3254793050 = ({val: 0, has: false});

  BeforeRet: {
    result_3254793050 = nimCopy(result_3254793050, none_3003121842(), NTI1191183280);
    Label1: {
      var index_3254793061 = 0;
      var widget_3254793062 = null;
      var i_536872665 = 0;
      var L_536872666 = (self_3254793047.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872665 < L_536872666)) break Label3;
            index_3254793061 = self_3254793047.lastItems[chckIndx(i_536872665, 0, (self_3254793047.lastItems).length - 1)]["Field0"];
            widget_3254793062 = self_3254793047.lastItems[chckIndx(i_536872665, 0, (self_3254793047.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(widget_3254793062.lastBounds, posWindow_3254793048) && (0 <= index_3254793061)) && (index_3254793061 < completionsLen_3254785527(self_3254793047)))) {
            result_3254793050 = nimCopy(result_3254793050, some_1191184367(index_3254793061), NTI1191183280);
            break BeforeRet;
            }
            
            i_536872665 = addInt(i_536872665, 1);
            if (!(((self_3254793047.lastItems).length == L_536872666))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3254793050;

}

function getLeafCellContainingPoint_3254793091(self_3254793092, cell_3254793093, point_3254793094) {
              var Temporary4;

  var result_3254793096 = ({val: null});

  BeforeRet: {
    var widget_3254793578 = getOrDefault_3254793163(self_3254793092.cellWidgetContext.cellToWidget, cell_3254793093.id, null);
    if ((widget_3254793578 == null)) {
    result_3254793096 = nimCopy(result_3254793096, none_3271570956(), NTI3271564556);
    break BeforeRet;
    }
    
    if (!(contains_2130706614(widget_3254793578.lastBounds, point_3254793094))) {
    result_3254793096 = nimCopy(result_3254793096, none_3271570956(), NTI3271564556);
    break BeforeRet;
    }
    
    if (isObj(cell_3254793093.m_type, NTI3338665993)) {
    Label1: {
      var c_3254793603 = null;
      var colontmp__536872669 = [];
      colontmp__536872669 = cell_3254793093.children;
      var i_536872670 = 0;
      var L_536872671 = (colontmp__536872669).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872670 < L_536872671)) break Label3;
            c_3254793603 = colontmp__536872669[chckIndx(i_536872670, 0, (colontmp__536872669).length - 1)];
              var oHEX60gensym186_3254793606 = getLeafCellContainingPoint_3254793091(self_3254793092, c_3254793603, point_3254793094);
              if (!isSome_3338666868(oHEX60gensym186_3254793606)) Temporary4 = false; else {                var leaf_3254793629 = get_3338666888(oHEX60gensym186_3254793606);
                Temporary4 = true;              }            if (Temporary4) {
            result_3254793096 = nimCopy(result_3254793096, some_3338666283(leaf_3254793629), NTI3271564556);
            break BeforeRet;
            }
            
            i_536872670 = addInt(i_536872670, 1);
            if (!(((colontmp__536872669).length == L_536872671))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254793096 = nimCopy(result_3254793096, none_3271570956(), NTI3271564556);
    break BeforeRet;
    }
    
    result_3254793096 = nimCopy(result_3254793096, some_3338666283(cell_3254793093), NTI3271564556);
    break BeforeRet;
  };

  return result_3254793096;

}

function handleMousePress_3254793642(self_3254793643, button_3254793644, mousePosWindow_3254793645) {
      var Temporary1;
        var Temporary2;
                var Temporary7;
                var Temporary8;

  BeforeRet: {
      if (!self_3254793643.showCompletions) Temporary1 = false; else {        var oHEX60gensym187_3254793648 = getItemAtPixelPosition_3254793046(self_3254793643, mousePosWindow_3254793645);
        if (!isSome_1191185117(oHEX60gensym187_3254793648)) Temporary2 = false; else {          var item_3254793671 = get_1191185211(oHEX60gensym187_3254793648);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    if (((button_3254793644 == 0) || (button_3254793644 == 1))) {
    self_3254793643.selectedCompletion = item_3254793671;
    markDirty_2415919143(self_3254793643);
    }
    
    break BeforeRet;
    }
    
    if (!((button_3254793644 == 0))) {
    break BeforeRet;
    }
    
    Label3: {
      var rootNode_3254793687 = null;
      var colontmp__536872659 = [];
      colontmp__536872659 = rootNodes_3271557492(self_3254793643.document.model);
      var i_536872660 = 0;
      var L_536872661 = (colontmp__536872659).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872660 < L_536872661)) break Label5;
            rootNode_3254793687 = colontmp__536872659[chckIndx(i_536872660, 0, (colontmp__536872659).length - 1)];
            Label6: {
              var cell_3254793848 = getOrDefault_3254793754(self_3254793643.nodeToCell, rootNode_3254793687.id, null);
              if ((cell_3254793848 == null)) {
              break Label6;
              }
              
                var oHEX60gensym191_3254793854 = getLeafCellContainingPoint_3254793091(self_3254793643, cell_3254793848, mousePosWindow_3254793645);
                if (!isSome_3338666868(oHEX60gensym191_3254793854)) Temporary7 = false; else {                  var leafCell_3254793877 = get_3338666888(oHEX60gensym191_3254793854);
                  Temporary7 = true;                }              if (Temporary7) {
              if ((leafCell_3254793877.line < (self_3254793643.logicalLines).length - 1)) {
                var oHEX60gensym192_3254793883 = getCursorInLine_3254780244(self_3254793643, leafCell_3254793877.line, mousePosWindow_3254793645.x);
                if (!isSome_3254793888(oHEX60gensym192_3254793883)) Temporary8 = false; else {                  var newCursor_3254793908 = nimCopy(null, get_3254786205(oHEX60gensym192_3254793883), NTI3254779907);
                  Temporary8 = true;                }              if (Temporary8) {
              cursorHEX3D_3254784731(self_3254793643, selectCursor_3254780275(cursor_3254784719(self_3254793643), newCursor_3254793908, false));
              markDirty_2415919143(self_3254793643);
              break Label3;
              }
              
              }
              
              cursorHEX3D_3254784731(self_3254793643, toCursor_3254780264(leafCell_3254793877, true));
              markDirty_2415919143(self_3254793643);
              break Label3;
              }
              
            };
            i_536872660 = addInt(i_536872660, 1);
            if (!(((colontmp__536872659).length == L_536872661))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function HEX2D_2147484180(aHEX60gensym73_2147484182, bHEX60gensym73_2147484183) {
  var result_2147484184 = ({x: 0.0, y: 0.0});

    result_2147484184 = nimCopy(result_2147484184, {x: (aHEX60gensym73_2147484182.x - bHEX60gensym73_2147484183.x), y: (aHEX60gensym73_2147484182.y - bHEX60gensym73_2147484183.y)}, NTI2164261152);

  return result_2147484184;

}

function getItemAtPixelPosition_2969584527(self_2969584528, posWindow_2969584529) {
  var result_2969584531 = ({val: 0, has: false});

  BeforeRet: {
    result_2969584531 = nimCopy(result_2969584531, none_3003121842(), NTI1191183280);
    Label1: {
      var index_2969584542 = 0;
      var widget_2969584543 = null;
      var i_536872674 = 0;
      var L_536872675 = (self_2969584528.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872674 < L_536872675)) break Label3;
            index_2969584542 = self_2969584528.lastItems[chckIndx(i_536872674, 0, (self_2969584528.lastItems).length - 1)]["Field0"];
            widget_2969584543 = self_2969584528.lastItems[chckIndx(i_536872674, 0, (self_2969584528.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(widget_2969584543.lastBounds, posWindow_2969584529) && (0 <= index_2969584542)) && (index_2969584542 <= (self_2969584528.completions).length - 1))) {
            result_2969584531 = nimCopy(result_2969584531, some_1191184367(index_2969584542), NTI1191183280);
            break BeforeRet;
            }
            
            i_536872674 = addInt(i_536872674, 1);
            if (!(((self_2969584528.lastItems).length == L_536872675))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2969584531;

}

function getNodeAtPixelPosition_2969578451(self_2969578452, posContent_2969578453) {
                      var Temporary8;

  var result_2969578455 = ({val: null});

  BeforeRet: {
    result_2969578455 = nimCopy(result_2969578455, none_3003121871(), NTI3003121783);
    Label1: {
      var layout_2969578483 = null;
      var offset_2969578484 = ({x: 0.0, y: 0.0});
      var i_536872687 = 0;
      var L_536872688 = (self_2969578452.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872687 < L_536872688)) break Label3;
            layout_2969578483 = self_2969578452.lastLayouts[chckIndx(i_536872687, 0, (self_2969578452.lastLayouts).length - 1)]["Field0"];
            offset_2969578484 = self_2969578452.lastLayouts[chckIndx(i_536872687, 0, (self_2969578452.lastLayouts).length - 1)]["Field1"];
            var bounds_2969578494 = HEX2B_2130706587(bounds_3087009979(layout_2969578483), offset_2969578484);
            var smallestRange_2969578495 = ({parent: null, first: 0, last: 0});
            if (contains_2130706614(bounds_2969578494, posContent_2969578453)) {
            Label4: {
              var __2969578496 = 0;
              var child_2969578497 = null;
              var n_536872679 = layout_2969578483.node;
              var idx_536872680 = -1;
              var i_536872681 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536872680 == -1)) {
                    var colontmp__536872684 = nimCopy(null, {Field0: i_536872681, Field1: n_536872679}, NTI3003123002);
                    __2969578496 = colontmp__536872684["Field0"];
                    child_2969578497 = colontmp__536872684["Field1"];
                    if (contains_2969569863(layout_2969578483.nodeToVisualNode, child_2969578497.id)) {
                    var visualNode_2969578643 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969578483.nodeToVisualNode, child_2969578497.id), NTI3087007774);
                    var bounds_2969578653 = HEX2B_2130706587(absoluteBounds_3087009583(visualNode_2969578643), vec2_2164261725(0.0, offset_2969578484.y));
                    if (contains_2130706614(bounds_2969578653, posContent_2969578453)) {
                    if (((((smallestRange_2969578495.parent == null) || (smallestRange_2969578495.parent.depth < visualNode_2969578643.parent.depth)) || ((visualNode_2969578643.parent.depth == smallestRange_2969578495.parent.depth) && (smallestRange_2969578495.parent.indent < visualNode_2969578643.parent.indent))) || ((visualNode_2969578643.parent.depth == smallestRange_2969578495.parent.depth) && (subInt(visualNode_2969578643.last, visualNode_2969578643.first) < subInt(smallestRange_2969578495.last, smallestRange_2969578495.first))))) {
                    smallestRange_2969578495 = nimCopy(smallestRange_2969578495, visualNode_2969578643, NTI3087007774);
                    result_2969578455 = nimCopy(result_2969578455, some_3003121890(child_2969578497), NTI3003121783);
                    }
                    
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536872680, 1) < len_3003121752(n_536872679))) {
                    n_536872679 = HEX5BHEX5D_3003121748(n_536872679, addInt(idx_536872680, 1));
                    idx_536872680 = -1;
                    }
                    else {
                      var oHEX60gensym74_536872685 = next_3003121857(n_536872679);
                      if (!isSome_3003123546(oHEX60gensym74_536872685)) Temporary8 = false; else {                        var ne_536872686 = get_3003123566(oHEX60gensym74_536872685);
                        Temporary8 = true;                      }                    if (Temporary8) {
                    n_536872679 = ne_536872686;
                    idx_536872680 = -1;
                    }
                    else {
                    if ((!((n_536872679.parent == null)) && !((n_536872679.parent == layout_2969578483.node)))) {
                    idx_536872680 = index_3003121772(n_536872679);
                    n_536872679 = n_536872679.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536872681 = addInt(i_536872681, 1);
                    }
                  }
              };
            };
            if (isNone_3003123574(result_2969578455)) {
            result_2969578455 = nimCopy(result_2969578455, some_3003121890(layout_2969578483.node), NTI3003121783);
            }
            
            break BeforeRet;
            }
            
            i_536872687 = addInt(i_536872687, 1);
            if (!(((self_2969578452.lastLayouts).length == L_536872688))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2969578455;

}

function handleMousePress_2969584575(self_2969584576, button_2969584577, mousePosWindow_2969584578) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

  BeforeRet: {
    var mousePosContent_2969584623 = HEX2D_2147484180(mousePosWindow_2969584578, xy_2147483680(self_2969584576.lastBounds));
      var oHEX60gensym1028_2969584626 = getItemAtPixelPosition_2969584527(self_2969584576, mousePosWindow_2969584578);
      if (!isSome_1191185117(oHEX60gensym1028_2969584626)) Temporary1 = false; else {        var item_2969584649 = get_1191185211(oHEX60gensym1028_2969584626);
        Temporary1 = true;      }    if (Temporary1) {
    if (((button_2969584577 == 0) || (button_2969584577 == 1))) {
    self_2969584576.selectedCompletion = item_2969584649;
    markDirty_2415919143(self_2969584576);
    }
    
    break BeforeRet;
    }
    
    if ((button_2969584577 == 0)) {
      var oHEX60gensym1029_2969584664 = getItemAtPixelPosition_2969584527(self_2969584576, mousePosWindow_2969584578);
      if (!isSome_1191185117(oHEX60gensym1029_2969584664)) Temporary2 = false; else {        var index_2969584687 = get_1191185211(oHEX60gensym1029_2969584664);
        Temporary2 = true;      }    if (Temporary2) {
    self_2969584576.selectedCompletion = index_2969584687;
    applySelectedCompletion_2969581476(self_2969584576);
    }
    else {
      if (!!(isEditing_2969575154(self_2969584576))) Temporary3 = false; else {        var oHEX60gensym1030_2969584690 = getNodeAtPixelPosition_2969578451(self_2969584576, mousePosContent_2969584623);
        if (!isSome_3003123546(oHEX60gensym1030_2969584690)) Temporary4 = false; else {          var n_2969584713 = get_3003123566(oHEX60gensym1030_2969584690);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    nodeHEX3D_2969570829(self_2969584576, n_2969584713);
    }
    }
    }
    
  };

  
}

function getHoveredCompletion_2818583849(self_2818583850, mousePosWindow_2818583851) {
  var result_2818583852 = 0;

  BeforeRet: {
    Label1: {
      var item_2818583875 = {Field0: 0, Field1: null};
      var i_536872691 = 0;
      var L_536872692 = (self_2818583850.lastCompletionWidgets).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872691 < L_536872692)) break Label3;
            item_2818583875 = self_2818583850.lastCompletionWidgets[chckIndx(i_536872691, 0, (self_2818583850.lastCompletionWidgets).length - 1)];
            if (contains_2130706614(item_2818583875.Field1.lastBounds, mousePosWindow_2818583851)) {
            result_2818583852 = item_2818583875.Field0;
            break BeforeRet;
            }
            
            i_536872691 = addInt(i_536872691, 1);
            if (!(((self_2818583850.lastCompletionWidgets).length == L_536872692))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818583852 = 0;
    break BeforeRet;
  };

  return result_2818583852;

}

function charWidth_3489662156(self_3489662157) {
  var result_3489662158 = 0.0;

    result_3489662158 = self_3489662157.mCharWidth;

  return result_3489662158;

}

function charWidth_2768240796(self_2768240797) {
  var result_2768240798 = 0.0;

  return result_2768240798;

}

function charWidth_2768240799(self_2768240797) {
  var result_2768240800 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240797);
    if (isObj(self_2768240797.m_type, NTI3489660939)) {
    result_2768240800 = charWidth_3489662156(self_2768240797);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240797.m_type, NTI2768240644)) {
    result_2768240800 = charWidth_2768240796(self_2768240797);
    break BeforeRet;
    }
    }
  };

  return result_2768240800;

}

function isThickCursor_2818583612(self_2818583613) {
  var result_2818583614 = false;

  BeforeRet: {
    result_2818583614 = getOption_2818583615(self_2818583613.editor, getContextWithMode_2818583609(self_2818583613, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    break BeforeRet;
  };

  return result_2818583614;

}

function some_2818593784(val_2818593786) {
  var result_2818593791 = ({val: {Field0: 0, Field1: 0}, has: false});

    result_2818593791.has = true;
    result_2818593791.val = nimCopy(result_2818593791.val, val_2818593786, NTI2818585311);

  return result_2818593791;

}

function none_2818593797() {
  var result_2818593804 = ({val: {Field0: 0, Field1: 0}, has: false});

  return result_2818593804;

}

function getCursorAtPixelPos_2818593697(self_2818593698, mousePosWindow_2818593699) {
  var result_2818593705 = ({val: {Field0: 0, Field1: 0}, has: false});

  BeforeRet: {
    var mousePosContent_2818593750 = HEX2D_2147484180(mousePosWindow_2818593699, xy_2147483680(self_2818593698.lastContentBounds));
    Label1: {
      var li_2818593756 = 0;
      var line_2818593757 = null;
      var i_536872699 = 0;
      var L_536872700 = (self_2818593698.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872699 < L_536872700)) break Label3;
            li_2818593756 = i_536872699;
            line_2818593757 = self_2818593698.lastRenderedLines[chckIndx(i_536872699, 0, (self_2818593698.lastRenderedLines).length - 1)];
            var startOffset_2818593758 = 0;
            Label4: {
              var i_2818593764 = 0;
              var part_2818593765 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_536872696 = 0;
              var L_536872697 = (line_2818593757.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872696 < L_536872697)) break Label6;
                    i_2818593764 = i_536872696;
                    part_2818593765 = nimCopy(part_2818593765, line_2818593757.parts[chckIndx(i_536872696, 0, (line_2818593757.parts).length - 1)], NTI2818572422);
                    if ((contains_2130706614(part_2818593765.bounds, mousePosContent_2818593750) || ((((i_2818593764 == (line_2818593757.parts).length - 1) && (part_2818593765.bounds.y <= mousePosContent_2818593750.y)) && (mousePosContent_2818593750.y <= (part_2818593765.bounds.y + part_2818593765.bounds.h))) && (part_2818593765.bounds.x <= mousePosContent_2818593750.x)))) {
                    var offsetFromLeft_2818593769 = [((mousePosContent_2818593750.x - part_2818593765.bounds.x) / charWidth_2768240799(self_2818593698.editor.platform))];
                    if (isThickCursor_2818583612(self_2818593698)) {
                    HEX2DHEX3D_2818593770(offsetFromLeft_2818593769, 0, 0.0);
                    }
                    else {
                    HEX2BHEX3D_855640304(offsetFromLeft_2818593769, 0, 0.5);
                    }
                    
                    var index_2818593783 = clamp_1660945119(((offsetFromLeft_2818593769[0]) | 0), 0, (part_2818593765.text).length);
                    result_2818593705 = nimCopy(result_2818593705, some_2818593784({Field0: line_2818593757.index, Field1: addInt(startOffset_2818593758, index_2818593783)}), NTI2818585265);
                    break BeforeRet;
                    }
                    
                    startOffset_2818593758 = addInt(startOffset_2818593758, (part_2818593765.text).length);
                    i_536872696 = addInt(i_536872696, 1);
                    if (!(((line_2818593757.parts).length == L_536872697))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872699 = addInt(i_536872699, 1);
            if (!(((self_2818593698.lastRenderedLines).length == L_536872700))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818593705 = nimCopy(result_2818593705, none_2818593797(), NTI2818585265);
    break BeforeRet;
  };

  return result_2818593705;

}

function isSome_2818593841(self_2818593843) {
  var result_2818593844 = false;

    result_2818593844 = self_2818593843.has;

  return result_2818593844;

}

function isNone_2818593866(self_2818593868) {
  var result_2818593869 = false;

    result_2818593869 = !(self_2818593868.has);

  return result_2818593869;

}

function get_2818593858(self_2818593860) {
  var result_2818593861 = {Field0: 0, Field1: 0};

    if (isNone_2818593866(self_2818593860)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818593861 = self_2818593860.val;

  return result_2818593861;

}

function handleMousePress_2818593814(self_2818593815, button_2818593816, mousePosWindow_2818593817) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
        var Temporary6;

  BeforeRet: {
    if ((!((self_2818593815.lastCompletionsWidget == null)) && contains_2130706614(self_2818593815.lastCompletionsWidget.lastBounds, mousePosWindow_2818593817))) {
    if (((button_2818593816 == 0) || (button_2818593816 == 1))) {
    self_2818593815.selectedCompletion = getHoveredCompletion_2818583849(self_2818593815, mousePosWindow_2818593817);
    markDirty_2415919143(self_2818593815);
    }
    
    break BeforeRet;
    }
    
      if (!(button_2818593816 == 0)) Temporary1 = false; else {        var oHEX60gensym977_2818593836 = getCursorAtPixelPos_2818593697(self_2818593815, mousePosWindow_2818593817);
        if (!isSome_2818593841(oHEX60gensym977_2818593836)) Temporary2 = false; else {          var cursor_2818593881 = nimCopy(null, get_2818593858(oHEX60gensym977_2818593836), NTI2449473546);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572811(self_2818593815, toSelection_2449474032(cursor_2818593881));
    }
    
      if (!(button_2818593816 == 3)) Temporary3 = false; else {        var oHEX60gensym979_2818593888 = getCursorAtPixelPos_2818593697(self_2818593815, mousePosWindow_2818593817);
        if (!isSome_2818593841(oHEX60gensym979_2818593888)) Temporary4 = false; else {          var cursor_2818593911 = nimCopy(null, get_2818593858(oHEX60gensym979_2818593888), NTI2449473546);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    selectInside_2818585746(self_2818593815, cursor_2818593911);
    }
    
      if (!(button_2818593816 == 4)) Temporary5 = false; else {        var oHEX60gensym980_2818593918 = getCursorAtPixelPos_2818593697(self_2818593815, mousePosWindow_2818593817);
        if (!isSome_2818593841(oHEX60gensym980_2818593918)) Temporary6 = false; else {          var cursor_2818593941 = nimCopy(null, get_2818593858(oHEX60gensym980_2818593918), NTI2449473546);
          Temporary6 = true;        }        Temporary5 = Temporary6;      }    if (Temporary5) {
    selectLine_2818585859(self_2818593815, cursor_2818593941.Field0);
    }
    
  };

  
}

function handleMousePress_2415919274(self_2415919275, button_2415919276, mousePosWindow_2415919277) {
  
}

function handleMousePress_2415919278(self_2415919275, button_2415919276, mousePosWindow_2415919277) {
    chckNilDisp(self_2415919275);
    if (isObj(self_2415919275.m_type, NTI3254780014)) {
    handleMousePress_3254793642(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    else {
    if (isObj(self_2415919275.m_type, NTI2969568641)) {
    handleMousePress_2969584575(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    else {
    if (isObj(self_2415919275.m_type, NTI2818572510)) {
    handleMousePress_2818593814(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    else {
    if (isObj(self_2415919275.m_type, NTI2415919108)) {
    handleMousePress_2415919274(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    }}}

  
}

function handleMouseRelease_3254793927(self_3254793928, button_3254793929, mousePosWindow_3254793930) {
      var Temporary1;
        var Temporary2;

      if (!(self_3254793928.showCompletions && (button_3254793929 == 0))) Temporary1 = false; else {        var oHEX60gensym193_3254793937 = getItemAtPixelPosition_3254793046(self_3254793928, mousePosWindow_3254793930);
        if (!isSome_1191185117(oHEX60gensym193_3254793937)) Temporary2 = false; else {          var item_3254793960 = get_1191185211(oHEX60gensym193_3254793937);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    if ((self_3254793928.selectedCompletion == item_3254793960)) {
    applySelectedCompletion_3254780253(self_3254793928);
    markDirty_2415919143(self_3254793928);
    }
    
    }
    

  
}

function handleMouseRelease_2969584714(self_2969584715, button_2969584716, mousePosWindow_2969584717) {
      var Temporary1;
        var Temporary2;

      if (!(button_2969584716 == 0)) Temporary1 = false; else {        var oHEX60gensym1031_2969584724 = getItemAtPixelPosition_2969584527(self_2969584715, mousePosWindow_2969584717);
        if (!isSome_1191185117(oHEX60gensym1031_2969584724)) Temporary2 = false; else {          var item_2969584747 = get_1191185211(oHEX60gensym1031_2969584724);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    if ((self_2969584715.selectedCompletion == item_2969584747)) {
    applySelectedCompletion_2969581476(self_2969584715);
    markDirty_2415919143(self_2969584715);
    }
    
    }
    

  
}

function handleMouseRelease_2818593942(self_2818593943, button_2818593944, mousePosWindow_2818593945) {
    if ((((button_2818593944 == 0) && !((self_2818593943.lastCompletionsWidget == null))) && contains_2130706614(self_2818593943.lastCompletionsWidget.lastBounds, mousePosWindow_2818593945))) {
    var oldSelectedCompletion_2818593953 = self_2818593943.selectedCompletion;
    self_2818593943.selectedCompletion = getHoveredCompletion_2818583849(self_2818593943, mousePosWindow_2818593945);
    if ((self_2818593943.selectedCompletion == oldSelectedCompletion_2818593953)) {
    applySelectedCompletion_2818592969(self_2818593943);
    markDirty_2415919143(self_2818593943);
    }
    
    }
    

  
}

function handleMouseRelease_2415919279(self_2415919280, button_2415919281, mousePosWindow_2415919282) {
  
}

function handleMouseRelease_2415919283(self_2415919280, button_2415919281, mousePosWindow_2415919282) {
    chckNilDisp(self_2415919280);
    if (isObj(self_2415919280.m_type, NTI3254780014)) {
    handleMouseRelease_3254793927(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    else {
    if (isObj(self_2415919280.m_type, NTI2969568641)) {
    handleMouseRelease_2969584714(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    else {
    if (isObj(self_2415919280.m_type, NTI2818572510)) {
    handleMouseRelease_2818593942(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    else {
    if (isObj(self_2415919280.m_type, NTI2415919108)) {
    handleMouseRelease_2415919279(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    }}}

  
}

function handleMouseMove_3254793961(self_3254793962, mousePosWindow_3254793963, mousePosDelta_3254793964, modifiers_3254793965, buttons_3254793966) {
      var Temporary1;
        var Temporary2;
                var Temporary7;
                var Temporary8;

  BeforeRet: {
      if (!self_3254793962.showCompletions) Temporary1 = false; else {        var oHEX60gensym194_3254793969 = getItemAtPixelPosition_3254793046(self_3254793962, mousePosWindow_3254793963);
        if (!isSome_1191185117(oHEX60gensym194_3254793969)) Temporary2 = false; else {          var item_3254793992 = get_1191185211(oHEX60gensym194_3254793969);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    if ((buttons_3254793966[1] != undefined)) {
    self_3254793962.selectedCompletion = item_3254793992;
    markDirty_2415919143(self_3254793962);
    }
    
    break BeforeRet;
    }
    
    if ((buttons_3254793966[0] != undefined)) {
    Label3: {
      var rootNode_3254794004 = null;
      var colontmp__536872704 = [];
      colontmp__536872704 = rootNodes_3271557492(self_3254793962.document.model);
      var i_536872705 = 0;
      var L_536872706 = (colontmp__536872704).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872705 < L_536872706)) break Label5;
            rootNode_3254794004 = colontmp__536872704[chckIndx(i_536872705, 0, (colontmp__536872704).length - 1)];
            Label6: {
              var cell_3254794077 = getOrDefault_3254793754(self_3254793962.nodeToCell, rootNode_3254794004.id, null);
              if ((cell_3254794077 == null)) {
              break Label6;
              }
              
                var oHEX60gensym197_3254794083 = getLeafCellContainingPoint_3254793091(self_3254793962, cell_3254794077, mousePosWindow_3254793963);
                if (!isSome_3338666868(oHEX60gensym197_3254794083)) Temporary7 = false; else {                  var leafCell_3254794106 = get_3338666888(oHEX60gensym197_3254794083);
                  Temporary7 = true;                }              if (Temporary7) {
              if ((leafCell_3254794106.line < (self_3254793962.logicalLines).length - 1)) {
                var oHEX60gensym198_3254794112 = getCursorInLine_3254780244(self_3254793962, leafCell_3254794106.line, mousePosWindow_3254793963.x);
                if (!isSome_3254793888(oHEX60gensym198_3254794112)) Temporary8 = false; else {                  var newCursor_3254794135 = nimCopy(null, get_3254786205(oHEX60gensym198_3254794112), NTI3254779907);
                  Temporary8 = true;                }              if (Temporary8) {
              cursorHEX3D_3254784731(self_3254793962, selectCursor_3254780275(cursor_3254784719(self_3254793962), newCursor_3254794135, true));
              markDirty_2415919143(self_3254793962);
              break Label3;
              }
              
              }
              
              cursorHEX3D_3254784731(self_3254793962, selectCursor_3254780275(cursor_3254784719(self_3254793962), toCursor_3254780264(leafCell_3254794106, true), true));
              markDirty_2415919143(self_3254793962);
              break Label3;
              }
              
            };
            i_536872705 = addInt(i_536872705, 1);
            if (!(((colontmp__536872704).length == L_536872706))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  };

  
}

function handleMouseMove_2969584748(self_2969584749, mousePosWindow_2969584750, mousePosDelta_2969584751, modifiers_2969584752, buttons_2969584753) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

  BeforeRet: {
      var oHEX60gensym1032_2969584756 = getItemAtPixelPosition_2969584527(self_2969584749, mousePosWindow_2969584750);
      if (!isSome_1191185117(oHEX60gensym1032_2969584756)) Temporary1 = false; else {        var item_2969584779 = get_1191185211(oHEX60gensym1032_2969584756);
        Temporary1 = true;      }    if (Temporary1) {
    if ((buttons_2969584753[1] != undefined)) {
    self_2969584749.selectedCompletion = item_2969584779;
    markDirty_2415919143(self_2969584749);
    }
    
    break BeforeRet;
    }
    
    if ((buttons_2969584753[0] != undefined)) {
    var mousePosContent_2969584832 = HEX2D_2147484180(mousePosWindow_2969584750, xy_2147483680(self_2969584749.lastBounds));
      if (!!(isEditing_2969575154(self_2969584749))) Temporary2 = false; else {        var oHEX60gensym1035_2969584835 = getNodeAtPixelPosition_2969578451(self_2969584749, mousePosContent_2969584832);
        if (!isSome_3003123546(oHEX60gensym1035_2969584835)) Temporary3 = false; else {          var n_2969584858 = get_3003123566(oHEX60gensym1035_2969584835);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969584749, n_2969584858);
    }
    
    }
    
  };

  
}

function handleMouseMove_2818593954(self_2818593955, mousePosWindow_2818593956, mousePosDelta_2818593957, modifiers_2818593958, buttons_2818593959) {
      var Temporary1;
        var Temporary2;

  BeforeRet: {
    if ((!((self_2818593955.lastCompletionsWidget == null)) && contains_2130706614(self_2818593955.lastCompletionsWidget.lastBounds, mousePosWindow_2818593956))) {
    if ((buttons_2818593959[1] != undefined)) {
    self_2818593955.selectedCompletion = getHoveredCompletion_2818583849(self_2818593955, mousePosWindow_2818593956);
    markDirty_2415919143(self_2818593955);
    }
    
    break BeforeRet;
    }
    
      if (!(buttons_2818593959[0] != undefined)) Temporary1 = false; else {        var oHEX60gensym983_2818593974 = getCursorAtPixelPos_2818593697(self_2818593955, mousePosWindow_2818593956);
        if (!isSome_2818593841(oHEX60gensym983_2818593974)) Temporary2 = false; else {          var cursor_2818593997 = nimCopy(null, get_2818593858(oHEX60gensym983_2818593974), NTI2449473546);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572811(self_2818593955, toSelection_2449474035(cursor_2818593997, selection_2818572805(self_2818593955), 3));
    }
    
  };

  
}

function handleMouseMove_2415919284(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289) {
  
}

function handleMouseMove_2415919290(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289) {
    chckNilDisp(self_2415919285);
    if (isObj(self_2415919285.m_type, NTI3254780014)) {
    handleMouseMove_3254793961(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    else {
    if (isObj(self_2415919285.m_type, NTI2969568641)) {
    handleMouseMove_2969584748(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    else {
    if (isObj(self_2415919285.m_type, NTI2818572510)) {
    handleMouseMove_2818593954(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    else {
    if (isObj(self_2415919285.m_type, NTI2415919108)) {
    handleMouseMove_2415919284(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    }}}

  
}

function HEX26_3187671358(x_3187671360, y_3187671361) {
  var result_3187671362 = [];

    result_3187671362 = new Array(chckRange(addInt((x_3187671360).length, (y_3187671361).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3187671360).length, (y_3187671361).length), 0, 2147483647) ; ++i) { result_3187671362[i] = null; }    Label1: {
      var i_3187671380 = 0;
      var colontmp__536872709 = 0;
      colontmp__536872709 = subInt((x_3187671360).length, 1);
      var res_536872710 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872710 <= colontmp__536872709)) break Label3;
            i_3187671380 = res_536872710;
            result_3187671362[chckIndx(i_3187671380, 0, (result_3187671362).length - 1)] = x_3187671360[chckIndx(i_3187671380, 0, (x_3187671360).length - 1)];
            res_536872710 = addInt(res_536872710, 1);
          }
      };
    };
    Label4: {
      var i_3187671388 = 0;
      var colontmp__536872713 = 0;
      colontmp__536872713 = subInt((y_3187671361).length, 1);
      var res_536872714 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536872714 <= colontmp__536872713)) break Label6;
            i_3187671388 = res_536872714;
            result_3187671362[chckIndx(addInt(i_3187671388, (x_3187671360).length), 0, (result_3187671362).length - 1)] = y_3187671361[chckIndx(i_3187671388, 0, (y_3187671361).length - 1)];
            res_536872714 = addInt(res_536872714, 1);
          }
      };
    };

  return result_3187671362;

}

function getEventHandlers_3204448577(self_3204448578) {
  var result_3204448579 = [];

  BeforeRet: {
    result_3204448579 = nimCopy(null, HEX26_3187671358(getEventHandlers_2415919261(self_3204448578.textEditor), [self_3204448578.eventHandler]), NTI3187671275);
    break BeforeRet;
  };

  return result_3204448579;

}

function getEventHandlers_3187671351(self_3187671352) {
  var result_3187671353 = [];

  BeforeRet: {
    result_3187671353 = nimCopy(null, HEX26_3187671358(getEventHandlers_2415919261(self_3187671352.textEditor), [self_3187671352.eventHandler]), NTI3187671275);
    break BeforeRet;
  };

  return result_3187671353;

}

function getEventHandlers_2483028020(self_2483028021) {
  var result_2483028022 = [];

  BeforeRet: {
    result_2483028022 = nimCopy(null, [self_2483028021.eventHandler], NTI2466250766);
    break BeforeRet;
  };

  return result_2483028022;

}

function getEventHandlers_2483028027(self_2483028021) {
  var result_2483028028 = [];

  BeforeRet: {
    chckNilDisp(self_2483028021);
    if (isObj(self_2483028021.m_type, NTI3204448260)) {
    result_2483028028 = getEventHandlers_3204448577(self_2483028021);
    break BeforeRet;
    }
    else {
    if (isObj(self_2483028021.m_type, NTI3187671062)) {
    result_2483028028 = getEventHandlers_3187671351(self_2483028021);
    break BeforeRet;
    }
    else {
    if (isObj(self_2483028021.m_type, NTI2483027972)) {
    result_2483028028 = getEventHandlers_2483028020(self_2483028021);
    break BeforeRet;
    }
    }}
  };

  return result_2483028028;

}

function handleScroll_3204448624(self_3204448625, scroll_3204448626, mousePosWindow_3204448627) {
    self_3204448625.selected = clamp_1660945119(subInt(self_3204448625.selected, ((scroll_3204448626.y) | 0)), 0, subInt((self_3204448625.completions).length, 1));

  
}

function handleScroll_3187671816(self_3187671817, scroll_3187671818, mousePosWindow_3187671819) {
    self_3187671817.selected = clamp_1660945119(subInt(self_3187671817.selected, ((scroll_3187671818.y) | 0)), 0, subInt((self_3187671817.completions).length, 1));

  
}

function handleScroll_2483028029(self_2483028030, scroll_2483028031, mousePosWindow_2483028032) {
  
}

function handleScroll_2483028033(self_2483028030, scroll_2483028031, mousePosWindow_2483028032) {
    chckNilDisp(self_2483028030);
    if (isObj(self_2483028030.m_type, NTI3204448260)) {
    handleScroll_3204448624(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    else {
    if (isObj(self_2483028030.m_type, NTI3187671062)) {
    handleScroll_3187671816(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    else {
    if (isObj(self_2483028030.m_type, NTI2483027972)) {
    handleScroll_2483028029(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    }}

  
}

function none_3204448528() {
  var result_3204448535 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  return result_3204448535;

}

function some_3204448544(val_3204448546) {
  var result_3204448547 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

    result_3204448547.has = true;
    result_3204448547.val = nimCopy(result_3204448547.val, val_3204448546, NTI2969568638);

  return result_3204448547;

}

function getItemAtPixelPosition_3204448519(self_3204448520, posWindow_3204448521) {
  var result_3204448527 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  BeforeRet: {
    result_3204448527 = nimCopy(result_3204448527, none_3204448528(), NTI3204448400);
    Label1: {
      var index_3204448539 = 0;
      var rect_3204448540 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872718 = 0;
      var L_536872719 = (self_3204448520.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872718 < L_536872719)) break Label3;
            index_3204448539 = self_3204448520.lastItems[chckIndx(i_536872718, 0, (self_3204448520.lastItems).length - 1)]["Field0"];
            rect_3204448540 = self_3204448520.lastItems[chckIndx(i_536872718, 0, (self_3204448520.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(rect_3204448540, posWindow_3204448521) && (0 <= index_3204448539)) && (index_3204448539 <= (self_3204448520.completions).length - 1))) {
            result_3204448527 = nimCopy(result_3204448527, some_3204448544(self_3204448520.completions[chckIndx(index_3204448539, 0, (self_3204448520.completions).length - 1)]), NTI3204448400);
            break BeforeRet;
            }
            
            i_536872718 = addInt(i_536872718, 1);
            if (!(((self_3204448520.lastItems).length == L_536872719))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3204448527;

}

function isSome_3204448651(self_3204448653) {
  var result_3204448654 = false;

    result_3204448654 = self_3204448653.has;

  return result_3204448654;

}

function isNone_3204448676(self_3204448678) {
  var result_3204448679 = false;

    result_3204448679 = !(self_3204448678.has);

  return result_3204448679;

}

function get_3204448668(self_3204448670) {
  var result_3204448671 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});

    if (isNone_3204448676(self_3204448670)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3204448671 = self_3204448670.val;

  return result_3204448671;

}

function handleMousePress_3204448636(self_3204448637, button_3204448638, mousePosWindow_3204448639) {
      var Temporary1;
    var Temporary2;

    if ((button_3204448638 == 0)) {
      var oHEX60gensym5_3204448646 = getItemAtPixelPosition_3204448519(self_3204448637, mousePosWindow_3204448639);
      if (!isSome_3204448651(oHEX60gensym5_3204448646)) Temporary1 = false; else {        var item_3204448691 = nimCopy(null, get_3204448668(oHEX60gensym5_3204448646), NTI2969568638);
        Temporary1 = true;      }    if (Temporary1) {
    var Temporary2 = item_3204448691;
    if (ConstSet340[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568637)); }
    self_3204448637.handleSymbolSelected(Temporary2.id);
    popPopup_1291849115(self_3204448637.editor, self_3204448637);
    }
    
    }
    

  
}

function none_3187671259() {
  var result_3187671265 = ({val: null});

  return result_3187671265;

}

function some_3187671293(val_3187671295) {
  var result_3187671296 = ({val: null});

    if (!(!((val_3187671295 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3187671296.val = val_3187671295;

  return result_3187671296;

}

function getItemAtPixelPosition_3187671251(self_3187671252, posWindow_3187671253) {
  var result_3187671258 = ({val: null});

  BeforeRet: {
    result_3187671258 = nimCopy(result_3187671258, none_3187671259(), NTI3187671186);
    Label1: {
      var index_3187671288 = 0;
      var rect_3187671289 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872722 = 0;
      var L_536872723 = (self_3187671252.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872722 < L_536872723)) break Label3;
            index_3187671288 = self_3187671252.lastItems[chckIndx(i_536872722, 0, (self_3187671252.lastItems).length - 1)]["Field0"];
            rect_3187671289 = self_3187671252.lastItems[chckIndx(i_536872722, 0, (self_3187671252.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(rect_3187671289, posWindow_3187671253) && (0 <= index_3187671288)) && (index_3187671288 <= (self_3187671252.completions).length - 1))) {
            result_3187671258 = nimCopy(result_3187671258, some_3187671293(self_3187671252.completions[chckIndx(index_3187671288, 0, (self_3187671252.completions).length - 1)]), NTI3187671186);
            break BeforeRet;
            }
            
            i_536872722 = addInt(i_536872722, 1);
            if (!(((self_3187671252.lastItems).length == L_536872723))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3187671258;

}

function isSome_3187671843(self_3187671845) {
  var result_3187671846 = false;

    result_3187671846 = !((self_3187671845.val == null));

  return result_3187671846;

}

function isNone_3187671871(self_3187671873) {
  var result_3187671874 = false;

    result_3187671874 = (self_3187671873.val == null);

  return result_3187671874;

}

function get_3187671863(self_3187671865) {
  var result_3187671866 = null;

    if (isNone_3187671871(self_3187671865)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671866 = self_3187671865["val"];

  return result_3187671866;

}

function handleMousePress_3187671828(self_3187671829, button_3187671830, mousePosWindow_3187671831) {
      var Temporary1;

    if ((button_3187671830 == 0)) {
      var oHEX60gensym63_3187671838 = getItemAtPixelPosition_3187671251(self_3187671829, mousePosWindow_3187671831);
      if (!isSome_3187671843(oHEX60gensym63_3187671838)) Temporary1 = false; else {        var item_3187671889 = get_3187671863(oHEX60gensym63_3187671838);
        Temporary1 = true;      }    if (Temporary1) {
    if (!((self_3187671829.handleItemConfirmed == null))) {
    self_3187671829.handleItemConfirmed(item_3187671889);
    }
    
    popPopup_1291849115(self_3187671829.editor, self_3187671829);
    }
    
    }
    

  
}

function handleMousePress_2483028034(self_2483028035, button_2483028036, mousePosWindow_2483028037) {
  
}

function handleMousePress_2483028038(self_2483028035, button_2483028036, mousePosWindow_2483028037) {
    chckNilDisp(self_2483028035);
    if (isObj(self_2483028035.m_type, NTI3204448260)) {
    handleMousePress_3204448636(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    else {
    if (isObj(self_2483028035.m_type, NTI3187671062)) {
    handleMousePress_3187671828(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    else {
    if (isObj(self_2483028035.m_type, NTI2483027972)) {
    handleMousePress_2483028034(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    }}

  
}

function handleMouseRelease_3204448694(self_3204448695, button_3204448696, mousePosWindow_3204448697) {
  
}

function handleMouseRelease_3187671895(self_3187671896, button_3187671897, mousePosWindow_3187671898) {
  
}

function handleMouseRelease_2483028039(self_2483028040, button_2483028041, mousePosWindow_2483028042) {
  
}

function handleMouseRelease_2483028043(self_2483028040, button_2483028041, mousePosWindow_2483028042) {
    chckNilDisp(self_2483028040);
    if (isObj(self_2483028040.m_type, NTI3204448260)) {
    handleMouseRelease_3204448694(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    else {
    if (isObj(self_2483028040.m_type, NTI3187671062)) {
    handleMouseRelease_3187671895(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    else {
    if (isObj(self_2483028040.m_type, NTI2483027972)) {
    handleMouseRelease_2483028039(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    }}

  
}

function handleMouseMove_3204448698(self_3204448699, mousePosWindow_3204448700, mousePosDelta_3204448701, modifiers_3204448702, buttons_3204448703) {
  
}

function handleMouseMove_3187671899(self_3187671900, mousePosWindow_3187671901, mousePosDelta_3187671902, modifiers_3187671903, buttons_3187671904) {
  
}

function handleMouseMove_2483028044(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049) {
  
}

function handleMouseMove_2483028050(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049) {
    chckNilDisp(self_2483028045);
    if (isObj(self_2483028045.m_type, NTI3204448260)) {
    handleMouseMove_3204448698(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    else {
    if (isObj(self_2483028045.m_type, NTI3187671062)) {
    handleMouseMove_3187671899(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    else {
    if (isObj(self_2483028045.m_type, NTI2483027972)) {
    handleMouseMove_2483028044(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    }}

  
}
async function initAsync_2801795119(self_2801795120) {
  var result_2801795122 = null;

  BeforeRet: {
    var _ = (await loadScript("scripting_runtime.js"));
    if ((window.localStorage.getItem("config.js") !== null)) {
    var config_2801795133 = loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115]);
    var contentStrict_2801795134 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(config_2801795133 || []);
    rawEcho(contentStrict_2801795134);
    var allowEval_2801795135 = confirm("You are about to eval() some javascript (config.js). Look in the console to see what's in there.");
    if (allowEval_2801795135) {
    var _ = (await loadScriptContent(toJSStr(config_2801795133)));
    }
    else {
      var fmtRes_2801795144 = mnewString(0);
      fmtRes_2801795144.push.apply(fmtRes_2801795144, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2801795144, NTI33554449)]);
    }
    
    }
    else {
    var _ = (await loadScript("config.js"));
    }
    
    result_2801795122 = undefined;
    break BeforeRet;
  };

  return result_2801795122;

}

function init_2801795167(self_2801795168, path_2801795169) {
    var _ = initAsync_2801795119(self_2801795168);

  
}

function init_2751463435(self_2751463436, path_2751463437) {
  
}

function init_2751463438(self_2751463436, path_2751463437) {
    chckNilDisp(self_2751463436);
    if (isObj(self_2751463436.m_type, NTI2801795076)) {
    init_2801795167(self_2751463436, path_2751463437);
    }
    else {
    if (isObj(self_2751463436.m_type, NTI2751463428)) {
    init_2751463435(self_2751463436, path_2751463437);
    }
    }

  
}

function reload_2801795170(self_2801795171) {
  
}

function reload_2751463439(self_2751463440) {
  
}

function reload_2751463441(self_2751463440) {
    chckNilDisp(self_2751463440);
    if (isObj(self_2751463440.m_type, NTI2801795076)) {
    reload_2801795170(self_2751463440);
    }
    else {
    if (isObj(self_2751463440.m_type, NTI2751463428)) {
    reload_2751463439(self_2751463440);
    }
    }

  
}

function handleUnknownPopupAction_2801795172(self_2801795173, popup_2801795174, action_2801795175, arg_2801795176) {
  var result_2801795177 = false;

    var action_2801795178 = toJSStr(action_2801795175);
    var arg_2801795179 = toJSStr(HEX24_1627394481(arg_2801795176));
    return window.handleUnknownPopupAction(popup_2801795174, action_2801795178,  JSON.parse(arg_2801795179));

  return result_2801795177;

}

function handleUnknownPopupAction_2751463442(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446) {
  var result_2751463447 = false;

  return result_2751463447;

}

function handleUnknownPopupAction_2751463448(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446) {
  var result_2751463449 = false;

  BeforeRet: {
    chckNilDisp(self_2751463443);
    if (isObj(self_2751463443.m_type, NTI2801795076)) {
    result_2751463449 = handleUnknownPopupAction_2801795172(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463443.m_type, NTI2751463428)) {
    result_2751463449 = handleUnknownPopupAction_2751463442(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446);
    break BeforeRet;
    }
    }
  };

  return result_2751463449;

}

function handleUnknownDocumentEditorAction_2801795180(self_2801795181, editor_2801795182, action_2801795183, arg_2801795184) {
  var result_2801795185 = false;

    var action_2801795186 = toJSStr(action_2801795183);
    var arg_2801795187 = toJSStr(HEX24_1627394481(arg_2801795184));
    return window.handleUnknownDocumentEditorAction(editor_2801795182, action_2801795186, JSON.parse(arg_2801795187));

  return result_2801795185;

}

function handleUnknownDocumentEditorAction_2751463450(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454) {
  var result_2751463455 = false;

  return result_2751463455;

}

function handleUnknownDocumentEditorAction_2751463456(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454) {
  var result_2751463457 = false;

  BeforeRet: {
    chckNilDisp(self_2751463451);
    if (isObj(self_2751463451.m_type, NTI2801795076)) {
    result_2751463457 = handleUnknownDocumentEditorAction_2801795180(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463451.m_type, NTI2751463428)) {
    result_2751463457 = handleUnknownDocumentEditorAction_2751463450(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454);
    break BeforeRet;
    }
    }
  };

  return result_2751463457;

}

function handleGlobalAction_2801795188(self_2801795189, action_2801795190, arg_2801795191) {
  var result_2801795192 = false;

    var action_2801795193 = toJSStr(action_2801795190);
    var arg_2801795194 = toJSStr(HEX24_1627394481(arg_2801795191));
    return window.handleGlobalAction(action_2801795193, JSON.parse(arg_2801795194));

  return result_2801795192;

}

function handleGlobalAction_2751463458(self_2751463459, action_2751463460, arg_2751463461) {
  var result_2751463462 = false;

  return result_2751463462;

}

function handleGlobalAction_2751463463(self_2751463459, action_2751463460, arg_2751463461) {
  var result_2751463464 = false;

  BeforeRet: {
    chckNilDisp(self_2751463459);
    if (isObj(self_2751463459.m_type, NTI2801795076)) {
    result_2751463464 = handleGlobalAction_2801795188(self_2751463459, action_2751463460, arg_2751463461);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463459.m_type, NTI2751463428)) {
    result_2751463464 = handleGlobalAction_2751463458(self_2751463459, action_2751463460, arg_2751463461);
    break BeforeRet;
    }
    }
  };

  return result_2751463464;

}

function calculateBounds_2785018536(self_2785018537, container_2785018538) {
  var result_2785018539 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var left_2785018540 = ((container_2785018538.x + (self_2785018537.anchor.Field0.x * container_2785018538.w)) + self_2785018537.left);
    var top_2785018541 = ((container_2785018538.y + (self_2785018537.anchor.Field0.y * container_2785018538.h)) + self_2785018537.top);
    var right_2785018542 = ((container_2785018538.x + (self_2785018537.anchor.Field1.x * container_2785018538.w)) + self_2785018537.right);
    var bottom_2785018543 = ((container_2785018538.y + (self_2785018537.anchor.Field1.y * container_2785018538.h)) + self_2785018537.bottom);
    var px_2785018544 = (self_2785018537.pivot.x * (right_2785018542 - left_2785018540));
    var py_2785018545 = (self_2785018537.pivot.y * (bottom_2785018543 - top_2785018541));
    result_2785018539.x = (left_2785018540 - px_2785018544);
    result_2785018539.y = (top_2785018541 - py_2785018545);
    result_2785018539.w = (right_2785018542 - left_2785018540);
    result_2785018539.h = (bottom_2785018543 - top_2785018541);

  return result_2785018539;

}

function formatValue_2785018301(result_2785018303, result_2785018303_Idx, value_2785018304, specifier_2785018305) {
    formatValue_721420459(result_2785018303, result_2785018303_Idx, HEX24_2147483713(value_2785018304), specifier_2785018305);

  
}

function HEX24_2164261788(aHEX60gensym45_2164261789) {
  var result_2164261790 = [];

    result_2164261790 = nimCopy(null, (nsuToLowerAsciiStr([86,101,99,50]) || []).concat([40] || [],HEX24_2164261794(aHEX60gensym45_2164261789.x) || [],[44,32] || [],HEX24_2164261794(aHEX60gensym45_2164261789.y) || [],[41] || []), NTI33554449);

  return result_2164261790;

}

function addQuoted_2785018271(s_2785018273, s_2785018273_Idx, x_2785018274) {
    s_2785018273[s_2785018273_Idx].push.apply(s_2785018273[s_2785018273_Idx], HEX24_2164261788(x_2785018274));;

  
}

function HEX24_2785018239(x_2785018241) {
  var result_2785018242 = [[]];

    result_2785018242[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym14_2785018253 = 0;
    if ((0 < countHEX60gensym14_2785018253)) {
    result_2785018242[0].push.apply(result_2785018242[0], [44,32]);;
    }
    
    result_2785018242[0].push.apply(result_2785018242[0], [109,105,110]);;
    result_2785018242[0].push.apply(result_2785018242[0], [58,32]);;
    countHEX60gensym14_2785018253 += 1;
    addQuoted_2785018271(result_2785018242, 0, x_2785018241["Field0"]);
    if ((0 < countHEX60gensym14_2785018253)) {
    result_2785018242[0].push.apply(result_2785018242[0], [44,32]);;
    }
    
    result_2785018242[0].push.apply(result_2785018242[0], [109,97,120]);;
    result_2785018242[0].push.apply(result_2785018242[0], [58,32]);;
    countHEX60gensym14_2785018253 += 1;
    addQuoted_2785018271(result_2785018242, 0, x_2785018241["Field1"]);
    result_2785018242[0].push.apply(result_2785018242[0], [41]);;

  return result_2785018242[0];

}

function formatValue_2785018234(result_2785018236, result_2785018236_Idx, value_2785018237, specifier_2785018238) {
    formatValue_721420459(result_2785018236, result_2785018236_Idx, HEX24_2785018239(value_2785018237), specifier_2785018238);

  
}

function formatValue_2785018573(result_2785018575, result_2785018575_Idx, value_2785018576, specifier_2785018577) {
    formatValue_721420459(result_2785018575, result_2785018575_Idx, HEX24_2164261788(value_2785018576), specifier_2785018577);

  
}

function width_2785017922(self_2785017923) {
  var result_2785017924 = 0.0;

    result_2785017924 = (self_2785017923.right - self_2785017923.left);

  return result_2785017924;

}

function height_2785017925(self_2785017926) {
  var result_2785017927 = 0.0;

    result_2785017927 = (self_2785017926.bottom - self_2785017926.top);

  return result_2785017927;

}

function layoutWidget_2785018546(self_2785018547, container_2785018548, frameIndex_2785018549, options_2785018550) {
    var newBounds_2785018551 = [calculateBounds_2785018536(self_2785018547, container_2785018548)];
    if (self_2785018547.logLayout) {
    var fmtRes_2785018557 = [mnewString(0)];
    fmtRes_2785018557[0].push.apply(fmtRes_2785018557[0], [108,97,121,111,117,116,80,97,110,101,108,40]);;
    formatValue_2785018301(fmtRes_2785018557, 0, container_2785018548, []);
    fmtRes_2785018557[0].push.apply(fmtRes_2785018557[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018557, 0, frameIndex_2785018549, []);
    fmtRes_2785018557[0].push.apply(fmtRes_2785018557[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018234(fmtRes_2785018557, 0, self_2785018547.anchor, []);
    fmtRes_2785018557[0].push.apply(fmtRes_2785018557[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018573(fmtRes_2785018557, 0, self_2785018547.pivot, []);
    fmtRes_2785018557[0].push.apply(fmtRes_2785018557[0], [44,32]);;
    formatValue_2785018168(fmtRes_2785018557, 0, self_2785018547.left, []);
    fmtRes_2785018557[0].push.apply(fmtRes_2785018557[0], [44]);;
    formatValue_2785018168(fmtRes_2785018557, 0, self_2785018547.top, []);
    fmtRes_2785018557[0].push.apply(fmtRes_2785018557[0], [44,32]);;
    formatValue_2785018168(fmtRes_2785018557, 0, self_2785018547.right, []);
    fmtRes_2785018557[0].push.apply(fmtRes_2785018557[0], [44]);;
    formatValue_2785018168(fmtRes_2785018557, 0, self_2785018547.bottom, []);
    fmtRes_2785018557[0].push.apply(fmtRes_2785018557[0], [32,45,62,32]);;
    formatValue_2785018301(fmtRes_2785018557, 0, newBounds_2785018551[0], []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018557[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018609(newBounds_2785018551[0], self_2785018547.lastBounds))) {
    var fmtRes_2785018624 = [mnewString(0)];
    fmtRes_2785018624[0].push.apply(fmtRes_2785018624[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018301(fmtRes_2785018624, 0, self_2785018547.lastBounds, []);
    fmtRes_2785018624[0].push.apply(fmtRes_2785018624[0], [32,45,62,32]);;
    formatValue_2785018301(fmtRes_2785018624, 0, newBounds_2785018551[0], []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018624[0], NTI33554449)]);
    }
    
    }
    
    if (self_2785018547.sizeToContent) {
    whHEX3D_2147483689(newBounds_2785018551[0], vec2_2164261686());
    }
    
    if (!(HEX3DHEX3D_2785018609(newBounds_2785018551[0], self_2785018547.lastBounds))) {
    self_2785018547.lastBounds = nimCopy(self_2785018547.lastBounds, newBounds_2785018551[0], NTI2147483653);
    self_2785018547.lastBoundsChange = frameIndex_2785018549;
    }
    
    if ((((frameIndex_2785018549 <= self_2785018547.lastHierarchyChange) || (frameIndex_2785018549 <= self_2785018547.lastBoundsChange)) && (0 < (self_2785018547.children).length))) {
    var last_2785018642 = vec2_2164261725(self_2785018547.children[chckIndx(0, 0, (self_2785018547.children).length - 1)].left, self_2785018547.children[chckIndx(0, 0, (self_2785018547.children).length - 1)].top);
    Label1: {
      var i_2785018675 = 0;
      var c_2785018676 = null;
      var i_536872727 = 0;
      var L_536872728 = (self_2785018547.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872727 < L_536872728)) break Label3;
            i_2785018675 = i_536872727;
            c_2785018676 = self_2785018547.children[chckIndx(i_536872727, 0, (self_2785018547.children).length - 1)];
            switch (self_2785018547.layout.kind) {
            case 0:
              break;
            case 1:
              var width_2785018677 = width_2785017922(c_2785018676);
              c_2785018676.left = last_2785018642.x;
              c_2785018676.right = (last_2785018642.x + width_2785018677);
              break;
            case 2:
              var height_2785018678 = height_2785017925(c_2785018676);
              c_2785018676.top = last_2785018642.y;
              c_2785018676.bottom = (last_2785018642.y + height_2785018678);
              break;
            }
            layoutWidget_2785018531(c_2785018676, newBounds_2785018551[0], frameIndex_2785018549, options_2785018550);
            if (self_2785018547.sizeToContent) {
            newBounds_2785018551[0] = nimCopy(newBounds_2785018551[0], or_2147483728(newBounds_2785018551[0], c_2785018676.lastBounds), NTI2147483653);
            }
            
            last_2785018642.x = ((c_2785018676.lastBounds.x + c_2785018676.lastBounds.w) - newBounds_2785018551[0].x);
            last_2785018642.y = ((c_2785018676.lastBounds.y + c_2785018676.lastBounds.h) - newBounds_2785018551[0].y);
            i_536872727 = addInt(i_536872727, 1);
            if (!(((self_2785018547.children).length == L_536872728))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    if (!(HEX3DHEX3D_2785018609(newBounds_2785018551[0], self_2785018547.lastBounds))) {
    self_2785018547.lastBounds = nimCopy(self_2785018547.lastBounds, newBounds_2785018551[0], NTI2147483653);
    self_2785018547.lastBoundsChange = frameIndex_2785018549;
    }
    

  
}

function layoutWidget_2785018888(self_2785018889, container_2785018890, frameIndex_2785018891, options_2785018892) {
    var newBounds_2785018893 = calculateBounds_2785018536(self_2785018889, container_2785018890);
    if (self_2785018889.logLayout) {
    var fmtRes_2785018899 = [mnewString(0)];
    fmtRes_2785018899[0].push.apply(fmtRes_2785018899[0], [108,97,121,111,117,116,86,101,114,116,105,99,97,108,76,105,115,116,40]);;
    formatValue_2785018301(fmtRes_2785018899, 0, container_2785018890, []);
    fmtRes_2785018899[0].push.apply(fmtRes_2785018899[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018899, 0, frameIndex_2785018891, []);
    fmtRes_2785018899[0].push.apply(fmtRes_2785018899[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018234(fmtRes_2785018899, 0, self_2785018889.anchor, []);
    fmtRes_2785018899[0].push.apply(fmtRes_2785018899[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018573(fmtRes_2785018899, 0, self_2785018889.pivot, []);
    fmtRes_2785018899[0].push.apply(fmtRes_2785018899[0], [44,32]);;
    formatValue_2785018168(fmtRes_2785018899, 0, self_2785018889.left, []);
    fmtRes_2785018899[0].push.apply(fmtRes_2785018899[0], [44]);;
    formatValue_2785018168(fmtRes_2785018899, 0, self_2785018889.top, []);
    fmtRes_2785018899[0].push.apply(fmtRes_2785018899[0], [44,32]);;
    formatValue_2785018168(fmtRes_2785018899, 0, self_2785018889.right, []);
    fmtRes_2785018899[0].push.apply(fmtRes_2785018899[0], [44]);;
    formatValue_2785018168(fmtRes_2785018899, 0, self_2785018889.bottom, []);
    fmtRes_2785018899[0].push.apply(fmtRes_2785018899[0], [32,45,62,32]);;
    formatValue_2785018301(fmtRes_2785018899, 0, newBounds_2785018893, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018899[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018609(newBounds_2785018893, self_2785018889.lastBounds))) {
    var fmtRes_2785018954 = [mnewString(0)];
    fmtRes_2785018954[0].push.apply(fmtRes_2785018954[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018301(fmtRes_2785018954, 0, self_2785018889.lastBounds, []);
    fmtRes_2785018954[0].push.apply(fmtRes_2785018954[0], [32,45,62,32]);;
    formatValue_2785018301(fmtRes_2785018954, 0, newBounds_2785018893, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018954[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018609(newBounds_2785018893, self_2785018889.lastBounds))) {
    self_2785018889.lastBounds = nimCopy(self_2785018889.lastBounds, newBounds_2785018893, NTI2147483653);
    self_2785018889.lastBoundsChange = frameIndex_2785018891;
    }
    
    if (((frameIndex_2785018891 <= self_2785018889.lastHierarchyChange) || (frameIndex_2785018891 <= self_2785018889.lastBoundsChange))) {
    var lastY_2785018969 = 0.0;
    Label1: {
      var c_2785018973 = null;
      var i_536872731 = 0;
      var L_536872732 = (self_2785018889.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872731 < L_536872732)) break Label3;
            c_2785018973 = self_2785018889.children[chckIndx(i_536872731, 0, (self_2785018889.children).length - 1)];
            var height_2785018974 = height_2785017925(c_2785018973);
            c_2785018973.top = lastY_2785018969;
            c_2785018973.bottom = (lastY_2785018969 + height_2785018974);
            layoutWidget_2785018531(c_2785018973, newBounds_2785018893, frameIndex_2785018891, options_2785018892);
            lastY_2785018969 = ((c_2785018973.lastBounds.y + c_2785018973.lastBounds.h) - newBounds_2785018893.y);
            i_536872731 = addInt(i_536872731, 1);
            if (!(((self_2785018889.children).length == L_536872732))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function none_2785018789() {
  var result_2785018796 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

  return result_2785018796;

}

function isSome_2785018809(self_2785018811) {
  var result_2785018812 = false;

    result_2785018812 = self_2785018811.has;

  return result_2785018812;

}

function isNone_2785018834(self_2785018836) {
  var result_2785018837 = false;

    result_2785018837 = !(self_2785018836.has);

  return result_2785018837;

}

function get_2785018826(self_2785018828) {
  var result_2785018829 = null;

  BeforeRet: {
    if (isNone_2785018834(self_2785018828)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2785018829 = self_2785018828.val;
    break BeforeRet;
  };

  return result_2785018829;

}

function some_2785018871(val_2785018873) {
  var result_2785018874 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

    result_2785018874.has = true;
    result_2785018874.val = nimCopy(result_2785018874.val, val_2785018873, NTI2147483653);

  return result_2785018874;

}

function layoutWidget_2785018683(self_2785018684, container_2785018685, frameIndex_2785018686, options_2785018687) {
            var Temporary10;

    var newBounds_2785018688 = calculateBounds_2785018536(self_2785018684, container_2785018685);
    if (self_2785018684.logLayout) {
    var fmtRes_2785018694 = [mnewString(0)];
    fmtRes_2785018694[0].push.apply(fmtRes_2785018694[0], [108,97,121,111,117,116,83,116,97,99,107,40]);;
    formatValue_2785018301(fmtRes_2785018694, 0, container_2785018685, []);
    fmtRes_2785018694[0].push.apply(fmtRes_2785018694[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018694, 0, frameIndex_2785018686, []);
    fmtRes_2785018694[0].push.apply(fmtRes_2785018694[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018234(fmtRes_2785018694, 0, self_2785018684.anchor, []);
    fmtRes_2785018694[0].push.apply(fmtRes_2785018694[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018573(fmtRes_2785018694, 0, self_2785018684.pivot, []);
    fmtRes_2785018694[0].push.apply(fmtRes_2785018694[0], [44,32]);;
    formatValue_2785018168(fmtRes_2785018694, 0, self_2785018684.left, []);
    fmtRes_2785018694[0].push.apply(fmtRes_2785018694[0], [44]);;
    formatValue_2785018168(fmtRes_2785018694, 0, self_2785018684.top, []);
    fmtRes_2785018694[0].push.apply(fmtRes_2785018694[0], [44,32]);;
    formatValue_2785018168(fmtRes_2785018694, 0, self_2785018684.right, []);
    fmtRes_2785018694[0].push.apply(fmtRes_2785018694[0], [44]);;
    formatValue_2785018168(fmtRes_2785018694, 0, self_2785018684.bottom, []);
    fmtRes_2785018694[0].push.apply(fmtRes_2785018694[0], [32,45,62,32]);;
    formatValue_2785018301(fmtRes_2785018694, 0, newBounds_2785018688, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018694[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018609(newBounds_2785018688, self_2785018684.lastBounds))) {
    var fmtRes_2785018749 = [mnewString(0)];
    fmtRes_2785018749[0].push.apply(fmtRes_2785018749[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018301(fmtRes_2785018749, 0, self_2785018684.lastBounds, []);
    fmtRes_2785018749[0].push.apply(fmtRes_2785018749[0], [32,45,62,32]);;
    formatValue_2785018301(fmtRes_2785018749, 0, newBounds_2785018688, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018749[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018609(newBounds_2785018688, self_2785018684.lastBounds))) {
    self_2785018684.lastBounds = nimCopy(self_2785018684.lastBounds, newBounds_2785018688, NTI2147483653);
    self_2785018684.lastBoundsChange = frameIndex_2785018686;
    }
    
    if (((frameIndex_2785018686 <= self_2785018684.lastHierarchyChange) || (frameIndex_2785018686 <= self_2785018684.lastBoundsChange))) {
    Label1: {
      var i_2785018769 = 0;
      var c_2785018770 = null;
      var i_536872739 = 0;
      var L_536872740 = (self_2785018684.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872739 < L_536872740)) break Label3;
            i_2785018769 = i_536872739;
            c_2785018770 = self_2785018684.children[chckIndx(i_536872739, 0, (self_2785018684.children).length - 1)];
            var oldBounds_2785018771 = nimCopy(null, c_2785018770.lastBounds, NTI2147483653);
            layoutWidget_2785018531(c_2785018770, newBounds_2785018688, frameIndex_2785018686, options_2785018687);
            var newBounds_2785018772 = nimCopy(null, c_2785018770.lastBounds, NTI2147483653);
            if ((!(HEX3DHEX3D_2785018609(oldBounds_2785018771, newBounds_2785018772)) && !(contains_2130706618(newBounds_2785018772, oldBounds_2785018771)))) {
            var invalidationRect_2785018777 = nimCopy(null, oldBounds_2785018771, NTI2147483653);
            Label4: {
              var k_2785018783 = 0;
              var colontmp__536872736 = 0;
              colontmp__536872736 = subInt(i_2785018769, 1);
              var res_536872737 = colontmp__536872736;
              Label5: {
                  Label6: while (true) {
                  if (!(0 <= res_536872737)) break Label6;
                    k_2785018783 = res_536872737;
                    invalidate_2785018438(self_2785018684.children[chckIndx(k_2785018783, 0, (self_2785018684.children).length - 1)], frameIndex_2785018686, invalidationRect_2785018777);
                    if (contains_2130706618(self_2785018684.children[chckIndx(k_2785018783, 0, (self_2785018684.children).length - 1)].lastBounds, invalidationRect_2785018777)) {
                    break Label4;
                    }
                    
                    res_536872737 = subInt(res_536872737, 1);
                  }
              };
            };
            }
            
            i_536872739 = addInt(i_536872739, 1);
            if (!(((self_2785018684.children).length == L_536872740))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var invalidationRect_2785018797 = [none_2785018789()];
    Label7: {
      var i_2785018803 = 0;
      var c_2785018804 = null;
      var i_536872743 = 0;
      var L_536872744 = (self_2785018684.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872743 < L_536872744)) break Label9;
            i_2785018803 = i_536872743;
            c_2785018804 = self_2785018684.children[chckIndx(i_536872743, 0, (self_2785018684.children).length - 1)];
            if (isSome_2785018809(invalidationRect_2785018797[0])) {
            invalidate_2785018438(c_2785018804, frameIndex_2785018686, get_2785018826(invalidationRect_2785018797[0]));
            }
            
            if (isSome_2785018809(invalidationRect_2785018797[0])) {
            Temporary10 = some_2785018871(or_2147483728(get_2785018826(invalidationRect_2785018797[0]), c_2785018804.lastBounds));
            }
            else {
            Temporary10 = some_2785018871(c_2785018804.lastBounds);
            }
            
            invalidationRect_2785018797[0] = nimCopy(invalidationRect_2785018797[0], Temporary10, NTI2785018408);
            i_536872743 = addInt(i_536872743, 1);
            if (!(((self_2785018684.children).length == L_536872744))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function HEX2DHEX3D_2634022922(x_2634022924, x_2634022924_Idx, y_2634022925) {
    x_2634022924[x_2634022924_Idx] = (x_2634022924[x_2634022924_Idx] - y_2634022925);

  
}

function layoutWidget_2785019062(self_2785019063, container_2785019064, frameIndex_2785019065, options_2785019066) {
    var newBounds_2785019067 = calculateBounds_2785018536(self_2785019063, container_2785019064);
    if (self_2785019063.sizeToContent) {
    var size_2785019068 = options_2785019066.getTextBounds(self_2785019063.text, 0.0);
    var incX_2785019069 = max_33555642((size_2785019068.x - newBounds_2785019067.w), 0.0);
    var incY_2785019070 = max_33555642((size_2785019068.y - newBounds_2785019067.h), 0.0);
    newBounds_2785019067.w = size_2785019068.x;
    newBounds_2785019067.h = size_2785019068.y;
    HEX2DHEX3D_2634022922(newBounds_2785019067, "x", (incX_2785019069 * self_2785019063.pivot.x));
    HEX2DHEX3D_2634022922(newBounds_2785019067, "y", (incY_2785019070 * self_2785019063.pivot.y));
    }
    
    if (self_2785019063.logLayout) {
    var fmtRes_2785019084 = [mnewString(0)];
    fmtRes_2785019084[0].push.apply(fmtRes_2785019084[0], [108,97,121,111,117,116,84,101,120,116,40,39]);;
    formatValue_721420459(fmtRes_2785019084, 0, self_2785019063.text, []);
    fmtRes_2785019084[0].push.apply(fmtRes_2785019084[0], [39,44,32]);;
    formatValue_2785018301(fmtRes_2785019084, 0, container_2785019064, []);
    fmtRes_2785019084[0].push.apply(fmtRes_2785019084[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785019084, 0, frameIndex_2785019065, []);
    fmtRes_2785019084[0].push.apply(fmtRes_2785019084[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018234(fmtRes_2785019084, 0, self_2785019063.anchor, []);
    fmtRes_2785019084[0].push.apply(fmtRes_2785019084[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018573(fmtRes_2785019084, 0, self_2785019063.pivot, []);
    fmtRes_2785019084[0].push.apply(fmtRes_2785019084[0], [44,32]);;
    formatValue_2785018168(fmtRes_2785019084, 0, self_2785019063.left, []);
    fmtRes_2785019084[0].push.apply(fmtRes_2785019084[0], [44]);;
    formatValue_2785018168(fmtRes_2785019084, 0, self_2785019063.top, []);
    fmtRes_2785019084[0].push.apply(fmtRes_2785019084[0], [44,32]);;
    formatValue_2785018168(fmtRes_2785019084, 0, self_2785019063.right, []);
    fmtRes_2785019084[0].push.apply(fmtRes_2785019084[0], [44]);;
    formatValue_2785018168(fmtRes_2785019084, 0, self_2785019063.bottom, []);
    fmtRes_2785019084[0].push.apply(fmtRes_2785019084[0], [32,45,62,32]);;
    formatValue_2785018301(fmtRes_2785019084, 0, newBounds_2785019067, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785019084[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018609(newBounds_2785019067, self_2785019063.lastBounds))) {
    var fmtRes_2785019139 = [mnewString(0)];
    fmtRes_2785019139[0].push.apply(fmtRes_2785019139[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018301(fmtRes_2785019139, 0, self_2785019063.lastBounds, []);
    fmtRes_2785019139[0].push.apply(fmtRes_2785019139[0], [32,45,62,32]);;
    formatValue_2785018301(fmtRes_2785019139, 0, newBounds_2785019067, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785019139[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018609(newBounds_2785019067, self_2785019063.lastBounds))) {
    self_2785019063.lastBounds = nimCopy(self_2785019063.lastBounds, newBounds_2785019067, NTI2147483653);
    self_2785019063.lastBoundsChange = frameIndex_2785019065;
    }
    

  
}

function layoutWidget_2785018975(self_2785018976, container_2785018977, frameIndex_2785018978, options_2785018979) {
    var newBounds_2785018980 = calculateBounds_2785018536(self_2785018976, container_2785018977);
    if (self_2785018976.logLayout) {
    var fmtRes_2785018986 = [mnewString(0)];
    fmtRes_2785018986[0].push.apply(fmtRes_2785018986[0], [108,97,121,111,117,116,72,111,114,105,122,111,110,116,97,108,76,105,115,116,40]);;
    formatValue_2785018301(fmtRes_2785018986, 0, container_2785018977, []);
    fmtRes_2785018986[0].push.apply(fmtRes_2785018986[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018986, 0, frameIndex_2785018978, []);
    fmtRes_2785018986[0].push.apply(fmtRes_2785018986[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018234(fmtRes_2785018986, 0, self_2785018976.anchor, []);
    fmtRes_2785018986[0].push.apply(fmtRes_2785018986[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018573(fmtRes_2785018986, 0, self_2785018976.pivot, []);
    fmtRes_2785018986[0].push.apply(fmtRes_2785018986[0], [44,32]);;
    formatValue_2785018168(fmtRes_2785018986, 0, self_2785018976.left, []);
    fmtRes_2785018986[0].push.apply(fmtRes_2785018986[0], [44]);;
    formatValue_2785018168(fmtRes_2785018986, 0, self_2785018976.top, []);
    fmtRes_2785018986[0].push.apply(fmtRes_2785018986[0], [44,32]);;
    formatValue_2785018168(fmtRes_2785018986, 0, self_2785018976.right, []);
    fmtRes_2785018986[0].push.apply(fmtRes_2785018986[0], [44]);;
    formatValue_2785018168(fmtRes_2785018986, 0, self_2785018976.bottom, []);
    fmtRes_2785018986[0].push.apply(fmtRes_2785018986[0], [32,45,62,32]);;
    formatValue_2785018301(fmtRes_2785018986, 0, newBounds_2785018980, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018986[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018609(newBounds_2785018980, self_2785018976.lastBounds))) {
    var fmtRes_2785019041 = [mnewString(0)];
    fmtRes_2785019041[0].push.apply(fmtRes_2785019041[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018301(fmtRes_2785019041, 0, self_2785018976.lastBounds, []);
    fmtRes_2785019041[0].push.apply(fmtRes_2785019041[0], [32,45,62,32]);;
    formatValue_2785018301(fmtRes_2785019041, 0, newBounds_2785018980, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785019041[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018609(newBounds_2785018980, self_2785018976.lastBounds))) {
    self_2785018976.lastBounds = nimCopy(self_2785018976.lastBounds, newBounds_2785018980, NTI2147483653);
    self_2785018976.lastBoundsChange = frameIndex_2785018978;
    }
    
    if (((frameIndex_2785018978 <= self_2785018976.lastHierarchyChange) || (frameIndex_2785018978 <= self_2785018976.lastBoundsChange))) {
    var lastX_2785019056 = 0.0;
    Label1: {
      var c_2785019060 = null;
      var i_536872747 = 0;
      var L_536872748 = (self_2785018976.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872747 < L_536872748)) break Label3;
            c_2785019060 = self_2785018976.children[chckIndx(i_536872747, 0, (self_2785018976.children).length - 1)];
            var width_2785019061 = width_2785017922(c_2785019060);
            c_2785019060.left = lastX_2785019056;
            c_2785019060.right = (lastX_2785019056 + width_2785019061);
            layoutWidget_2785018531(c_2785019060, newBounds_2785018980, frameIndex_2785018978, options_2785018979);
            lastX_2785019056 = ((c_2785019060.lastBounds.x + c_2785019060.lastBounds.w) - newBounds_2785018980.x);
            i_536872747 = addInt(i_536872747, 1);
            if (!(((self_2785018976.children).length == L_536872748))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function layoutWidget_2785018526(self_2785018527, bounds_2785018528, frameIndex_2785018529, options_2785018530) {
  
}

function layoutWidget_2785018531(self_2785018527, bounds_2785018528, frameIndex_2785018529, options_2785018530) {
    chckNilDisp(self_2785018527);
    if (isObj(self_2785018527.m_type, NTI2785017871)) {
    layoutWidget_2785018546(self_2785018527, bounds_2785018528, frameIndex_2785018529, options_2785018530);
    }
    else {
    if (isObj(self_2785018527.m_type, NTI2785017875)) {
    layoutWidget_2785018888(self_2785018527, bounds_2785018528, frameIndex_2785018529, options_2785018530);
    }
    else {
    if (isObj(self_2785018527.m_type, NTI2785017873)) {
    layoutWidget_2785018683(self_2785018527, bounds_2785018528, frameIndex_2785018529, options_2785018530);
    }
    else {
    if (isObj(self_2785018527.m_type, NTI2785017879)) {
    layoutWidget_2785019062(self_2785018527, bounds_2785018528, frameIndex_2785018529, options_2785018530);
    }
    else {
    if (isObj(self_2785018527.m_type, NTI2785017877)) {
    layoutWidget_2785018975(self_2785018527, bounds_2785018528, frameIndex_2785018529, options_2785018530);
    }
    else {
    if (isObj(self_2785018527.m_type, NTI2785017868)) {
    layoutWidget_2785018526(self_2785018527, bounds_2785018528, frameIndex_2785018529, options_2785018530);
    }
    }}}}}

  
}

function copyTo_2785019156(self_2785019157, to_2785019158, to_2785019158_Idx) {
    to_2785019158[to_2785019158_Idx].anchor = nimCopy(to_2785019158[to_2785019158_Idx].anchor, self_2785019157.anchor, NTI2785017869);
    to_2785019158[to_2785019158_Idx].pivot = nimCopy(to_2785019158[to_2785019158_Idx].pivot, self_2785019157.pivot, NTI2164261152);
    to_2785019158[to_2785019158_Idx].left = self_2785019157.left;
    to_2785019158[to_2785019158_Idx].top = self_2785019157.top;
    to_2785019158[to_2785019158_Idx].right = self_2785019157.right;
    to_2785019158[to_2785019158_Idx].bottom = self_2785019157.bottom;
    to_2785019158[to_2785019158_Idx].backgroundColor = nimCopy(to_2785019158[to_2785019158_Idx].backgroundColor, self_2785019157.backgroundColor, NTI2550136835);
    to_2785019158[to_2785019158_Idx].foregroundColor = nimCopy(to_2785019158[to_2785019158_Idx].foregroundColor, self_2785019157.foregroundColor, NTI2550136835);
    to_2785019158[to_2785019158_Idx].lastBounds = nimCopy(to_2785019158[to_2785019158_Idx].lastBounds, self_2785019157.lastBounds, NTI2147483653);
    to_2785019158[to_2785019158_Idx].lastBoundsChange = self_2785019157.lastBoundsChange;
    to_2785019158[to_2785019158_Idx].lastHierarchyChange = self_2785019157.lastHierarchyChange;
    to_2785019158[to_2785019158_Idx].lastInvalidationRect = nimCopy(to_2785019158[to_2785019158_Idx].lastInvalidationRect, self_2785019157.lastInvalidationRect, NTI2147483653);
    to_2785019158[to_2785019158_Idx].lastInvalidation = self_2785019157.lastInvalidation;
    to_2785019158[to_2785019158_Idx].sizeToContent = self_2785019157.sizeToContent;
    to_2785019158[to_2785019158_Idx].drawBorder = self_2785019157.drawBorder;
    to_2785019158[to_2785019158_Idx].fillBackground = self_2785019157.fillBackground;
    to_2785019158[to_2785019158_Idx].logLayout = self_2785019157.logLayout;
    to_2785019158[to_2785019158_Idx].allowAlpha = self_2785019157.allowAlpha;

  
}

function clone_2785019173(self_2785019174) {
  var result_2785019175 = [null];

    result_2785019175[0] = {children: [], maskContent: self_2785019174.maskContent, layout: {kind: 0}, m_type: NTI2785017871, parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    copyTo_2785019156(self_2785019174, result_2785019175, 0);
    var r_2785019180 = result_2785019175[0];
    Label1: {
      var c_2785019184 = null;
      var i_536872751 = 0;
      var L_536872752 = (self_2785019174.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872751 < L_536872752)) break Label3;
            c_2785019184 = self_2785019174.children[chckIndx(i_536872751, 0, (self_2785019174.children).length - 1)];
            r_2785019180.children.push(clone_2785019171(c_2785019184));;
            i_536872751 = addInt(i_536872751, 1);
            if (!(((self_2785019174.children).length == L_536872752))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019175[0];

}

function clone_2785019258(self_2785019259) {
  var result_2785019260 = [null];

    result_2785019260[0] = {children: [], m_type: NTI2785017875, parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    copyTo_2785019156(self_2785019259, result_2785019260, 0);
    var r_2785019265 = result_2785019260[0];
    Label1: {
      var c_2785019269 = null;
      var i_536872755 = 0;
      var L_536872756 = (self_2785019259.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872755 < L_536872756)) break Label3;
            c_2785019269 = self_2785019259.children[chckIndx(i_536872755, 0, (self_2785019259.children).length - 1)];
            r_2785019265.children.push(clone_2785019171(c_2785019269));;
            i_536872755 = addInt(i_536872755, 1);
            if (!(((self_2785019259.children).length == L_536872756))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019260[0];

}

function clone_2785019233(self_2785019234) {
  var result_2785019235 = [null];

    result_2785019235[0] = {children: [], m_type: NTI2785017877, parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    copyTo_2785019156(self_2785019234, result_2785019235, 0);
    var r_2785019240 = result_2785019235[0];
    Label1: {
      var c_2785019244 = null;
      var i_536872759 = 0;
      var L_536872760 = (self_2785019234.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872759 < L_536872760)) break Label3;
            c_2785019244 = self_2785019234.children[chckIndx(i_536872759, 0, (self_2785019234.children).length - 1)];
            r_2785019240.children.push(clone_2785019171(c_2785019244));;
            i_536872759 = addInt(i_536872759, 1);
            if (!(((self_2785019234.children).length == L_536872760))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019235[0];

}

function clone_2785019308(self_2785019309) {
  var result_2785019310 = [null];

    result_2785019310[0] = {text: nimCopy(null, self_2785019309.text, NTI33554449), style: nimCopy(null, self_2785019309.style, NTI2516582404), m_type: NTI2785017879, lastRenderedText: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    copyTo_2785019156(self_2785019309, result_2785019310, 0);

  return result_2785019310[0];

}

function clone_2785019283(self_2785019284) {
  var result_2785019285 = [null];

    result_2785019285[0] = {children: [], m_type: NTI2785017873, parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    copyTo_2785019156(self_2785019284, result_2785019285, 0);
    var r_2785019290 = result_2785019285[0];
    Label1: {
      var c_2785019294 = null;
      var i_536872763 = 0;
      var L_536872764 = (self_2785019284.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872763 < L_536872764)) break Label3;
            c_2785019294 = self_2785019284.children[chckIndx(i_536872763, 0, (self_2785019284.children).length - 1)];
            r_2785019290.children.push(clone_2785019171(c_2785019294));;
            i_536872763 = addInt(i_536872763, 1);
            if (!(((self_2785019284.children).length == L_536872764))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019285[0];

}

function clone_2785019168(self_2785019169) {
  var result_2785019170 = null;

  return result_2785019170;

}

function clone_2785019171(self_2785019169) {
  var result_2785019172 = null;

  BeforeRet: {
    chckNilDisp(self_2785019169);
    if (isObj(self_2785019169.m_type, NTI2785017871)) {
    result_2785019172 = clone_2785019173(self_2785019169);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785019169.m_type, NTI2785017875)) {
    result_2785019172 = clone_2785019258(self_2785019169);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785019169.m_type, NTI2785017877)) {
    result_2785019172 = clone_2785019233(self_2785019169);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785019169.m_type, NTI2785017879)) {
    result_2785019172 = clone_2785019308(self_2785019169);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785019169.m_type, NTI2785017873)) {
    result_2785019172 = clone_2785019283(self_2785019169);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785019169.m_type, NTI2785017868)) {
    result_2785019172 = clone_2785019168(self_2785019169);
    break BeforeRet;
    }
    }}}}}
  };

  return result_2785019172;

}

function invoke_3489661171(event_3489661173, arg_3489661174) {
    Label1: {
      var h_3489661197 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872768 = 0;
      var L_536872769 = (event_3489661173.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872768 < L_536872769)) break Label3;
            h_3489661197 = event_3489661173.handlers[chckIndx(i_536872768, 0, (event_3489661173.handlers).length - 1)];
            h_3489661197.Field1(arg_3489661174);
            i_536872768 = addInt(i_536872768, 1);
            if (!(((event_3489661173.handlers).length == L_536872769))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function requestRender_3489662079(self_3489662080, redrawEverything_3489662081) {
    self_3489662080.redrawEverything = (self_3489662080.redrawEverything || redrawEverything_3489662081);
    invoke_3489661171(self_3489662080.onResized, redrawEverything_3489662081);

  
}

function requestRender_2768240743(self_2768240744, redrawEverything_2768240745) {
  
}

function requestRender_2768240746(self_2768240744, redrawEverything_2768240745) {
    chckNilDisp(self_2768240744);
    if (isObj(self_2768240744.m_type, NTI3489660939)) {
    requestRender_3489662079(self_2768240744, redrawEverything_2768240745);
    }
    else {
    if (isObj(self_2768240744.m_type, NTI2768240644)) {
    requestRender_2768240743(self_2768240744, redrawEverything_2768240745);
    }
    }

  
}

function size_3489662113(self_3489662114) {
  var result_3489662115 = ({x: 0.0, y: 0.0});

    return {x: self_3489662114.content.clientWidth, y: self_3489662114.content.clientHeight};;

  return result_3489662115;

}

function size_2768240757(self_2768240758) {
  var result_2768240759 = ({x: 0.0, y: 0.0});

  return result_2768240759;

}

function size_2768240760(self_2768240758) {
  var result_2768240761 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2768240758);
    if (isObj(self_2768240758.m_type, NTI3489660939)) {
    result_2768240761 = nimCopy(result_2768240761, size_3489662113(self_2768240758), NTI2164261152);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240758.m_type, NTI2768240644)) {
    result_2768240761 = nimCopy(result_2768240761, size_2768240757(self_2768240758), NTI2164261152);
    break BeforeRet;
    }
    }
  };

  return result_2768240761;

}

function createOrReplaceElement_3489662261(element_3489662262, element_3489662262_Idx, name_3489662263, nameUpper_3489662264) {
    if ((element_3489662262[element_3489662262_Idx] == null)) {
    element_3489662262[element_3489662262_Idx] = document.createElement(name_3489662263);
    element_3489662262[element_3489662262_Idx].className = "widget";
    }
    else {
    if (!((element_3489662262[element_3489662262_Idx].nodeName == nameUpper_3489662264))) {
    var dif_3489662268 = document.createElement(name_3489662263);
    element_3489662262[element_3489662262_Idx].replaceWith(dif_3489662268);
    element_3489662262[element_3489662262_Idx] = dif_3489662268;
    element_3489662262[element_3489662262_Idx].className = "widget";
    }
    }

  
}

function HEX2D_2130706591(a_2130706592, b_2130706593) {
  var result_2130706594 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2130706594.x = (a_2130706592.x - b_2130706593.x);
    result_2130706594.y = (a_2130706592.y - b_2130706593.y);
    result_2130706594.w = a_2130706592.w;
    result_2130706594.h = a_2130706592.h;

  return result_2130706594;

}

function round_2634022918(x_2634022920) {
  var result_2634022921 = [0.0];

    if ((0.0 <= x_2634022920)) {
    result_2634022921[0] = Math.round(x_2634022920);
    }
    else {
      result_2634022921[0] = Math.ceil(x_2634022920);
      if ((0.5 <= (result_2634022921[0] - x_2634022920))) {
      HEX2DHEX3D_2634022922(result_2634022921, 0, 1.0);
      }
      
    }
    

  return result_2634022921[0];

}

function myToHtmlHex_3489662272(c_3489662273) {
  var result_3489662274 = null;

    result_3489662274 = "rgba(";
    (result_3489662274) += (((round_2634022918((c_3489662273.r * 255.0))) | 0));;
    (result_3489662274) += (", ");;
    (result_3489662274) += (((round_2634022918((c_3489662273.g * 255.0))) | 0));;
    (result_3489662274) += (", ");;
    (result_3489662274) += (((round_2634022918((c_3489662273.b * 255.0))) | 0));;
    (result_3489662274) += (", ");;
    (result_3489662274) += (c_3489662273.a);;
    (result_3489662274) += (")");;

  return result_3489662274;

}

function getTextStyle_3489662522(x_3489662523, y_3489662524, width_3489662525, height_3489662526, color_3489662527, backgroundColor_3489662528, italic_3489662529, bold_3489662530, fontSize_3489662531) {
  var result_3489662603 = null;

    result_3489662603 = `left: ${x_3489662523}px; top: ${y_3489662524}px; width: ${width_3489662525}px; height: ${height_3489662526}px; overflow: visible; color: ${color_3489662527}; ${backgroundColor_3489662528}; font-size: ${fontSize_3489662531}`
    if (italic_3489662529) {
    result_3489662603 += `font-style: italic;`
    }
    
    if (bold_3489662530) {
    result_3489662603 += `font-weight: bold;`
    }
    

  return result_3489662603;

}

function getTextStyle_3489662513(x_3489662514, y_3489662515, width_3489662516, height_3489662517, color_3489662518, backgroundColor_3489662519, italic_3489662520, bold_3489662521) {
  var result_3489662592 = null;

    result_3489662592 = `left: ${x_3489662514}px; top: ${y_3489662515}px; width: ${width_3489662516}px; height: ${height_3489662517}px; overflow: visible; color: ${color_3489662518}; ${backgroundColor_3489662519}`
    if (italic_3489662520) {
    result_3489662592 += `font-style: italic;`
    }
    
    if (bold_3489662521) {
    result_3489662592 += `font-weight: bold;`
    }
    

  return result_3489662592;

}

function pop_3489662236(s_3489662238, s_3489662238_Idx) {
  var result_3489662239 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var L_3489662243 = subInt((s_3489662238[s_3489662238_Idx]).length, 1);
    result_3489662239 = nimCopy(result_3489662239, s_3489662238[s_3489662238_Idx][chckIndx(L_3489662243, 0, (s_3489662238[s_3489662238_Idx]).length - 1)], NTI2147483653);
    if (s_3489662238[s_3489662238_Idx].length < chckRange(L_3489662243, 0, 2147483647)) { for (var i = s_3489662238[s_3489662238_Idx].length ; i < chckRange(L_3489662243, 0, 2147483647) ; ++i) s_3489662238[s_3489662238_Idx].push(({x: 0.0, y: 0.0, w: 0.0, h: 0.0})); }
               else { s_3489662238[s_3489662238_Idx].length = chckRange(L_3489662243, 0, 2147483647); };

  return result_3489662239;

}

function renderWidget_3489662532(self_3489662533, renderer_3489662534, element_3489662535, element_3489662535_Idx, forceRedraw_3489662536, frameIndex_3489662537, buffer_3489662538, buffer_3489662538_Idx) {
    var Temporary3;
    
function HEX3Aanonymous_3489662578() {
        if (!((self_3489662533.fontSizeIncreasePercent == 0.0))) {
        element_3489662535[element_3489662535_Idx].setAttribute("style", getTextStyle_3489662522(((relBounds_3489662551.x) | 0), ((relBounds_3489662551.y) | 0), ((relBounds_3489662551.w) | 0), ((relBounds_3489662551.h) | 0), color_3489662559, backgroundColor_3489662567, italic_3489662572, bold_3489662577, (renderer_3489662534.mFontSize * (1.0 + self_3489662533.fontSizeIncreasePercent))));
        }
        else {
        element_3489662535[element_3489662535_Idx].setAttribute("style", getTextStyle_3489662513(((relBounds_3489662551.x) | 0), ((relBounds_3489662551.y) | 0), ((relBounds_3489662551.w) | 0), ((relBounds_3489662551.h) | 0), color_3489662559, backgroundColor_3489662567, italic_3489662572, bold_3489662577));
        }
        
        if (updateText_3489662561) {
        element_3489662535[element_3489662535_Idx].innerText = text_3489662560;
        element_3489662535[element_3489662535_Idx].setAttribute("data-text", text_3489662560);
        }
        

      
    }

  BeforeRet: {
    if (((((self_3489662533.lastHierarchyChange < frameIndex_3489662537) && (self_3489662533.lastBoundsChange < frameIndex_3489662537)) && (self_3489662533.lastInvalidation < frameIndex_3489662537)) && !(forceRedraw_3489662536))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3489662261(element_3489662535, element_3489662535_Idx, "span", "SPAN");
    var relBounds_3489662551 = HEX2D_2130706591(self_3489662533.lastBounds, xy_2147483680(renderer_3489662534.boundsStack[chckIndx((renderer_3489662534.boundsStack).length - 1, 0, (renderer_3489662534.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3489662533.lastBounds, NTI2147483653);
    renderer_3489662534.boundsStack.push(Temporary1);;
    try {
    var color_3489662559 = myToHtmlHex_3489662272(self_3489662533.foregroundColor);
    var text_3489662560 = toJSStr(self_3489662533.text);
    var updateText_3489662561 = !((element_3489662535[element_3489662535_Idx].getAttribute("data-text") == text_3489662560));
    if (self_3489662533.fillBackground) {
    var fmtRes_3489662566 = [mnewString(0)];
    fmtRes_3489662566[0].push.apply(fmtRes_3489662566[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    add_33556386(fmtRes_3489662566, 0, myToHtmlHex_3489662272(self_3489662533.backgroundColor));
    fmtRes_3489662566[0].push.apply(fmtRes_3489662566[0], [59]);;
    Temporary3 = toJSStr(fmtRes_3489662566[0]);
    }
    else {
    Temporary3 = "";
    }
    
    var backgroundColor_3489662567 = Temporary3;
    var italic_3489662572 = (self_3489662533.style.fontStyle[0] != undefined);
    var bold_3489662577 = (self_3489662533.style.fontStyle[2] != undefined);
    renderer_3489662534.domUpdates.push(HEX3Aanonymous_3489662578);;
    self_3489662533.lastRenderedText = nimCopy(null, self_3489662533.text, NTI33554449);
    } finally {
    var _ = pop_3489662236(renderer_3489662534, "boundsStack");
    }
  };

  
}

function updateRelativePosition_3489662269(element_3489662270, element_3489662270_Idx, bounds_3489662271) {
    element_3489662270[element_3489662270_Idx].style.left = toJSStr(HEX24_369098760(((bounds_3489662271.x) | 0)));
    element_3489662270[element_3489662270_Idx].style.top = toJSStr(HEX24_369098760(((bounds_3489662271.y) | 0)));
    element_3489662270[element_3489662270_Idx].style.width = toJSStr(HEX24_369098760(((bounds_3489662271.w) | 0)));
    element_3489662270[element_3489662270_Idx].style.height = toJSStr(HEX24_369098760(((bounds_3489662271.h) | 0)));

  
}

function renderWidget_3489662465(self_3489662466, renderer_3489662467, element_3489662468, element_3489662468_Idx, forceRedraw_3489662469, frameIndex_3489662470, buffer_3489662471, buffer_3489662471_Idx) {
            var Temporary8;

  BeforeRet: {
    if (((((self_3489662466.lastHierarchyChange < frameIndex_3489662470) && (self_3489662466.lastBoundsChange < frameIndex_3489662470)) && (self_3489662466.lastInvalidation < frameIndex_3489662470)) && !(forceRedraw_3489662469))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3489662261(element_3489662468, element_3489662468_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3489662466.children).length < (element_3489662468[element_3489662468_Idx].children).length)) break Label2;
          element_3489662468[element_3489662468_Idx].removeChild(element_3489662468[element_3489662468_Idx].lastChild);
        }
    };
    var relBounds_3489662490 = HEX2D_2130706591(self_3489662466.lastBounds, xy_2147483680(renderer_3489662467.boundsStack[chckIndx((renderer_3489662467.boundsStack).length - 1, 0, (renderer_3489662467.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3489662466.lastBounds, NTI2147483653);
    renderer_3489662467.boundsStack.push(Temporary3);;
    try {
    updateRelativePosition_3489662269(element_3489662468, element_3489662468_Idx, relBounds_3489662490);
    var existingCount_3489662501 = (element_3489662468[element_3489662468_Idx].children).length;
    Label5: {
      var i_3489662507 = 0;
      var c_3489662508 = null;
      var i_536872773 = 0;
      var L_536872774 = (self_3489662466.children).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872773 < L_536872774)) break Label7;
            i_3489662507 = i_536872773;
            c_3489662508 = self_3489662466.children[chckIndx(i_536872773, 0, (self_3489662466.children).length - 1)];
            if ((i_3489662507 < existingCount_3489662501)) {
            Temporary8 = element_3489662468[element_3489662468_Idx].children[chckIndx(i_3489662507, 0, (element_3489662468[element_3489662468_Idx].children).length - 1)];
            }
            else {
            Temporary8 = null;
            }
            
            var childElement_3489662509 = [Temporary8];
            renderWidget_3489662178(c_3489662508, renderer_3489662467, childElement_3489662509, 0, (forceRedraw_3489662469 || self_3489662466.fillBackground), frameIndex_3489662470, buffer_3489662471, buffer_3489662471_Idx);
            if (((existingCount_3489662501 <= i_3489662507) && !((childElement_3489662509[0] == null)))) {
            element_3489662468[element_3489662468_Idx].appendChild(childElement_3489662509[0]);
            }
            
            i_536872773 = addInt(i_536872773, 1);
            if (!(((self_3489662466.children).length == L_536872774))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3489662236(renderer_3489662467, "boundsStack");
    }
  };

  
}

function getBackgroundColor_2785018344(self_2785018345) {
  var result_2785018346 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2785018346 = nimCopy(result_2785018346, self_2785018345.backgroundColor, NTI2550136835);
    if (!(self_2785018345.allowAlpha)) {
    result_2785018346.a = 1.0;
    }
    

  return result_2785018346;

}

function getForegroundColor_2785018341(self_2785018342) {
  var result_2785018343 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2785018343 = nimCopy(result_2785018343, self_2785018342.foregroundColor, NTI2550136835);
    if (!(self_2785018342.allowAlpha)) {
    result_2785018343.a = 1.0;
    }
    

  return result_2785018343;

}

function renderWidget_3489662316(self_3489662317, renderer_3489662318, element_3489662319, element_3489662319_Idx, forceRedraw_3489662320, frameIndex_3489662321, buffer_3489662322, buffer_3489662322_Idx) {
    
function HEX3Aanonymous_3489662410() {
        var elementLen_3489662414 = (element_3489662319[element_3489662319_Idx].children).length;
        Label1: {
          var i_3489662419 = 0;
          var colontmp__536872777 = 0;
          colontmp__536872777 = len_2785018037(self_3489662317);
          var i_536872778 = colontmp__536872777;
          Label2: {
              Label3: while (true) {
              if (!(i_536872778 < elementLen_3489662414)) break Label3;
                i_3489662419 = i_536872778;
                element_3489662319[element_3489662319_Idx].removeChild(element_3489662319[element_3489662319_Idx].lastChild);
                i_536872778 = addInt(i_536872778, 1);
              }
          };
        };
        Label4: {
          var c_3489662423 = null;
          var i_536872782 = 0;
          var L_536872783 = (newChildren_3489662409).length;
          Label5: {
              Label6: while (true) {
              if (!(i_536872782 < L_536872783)) break Label6;
                c_3489662423 = newChildren_3489662409[chckIndx(i_536872782, 0, (newChildren_3489662409).length - 1)];
                element_3489662319[element_3489662319_Idx].appendChild(c_3489662423);
                i_536872782 = addInt(i_536872782, 1);
                if (!(((newChildren_3489662409).length == L_536872783))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        element_3489662319[element_3489662319_Idx].className = "widget";
        element_3489662319[element_3489662319_Idx].setAttribute("style", css_3489662343);

      
    }
            var Temporary6;

  BeforeRet: {
    if (((((self_3489662317.lastHierarchyChange < frameIndex_3489662321) && (self_3489662317.lastBoundsChange < frameIndex_3489662321)) && (self_3489662317.lastInvalidation < frameIndex_3489662321)) && !(forceRedraw_3489662320))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3489662261(element_3489662319, element_3489662319_Idx, "div", "DIV");
    var relBounds_3489662335 = HEX2D_2130706591(self_3489662317.lastBounds, xy_2147483680(renderer_3489662318.boundsStack[chckIndx((renderer_3489662318.boundsStack).length - 1, 0, (renderer_3489662318.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3489662317.lastBounds, NTI2147483653);
    renderer_3489662318.boundsStack.push(Temporary1);;
    try {
    var css_3489662343 = "left: ";
    (css_3489662343) += (((relBounds_3489662335.x) | 0));;
    (css_3489662343) += ("px; top: ");;
    (css_3489662343) += (((relBounds_3489662335.y) | 0));;
    (css_3489662343) += ("px; width: ");;
    (css_3489662343) += (((relBounds_3489662335.w) | 0));;
    (css_3489662343) += ("px; height: ");;
    (css_3489662343) += (((relBounds_3489662335.h) | 0));;
    (css_3489662343) += ("px;");;
    var backgroundColor_3489662376 = getBackgroundColor_2785018344(self_3489662317);
    if (self_3489662317.fillBackground) {
    (css_3489662343) += ("background: ");;
    (css_3489662343) += (myToHtmlHex_3489662272(backgroundColor_3489662376));;
    (css_3489662343) += (";");;
    }
    
    if (self_3489662317.maskContent) {
    (css_3489662343) += ("overflow: hidden;");;
    }
    
    if (self_3489662317.drawBorder) {
    (css_3489662343) += ("border: 1px solid ");;
    (css_3489662343) += (myToHtmlHex_3489662272(getForegroundColor_2785018341(self_3489662317)));;
    (css_3489662343) += (";");;
    }
    
    var newChildren_3489662409 = [];
    renderer_3489662318.domUpdates.push(HEX3Aanonymous_3489662410);;
    var existingCount_3489662431 = (element_3489662319[element_3489662319_Idx].children).length;
    Label3: {
      var i_3489662437 = 0;
      var c_3489662438 = null;
      var i_536872786 = 0;
      var L_536872787 = (self_3489662317.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872786 < L_536872787)) break Label5;
            i_3489662437 = i_536872786;
            c_3489662438 = self_3489662317.children[chckIndx(i_536872786, 0, (self_3489662317.children).length - 1)];
            if ((i_3489662437 < existingCount_3489662431)) {
            Temporary6 = element_3489662319[element_3489662319_Idx].children[chckIndx(i_3489662437, 0, (element_3489662319[element_3489662319_Idx].children).length - 1)];
            }
            else {
            Temporary6 = null;
            }
            
            var childElement_3489662439 = [Temporary6];
            renderWidget_3489662178(c_3489662438, renderer_3489662318, childElement_3489662439, 0, (forceRedraw_3489662320 || self_3489662317.fillBackground), frameIndex_3489662321, buffer_3489662322, buffer_3489662322_Idx);
            if (((existingCount_3489662431 <= i_3489662437) && !((childElement_3489662439[0] == null)))) {
            newChildren_3489662409.push(childElement_3489662439[0]);;
            }
            
            i_536872786 = addInt(i_536872786, 1);
            if (!(((self_3489662317.children).length == L_536872787))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3489662236(renderer_3489662318, "boundsStack");
    }
  };

  
}

function renderWidget_3489662171(self_3489662172, renderer_3489662173, element_3489662174, element_3489662174_Idx, forceRedraw_3489662175, frameIndex_3489662176, buffer_3489662177, buffer_3489662177_Idx) {
  
}

function renderWidget_3489662178(self_3489662172, renderer_3489662173, element_3489662174, element_3489662174_Idx, forceRedraw_3489662175, frameIndex_3489662176, buffer_3489662177, buffer_3489662177_Idx) {
    chckNilDisp(self_3489662172);
    if (isObj(self_3489662172.m_type, NTI2785017879)) {
    renderWidget_3489662532(self_3489662172, renderer_3489662173, element_3489662174, element_3489662174_Idx, forceRedraw_3489662175, frameIndex_3489662176, buffer_3489662177, buffer_3489662177_Idx);
    }
    else {
    if (isObj(self_3489662172.m_type, NTI2785017873)) {
    renderWidget_3489662465(self_3489662172, renderer_3489662173, element_3489662174, element_3489662174_Idx, forceRedraw_3489662175, frameIndex_3489662176, buffer_3489662177, buffer_3489662177_Idx);
    }
    else {
    if (isObj(self_3489662172.m_type, NTI2785017871)) {
    renderWidget_3489662316(self_3489662172, renderer_3489662173, element_3489662174, element_3489662174_Idx, forceRedraw_3489662175, frameIndex_3489662176, buffer_3489662177, buffer_3489662177_Idx);
    }
    else {
    if (isObj(self_3489662172.m_type, NTI2785017868)) {
    renderWidget_3489662171(self_3489662172, renderer_3489662173, element_3489662174, element_3489662174_Idx, forceRedraw_3489662175, frameIndex_3489662176, buffer_3489662177, buffer_3489662177_Idx);
    }
    }}}

  
}

function applyDomUpdates_3489662179(self_3489662180) {
    Label1: {
      var update_3489662203 = null;
      var i_536872791 = 0;
      var L_536872792 = (self_3489662180.domUpdates).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872791 < L_536872792)) break Label3;
            update_3489662203 = self_3489662180.domUpdates[chckIndx(i_536872791, 0, (self_3489662180.domUpdates).length - 1)];
            update_3489662203();
            i_536872791 = addInt(i_536872791, 1);
            if (!(((self_3489662180.domUpdates).length == L_536872792))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3489662180.domUpdates.length < 0) { for (var i = self_3489662180.domUpdates.length ; i < 0 ; ++i) self_3489662180.domUpdates.push(null); }
               else { self_3489662180.domUpdates.length = 0; };

  
}

function render_3489662228(self_3489662229, widget_3489662230, frameIndex_3489662231) {
    var Temporary2;

    self_3489662229.boundsStack.push(rect_2147483672(vec2_2164261686(), size_2768240760(self_3489662229)));;
    try {
    var buffer_3489662248 = [[]];
    if ((0 < (self_3489662229.content.children).length)) {
    Temporary2 = self_3489662229.content.children[chckIndx(0, 0, (self_3489662229.content.children).length - 1)];
    }
    else {
    Temporary2 = null;
    }
    
    var element_3489662253 = [Temporary2];
    var wasNil_3489662257 = (element_3489662253[0] == null);
    renderWidget_3489662178(widget_3489662230, self_3489662229, element_3489662253, 0, self_3489662229.redrawEverything, frameIndex_3489662231, buffer_3489662248, 0);
    applyDomUpdates_3489662179(self_3489662229);
    if ((!((element_3489662253[0] == null)) && wasNil_3489662257)) {
    self_3489662229.content.appendChild(element_3489662253[0]);
    }
    
    self_3489662229.redrawEverything = false;
    } finally {
    var _ = pop_3489662236(self_3489662229, "boundsStack");
    }

  
}

function render_2768240747(self_2768240748, widget_2768240749, frameIndex_2768240750) {
  
}

function render_2768240751(self_2768240748, widget_2768240749, frameIndex_2768240750) {
    chckNilDisp(self_2768240748);
    if (isObj(self_2768240748.m_type, NTI3489660939)) {
    render_3489662228(self_2768240748, widget_2768240749, frameIndex_2768240750);
    }
    else {
    if (isObj(self_2768240748.m_type, NTI2768240644)) {
    render_2768240747(self_2768240748, widget_2768240749, frameIndex_2768240750);
    }
    }

  
}

function sizeChanged_2768240752(self_2768240753) {
  var result_2768240754 = false;

  return result_2768240754;

}

function sizeChanged_2768240755(self_2768240753) {
  var result_2768240756 = false;

  BeforeRet: {
    result_2768240756 = sizeChanged_2768240752(self_2768240753);
    break BeforeRet;
  };

  return result_2768240756;

}

function initDoublyLinkedList_3489661080() {
  var result_3489661082 = ({head: null, tail: null});

  return result_3489661082;

}

function initTable_3489661086(initialSize_3489661089) {
  var result_3489661090 = ({data: [], counter: 0});

    var correctSizeHEX60gensym3_3489661092 = slotsNeeded_1308622891(chckRange(initialSize_3489661089, 0, 2147483647));
    result_3489661090.counter = 0;
    result_3489661090.data = new Array(chckRange(correctSizeHEX60gensym3_3489661092, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3489661092, 0, 2147483647) ; ++i) { result_3489661090.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_3489661090;

}

function correctSize_3053453333(cap_3053453334) {
  var result_3053453335 = 0;

    result_3053453335 = cap_3053453334;

  return result_3053453335;

}

function newLruCache_3489661070(capacity_3489661073, recordRemovedKeys_3489661074) {
  var result_3489661075 = null;

    result_3489661075 = {capacity: capacity_3489661073, list: initDoublyLinkedList_3489661080(), table: initTable_3489661086(correctSize_3053453333(capacity_3489661073)), recordRemovedKeys: recordRemovedKeys_3489661074, removedKeys: ({data: [], counter: 0})};

  return result_3489661075;

}

function getModifiers_3489661010(self_3489661011) {
  var result_3489661012 = {};

    if (self_3489661011.altKey) {
    result_3489661012[2] = true;
    }
    
    if (self_3489661011.shiftKey) {
    result_3489661012[1] = true;
    }
    
    if (self_3489661011.ctrlKey) {
    result_3489661012[0] = true;
    }
    

  return result_3489661012;

}

function runeAt_788536179(s_788536180, i_788536181) {
  var result_788536182 = 0;

    if ((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] <= 127)) {
    result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 5) == 6)) {
    if ((i_788536181 <= subInt((s_788536180).length, 2))) {
    result_788536182 = chckRange((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 31) << 6) | (s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 4) == 14)) {
    if ((i_788536181 <= subInt((s_788536180).length, 3))) {
    result_788536182 = chckRange(((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 15) << 12) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 3) == 30)) {
    if ((i_788536181 <= subInt((s_788536180).length, 4))) {
    result_788536182 = chckRange((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 7) << 18) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 2) == 62)) {
    if ((i_788536181 <= subInt((s_788536180).length, 5))) {
    result_788536182 = chckRange(((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 3) << 24) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 1) == 126)) {
    if ((i_788536181 <= subInt((s_788536180).length, 6))) {
    result_788536182 = chckRange((((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 1) << 30) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 24)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 5), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
      result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_788536182;

}

function toInput_3489661004(key_3489661005, code_3489661006, keyCode_3489661007) {
  var result_3489662167 = 0;

    switch (key_3489661005) {
    case "Enter":
      result_3489662167 = -1;
      break;
    case "Escape":
      result_3489662167 = -2;
      break;
    case "Backspace":
      result_3489662167 = -3;
      break;
    case " ":
      result_3489662167 = -4;
      break;
    case "Delete":
      result_3489662167 = -5;
      break;
    case "Tab":
      result_3489662167 = -6;
      break;
    case "ArrowLeft":
      result_3489662167 = -7;
      break;
    case "ArrowRight":
      result_3489662167 = -8;
      break;
    case "ArrowUp":
      result_3489662167 = -9;
      break;
    case "ArrowDown":
      result_3489662167 = -10;
      break;
    case "Home":
      result_3489662167 = -11;
      break;
    case "End":
      result_3489662167 = -12;
      break;
    case "PageUp":
      result_3489662167 = -13;
      break;
    case "PageDown":
      result_3489662167 = -14;
      break;
    case "F1":
      result_3489662167 = -20;
      break;
    case "F2":
      result_3489662167 = -21;
      break;
    case "F3":
      result_3489662167 = -22;
      break;
    case "F4":
      result_3489662167 = -23;
      break;
    case "F5":
      result_3489662167 = -24;
      break;
    case "F6":
      result_3489662167 = -25;
      break;
    case "F7":
      result_3489662167 = -26;
      break;
    case "F8":
      result_3489662167 = -27;
      break;
    case "F9":
      result_3489662167 = -28;
      break;
    case "F10":
      result_3489662167 = -29;
      break;
    case "F11":
      result_3489662167 = -30;
      break;
    case "F12":
      result_3489662167 = -31;
      break;
    default: 
      if (      keyCode_3489661007 >= 112 && keyCode_3489661007 <= 123      ){        result_3489662167 = addInt(-20, subInt(keyCode_3489661007, 112));
        }
      else{
        if ((((key_3489661005) == null ? 0 : (key_3489661005).length) == 1)) {
        result_3489662167 = runeAt_788536179(cstrToNimstr(key_3489661005), 0);
        }
        
        }
      break;
    }

  return result_3489662167;

}

function invoke_3489661255(event_3489661257, arg_3489661258) {
    Label1: {
      var h_3489661281 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872800 = 0;
      var L_536872801 = (event_3489661257.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872800 < L_536872801)) break Label3;
            h_3489661281 = event_3489661257.handlers[chckIndx(i_536872800, 0, (event_3489661257.handlers).length - 1)];
            h_3489661281.Field1(arg_3489661258);
            i_536872800 = addInt(i_536872800, 1);
            if (!(((event_3489661257.handlers).length == L_536872801))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getModifiers_3489661025(self_3489661026) {
  var result_3489661027 = {};

    if (self_3489661026.altKey) {
    result_3489661027[2] = true;
    }
    
    if (self_3489661026.shiftKey) {
    result_3489661027[1] = true;
    }
    
    if (self_3489661026.ctrlKey) {
    result_3489661027[0] = true;
    }
    

  return result_3489661027;

}

function invoke_3489661598(event_3489661600, arg_3489661601) {
    Label1: {
      var h_3489661624 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872805 = 0;
      var L_536872806 = (event_3489661600.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872805 < L_536872806)) break Label3;
            h_3489661624 = event_3489661600.handlers[chckIndx(i_536872805, 0, (event_3489661600.handlers).length - 1)];
            h_3489661624.Field1(arg_3489661601);
            i_536872805 = addInt(i_536872805, 1);
            if (!(((event_3489661600.handlers).length == L_536872806))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function HEX2A_3489661435(aHEX60gensym74_3489661437, bHEX60gensym74_3489661438) {
  var result_3489661439 = ({x: 0.0, y: 0.0});

    result_3489661439 = nimCopy(result_3489661439, {x: (aHEX60gensym74_3489661437.x * bHEX60gensym74_3489661438), y: (aHEX60gensym74_3489661437.y * bHEX60gensym74_3489661438)}, NTI2164261152);

  return result_3489661439;

}

function getMouseButton_3489661056(event_3489661057) {
    var Temporary1;

  var result_3489661058 = 0;

    if (    event_3489661057.button == 0    ){      Temporary1 = 0;
      }
    else if (    event_3489661057.button == 1    ){      Temporary1 = 1;
      }
    else if (    event_3489661057.button == 2    ){      Temporary1 = 2;
      }
    else{
      Temporary1 = 5;
      }
    result_3489661058 = Temporary1;

  return result_3489661058;

}

function invoke_3489661694(event_3489661696, arg_3489661697) {
    Label1: {
      var h_3489661720 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872810 = 0;
      var L_536872811 = (event_3489661696.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872810 < L_536872811)) break Label3;
            h_3489661720 = event_3489661696.handlers[chckIndx(i_536872810, 0, (event_3489661696.handlers).length - 1)];
            h_3489661720.Field1(arg_3489661697);
            i_536872810 = addInt(i_536872810, 1);
            if (!(((event_3489661696.handlers).length == L_536872811))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3489661803(event_3489661805, arg_3489661806) {
    Label1: {
      var h_3489661829 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872815 = 0;
      var L_536872816 = (event_3489661805.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872815 < L_536872816)) break Label3;
            h_3489661829 = event_3489661805.handlers[chckIndx(i_536872815, 0, (event_3489661805.handlers).length - 1)];
            h_3489661829.Field1(arg_3489661806);
            i_536872815 = addInt(i_536872815, 1);
            if (!(((event_3489661805.handlers).length == L_536872816))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getMouseButtons_3489661040(event_3489661041) {
  var result_3489661042 = {};

    var buttons_3489661043 = event_3489661041.buttons;
    if (!(((buttons_3489661043 & 1) == 0))) {
    result_3489661042[0] = true;
    }
    
    if (!(((buttons_3489661043 & 2) == 0))) {
    result_3489661042[2] = true;
    }
    
    if (!(((buttons_3489661043 & 4) == 0))) {
    result_3489661042[1] = true;
    }
    

  return result_3489661042;

}

function invoke_3489661960(event_3489661962, arg_3489661963) {
    Label1: {
      var h_3489661986 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872820 = 0;
      var L_536872821 = (event_3489661962.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872820 < L_536872821)) break Label3;
            h_3489661986 = event_3489661962.handlers[chckIndx(i_536872820, 0, (event_3489661962.handlers).length - 1)];
            h_3489661986.Field1(arg_3489661963);
            i_536872820 = addInt(i_536872820, 1);
            if (!(((event_3489661962.handlers).length == L_536872821))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function updateFontSettings_3489661008(self_3489661009) {
    var d_3489662131 = document.createElement("div");
    d_3489662131.setAttribute("style", "position: absolute; visibility: hidden; height: auto; width: auto;");
    d_3489662131.innerHTML = toJSStr(nsuRepeatStr([35], 100));
    self_3489661009.content.appendChild(d_3489662131);
    self_3489661009.mLineHeight = d_3489662131.clientHeight;
    self_3489661009.mCharWidth = (d_3489662131.clientWidth / 100.0);
    self_3489661009.content.removeChild(d_3489662131);

  
}

function init_3489661068(self_3489661069) {
    
function HEX3Aanonymous_3489661133(text_3489661134, fontSizeIncreasePercent_3489661135) {
      var result_3489661136 = ({x: 0.0, y: 0.0});

        result_3489661136.x = (((text_3489661134).length * self_3489661069.mCharWidth) * (1.0 + fontSizeIncreasePercent_3489661135));
        result_3489661136.y = (totalLineHeight_2768240810(self_3489661069) * (1.0 + fontSizeIncreasePercent_3489661135));

      return result_3489661136;

    }
    
function HEX3Aanonymous_3489661146(e_3489661147) {
        var oldEvent_3489661148 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661147;
        try {
        invoke_3489661171(self_3489661069.onResized, true);
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661148;
        }

      
    }
    
function HEX3Aanonymous_3489661227(e_3489661228) {
        var oldEvent_3489661229 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661228;
        try {
        var ke_3489661230 = e_3489661228;
        var modifiers_3489661231 = getModifiers_3489661010(ke_3489661230);
        var input_3489661232 = toInput_3489661004(ke_3489661230.key, ke_3489661230.code, ke_3489661230.keyCode);
        invoke_3489661255(self_3489661069.onKeyPress, {Field0: input_3489661232, Field1: nimCopy(null, modifiers_3489661231, NTI2013265950)});
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661229;
        }

      
    }
    
function HEX3Aanonymous_3489661311(e_3489661312) {
        var oldEvent_3489661313 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661312;
        try {
        var we_3489661314 = e_3489661312;
        var modifiers_3489661315 = getModifiers_3489661025(we_3489661314);
        invoke_3489661598(self_3489661069.onScroll, {Field0: vec2_2164261725(we_3489661314.clientX, we_3489661314.clientY), Field1: HEX2A_3489661435(vec2_2164261725(we_3489661314.deltaX, -(we_3489661314.deltaY)), 0.01), Field2: nimCopy(null, modifiers_3489661315, NTI2013265950)});
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661313;
        }

      
    }
    
function HEX3Aanonymous_3489661663(e_3489661664) {
        var oldEvent_3489661665 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661664;
        try {
        var me_3489661666 = e_3489661664;
        var modifiers_3489661667 = getModifiers_3489661025(me_3489661666);
        var mouseButton_3489661668 = getMouseButton_3489661056(me_3489661666);
        var currentTargetRect_3489661669 = me_3489661666.currentTarget.getBoundingClientRect();
        var x_3489661670 = (me_3489661666.pageX - currentTargetRect_3489661669.x);
        var y_3489661671 = (me_3489661666.pageY - currentTargetRect_3489661669.y);
        invoke_3489661694(self_3489661069.onMousePress, {Field0: mouseButton_3489661668, Field1: nimCopy(null, modifiers_3489661667, NTI2013265950), Field2: vec2_2164261725(x_3489661670, y_3489661671)});
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661665;
        }

      
    }
    
function HEX3Aanonymous_3489661741(e_3489661742) {
        var oldEvent_3489661743 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661742;
        try {
        var me_3489661744 = e_3489661742;
        var modifiers_3489661745 = getModifiers_3489661025(me_3489661744);
        var mouseButton_3489661746 = getMouseButton_3489661056(me_3489661744);
        var currentTargetRect_3489661747 = me_3489661744.currentTarget.getBoundingClientRect();
        var x_3489661748 = (me_3489661744.pageX - currentTargetRect_3489661747.x);
        var y_3489661749 = (me_3489661744.pageY - currentTargetRect_3489661747.y);
        invoke_3489661694(self_3489661069.onMouseRelease, {Field0: mouseButton_3489661746, Field1: nimCopy(null, modifiers_3489661745, NTI2013265950), Field2: vec2_2164261725(x_3489661748, y_3489661749)});
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661743;
        }

      
    }
    
function HEX3Aanonymous_3489661776(e_3489661777) {
        var oldEvent_3489661778 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661777;
        try {
        var me_3489661779 = e_3489661777;
        var modifiers_3489661780 = getModifiers_3489661025(me_3489661779);
        invoke_3489661803(self_3489661069.onMouseMove, {Field0: vec2_2164261725(me_3489661779.clientX, me_3489661779.clientY), Field1: vec2_2164261725(me_3489661779.movementX, me_3489661779.movementY), Field2: nimCopy(null, modifiers_3489661780, NTI2013265950), Field3: getMouseButtons_3489661040(me_3489661779)});
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661778;
        }

      
    }
    
function HEX3Aanonymous_3489661862(e_3489661863) {
        var oldEvent_3489661864 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661863;
        try {
        var de_3489661865 = e_3489661863;
        de_3489661865.preventDefault();
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661864;
        }

      
    }
    
function HEX3Aanonymous_3489661875(e_3489661876) {
                
function HEX3Aanonymous_3489661923(f_3489661924) {
                    
function HEX3Aanonymous_3489661936(e_3489661937) {
                        invoke_3489661960(self_3489661069.onDropFile, {Field0: cstrToNimstr(f_3489661924.name), Field1: cstrToNimstr((fileReader_3489661926.result || ''))});

                      
                    }

                    var fileReader_3489661926 = new FileReader();
                    fileReader_3489661926.readAsText(f_3489661924, "UTF-8");
                    fileReader_3489661926.onload = HEX3Aanonymous_3489661936;

                  
                }

        var oldEvent_3489661877 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661876;
        try {
        var de_3489661878 = e_3489661876;
        de_3489661878.preventDefault();
        console.log(de_3489661878.dataTransfer);;
        Label2: {
          var f_3489661904 = null;
          var i_536872795 = 0;
          var L_536872796 = (de_3489661878.dataTransfer.files).length;
          Label3: {
              Label4: while (true) {
              if (!(i_536872795 < L_536872796)) break Label4;
                f_3489661904 = de_3489661878.dataTransfer.files[chckIndx(i_536872795, 0, (de_3489661878.dataTransfer.files).length - 1)];
                HEX3Aanonymous_3489661923(f_3489661904);
                i_536872795 = addInt(i_536872795, 1);
                if (!(((de_3489661878.dataTransfer.files).length == L_536872796))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661877;
        }

      
    }

    self_3489661069.mFontSize = 18.0;
    self_3489661069.mLineHeight = 20.0;
    self_3489661069.mLineDistance = 2.0;
    self_3489661069.mCharWidth = 18.0;
    self_3489661069.escapedText = newLruCache_3489661070(1000, false);
    self_3489661069.layoutOptions.getTextBounds = HEX3Aanonymous_3489661133;
    window.addEventListener("resize", HEX3Aanonymous_3489661146, false);
    self_3489661069.content = document.getElementById("view");
    self_3489661069.content.addEventListener("keydown", HEX3Aanonymous_3489661227, false);
    self_3489661069.content.addEventListener("wheel", HEX3Aanonymous_3489661311, {passive: true, capture: false, once: false});
    self_3489661069.content.addEventListener("mousedown", HEX3Aanonymous_3489661663, false);
    self_3489661069.content.addEventListener("mouseup", HEX3Aanonymous_3489661741, false);
    self_3489661069.content.addEventListener("mousemove", HEX3Aanonymous_3489661776, false);
    self_3489661069.content.addEventListener("dragover", HEX3Aanonymous_3489661862, false);
    self_3489661069.content.addEventListener("drop", HEX3Aanonymous_3489661875, false);
    updateFontSettings_3489661008(self_3489661069);
    self_3489661069.content.focus();

  
}

function init_2768240762(self_2768240763) {
  
}

function init_2768240764(self_2768240763) {
    chckNilDisp(self_2768240763);
    if (isObj(self_2768240763.m_type, NTI3489660939)) {
    init_3489661068(self_2768240763);
    }
    else {
    if (isObj(self_2768240763.m_type, NTI2768240644)) {
    init_2768240762(self_2768240763);
    }
    }

  
}

function deinit_3489662108(self_3489662109) {
  
}

function deinit_2768240765(self_2768240766) {
  
}

function deinit_2768240767(self_2768240766) {
    chckNilDisp(self_2768240766);
    if (isObj(self_2768240766.m_type, NTI3489660939)) {
    deinit_3489662108(self_2768240766);
    }
    else {
    if (isObj(self_2768240766.m_type, NTI2768240644)) {
    deinit_2768240765(self_2768240766);
    }
    }

  
}

function processEvents_3489662168(self_3489662169) {
  var result_3489662170 = 0;

    result_3489662170 = 0;

  return result_3489662170;

}

function processEvents_2768240768(self_2768240769) {
  var result_2768240770 = 0;

  return result_2768240770;

}

function processEvents_2768240771(self_2768240769) {
  var result_2768240772 = 0;

  BeforeRet: {
    chckNilDisp(self_2768240769);
    if (isObj(self_2768240769.m_type, NTI3489660939)) {
    result_2768240772 = processEvents_3489662168(self_2768240769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240769.m_type, NTI2768240644)) {
    result_2768240772 = processEvents_2768240768(self_2768240769);
    break BeforeRet;
    }
    }
  };

  return result_2768240772;

}

function fontSizeHEX3D_3489662141(self_3489662142, fontSize_3489662143) {
    if (!((self_3489662142.mFontSize == fontSize_3489662143))) {
    self_3489662142.mFontSize = fontSize_3489662143;
    self_3489662142.content.style.fontSize = toJSStr(HEX24_33557336(fontSize_3489662143));
    self_3489662142.redrawEverything = true;
    updateFontSettings_3489661008(self_3489662142);
    }
    

  
}

function fontSizeHEX3D_2768240773(self_2768240774, fontSize_2768240775) {
  
}

function fontSizeHEX3D_2768240776(self_2768240774, fontSize_2768240775) {
    chckNilDisp(self_2768240774);
    if (isObj(self_2768240774.m_type, NTI3489660939)) {
    fontSizeHEX3D_3489662141(self_2768240774, fontSize_2768240775);
    }
    else {
    if (isObj(self_2768240774.m_type, NTI2768240644)) {
    fontSizeHEX3D_2768240773(self_2768240774, fontSize_2768240775);
    }
    }

  
}

function lineDistanceHEX3D_2768240777(self_2768240778, lineDistance_2768240779) {
  
}

function lineDistanceHEX3D_2768240780(self_2768240778, lineDistance_2768240779) {
    lineDistanceHEX3D_2768240777(self_2768240778, lineDistance_2768240779);

  
}

function fontSize_3489662147(self_3489662148) {
  var result_3489662149 = 0.0;

    result_3489662149 = self_3489662148.mFontSize;

  return result_3489662149;

}

function fontSize_2768240781(self_2768240782) {
  var result_2768240783 = 0.0;

  return result_2768240783;

}

function fontSize_2768240784(self_2768240782) {
  var result_2768240785 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240782);
    if (isObj(self_2768240782.m_type, NTI3489660939)) {
    result_2768240785 = fontSize_3489662147(self_2768240782);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240782.m_type, NTI2768240644)) {
    result_2768240785 = fontSize_2768240781(self_2768240782);
    break BeforeRet;
    }
    }
  };

  return result_2768240785;

}

function lineDistance_3489662150(self_3489662151) {
  var result_3489662152 = 0.0;

    result_3489662152 = self_3489662151.mLineDistance;

  return result_3489662152;

}

function lineDistance_2768240786(self_2768240787) {
  var result_2768240788 = 0.0;

  return result_2768240788;

}

function lineDistance_2768240789(self_2768240787) {
  var result_2768240790 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240787);
    if (isObj(self_2768240787.m_type, NTI3489660939)) {
    result_2768240790 = lineDistance_3489662150(self_2768240787);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240787.m_type, NTI2768240644)) {
    result_2768240790 = lineDistance_2768240786(self_2768240787);
    break BeforeRet;
    }
    }
  };

  return result_2768240790;

}

function lineHeight_3489662153(self_3489662154) {
  var result_3489662155 = 0.0;

    result_3489662155 = self_3489662154.mLineHeight;

  return result_3489662155;

}

function lineHeight_2768240791(self_2768240792) {
  var result_2768240793 = 0.0;

  return result_2768240793;

}

function lineHeight_2768240794(self_2768240792) {
  var result_2768240795 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240792);
    if (isObj(self_2768240792.m_type, NTI3489660939)) {
    result_2768240795 = lineHeight_3489662153(self_2768240792);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240792.m_type, NTI2768240644)) {
    result_2768240795 = lineHeight_2768240791(self_2768240792);
    break BeforeRet;
    }
    }
  };

  return result_2768240795;

}

function measureText_3489662159(self_3489662160, text_3489662161) {
  var result_3489662162 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    result_3489662162 = nimCopy(result_3489662162, vec2_2164261725(((text_3489662161).length * self_3489662160.mCharWidth), totalLineHeight_2768240810(self_3489662160)), NTI2164261152);
    break BeforeRet;
  };

  return result_3489662162;

}

function measureText_2768240801(self_2768240802, text_2768240803) {
  var result_2768240804 = ({x: 0.0, y: 0.0});

  return result_2768240804;

}

function measureText_2768240805(self_2768240802, text_2768240803) {
  var result_2768240806 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2768240802);
    if (isObj(self_2768240802.m_type, NTI3489660939)) {
    result_2768240806 = nimCopy(result_2768240806, measureText_3489662159(self_2768240802, text_2768240803), NTI2164261152);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240802.m_type, NTI2768240644)) {
    result_2768240806 = nimCopy(result_2768240806, measureText_2768240801(self_2768240802, text_2768240803), NTI2164261152);
    break BeforeRet;
    }
    }
  };

  return result_2768240806;

}

function preventDefault_3489662124(self_3489662125) {
  BeforeRet: {
    if ((self_3489662125.currentEvent == null)) {
    break BeforeRet;
    }
    
    self_3489662125.currentEvent.preventDefault();
  };

  
}

function preventDefault_2768240807(self_2768240808) {
  
}

function preventDefault_2768240809(self_2768240808) {
    chckNilDisp(self_2768240808);
    if (isObj(self_2768240808.m_type, NTI3489660939)) {
    preventDefault_3489662124(self_2768240808);
    }
    else {
    if (isObj(self_2768240808.m_type, NTI2768240644)) {
    preventDefault_2768240807(self_2768240808);
    }
    }

  
}

function mustRehash_1291846256(t_1291846258) {
  var result_1291846259 = false;

    if (!((t_1291846258.counter < (t_1291846258.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291846259 = ((mulInt((t_1291846258.data).length, 2) < mulInt(t_1291846258.counter, 3)) || (subInt((t_1291846258.data).length, t_1291846258.counter) < 4));

  return result_1291846259;

}

function rawInsert_1291846705(t_1291846709, data_1291846710, data_1291846710_Idx, key_1291846711, val_1291846712, hc_1291846713, h_1291846714) {
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field1 = key_1291846711;
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field2 = val_1291846712;
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field0 = hc_1291846713;

  
}

function enlarge_1291846411(t_1291846414) {
    var n_1291846417 = [];
    n_1291846417 = new Array(chckRange(mulInt((t_1291846414.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291846414.data).length, 2), 0, 2147483647) ; ++i) { n_1291846417[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_1291846414.data; t_1291846414.data = n_1291846417; n_1291846417 = Temporary1;    Label2: {
      var i_1291846481 = 0;
      var colontmp__536872827 = 0;
      colontmp__536872827 = (n_1291846417).length - 1;
      var res_536872828 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872828 <= colontmp__536872827)) break Label4;
            i_1291846481 = res_536872828;
            var eh_1291846535 = n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291846535)) {
            var j_1291846539 = (eh_1291846535 & (t_1291846414.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291846414.data[chckIndx(j_1291846539, 0, (t_1291846414.data).length - 1)].Field0)) break Label6;
                  j_1291846539 = nextTry_1308622883(j_1291846539, (t_1291846414.data).length - 1);
                }
            };
            rawInsert_1291846705(t_1291846414, t_1291846414, "data", n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field1, n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field2, eh_1291846535, j_1291846539);
            }
            
            res_536872828 = addInt(res_536872828, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291846874(t_1291846877, key_1291846878, hc_1291846879) {
  var result_1291846880 = 0;

  BeforeRet: {
    if (((t_1291846877.data).length == 0)) {
    result_1291846880 = -1;
    break BeforeRet;
    }
    
    var h_1291846931 = (hc_1291846879 & (t_1291846877.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field0)) break Label2;
          if (((t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field0 == hc_1291846879) && (t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field1 == key_1291846878))) {
          result_1291846880 = h_1291846931;
          break BeforeRet;
          }
          
          h_1291846931 = nextTry_1308622883(h_1291846931, (t_1291846877.data).length - 1);
        }
    };
    result_1291846880 = subInt(-1, h_1291846931);
  };

  return result_1291846880;

}

function HEX5BHEX5DHEX3D_1291845847(t_1291845850, key_1291845851, val_1291845852) {
    if (((t_1291845850.data).length == 0)) {
    var correctSizeHEX60gensym1_1291845902 = slotsNeeded_1308622891(32);
    t_1291845850.counter = 0;
    t_1291845850.data = new Array(chckRange(correctSizeHEX60gensym1_1291845902, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1291845902, 0, 2147483647) ; ++i) { t_1291845850.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_1291845907 = [0];
    var index_1291846149 = rawGet_1291845908(t_1291845850, key_1291845851, hc_1291845907, 0);
    if ((0 <= index_1291846149)) {
    t_1291845850.data[chckIndx(index_1291846149, 0, (t_1291845850.data).length - 1)].Field2 = val_1291845852;
    }
    else {
      if (((t_1291845850.data).length == 0)) {
      var correctSizeHEX60gensym6_1291846251 = slotsNeeded_1308622891(32);
      t_1291845850.counter = 0;
      t_1291845850.data = new Array(chckRange(correctSizeHEX60gensym6_1291846251, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1291846251, 0, 2147483647) ; ++i) { t_1291845850.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1291846256(t_1291845850)) {
      enlarge_1291846411(t_1291845850);
      index_1291846149 = rawGetKnownHC_1291846874(t_1291845850, key_1291845851, hc_1291845907[0]);
      }
      
      index_1291846149 = subInt(-1, index_1291846149);
      rawInsert_1291846705(t_1291845850, t_1291845850, "data", key_1291845851, val_1291845852, hc_1291845907[0], index_1291846149);
      t_1291845850.counter = addInt(t_1291845850.counter, 1);
    }
    

  
}

function registerEditor_1291845804(self_1291845805, editor_1291845806) {
    HEX5BHEX5DHEX3D_1291845847(self_1291845805.editors, editor_1291845806.id, editor_1291845806);
    invoke_1291847134(self_1291845805.onEditorRegistered, editor_1291845806);

  
}

function handleInput_3254793037(self_3254793038, input_3254793039) {
  var result_3254793040 = 0;

  BeforeRet: {
    var fmtRes_3254793045 = [mnewString(0)];
    fmtRes_3254793045[0].push.apply(fmtRes_3254793045[0], [91,109,111,100,101,108,101,100,105,116,111,114,93,58,32,72,97,110,100,108,101,32,105,110,112,117,116,32,39]);;
    formatValue_721420459(fmtRes_3254793045, 0, input_3254793039, []);
    fmtRes_3254793045[0].push.apply(fmtRes_3254793045[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3254793045[0], NTI33554449)]);
    self_3254793038.mCursorBeforeTransaction = nimCopy(self_3254793038.mCursorBeforeTransaction, self_3254793038.mCursor, NTI3254779907);
    if (insertTextAtCursor_3254780241(self_3254793038, input_3254793039)) {
    finishTransaction_3254785533(self_3254793038.document, true);
    result_3254793040 = 3;
    break BeforeRet;
    }
    
    result_3254793040 = 1;
    break BeforeRet;
  };

  return result_3254793040;

}

function injectDependencies_3254794387(self_3254794388, ed_3254794389) {
      
function HEX3Aanonymous_3254794409(actionHEX60gensym199HEX60gensym200_3254794410, argHEX60gensym199HEX60gensym200_3254794411) {
        var result_3254794412 = 0;

        BeforeRet: {
          if (handlerHEX60gensym199_3254794397.config.handleActions) {
          var action_3254794413 = nimCopy(null, actionHEX60gensym199HEX60gensym200_3254794410, NTI33554449);
          var arg_3254794414 = nimCopy(null, argHEX60gensym199HEX60gensym200_3254794411, NTI33554449);
          var responseHEX60gensym199HEX60gensym200_3254794415 = handleAction_3254780231(self_3254794388, action_3254794413, arg_3254794414);
          if (handlerHEX60gensym199_3254794397.config.consumeAllActions) {
          result_3254794412 = 3;
          break BeforeRet;
          }
          
          result_3254794412 = responseHEX60gensym199HEX60gensym200_3254794415;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym199_3254794397.config.consumeAllActions) {
          result_3254794412 = 3;
          break BeforeRet;
          }
          else {
            result_3254794412 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3254794412;

      }
      
function HEX3Aanonymous_3254794417(inputHEX60gensym199HEX60gensym201_3254794418) {
        var result_3254794419 = 0;

        BeforeRet: {
          if (handlerHEX60gensym199_3254794397.config.handleInputs) {
          var input_3254794420 = nimCopy(null, inputHEX60gensym199HEX60gensym201_3254794418, NTI33554449);
          result_3254794419 = handleInput_3254793037(self_3254794388, input_3254794420);
          break BeforeRet;
          }
          else {
            result_3254794419 = 1;
            break BeforeRet;
          }
          
        };

        return result_3254794419;

      }
      
function HEX3Aanonymous_3254794440(actionHEX60gensym202HEX60gensym203_3254794441, argHEX60gensym202HEX60gensym203_3254794442) {
        var result_3254794443 = 0;

        BeforeRet: {
          if (handlerHEX60gensym202_3254794428.config.handleActions) {
          var action_3254794444 = nimCopy(null, actionHEX60gensym202HEX60gensym203_3254794441, NTI33554449);
          var arg_3254794445 = nimCopy(null, argHEX60gensym202HEX60gensym203_3254794442, NTI33554449);
          var responseHEX60gensym202HEX60gensym203_3254794446 = handleAction_3254780231(self_3254794388, action_3254794444, arg_3254794445);
          if (handlerHEX60gensym202_3254794428.config.consumeAllActions) {
          result_3254794443 = 3;
          break BeforeRet;
          }
          
          result_3254794443 = responseHEX60gensym202HEX60gensym203_3254794446;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym202_3254794428.config.consumeAllActions) {
          result_3254794443 = 3;
          break BeforeRet;
          }
          else {
            result_3254794443 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3254794443;

      }
      
function HEX3Aanonymous_3254794448(inputHEX60gensym202HEX60gensym204_3254794449) {
        var result_3254794450 = 0;

        BeforeRet: {
          if (handlerHEX60gensym202_3254794428.config.handleInputs) {
          var input_3254794451 = nimCopy(null, inputHEX60gensym202HEX60gensym204_3254794449, NTI33554449);
          result_3254794450 = handleInput_3254793037(self_3254794388, input_3254794451);
          break BeforeRet;
          }
          else {
            result_3254794450 = 1;
            break BeforeRet;
          }
          
        };

        return result_3254794450;

      }

    self_3254794388.editor = ed_3254794389;
    registerEditor_1291845804(self_3254794388.editor, self_3254794388);
    Label1: {
      var handlerHEX60gensym199_3254794397 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym199_3254794397.config = getEventHandlerConfig_1291849162(ed_3254794389, [101,100,105,116,111,114,46,109,111,100,101,108]);
      handlerHEX60gensym199_3254794397.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_3254794389, [101,100,105,116,111,114,46,109,111,100,101,108]));
      handlerHEX60gensym199_3254794397.handleAction = HEX3Aanonymous_3254794409;
      handlerHEX60gensym199_3254794397.handleInput = HEX3Aanonymous_3254794417;
    };
    self_3254794388.eventHandler = handlerHEX60gensym199_3254794397;
    Label2: {
      var handlerHEX60gensym202_3254794428 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym202_3254794428.config = getEventHandlerConfig_1291849162(ed_3254794389, [101,100,105,116,111,114,46,109,111,100,101,108,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym202_3254794428.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_3254794389, [101,100,105,116,111,114,46,109,111,100,101,108,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym202_3254794428.handleAction = HEX3Aanonymous_3254794440;
      handlerHEX60gensym202_3254794428.handleInput = HEX3Aanonymous_3254794448;
    };
    self_3254794388.completionEventHandler = handlerHEX60gensym202_3254794428;

  
}

function handleInput_2969584523(self_2969584524, input_2969584525) {
  var result_2969584526 = 0;

  BeforeRet: {
    result_2969584526 = 1;
    break BeforeRet;
  };

  return result_2969584526;

}

function injectDependencies_2969584918(self_2969584919, ed_2969584920) {
      
function HEX3Aanonymous_2969584940(actionHEX60gensym1040HEX60gensym1041_2969584941, argHEX60gensym1040HEX60gensym1041_2969584942) {
        var result_2969584943 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1040_2969584928.config.handleActions) {
          var action_2969584944 = nimCopy(null, actionHEX60gensym1040HEX60gensym1041_2969584941, NTI33554449);
          var arg_2969584945 = nimCopy(null, argHEX60gensym1040HEX60gensym1041_2969584942, NTI33554449);
          var responseHEX60gensym1040HEX60gensym1041_2969584946 = handleAction_2969583526(self_2969584919, action_2969584944, arg_2969584945);
          if (handlerHEX60gensym1040_2969584928.config.consumeAllActions) {
          result_2969584943 = 3;
          break BeforeRet;
          }
          
          result_2969584943 = responseHEX60gensym1040HEX60gensym1041_2969584946;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1040_2969584928.config.consumeAllActions) {
          result_2969584943 = 3;
          break BeforeRet;
          }
          else {
            result_2969584943 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2969584943;

      }
      
function HEX3Aanonymous_2969584948(inputHEX60gensym1040HEX60gensym1042_2969584949) {
        var result_2969584950 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1040_2969584928.config.handleInputs) {
          var input_2969584951 = nimCopy(null, inputHEX60gensym1040HEX60gensym1042_2969584949, NTI33554449);
          result_2969584950 = handleInput_2969584523(self_2969584919, input_2969584951);
          break BeforeRet;
          }
          else {
            result_2969584950 = 1;
            break BeforeRet;
          }
          
        };

        return result_2969584950;

      }
      
function HEX3Aanonymous_2969584971(actionHEX60gensym1043HEX60gensym1044_2969584972, argHEX60gensym1043HEX60gensym1044_2969584973) {
        var result_2969584974 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1043_2969584959.config.handleActions) {
          var action_2969584975 = nimCopy(null, actionHEX60gensym1043HEX60gensym1044_2969584972, NTI33554449);
          var arg_2969584976 = nimCopy(null, argHEX60gensym1043HEX60gensym1044_2969584973, NTI33554449);
          var responseHEX60gensym1043HEX60gensym1044_2969584977 = handleAction_2969583526(self_2969584919, action_2969584975, arg_2969584976);
          if (handlerHEX60gensym1043_2969584959.config.consumeAllActions) {
          result_2969584974 = 3;
          break BeforeRet;
          }
          
          result_2969584974 = responseHEX60gensym1043HEX60gensym1044_2969584977;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1043_2969584959.config.consumeAllActions) {
          result_2969584974 = 3;
          break BeforeRet;
          }
          else {
            result_2969584974 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2969584974;

      }
      
function HEX3Aanonymous_2969584979(inputHEX60gensym1043HEX60gensym1045_2969584980) {
        var result_2969584981 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1043_2969584959.config.handleInputs) {
          var input_2969584982 = nimCopy(null, inputHEX60gensym1043HEX60gensym1045_2969584980, NTI33554449);
          result_2969584981 = 1;
          break BeforeRet;
          }
          else {
            result_2969584981 = 1;
            break BeforeRet;
          }
          
        };

        return result_2969584981;

      }

    self_2969584919.editor = ed_2969584920;
    registerEditor_1291845804(self_2969584919.editor, self_2969584919);
    Label1: {
      var handlerHEX60gensym1040_2969584928 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1040_2969584928.config = getEventHandlerConfig_1291849162(ed_2969584920, [101,100,105,116,111,114,46,97,115,116]);
      handlerHEX60gensym1040_2969584928.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2969584920, [101,100,105,116,111,114,46,97,115,116]));
      handlerHEX60gensym1040_2969584928.handleAction = HEX3Aanonymous_2969584940;
      handlerHEX60gensym1040_2969584928.handleInput = HEX3Aanonymous_2969584948;
    };
    self_2969584919.eventHandler = handlerHEX60gensym1040_2969584928;
    Label2: {
      var handlerHEX60gensym1043_2969584959 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1043_2969584959.config = getEventHandlerConfig_1291849162(ed_2969584920, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1043_2969584959.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2969584920, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1043_2969584959.handleAction = HEX3Aanonymous_2969584971;
      handlerHEX60gensym1043_2969584959.handleInput = HEX3Aanonymous_2969584979;
    };
    self_2969584919.textEditEventHandler = handlerHEX60gensym1043_2969584959;

  
}

function injectDependencies_2818593484(self_2818593485, ed_2818593486) {
      
function HEX3Aanonymous_2818593507(actionHEX60gensym968HEX60gensym969_2818593508, argHEX60gensym968HEX60gensym969_2818593509) {
        var result_2818593510 = 0;

        BeforeRet: {
          if (handlerHEX60gensym968_2818593495.config.handleActions) {
          var action_2818593511 = nimCopy(null, actionHEX60gensym968HEX60gensym969_2818593508, NTI33554449);
          var arg_2818593512 = nimCopy(null, argHEX60gensym968HEX60gensym969_2818593509, NTI33554449);
          var responseHEX60gensym968HEX60gensym969_2818593513 = handleAction_2818572655(self_2818593485, action_2818593511, arg_2818593512);
          if (handlerHEX60gensym968_2818593495.config.consumeAllActions) {
          result_2818593510 = 3;
          break BeforeRet;
          }
          
          result_2818593510 = responseHEX60gensym968HEX60gensym969_2818593513;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym968_2818593495.config.consumeAllActions) {
          result_2818593510 = 3;
          break BeforeRet;
          }
          else {
            result_2818593510 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818593510;

      }
      
function HEX3Aanonymous_2818593515(inputHEX60gensym968HEX60gensym970_2818593516) {
        var result_2818593517 = 0;

        BeforeRet: {
          if (handlerHEX60gensym968_2818593495.config.handleInputs) {
          var input_2818593518 = nimCopy(null, inputHEX60gensym968HEX60gensym970_2818593516, NTI33554449);
          result_2818593517 = handleInput_2818572663(self_2818593485, input_2818593518);
          break BeforeRet;
          }
          else {
            result_2818593517 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818593517;

      }
      
function HEX3Aanonymous_2818593538(actionHEX60gensym971HEX60gensym972_2818593539, argHEX60gensym971HEX60gensym972_2818593540) {
        var result_2818593541 = 0;

        BeforeRet: {
          if (handlerHEX60gensym971_2818593526.config.handleActions) {
          var action_2818593542 = nimCopy(null, actionHEX60gensym971HEX60gensym972_2818593539, NTI33554449);
          var arg_2818593543 = nimCopy(null, argHEX60gensym971HEX60gensym972_2818593540, NTI33554449);
          var responseHEX60gensym971HEX60gensym972_2818593544 = handleAction_2818572655(self_2818593485, action_2818593542, arg_2818593543);
          if (handlerHEX60gensym971_2818593526.config.consumeAllActions) {
          result_2818593541 = 3;
          break BeforeRet;
          }
          
          result_2818593541 = responseHEX60gensym971HEX60gensym972_2818593544;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym971_2818593526.config.consumeAllActions) {
          result_2818593541 = 3;
          break BeforeRet;
          }
          else {
            result_2818593541 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818593541;

      }
      
function HEX3Aanonymous_2818593546(inputHEX60gensym971HEX60gensym973_2818593547) {
        var result_2818593548 = 0;

        BeforeRet: {
          if (handlerHEX60gensym971_2818593526.config.handleInputs) {
          var input_2818593549 = nimCopy(null, inputHEX60gensym971HEX60gensym973_2818593547, NTI33554449);
          result_2818593548 = handleInput_2818572663(self_2818593485, input_2818593549);
          break BeforeRet;
          }
          else {
            result_2818593548 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818593548;

      }

    self_2818593485.editor = ed_2818593486;
    registerEditor_1291845804(self_2818593485.editor, self_2818593485);
    var config_2818593487 = getEventHandlerConfig_1291849162(ed_2818593486, [101,100,105,116,111,114,46,116,101,120,116]);
    Label1: {
      var handlerHEX60gensym968_2818593495 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym968_2818593495.config = config_2818593487;
      handlerHEX60gensym968_2818593495.dfaInternal = buildDFA_2113929279(config_2818593487);
      handlerHEX60gensym968_2818593495.handleAction = HEX3Aanonymous_2818593507;
      handlerHEX60gensym968_2818593495.handleInput = HEX3Aanonymous_2818593515;
    };
    self_2818593485.eventHandler = handlerHEX60gensym968_2818593495;
    Label2: {
      var handlerHEX60gensym971_2818593526 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym971_2818593526.config = getEventHandlerConfig_1291849162(ed_2818593486, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym971_2818593526.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2818593486, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym971_2818593526.handleAction = HEX3Aanonymous_2818593538;
      handlerHEX60gensym971_2818593526.handleInput = HEX3Aanonymous_2818593546;
    };
    self_2818593485.completionEventHandler = handlerHEX60gensym971_2818593526;

  
}

function injectDependencies_1291847758(self_1291847759, ed_1291847760) {
  
}

function injectDependencies_1291847761(self_1291847759, ed_1291847760) {
    chckNilDisp(self_1291847759);
    if (isObj(self_1291847759.m_type, NTI3254780014)) {
    injectDependencies_3254794387(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2969568641)) {
    injectDependencies_2969584918(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2818572510)) {
    injectDependencies_2818593484(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2415919108)) {
    injectDependencies_1291847758(self_1291847759, ed_1291847760);
    }
    }}}

  
}

function getOrDefault_1291848310(t_1291848313, key_1291848314, default_1291848315) {
    var Temporary1;

  var result_1291848316 = 0.0;

    var hcHEX60gensym20_1291848319 = [0];
    var indexHEX60gensym20_1291848559 = rawGet_1291848320(t_1291848313, key_1291848314, hcHEX60gensym20_1291848319, 0);
    if ((0 <= indexHEX60gensym20_1291848559)) {
    Temporary1 = t_1291848313.data[chckIndx(indexHEX60gensym20_1291848559, 0, (t_1291848313.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1291848315;
    }
    
    result_1291848316 = Temporary1;

  return result_1291848316;

}

function value_2130706482(m_2130706483) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2130706484 = 0.0;

  BeforeRet: {
    switch (m_2130706483.kind) {
    case 0:
      var Temporary1 = m_2130706483;
      if (ConstSet341[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rel\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2130706435)); }
      result_2130706484 = Temporary1.rel;
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = m_2130706483;
      if (ConstSet342[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'abs\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2130706435)); }
      result_2130706484 = Temporary2.abs;
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = m_2130706483;
      if (ConstSet343[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'per\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2130706435)); }
      result_2130706484 = Temporary3.per;
      break BeforeRet;
      break;
    }
  };

  return result_2130706484;

}

function apply_2130706507(m_2130706508, a_2130706509, b_2130706510) {
  var result_2130706511 = 0.0;

  BeforeRet: {
    switch (m_2130706508.kind) {
    case 0:
      var v_2130706522 = value_2130706482(m_2130706508);
      result_2130706511 = (a_2130706509 + v_2130706522);
      break BeforeRet;
      break;
    case 1:
      var v_2130706523 = value_2130706482(m_2130706508);
      result_2130706511 = v_2130706523;
      break BeforeRet;
      break;
    case 2:
      var v_2130706524 = value_2130706482(m_2130706508);
      result_2130706511 = (a_2130706509 + (v_2130706524 * (b_2130706510 - a_2130706509)));
      break BeforeRet;
      break;
    }
  };

  return result_2130706511;

}

function splitV_2130706537(r_2130706538, x_2130706539) {
  var result_2130706542 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2130706542.Field0 = nimCopy(result_2130706542.Field0, r_2130706538, NTI2147483653);
    result_2130706542.Field1 = nimCopy(result_2130706542.Field1, r_2130706538, NTI2147483653);
    result_2130706542.Field0.w = (apply_2130706507(x_2130706539, r_2130706538.x, (r_2130706538.x + r_2130706538.w)) - r_2130706538.x);
    result_2130706542.Field1.x = (result_2130706542.Field0.x + result_2130706542.Field0.w);
    result_2130706542.Field1.w = (result_2130706542.Field1.w - result_2130706542.Field0.w);

  return result_2130706542;

}

function percent_2130706479(value_2130706480) {
  var result_2130706481 = ({kind: 0, rel: 0.0, abs: 0.0, per: 0.0});

  BeforeRet: {
    result_2130706481 = nimCopy(result_2130706481, {kind: 2, per: value_2130706480, rel: 0.0, abs: 0.0}, NTI2130706436);
    break BeforeRet;
  };

  return result_2130706481;

}

function splitH_2130706525(r_2130706526, y_2130706527) {
  var result_2130706530 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2130706530.Field0 = nimCopy(result_2130706530.Field0, r_2130706526, NTI2147483653);
    result_2130706530.Field1 = nimCopy(result_2130706530.Field1, r_2130706526, NTI2147483653);
    result_2130706530.Field0.h = (apply_2130706507(y_2130706527, r_2130706526.y, (r_2130706526.y + r_2130706526.h)) - r_2130706526.y);
    result_2130706530.Field1.y = (result_2130706530.Field0.y + result_2130706530.Field0.h);
    result_2130706530.Field1.h = (result_2130706530.Field1.h - result_2130706530.Field0.h);

  return result_2130706530;

}

function layoutViews_1291848745(layout_1291848746, props_1291848747, bounds_1291848748, views_1291848749) {
            var Temporary4;
            var Temporary5;

  var result_1291848750 = [];

    var mainSplit_1291848823 = getOrDefault_1291848310(props_1291848747.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848750 = nimCopy(null, [], NTI1291847200);
    var rect_1291848828 = nimCopy(null, bounds_1291848748, NTI2147483653);
    Label1: {
      var i_1291848833 = 0;
      var i_536872836 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872836 < views_1291848749)) break Label3;
            i_1291848833 = i_536872836;
            if (((i_1291848833 == 0) && (1 < views_1291848749))) {
            Temporary4 = mainSplit_1291848823;
            }
            else {
            if ((i_1291848833 == subInt(views_1291848749, 1))) {
            Temporary4 = 1.0;
            }
            else {
            Temporary4 = 0.5;
            }
            }
            var ratio_1291848834 = Temporary4;
            if ((modInt(i_1291848833, 2) == 0)) {
            Temporary5 = splitV_2130706537(rect_1291848828, percent_2130706479(ratio_1291848834));
            }
            else {
            Temporary5 = splitH_2130706525(rect_1291848828, percent_2130706479(ratio_1291848834));
            }
            
            var colontmp__536872838 = nimCopy(null, Temporary5, NTI2130706495);
            var view_rect_1291848835 = nimCopy(null, colontmp__536872838["Field0"], NTI2147483653);
            var remaining_1291848836 = nimCopy(null, colontmp__536872838["Field1"], NTI2147483653);
            rect_1291848828 = nimCopy(rect_1291848828, remaining_1291848836, NTI2147483653);
            var Temporary6 = nimCopy(null, view_rect_1291848835, NTI2147483653);
            result_1291848750.push(Temporary6);;
            i_536872836 = addInt(i_536872836, 1);
          }
      };
    };

  return result_1291848750;

}

function layoutViews_1291848649(layout_1291848650, props_1291848651, bounds_1291848652, views_1291848653) {
            var Temporary4;

  var result_1291848654 = [];

    var mainSplit_1291848727 = getOrDefault_1291848310(props_1291848651.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848654 = nimCopy(null, [], NTI1291847200);
    var rect_1291848732 = nimCopy(null, bounds_1291848652, NTI2147483653);
    Label1: {
      var i_1291848737 = 0;
      var i_536872840 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872840 < views_1291848653)) break Label3;
            i_1291848737 = i_536872840;
            if (((i_1291848737 == 0) && (1 < views_1291848653))) {
            Temporary4 = mainSplit_1291848727;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848653, i_1291848737));
            }
            
            var ratio_1291848738 = Temporary4;
            var colontmp__536872842 = splitH_2130706525(rect_1291848732, percent_2130706479(ratio_1291848738));
            var view_rect_1291848739 = nimCopy(null, colontmp__536872842["Field0"], NTI2147483653);
            var remaining_1291848740 = nimCopy(null, colontmp__536872842["Field1"], NTI2147483653);
            rect_1291848732 = nimCopy(rect_1291848732, remaining_1291848740, NTI2147483653);
            var Temporary5 = nimCopy(null, view_rect_1291848739, NTI2147483653);
            result_1291848654.push(Temporary5);;
            i_536872840 = addInt(i_536872840, 1);
          }
      };
    };

  return result_1291848654;

}

function layoutViews_1291848238(layout_1291848239, props_1291848240, bounds_1291848241, views_1291848242) {
            var Temporary4;

  var result_1291848243 = [];

    var mainSplit_1291848613 = getOrDefault_1291848310(props_1291848240.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848243 = nimCopy(null, [], NTI1291847200);
    var rect_1291848618 = nimCopy(null, bounds_1291848241, NTI2147483653);
    Label1: {
      var i_1291848623 = 0;
      var i_536872844 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872844 < views_1291848242)) break Label3;
            i_1291848623 = i_536872844;
            if (((i_1291848623 == 0) && (1 < views_1291848242))) {
            Temporary4 = mainSplit_1291848613;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848242, i_1291848623));
            }
            
            var ratio_1291848624 = Temporary4;
            var colontmp__536872846 = splitV_2130706537(rect_1291848618, percent_2130706479(ratio_1291848624));
            var view_rect_1291848625 = nimCopy(null, colontmp__536872846["Field0"], NTI2147483653);
            var remaining_1291848626 = nimCopy(null, colontmp__536872846["Field1"], NTI2147483653);
            rect_1291848618 = nimCopy(rect_1291848618, remaining_1291848626, NTI2147483653);
            var Temporary5 = nimCopy(null, view_rect_1291848625, NTI2147483653);
            result_1291848243.push(Temporary5);;
            i_536872844 = addInt(i_536872844, 1);
          }
      };
    };

  return result_1291848243;

}

function layoutViews_1291848208(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212) {
  var result_1291848213 = [];

  BeforeRet: {
    result_1291848213 = nimCopy(null, [nimCopy(null, bounds_1291848211, NTI2147483653)], NTI1291846989);
    break BeforeRet;
  };

  return result_1291848213;

}

function layoutViews_1291848236(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212) {
  var result_1291848237 = [];

  BeforeRet: {
    chckNilDisp(layout_1291848209);
    if (isObj(layout_1291848209.m_type, NTI1291845645)) {
    result_1291848237 = layoutViews_1291848745(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845644)) {
    result_1291848237 = layoutViews_1291848649(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845643)) {
    result_1291848237 = layoutViews_1291848238(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845642)) {
    result_1291848237 = layoutViews_1291848208(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    }}}
  };

  return result_1291848237;

}

function start_2919235633(self_2919235634) {
  
}

function start_2919235635(self_2919235634) {
    start_2919235633(self_2919235634);

  
}

function getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235650 = null;

  return result_2919235650;

}

function getDefinition_2919235651(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235652 = null;

  BeforeRet: {
    result_2919235652 = getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642);
    break BeforeRet;
  };

  return result_2919235652;

}

function getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235660 = null;

  return result_2919235660;

}

function getCompletions_2919235661(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235662 = null;

  BeforeRet: {
    result_2919235662 = getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657);
    break BeforeRet;
  };

  return result_2919235662;

}

function changed_1291850990(self_1291850991, other_1291850992) {
  var result_1291850993 = false;

  BeforeRet: {
    var other_1291850994 = other_1291850992;
    result_1291850993 = (!(eqStrings(self_1291850991.name, other_1291850994.name)) || !(eqStrings(self_1291850991.path, other_1291850994.path)));
    break BeforeRet;
  };

  return result_1291850993;

}

function changed_1291850976(self_1291850977, other_1291850978) {
  var result_1291850979 = false;

  BeforeRet: {
    var other_1291850980 = other_1291850978;
    result_1291850979 = !(eqStrings(self_1291850977.path, other_1291850980.path));
    break BeforeRet;
  };

  return result_1291850979;

}

function changed_2969582212(self_2969582213, other_2969582214) {
    var Temporary1;

  var result_2969582215 = false;

  BeforeRet: {
    var other_2969582216 = other_2969582214;
    var Temporary1 = other_2969582216.completion;
    if (ConstSet344[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2969568637)); }
    result_2969582215 = !(HEX3DHEX3D_2046820626(self_2969582213.completion.id, Temporary1.id));
    break BeforeRet;
  };

  return result_2969582215;

}

function changed_3187671108(self_3187671109, other_3187671110) {
  var result_3187671111 = false;

  return result_3187671111;

}

function changed_3187671112(self_3187671109, other_3187671110) {
  var result_3187671113 = false;

  BeforeRet: {
    chckNilDisp(self_3187671109);
    if (isObj(self_3187671109.m_type, NTI1291848506)) {
    result_3187671113 = changed_1291850990(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    else {
    if (isObj(self_3187671109.m_type, NTI1291848508)) {
    result_3187671113 = changed_1291850976(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    else {
    if (isObj(self_3187671109.m_type, NTI2969576809)) {
    result_3187671113 = changed_2969582212(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    else {
    if (isObj(self_3187671109.m_type, NTI3187671048)) {
    result_3187671113 = changed_3187671108(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    }}}
  };

  return result_3187671113;

}

function dump_3338666758(self_3338666759, recurse_3338666760) {
  var result_3338666761 = [];

    var fmtRes_3338666766 = [mnewString(0)];
    fmtRes_3338666766[0].push.apply(fmtRes_3338666766[0], [67,111,110,115,116,97,110,116,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3338666766, 0, self_3338666759.node.id, []);
    fmtRes_3338666766[0].push.apply(fmtRes_3338666766[0], [44,32,116,101,120,116,58,32]);;
    formatValue_721420459(fmtRes_3338666766, 0, self_3338666759.text, []);
    fmtRes_3338666766[0].push.apply(fmtRes_3338666766[0], [41]);;
    result_3338666761.push.apply(result_3338666761, fmtRes_3338666766[0]);;

  return result_3338666761;

}

function addQuoted_3338666710(s_3338666712, s_3338666712_Idx, x_3338666713) {
    s_3338666712[s_3338666712_Idx].push.apply(s_3338666712[s_3338666712_Idx], reprEnum(x_3338666713, NTI2785017860));;

  
}

function HEX24_3338666681(x_3338666683) {
  var result_3338666684 = [[]];

    result_3338666684[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym33_3338666695 = 0;
    if ((0 < countHEX60gensym33_3338666695)) {
    result_3338666684[0].push.apply(result_3338666684[0], [44,32]);;
    }
    
    result_3338666684[0].push.apply(result_3338666684[0], [107,105,110,100]);;
    result_3338666684[0].push.apply(result_3338666684[0], [58,32]);;
    countHEX60gensym33_3338666695 += 1;
    addQuoted_3338666710(result_3338666684, 0, x_3338666683.kind);
    switch (x_3338666683.kind) {
    default: 
      break;
    }
    result_3338666684[0].push.apply(result_3338666684[0], [41]);;

  return result_3338666684[0];

}

function formatValue_3338666676(result_3338666678, result_3338666678_Idx, value_3338666679, specifier_3338666680) {
    formatValue_721420459(result_3338666678, result_3338666678_Idx, HEX24_3338666681(value_3338666679), specifier_3338666680);

  
}

function dump_3338666662(self_3338666663, recurse_3338666664) {
  var result_3338666665 = [];

    var fmtRes_3338666670 = [mnewString(0)];
    fmtRes_3338666670[0].push.apply(fmtRes_3338666670[0], [67,111,108,108,101,99,116,105,111,110,67,101,108,108,40,105,110,108,105,110,101,58,32]);;
    formatValue_2785018306(fmtRes_3338666670, 0, self_3338666663.inline, []);
    fmtRes_3338666670[0].push.apply(fmtRes_3338666670[0], [44,32,108,97,121,111,117,116,58,32]);;
    formatValue_3338666676(fmtRes_3338666670, 0, self_3338666663.layout, []);
    fmtRes_3338666670[0].push.apply(fmtRes_3338666670[0], [41,58,32]);;
    formatValue_3338666719(fmtRes_3338666670, 0, self_3338666663.node, []);
    result_3338666665 = nimCopy(null, fmtRes_3338666670[0], NTI33554449);
    if (recurse_3338666664) {
    result_3338666665.push.apply(result_3338666665, [10]);;
    if ((self_3338666663.filled || (self_3338666663.fillChildren == null))) {
    Label1: {
      var c_3338666748 = null;
      var i_536872848 = 0;
      var L_536872849 = (self_3338666663.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872848 < L_536872849)) break Label3;
            c_3338666748 = self_3338666663.children[chckIndx(i_536872848, 0, (self_3338666663.children).length - 1)];
            result_3338666665.push.apply(result_3338666665, nsuIndent(dump_3271570945(c_3338666748, false), 4, [32]));;
            result_3338666665.push.apply(result_3338666665, [10]);;
            i_536872848 = addInt(i_536872848, 1);
            if (!(((self_3338666663.children).length == L_536872849))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    result_3338666665.push.apply(result_3338666665, nsuIndent([46,46,46], 4, [32]));;
    }
    
    }
    

  return result_3338666665;

}

function dump_3338666772(self_3338666773, recurse_3338666774) {
  var result_3338666775 = [];

    var fmtRes_3338666780 = [mnewString(0)];
    fmtRes_3338666780[0].push.apply(fmtRes_3338666780[0], [80,114,111,112,101,114,116,121,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3338666780, 0, self_3338666773.node.id, []);
    fmtRes_3338666780[0].push.apply(fmtRes_3338666780[0], [44,32,112,114,111,112,101,114,116,121,58,32]);;
    formatValue_3036676344(fmtRes_3338666780, 0, self_3338666773.property, []);
    fmtRes_3338666780[0].push.apply(fmtRes_3338666780[0], [41]);;
    result_3338666775.push.apply(result_3338666775, fmtRes_3338666780[0]);;

  return result_3338666775;

}

function dump_3338666829(self_3338666830, recurse_3338666831) {
  var result_3338666832 = [];

    var fmtRes_3338666837 = [mnewString(0)];
    fmtRes_3338666837[0].push.apply(fmtRes_3338666837[0], [80,108,97,99,101,104,111,108,100,101,114,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3338666837, 0, self_3338666830.node.id, []);
    fmtRes_3338666837[0].push.apply(fmtRes_3338666837[0], [44,32,114,111,108,101,58,32]);;
    formatValue_3036676344(fmtRes_3338666837, 0, self_3338666830.role, []);
    fmtRes_3338666837[0].push.apply(fmtRes_3338666837[0], [41]);;
    result_3338666832.push.apply(result_3338666832, fmtRes_3338666837[0]);;

  return result_3338666832;

}

function dump_3338666815(self_3338666816, recurse_3338666817) {
  var result_3338666818 = [];

    var fmtRes_3338666823 = [mnewString(0)];
    fmtRes_3338666823[0].push.apply(fmtRes_3338666823[0], [65,108,105,97,115,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3338666823, 0, self_3338666816.node.id, []);
    fmtRes_3338666823[0].push.apply(fmtRes_3338666823[0], [41]);;
    result_3338666818.push.apply(result_3338666818, fmtRes_3338666823[0]);;

  return result_3338666818;

}

function dump_3338666791(self_3338666792, recurse_3338666793) {
  var result_3338666794 = [];

    var fmtRes_3338666799 = [mnewString(0)];
    fmtRes_3338666799[0].push.apply(fmtRes_3338666799[0], [78,111,100,101,82,101,102,101,114,101,110,99,101,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3338666799, 0, self_3338666792.node.id, []);
    fmtRes_3338666799[0].push.apply(fmtRes_3338666799[0], [44,32,116,97,114,103,101,116,58,32]);;
    formatValue_3036676344(fmtRes_3338666799, 0, self_3338666792.reference, []);
    fmtRes_3338666799[0].push.apply(fmtRes_3338666799[0], [44,32,116,97,114,103,101,116,32,112,114,111,112,101,114,116,121,58,32]);;
    formatValue_3036676344(fmtRes_3338666799, 0, self_3338666792.property, []);
    fmtRes_3338666799[0].push.apply(fmtRes_3338666799[0], [41]);;
    result_3338666794.push.apply(result_3338666794, fmtRes_3338666799[0]);;

  return result_3338666794;

}

function dump_3271570941(self_3271570942, recurse_3271570943) {
  var result_3271570944 = [];

  return result_3271570944;

}

function dump_3271570945(self_3271570942, recurse_3271570943) {
  var result_3271570946 = [];

  BeforeRet: {
    chckNilDisp(self_3271570942);
    if (isObj(self_3271570942.m_type, NTI3338665995)) {
    result_3271570946 = dump_3338666758(self_3271570942, recurse_3271570943);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271570942.m_type, NTI3338665993)) {
    result_3271570946 = dump_3338666662(self_3271570942, recurse_3271570943);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271570942.m_type, NTI3338665996)) {
    result_3271570946 = dump_3338666772(self_3271570942, recurse_3271570943);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271570942.m_type, NTI3338665999)) {
    result_3271570946 = dump_3338666829(self_3271570942, recurse_3271570943);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271570942.m_type, NTI3338665998)) {
    result_3271570946 = dump_3338666815(self_3271570942, recurse_3271570943);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271570942.m_type, NTI3338665997)) {
    result_3271570946 = dump_3338666791(self_3271570942, recurse_3271570943);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271570942.m_type, NTI3271557157)) {
    result_3271570946 = dump_3271570941(self_3271570942, recurse_3271570943);
    break BeforeRet;
    }
    }}}}}}
  };

  return result_3271570946;

}

function HEX24_3338666344(x_3338666346) {
  var result_3338666347 = [[]];

    result_3338666347[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym16_3338666358 = 0;
    if ((0 < countHEX60gensym16_3338666358)) {
    result_3338666347[0].push.apply(result_3338666347[0], [44,32]);;
    }
    
    countHEX60gensym16_3338666358 += 1;
    addQuoted_855639425(result_3338666347, 0, x_3338666346["Field0"]);
    if ((0 < countHEX60gensym16_3338666358)) {
    result_3338666347[0].push.apply(result_3338666347[0], [44,32]);;
    }
    
    countHEX60gensym16_3338666358 += 1;
    addQuoted_855639425(result_3338666347, 0, x_3338666346["Field1"]);
    if ((countHEX60gensym16_3338666358 == 1)) {
    result_3338666347[0].push.apply(result_3338666347[0], [44]);;
    }
    
    result_3338666347[0].push.apply(result_3338666347[0], [41]);;

  return result_3338666347[0];

}

function clamp_3338666339(val_3338666341, bounds_3338666342) {
  var result_3338666343 = 0;

    if (!((bounds_3338666342.a <= bounds_3338666342.b))) {
    failedAssertImpl_268435515(([109,97,116,104,46,110,105,109,40,49,50,53,51,44,32,51,41,32,96,98,111,117,110,100,115,46,97,32,60,61,32,98,111,117,110,100,115,46,98,96,32] || []).concat(HEX24_3338666344({Field0: bounds_3338666342.a, Field1: bounds_3338666342.b}) || []));
    }
    
    result_3338666343 = clamp_1660945119(val_3338666341, bounds_3338666342.a, bounds_3338666342.b);

  return result_3338666343;

}

function getChildAt_3338666325(self_3338666326, index_3338666327, clamp_3338666328) {
    var Temporary1;

  var result_3338666330 = ({val: null});

  BeforeRet: {
    if (clamp_3338666328) {
    Temporary1 = clamp_3338666339(index_3338666327, HEX2EHEX2E_805306418(0, (self_3338666326.children).length - 1));
    }
    else {
    Temporary1 = index_3338666327;
    }
    
    var index_3338666396 = Temporary1;
    if (((index_3338666396 < 0) || ((self_3338666326.children).length - 1 < index_3338666396))) {
    result_3338666330 = nimCopy(result_3338666330, none_3271570956(), NTI3271564556);
    break BeforeRet;
    }
    
    result_3338666330 = nimCopy(result_3338666330, some_3338666283(self_3338666326.children[chckIndx(index_3338666396, 0, (self_3338666326.children).length - 1)]), NTI3271564556);
    break BeforeRet;
  };

  return result_3338666330;

}

function getChildAt_3271570947(self_3271570948, index_3271570949, clamp_3271570950) {
  var result_3271570955 = ({val: null});

    result_3271570955 = nimCopy(result_3271570955, none_3271570956(), NTI3271564556);

  return result_3271570955;

}

function getChildAt_3271570972(self_3271570948, index_3271570949, clamp_3271570950) {
  var result_3271570973 = ({val: null});

  BeforeRet: {
    chckNilDisp(self_3271570948);
    if (isObj(self_3271570948.m_type, NTI3338665993)) {
    result_3271570973 = nimCopy(result_3271570973, getChildAt_3338666325(self_3271570948, index_3271570949, clamp_3271570950), NTI3271564556);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271570948.m_type, NTI3271557157)) {
    result_3271570973 = nimCopy(result_3271570973, getChildAt_3271570947(self_3271570948, index_3271570949, clamp_3271570950), NTI3271564556);
    break BeforeRet;
    }
    }
  };

  return result_3271570973;

}

function dump_3271570974(self_3271570975) {
  var result_3271570976 = [];

    var fmtRes_3271570981 = [mnewString(0)];
    fmtRes_3271570981[0].push.apply(fmtRes_3271570981[0], [69,109,112,116,121,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3271570981, 0, self_3271570975.node.id, []);
    fmtRes_3271570981[0].push.apply(fmtRes_3271570981[0], [41]);;
    result_3271570976.push.apply(result_3271570976, fmtRes_3271570981[0]);;

  return result_3271570976;

}

function dump_3271570987(self_3271570975) {
  var result_3271570988 = [];

  BeforeRet: {
    result_3271570988 = dump_3271570974(self_3271570975);
    break BeforeRet;
  };

  return result_3271570988;

}

function getText_3338666574(cell_3338666575) {
  var result_3338666576 = [];

    result_3338666576 = nimCopy(null, cell_3338666575.text, NTI33554449);

  return result_3338666576;

}

function getText_3338666571(cell_3338666572) {
  var result_3338666573 = [];

    result_3338666573 = nimCopy(null, [60,62], NTI33554449);

  return result_3338666573;

}

function reference_3271566692(node_3271566693, role_3271566694) {
  var result_3271566695 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_3271566695 = nimCopy(result_3271566695, idNone_2046820633(), NTI2046820355);
    Label1: {
      var c_3271566699 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
      var i_536872852 = 0;
      var L_536872853 = (node_3271566693.references).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872852 < L_536872853)) break Label3;
            c_3271566699 = node_3271566693.references[chckIndx(i_536872852, 0, (node_3271566693.references).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271566699.Field0, role_3271566694)) {
            result_3271566695 = nimCopy(result_3271566695, c_3271566699.Field1, NTI2046820355);
            break Label1;
            }
            
            i_536872852 = addInt(i_536872852, 1);
            if (!(((node_3271566693.references).length == L_536872853))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3271566695;

}

function getText_3338666577(cell_3338666578) {
  var result_3338666579 = [];

  BeforeRet: {
    if ((cell_3338666578.child == null)) {
    var reference_3338666583 = reference_3271566692(cell_3338666578.node, cell_3338666578.reference);
    result_3338666579 = nimCopy(null, HEX24_2046820617(reference_3338666583), NTI33554449);
    break BeforeRet;
    }
    else {
      result_3338666579 = nimCopy(null, getText_3338666021(cell_3338666578.child), NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_3338666579;

}

function getText_3338666643(cell_3338666644) {
  var result_3338666645 = [];

    result_3338666645 = nimCopy(null, get_2348810295(cell_3338666644.displayText, []), NTI33554449);

  return result_3338666645;

}

function getText_3338666636(cell_3338666637) {
  var result_3338666638 = [];

  BeforeRet: {
    var class_3338666639 = nodeClass_3271557904(cell_3338666637.node);
    if (!((class_3338666639 == null))) {
    result_3338666638 = nimCopy(null, alias_3271557413(class_3338666639), NTI33554449);
    break BeforeRet;
    }
    else {
      result_3338666638 = nimCopy(null, HEX24_2046820617(cell_3338666637.node.class), NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_3338666638;

}

function getText_3338666584(cell_3338666585) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3338666586 = [];

  BeforeRet: {
    var value_3338666587 = property_3271566810(cell_3338666585.node, cell_3338666585.property);
      var oHEX60gensym29_3338666590 = nimCopy(null, value_3338666587, NTI3271562257);
      if (!isSome_3338666595(oHEX60gensym29_3338666590)) Temporary1 = false; else {        var value_3338666635 = nimCopy(null, get_3338666612(oHEX60gensym29_3338666590), NTI3271557124);
        Temporary1 = true;      }    if (Temporary1) {
    switch (value_3338666635.kind) {
    case 1:
      var Temporary2 = value_3338666635;
      if (ConstSet345[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3271557123)); }
      result_3338666586 = nimCopy(null, Temporary2.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 0:
      var Temporary3 = value_3338666635;
      if (ConstSet346[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3271557123)); }
      result_3338666586 = nimCopy(null, HEX24_369098760(Temporary3.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary4 = value_3338666635;
      if (ConstSet347[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3271557123)); }
      result_3338666586 = nimCopy(null, nimBoolToStr(Temporary4.boolValue), NTI33554449);
      break BeforeRet;
      break;
    }
    }
    else {
      result_3338666586 = nimCopy(null, [60,101,109,112,116,121,62], NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_3338666586;

}

function getText_3338666018(cell_3338666019) {
  var result_3338666020 = [];

  return result_3338666020;

}

function getText_3338666021(cell_3338666019) {
  var result_3338666022 = [];

  BeforeRet: {
    chckNilDisp(cell_3338666019);
    if (isObj(cell_3338666019.m_type, NTI3338665995)) {
    result_3338666022 = getText_3338666574(cell_3338666019);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666019.m_type, NTI3338665993)) {
    result_3338666022 = getText_3338666571(cell_3338666019);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666019.m_type, NTI3338665997)) {
    result_3338666022 = getText_3338666577(cell_3338666019);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666019.m_type, NTI3338665999)) {
    result_3338666022 = getText_3338666643(cell_3338666019);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666019.m_type, NTI3338665998)) {
    result_3338666022 = getText_3338666636(cell_3338666019);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666019.m_type, NTI3338665996)) {
    result_3338666022 = getText_3338666584(cell_3338666019);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666019.m_type, NTI3271557157)) {
    result_3338666022 = getText_3338666018(cell_3338666019);
    break BeforeRet;
    }
    }}}}}}
  };

  return result_3338666022;

}

function currentTextHEX3D_3338666068(cell_3338666069, text_3338666070) {
    cell_3338666069.displayText = nimCopy(cell_3338666069.displayText, some_2281701410(text_3338666070), NTI2348810261);

  
}

function setText_3338666448(cell_3338666449, text_3338666450, slice_3338666457) {
    currentTextHEX3D_3338666068(cell_3338666449, text_3338666450);

  
}

function setText_3338666438(cell_3338666439, text_3338666440, slice_3338666447) {
    currentTextHEX3D_3338666068(cell_3338666439, text_3338666440);

  
}

function setText_3338666467(cell_3338666468, text_3338666469, slice_3338666476) {
    currentTextHEX3D_3338666068(cell_3338666468, text_3338666469);

  
}

function setText_3338666552(cell_3338666553, text_3338666554, slice_3338666561) {
    currentTextHEX3D_3338666068(cell_3338666553, text_3338666554);

  
}

function setText_3338666533(cell_3338666534, text_3338666535, slice_3338666542) {
    currentTextHEX3D_3338666068(cell_3338666534, text_3338666535);

  
}

function propertyDescription_3271566906(node_3271566907, role_3271566908) {
  var result_3271566910 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0}), has: false});

  BeforeRet: {
    var class_3271566911 = nodeClass_3271557904(node_3271566907);
    if (!((class_3271566911 == null))) {
    result_3271566910 = nimCopy(result_3271566910, propertyDescription_3271566416(class_3271566911, role_3271566908), NTI3271561961);
    break BeforeRet;
    }
    
    result_3271566910 = nimCopy(result_3271566910, none_3271566425(), NTI3271561961);
    break BeforeRet;
  };

  return result_3271566910;

}

function nsuNormalize(s_855638170) {
  var result_855638171 = [];

    result_855638171 = nimCopy(null, mnewString(chckRange((s_855638170).length, 0, 2147483647)), NTI33554449);
    var j_855638172 = 0;
    Label1: {
      var i_855638177 = 0;
      var colontmp__536872856 = 0;
      colontmp__536872856 = subInt((s_855638170).length, 1);
      var res_536872857 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872857 <= colontmp__536872856)) break Label3;
            i_855638177 = res_536872857;
            if ((ConstSet348[s_855638170[chckIndx(i_855638177, 0, (s_855638170).length - 1)]] != undefined)) {
            result_855638171[chckIndx(j_855638172, 0, (result_855638171).length - 1)] = chckRange(addInt(s_855638170[chckIndx(i_855638177, 0, (s_855638170).length - 1)], 32), 0, 255);
            j_855638172 = addInt(j_855638172, 1);
            }
            else {
            if (!((s_855638170[chckIndx(i_855638177, 0, (s_855638170).length - 1)] == 95))) {
            result_855638171[chckIndx(j_855638172, 0, (result_855638171).length - 1)] = s_855638170[chckIndx(i_855638177, 0, (s_855638170).length - 1)];
            j_855638172 = addInt(j_855638172, 1);
            }
            }
            res_536872857 = addInt(res_536872857, 1);
          }
      };
    };
    if (!((j_855638172 == (s_855638170).length))) {
    if (result_855638171.length < chckRange(j_855638172, 0, 2147483647)) { for (var i = result_855638171.length; i < chckRange(j_855638172, 0, 2147483647); ++i) result_855638171.push(0); }
         else {result_855638171.length = chckRange(j_855638172, 0, 2147483647); };
    }
    

  return result_855638171;

}

function parseBool_855639119(s_855639120) {
  var result_855639121 = false;

    switch (toJSStr(nsuNormalize(s_855639120))) {
    case "y":
    case "yes":
    case "true":
    case "1":
    case "on":
      result_855639121 = true;
      break;
    case "n":
    case "no":
    case "false":
    case "0":
    case "off":
      result_855639121 = false;
      break;
    default: 
      raiseException({message: ([99,97,110,110,111,116,32,105,110,116,101,114,112,114,101,116,32,97,115,32,97,32,98,111,111,108,58,32] || []).concat(s_855639120 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_855639121;

}

function setText_3338666486(cell_3338666487, text_3338666488, slice_3338666495) {
      var Temporary2;

    currentTextHEX3D_3338666068(cell_3338666487, text_3338666488);
++excHandler;
    try {
      var oHEX60gensym28_3338666498 = propertyDescription_3271566906(cell_3338666487.node, cell_3338666487.property);
      if (!isSome_3271566471(oHEX60gensym28_3338666498)) Temporary2 = false; else {        var prop_3338666521 = nimCopy(null, get_3271566488(oHEX60gensym28_3338666498), NTI3271557125);
        Temporary2 = true;      }    if (Temporary2) {
    switch (prop_3338666521.typ) {
    case 1:
      setProperty_3271566852(cell_3338666487.node, cell_3338666487.property, {kind: 1, stringValue: currentText_3338666034(cell_3338666487), intValue: 0, boolValue: false}, slice_3338666495);
      break;
    case 0:
      var intValue_3338666522 = nsuParseInt(currentText_3338666034(cell_3338666487));
      setProperty_3271566852(cell_3338666487.node, cell_3338666487.property, {kind: 0, intValue: intValue_3338666522, stringValue: [], boolValue: false}, slice_3338666495);
      break;
    case 2:
      var boolValue_3338666523 = parseBool_855639119(currentText_3338666034(cell_3338666487));
      setProperty_3271566852(cell_3338666487.node, cell_3338666487.property, {kind: 2, boolValue: boolValue_3338666523, intValue: 0, stringValue: []}, slice_3338666495);
      break;
    }
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  
}

function setText_3338666023(cell_3338666024, text_3338666025, slice_3338666032) {
  
}

function setText_3338666033(cell_3338666024, text_3338666025, slice_3338666032) {
    chckNilDisp(cell_3338666024);
    if (isObj(cell_3338666024.m_type, NTI3338665995)) {
    setText_3338666448(cell_3338666024, text_3338666025, slice_3338666032);
    }
    else {
    if (isObj(cell_3338666024.m_type, NTI3338665993)) {
    setText_3338666438(cell_3338666024, text_3338666025, slice_3338666032);
    }
    else {
    if (isObj(cell_3338666024.m_type, NTI3338665997)) {
    setText_3338666467(cell_3338666024, text_3338666025, slice_3338666032);
    }
    else {
    if (isObj(cell_3338666024.m_type, NTI3338665999)) {
    setText_3338666552(cell_3338666024, text_3338666025, slice_3338666032);
    }
    else {
    if (isObj(cell_3338666024.m_type, NTI3338665998)) {
    setText_3338666533(cell_3338666024, text_3338666025, slice_3338666032);
    }
    else {
    if (isObj(cell_3338666024.m_type, NTI3338665996)) {
    setText_3338666486(cell_3338666024, text_3338666025, slice_3338666032);
    }
    else {
    if (isObj(cell_3338666024.m_type, NTI3271557157)) {
    setText_3338666023(cell_3338666024, text_3338666025, slice_3338666032);
    }
    }}}}}}

  
}

function getCursorLeft_3254796596(cell_3254796597, cursor_3254796598) {
        var Temporary1;

  var result_3254796599 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796599 = nimCopy(result_3254796599, cursor_3254796598, NTI3254779907);
    if ((editableLow_3338666237(cell_3254796597, false) < cursor_3254796598.lastIndex)) {
    result_3254796599.lastIndex = subInt(result_3254796599.lastIndex, 1);
    result_3254796599.firstIndex = result_3254796599.lastIndex;
    }
    else {
        var oHEX60gensym282_3254796607 = getPreviousSelectableLeaf_3254795837(cell_3254796597);
        if (!isSome_3338666868(oHEX60gensym282_3254796607)) Temporary1 = false; else {          var c_3254796630 = get_3338666888(oHEX60gensym282_3254796607);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254796599 = nimCopy(result_3254796599, toCursor_3254780264(c_3254796630, false), NTI3254779907);
      }
      
    }
    

  return result_3254796599;

}

function getCursorLeft_3254796561(cell_3254796562, cursor_3254796563) {
        var Temporary1;

  var result_3254796564 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796564 = nimCopy(result_3254796564, cursor_3254796563, NTI3254779907);
    if ((editableLow_3338666237(cell_3254796562, false) < cursor_3254796563.lastIndex)) {
    result_3254796564.lastIndex = subInt(result_3254796564.lastIndex, 1);
    result_3254796564.firstIndex = result_3254796564.lastIndex;
    }
    else {
        var oHEX60gensym280_3254796572 = getPreviousSelectableLeaf_3254795837(cell_3254796562);
        if (!isSome_3338666868(oHEX60gensym280_3254796572)) Temporary1 = false; else {          var c_3254796595 = get_3338666888(oHEX60gensym280_3254796572);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254796564 = nimCopy(result_3254796564, toCursor_3254780264(c_3254796595, false), NTI3254779907);
      }
      
    }
    

  return result_3254796564;

}

function getCursorLeft_3254796631(cell_3254796632, cursor_3254796633) {
        var Temporary1;

  var result_3254796634 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796634 = nimCopy(result_3254796634, cursor_3254796633, NTI3254779907);
    if ((editableLow_3338666237(cell_3254796632, false) < cursor_3254796633.lastIndex)) {
    result_3254796634.lastIndex = subInt(result_3254796634.lastIndex, 1);
    result_3254796634.firstIndex = result_3254796634.lastIndex;
    }
    else {
        var oHEX60gensym284_3254796642 = getPreviousSelectableLeaf_3254795837(cell_3254796632);
        if (!isSome_3338666868(oHEX60gensym284_3254796642)) Temporary1 = false; else {          var c_3254796665 = get_3338666888(oHEX60gensym284_3254796642);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254796634 = nimCopy(result_3254796634, toCursor_3254780264(c_3254796665, false), NTI3254779907);
      }
      
    }
    

  return result_3254796634;

}

function HEX26_3254796946(x_3254796948, y_3254796949) {
  var result_3254796950 = [];

    result_3254796950 = new Array(chckRange(addInt((x_3254796948).length, 1), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3254796948).length, 1), 0, 2147483647) ; ++i) { result_3254796950[i] = 0; }    Label1: {
      var i_3254796965 = 0;
      var colontmp__536872860 = 0;
      colontmp__536872860 = subInt((x_3254796948).length, 1);
      var res_536872861 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872861 <= colontmp__536872860)) break Label3;
            i_3254796965 = res_536872861;
            result_3254796950[chckIndx(i_3254796965, 0, (result_3254796950).length - 1)] = x_3254796948[chckIndx(i_3254796965, 0, (x_3254796948).length - 1)];
            res_536872861 = addInt(res_536872861, 1);
          }
      };
    };
    result_3254796950[chckIndx((x_3254796948).length, 0, (result_3254796950).length - 1)] = y_3254796949;

  return result_3254796950;

}

function getCursorLeft_3254796911(cell_3254796912, cursor_3254796913) {
      var Temporary1;
    var Temporary2;

  var result_3254796914 = [({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})];

  BeforeRet: {
    result_3254796914[0] = nimCopy(result_3254796914[0], cursor_3254796913, NTI3254779907);
      var oHEX60gensym294_3254796917 = getPreviousSelectableLeaf_3254795837(cell_3254796912);
      if (!isSome_3338666868(oHEX60gensym294_3254796917)) Temporary1 = false; else {        var c_3254796940 = get_3338666888(oHEX60gensym294_3254796917);
        Temporary1 = true;      }    if (Temporary1) {
    result_3254796914[0] = nimCopy(result_3254796914[0], toCursor_3254780264(c_3254796940, true), NTI3254779907);
    break BeforeRet;
    }
    
    var childCell_3254796941 = cell_3254796912.children[chckIndx(0, 0, (cell_3254796912.children).length - 1)];
    result_3254796914[0].node = childCell_3254796941.node;
    if ((cell_3254796912.node == childCell_3254796941.node)) {
    Temporary2 = HEX26_3254796946(cursor_3254796913.path, 0);
    }
    else {
    Temporary2 = [];
    }
    
    result_3254796914[0].path = nimCopy(null, Temporary2, NTI3254789242);
    result_3254796914[0].cell = cell_3254796912;
    columnHEX3D_3254780009(result_3254796914[0], 0);
  };

  return result_3254796914[0];

}

function getCursorLeft_3254796701(cell_3254796702, cursor_3254796703) {
        var Temporary1;

  var result_3254796704 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796704 = nimCopy(result_3254796704, cursor_3254796703, NTI3254779907);
    if ((editableLow_3338666237(cell_3254796702, false) < cursor_3254796703.lastIndex)) {
    result_3254796704.lastIndex = subInt(result_3254796704.lastIndex, 1);
    result_3254796704.firstIndex = result_3254796704.lastIndex;
    }
    else {
        var oHEX60gensym288_3254796712 = getPreviousSelectableLeaf_3254795837(cell_3254796702);
        if (!isSome_3338666868(oHEX60gensym288_3254796712)) Temporary1 = false; else {          var c_3254796735 = get_3338666888(oHEX60gensym288_3254796712);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254796704 = nimCopy(result_3254796704, toCursor_3254780264(c_3254796735, false), NTI3254779907);
      }
      
    }
    

  return result_3254796704;

}

function getCursorLeft_3254796666(cell_3254796667, cursor_3254796668) {
        var Temporary1;

  var result_3254796669 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796669 = nimCopy(result_3254796669, cursor_3254796668, NTI3254779907);
    if ((editableLow_3338666237(cell_3254796667, false) < cursor_3254796668.lastIndex)) {
    result_3254796669.lastIndex = subInt(result_3254796669.lastIndex, 1);
    result_3254796669.firstIndex = result_3254796669.lastIndex;
    }
    else {
        var oHEX60gensym286_3254796677 = getPreviousSelectableLeaf_3254795837(cell_3254796667);
        if (!isSome_3338666868(oHEX60gensym286_3254796677)) Temporary1 = false; else {          var c_3254796700 = get_3338666888(oHEX60gensym286_3254796677);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254796669 = nimCopy(result_3254796669, toCursor_3254780264(c_3254796700, false), NTI3254779907);
      }
      
    }
    

  return result_3254796669;

}

function getCursorLeft_3254795273(cell_3254795274, cursor_3254795275) {
  var result_3254795276 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  return result_3254795276;

}

function getCursorLeft_3254795277(cell_3254795274, cursor_3254795275) {
  var result_3254795278 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    chckNilDisp(cell_3254795274);
    if (isObj(cell_3254795274.m_type, NTI3338665997)) {
    result_3254795278 = nimCopy(result_3254795278, getCursorLeft_3254796596(cell_3254795274, cursor_3254795275), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795274.m_type, NTI3338665995)) {
    result_3254795278 = nimCopy(result_3254795278, getCursorLeft_3254796561(cell_3254795274, cursor_3254795275), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795274.m_type, NTI3338665998)) {
    result_3254795278 = nimCopy(result_3254795278, getCursorLeft_3254796631(cell_3254795274, cursor_3254795275), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795274.m_type, NTI3338665993)) {
    result_3254795278 = nimCopy(result_3254795278, getCursorLeft_3254796911(cell_3254795274, cursor_3254795275), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795274.m_type, NTI3338665996)) {
    result_3254795278 = nimCopy(result_3254795278, getCursorLeft_3254796701(cell_3254795274, cursor_3254795275), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795274.m_type, NTI3338665999)) {
    result_3254795278 = nimCopy(result_3254795278, getCursorLeft_3254796666(cell_3254795274, cursor_3254795275), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795274.m_type, NTI3271557157)) {
    result_3254795278 = nimCopy(result_3254795278, getCursorLeft_3254795273(cell_3254795274, cursor_3254795275), NTI3254779907);
    break BeforeRet;
    }
    }}}}}}
  };

  return result_3254795278;

}

function getCursorRight_3254796771(cell_3254796772, cursor_3254796773) {
        var Temporary1;

  var result_3254796774 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796774 = nimCopy(result_3254796774, cursor_3254796773, NTI3254779907);
    if ((cursor_3254796773.lastIndex < editableHigh_3338666256(cell_3254796772, false))) {
    result_3254796774.lastIndex = addInt(result_3254796774.lastIndex, 1);
    result_3254796774.firstIndex = result_3254796774.lastIndex;
    }
    else {
        var oHEX60gensym290_3254796782 = getNextSelectableLeaf_3254795841(cell_3254796772);
        if (!isSome_3338666868(oHEX60gensym290_3254796782)) Temporary1 = false; else {          var c_3254796805 = get_3338666888(oHEX60gensym290_3254796782);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254796774 = nimCopy(result_3254796774, toCursor_3254780264(c_3254796805, true), NTI3254779907);
      }
      
    }
    

  return result_3254796774;

}

function getCursorRight_3254796736(cell_3254796737, cursor_3254796738) {
        var Temporary1;

  var result_3254796739 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796739 = nimCopy(result_3254796739, cursor_3254796738, NTI3254779907);
    if ((cursor_3254796738.lastIndex < editableHigh_3338666256(cell_3254796737, false))) {
    result_3254796739.lastIndex = addInt(result_3254796739.lastIndex, 1);
    result_3254796739.firstIndex = result_3254796739.lastIndex;
    }
    else {
        var oHEX60gensym289_3254796747 = getNextSelectableLeaf_3254795841(cell_3254796737);
        if (!isSome_3338666868(oHEX60gensym289_3254796747)) Temporary1 = false; else {          var c_3254796770 = get_3338666888(oHEX60gensym289_3254796747);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254796739 = nimCopy(result_3254796739, toCursor_3254780264(c_3254796770, true), NTI3254779907);
      }
      
    }
    

  return result_3254796739;

}

function getCursorRight_3254796806(cell_3254796807, cursor_3254796808) {
        var Temporary1;

  var result_3254796809 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796809 = nimCopy(result_3254796809, cursor_3254796808, NTI3254779907);
    if ((cursor_3254796808.lastIndex < editableHigh_3338666256(cell_3254796807, false))) {
    result_3254796809.lastIndex = addInt(result_3254796809.lastIndex, 1);
    result_3254796809.firstIndex = result_3254796809.lastIndex;
    }
    else {
        var oHEX60gensym291_3254796817 = getNextSelectableLeaf_3254795841(cell_3254796807);
        if (!isSome_3338666868(oHEX60gensym291_3254796817)) Temporary1 = false; else {          var c_3254796840 = get_3338666888(oHEX60gensym291_3254796817);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254796809 = nimCopy(result_3254796809, toCursor_3254780264(c_3254796840, true), NTI3254779907);
      }
      
    }
    

  return result_3254796809;

}

function getCursorRight_3254796973(cell_3254796974, cursor_3254796975) {
      var Temporary1;
    var Temporary2;

  var result_3254796976 = [({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})];

  BeforeRet: {
      var oHEX60gensym295_3254796979 = getNextSelectableLeaf_3254795841(cell_3254796974);
      if (!isSome_3338666868(oHEX60gensym295_3254796979)) Temporary1 = false; else {        var c_3254797002 = get_3338666888(oHEX60gensym295_3254796979);
        Temporary1 = true;      }    if (Temporary1) {
    result_3254796976[0] = nimCopy(result_3254796976[0], toCursor_3254780264(c_3254797002, true), NTI3254779907);
    break BeforeRet;
    }
    
    var childCell_3254797006 = cell_3254796974.children[chckIndx((cell_3254796974.children).length - 1, 0, (cell_3254796974.children).length - 1)];
    result_3254796976[0].node = childCell_3254797006.node;
    if ((cell_3254796974.node == childCell_3254797006.node)) {
    Temporary2 = HEX26_3254796946(cursor_3254796975.path, (cell_3254796974.children).length - 1);
    }
    else {
    Temporary2 = [];
    }
    
    result_3254796976[0].path = nimCopy(null, Temporary2, NTI3254789242);
    result_3254796976[0].cell = cell_3254796974;
    columnHEX3D_3254780009(result_3254796976[0], 0);
  };

  return result_3254796976[0];

}

function getCursorRight_3254796876(cell_3254796877, cursor_3254796878) {
        var Temporary1;

  var result_3254796879 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796879 = nimCopy(result_3254796879, cursor_3254796878, NTI3254779907);
    if ((cursor_3254796878.lastIndex < editableHigh_3338666256(cell_3254796877, false))) {
    result_3254796879.lastIndex = addInt(result_3254796879.lastIndex, 1);
    result_3254796879.firstIndex = result_3254796879.lastIndex;
    }
    else {
        var oHEX60gensym293_3254796887 = getNextSelectableLeaf_3254795841(cell_3254796877);
        if (!isSome_3338666868(oHEX60gensym293_3254796887)) Temporary1 = false; else {          var c_3254796910 = get_3338666888(oHEX60gensym293_3254796887);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254796879 = nimCopy(result_3254796879, toCursor_3254780264(c_3254796910, true), NTI3254779907);
      }
      
    }
    

  return result_3254796879;

}

function getCursorRight_3254796841(cell_3254796842, cursor_3254796843) {
        var Temporary1;

  var result_3254796844 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    result_3254796844 = nimCopy(result_3254796844, cursor_3254796843, NTI3254779907);
    if ((cursor_3254796843.lastIndex < editableHigh_3338666256(cell_3254796842, false))) {
    result_3254796844.lastIndex = addInt(result_3254796844.lastIndex, 1);
    result_3254796844.firstIndex = result_3254796844.lastIndex;
    }
    else {
        var oHEX60gensym292_3254796852 = getNextSelectableLeaf_3254795841(cell_3254796842);
        if (!isSome_3338666868(oHEX60gensym292_3254796852)) Temporary1 = false; else {          var c_3254796875 = get_3338666888(oHEX60gensym292_3254796852);
          Temporary1 = true;        }      if (Temporary1) {
      result_3254796844 = nimCopy(result_3254796844, toCursor_3254780264(c_3254796875, true), NTI3254779907);
      }
      
    }
    

  return result_3254796844;

}

function getCursorRight_3254795279(cell_3254795280, cursor_3254795281) {
  var result_3254795282 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  return result_3254795282;

}

function getCursorRight_3254795283(cell_3254795280, cursor_3254795281) {
  var result_3254795284 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    chckNilDisp(cell_3254795280);
    if (isObj(cell_3254795280.m_type, NTI3338665997)) {
    result_3254795284 = nimCopy(result_3254795284, getCursorRight_3254796771(cell_3254795280, cursor_3254795281), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795280.m_type, NTI3338665995)) {
    result_3254795284 = nimCopy(result_3254795284, getCursorRight_3254796736(cell_3254795280, cursor_3254795281), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795280.m_type, NTI3338665998)) {
    result_3254795284 = nimCopy(result_3254795284, getCursorRight_3254796806(cell_3254795280, cursor_3254795281), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795280.m_type, NTI3338665993)) {
    result_3254795284 = nimCopy(result_3254795284, getCursorRight_3254796973(cell_3254795280, cursor_3254795281), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795280.m_type, NTI3338665996)) {
    result_3254795284 = nimCopy(result_3254795284, getCursorRight_3254796876(cell_3254795280, cursor_3254795281), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795280.m_type, NTI3338665999)) {
    result_3254795284 = nimCopy(result_3254795284, getCursorRight_3254796841(cell_3254795280, cursor_3254795281), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254795280.m_type, NTI3271557157)) {
    result_3254795284 = nimCopy(result_3254795284, getCursorRight_3254795279(cell_3254795280, cursor_3254795281), NTI3254779907);
    break BeforeRet;
    }
    }}}}}}
  };

  return result_3254795284;

}

function HEX3DHEX3D_3254797269(x_3254797271, y_3254797272) {
  var result_3254797273 = false;

  BeforeRet: {
    if (!((x_3254797271.a == y_3254797272.a))) {
    result_3254797273 = false;
    break BeforeRet;
    }
    
    if (!((x_3254797271.b == y_3254797272.b))) {
    result_3254797273 = false;
    break BeforeRet;
    }
    
    result_3254797273 = true;
    break BeforeRet;
  };

  return result_3254797273;

}

function handleDeleteLeft_3254797392(cell_3254797393, slice_3254797395) {
      var Temporary1;
      var Temporary2;
    var Temporary3;

  var result_3254797397 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
      if (cell_3254797393.disableEditing) Temporary2 = true; else {        Temporary2 = ((currentText_3338666034(cell_3254797393)).length == 0);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = HEX3DHEX3D_3254797269(slice_3254797395, HEX2EHEX2E_805306418(0, 0));      }    if (Temporary1) {
    result_3254797397 = nimCopy(result_3254797397, none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    if (!((slice_3254797395.a == slice_3254797395.b))) {
    Temporary3 = slice_3254797395;
    }
    else {
    Temporary3 = HEX2EHEX2E_805306418(nimMax(0, subInt(slice_3254797395.a, 1)), slice_3254797395.b);
    }
    
    var slice_3254797483 = nimCopy(null, Temporary3, NTI805306392);
    var newIndex_3254797484 = replaceText_3338666409(cell_3254797393, slice_3254797483, []);
    result_3254797397 = nimCopy(result_3254797397, some_3254794959(toCursor_3254780261(cell_3254797393, newIndex_3254797484)), NTI3254780132);
    break BeforeRet;
  };

  return result_3254797397;

}

function handleDeleteLeft_3254797296(cell_3254797297, slice_3254797299) {
      var Temporary1;
      var Temporary2;
    var Temporary3;

  var result_3254797301 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
      if (cell_3254797297.disableEditing) Temporary2 = true; else {        Temporary2 = ((currentText_3338666034(cell_3254797297)).length == 0);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = HEX3DHEX3D_3254797269(slice_3254797299, HEX2EHEX2E_805306418(0, 0));      }    if (Temporary1) {
    result_3254797301 = nimCopy(result_3254797301, none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    if (!((slice_3254797299.a == slice_3254797299.b))) {
    Temporary3 = slice_3254797299;
    }
    else {
    Temporary3 = HEX2EHEX2E_805306418(nimMax(0, subInt(slice_3254797299.a, 1)), slice_3254797299.b);
    }
    
    var slice_3254797387 = nimCopy(null, Temporary3, NTI805306392);
    var newIndex_3254797388 = replaceText_3338666409(cell_3254797297, slice_3254797387, []);
    result_3254797301 = nimCopy(result_3254797301, some_3254794959(toCursor_3254780261(cell_3254797297, newIndex_3254797388)), NTI3254780132);
    break BeforeRet;
  };

  return result_3254797301;

}

function handleDeleteLeft_3254797194(cell_3254797195, slice_3254797197) {
      var Temporary1;
      var Temporary2;
    var Temporary3;

  var result_3254797199 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
      if (cell_3254797195.disableEditing) Temporary2 = true; else {        Temporary2 = ((currentText_3338666034(cell_3254797195)).length == 0);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = HEX3DHEX3D_3254797269(slice_3254797197, HEX2EHEX2E_805306418(0, 0));      }    if (Temporary1) {
    result_3254797199 = nimCopy(result_3254797199, none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    if (!((slice_3254797197.a == slice_3254797197.b))) {
    Temporary3 = slice_3254797197;
    }
    else {
    Temporary3 = HEX2EHEX2E_805306418(nimMax(0, subInt(slice_3254797197.a, 1)), slice_3254797197.b);
    }
    
    var slice_3254797291 = nimCopy(null, Temporary3, NTI805306392);
    var newIndex_3254797292 = replaceText_3338666409(cell_3254797195, slice_3254797291, []);
    result_3254797199 = nimCopy(result_3254797199, some_3254794959(toCursor_3254780261(cell_3254797195, newIndex_3254797292)), NTI3254780132);
    break BeforeRet;
  };

  return result_3254797199;

}

function handleDeleteLeft_3254797488(cell_3254797489, slice_3254797491) {
      var Temporary1;
      var Temporary2;
    var Temporary3;

  var result_3254797493 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
      if (cell_3254797489.disableEditing) Temporary2 = true; else {        Temporary2 = ((currentText_3338666034(cell_3254797489)).length == 0);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = HEX3DHEX3D_3254797269(slice_3254797491, HEX2EHEX2E_805306418(0, 0));      }    if (Temporary1) {
    result_3254797493 = nimCopy(result_3254797493, none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    if (!((slice_3254797491.a == slice_3254797491.b))) {
    Temporary3 = slice_3254797491;
    }
    else {
    Temporary3 = HEX2EHEX2E_805306418(nimMax(0, subInt(slice_3254797491.a, 1)), slice_3254797491.b);
    }
    
    var slice_3254797579 = nimCopy(null, Temporary3, NTI805306392);
    var newIndex_3254797580 = replaceText_3338666409(cell_3254797489, slice_3254797579, []);
    result_3254797493 = nimCopy(result_3254797493, some_3254794959(toCursor_3254780261(cell_3254797489, newIndex_3254797580)), NTI3254780132);
    break BeforeRet;
  };

  return result_3254797493;

}

function handleDeleteLeft_3254797171(cell_3254797172, slice_3254797174) {
  var result_3254797176 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  return result_3254797176;

}

function handleDeleteLeft_3254797177(cell_3254797172, slice_3254797174) {
  var result_3254797178 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
    chckNilDisp(cell_3254797172);
    if (isObj(cell_3254797172.m_type, NTI3338665999)) {
    result_3254797178 = nimCopy(result_3254797178, handleDeleteLeft_3254797392(cell_3254797172, slice_3254797174), NTI3254780132);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254797172.m_type, NTI3338665995)) {
    result_3254797178 = nimCopy(result_3254797178, handleDeleteLeft_3254797296(cell_3254797172, slice_3254797174), NTI3254780132);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254797172.m_type, NTI3338665996)) {
    result_3254797178 = nimCopy(result_3254797178, handleDeleteLeft_3254797194(cell_3254797172, slice_3254797174), NTI3254780132);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254797172.m_type, NTI3338665998)) {
    result_3254797178 = nimCopy(result_3254797178, handleDeleteLeft_3254797488(cell_3254797172, slice_3254797174), NTI3254780132);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254797172.m_type, NTI3271557157)) {
    result_3254797178 = nimCopy(result_3254797178, handleDeleteLeft_3254797171(cell_3254797172, slice_3254797174), NTI3254780132);
    break BeforeRet;
    }
    }}}}
  };

  return result_3254797178;

}

function handleDeleteRight_3254797778(cell_3254797779, slice_3254797781) {
    var Temporary1;

  var result_3254797783 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
    var currentText_3254797784 = currentText_3338666034(cell_3254797779);
    if (((cell_3254797779.disableEditing || ((currentText_3254797784).length == 0)) || HEX3DHEX3D_3254797269(slice_3254797781, HEX2EHEX2E_805306418((currentText_3254797784).length, (currentText_3254797784).length)))) {
    result_3254797783 = nimCopy(result_3254797783, none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    if (!((slice_3254797781.a == slice_3254797781.b))) {
    Temporary1 = slice_3254797781;
    }
    else {
    Temporary1 = HEX2EHEX2E_805306418(slice_3254797781.a, nimMin(addInt(slice_3254797781.b, 1), (currentText_3254797784).length));
    }
    
    var slice_3254797870 = nimCopy(null, Temporary1, NTI805306392);
    var newIndex_3254797871 = replaceText_3338666409(cell_3254797779, slice_3254797870, []);
    result_3254797783 = nimCopy(result_3254797783, some_3254794959(toCursor_3254780261(cell_3254797779, newIndex_3254797871)), NTI3254780132);
    break BeforeRet;
  };

  return result_3254797783;

}

function handleDeleteRight_3254797681(cell_3254797682, slice_3254797684) {
    var Temporary1;

  var result_3254797686 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
    var currentText_3254797687 = currentText_3338666034(cell_3254797682);
    if (((cell_3254797682.disableEditing || ((currentText_3254797687).length == 0)) || HEX3DHEX3D_3254797269(slice_3254797684, HEX2EHEX2E_805306418((currentText_3254797687).length, (currentText_3254797687).length)))) {
    result_3254797686 = nimCopy(result_3254797686, none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    if (!((slice_3254797684.a == slice_3254797684.b))) {
    Temporary1 = slice_3254797684;
    }
    else {
    Temporary1 = HEX2EHEX2E_805306418(slice_3254797684.a, nimMin(addInt(slice_3254797684.b, 1), (currentText_3254797687).length));
    }
    
    var slice_3254797773 = nimCopy(null, Temporary1, NTI805306392);
    var newIndex_3254797774 = replaceText_3338666409(cell_3254797682, slice_3254797773, []);
    result_3254797686 = nimCopy(result_3254797686, some_3254794959(toCursor_3254780261(cell_3254797682, newIndex_3254797774)), NTI3254780132);
    break BeforeRet;
  };

  return result_3254797686;

}

function handleDeleteRight_3254797584(cell_3254797585, slice_3254797587) {
    var Temporary1;

  var result_3254797589 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
    var currentText_3254797590 = currentText_3338666034(cell_3254797585);
    if (((cell_3254797585.disableEditing || ((currentText_3254797590).length == 0)) || HEX3DHEX3D_3254797269(slice_3254797587, HEX2EHEX2E_805306418((currentText_3254797590).length, (currentText_3254797590).length)))) {
    result_3254797589 = nimCopy(result_3254797589, none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    if (!((slice_3254797587.a == slice_3254797587.b))) {
    Temporary1 = slice_3254797587;
    }
    else {
    Temporary1 = HEX2EHEX2E_805306418(slice_3254797587.a, nimMin(addInt(slice_3254797587.b, 1), (currentText_3254797590).length));
    }
    
    var slice_3254797676 = nimCopy(null, Temporary1, NTI805306392);
    var newIndex_3254797677 = replaceText_3338666409(cell_3254797585, slice_3254797676, []);
    result_3254797589 = nimCopy(result_3254797589, some_3254794959(toCursor_3254780261(cell_3254797585, newIndex_3254797677)), NTI3254780132);
    break BeforeRet;
  };

  return result_3254797589;

}

function handleDeleteRight_3254797875(cell_3254797876, slice_3254797878) {
    var Temporary1;

  var result_3254797880 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
    var currentText_3254797881 = currentText_3338666034(cell_3254797876);
    if (((cell_3254797876.disableEditing || ((currentText_3254797881).length == 0)) || HEX3DHEX3D_3254797269(slice_3254797878, HEX2EHEX2E_805306418((currentText_3254797881).length, (currentText_3254797881).length)))) {
    result_3254797880 = nimCopy(result_3254797880, none_3254794843(), NTI3254780132);
    break BeforeRet;
    }
    
    if (!((slice_3254797878.a == slice_3254797878.b))) {
    Temporary1 = slice_3254797878;
    }
    else {
    Temporary1 = HEX2EHEX2E_805306418(slice_3254797878.a, nimMin(addInt(slice_3254797878.b, 1), (currentText_3254797881).length));
    }
    
    var slice_3254797967 = nimCopy(null, Temporary1, NTI805306392);
    var newIndex_3254797968 = replaceText_3338666409(cell_3254797876, slice_3254797967, []);
    result_3254797880 = nimCopy(result_3254797880, some_3254794959(toCursor_3254780261(cell_3254797876, newIndex_3254797968)), NTI3254780132);
    break BeforeRet;
  };

  return result_3254797880;

}

function handleDeleteRight_3254797179(cell_3254797180, slice_3254797182) {
  var result_3254797184 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  return result_3254797184;

}

function handleDeleteRight_3254797185(cell_3254797180, slice_3254797182) {
  var result_3254797186 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  BeforeRet: {
    chckNilDisp(cell_3254797180);
    if (isObj(cell_3254797180.m_type, NTI3338665999)) {
    result_3254797186 = nimCopy(result_3254797186, handleDeleteRight_3254797778(cell_3254797180, slice_3254797182), NTI3254780132);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254797180.m_type, NTI3338665995)) {
    result_3254797186 = nimCopy(result_3254797186, handleDeleteRight_3254797681(cell_3254797180, slice_3254797182), NTI3254780132);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254797180.m_type, NTI3338665996)) {
    result_3254797186 = nimCopy(result_3254797186, handleDeleteRight_3254797584(cell_3254797180, slice_3254797182), NTI3254780132);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254797180.m_type, NTI3338665998)) {
    result_3254797186 = nimCopy(result_3254797186, handleDeleteRight_3254797875(cell_3254797180, slice_3254797182), NTI3254780132);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254797180.m_type, NTI3271557157)) {
    result_3254797186 = nimCopy(result_3254797186, handleDeleteRight_3254797179(cell_3254797180, slice_3254797182), NTI3254780132);
    break BeforeRet;
    }
    }}}}
  };

  return result_3254797186;

}

function active_2415919218(self_2415919219) {
  var result_2415919220 = false;

    result_2415919220 = self_2415919219.active;

  return result_2415919220;

}

function updateBackgroundColor_2785018361(self_2785018362, color_2785018363, frameIndex_2785018364) {
    if (!(HEX3DHEX3D_2785018351(self_2785018362.backgroundColor, color_2785018363))) {
    self_2785018362.lastHierarchyChange = nimMax(self_2785018362.lastHierarchyChange, frameIndex_2785018364);
    }
    
    self_2785018362.backgroundColor = nimCopy(self_2785018362.backgroundColor, color_2785018363, NTI2550136835);

  
}

function HEX2A_2566914051(c_2566914052, v_2566914053) {
  var result_2566914054 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2566914054.r = (c_2566914052.r * v_2566914053);
    result_2566914054.g = (c_2566914052.g * v_2566914053);
    result_2566914054.b = (c_2566914052.b * v_2566914053);
    result_2566914054.a = (c_2566914052.a * v_2566914053);

  return result_2566914054;

}

function changed_2785018532(self_2785018533, frameIndex_2785018534) {
  var result_2785018535 = false;

    result_2785018535 = (((frameIndex_2785018534 <= self_2785018533.lastBoundsChange) || (frameIndex_2785018534 <= self_2785018533.lastHierarchyChange)) || (frameIndex_2785018534 <= self_2785018533.lastInvalidation));

  return result_2785018535;

}

function dirty_2415919140(self_2415919141) {
  var result_2415919142 = false;

    result_2415919142 = self_2415919141.mDirty;

  return result_2415919142;

}

function resetDirty_2415919213(self_2415919214) {
    self_2415919214.mDirty = false;

  
}

function updateBaseIndexAndScrollOffset_3472883741(self_3472883742, app_3472883743, contentPanel_3472883744) {
    var totalLineHeight_3472883745 = totalLineHeight_2768240810(app_3472883743.platform);

  
}

function initTable_3472886319(initialSize_3472886322) {
  var result_3472886323 = ({data: [], counter: 0});

    var correctSizeHEX60gensym59_3472886325 = slotsNeeded_1308622891(chckRange(initialSize_3472886322, 0, 2147483647));
    result_3472886323.counter = 0;
    result_3472886323.data = new Array(chckRange(correctSizeHEX60gensym59_3472886325, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_3472886325, 0, 2147483647) ; ++i) { result_3472886323.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3472886323;

}

function len_3472886374(t_3472886377) {
  var result_3472886378 = 0;

    result_3472886378 = t_3472886377.counter;

  return result_3472886378;

}

function HEX5BHEX5D_3472886531(t_3472886534, key_3472886535) {
  var result_3472886536 = null;
  var result_3472886536_Idx = 0;

    var hcHEX60gensym22_3472886537 = [0];
    var indexHEX60gensym22_3472886544 = rawGet_3254790540(t_3472886534, key_3472886535, hcHEX60gensym22_3472886537, 0);
    if ((0 <= indexHEX60gensym22_3472886544)) {
    result_3472886536 = t_3472886534.data[chckIndx(indexHEX60gensym22_3472886544, 0, (t_3472886534.data).length - 1)]; result_3472886536_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3472886535);
    }
    

  return [result_3472886536, result_3472886536_Idx];

}

function mustRehash_3472884507(t_3472884509) {
  var result_3472884510 = false;

    if (!((t_3472884509.counter < (t_3472884509.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3472884510 = ((mulInt((t_3472884509.data).length, 2) < mulInt(t_3472884509.counter, 3)) || (subInt((t_3472884509.data).length, t_3472884509.counter) < 4));

  return result_3472884510;

}

function rawInsert_3472884956(t_3472884960, data_3472884961, data_3472884961_Idx, key_3472884962, val_3472884963, hc_3472884964, h_3472884965) {
    data_3472884961[data_3472884961_Idx][chckIndx(h_3472884965, 0, (data_3472884961[data_3472884961_Idx]).length - 1)].Field1 = nimCopy(data_3472884961[data_3472884961_Idx][chckIndx(h_3472884965, 0, (data_3472884961[data_3472884961_Idx]).length - 1)].Field1, key_3472884962, NTI2046820355);
    data_3472884961[data_3472884961_Idx][chckIndx(h_3472884965, 0, (data_3472884961[data_3472884961_Idx]).length - 1)].Field2 = val_3472884963;
    data_3472884961[data_3472884961_Idx][chckIndx(h_3472884965, 0, (data_3472884961[data_3472884961_Idx]).length - 1)].Field0 = hc_3472884964;

  
}

function enlarge_3472884662(t_3472884665) {
    var n_3472884668 = [];
    n_3472884668 = new Array(chckRange(mulInt((t_3472884665.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3472884665.data).length, 2), 0, 2147483647) ; ++i) { n_3472884668[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3472884665.data; t_3472884665.data = n_3472884668; n_3472884668 = Temporary1;    Label2: {
      var i_3472884732 = 0;
      var colontmp__536872871 = 0;
      colontmp__536872871 = (n_3472884668).length - 1;
      var res_536872872 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872872 <= colontmp__536872871)) break Label4;
            i_3472884732 = res_536872872;
            var eh_3472884786 = n_3472884668[chckIndx(i_3472884732, 0, (n_3472884668).length - 1)].Field0;
            if (isFilled_1308622880(eh_3472884786)) {
            var j_3472884790 = (eh_3472884786 & (t_3472884665.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3472884665.data[chckIndx(j_3472884790, 0, (t_3472884665.data).length - 1)].Field0)) break Label6;
                  j_3472884790 = nextTry_1308622883(j_3472884790, (t_3472884665.data).length - 1);
                }
            };
            rawInsert_3472884956(t_3472884665, t_3472884665, "data", n_3472884668[chckIndx(i_3472884732, 0, (n_3472884668).length - 1)].Field1, n_3472884668[chckIndx(i_3472884732, 0, (n_3472884668).length - 1)].Field2, eh_3472884786, j_3472884790);
            }
            
            res_536872872 = addInt(res_536872872, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3472885125(t_3472885128, key_3472885129, hc_3472885130) {
  var result_3472885131 = 0;

  BeforeRet: {
    if (((t_3472885128.data).length == 0)) {
    result_3472885131 = -1;
    break BeforeRet;
    }
    
    var h_3472885182 = (hc_3472885130 & (t_3472885128.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3472885128.data[chckIndx(h_3472885182, 0, (t_3472885128.data).length - 1)].Field0)) break Label2;
          if (((t_3472885128.data[chckIndx(h_3472885182, 0, (t_3472885128.data).length - 1)].Field0 == hc_3472885130) && HEX3DHEX3D_2046820626(t_3472885128.data[chckIndx(h_3472885182, 0, (t_3472885128.data).length - 1)].Field1, key_3472885129))) {
          result_3472885131 = h_3472885182;
          break BeforeRet;
          }
          
          h_3472885182 = nextTry_1308622883(h_3472885182, (t_3472885128.data).length - 1);
        }
    };
    result_3472885131 = subInt(-1, h_3472885182);
  };

  return result_3472885131;

}

function HEX5BHEX5DHEX3D_3472884334(t_3472884337, key_3472884338, val_3472884339) {
    if (((t_3472884337.data).length == 0)) {
    var correctSizeHEX60gensym16_3472884388 = slotsNeeded_1308622891(32);
    t_3472884337.counter = 0;
    t_3472884337.data = new Array(chckRange(correctSizeHEX60gensym16_3472884388, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3472884388, 0, 2147483647) ; ++i) { t_3472884337.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3472884393 = [0];
    var index_3472884400 = rawGet_3254793173(t_3472884337, key_3472884338, hc_3472884393, 0);
    if ((0 <= index_3472884400)) {
    t_3472884337.data[chckIndx(index_3472884400, 0, (t_3472884337.data).length - 1)].Field2 = val_3472884339;
    }
    else {
      if (((t_3472884337.data).length == 0)) {
      var correctSizeHEX60gensym19_3472884502 = slotsNeeded_1308622891(32);
      t_3472884337.counter = 0;
      t_3472884337.data = new Array(chckRange(correctSizeHEX60gensym19_3472884502, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym19_3472884502, 0, 2147483647) ; ++i) { t_3472884337.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3472884507(t_3472884337)) {
      enlarge_3472884662(t_3472884337);
      index_3472884400 = rawGetKnownHC_3472885125(t_3472884337, key_3472884338, hc_3472884393[0]);
      }
      
      index_3472884400 = subInt(-1, index_3472884400);
      rawInsert_3472884956(t_3472884337, t_3472884337, "data", key_3472884338, val_3472884339, hc_3472884393[0], index_3472884400);
      t_3472884337.counter = addInt(t_3472884337.counter, 1);
    }
    

  
}

function withAlpha_3472883737(color_3472883738, alpha_3472883739) {
  var result_3472883740 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_3472883740 = nimCopy(result_3472883740, color_2550136904(color_3472883738.r, color_3472883738.g, color_3472883738.b, alpha_3472883739), NTI2550136835);

  return result_3472883740;

}

function isSome_3221226333(self_3221226335) {
  var result_3221226336 = false;

    result_3221226336 = self_3221226335.has;

  return result_3221226336;

}

function isNone_3221226358(self_3221226360) {
  var result_3221226361 = false;

    result_3221226361 = !(self_3221226360.has);

  return result_3221226361;

}

function get_3221226350(self_3221226352) {
  var result_3221226353 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isNone_3221226358(self_3221226352)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221226353 = self_3221226352.val;

  return result_3221226353;

}

function anyColor_3472883969(theme_3472883971, names_3472883972, default_3472883973) {
  var result_3472883974 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3472883978 = [];
      var i_536872881 = 0;
      var L_536872882 = (names_3472883972).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872881 < L_536872882)) break Label3;
            name_3472883978 = names_3472883972[chckIndx(i_536872881, 0, (names_3472883972).length - 1)];
            if (nsuStartsWith(name_3472883978, [35])) {
            result_3472883974 = nimCopy(result_3472883974, parseHexVar_2516582448(name_3472883978), NTI2550136835);
            break BeforeRet;
            }
            else {
            if ((nsuStartsWith(name_3472883978, [38]) && contains_3221226054(theme_3472883971.colors, HEX5BHEX5D_855639319(name_3472883978, HEX2EHEX2E_1040187488(1, 1))))) {
            result_3472883974 = nimCopy(result_3472883974, HEX5BHEX5D_3221226144(theme_3472883971.colors, HEX5BHEX5D_855639319(name_3472883978, HEX2EHEX2E_1040187488(1, 1))), NTI2550136835);
            break BeforeRet;
            }
            else {
            if (contains_2516582652(theme_3472883971.tokenColors, name_3472883978)) {
            var style_3472884225 = nimCopy(null, HEX5BHEX5D_2516582957(theme_3472883971.tokenColors, name_3472883978), NTI2516582404);
            if (isSome_3221226333(style_3472884225.foreground)) {
            result_3472883974 = nimCopy(result_3472883974, get_3221226350(style_3472884225.foreground), NTI2550136835);
            break BeforeRet;
            }
            
            }
            }}
            i_536872881 = addInt(i_536872881, 1);
            if (!(((names_3472883972).length == L_536872882))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3472883974 = nimCopy(result_3472883974, color_2634023294(default_3472883973), NTI2550136835);
    break BeforeRet;
  };

  return result_3472883974;

}

function getTextAndColor_3472883953(app_3472883954, cell_3472883955, defaultShadowText_3472883956) {
    var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3472883957 = {Field0: [], Field1: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})};

  BeforeRet: {
    if (((currentText_3338666034(cell_3472883955)).length == 0)) {
    if (((cell_3472883955.shadowText).length == 0)) {
    Temporary1 = defaultShadowText_3472883956;
    }
    else {
    Temporary1 = cell_3472883955.shadowText;
    }
    
    var text_3472883958 = nimCopy(null, Temporary1, NTI33554449);
    var textColor_3472883964 = withAlpha_3472883737(color_3439329450(app_3472883954.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200)), 0.7);
    var colontmp__536872876 = nimCopy(null, text_3472883958, NTI33554449);
    var colontmp__536872877 = nimCopy(null, textColor_3472883964, NTI2550136835);
    result_3472883957 = nimCopy(result_3472883957, {Field0: nimCopy(null, colontmp__536872876, NTI33554449), Field1: nimCopy(null, colontmp__536872877, NTI2550136835)}, NTI3472883847);
    break BeforeRet;
    }
    else {
      if (!((cell_3472883955.foregroundColor.a == 0.0))) {
      Temporary2 = cell_3472883955.foregroundColor;
      }
      else {
      Temporary2 = color_2550136904(1.0, 1.0, 1.0, 1.0);
      }
      
      var defaultColor_3472883965 = nimCopy(null, Temporary2, NTI2550136835);
      if (((cell_3472883955.themeForegroundColors).length == 0)) {
      Temporary3 = defaultColor_3472883965;
      }
      else {
      Temporary3 = anyColor_3472883969(app_3472883954.theme, cell_3472883955.themeForegroundColors, defaultColor_3472883965);
      }
      
      var textColor_3472884248 = nimCopy(null, Temporary3, NTI2550136835);
      var colontmp__536872878 = currentText_3338666034(cell_3472883955);
      var colontmp__536872879 = nimCopy(null, textColor_3472884248, NTI2550136835);
      result_3472883957 = nimCopy(result_3472883957, {Field0: nimCopy(null, colontmp__536872878, NTI33554449), Field1: nimCopy(null, colontmp__536872879, NTI2550136835)}, NTI3472883847);
      break BeforeRet;
    }
    
  };

  return result_3472883957;

}

function setBackgroundColor_3472884249(app_3472884250, cell_3472884251, widget_3472884252) {
    var Temporary1;
    var Temporary2;

    if (!((cell_3472884251.backgroundColor.a == 0.0))) {
    Temporary1 = cell_3472884251.backgroundColor;
    }
    else {
    Temporary1 = color_2550136904(0.0, 0.0, 0.0, 0.0);
    }
    
    var defaultColor_3472884253 = nimCopy(null, Temporary1, NTI2550136835);
    if (((cell_3472884251.themeBackgroundColors).length == 0)) {
    Temporary2 = defaultColor_3472884253;
    }
    else {
    Temporary2 = anyColor_3472883969(app_3472884250.theme, cell_3472884251.themeBackgroundColors, defaultColor_3472884253);
    }
    
    var backgroundColor_3472884262 = nimCopy(null, Temporary2, NTI2550136835);
    widget_3472884252.backgroundColor = nimCopy(widget_3472884252.backgroundColor, backgroundColor_3472884262, NTI2550136835);
    widget_3472884252.fillBackground = !((backgroundColor_3472884262.a == 0.0));
    widget_3472884252.allowAlpha = true;

  
}

function updateCellWidget_3472885370(cell_3472885371, app_3472885372, widget_3472885373, frameIndex_3472885374, ctx_3472885375, updateContext_3472885376) {
    var Temporary1;

  var result_3472885377 = null;

  BeforeRet: {
    if ((!((cell_3472885371.isVisible == null)) && !(cell_3472885371.isVisible(cell_3472885371.node)))) {
    result_3472885377 = null;
    break BeforeRet;
    }
    
    if ((!((widget_3472885373 == null)) && isObj(widget_3472885373.m_type, NTI2785017879))) {
    Temporary1 = widget_3472885373;
    }
    else {
    Temporary1 = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    }
    
    var widget_3472885390 = Temporary1;
    result_3472885377 = widget_3472885390;
    HEX5BHEX5DHEX3D_3472884334(updateContext_3472885376.cellToWidget, cell_3472885371.id, widget_3472885390);
    var colontmp__536872875 = getTextAndColor_3472883953(app_3472885372, cell_3472885371, []);
    var text_3472885437 = nimCopy(null, colontmp__536872875["Field0"], NTI33554449);
    var color_3472885438 = nimCopy(null, colontmp__536872875["Field1"], NTI2550136835);
    widget_3472885390.text = nimCopy(null, text_3472885437, NTI33554449);
    widget_3472885390.foregroundColor = nimCopy(widget_3472885390.foregroundColor, color_3472885438, NTI2550136835);
    widget_3472885390.fontSizeIncreasePercent = cell_3472885371.fontSizeIncreasePercent;
    var size_3472885439 = app_3472885372.platform.layoutOptions.getTextBounds(widget_3472885390.text, widget_3472885390.fontSizeIncreasePercent);
    widget_3472885390.left = 0.0;
    widget_3472885390.right = size_3472885439.x;
    widget_3472885390.top = 0.0;
    widget_3472885390.bottom = size_3472885439.y;
    setBackgroundColor_3472884249(app_3472885372, cell_3472885371, widget_3472885390);
  };

  return result_3472885377;

}

function updateCellWidget_3472884273(cell_3472884274, app_3472884275, widget_3472884276, frameIndex_3472884277, ctx_3472884278, updateContext_3472884279) {
    var Temporary1;

  var result_3472884280 = null;

  BeforeRet: {
    if ((!((cell_3472884274.isVisible == null)) && !(cell_3472884274.isVisible(cell_3472884274.node)))) {
    result_3472884280 = null;
    break BeforeRet;
    }
    
    if ((!((widget_3472884276 == null)) && isObj(widget_3472884276.m_type, NTI2785017879))) {
    Temporary1 = widget_3472884276;
    }
    else {
    Temporary1 = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    }
    
    var widget_3472884293 = Temporary1;
    result_3472884280 = widget_3472884293;
    HEX5BHEX5DHEX3D_3472884334(updateContext_3472884279.cellToWidget, cell_3472884274.id, widget_3472884293);
    var colontmp__536872884 = getTextAndColor_3472883953(app_3472884275, cell_3472884274, []);
    var text_3472885363 = nimCopy(null, colontmp__536872884["Field0"], NTI33554449);
    var color_3472885364 = nimCopy(null, colontmp__536872884["Field1"], NTI2550136835);
    widget_3472884293.text = nimCopy(null, text_3472885363, NTI33554449);
    widget_3472884293.foregroundColor = nimCopy(widget_3472884293.foregroundColor, color_3472885364, NTI2550136835);
    widget_3472884293.fontSizeIncreasePercent = cell_3472884274.fontSizeIncreasePercent;
    var size_3472885365 = app_3472884275.platform.layoutOptions.getTextBounds(widget_3472884293.text, widget_3472884293.fontSizeIncreasePercent);
    widget_3472884293.left = 0.0;
    widget_3472884293.right = size_3472885365.x;
    widget_3472884293.top = 0.0;
    widget_3472884293.bottom = size_3472885365.y;
    setBackgroundColor_3472884249(app_3472884275, cell_3472884274, widget_3472884293);
  };

  return result_3472884280;

}

function updateCellWidget_3472885444(cell_3472885445, app_3472885446, widget_3472885447, frameIndex_3472885448, ctx_3472885449, updateContext_3472885450) {
    var Temporary1;

  var result_3472885451 = null;

  BeforeRet: {
    if ((!((cell_3472885445.isVisible == null)) && !(cell_3472885445.isVisible(cell_3472885445.node)))) {
    result_3472885451 = null;
    break BeforeRet;
    }
    
    if ((!((widget_3472885447 == null)) && isObj(widget_3472885447.m_type, NTI2785017879))) {
    Temporary1 = widget_3472885447;
    }
    else {
    Temporary1 = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    }
    
    var widget_3472885464 = Temporary1;
    result_3472885451 = widget_3472885464;
    HEX5BHEX5DHEX3D_3472884334(updateContext_3472885450.cellToWidget, cell_3472885445.id, widget_3472885464);
    var colontmp__536872885 = getTextAndColor_3472883953(app_3472885446, cell_3472885445, []);
    var text_3472885511 = nimCopy(null, colontmp__536872885["Field0"], NTI33554449);
    var color_3472885512 = nimCopy(null, colontmp__536872885["Field1"], NTI2550136835);
    widget_3472885464.text = nimCopy(null, text_3472885511, NTI33554449);
    widget_3472885464.foregroundColor = nimCopy(widget_3472885464.foregroundColor, color_3472885512, NTI2550136835);
    widget_3472885464.fontSizeIncreasePercent = cell_3472885445.fontSizeIncreasePercent;
    var size_3472885513 = app_3472885446.platform.layoutOptions.getTextBounds(widget_3472885464.text, widget_3472885464.fontSizeIncreasePercent);
    widget_3472885464.left = 0.0;
    widget_3472885464.right = size_3472885513.x;
    widget_3472885464.top = 0.0;
    widget_3472885464.bottom = size_3472885513.y;
    setBackgroundColor_3472884249(app_3472885446, cell_3472885445, widget_3472885464);
  };

  return result_3472885451;

}

function getOrCreate_3472883764(self_3472883766) {
    var Temporary2;

  var result_3472883768 = null;

  BeforeRet: {
    try {
    if ((!((self_3472883766 == null)) && isObj(self_3472883766.m_type, NTI2785017871))) {
    Temporary2 = self_3472883766;
    }
    else {
    Temporary2 = {layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    }
    
    result_3472883768 = Temporary2;
    break BeforeRet;
    } finally {
    if (!((result_3472883768 == null))) {
    result_3472883768.parent = self_3472883766;
    }
    
    }
  };

  return result_3472883768;

}

function getOrCreate_3472883781(self_3472883783, index_3472883784) {
    var Temporary2;

  var result_3472883786 = null;

  BeforeRet: {
    try {
    if (((self_3472883783.children).length <= index_3472883784)) {
    if (self_3472883783.children.length < (Temporary2 = chckRange(addInt(index_3472883784, 1), 0, 2147483647), Temporary2)) { for (var i = self_3472883783.children.length ; i < Temporary2 ; ++i) self_3472883783.children.push(null); }
               else { self_3472883783.children.length = Temporary2; };
    self_3472883783.children[chckIndx(index_3472883784, 0, (self_3472883783.children).length - 1)] = {layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    }
    else {
    if ((!((self_3472883783.children[chckIndx(index_3472883784, 0, (self_3472883783.children).length - 1)] == null)) && isObj(self_3472883783.children[chckIndx(index_3472883784, 0, (self_3472883783.children).length - 1)].m_type, NTI2785017871))) {
    result_3472883786 = self_3472883783.children[chckIndx(index_3472883784, 0, (self_3472883783.children).length - 1)];
    break BeforeRet;
    }
    }
    self_3472883783.children[chckIndx(index_3472883784, 0, (self_3472883783.children).length - 1)] = {layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    result_3472883786 = self_3472883783.children[chckIndx(index_3472883784, 0, (self_3472883783.children).length - 1)];
    break BeforeRet;
    } finally {
    if (!((result_3472883786 == null))) {
    result_3472883786.parent = self_3472883783;
    }
    
    }
  };

  return result_3472883786;

}

function newCellLayoutContext_3472883758(widget_3472883759) {
  var result_3472883760 = null;

    result_3472883760 = ({currentLine: 0, indexInLine: 0, currentIndent: 0, parentWidget: null, lineWidget: null, currentLineEmpty: false, hasIndent: false, prevNoSpaceRight: false, layoutOptions: ({getTextBounds: null}), indentText: []});
    result_3472883760.parentWidget = getOrCreate_3472883764(widget_3472883759);
    var colontmp__536872890 = vec2_2164261686();
    var colontmp__536872891 = vec2_2164261686();
    result_3472883760.parentWidget.anchor = nimCopy(result_3472883760.parentWidget.anchor, {Field0: nimCopy(null, colontmp__536872890, NTI2164261152), Field1: nimCopy(null, colontmp__536872891, NTI2164261152)}, NTI2785017869);
    result_3472883760.parentWidget.left = 0.0;
    result_3472883760.parentWidget.right = 0.0;
    result_3472883760.parentWidget.top = 0.0;
    result_3472883760.parentWidget.bottom = 0.0;
    result_3472883760.lineWidget = getOrCreate_3472883781(result_3472883760.parentWidget, result_3472883760.currentLine);
    var colontmp__536872892 = vec2_2164261686();
    var colontmp__536872893 = vec2_2164261686();
    result_3472883760.lineWidget.anchor = nimCopy(result_3472883760.lineWidget.anchor, {Field0: nimCopy(null, colontmp__536872892, NTI2164261152), Field1: nimCopy(null, colontmp__536872893, NTI2164261152)}, NTI2785017869);
    result_3472883760.lineWidget.left = 0.0;
    result_3472883760.lineWidget.right = 0.0;
    result_3472883760.lineWidget.top = 0.0;
    result_3472883760.lineWidget.bottom = 0.0;
    result_3472883760.indentText = nimCopy(null, [32,32], NTI33554449);
    result_3472883760.currentLineEmpty = true;

  return result_3472883760;

}

function updateCurrentIndent_3472883886(self_3472883887) {
    if ((self_3472883887.hasIndent && ((self_3472883887.lineWidget.children).length == 0))) {
    var size_3472883891 = self_3472883887.layoutOptions.getTextBounds(nsuRepeatStr(self_3472883887.indentText, chckRange(self_3472883887.currentIndent, 0, 2147483647)), 0.0);
    self_3472883887.lineWidget.right = size_3472883891.x;
    }
    

  
}

function increaseIndent_3472883894(self_3472883895) {
    self_3472883895.currentIndent = addInt(self_3472883895.currentIndent, 1);
    updateCurrentIndent_3472883886(self_3472883895);

  
}

function decreaseIndent_3472883901(self_3472883902) {
  BeforeRet: {
    if ((self_3472883902.currentIndent == 0)) {
    break BeforeRet;
    }
    
    self_3472883902.currentIndent = subInt(self_3472883902.currentIndent, 1);
    updateCurrentIndent_3472883886(self_3472883902);
  };

  
}

function isCurrentLineEmpty_3472883824(self_3472883825) {
  var result_3472883826 = false;

    result_3472883826 = self_3472883825.currentLineEmpty;

  return result_3472883826;

}

function truncate_2785018100(self_2785018101, len_2785018102) {
    var Temporary1;

    if (self_2785018101.children.length < (Temporary1 = chckRange(nimMin((self_2785018101.children).length, len_2785018102), 0, 2147483647), Temporary1)) { for (var i = self_2785018101.children.length ; i < Temporary1 ; ++i) self_2785018101.children.push(null); }
               else { self_2785018101.children.length = Temporary1; };

  
}

function HEX5BHEX5DHEX3D_2785017928(self_2785017929, index_2785017930, child_2785017931) {
    var Temporary1;

    if (((self_2785017929.children).length <= index_2785017930)) {
    if (self_2785017929.children.length < (Temporary1 = chckRange(addInt(index_2785017930, 1), 0, 2147483647), Temporary1)) { for (var i = self_2785017929.children.length ; i < Temporary1 ; ++i) self_2785017929.children.push(null); }
               else { self_2785017929.children.length = Temporary1; };
    }
    
    if (!((self_2785017929.children[chckIndx(index_2785017930, 0, (self_2785017929.children).length - 1)] == null))) {
    self_2785017929.children[chckIndx(index_2785017930, 0, (self_2785017929.children).length - 1)].parent = null;
    }
    
    if (!((child_2785017931 == null))) {
    child_2785017931.parent = self_2785017929;
    }
    
    self_2785017929.children[chckIndx(index_2785017930, 0, (self_2785017929.children).length - 1)] = child_2785017931;

  
}

function high_2785018043(self_2785018044) {
  var result_2785018045 = 0;

    result_2785018045 = (self_2785018044.children).length - 1;

  return result_2785018045;

}

function getCurrentYOffset_3472883827(self_3472883828) {
    var Temporary1;

  var result_3472883829 = 0.0;

  BeforeRet: {
    if (contains_1191183809(HEX2EHEX2E_805306418(1, high_2785018043(self_3472883828.parentWidget)), self_3472883828.currentLine)) {
    Temporary1 = HEX5BHEX5D_2785018033(self_3472883828.parentWidget, subInt(self_3472883828.currentLine, 1)).bottom;
    }
    else {
    Temporary1 = 0.0;
    }
    
    result_3472883829 = Temporary1;
    break BeforeRet;
  };

  return result_3472883829;

}

function indent_3472883908(self_3472883909) {
  BeforeRet: {
    if (((self_3472883909.currentIndent == 0) || (0 < self_3472883909.indexInLine))) {
    break BeforeRet;
    }
    
    self_3472883909.hasIndent = true;
    updateCurrentIndent_3472883886(self_3472883909);
  };

  
}

function newLine_3472883919(self_3472883920) {
    if (!((self_3472883920.lineWidget == null))) {
    truncate_2785018100(self_3472883920.lineWidget, self_3472883920.indexInLine);
    HEX5BHEX5DHEX3D_2785017928(self_3472883920.parentWidget, self_3472883920.currentLine, self_3472883920.lineWidget);
    self_3472883920.parentWidget.right = max_33555646(self_3472883920.parentWidget.right, self_3472883920.lineWidget.right);
    self_3472883920.parentWidget.bottom = max_33555646(self_3472883920.parentWidget.bottom, self_3472883920.lineWidget.bottom);
    self_3472883920.currentLine = addInt(self_3472883920.currentLine, 1);
    }
    
    self_3472883920.lineWidget = getOrCreate_3472883781(self_3472883920.parentWidget, self_3472883920.currentLine);
    self_3472883920.indexInLine = 0;
    self_3472883920.currentLineEmpty = true;
    self_3472883920.lineWidget.left = 0.0;
    self_3472883920.lineWidget.right = 0.0;
    self_3472883920.lineWidget.top = getCurrentYOffset_3472883827(self_3472883920);
    self_3472883920.lineWidget.bottom = self_3472883920.lineWidget.top;
    self_3472883920.hasIndent = false;
    indent_3472883908(self_3472883920);

  
}

function getReusableWidget_3472883883(self_3472883884) {
  var result_3472883885 = null;

  BeforeRet: {
    if ((self_3472883884.indexInLine < len_2785018037(self_3472883884.lineWidget))) {
    result_3472883885 = HEX5BHEX5D_2785018033(self_3472883884.lineWidget, self_3472883884.indexInLine);
    break BeforeRet;
    }
    else {
      result_3472883885 = null;
      break BeforeRet;
    }
    
  };

  return result_3472883885;

}

function addSpace_3472883910(self_3472883911) {
  BeforeRet: {
    if (self_3472883911.currentLineEmpty) {
    break BeforeRet;
    }
    
    var size_3472883912 = self_3472883911.layoutOptions.getTextBounds([32], 0.0);
    HEX2BHEX3D_855640304(self_3472883911.lineWidget, "right", size_3472883912.x);
  };

  
}

function addWidget_3472883934(self_3472883935, widget_3472883936, spaceLeft_3472883937) {
    var width_3472883938 = widget_3472883936.right;
    var height_3472883939 = widget_3472883936.bottom;
    HEX5BHEX5DHEX3D_2785017928(self_3472883935.lineWidget, self_3472883935.indexInLine, null);
    if (spaceLeft_3472883937) {
    addSpace_3472883910(self_3472883935);
    }
    
    widget_3472883936.left = self_3472883935.lineWidget.right;
    widget_3472883936.right = (widget_3472883936.left + width_3472883938);
    widget_3472883936.top = 0.0;
    widget_3472883936.bottom = height_3472883939;
    self_3472883935.lineWidget.right = widget_3472883936.right;
    self_3472883935.lineWidget.bottom = max_33555646(self_3472883935.lineWidget.bottom, (self_3472883935.lineWidget.top + height_3472883939));
    HEX5BHEX5DHEX3D_2785017928(self_3472883935.lineWidget, self_3472883935.indexInLine, widget_3472883936);
    self_3472883935.indexInLine = addInt(self_3472883935.indexInLine, 1);
    self_3472883935.currentLineEmpty = false;

  
}

function finish_3472883945(self_3472883946) {
  var result_3472883947 = null;

  BeforeRet: {
    if ((0 < len_2785018037(self_3472883946.lineWidget))) {
    HEX5BHEX5DHEX3D_2785017928(self_3472883946.parentWidget, self_3472883946.currentLine, self_3472883946.lineWidget);
    self_3472883946.parentWidget.right = max_33555646(self_3472883946.parentWidget.right, self_3472883946.lineWidget.right);
    self_3472883946.parentWidget.bottom = max_33555646(self_3472883946.parentWidget.bottom, self_3472883946.lineWidget.bottom);
    self_3472883946.currentLine = addInt(self_3472883946.currentLine, 1);
    }
    
    truncate_2785018100(self_3472883946.parentWidget, self_3472883946.currentLine);
    result_3472883947 = self_3472883946.parentWidget;
    break BeforeRet;
  };

  return result_3472883947;

}

function updateCellWidget_3472885690(cell_3472885691, app_3472885692, widget_3472885693, frameIndex_3472885694, ctx_3472885695, updateContext_3472885696) {
    var Temporary1;

  var result_3472885697 = null;

  BeforeRet: {
    if ((!((cell_3472885691.isVisible == null)) && !(cell_3472885691.isVisible(cell_3472885691.node)))) {
    result_3472885697 = null;
    break BeforeRet;
    }
    
    if (((ctx_3472885695 == null) || cell_3472885691.inline)) {
    Temporary1 = newCellLayoutContext_3472883758(widget_3472885693);
    }
    else {
    Temporary1 = ctx_3472885695;
    }
    
    var myCtx_3472885704 = Temporary1;
    HEX5BHEX5DHEX3D_3472884334(updateContext_3472885696.cellToWidget, cell_3472885691.id, myCtx_3472885704.parentWidget);
    myCtx_3472885704.layoutOptions = nimCopy(myCtx_3472885704.layoutOptions, app_3472885692.platform.layoutOptions, NTI2785017867);
    fill_3338666848(cell_3472885691);
    var vertical_3472885755 = (cell_3472885691.layout.kind == 2);
    if ((!((cell_3472885691.style == null)) && cell_3472885691.style.indentChildren)) {
    increaseIndent_3472883894(myCtx_3472885704);
    }
    
    try {
    Label3: {
      var i_3472885767 = 0;
      var c_3472885768 = null;
      var i_536872887 = 0;
      var L_536872888 = (cell_3472885691.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872887 < L_536872888)) break Label5;
            i_3472885767 = i_536872887;
            c_3472885768 = cell_3472885691.children[chckIndx(i_536872887, 0, (cell_3472885691.children).length - 1)];
            if (c_3472885768.increaseIndentBefore) {
            increaseIndent_3472883894(myCtx_3472885704);
            }
            
            if (c_3472885768.decreaseIndentBefore) {
            decreaseIndent_3472883901(myCtx_3472885704);
            }
            
            if ((vertical_3472885755 && ((0 < i_3472885767) || !(isCurrentLineEmpty_3472883824(myCtx_3472885704))))) {
            newLine_3472883919(myCtx_3472885704);
            }
            
            var spaceLeft_3472885769 = !(myCtx_3472885704.prevNoSpaceRight);
            if (!((c_3472885768.style == null))) {
            if ((c_3472885768.style.onNewLine && !(isCurrentLineEmpty_3472883824(myCtx_3472885704)))) {
            newLine_3472883919(myCtx_3472885704);
            }
            
            if (c_3472885768.style.noSpaceLeft) {
            spaceLeft_3472885769 = false;
            }
            
            }
            
            var oldWidget_3472885773 = getReusableWidget_3472883883(myCtx_3472885704);
            var newWidget_3472885774 = updateCellWidget_3472884271(c_3472885768, app_3472885692, oldWidget_3472885773, frameIndex_3472885694, myCtx_3472885704, updateContext_3472885696);
            if (!((newWidget_3472885774 == null))) {
            addWidget_3472883934(myCtx_3472885704, newWidget_3472885774, spaceLeft_3472885769);
            }
            
            if (c_3472885768.increaseIndentAfter) {
            increaseIndent_3472883894(myCtx_3472885704);
            }
            
            if (c_3472885768.decreaseIndentAfter) {
            decreaseIndent_3472883901(myCtx_3472885704);
            }
            
            myCtx_3472885704.prevNoSpaceRight = false;
            if (!((c_3472885768.style == null))) {
            if (c_3472885768.style.addNewlineAfter) {
            newLine_3472883919(myCtx_3472885704);
            }
            
            myCtx_3472885704.prevNoSpaceRight = c_3472885768.style.noSpaceRight;
            }
            
            i_536872887 = addInt(i_536872887, 1);
            if (!(((cell_3472885691.children).length == L_536872888))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((myCtx_3472885704 == ctx_3472885695))) {
    result_3472885697 = finish_3472883945(myCtx_3472885704);
    break BeforeRet;
    }
    else {
      result_3472885697 = null;
      break BeforeRet;
    }
    
    } finally {
    if ((!((cell_3472885691.style == null)) && cell_3472885691.style.indentChildren)) {
    decreaseIndent_3472883901(myCtx_3472885704);
    }
    
    }
  };

  return result_3472885697;

}

function updateCellWidget_3472885616(cell_3472885617, app_3472885618, widget_3472885619, frameIndex_3472885620, ctx_3472885621, updateContext_3472885622) {
    var Temporary1;

  var result_3472885623 = null;

  BeforeRet: {
    if ((!((cell_3472885617.isVisible == null)) && !(cell_3472885617.isVisible(cell_3472885617.node)))) {
    result_3472885623 = null;
    break BeforeRet;
    }
    
    if ((!((widget_3472885619 == null)) && isObj(widget_3472885619.m_type, NTI2785017879))) {
    Temporary1 = widget_3472885619;
    }
    else {
    Temporary1 = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    }
    
    var widget_3472885636 = Temporary1;
    result_3472885623 = widget_3472885636;
    HEX5BHEX5DHEX3D_3472884334(updateContext_3472885622.cellToWidget, cell_3472885617.id, widget_3472885636);
    var colontmp__536872894 = getTextAndColor_3472883953(app_3472885618, cell_3472885617, []);
    var text_3472885683 = nimCopy(null, colontmp__536872894["Field0"], NTI33554449);
    var color_3472885684 = nimCopy(null, colontmp__536872894["Field1"], NTI2550136835);
    widget_3472885636.text = nimCopy(null, text_3472885683, NTI33554449);
    widget_3472885636.foregroundColor = nimCopy(widget_3472885636.foregroundColor, color_3472885684, NTI2550136835);
    widget_3472885636.fontSizeIncreasePercent = cell_3472885617.fontSizeIncreasePercent;
    var size_3472885685 = app_3472885618.platform.layoutOptions.getTextBounds(widget_3472885636.text, widget_3472885636.fontSizeIncreasePercent);
    widget_3472885636.left = 0.0;
    widget_3472885636.right = size_3472885685.x;
    widget_3472885636.top = 0.0;
    widget_3472885636.bottom = size_3472885685.y;
    setBackgroundColor_3472884249(app_3472885618, cell_3472885617, widget_3472885636);
  };

  return result_3472885623;

}

function updateCellWidget_3472885518(cell_3472885519, app_3472885520, widget_3472885521, frameIndex_3472885522, ctx_3472885523, updateContext_3472885524) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
      var Temporary5;

  var result_3472885525 = null;

  BeforeRet: {
    if ((!((cell_3472885519.isVisible == null)) && !(cell_3472885519.isVisible(cell_3472885519.node)))) {
    result_3472885525 = null;
    break BeforeRet;
    }
    
    if ((!((widget_3472885521 == null)) && isObj(widget_3472885521.m_type, NTI2785017871))) {
    Temporary1 = widget_3472885521;
    }
    else {
    Temporary1 = {layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    }
    
    var widget_3472885538 = Temporary1;
    result_3472885525 = widget_3472885538;
    HEX5BHEX5DHEX3D_3472884334(updateContext_3472885524.cellToWidget, cell_3472885519.id, widget_3472885538);
    if ((cell_3472885519.child == null)) {
    if (((0 < len_2785018037(widget_3472885538)) && isObj(HEX5BHEX5D_2785018033(widget_3472885538, 0).m_type, NTI2785017879))) {
    Temporary2 = HEX5BHEX5D_2785018033(widget_3472885538, 0);
    }
    else {
    Temporary2 = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    }
    
    var text_3472885594 = Temporary2;
    var reference_3472885595 = reference_3271566692(cell_3472885519.node, cell_3472885519.reference);
    text_3472885594.text = nimCopy(null, HEX24_2046820617(reference_3472885595), NTI33554449);
    widget_3472885538.fontSizeIncreasePercent = cell_3472885519.fontSizeIncreasePercent;
    var size_3472885596 = app_3472885520.platform.layoutOptions.getTextBounds(text_3472885594.text, widget_3472885538.fontSizeIncreasePercent);
    text_3472885594.left = 0.0;
    text_3472885594.right = size_3472885596.x;
    text_3472885594.top = 0.0;
    text_3472885594.bottom = size_3472885596.y;
    if (!((cell_3472885519.foregroundColor.a == 0.0))) {
    Temporary3 = cell_3472885519.foregroundColor;
    }
    else {
    Temporary3 = color_2550136904(1.0, 1.0, 1.0, 1.0);
    }
    
    var defaultColor_3472885597 = nimCopy(null, Temporary3, NTI2550136835);
    if (((cell_3472885519.themeForegroundColors).length == 0)) {
    Temporary4 = defaultColor_3472885597;
    }
    else {
    Temporary4 = anyColor_3472883969(app_3472885520.theme, cell_3472885519.themeForegroundColors, defaultColor_3472885597);
    }
    
    var textColor_3472885606 = nimCopy(null, Temporary4, NTI2550136835);
    text_3472885594.foregroundColor = nimCopy(text_3472885594.foregroundColor, textColor_3472885606, NTI2550136835);
    if ((0 < len_2785018037(widget_3472885538))) {
    HEX5BHEX5DHEX3D_2785017928(widget_3472885538, 0, text_3472885594);
    }
    else {
    add_2785018080(widget_3472885538, text_3472885594);
    }
    
    widget_3472885538.left = 0.0;
    widget_3472885538.right = text_3472885594.right;
    widget_3472885538.top = 0.0;
    widget_3472885538.bottom = text_3472885594.bottom;
    }
    else {
      if ((0 < len_2785018037(widget_3472885538))) {
      Temporary5 = HEX5BHEX5D_2785018033(widget_3472885538, 0);
      }
      else {
      Temporary5 = null;
      }
      
      var oldWidget_3472885607 = Temporary5;
      var newWidget_3472885608 = updateCellWidget_3472884271(cell_3472885519.child, app_3472885520, oldWidget_3472885607, frameIndex_3472885522, ctx_3472885523, updateContext_3472885524);
      if ((newWidget_3472885608 == null)) {
      setLen_2785018073(widget_3472885538, 0);
      break BeforeRet;
      }
      
      if ((0 < len_2785018037(widget_3472885538))) {
      HEX5BHEX5DHEX3D_2785017928(widget_3472885538, 0, newWidget_3472885608);
      }
      else {
      add_2785018080(widget_3472885538, newWidget_3472885608);
      }
      
      widget_3472885538.left = 0.0;
      widget_3472885538.right = newWidget_3472885608.right;
      widget_3472885538.top = 0.0;
      widget_3472885538.bottom = newWidget_3472885608.bottom;
    }
    
    setBackgroundColor_3472884249(app_3472885520, cell_3472885519, widget_3472885538);
  };

  return result_3472885525;

}

function updateCellWidget_3472884263(cell_3472884264, app_3472884265, widget_3472884266, frameIndex_3472884267, ctx_3472884268, updateContext_3472884269) {
  var result_3472884270 = null;

    result_3472884270 = widget_3472884266;

  return result_3472884270;

}

function updateCellWidget_3472884271(cell_3472884264, app_3472884265, widget_3472884266, frameIndex_3472884267, ctx_3472884268, updateContext_3472884269) {
  var result_3472884272 = null;

  BeforeRet: {
    chckNilDisp(cell_3472884264);
    if (isObj(cell_3472884264.m_type, NTI3338665995)) {
    result_3472884272 = updateCellWidget_3472885370(cell_3472884264, app_3472884265, widget_3472884266, frameIndex_3472884267, ctx_3472884268, updateContext_3472884269);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884264.m_type, NTI3338665999)) {
    result_3472884272 = updateCellWidget_3472884273(cell_3472884264, app_3472884265, widget_3472884266, frameIndex_3472884267, ctx_3472884268, updateContext_3472884269);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884264.m_type, NTI3338665998)) {
    result_3472884272 = updateCellWidget_3472885444(cell_3472884264, app_3472884265, widget_3472884266, frameIndex_3472884267, ctx_3472884268, updateContext_3472884269);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884264.m_type, NTI3338665993)) {
    result_3472884272 = updateCellWidget_3472885690(cell_3472884264, app_3472884265, widget_3472884266, frameIndex_3472884267, ctx_3472884268, updateContext_3472884269);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884264.m_type, NTI3338665996)) {
    result_3472884272 = updateCellWidget_3472885616(cell_3472884264, app_3472884265, widget_3472884266, frameIndex_3472884267, ctx_3472884268, updateContext_3472884269);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884264.m_type, NTI3338665997)) {
    result_3472884272 = updateCellWidget_3472885518(cell_3472884264, app_3472884265, widget_3472884266, frameIndex_3472884267, ctx_3472884268, updateContext_3472884269);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884264.m_type, NTI3271557157)) {
    result_3472884272 = updateCellWidget_3472884263(cell_3472884264, app_3472884265, widget_3472884266, frameIndex_3472884267, ctx_3472884268, updateContext_3472884269);
    break BeforeRet;
    }
    }}}}}}
  };

  return result_3472884272;

}

function delete_2785017996(x_2785017998, x_2785017998_Idx, i_2785017999) {
    x_2785017998[x_2785017998_Idx].splice(i_2785017999, 1);

  
}

function delete_2785017993(self_2785017994, index_2785017995) {
    self_2785017994.children[chckIndx(index_2785017995, 0, (self_2785017994.children).length - 1)].parent = null;
    delete_2785017996(self_2785017994, "children", chckRange(index_2785017995, 0, 2147483647));

  
}

function color_3422552923(theme_3422552925, name_3422552926, default_3422552927) {
  var result_3422552928 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3422552928 = nimCopy(result_3422552928, getCascading_3439329461(theme_3422552925.colors, name_3422552926, color_2634023294(default_3422552927)), NTI2550136835);
    break BeforeRet;
  };

  return result_3422552928;

}

function getOrDefault_3472885979(t_3472885982, key_3472885983) {
  var result_3472885984 = null;

    var hcHEX60gensym48_3472885987 = [0];
    var indexHEX60gensym48_3472885994 = rawGet_3254793173(t_3472885982, key_3472885983, hcHEX60gensym48_3472885987, 0);
    if ((0 <= indexHEX60gensym48_3472885994)) {
    result_3472885984 = t_3472885982.data[chckIndx(indexHEX60gensym48_3472885994, 0, (t_3472885982.data).length - 1)].Field2;
    }
    

  return result_3472885984;

}

function min_33555613(x_33555614, y_33555615) {
    var Temporary1;

  var result_33555616 = 0.0;

    if (((x_33555614 <= y_33555615) || !((y_33555615 == y_33555615)))) {
    Temporary1 = x_33555614;
    }
    else {
    Temporary1 = y_33555615;
    }
    
    result_33555616 = Temporary1;

  return result_33555616;

}

function updateSelections_3472885796(self_3472885797, app_3472885798, cell_3472885799, cursor_3472885801, primary_3472885802, reverse_3472885803) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary8;
      var Temporary9;

    var charWidth_3472885804 = charWidth_2768240799(app_3472885798.platform);
    var secondaryColor_3472885810 = withAlpha_3472883737(color_3422552923(app_3472885798.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], color_2550136904(1.0, 1.0, 1.0, 1.0)), 0.25);
    var primaryColor_3472885816 = withAlpha_3472883737(color_3422552923(app_3472885798.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], color_2550136904(1.0, 1.0, 1.0, 1.0)), 0.25);
    if (isObj(cell_3472885799.m_type, NTI3338665993)) {
    var coll_3472885823 = cell_3472885799;
    if (reverse_3472885803) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var startIndex_3472885824 = Temporary1;
    if (reverse_3472885803) {
    Temporary2 = (coll_3472885823.children).length - 1;
    }
    else {
    Temporary2 = subInt((coll_3472885823.children).length - 1, 1);
    }
    
    var endIndex_3472885831 = Temporary2;
    if (reverse_3472885803) {
    Temporary3 = 0;
    }
    else {
    Temporary3 = (coll_3472885823.children).length - 1;
    }
    
    var primaryIndex_3472885835 = Temporary3;
      var oHEX60gensym45_3472885838 = nimCopy(null, cursor_3472885801, NTI3254780132);
      if (!isSome_3254793888(oHEX60gensym45_3472885838)) Temporary4 = false; else {        var cursor_3472885861 = nimCopy(null, get_3254786205(oHEX60gensym45_3472885838), NTI3254779907);
        Temporary4 = true;      }    if (Temporary4) {
    primaryIndex_3472885835 = cursor_3472885861.lastIndex;
    if ((cursor_3472885861.firstIndex < cursor_3472885861.lastIndex)) {
    startIndex_3472885824 = cursor_3472885861.firstIndex;
    endIndex_3472885831 = subInt(cursor_3472885861.lastIndex, 1);
    }
    else {
      startIndex_3472885824 = addInt(cursor_3472885861.lastIndex, 1);
      endIndex_3472885831 = cursor_3472885861.firstIndex;
    }
    
    }
    
    Label5: {
      var i_3472885866 = 0;
      var res_536872901 = startIndex_3472885824;
      Label6: {
          Label7: while (true) {
          if (!(res_536872901 <= endIndex_3472885831)) break Label7;
            i_3472885866 = res_536872901;
            updateSelections_3472885796(self_3472885797, app_3472885798, coll_3472885823.children[chckIndx(i_3472885866, 0, (coll_3472885823.children).length - 1)], none_3254794843(), false, reverse_3472885803);
            res_536872901 = addInt(res_536872901, 1);
          }
      };
    };
    if ((0 < (coll_3472885823.children).length)) {
    updateSelections_3472885796(self_3472885797, app_3472885798, coll_3472885823.children[chckIndx(primaryIndex_3472885835, 0, (coll_3472885823.children).length - 1)], none_3254794843(), primary_3472885802, reverse_3472885803);
    }
    
    }
    else {
      var oHEX60gensym47_3472885889 = nimCopy(null, cursor_3472885801, NTI3254780132);
      if (!isSome_3254793888(oHEX60gensym47_3472885889)) Temporary8 = false; else {        var cursor_3472885912 = nimCopy(null, get_3254786205(oHEX60gensym47_3472885889), NTI3254779907);
        Temporary8 = true;      }    if (Temporary8) {
    var widget_3472886048 = getOrDefault_3472885979(self_3472885797.cellWidgetContext.cellToWidget, cell_3472885799.id);
    if (!((widget_3472886048 == null))) {
    widget_3472886048.fillBackground = true;
    widget_3472886048.allowAlpha = true;
    widget_3472886048.backgroundColor = nimCopy(widget_3472886048.backgroundColor, secondaryColor_3472885810, NTI2550136835);
    var parent_3472886052 = widget_3472886048.parent;
    if (!((parent_3472886052 == null))) {
    var cursorWidget_3472886056 = {top: widget_3472886048.top, bottom: widget_3472886048.bottom, fillBackground: true, allowAlpha: true, backgroundColor: withAlpha_3472883737(primaryColor_3472885816, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, fontSizeIncreasePercent: 0.0};
    var text_3472886057 = currentText_3338666034(cell_3472885799);
    if (((text_3472886057).length == 0)) {
    cursorWidget_3472886056.left = widget_3472886048.left;
    cursorWidget_3472886056.right = (cursorWidget_3472886056.left + (0.2 * charWidth_3472885804));
    }
    else {
      var alpha1_3472886058 = (cursor_3472885912.firstIndex / (text_3472886057).length);
      var alpha2_3472886059 = (cursor_3472885912.lastIndex / (text_3472886057).length);
      if (!((cursor_3472885912.firstIndex == cursor_3472885912.lastIndex))) {
      var selectionWidget_3472886060 = {top: widget_3472886048.top, bottom: widget_3472886048.bottom, fillBackground: true, allowAlpha: true, backgroundColor: nimCopy(null, primaryColor_3472885816, NTI2550136835), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, fontSizeIncreasePercent: 0.0};
      selectionWidget_3472886060.left = ((widget_3472886048.left * (1.0 - min_33555613(alpha1_3472886058, alpha2_3472886059))) + (widget_3472886048.right * min_33555613(alpha1_3472886058, alpha2_3472886059)));
      selectionWidget_3472886060.right = ((widget_3472886048.left * (1.0 - max_33555646(alpha1_3472886058, alpha2_3472886059))) + (widget_3472886048.right * max_33555646(alpha1_3472886058, alpha2_3472886059)));
      add_2785018080(parent_3472886052, selectionWidget_3472886060);
      }
      
      cursorWidget_3472886056.left = ((widget_3472886048.left * (1.0 - alpha2_3472886059)) + (widget_3472886048.right * alpha2_3472886059));
      cursorWidget_3472886056.right = (cursorWidget_3472886056.left + (0.2 * charWidth_3472885804));
    }
    
    add_2785018080(parent_3472886052, cursorWidget_3472886056);
    }
    
    }
    
    }
    else {
      var widget_3472886132 = getOrDefault_3472885979(self_3472885797.cellWidgetContext.cellToWidget, cell_3472885799.id);
      if (!((widget_3472886132 == null))) {
      widget_3472886132.fillBackground = true;
      widget_3472886132.allowAlpha = true;
      if (primary_3472885802) {
      Temporary9 = primaryColor_3472885816;
      }
      else {
      Temporary9 = secondaryColor_3472885810;
      }
      
      widget_3472886132.backgroundColor = nimCopy(widget_3472886132.backgroundColor, Temporary9, NTI2550136835);
      }
      
    }
    }

  
}

function tokenColor_3439329618(theme_3439329620, names_3439329621, default_3439329622) {
  var result_3439329623 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3439329627 = [];
      var i_536872904 = 0;
      var L_536872905 = (names_3439329621).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872904 < L_536872905)) break Label3;
            name_3439329627 = names_3439329621[chckIndx(i_536872904, 0, (names_3439329621).length - 1)];
            if (contains_2516582652(theme_3439329620.tokenColors, name_3439329627)) {
            var style_3439329733 = nimCopy(null, HEX5BHEX5D_2516582957(theme_3439329620.tokenColors, name_3439329627), NTI2516582404);
            if (isSome_3221226333(style_3439329733.foreground)) {
            result_3439329623 = nimCopy(result_3439329623, get_3221226350(style_3439329733.foreground), NTI2550136835);
            break BeforeRet;
            }
            
            }
            
            i_536872904 = addInt(i_536872904, 1);
            if (!(((names_3439329621).length == L_536872905))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3439329623 = nimCopy(result_3439329623, color_2634022945(default_3439329622), NTI2550136835);
    break BeforeRet;
  };

  return result_3439329623;

}

function updateBaseIndexAndScrollOffset_3439329351(contentPanel_3439329352, previousBaseIndex_3439329353, previousBaseIndex_3439329353_Idx, scrollOffset_3439329354, scrollOffset_3439329354_Idx, lines_3439329355, totalLineHeight_3439329356, targetLine_3439329358) {
      var Temporary1;

      var oHEX60gensym2_3439329361 = nimCopy(null, targetLine_3439329358, NTI1191183280);
      if (!isSome_1191185117(oHEX60gensym2_3439329361)) Temporary1 = false; else {        var targetLine_3439329384 = get_1191185211(oHEX60gensym2_3439329361);
        Temporary1 = true;      }    if (Temporary1) {
    var targetLineY_3439329385 = ((subInt(targetLine_3439329384, previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx]) * totalLineHeight_3439329356) + scrollOffset_3439329354[scrollOffset_3439329354_Idx]);
    var margin_3439329386 = 0.0;
    if ((targetLineY_3439329385 < margin_3439329386)) {
    scrollOffset_3439329354[scrollOffset_3439329354_Idx] = margin_3439329386;
    previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx] = targetLine_3439329384;
    }
    else {
    if (((contentPanel_3439329352.lastBounds.h - margin_3439329386) < (targetLineY_3439329385 + totalLineHeight_3439329356))) {
    scrollOffset_3439329354[scrollOffset_3439329354_Idx] = ((contentPanel_3439329352.lastBounds.h - margin_3439329386) - totalLineHeight_3439329356);
    previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx] = targetLine_3439329384;
    }
    }
    }
    
    previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx] = clamp_3338666339(previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx], HEX2EHEX2E_805306418(0, lines_3439329355));
    Label2: {
        Label3: while (true) {
        if (!((scrollOffset_3439329354[scrollOffset_3439329354_Idx] < 0.0) && (addInt(previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx], 1) < lines_3439329355))) break Label3;
          if ((contentPanel_3439329352.lastBounds.h <= (scrollOffset_3439329354[scrollOffset_3439329354_Idx] + totalLineHeight_3439329356))) {
          break Label2;
          }
          
          previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx] = addInt(previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx], 1);
          HEX2BHEX3D_855640304(scrollOffset_3439329354, scrollOffset_3439329354_Idx, totalLineHeight_3439329356);
        }
    };
    Label4: {
        Label5: while (true) {
        if (!((contentPanel_3439329352.lastBounds.h < scrollOffset_3439329354[scrollOffset_3439329354_Idx]) && (0 < previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx]))) break Label5;
          if (((scrollOffset_3439329354[scrollOffset_3439329354_Idx] - totalLineHeight_3439329356) <= 0.0)) {
          break Label4;
          }
          
          previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx] = subInt(previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx], 1);
          HEX2DHEX3D_2818593770(scrollOffset_3439329354, scrollOffset_3439329354_Idx, totalLineHeight_3439329356);
        }
    };

  
}

function completions_3254785524(self_3254785525) {
  var result_3254785526 = [];

  BeforeRet: {
    if (!(self_3254785525.hasCompletions)) {
    updateCompletions_3254780255(self_3254785525);
    }
    
    result_3254785526 = nimCopy(null, self_3254785525.filteredCompletions, NTI3254780048);
    break BeforeRet;
  };

  return result_3254785526;

}

function createLinesInPanel_3439329412(app_3439329413, contentPanel_3439329414, previousBaseIndex_3439329415, scrollOffset_3439329416, lines_3439329417, frameIndex_3439329418, onlyRenderInBounds_3439329419, renderLine_3439329425) {
    var totalLineHeight_3439329426 = totalLineHeight_2768240810(app_3439329413.platform);
    Label1: {
      var i_3439329431 = 0;
      var i_536872911 = previousBaseIndex_3439329415;
      Label2: {
          Label3: while (true) {
          if (!(i_536872911 < lines_3439329417)) break Label3;
            i_3439329431 = i_536872911;
            Label4: {
              var top_3439329432 = ((subInt(i_3439329431, previousBaseIndex_3439329415) * totalLineHeight_3439329426) + scrollOffset_3439329416);
              if ((onlyRenderInBounds_3439329419 && (contentPanel_3439329414.lastBounds.h <= top_3439329432))) {
              break Label1;
              }
              
              if ((onlyRenderInBounds_3439329419 && ((top_3439329432 + totalLineHeight_3439329426) <= 0.0))) {
              break Label4;
              }
              
              var lineWidget_3439329433 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), left: 0.0, right: 0.0, top: top_3439329432, bottom: (top_3439329432 + totalLineHeight_3439329426), lastHierarchyChange: frameIndex_3439329418, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
              if (!(renderLine_3439329425(lineWidget_3439329433, i_3439329431, true, frameIndex_3439329418))) {
              break Label1;
              }
              
              add_2785018080(contentPanel_3439329414, lineWidget_3439329433);
            };
            i_536872911 = addInt(i_536872911, 1);
          }
      };
    };
    Label5: {
      var k_3439329438 = 0;
      var res_536872915 = 1;
      Label6: {
          Label7: while (true) {
          if (!(res_536872915 <= previousBaseIndex_3439329415)) break Label7;
            k_3439329438 = res_536872915;
            Label8: {
              var i_3439329439 = subInt(previousBaseIndex_3439329415, k_3439329438);
              var top_3439329440 = ((subInt(i_3439329439, previousBaseIndex_3439329415) * totalLineHeight_3439329426) + scrollOffset_3439329416);
              if ((onlyRenderInBounds_3439329419 && (contentPanel_3439329414.lastBounds.h <= top_3439329440))) {
              break Label8;
              }
              
              if ((onlyRenderInBounds_3439329419 && ((top_3439329440 + totalLineHeight_3439329426) <= 0.0))) {
              break Label5;
              }
              
              var lineWidget_3439329441 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), left: 0.0, right: 0.0, top: top_3439329440, bottom: (top_3439329440 + totalLineHeight_3439329426), lastHierarchyChange: frameIndex_3439329418, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
              if (!(renderLine_3439329425(lineWidget_3439329441, i_3439329439, false, frameIndex_3439329418))) {
              break Label5;
              }
              
              add_2785018080(contentPanel_3439329414, lineWidget_3439329441);
            };
            res_536872915 = addInt(res_536872915, 1);
          }
      };
    };

  
}

function createPartWidget_3439329344(text_3439329345, startOffset_3439329346, width_3439329347, height_3439329348, color_3439329349, frameIndex_3439329350) {
  var result_3439331037 = null;

    result_3439331037 = ({m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0});
    result_3439331037.text = text_3439329345.slice(0);
    result_3439331037.anchor = {Field0: {x: 0, y: 0}, Field1: {x: 0, y: 0}};
    result_3439331037.left = startOffset_3439329346;
    result_3439331037.right = startOffset_3439329346 + width_3439329347;
    result_3439331037.bottom = height_3439329348;
    result_3439331037.frameIndex = frameIndex_3439329350;
    result_3439331037.foregroundColor = color_3439329349;

  return result_3439331037;

}

function renderCompletions_3472886136(self_3472886137, app_3472886138, contentPanel_3472886139, cursorBounds_3472886140, frameIndex_3472886141) {
    
function renderLine_3472886193(lineWidget_3472886194, i_3472886195, down_3472886196, frameIndex_3472886197) {
        var Temporary1;
          var Temporary2;

      var result_3472886198 = false;

      BeforeRet: {
        var top_3472886199 = ((subInt(i_3472886195, self_3472886137.completionsBaseIndex) * totalLineHeight_3472886142) + self_3472886137.scrollOffset);
        if ((i_3472886195 == self_3472886137.selectedCompletion)) {
        lineWidget_3472886194.fillBackground = true;
        lineWidget_3472886194.backgroundColor = nimCopy(lineWidget_3472886194.backgroundColor, selectedBackgroundColor_3472886155, NTI2550136835);
        }
        
        var completion_3472886200 = nimCopy(null, (Temporary1 = completions_3254785524(self_3472886137), Temporary1)[chckIndx(i_3472886195, 0, (Temporary1).length - 1)], NTI3254779958);
        var name_3472886201 = nimCopy(null, completion_3472886200.name, NTI33554449);
        switch (completion_3472886200.kind) {
        case 0:
          var nameWidget_3472886202 = createPartWidget_3439329344(name_3472886201, 0.0, ((name_3472886201).length * charWidth_3472886143), totalLineHeight_3472886142, textColor_3472886171, frameIndex_3472886197);
          add_2785018080(lineWidget_3472886194, nameWidget_3472886202);
          break;
        case 1:
          var nameWidget_3472886203 = createPartWidget_3439329344(name_3472886201, 0.0, ((name_3472886201).length * charWidth_3472886143), totalLineHeight_3472886142, nameColor_3472886165, frameIndex_3472886197);
          add_2785018080(lineWidget_3472886194, nameWidget_3472886203);
          if ((0 < (alias_3271557413(completion_3472886200.class)).length)) {
          Temporary2 = alias_3271557413(completion_3472886200.class);
          }
          else {
          Temporary2 = name_3271557410(completion_3472886200.class);
          }
          
          var className_3472886204 = nimCopy(null, Temporary2, NTI33554449);
          var scopeWidget_3472886205 = createPartWidget_3439329344(className_3472886204, (-((className_3472886204).length) * charWidth_3472886143), totalLineHeight_3472886142, ((className_3472886204).length * charWidth_3472886143), scopeColor_3472886177, frameIndex_3472886197);
          scopeWidget_3472886205.anchor.Field0.x = 1.0;
          scopeWidget_3472886205.anchor.Field1.x = 1.0;
          add_2785018080(lineWidget_3472886194, scopeWidget_3472886205);
          break;
        }
        self_3472886137.lastItems.push({Field0: i_3472886195, Field1: lineWidget_3472886194});;
        result_3472886198 = true;
        break BeforeRet;
      };

      return result_3472886198;

    }

    var totalLineHeight_3472886142 = totalLineHeight_2768240810(app_3472886138.platform);
    var charWidth_3472886143 = charWidth_2768240799(app_3472886138.platform);
    var backgroundColor_3472886149 = color_3439329450(app_3472886138.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(30, 30, 30));
    var selectedBackgroundColor_3472886155 = color_3439329450(app_3472886138.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var nameColor_3472886165 = tokenColor_3439329618(app_3472886138.theme, [[101,110,116,105,116,121,46,110,97,109,101,46,108,97,98,101,108], [101,110,116,105,116,121,46,110,97,109,101]], rgb_2550136919(255, 255, 255));
    var textColor_3472886171 = color_3439329450(app_3472886138.theme, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 175));
    var scopeColor_3472886177 = color_3439329450(app_3472886138.theme, [115,116,114,105,110,103], rgb_2550136919(175, 255, 175));
    var panel_3472886178 = {left: cursorBounds_3472886140.x, top: (cursorBounds_3472886140.y + cursorBounds_3472886140.h), right: (cursorBounds_3472886140.x + (charWidth_3472886143 * 60.0)), bottom: ((cursorBounds_3472886140.y + cursorBounds_3472886140.h) + (totalLineHeight_3472886142 * 20.0)), fillBackground: true, backgroundColor: nimCopy(null, backgroundColor_3472886149, NTI2550136835), lastHierarchyChange: frameIndex_3472886141, maskContent: true, layout: {kind: 0}, m_type: NTI2785017871, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    layoutWidget_2785018531(panel_3472886178, contentPanel_3472886139.lastBounds, frameIndex_3472886141, app_3472886138.platform.layoutOptions);
    add_2785018080(contentPanel_3472886139, panel_3472886178);
    self_3472886137.lastCompletionsWidget = panel_3472886178;
    updateBaseIndexAndScrollOffset_3439329351(panel_3472886178, self_3472886137, "completionsBaseIndex", self_3472886137, "completionsScrollOffset", (completions_3254785524(self_3472886137)).length, totalLineHeight_3472886142, self_3472886137.scrollToCompletion);
    self_3472886137.scrollToCompletion = nimCopy(self_3472886137.scrollToCompletion, none_3003121842(), NTI1191183280);
    if (self_3472886137.lastItems.length < 0) { for (var i = self_3472886137.lastItems.length ; i < 0 ; ++i) self_3472886137.lastItems.push({Field0: 0, Field1: null}); }
               else { self_3472886137.lastItems.length = 0; };
    createLinesInPanel_3439329412(app_3472886138, panel_3472886178, self_3472886137.completionsBaseIndex, self_3472886137.completionsScrollOffset, (completions_3254785524(self_3472886137)).length, frameIndex_3472886141, true, renderLine_3472886193);

  
}

function updateWidget_3472886213(self_3472886214, app_3472886215, widget_3472886216, frameIndex_3472886217) {
    var Temporary1;
    
function HEX3Aanonymous_3472886247(wf_3472886258) {
      var result_3472886261 = [];

        result_3472886261 = nimCopy(null, ([32,45,32] || []).concat(wf_3472886258.name || []), NTI33554449);

      return result_3472886261;

    }
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
              var Temporary10;
              var Temporary11;
      var Temporary12;

  BeforeRet: {
    var lineHeight_3472886218 = lineHeight_2768240794(app_3472886215.platform);
    var totalLineHeight_3472886219 = totalLineHeight_2768240810(app_3472886215.platform);
    var lineDistance_3472886220 = lineDistance_2768240789(app_3472886215.platform);
    var charWidth_3472886221 = charWidth_2768240799(app_3472886215.platform);
    var textColor_3472886227 = color_3439329450(app_3472886215.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3472886228 = null;
    var headerPart1Text_3472886229 = null;
    var headerPart2Text_3472886230 = null;
    var contentPanel_3472886231 = null;
    if ((len_2785018037(widget_3472886216) == 0)) {
    headerPanel_3472886228 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), bottom: totalLineHeight_3472886219, lastHierarchyChange: frameIndex_3472886217, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(widget_3472886216, headerPanel_3472886228);
    headerPart1Text_3472886229 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3472886217, foregroundColor: nimCopy(null, textColor_3472886227, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(headerPanel_3472886228, headerPart1Text_3472886229);
    headerPart2Text_3472886230 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), pivot: vec2_2164261725(1.0, 0.0), lastHierarchyChange: frameIndex_3472886217, foregroundColor: nimCopy(null, textColor_3472886227, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(headerPanel_3472886228, headerPart2Text_3472886230);
    contentPanel_3472886231 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), top: totalLineHeight_3472886219, lastHierarchyChange: frameIndex_3472886217, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    contentPanel_3472886231.maskContent = true;
    add_2785018080(widget_3472886216, contentPanel_3472886231);
    layoutWidget_2785018531(headerPanel_3472886228, widget_3472886216.lastBounds, frameIndex_3472886217, app_3472886215.platform.layoutOptions);
    layoutWidget_2785018531(contentPanel_3472886231, widget_3472886216.lastBounds, frameIndex_3472886217, app_3472886215.platform.layoutOptions);
    }
    else {
      headerPanel_3472886228 = HEX5BHEX5D_2785018033(widget_3472886216, 0);
      headerPart1Text_3472886229 = HEX5BHEX5D_2785018033(headerPanel_3472886228, 0);
      headerPart2Text_3472886230 = HEX5BHEX5D_2785018033(headerPanel_3472886228, 1);
      contentPanel_3472886231 = HEX5BHEX5D_2785018033(widget_3472886216, 1);
    }
    
    if (self_3472886214.renderHeader) {
    headerPanel_3472886228.bottom = totalLineHeight_3472886219;
    contentPanel_3472886231.top = totalLineHeight_3472886219;
    if (active_2415919218(self_3472886214)) {
    Temporary1 = color_3439329450(app_3472886215.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3439329450(app_3472886215.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3472886242 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785018361(headerPanel_3472886228, color_3472886242, frameIndex_3472886217);
    var workspaceName_3472886285 = get_2348810295(map_1291854416(self_3472886214.document.workspace, HEX3Aanonymous_3472886247), []);
    if (((self_3472886214.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3472886214.currentMode;
    }
    
    var mode_3472886286 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3472886291 = [mnewString(0)];
    fmtRes_3472886291[0].push.apply(fmtRes_3472886291[0], [32]);;
    formatValue_721420459(fmtRes_3472886291, 0, mode_3472886286, []);
    fmtRes_3472886291[0].push.apply(fmtRes_3472886291[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3472886291, 0, self_3472886214.document.filename, []);
    fmtRes_3472886291[0].push.apply(fmtRes_3472886291[0], [32]);;
    formatValue_721420459(fmtRes_3472886291, 0, workspaceName_3472886285, []);
    fmtRes_3472886291[0].push.apply(fmtRes_3472886291[0], [32]);;
    headerPart1Text_3472886229.text = nimCopy(null, fmtRes_3472886291[0], NTI33554449);
    var fmtRes_3472886296 = [mnewString(0)];
    fmtRes_3472886296[0].push.apply(fmtRes_3472886296[0], [32]);;
    formatValue_2701131945(fmtRes_3472886296, 0, self_3472886214.id, []);
    fmtRes_3472886296[0].push.apply(fmtRes_3472886296[0], [32]);;
    headerPart2Text_3472886230.text = nimCopy(null, fmtRes_3472886296[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785018369(headerPanel_3472886228, frameIndex_3472886217);
    }
    else {
      headerPanel_3472886228.bottom = 0.0;
      contentPanel_3472886231.top = 0.0;
    }
    
    self_3472886214.lastBounds = nimCopy(self_3472886214.lastBounds, contentPanel_3472886231.lastBounds, NTI2147483653);
    self_3472886214.lastContentBounds = nimCopy(self_3472886214.lastContentBounds, widget_3472886216.lastBounds, NTI2147483653);
    widget_3472886216.lastHierarchyChange = nimMax(widget_3472886216.lastHierarchyChange, headerPanel_3472886228.lastHierarchyChange);
    if (active_2415919218(self_3472886214)) {
    Temporary3 = color_3439329450(app_3472886215.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3439329450(app_3472886215.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785018361(contentPanel_3472886231, Temporary3, frameIndex_3472886217);
      if (changed_2785018532(contentPanel_3472886231, frameIndex_3472886217)) Temporary5 = true; else {        Temporary5 = dirty_2415919140(self_3472886214);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3472886215.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2415919213(self_3472886214);
    var timer_3472886312 = startTimer_2080374869();
    setLen_2785018073(contentPanel_3472886231, 0);
    updateBaseIndexAndScrollOffset_3472883741(self_3472886214, app_3472886215, contentPanel_3472886231);
    var rendered_3472886313 = 0;
    var builder_3472886314 = self_3472886214.document.builder;
    var lastY_3472886315 = self_3472886214.scrollOffset;
    if ((self_3472886214.cellWidgetContext == null)) {
    self_3472886214.cellWidgetContext = {cellToWidget: ({data: [], counter: 0})};
    }
    
    self_3472886214.cellWidgetContext.cellToWidget = nimCopy(self_3472886214.cellWidgetContext.cellToWidget, initTable_3472886319(len_3472886374(self_3472886214.cellWidgetContext.cellToWidget)), NTI3254780063);
    var i_3472886379 = 0;
    Label6: {
      var node_3472886383 = null;
      var colontmp__536872865 = [];
      colontmp__536872865 = rootNodes_3271557492(self_3472886214.document.model);
      var i_536872866 = 0;
      var L_536872867 = (colontmp__536872865).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536872866 < L_536872867)) break Label8;
            node_3472886383 = colontmp__536872865[chckIndx(i_536872866, 0, (colontmp__536872865).length - 1)];
            Label9: {
              if (!(contains_3254790527(self_3472886214.nodeToCell, node_3472886383.id))) {
              rebuildCells_3254780235(self_3472886214);
              }
              
              if (!(contains_3254790527(self_3472886214.nodeToCell, node_3472886383.id))) {
              break Label9;
              }
              
              var cell_3472886601 = (Temporary10 = HEX5BHEX5D_3472886531(self_3472886214.nodeToCell, node_3472886383.id), Temporary10)[0][Temporary10[1]];
              if ((cell_3472886601 == null)) {
              break Label9;
              }
              
              if ((i_3472886379 < len_2785018037(contentPanel_3472886231))) {
              Temporary11 = HEX5BHEX5D_2785018033(contentPanel_3472886231, i_3472886379);
              }
              else {
              Temporary11 = null;
              }
              
              var oldWidget_3472886605 = Temporary11;
              var newWidget_3472886606 = updateCellWidget_3472884271(cell_3472886601, app_3472886215, oldWidget_3472886605, frameIndex_3472886217, null, self_3472886214.cellWidgetContext);
              if ((newWidget_3472886606 == null)) {
              if (!((oldWidget_3472886605 == null))) {
              delete_2785017993(widget_3472886216, i_3472886379);
              }
              
              break Label9;
              }
              
              newWidget_3472886606.sizeToContent = true;
              newWidget_3472886606.top = lastY_3472886315;
              if ((i_3472886379 < len_2785018037(contentPanel_3472886231))) {
              HEX5BHEX5DHEX3D_2785017928(contentPanel_3472886231, i_3472886379, newWidget_3472886606);
              }
              else {
              add_2785018080(contentPanel_3472886231, newWidget_3472886606);
              }
              
              layoutWidget_2785018531(newWidget_3472886606, contentPanel_3472886231.lastBounds, frameIndex_3472886217, app_3472886215.platform.layoutOptions);
              i_3472886379 = addInt(i_3472886379, 1);
            };
            i_536872866 = addInt(i_536872866, 1);
            if (!(((colontmp__536872865).length == L_536872867))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
      var oHEX60gensym62_3472886620 = getTargetCell_3254780237(cursor_3254784719(self_3472886214), false);
      if (!isSome_3338666868(oHEX60gensym62_3472886620)) Temporary12 = false; else {        var cell_3472886643 = get_3338666888(oHEX60gensym62_3472886620);
        Temporary12 = true;      }    if (Temporary12) {
    updateSelections_3472885796(self_3472886214, app_3472886215, cell_3472886643, some_3254794959(cursor_3254784719(self_3472886214)), true, (cursor_3254784719(self_3472886214).lastIndex < cursor_3254784719(self_3472886214).firstIndex));
    }
    
    if (self_3472886214.showCompletions) {
    var widget_3472886718 = getOrDefault_3472885979(self_3472886214.cellWidgetContext.cellToWidget, targetCell_3254780021(cursor_3254784719(self_3472886214)).id);
    renderCompletions_3472886136(self_3472886214, app_3472886215, contentPanel_3472886231, HEX2D_2130706591(widget_3472886718.lastBounds, xy_2147483680(contentPanel_3472886231.lastBounds)), frameIndex_3472886217);
    }
    
    var indent_3472886737 = getOption_2818583576(app_3472886215, [109,111,100,101,108,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_3472886747 = getOption_2818583615(app_3472886215, [109,111,100,101,108,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_3472886757 = getOption_2818583615(app_3472886215, [109,111,100,101,108,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    contentPanel_3472886231.lastHierarchyChange = frameIndex_3472886217;
    widget_3472886216.lastHierarchyChange = nimMax(widget_3472886216.lastHierarchyChange, contentPanel_3472886231.lastHierarchyChange);
    self_3472886214.lastContentBounds = nimCopy(self_3472886214.lastContentBounds, contentPanel_3472886231.lastBounds, NTI2147483653);
  };

  
}

function initTable_3422552168(initialSize_3422552171) {
  var result_3422552172 = ({data: [], counter: 0});

    var correctSizeHEX60gensym1_3422552174 = slotsNeeded_1308622891(chckRange(initialSize_3422552171, 0, 2147483647));
    result_3422552172.counter = 0;
    result_3422552172.data = new Array(chckRange(correctSizeHEX60gensym1_3422552174, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_3422552174, 0, 2147483647) ; ++i) { result_3422552172.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3422552172;

}

function updateBaseIndexAndScrollOffset_3422552153(self_3422552154, app_3422552155, contentPanel_3422552156) {
          
function HEX3Aanonymous_3422552210(t_3422552213) {
            var result_3422552216 = ({x: 0.0, y: 0.0});

              result_3422552216 = nimCopy(result_3422552216, measureText_2768240805(self_3422552154.editor.platform, t_3422552213), NTI2164261152);

            return result_3422552216;

          }
          
function HEX3Aanonymous_3422552227(t_3422552230) {
            var result_3422552233 = ({x: 0.0, y: 0.0});

              result_3422552233 = nimCopy(result_3422552233, measureText_2768240805(self_3422552154.editor.platform, t_3422552230), NTI2164261152);

            return result_3422552233;

          }

    var totalLineHeight_3422552157 = totalLineHeight_2768240810(app_3422552155.platform);
    self_3422552154.previousBaseIndex = clamp_3338666339(self_3422552154.previousBaseIndex, HEX2EHEX2E_805306418(0, len_3003121752(self_3422552154.document.rootNode)));
    var selectedNodeId_3422552167 = nimCopy(null, node_2969569752(self_3422552154).id, NTI2046820355);
    var replacements_3422552179 = initTable_3422552168(32);
    var indent_3422552189 = getOption_2818583576(app_3422552155, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_3422552199 = getOption_2818583615(app_3422552155, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_3422552209 = getOption_2818583615(app_3422552155, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    Label1: {
        Label2: while (true) {
        if (!((self_3422552154.scrollOffset < 0.0) && (addInt(self_3422552154.previousBaseIndex, 1) < len_3003121752(self_3422552154.document.rootNode)))) break Label2;
          var input_3422552217 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: HEX5BHEX5D_3003121748(self_3422552154.document.rootNode, self_3422552154.previousBaseIndex), selectedNode: nimCopy(null, selectedNodeId_3422552167, NTI2046820355), replacements: nimCopy(null, replacements_3422552179, NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3422552210, indent: indent_3422552189, renderDivisionVertically: verticalDivision_3422552209, inlineBlocks: inlineBlocks_3422552199, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var layout_3422552218 = computeNodeLayout_3019934745(ctx_2969567289, input_3422552217, true);
          if ((contentPanel_3422552156.lastBounds.h <= ((self_3422552154.scrollOffset + bounds_3087009979(layout_3422552218).h) + totalLineHeight_3422552157))) {
          break Label1;
          }
          
          self_3422552154.previousBaseIndex = addInt(self_3422552154.previousBaseIndex, 1);
          HEX2BHEX3D_855640304(self_3422552154, "scrollOffset", (bounds_3087009979(layout_3422552218).h + totalLineHeight_3422552157));
        }
    };
    Label3: {
        Label4: while (true) {
        if (!((contentPanel_3422552156.lastBounds.h < self_3422552154.scrollOffset) && (0 < self_3422552154.previousBaseIndex))) break Label4;
          var input_3422552234 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: HEX5BHEX5D_3003121748(self_3422552154.document.rootNode, subInt(self_3422552154.previousBaseIndex, 1)), selectedNode: nimCopy(null, selectedNodeId_3422552167, NTI2046820355), replacements: nimCopy(null, replacements_3422552179, NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3422552227, indent: indent_3422552189, renderDivisionVertically: verticalDivision_3422552209, inlineBlocks: inlineBlocks_3422552199, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var layout_3422552235 = computeNodeLayout_3019934745(ctx_2969567289, input_3422552234, true);
          if (((self_3422552154.scrollOffset - bounds_3087009979(layout_3422552235).h) <= 0.0)) {
          break Label3;
          }
          
          self_3422552154.previousBaseIndex = subInt(self_3422552154.previousBaseIndex, 1);
          HEX2DHEX3D_2818593770(self_3422552154, "scrollOffset", (bounds_3087009979(layout_3422552235).h + totalLineHeight_3422552157));
        }
    };

  
}

function mustRehash_3422553986(t_3422553988) {
  var result_3422553989 = false;

    if (!((t_3422553988.counter < (t_3422553988.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3422553989 = ((mulInt((t_3422553988.data).length, 2) < mulInt(t_3422553988.counter, 3)) || (subInt((t_3422553988.data).length, t_3422553988.counter) < 4));

  return result_3422553989;

}

function rawInsert_3422554435(t_3422554439, data_3422554440, data_3422554440_Idx, key_3422554441, val_3422554442, hc_3422554443, h_3422554444) {
    data_3422554440[data_3422554440_Idx][chckIndx(h_3422554444, 0, (data_3422554440[data_3422554440_Idx]).length - 1)].Field1 = nimCopy(data_3422554440[data_3422554440_Idx][chckIndx(h_3422554444, 0, (data_3422554440[data_3422554440_Idx]).length - 1)].Field1, key_3422554441, NTI2046820355);
    data_3422554440[data_3422554440_Idx][chckIndx(h_3422554444, 0, (data_3422554440[data_3422554440_Idx]).length - 1)].Field2 = val_3422554442;
    data_3422554440[data_3422554440_Idx][chckIndx(h_3422554444, 0, (data_3422554440[data_3422554440_Idx]).length - 1)].Field0 = hc_3422554443;

  
}

function enlarge_3422554141(t_3422554144) {
    var n_3422554147 = [];
    n_3422554147 = new Array(chckRange(mulInt((t_3422554144.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3422554144.data).length, 2), 0, 2147483647) ; ++i) { n_3422554147[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3422554144.data; t_3422554144.data = n_3422554147; n_3422554147 = Temporary1;    Label2: {
      var i_3422554211 = 0;
      var colontmp__536872928 = 0;
      colontmp__536872928 = (n_3422554147).length - 1;
      var res_536872929 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872929 <= colontmp__536872928)) break Label4;
            i_3422554211 = res_536872929;
            var eh_3422554265 = n_3422554147[chckIndx(i_3422554211, 0, (n_3422554147).length - 1)].Field0;
            if (isFilled_1308622880(eh_3422554265)) {
            var j_3422554269 = (eh_3422554265 & (t_3422554144.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3422554144.data[chckIndx(j_3422554269, 0, (t_3422554144.data).length - 1)].Field0)) break Label6;
                  j_3422554269 = nextTry_1308622883(j_3422554269, (t_3422554144.data).length - 1);
                }
            };
            rawInsert_3422554435(t_3422554144, t_3422554144, "data", n_3422554147[chckIndx(i_3422554211, 0, (n_3422554147).length - 1)].Field1, n_3422554147[chckIndx(i_3422554211, 0, (n_3422554147).length - 1)].Field2, eh_3422554265, j_3422554269);
            }
            
            res_536872929 = addInt(res_536872929, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3422554604(t_3422554607, key_3422554608, hc_3422554609) {
  var result_3422554610 = 0;

  BeforeRet: {
    if (((t_3422554607.data).length == 0)) {
    result_3422554610 = -1;
    break BeforeRet;
    }
    
    var h_3422554661 = (hc_3422554609 & (t_3422554607.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3422554607.data[chckIndx(h_3422554661, 0, (t_3422554607.data).length - 1)].Field0)) break Label2;
          if (((t_3422554607.data[chckIndx(h_3422554661, 0, (t_3422554607.data).length - 1)].Field0 == hc_3422554609) && HEX3DHEX3D_2046820626(t_3422554607.data[chckIndx(h_3422554661, 0, (t_3422554607.data).length - 1)].Field1, key_3422554608))) {
          result_3422554610 = h_3422554661;
          break BeforeRet;
          }
          
          h_3422554661 = nextTry_1308622883(h_3422554661, (t_3422554607.data).length - 1);
        }
    };
    result_3422554610 = subInt(-1, h_3422554661);
  };

  return result_3422554610;

}

function HEX5BHEX5DHEX3D_3422553813(t_3422553816, key_3422553817, val_3422553818) {
    if (((t_3422553816.data).length == 0)) {
    var correctSizeHEX60gensym53_3422553867 = slotsNeeded_1308622891(32);
    t_3422553816.counter = 0;
    t_3422553816.data = new Array(chckRange(correctSizeHEX60gensym53_3422553867, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym53_3422553867, 0, 2147483647) ; ++i) { t_3422553816.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3422553872 = [0];
    var index_3422553879 = rawGet_3087010450(t_3422553816, key_3422553817, hc_3422553872, 0);
    if ((0 <= index_3422553879)) {
    t_3422553816.data[chckIndx(index_3422553879, 0, (t_3422553816.data).length - 1)].Field2 = val_3422553818;
    }
    else {
      if (((t_3422553816.data).length == 0)) {
      var correctSizeHEX60gensym56_3422553981 = slotsNeeded_1308622891(32);
      t_3422553816.counter = 0;
      t_3422553816.data = new Array(chckRange(correctSizeHEX60gensym56_3422553981, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_3422553981, 0, 2147483647) ; ++i) { t_3422553816.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3422553986(t_3422553816)) {
      enlarge_3422554141(t_3422553816);
      index_3422553879 = rawGetKnownHC_3422554604(t_3422553816, key_3422553817, hc_3422553872[0]);
      }
      
      index_3422553879 = subInt(-1, index_3422553879);
      rawInsert_3422554435(t_3422553816, t_3422553816, "data", key_3422553817, val_3422553818, hc_3422553872[0], index_3422553879);
      t_3422553816.counter = addInt(t_3422553816.counter, 1);
    }
    

  
}

function isSome_3422552266(self_3422552268) {
  var result_3422552269 = false;

    result_3422552269 = self_3422552268.has;

  return result_3422552269;

}

function isNone_3422552291(self_3422552293) {
  var result_3422552294 = false;

    result_3422552294 = !(self_3422552293.has);

  return result_3422552294;

}

function get_3422552283(self_3422552285) {
  var result_3422552286 = [];

    if (isNone_3422552291(self_3422552285)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3422552286 = self_3422552285["val"];

  return result_3422552286;

}

function anyColor_3221225984(theme_3221225986, names_3221225987, default_3221225988) {
  var result_3221225989 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3221225993 = [];
      var i_536872967 = 0;
      var L_536872968 = (names_3221225987).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872967 < L_536872968)) break Label3;
            name_3221225993 = names_3221225987[chckIndx(i_536872967, 0, (names_3221225987).length - 1)];
            if (nsuStartsWith(name_3221225993, [35])) {
            result_3221225989 = nimCopy(result_3221225989, parseHexVar_2516582448(name_3221225993), NTI2550136835);
            break BeforeRet;
            }
            else {
            if ((nsuStartsWith(name_3221225993, [38]) && contains_3221226054(theme_3221225986.colors, HEX5BHEX5D_855639319(name_3221225993, HEX2EHEX2E_1040187488(1, 1))))) {
            result_3221225989 = nimCopy(result_3221225989, HEX5BHEX5D_3221226144(theme_3221225986.colors, HEX5BHEX5D_855639319(name_3221225993, HEX2EHEX2E_1040187488(1, 1))), NTI2550136835);
            break BeforeRet;
            }
            else {
            if (contains_2516582652(theme_3221225986.tokenColors, name_3221225993)) {
            var style_3221226328 = nimCopy(null, HEX5BHEX5D_2516582957(theme_3221225986.tokenColors, name_3221225993), NTI2516582404);
            if (isSome_3221226333(style_3221226328.foreground)) {
            result_3221225989 = nimCopy(result_3221225989, get_3221226350(style_3221226328.foreground), NTI2550136835);
            break BeforeRet;
            }
            
            }
            }}
            i_536872967 = addInt(i_536872967, 1);
            if (!(((names_3221225987).length == L_536872968))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3221225989 = nimCopy(result_3221225989, color_2634022945(default_3221225988), NTI2550136835);
    break BeforeRet;
  };

  return result_3221225989;

}

function tokenFontStyle_2516583089(theme_2516583090, names_2516583091) {
  var result_2516583092 = {};

  BeforeRet: {
    Label1: {
      var name_2516583096 = [];
      var i_536872971 = 0;
      var L_536872972 = (names_2516583091).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872971 < L_536872972)) break Label3;
            name_2516583096 = names_2516583091[chckIndx(i_536872971, 0, (names_2516583091).length - 1)];
            if (contains_2516582652(theme_2516583090.tokenColors, name_2516583096)) {
            result_2516583092 = nimCopy(result_2516583092, HEX5BHEX5D_2516582957(theme_2516583090.tokenColors, name_2516583096).fontStyle, NTI2516582848);
            break BeforeRet;
            }
            
            i_536872971 = addInt(i_536872971, 1);
            if (!(((names_2516583091).length == L_536872972))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2516583092 = nimCopy(result_2516583092, ConstSet349, NTI2516582848);
    break BeforeRet;
  };

  return result_2516583092;

}

function isSome_3221226382(self_3221226384) {
  var result_3221226385 = false;

    result_3221226385 = self_3221226384.has;

  return result_3221226385;

}

function isNone_3221226407(self_3221226409) {
  var result_3221226410 = false;

    result_3221226410 = !(self_3221226409.has);

  return result_3221226410;

}

function get_3221226399(self_3221226401) {
  var result_3221226402 = {};

    if (isNone_3221226407(self_3221226401)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221226402 = self_3221226401.val;

  return result_3221226402;

}

function withAlpha_3422552088(color_3422552089, alpha_3422552090) {
  var result_3422552091 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_3422552091 = nimCopy(result_3422552091, color_2550136904(color_3422552089.r, color_3422552089.g, color_3422552089.b, alpha_3422552090), NTI2550136835);

  return result_3422552091;

}

function renderVisualNode_3422552244(self_3422552245, app_3422552246, node_3422552247, selected_3422552248, bounds_3422552249, offset_3422552250, widget_3422552251, frameIndex_3422552252) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var charWidth_3422552253 = charWidth_2768240799(app_3422552246.platform);
    if (!((node_3422552247.widgetTemplate == null))) {
    var nodeWidget_3422552257 = node_3422552247.widgetTemplate;
    if (node_3422552247.cloneWidget) {
    nodeWidget_3422552257 = clone_2785019171(nodeWidget_3422552257);
    }
    
    nodeWidget_3422552257.left = node_3422552247.bounds.x;
    nodeWidget_3422552257.top = node_3422552247.bounds.y;
    nodeWidget_3422552257.right = (node_3422552247.bounds.x + node_3422552247.bounds.w);
    nodeWidget_3422552257.bottom = (node_3422552247.bounds.y + node_3422552247.bounds.h);
    add_2785018080(widget_3422552251, nodeWidget_3422552257);
    break BeforeRet;
    }
    
    var panel_3422552258 = {left: node_3422552247.bounds.x, right: (node_3422552247.bounds.x + node_3422552247.bounds.w), top: node_3422552247.bounds.y, bottom: (node_3422552247.bounds.y + node_3422552247.bounds.h), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(widget_3422552251, panel_3422552258);
      var oHEX60gensym10_3422552261 = nimCopy(null, node_3422552247.background, NTI3087007803);
      if (!isSome_3422552266(oHEX60gensym10_3422552261)) Temporary1 = false; else {        var colors_3422552306 = nimCopy(null, get_3422552283(oHEX60gensym10_3422552261), NTI3087007798);
        Temporary1 = true;      }    if (Temporary1) {
    var color_3422552312 = anyColor_3221225984(app_3422552246.theme, colors_3422552306, rgb_2550136919(255, 255, 255));
    panel_3422552258.backgroundColor = nimCopy(panel_3422552258.backgroundColor, color_3422552312, NTI2550136835);
    panel_3422552258.fillBackground = true;
    }
    
    if ((0 < (node_3422552247.text).length)) {
    var color_3422552318 = anyColor_3221225984(app_3422552246.theme, node_3422552247.colors, rgb_2550136919(255, 255, 255));
    var style_3422552319 = tokenFontStyle_2516583089(app_3422552246.theme, node_3422552247.colors);
      var oHEX60gensym13_3422552322 = nimCopy(null, node_3422552247.styleOverride, NTI3087007788);
      if (!isSome_3221226382(oHEX60gensym13_3422552322)) Temporary2 = false; else {        var override_3422552345 = nimCopy(null, get_3221226399(oHEX60gensym13_3422552322), NTI3087007783);
        Temporary2 = true;      }    if (Temporary2) {
    style_3422552319 = nimCopy(style_3422552319, SetPlus(style_3422552319, override_3422552345), NTI2516582848);
    }
    
    var textWidget_3422552351 = createPartWidget_3439329344(node_3422552247.text, node_3422552247.bounds.x, ((node_3422552247.text).length * charWidth_3422552253), totalLineHeight_2768240810(app_3422552246.platform), color_3422552318, frameIndex_3422552252);
    textWidget_3422552351.style.fontStyle = nimCopy(textWidget_3422552351.style.fontStyle, style_3422552319, NTI2516582423);
    textWidget_3422552351.top = node_3422552247.bounds.y;
    textWidget_3422552351.bottom = (node_3422552247.bounds.y + node_3422552247.bounds.h);
    add_2785018080(widget_3422552251, textWidget_3422552351);
    }
    
    if ((0 < len_3087007980(node_3422552247))) {
    Label3: {
      var child_3422552355 = null;
      var i_536872963 = 0;
      var L_536872964 = (node_3422552247.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872963 < L_536872964)) break Label5;
            child_3422552355 = node_3422552247.children[chckIndx(i_536872963, 0, (node_3422552247.children).length - 1)];
            renderVisualNode_3422552244(self_3422552245, app_3422552246, child_3422552355, selected_3422552248, bounds_3422552249, offset_3422552250, panel_3422552258, frameIndex_3422552252);
            i_536872963 = addInt(i_536872963, 1);
            if (!(((node_3422552247.children).length == L_536872964))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    if ((!((node_3422552247.node == null)) && (HEX3DHEX3D_2046820626(node_2969569752(self_3422552245).id, node_3422552247.node.reff) || (HEX3DHEX3D_2046820626(node_2969569752(self_3422552245).reff, node_3422552247.node.reff) && !(HEX3DHEX3D_2046820626(node_3422552247.node.reff, null_2046820646)))))) {
    panel_3422552258.fillBackground = true;
    panel_3422552258.allowAlpha = true;
    panel_3422552258.drawBorder = true;
    panel_3422552258.backgroundColor = nimCopy(panel_3422552258.backgroundColor, withAlpha_3422552088(color_3439329450(app_3422552246.theme, [102,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 255)), 0.25), NTI2550136835);
    panel_3422552258.foregroundColor = nimCopy(panel_3422552258.foregroundColor, color_3439329450(app_3422552246.theme, [102,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 255)), NTI2550136835);
    }
    else {
    if ((!((node_3422552247.node == null)) && HEX3DHEX3D_2046820626(node_2969569752(self_3422552245).reff, node_3422552247.node.id))) {
    panel_3422552258.fillBackground = true;
    panel_3422552258.allowAlpha = true;
    panel_3422552258.drawBorder = true;
    panel_3422552258.backgroundColor = nimCopy(panel_3422552258.backgroundColor, withAlpha_3422552088(color_3439329450(app_3422552246.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], rgb_2550136919(175, 255, 200)), 0.25), NTI2550136835);
    panel_3422552258.foregroundColor = nimCopy(panel_3422552258.foregroundColor, color_3439329450(app_3422552246.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], rgb_2550136919(175, 255, 200)), NTI2550136835);
    }
    }
  };

  
}

function len_3221226665(t_3221226668) {
  var result_3221226669 = 0;

    result_3221226669 = t_3221226668.counter;

  return result_3221226669;

}

function color_3422552539(theme_3422552541, names_3422552542, default_3422552543) {
  var result_3422552544 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3422552548 = [];
      var i_536872984 = 0;
      var L_536872985 = (names_3422552542).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872984 < L_536872985)) break Label3;
            name_3422552548 = names_3422552542[chckIndx(i_536872984, 0, (names_3422552542).length - 1)];
            if (contains_3221226054(theme_3422552541.colors, name_3422552548)) {
            result_3422552544 = nimCopy(result_3422552544, HEX5BHEX5D_3221226144(theme_3422552541.colors, name_3422552548), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872984 = addInt(i_536872984, 1);
            if (!(((names_3422552542).length == L_536872985))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3422552544 = nimCopy(result_3422552544, color_2634023294(default_3422552543), NTI2550136835);
    break BeforeRet;
  };

  return result_3422552544;

}

function insert_2785017968(x_2785017970, x_2785017970_Idx, item_2785017971, i_2785017972) {
    var it_2785017992 = null;
    x_2785017970[x_2785017970_Idx] = x_2785017970[x_2785017970_Idx] || []; x_2785017970[x_2785017970_Idx].splice(i_2785017972, 0, it_2785017992);
    x_2785017970[x_2785017970_Idx][chckIndx(i_2785017972, 0, (x_2785017970[x_2785017970_Idx]).length - 1)] = item_2785017971;

  
}

function insert_2785017964(self_2785017965, index_2785017966, child_2785017967) {
    child_2785017967.parent = self_2785017965;
    insert_2785017968(self_2785017965, "children", child_2785017967, chckRange(index_2785017966, 0, 2147483647));

  
}

function renderBlockIndent_3422552384(editor_3422552385, app_3422552386, layout_3422552387, node_3422552388, offset_3422552389, widget_3422552390) {
              var Temporary5;

  BeforeRet: {
    var indentLineWidth_3422552400 = getOption_2818583576(app_3422552386, [97,115,116,46,105,110,100,101,110,116,45,108,105,110,101,45,119,105,100,116,104], 1.0);
    var indentLineAlpha_3422552410 = getOption_2818583576(app_3422552386, [97,115,116,46,105,110,100,101,110,116,45,108,105,110,101,45,97,108,112,104,97], 1.0);
    if ((indentLineWidth_3422552400 <= 0.0)) {
    break BeforeRet;
    }
    
    Label1: {
      var __3422552411 = 0;
      var child_3422552412 = null;
      var n_536872975 = node_3422552388;
      var idx_536872976 = -1;
      var i_536872977 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_536872976 == -1)) {
            var colontmp__536872980 = nimCopy(null, {Field0: i_536872977, Field1: n_536872975}, NTI3003123002);
            __3422552411 = colontmp__536872980["Field0"];
            child_3422552412 = colontmp__536872980["Field1"];
            if (((child_3422552412.kind == 7) && contains_2969569863(layout_3422552387.nodeToVisualNode, child_3422552412.id))) {
            var visualRange_3422552522 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3422552387.nodeToVisualNode, child_3422552412.id), NTI3087007774);
            var bounds_3422552523 = absoluteBounds_3087009583(visualRange_3422552522);
            var indent_3422552524 = addInt(modInt(subInt(HEX5BHEX5D_3087007967(visualRange_3422552522.parent, visualRange_3422552522.first).indent, 1), 6), 1);
            var fmtRes_3422552529 = [mnewString(0)];
            fmtRes_3422552529[0].push.apply(fmtRes_3422552529[0], [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100]);;
            formatValue_2701131945(fmtRes_3422552529, 0, indent_3422552524, []);
            var color_3422552654 = withAlpha_3422552088(color_3422552539(app_3422552386.theme, [nimCopy(null, fmtRes_3422552529[0], NTI33554449), [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], {r: 0.0, g: 0.0, b: 0.0, a: 1.0}), indentLineAlpha_3422552410);
            var panel_3422552655 = {left: bounds_3422552523.x, right: (bounds_3422552523.x + indentLineWidth_3422552400), top: bounds_3422552523.y, bottom: (bounds_3422552523.y + bounds_3422552523.h), fillBackground: true, allowAlpha: true, backgroundColor: nimCopy(null, color_3422552654, NTI2550136835), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, fontSizeIncreasePercent: 0.0};
            insert_2785017964(widget_3422552390, 0, panel_3422552655);
            }
            
            }
            
            if ((addInt(idx_536872976, 1) < len_3003121752(n_536872975))) {
            n_536872975 = HEX5BHEX5D_3003121748(n_536872975, addInt(idx_536872976, 1));
            idx_536872976 = -1;
            }
            else {
              var oHEX60gensym74_536872981 = next_3003121857(n_536872975);
              if (!isSome_3003123546(oHEX60gensym74_536872981)) Temporary5 = false; else {                var ne_536872982 = get_3003123566(oHEX60gensym74_536872981);
                Temporary5 = true;              }            if (Temporary5) {
            n_536872975 = ne_536872982;
            idx_536872976 = -1;
            }
            else {
            if ((!((n_536872975.parent == null)) && !((n_536872975.parent == node_3422552388)))) {
            idx_536872976 = index_3003121772(n_536872975);
            n_536872975 = n_536872975.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_536872977 = addInt(i_536872977, 1);
            }
          }
      };
    };
  };

  
}

function renderVisualNodeLayout_3422552656(self_3422552657, app_3422552658, node_3422552659, bounds_3422552660, layout_3422552661, offset_3422552662, contentWidget_3422552663, frameIndex_3422552664) {
    var totalLineHeight_3422552665 = totalLineHeight_2768240810(app_3422552658.platform);
    var charWidth_3422552666 = charWidth_2768240799(app_3422552658.platform);
    self_3422552657.lastLayouts.push({Field0: layout_3422552661, Field1: nimCopy(null, offset_3422552662, NTI2164261152)});;
    var widget_3422552671 = {left: bounds_3087009979(layout_3422552661).x, right: (bounds_3087009979(layout_3422552661).x + bounds_3087009979(layout_3422552661).w), top: (bounds_3087009979(layout_3422552661).y + offset_3422552662.y), bottom: ((bounds_3087009979(layout_3422552661).y + bounds_3087009979(layout_3422552661).h) + offset_3422552662.y), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    Label1: {
      var line_3422552675 = null;
      var i_536872933 = 0;
      var L_536872934 = (layout_3422552661.root.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872933 < L_536872934)) break Label3;
            line_3422552675 = layout_3422552661.root.children[chckIndx(i_536872933, 0, (layout_3422552661.root.children).length - 1)];
            renderVisualNode_3422552244(self_3422552657, app_3422552658, line_3422552675, node_2969569752(self_3422552657), bounds_3422552660, offset_3422552662, widget_3422552671, frameIndex_3422552664);
            i_536872933 = addInt(i_536872933, 1);
            if (!(((layout_3422552661.root.children).length == L_536872934))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    add_2785018080(contentWidget_3422552663, widget_3422552671);
    var errorColor_3422552681 = color_3439329450(app_3422552658.theme, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(255, 0, 0));
    Label4: {
      var id_3422552686 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var visualRange_3422552687 = ({parent: null, first: 0, last: 0});
      var L_536872954 = len_3221226665(layout_3422552661.nodeToVisualNode);
      Label5: {
        var h_536872956 = 0;
        var colontmp__536872957 = 0;
        colontmp__536872957 = (layout_3422552661.nodeToVisualNode.data).length - 1;
        var res_536872958 = 0;
        Label6: {
            Label7: while (true) {
            if (!(res_536872958 <= colontmp__536872957)) break Label7;
              h_536872956 = res_536872958;
              if (isFilled_1308622880(layout_3422552661.nodeToVisualNode.data[chckIndx(h_536872956, 0, (layout_3422552661.nodeToVisualNode.data).length - 1)].Field0)) {
              var colontmp__536872961 = nimCopy(null, {Field0: nimCopy(null, layout_3422552661.nodeToVisualNode.data[chckIndx(h_536872956, 0, (layout_3422552661.nodeToVisualNode.data).length - 1)].Field1, NTI2046820355), Field1: nimCopy(null, layout_3422552661.nodeToVisualNode.data[chckIndx(h_536872956, 0, (layout_3422552661.nodeToVisualNode.data).length - 1)].Field2, NTI3087007774)}, NTI3221226150);
              id_3422552686 = nimCopy(id_3422552686, colontmp__536872961["Field0"], NTI2046820355);
              visualRange_3422552687 = nimCopy(visualRange_3422552687, colontmp__536872961["Field1"], NTI3087007774);
              if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, id_3422552686)) {
              var foundErrors_3422552735 = false;
              var bounds_3422552745 = HEX2B_2130706587(absoluteBounds_3087009583(visualRange_3422552687), offset_3422552662);
              var last_3422552746 = rect_2147483672(xy_2147483680(bounds_3422552745), vec2_2164261686());
              Label8: {
                var diagnostics_3422552809 = [];
                var colontmp__536872943 = ({data: [], counter: 0});
                colontmp__536872943 = nimCopy(colontmp__536872943, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, id_3422552686).queries, NTI3019898894);
                var L_536872944 = len_3221227056(colontmp__536872943);
                Label9: {
                  var h_536872946 = 0;
                  var colontmp__536872947 = 0;
                  colontmp__536872947 = (colontmp__536872943.data).length - 1;
                  var res_536872948 = 0;
                  Label10: {
                      Label11: while (true) {
                      if (!(res_536872948 <= colontmp__536872947)) break Label11;
                        h_536872946 = res_536872948;
                        if (isFilled_1308622880(colontmp__536872943.data[chckIndx(h_536872946, 0, (colontmp__536872943.data).length - 1)].Field0)) {
                        diagnostics_3422552809 = colontmp__536872943.data[chckIndx(h_536872946, 0, (colontmp__536872943.data).length - 1)]["Field2"];
                        Label12: {
                          var diagnostic_3422552813 = ({message: []});
                          var i_536872940 = 0;
                          var L_536872941 = (diagnostics_3422552809).length;
                          Label13: {
                              Label14: while (true) {
                              if (!(i_536872940 < L_536872941)) break Label14;
                                diagnostic_3422552813 = diagnostics_3422552809[chckIndx(i_536872940, 0, (diagnostics_3422552809).length - 1)];
                                var panel_3422552814 = {text: nimCopy(null, diagnostic_3422552813.message, NTI33554449), left: (-((diagnostic_3422552813.message).length) * charWidth_3422552666), right: 0.0, top: (last_3422552746.y + last_3422552746.h), bottom: ((last_3422552746.y + last_3422552746.h) + totalLineHeight_3422552665), anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), sizeToContent: true, foregroundColor: nimCopy(null, errorColor_3422552681, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
                                add_2785018080(contentWidget_3422552663, panel_3422552814);
                                foundErrors_3422552735 = true;
                                i_536872940 = addInt(i_536872940, 1);
                                if (!(((diagnostics_3422552809).length == L_536872941))) {
                                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          };
                        };
                        if (!((len_3221227056(colontmp__536872943) == L_536872944))) {
                        failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        res_536872948 = addInt(res_536872948, 1);
                      }
                  };
                };
              };
              if (foundErrors_3422552735) {
              var panel_3422552815 = {left: bounds_3422552745.x, right: (bounds_3422552745.x + bounds_3422552745.w), top: bounds_3422552745.y, bottom: (bounds_3422552745.y + bounds_3422552745.h), allowAlpha: true, fillBackground: true, drawBorder: true, backgroundColor: withAlpha_3422552088(errorColor_3422552681, 0.25), foregroundColor: nimCopy(null, errorColor_3422552681, NTI2550136835), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false, fontSizeIncreasePercent: 0.0};
              add_2785018080(contentWidget_3422552663, panel_3422552815);
              }
              
              }
              
              if (!((len_3221226665(layout_3422552661.nodeToVisualNode) == L_536872954))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872958 = addInt(res_536872958, 1);
            }
        };
      };
    };
    if (contains_2969569863(layout_3422552661.nodeToVisualNode, node_2969569752(self_3422552657).id)) {
    var visualRange_3422552921 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3422552661.nodeToVisualNode, node_2969569752(self_3422552657).id), NTI3087007774);
    var bounds_3422552922 = absoluteBounds_3087009583(visualRange_3422552921);
    var panel_3422552944 = {left: bounds_3422552922.x, right: (bounds_3422552922.x + bounds_3422552922.w), top: bounds_3422552922.y, bottom: (bounds_3422552922.y + bounds_3422552922.h), fillBackground: true, drawBorder: true, allowAlpha: true, backgroundColor: withAlpha_3422552088(color_3422552923(app_3422552658.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], color_2550136904(1.0, 1.0, 1.0, 1.0)), 0.25), foregroundColor: color_3439329450(app_3422552658.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], rgb_2550136919(255, 255, 255)), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(widget_3422552671, panel_3422552944);
    }
    
    renderBlockIndent_3422552384(self_3422552657, app_3422552658, layout_3422552661, node_3422552659, offset_3422552662, widget_3422552671);

  
}

function HEX5BHEX5D_3422553012(s_3422553016, x_3422553017) {
  var result_3422553018 = [];

    var a_3422553020 = x_3422553017.a;
    var L_3422553022 = addInt(subInt(x_3422553017.b, a_3422553020), 1);
    result_3422553018 = new Array(chckRange(L_3422553022, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3422553022, 0, 2147483647) ; ++i) { result_3422553018[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }    Label1: {
      var i_3422553031 = 0;
      var i_536873010 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873010 < L_3422553022)) break Label3;
            i_3422553031 = i_536873010;
            result_3422553018[chckIndx(i_3422553031, 0, (result_3422553018).length - 1)] = nimCopy(result_3422553018[chckIndx(i_3422553031, 0, (result_3422553018).length - 1)], s_3422553016[chckIndx(addInt(i_3422553031, a_3422553020), 0, (s_3422553016).length - 1)], NTI2969568638);
            i_536873010 = addInt(i_536873010, 1);
          }
      };
    };

  return result_3422553018;

}

function get_3422553133(self_3422553135, otherwise_3422553136) {
    var Temporary1;

  var result_3422553137 = {};

    if (isSome_3221226382(self_3422553135)) {
    Temporary1 = self_3422553135.val;
    }
    else {
    Temporary1 = otherwise_3422553136;
    }
    
    result_3422553137 = nimCopy(result_3422553137, Temporary1, NTI3087007783);

  return result_3422553137;

}

function get_3439330991(self_3439330993, otherwise_3439330994) {
    var Temporary1;

  var result_3439330995 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isSome_3221226333(self_3439330993)) {
    Temporary1 = self_3439330993.val;
    }
    else {
    Temporary1 = otherwise_3439330994;
    }
    
    result_3439330995 = nimCopy(result_3439330995, Temporary1, NTI2550136835);

  return result_3439330995;

}

function getCascading_2516582604(table_2516582606, key_2516582607, default_2516582608) {
  var result_2516582609 = ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}});

  BeforeRet: {
    if (contains_2516582652(table_2516582606, key_2516582607)) {
    result_2516582609 = nimCopy(result_2516582609, HEX5BHEX5D_2516582957(table_2516582606, key_2516582607), NTI2516582404);
    break BeforeRet;
    }
    
    var index_2516583036 = nsuRFindStr(key_2516582607, [46], 0, -1);
    if (!((index_2516583036 == -1))) {
    result_2516582609 = nimCopy(result_2516582609, getCascading_2516582604(table_2516582606, HEX5BHEX5D_855639291(key_2516582607, HEX2EHEX2E_805306418(0, subInt(index_2516583036, 1))), default_2516582608), NTI2516582404);
    break BeforeRet;
    }
    
    result_2516582609 = nimCopy(result_2516582609, default_2516582608, NTI2516582404);
    break BeforeRet;
  };

  return result_2516582609;

}

function tokenColor_3439330963(theme_3439330965, name_3439330966, default_3439330967) {
  var result_3439330968 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3439330968 = nimCopy(result_3439330968, get_3439330991(getCascading_2516582604(theme_3439330965.tokenColors, name_3439330966, {foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}).foreground, color_2634022945(default_3439330967)), NTI2550136835);
    break BeforeRet;
  };

  return result_3439330968;

}

function add_3422553286(x_3422553288, x_3422553288_Idx, y_3422553289) {
    var Temporary1;

    var xl_3422553293 = (x_3422553288[x_3422553288_Idx]).length;
    if (x_3422553288[x_3422553288_Idx].length < (Temporary1 = chckRange(addInt(xl_3422553293, (y_3422553289).length), 0, 2147483647), Temporary1)) { for (var i = x_3422553288[x_3422553288_Idx].length ; i < Temporary1 ; ++i) x_3422553288[x_3422553288_Idx].push({Field0: 0, Field1: null}); }
               else { x_3422553288[x_3422553288_Idx].length = Temporary1; };
    Label2: {
      var i_3422553309 = 0;
      var colontmp__536873013 = 0;
      colontmp__536873013 = (y_3422553289).length - 1;
      var res_536873014 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536873014 <= colontmp__536873013)) break Label4;
            i_3422553309 = res_536873014;
            x_3422553288[x_3422553288_Idx][chckIndx(addInt(xl_3422553293, i_3422553309), 0, (x_3422553288[x_3422553288_Idx]).length - 1)] = nimCopy(x_3422553288[x_3422553288_Idx][chckIndx(addInt(xl_3422553293, i_3422553309), 0, (x_3422553288[x_3422553288_Idx]).length - 1)], y_3422553289[chckIndx(i_3422553309, 0, (y_3422553289).length - 1)], NTI3422552551);
            res_536873014 = addInt(res_536873014, 1);
          }
      };
    };

  
}

function renderCompletionList_3422552945(self_3422552946, app_3422552947, widget_3422552948, parentBounds_3422552949, frameIndex_3422552950, completions_3422552951, selected_3422552952, fill_3422552953, targetLine_3422552955, renderedItems_3422552958, renderedItems_3422552958_Idx, previousBaseIndex_3422552959, previousBaseIndex_3422552959_Idx, scrollOffset_3422552960, scrollOffset_3422552960_Idx) {
    var Temporary1;
                var Temporary8;
                var Temporary9;
              var Temporary10;
              var Temporary11;
    
function renderLine_3422553219(lineWidget_3422553220, i_3422553221, down_3422553222, frameIndex_3422553223) {
      var result_3422553224 = false;

      BeforeRet: {
        if ((i_3422553221 == self_3422552946.selectedCompletion)) {
        lineWidget_3422553220.fillBackground = true;
        lineWidget_3422553220.backgroundColor = nimCopy(lineWidget_3422553220.backgroundColor, selectionColor_3422553209, NTI2550136835);
        }
        
        var k_3422553225 = subInt(i_3422553221, firstCompletion_3422552978);
        if (((k_3422553225 < 0) || ((entries_3422552999).length - 1 < k_3422553225))) {
        result_3422553224 = false;
        break BeforeRet;
        }
        
        var entry_3422553229 = nimCopy(null, entries_3422552999[chckIndx(k_3422553225, 0, (entries_3422552999).length - 1)], NTI3422552566);
        var nameColor_3422553235 = tokenColor_3439329618(app_3422552947.theme, entry_3422553229.Field3, rgb_2550136919(255, 255, 255));
        var nameWidget_3422553236 = createPartWidget_3439329344(entry_3422553229.Field0, 0.0, ((entry_3422553229.Field0).length * charWidth_3422552962), totalLineHeight_3422552961, nameColor_3422553235, frameIndex_3422553223);
        nameWidget_3422553236.style.fontStyle = nimCopy(nameWidget_3422553236.style.fontStyle, entry_3422553229.Field6, NTI2516582423);
        add_2785018080(lineWidget_3422553220, nameWidget_3422553236);
        var tempWidget_3422553237 = createPartWidget_3439329344([32,58,32], nameWidth_3422553200, (3.0 * charWidth_3422552962), totalLineHeight_3422552961, sepColor_3422553215, frameIndex_3422553223);
        add_2785018080(lineWidget_3422553220, tempWidget_3422553237);
        var typeColor_3422553243 = tokenColor_3439330963(app_3422552947.theme, entry_3422553229.Field4, rgb_2550136919(255, 255, 255));
        var typeWidget_3422553244 = createPartWidget_3439329344(entry_3422553229.Field1, tempWidget_3422553237.right, ((entry_3422553229.Field1).length * charWidth_3422552962), totalLineHeight_3422552961, typeColor_3422553243, frameIndex_3422553223);
        add_2785018080(lineWidget_3422553220, typeWidget_3422553244);
        tempWidget_3422553237 = createPartWidget_3439329344([32,61,32], (typeWidget_3422553244.left + typeWidth_3422553201), (3.0 * charWidth_3422552962), totalLineHeight_3422552961, sepColor_3422553215, frameIndex_3422553223);
        add_2785018080(lineWidget_3422553220, tempWidget_3422553237);
        if ((0 < (entry_3422553229.Field2).length)) {
        var valueColor_3422553250 = tokenColor_3439330963(app_3422552947.theme, entry_3422553229.Field5, rgb_2550136919(255, 255, 255));
        var valueWidget_3422553251 = createPartWidget_3439329344(entry_3422553229.Field2, (-((entry_3422553229.Field2).length) * charWidth_3422552962), 0.0, totalLineHeight_3422552961, valueColor_3422553250, frameIndex_3422553223);
        valueWidget_3422553251.anchor.Field0.x = 1.0;
        valueWidget_3422553251.anchor.Field1.x = 1.0;
        add_2785018080(lineWidget_3422553220, valueWidget_3422553251);
        }
        
        newRenderedItems_3422553218.push({Field0: i_3422553221, Field1: lineWidget_3422553220});;
        result_3422553224 = true;
        break BeforeRet;
      };

      return result_3422553224;

    }

  BeforeRet: {
    var totalLineHeight_3422552961 = totalLineHeight_2768240810(app_3422552947.platform);
    var charWidth_3422552962 = charWidth_2768240799(app_3422552947.platform);
    if (renderedItems_3422552958[renderedItems_3422552958_Idx].length < 0) { for (var i = renderedItems_3422552958[renderedItems_3422552958_Idx].length ; i < 0 ; ++i) renderedItems_3422552958[renderedItems_3422552958_Idx].push({Field0: 0, Field1: null}); }
               else { renderedItems_3422552958[renderedItems_3422552958_Idx].length = 0; };
    if (((completions_3422552951).length == 0)) {
    break BeforeRet;
    }
    
    if (fill_3422552953) {
    Temporary1 = (((widget_3422552948.lastBounds.h / totalLineHeight_3422552961)) | 0);
    }
    else {
    Temporary1 = 15;
    }
    
    var maxRenderedCompletions_3422552970 = Temporary1;
    var renderedCompletions_3422552974 = nimMin((completions_3422552951).length, maxRenderedCompletions_3422552970);
    widget_3422552948.bottom = (widget_3422552948.top + (renderedCompletions_3422552974 * totalLineHeight_3422552961));
    layoutWidget_2785018531(widget_3422552948, parentBounds_3422552949, frameIndex_3422552950, app_3422552947.platform.layoutOptions);
    updateBaseIndexAndScrollOffset_3439329351(widget_3422552948, previousBaseIndex_3422552959, previousBaseIndex_3422552959_Idx, scrollOffset_3422552960, scrollOffset_3422552960_Idx, (completions_3422552951).length, totalLineHeight_3422552961, targetLine_3422552955);
    var firstCompletion_3422552978 = previousBaseIndex_3422552959[previousBaseIndex_3422552959_Idx];
    Label2: {
      var temp_3422552979 = [scrollOffset_3422552960[scrollOffset_3422552960_Idx]];
      Label3: {
          Label4: while (true) {
          if (!((0.0 < temp_3422552979[0]) && (0 < firstCompletion_3422552978))) break Label4;
            HEX2DHEX3D_2818593770(temp_3422552979, 0, totalLineHeight_3422552961);
            firstCompletion_3422552978 = subInt(firstCompletion_3422552978, 1);
          }
      };
    };
    var entries_3422552999 = [];
    Label5: {
      var i_3422553074 = 0;
      var com_3422553075 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});
      var colontmp__536872999 = [];
      colontmp__536872999 = HEX5BHEX5D_3422553012(completions_3422552951, HEX2EHEX2E_805306418(firstCompletion_3422552978, (completions_3422552951).length - 1));
      var i_536873001 = 0;
      var L_536873002 = (colontmp__536872999).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536873001 < L_536873002)) break Label7;
            i_3422553074 = i_536873001;
            com_3422553075 = nimCopy(com_3422553075, colontmp__536872999[chckIndx(i_536873001, 0, (colontmp__536872999).length - 1)], NTI2969568638);
            switch (com_3422553075.kind) {
            case 0:
                var Temporary9 = com_3422553075;
                if (ConstSet353[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2969568637)); }
                var oHEX60gensym34_3422553078 = getSymbol_3019906948(ctx_2969567289, Temporary9.id);
                if (!isSome_3087009356(oHEX60gensym34_3422553078)) Temporary8 = false; else {                  var sym_3422553101 = get_3087009376(oHEX60gensym34_3422553078);
                  Temporary8 = true;                }              if (Temporary8) {
              var typ_3422553102 = computeSymbolType_3019928398(ctx_2969567289, sym_3422553101, true);
              var valueString_3422553103 = [];
              var value_3422553104 = computeSymbolValue_3019931153(ctx_2969567289, sym_3422553101, true);
              if ((((!((value_3422553104.kind == 0)) && !((value_3422553104.kind == 4))) && !((value_3422553104.kind == 5))) && !((value_3422553104.kind == 1)))) {
              valueString_3422553103 = nimCopy(null, HEX24_3087008498(value_3422553104), NTI33554449);
              }
              
              var style_3422553145 = get_3422553133(getStyleForSymbol_3137341424(ctx_2969567289, sym_3422553101), ConstSet354);
              entries_3422552999.push({Field0: nimCopy(null, sym_3422553101.name, NTI33554449), Field1: HEX24_3087008191(typ_3422553102), Field2: nimCopy(null, valueString_3422553103, NTI33554449), Field3: getColorForSymbol_3137341355(ctx_2969567289, sym_3422553101), Field4: [115,116,111,114,97,103,101,46,116,121,112,101], Field5: [115,116,114,105,110,103], Field6: nimCopy(null, style_3422553145, NTI3422552568)});;
              }
              
              break;
            case 1:
              var Temporary10 = com_3422553075;
              if (ConstSet355[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'name\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2969568637)); }
              var Temporary11 = com_3422553075;
              if (ConstSet356[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2969568637)); }
              entries_3422552999.push({Field0: nimCopy(null, Temporary10.name, NTI33554449), Field1: [115,110,105,112,112,101,116], Field2: reprEnum(Temporary11.nodeKind, NTI3003121667), Field3: [[101,110,116,105,116,121,46,110,97,109,101,46,108,97,98,101,108], [101,110,116,105,116,121,46,110,97,109,101]], Field4: [115,116,111,114,97,103,101], Field5: [115,116,114,105,110,103], Field6: nimCopy(null, ConstSet357, NTI3422552568)});;
              break;
            }
            if ((renderedCompletions_3422552974 < (entries_3422552999).length)) {
            break Label5;
            }
            
            i_536873001 = addInt(i_536873001, 1);
            if (!(((colontmp__536872999).length == L_536873002))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var maxNameLen_3422553168 = 10;
    var maxTypeLen_3422553169 = 10;
    var maxValueLen_3422553170 = 0;
    Label12: {
      var name_3422553192 = [];
      var typ_3422553193 = [];
      var value_3422553194 = [];
      var color1_3422553195 = [];
      var color2_3422553196 = [];
      var color3_3422553197 = [];
      var __3422553198 = {};
      var i_536873006 = 0;
      var L_536873007 = (entries_3422552999).length;
      Label13: {
          Label14: while (true) {
          if (!(i_536873006 < L_536873007)) break Label14;
            name_3422553192 = entries_3422552999[chckIndx(i_536873006, 0, (entries_3422552999).length - 1)]["Field0"];
            typ_3422553193 = entries_3422552999[chckIndx(i_536873006, 0, (entries_3422552999).length - 1)]["Field1"];
            value_3422553194 = entries_3422552999[chckIndx(i_536873006, 0, (entries_3422552999).length - 1)]["Field2"];
            color1_3422553195 = entries_3422552999[chckIndx(i_536873006, 0, (entries_3422552999).length - 1)]["Field3"];
            color2_3422553196 = entries_3422552999[chckIndx(i_536873006, 0, (entries_3422552999).length - 1)]["Field4"];
            color3_3422553197 = entries_3422552999[chckIndx(i_536873006, 0, (entries_3422552999).length - 1)]["Field5"];
            __3422553198 = entries_3422552999[chckIndx(i_536873006, 0, (entries_3422552999).length - 1)]["Field6"];
            maxNameLen_3422553168 = nimMax(maxNameLen_3422553168, (name_3422553192).length);
            maxTypeLen_3422553169 = nimMax(maxTypeLen_3422553169, (typ_3422553193).length);
            maxValueLen_3422553170 = nimMax(maxValueLen_3422553170, (value_3422553194).length);
            i_536873006 = addInt(i_536873006, 1);
            if (!(((entries_3422552999).length == L_536873007))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var sepWidth_3422553199 = (charWidth_3422552962 * 3.0);
    var nameWidth_3422553200 = (charWidth_3422552962 * maxNameLen_3422553168);
    var typeWidth_3422553201 = (charWidth_3422552962 * maxTypeLen_3422553169);
    var valueWidth_3422553202 = (charWidth_3422552962 * maxValueLen_3422553170);
    var totalWidth_3422553203 = (((nameWidth_3422553200 + typeWidth_3422553201) + valueWidth_3422553202) + (sepWidth_3422553199 * 2.0));
    if ((fill_3422552953 && (totalWidth_3422553203 < widget_3422552948.lastBounds.w))) {
    totalWidth_3422553203 = widget_3422552948.lastBounds.w;
    }
    
    widget_3422552948.right = (widget_3422552948.left + totalWidth_3422553203);
    widget_3422552948.bottom = (widget_3422552948.top + (renderedCompletions_3422552974 * totalLineHeight_3422552961));
    var selectionColor_3422553209 = color_3439329450(app_3422552947.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var sepColor_3422553215 = color_3439329450(app_3422552947.theme, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 175));
    var newRenderedItems_3422553218 = [];
    createLinesInPanel_3439329412(app_3422552947, widget_3422552948, previousBaseIndex_3422552959[previousBaseIndex_3422552959_Idx], scrollOffset_3422552960[scrollOffset_3422552960_Idx], (completions_3422552951).length, frameIndex_3422552950, true, renderLine_3422553219);
    add_3422553286(renderedItems_3422552958, renderedItems_3422552958_Idx, newRenderedItems_3422553218);
  };

  
}

function renderCompletions_3422553337(self_3422553338, app_3422553339, widget_3422553340, frameIndex_3422553341) {
              var Temporary4;
              var Temporary5;
              var Temporary6;
                var Temporary7;
                var Temporary8;
                var Temporary9;
            var Temporary10;

  BeforeRet: {
    self_3422553338.lastCompletionsWidget = null;
    if (((self_3422553338.completions).length == 0)) {
    break BeforeRet;
    }
    
    var matchColor_3422553350 = color_3439329450(app_3422553339.theme, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], rgb_2550136919(150, 150, 220));
    var backgroundColor_3422553356 = color_3439329450(app_3422553339.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(30, 30, 30));
    var borderColor_3422553362 = color_3439329450(app_3422553339.theme, [112,97,110,101,108,46,98,111,114,100,101,114], rgb_2550136919(255, 255, 255));
    Label1: {
      var layout_3422553366 = null;
      var offset_3422553367 = ({x: 0.0, y: 0.0});
      var i_536872989 = 0;
      var L_536872990 = (self_3422553338.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872989 < L_536872990)) break Label3;
            layout_3422553366 = self_3422553338.lastLayouts[chckIndx(i_536872989, 0, (self_3422553338.lastLayouts).length - 1)]["Field0"];
            offset_3422553367 = self_3422553338.lastLayouts[chckIndx(i_536872989, 0, (self_3422553338.lastLayouts).length - 1)]["Field1"];
            var selectedCompletion_3422553368 = nimCopy(null, self_3422553338.completions[chckIndx(self_3422553338.selectedCompletion, 0, (self_3422553338.completions).length - 1)], NTI2969568638);
              if (!(selectedCompletion_3422553368.kind == 0)) Temporary6 = false; else {                var Temporary8 = selectedCompletion_3422553368;
                if (ConstSet350[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2969568637)); }
                var oHEX60gensym44_3422553376 = getSymbol_3019906948(ctx_2969567289, Temporary8.id);
                if (!isSome_3087009356(oHEX60gensym44_3422553376)) Temporary7 = false; else {                  var symbol_3422553399 = get_3087009376(oHEX60gensym44_3422553376);
                  Temporary7 = true;                }                Temporary6 = Temporary7;              }              if (!Temporary6) Temporary5 = false; else {                Temporary5 = (symbol_3422553399.kind == 0);              }              if (!Temporary5) Temporary4 = false; else {                var Temporary9 = symbol_3422553399;
                if (ConstSet351[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007753)); }
                Temporary4 = contains_2969569863(layout_3422553366.nodeToVisualNode, Temporary9.node.id);              }            if (Temporary4) {
            var Temporary10 = symbol_3422553399;
            if (ConstSet352[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007753)); }
            var selectedDeclRect_3422553509 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3422553366.nodeToVisualNode, Temporary10.node.id), NTI3087007774);
            var bounds_3422553519 = HEX2B_2130706587(absoluteBounds_3087009583(selectedDeclRect_3422553509), offset_3422553367);
            var panel_3422553520 = {left: bounds_3422553519.x, right: (bounds_3422553519.x + bounds_3422553519.w), top: bounds_3422553519.y, bottom: (bounds_3422553519.y + bounds_3422553519.h), fillBackground: true, drawBorder: true, allowAlpha: true, backgroundColor: withAlpha_3422552088(matchColor_3422553350, 0.25), foregroundColor: nimCopy(null, matchColor_3422553350, NTI2550136835), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false, fontSizeIncreasePercent: 0.0};
            add_2785018080(widget_3422553340, panel_3422553520);
            }
            
            i_536872989 = addInt(i_536872989, 1);
            if (!(((self_3422553338.lastLayouts).length == L_536872990))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label11: {
      var layout_3422553524 = null;
      var offset_3422553525 = ({x: 0.0, y: 0.0});
      var i_536872993 = 0;
      var L_536872994 = (self_3422553338.lastLayouts).length;
      Label12: {
          Label13: while (true) {
          if (!(i_536872993 < L_536872994)) break Label13;
            layout_3422553524 = self_3422553338.lastLayouts[chckIndx(i_536872993, 0, (self_3422553338.lastLayouts).length - 1)]["Field0"];
            offset_3422553525 = self_3422553338.lastLayouts[chckIndx(i_536872993, 0, (self_3422553338.lastLayouts).length - 1)]["Field1"];
            if (contains_2969569863(layout_3422553524.nodeToVisualNode, node_2969569752(self_3422553338).id)) {
            var visualRange_3422553631 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3422553524.nodeToVisualNode, node_2969569752(self_3422553338).id), NTI3087007774);
            var bounds_3422553641 = HEX2B_2130706587(absoluteBounds_3087009583(visualRange_3422553631), offset_3422553525);
            var panel_3422553642 = {left: bounds_3422553641.x, top: (bounds_3422553641.y + bounds_3422553641.h), right: (bounds_3422553641.x + 100.0), bottom: ((bounds_3422553641.y + bounds_3422553641.h) + 100.0), fillBackground: true, backgroundColor: nimCopy(null, backgroundColor_3422553356, NTI2550136835), drawBorder: true, foregroundColor: nimCopy(null, borderColor_3422553362, NTI2550136835), maskContent: true, layout: {kind: 0}, m_type: NTI2785017871, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
            renderCompletionList_3422552945(self_3422553338, app_3422553339, panel_3422553642, widget_3422553340.lastBounds, frameIndex_3422553341, self_3422553338.completions, self_3422553338.selectedCompletion, false, self_3422553338.scrollToCompletion, self_3422553338, "lastItems", self_3422553338, "completionsBaseIndex", self_3422553338, "completionsScrollOffset");
            self_3422553338.lastCompletionsWidget = panel_3422553642;
            add_2785018080(widget_3422553340, panel_3422553642);
            break Label11;
            }
            
            i_536872993 = addInt(i_536872993, 1);
            if (!(((self_3422553338.lastLayouts).length == L_536872994))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    self_3422553338.scrollToCompletion = nimCopy(self_3422553338.scrollToCompletion, none_3003121842(), NTI1191183280);
  };

  
}

function updateWidget_3422553650(self_3422553651, app_3422553652, widget_3422553653, frameIndex_3422553654) {
    var Temporary1;
    
function HEX3Aanonymous_3422553684(wf_3422553695) {
      var result_3422553698 = [];

        result_3422553698 = nimCopy(null, ([32,45,32] || []).concat(wf_3422553695.name || []), NTI33554449);

      return result_3422553698;

    }
    var Temporary2;
    var Temporary3;
    var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
            
function HEX3Aanonymous_3422554926(t_3422554929) {
              var result_3422554932 = ({x: 0.0, y: 0.0});

                result_3422554932 = nimCopy(result_3422554932, measureText_2768240805(app_3422553652.platform, t_3422554929), NTI2164261152);

              return result_3422554932;

            }
            
function HEX3Aanonymous_3422554951(t_3422554954) {
              var result_3422554957 = ({x: 0.0, y: 0.0});

                result_3422554957 = nimCopy(result_3422554957, measureText_2768240805(app_3422553652.platform, t_3422554954), NTI2164261152);

              return result_3422554957;

            }

  BeforeRet: {
    var lineHeight_3422553655 = lineHeight_2768240794(app_3422553652.platform);
    var totalLineHeight_3422553656 = totalLineHeight_2768240810(app_3422553652.platform);
    var lineDistance_3422553657 = lineDistance_2768240789(app_3422553652.platform);
    var charWidth_3422553658 = charWidth_2768240799(app_3422553652.platform);
    var textColor_3422553664 = color_3439329450(app_3422553652.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3422553665 = null;
    var headerPart1Text_3422553666 = null;
    var headerPart2Text_3422553667 = null;
    var contentPanel_3422553668 = null;
    if ((len_2785018037(widget_3422553653) == 0)) {
    headerPanel_3422553665 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), bottom: totalLineHeight_3422553656, lastHierarchyChange: frameIndex_3422553654, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(widget_3422553653, headerPanel_3422553665);
    headerPart1Text_3422553666 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3422553654, foregroundColor: nimCopy(null, textColor_3422553664, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(headerPanel_3422553665, headerPart1Text_3422553666);
    headerPart2Text_3422553667 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), pivot: vec2_2164261725(1.0, 0.0), lastHierarchyChange: frameIndex_3422553654, foregroundColor: nimCopy(null, textColor_3422553664, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(headerPanel_3422553665, headerPart2Text_3422553667);
    contentPanel_3422553668 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), top: totalLineHeight_3422553656, lastHierarchyChange: frameIndex_3422553654, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    contentPanel_3422553668.maskContent = true;
    add_2785018080(widget_3422553653, contentPanel_3422553668);
    layoutWidget_2785018531(headerPanel_3422553665, widget_3422553653.lastBounds, frameIndex_3422553654, app_3422553652.platform.layoutOptions);
    layoutWidget_2785018531(contentPanel_3422553668, widget_3422553653.lastBounds, frameIndex_3422553654, app_3422553652.platform.layoutOptions);
    }
    else {
      headerPanel_3422553665 = HEX5BHEX5D_2785018033(widget_3422553653, 0);
      headerPart1Text_3422553666 = HEX5BHEX5D_2785018033(headerPanel_3422553665, 0);
      headerPart2Text_3422553667 = HEX5BHEX5D_2785018033(headerPanel_3422553665, 1);
      contentPanel_3422553668 = HEX5BHEX5D_2785018033(widget_3422553653, 1);
    }
    
    if (self_3422553651.renderHeader) {
    headerPanel_3422553665.bottom = totalLineHeight_3422553656;
    contentPanel_3422553668.top = totalLineHeight_3422553656;
    if (active_2415919218(self_3422553651)) {
    Temporary1 = color_3439329450(app_3422553652.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3439329450(app_3422553652.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3422553679 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785018361(headerPanel_3422553665, color_3422553679, frameIndex_3422553654);
    var workspaceName_3422553722 = get_2348810295(map_1291854416(self_3422553651.document.workspace, HEX3Aanonymous_3422553684), []);
    if (((self_3422553651.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3422553651.currentMode;
    }
    
    var mode_3422553723 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3422553728 = [mnewString(0)];
    fmtRes_3422553728[0].push.apply(fmtRes_3422553728[0], [32]);;
    formatValue_721420459(fmtRes_3422553728, 0, mode_3422553723, []);
    fmtRes_3422553728[0].push.apply(fmtRes_3422553728[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3422553728, 0, self_3422553651.document.filename, []);
    fmtRes_3422553728[0].push.apply(fmtRes_3422553728[0], [32]);;
    formatValue_721420459(fmtRes_3422553728, 0, workspaceName_3422553722, []);
    fmtRes_3422553728[0].push.apply(fmtRes_3422553728[0], [32]);;
    headerPart1Text_3422553666.text = nimCopy(null, fmtRes_3422553728[0], NTI33554449);
    var fmtRes_3422553733 = [mnewString(0)];
    fmtRes_3422553733[0].push.apply(fmtRes_3422553733[0], [32]);;
    formatValue_2701131945(fmtRes_3422553733, 0, self_3422553651.id, []);
    fmtRes_3422553733[0].push.apply(fmtRes_3422553733[0], [32]);;
    headerPart2Text_3422553667.text = nimCopy(null, fmtRes_3422553733[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785018369(headerPanel_3422553665, frameIndex_3422553654);
    }
    else {
      headerPanel_3422553665.bottom = 0.0;
      contentPanel_3422553668.top = 0.0;
    }
    
    self_3422553651.lastBounds = nimCopy(self_3422553651.lastBounds, contentPanel_3422553668.lastBounds, NTI2147483653);
    self_3422553651.lastContentBounds = nimCopy(self_3422553651.lastContentBounds, widget_3422553653.lastBounds, NTI2147483653);
    widget_3422553653.lastHierarchyChange = nimMax(widget_3422553653.lastHierarchyChange, headerPanel_3422553665.lastHierarchyChange);
    if (active_2415919218(self_3422553651)) {
    Temporary3 = color_3439329450(app_3422553652.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3439329450(app_3422553652.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785018361(contentPanel_3422553668, Temporary3, frameIndex_3422553654);
    if ((self_3422553651.textEditor == null)) {
    Temporary4 = false;
    }
    else {
    Temporary4 = dirty_2415919140(self_3422553651.textEditor);
    }
    
    var textEditorDirty_3422553752 = Temporary4;
      if (changed_2785018532(contentPanel_3422553668, frameIndex_3422553654)) Temporary7 = true; else {        Temporary7 = dirty_2415919140(self_3422553651);      }      if (Temporary7) Temporary6 = true; else {        Temporary6 = app_3422553652.platform.redrawEverything;      }      if (Temporary6) Temporary5 = true; else {        Temporary5 = textEditorDirty_3422553752;      }    if (!(Temporary5)) {
    break BeforeRet;
    }
    
    resetDirty_2415919213(self_3422553651);
    var timer_3422553753 = startTimer_2080374869();
    setLen_2785018073(contentPanel_3422553668, 0);
    updateBaseIndexAndScrollOffset_3422552153(self_3422553651, app_3422553652, contentPanel_3422553668);
    if (self_3422553651.lastLayouts.length < 0) { for (var i = self_3422553651.lastLayouts.length ; i < 0 ; ++i) self_3422553651.lastLayouts.push({Field0: null, Field1: ({x: 0.0, y: 0.0})}); }
               else { self_3422553651.lastLayouts.length = 0; };
    var rendered_3422553758 = 0;
    var replacements_3422553763 = [initTable_3422552168(32)];
    if ((!((self_3422553651.currentlyEditedNode == null)) || !(HEX3DHEX3D_2046820626(self_3422553651.currentlyEditedSymbol, null_2046820646)))) {
    if ((self_3422553651.textEditorWidget == null)) {
    self_3422553651.textEditorWidget = {sizeToContent: true, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    }
    
    activeHEX3D_2415919215(self_3422553651.textEditor, true);
    markDirty_2415919143(self_3422553651.textEditor);
    updateWidget_3405774859(self_3422553651.textEditor, app_3422553652, self_3422553651.textEditorWidget, frameIndex_3422553654);
    layoutWidget_2785018531(self_3422553651.textEditorWidget, rect_2147483666(0.0, 0.0, 0.0, 0.0), frameIndex_3422553654, app_3422553652.platform.layoutOptions);
    }
    else {
      self_3422553651.textEditorWidget = null;
    }
    
    if (!((self_3422553651.currentlyEditedNode == null))) {
    HEX5BHEX5DHEX3D_3422553813(replacements_3422553763[0], self_3422553651.currentlyEditedNode.id, {id: newId_2046820597(), bounds: nimCopy(null, self_3422553651.textEditorWidget.lastBounds, NTI2147483653), widgetTemplate: self_3422553651.textEditorWidget, mhash: 0, parent: null, orientation: 0, node: null, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, cloneWidget: false});
    }
    else {
    if (!(HEX3DHEX3D_2046820626(self_3422553651.currentlyEditedSymbol, null_2046820646))) {
    HEX5BHEX5DHEX3D_3422553813(replacements_3422553763[0], self_3422553651.currentlyEditedSymbol, {id: newId_2046820597(), bounds: nimCopy(null, self_3422553651.textEditorWidget.lastBounds, NTI2147483653), widgetTemplate: self_3422553651.textEditorWidget, mhash: 0, parent: null, orientation: 0, node: null, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, cloneWidget: false});
    }
    }
    var selectedNode_3422554888 = node_2969569752(self_3422553651);
    var indent_3422554898 = getOption_2818583576(app_3422553652, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_3422554908 = getOption_2818583615(app_3422553652, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_3422554918 = getOption_2818583615(app_3422553652, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    var offset_3422554919 = vec2_2164261725(0.0, self_3422553651.scrollOffset);
    Label8: {
      var i_3422554924 = 0;
      var colontmp__536872918 = 0;
      colontmp__536872918 = len_3003121752(self_3422553651.document.rootNode);
      var i_536872919 = self_3422553651.previousBaseIndex;
      Label9: {
          Label10: while (true) {
          if (!(i_536872919 < colontmp__536872918)) break Label10;
            i_3422554924 = i_536872919;
            var node_3422554925 = HEX5BHEX5D_3003121748(self_3422553651.document.rootNode, i_3422554924);
            var input_3422554933 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: node_3422554925, selectedNode: nimCopy(null, selectedNode_3422554888.id, NTI2046820355), replacements: nimCopy(null, replacements_3422553763[0], NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3422554926, indent: indent_3422554898, renderDivisionVertically: verticalDivision_3422554918, inlineBlocks: inlineBlocks_3422554908, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
            var layout_3422554934 = computeNodeLayout_3019934745(ctx_2969567289, input_3422554933, true);
            if ((contentPanel_3422553668.lastBounds.h < (bounds_3087009979(layout_3422554934).y + offset_3422554919.y))) {
            break Label8;
            }
            
            renderVisualNodeLayout_3422552656(self_3422553651, app_3422553652, node_3422554925, contentPanel_3422553668.lastBounds, layout_3422554934, offset_3422554919, contentPanel_3422553668, frameIndex_3422553654);
            HEX2BHEX3D_2147483761(offset_3422554919, "y", (bounds_3087009979(layout_3422554934).h + totalLineHeight_3422553656));
            rendered_3422553758 = addInt(rendered_3422553758, 1);
            i_536872919 = addInt(i_536872919, 1);
          }
      };
    };
    offset_3422554919 = nimCopy(offset_3422554919, vec2_2164261725(0.0, self_3422553651.scrollOffset), NTI2164261152);
    Label11: {
      var k_3422554948 = 0;
      var res_536872922 = 1;
      Label12: {
          Label13: while (true) {
          if (!(res_536872922 <= self_3422553651.previousBaseIndex)) break Label13;
            k_3422554948 = res_536872922;
            var i_3422554949 = subInt(self_3422553651.previousBaseIndex, k_3422554948);
            var node_3422554950 = HEX5BHEX5D_3003121748(self_3422553651.document.rootNode, i_3422554949);
            var input_3422554958 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: node_3422554950, selectedNode: nimCopy(null, selectedNode_3422554888.id, NTI2046820355), replacements: nimCopy(null, replacements_3422553763[0], NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3422554951, indent: indent_3422554898, renderDivisionVertically: verticalDivision_3422554918, inlineBlocks: inlineBlocks_3422554908, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
            var layout_3422554959 = computeNodeLayout_3019934745(ctx_2969567289, input_3422554958, true);
            if ((((bounds_3087009979(layout_3422554959).y + bounds_3087009979(layout_3422554959).h) + offset_3422554919.y) < 0.0)) {
            break Label11;
            }
            
            HEX2DHEX3D_2634022922(offset_3422554919, "y", (bounds_3087009979(layout_3422554959).h + totalLineHeight_3422553656));
            renderVisualNodeLayout_3422552656(self_3422553651, app_3422553652, node_3422554950, contentPanel_3422553668.lastBounds, layout_3422554959, offset_3422554919, contentPanel_3422553668, frameIndex_3422553654);
            rendered_3422553758 = addInt(rendered_3422553758, 1);
            res_536872922 = addInt(res_536872922, 1);
          }
      };
    };
    renderCompletions_3422553337(self_3422553651, app_3422553652, contentPanel_3422553668, frameIndex_3422553654);
    contentPanel_3422553668.lastHierarchyChange = frameIndex_3422553654;
    widget_3422553653.lastHierarchyChange = nimMax(widget_3422553653.lastHierarchyChange, contentPanel_3422553668.lastHierarchyChange);
    self_3422553651.lastContentBounds = nimCopy(self_3422553651.lastContentBounds, contentPanel_3422553668.lastBounds, NTI2147483653);
  };

  
}

function HEX24_2449473863(selection_2449473864) {
  var result_2449473865 = [];

  BeforeRet: {
    result_2449473865 = nimCopy(null, (HEX24_2449473860(selection_2449473864.Field0) || []).concat([45] || [],HEX24_2449473860(selection_2449473864.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2449473865;

}

function formatValue_2818572415(result_2818572417, result_2818572417_Idx, value_2818572418, specifier_2818572419) {
    formatValue_721420459(result_2818572417, result_2818572417_Idx, HEX24_2449473863(value_2818572418), specifier_2818572419);

  
}

function initTable_3439329915(initialSize_3439329918) {
  var result_3439329919 = ({data: [], counter: 0});

    var correctSizeHEX60gensym14_3439329921 = slotsNeeded_1308622891(chckRange(initialSize_3439329918, 0, 2147483647));
    result_3439329919.counter = 0;
    result_3439329919.data = new Array(chckRange(correctSizeHEX60gensym14_3439329921, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym14_3439329921, 0, 2147483647) ; ++i) { result_3439329919.data[i] = {Field0: 0, Field1: 0, Field2: []}; }
  return result_3439329919;

}

function mgetOrPut_3439329967(t_3439329970, key_3439329971, val_3439329972) {
  var result_3439329973 = null;
  var result_3439329973_Idx = 0;

    if (((t_3439329970.data).length == 0)) {
    var correctSizeHEX60gensym17_3439330022 = slotsNeeded_1308622891(32);
    t_3439329970.counter = 0;
    t_3439329970.data = new Array(chckRange(correctSizeHEX60gensym17_3439330022, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym17_3439330022, 0, 2147483647) ; ++i) { t_3439329970.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3439330027 = [0];
    var index_3439330034 = rawGet_2818581106(t_3439329970, key_3439329971, hc_3439330027, 0);
    if ((index_3439330034 < 0)) {
    if (((t_3439329970.data).length == 0)) {
    var correctSizeHEX60gensym20_3439330083 = slotsNeeded_1308622891(32);
    t_3439329970.counter = 0;
    t_3439329970.data = new Array(chckRange(correctSizeHEX60gensym20_3439330083, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_3439330083, 0, 2147483647) ; ++i) { t_3439329970.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    if (mustRehash_2818581582(t_3439329970)) {
    enlarge_2818581785(t_3439329970);
    index_3439330034 = rawGetKnownHC_2818582432(t_3439329970, key_3439329971, hc_3439330027[0]);
    }
    
    index_3439330034 = subInt(-1, index_3439330034);
    rawInsert_2818582191(t_3439329970, t_3439329970, "data", key_3439329971, val_3439329972, hc_3439330027[0], index_3439330034);
    t_3439329970.counter = addInt(t_3439329970.counter, 1);
    }
    
    result_3439329973 = t_3439329970.data[chckIndx(index_3439330034, 0, (t_3439329970.data).length - 1)]; result_3439329973_Idx = "Field2";

  return [result_3439329973, result_3439329973_Idx];

}

function isSome_3439330254(self_3439330256) {
  var result_3439330257 = false;

    result_3439330257 = self_3439330256.has;

  return result_3439330257;

}

function get_3439330245(self_3439330247, otherwise_3439330248) {
    var Temporary1;

  var result_3439330249 = 0;

    if (isSome_3439330254(self_3439330247)) {
    Temporary1 = self_3439330247.val;
    }
    else {
    Temporary1 = otherwise_3439330248;
    }
    
    result_3439330249 = Temporary1;

  return result_3439330249;

}

function parseEnum_3439330216(s_3439330218, default_3439330219) {
    var Temporary1;

  var result_3439330220 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3439330218))) {
    case "none":
      Temporary1 = 0;
      break;
    case "Absolute":
      Temporary1 = 1;
      break;
    case "relative":
      Temporary1 = 2;
      break;
    default: 
      Temporary1 = default_3439330219;
      break;
    }
    result_3439330220 = Temporary1;

  return result_3439330220;

}

function getOption_3439330190(editor_3439330192, path_3439330193, default_3439330194) {
  var result_3439330200 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_3439330192 == null)) {
      result_3439330200 = default_3439330194;
      break BeforeRet;
      }
      
      var nodeHEX60gensym22_3439330212 = HEX7BHEX7D_1627393316(editor_3439330192.options, nsuSplitString(path_3439330193, [46], -1));
      if ((nodeHEX60gensym22_3439330212 == null)) {
      result_3439330200 = default_3439330194;
      break BeforeRet;
      }
      
    };
    result_3439330200 = parseEnum_3439330216(getStr_1627390106(nodeHEX60gensym22_3439330212, []), default_3439330194);
    break BeforeRet;
  };

  return result_3439330200;

}

function color_3439330295(theme_3439330297, names_3439330298, default_3439330299) {
  var result_3439330300 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3439330304 = [];
      var i_536873035 = 0;
      var L_536873036 = (names_3439330298).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873035 < L_536873036)) break Label3;
            name_3439330304 = names_3439330298[chckIndx(i_536873035, 0, (names_3439330298).length - 1)];
            if (contains_3221226054(theme_3439330297.colors, name_3439330304)) {
            result_3439330300 = nimCopy(result_3439330300, HEX5BHEX5D_3221226144(theme_3439330297.colors, name_3439330304), NTI2550136835);
            break BeforeRet;
            }
            
            i_536873035 = addInt(i_536873035, 1);
            if (!(((names_3439330298).length == L_536873036))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3439330300 = nimCopy(result_3439330300, color_2634022945(default_3439330299), NTI2550136835);
    break BeforeRet;
  };

  return result_3439330300;

}

function color_2634022963(c_2634022964) {
  var result_2634022965 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022965.r = (c_2634022964.r / 255.0);
    result_2634022965.g = (c_2634022964.g / 255.0);
    result_2634022965.b = (c_2634022964.b / 255.0);
    result_2634022965.a = (c_2634022964.a / 255.0);

  return result_2634022965;

}

function color_3439330415(theme_3439330417, names_3439330418, default_3439330419) {
  var result_3439330420 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3439330424 = [];
      var i_536873039 = 0;
      var L_536873040 = (names_3439330418).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873039 < L_536873040)) break Label3;
            name_3439330424 = names_3439330418[chckIndx(i_536873039, 0, (names_3439330418).length - 1)];
            if (contains_3221226054(theme_3439330417.colors, name_3439330424)) {
            result_3439330420 = nimCopy(result_3439330420, HEX5BHEX5D_3221226144(theme_3439330417.colors, name_3439330424), NTI2550136835);
            break BeforeRet;
            }
            
            i_536873039 = addInt(i_536873039, 1);
            if (!(((names_3439330418).length == L_536873040))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3439330420 = nimCopy(result_3439330420, color_2634022963(default_3439330419), NTI2550136835);
    break BeforeRet;
  };

  return result_3439330420;

}

function rgba_2550136933(r_2550136934, g_2550136935, b_2550136936, a_2550136937) {
  var result_2550136938 = ({r: 0, g: 0, b: 0, a: 0});

    result_2550136938 = nimCopy(result_2550136938, {r: r_2550136934, g: g_2550136935, b: b_2550136936, a: a_2550136937}, NTI2550136837);

  return result_2550136938;

}

function rawGet_2818574416(t_2818574419, key_2818574420, hc_2818574421, hc_2818574421_Idx) {
  var result_2818574422 = 0;

  BeforeRet: {
    hc_2818574421[hc_2818574421_Idx] = hash_1325400236(key_2818574420);
    if ((hc_2818574421[hc_2818574421_Idx] == 0)) {
    hc_2818574421[hc_2818574421_Idx] = 314159265;
    }
    
    if (((t_2818574419.data).length == 0)) {
    result_2818574422 = -1;
    break BeforeRet;
    }
    
    var h_2818574492 = (hc_2818574421[hc_2818574421_Idx] & (t_2818574419.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818574419.data[chckIndx(h_2818574492, 0, (t_2818574419.data).length - 1)].Field0)) break Label2;
          if (((t_2818574419.data[chckIndx(h_2818574492, 0, (t_2818574419.data).length - 1)].Field0 == hc_2818574421[hc_2818574421_Idx]) && (t_2818574419.data[chckIndx(h_2818574492, 0, (t_2818574419.data).length - 1)].Field1 == key_2818574420))) {
          result_2818574422 = h_2818574492;
          break BeforeRet;
          }
          
          h_2818574492 = nextTry_1308622883(h_2818574492, (t_2818574419.data).length - 1);
        }
    };
    result_2818574422 = subInt(-1, h_2818574492);
  };

  return result_2818574422;

}

function hasKey_2818574409(t_2818574412, key_2818574413) {
  var result_2818574414 = false;

    var hc_2818574415 = [0];
    result_2818574414 = (0 <= rawGet_2818574416(t_2818574412, key_2818574413, hc_2818574415, 0));

  return result_2818574414;

}

function contains_2818574403(t_2818574406, key_2818574407) {
  var result_2818574408 = false;

  BeforeRet: {
    result_2818574408 = hasKey_2818574409(t_2818574406, key_2818574407);
    break BeforeRet;
  };

  return result_2818574408;

}

function HEX5BHEX5D_2818574822(t_2818574825, key_2818574826) {
  var result_2818574827 = null;
  var result_2818574827_Idx = 0;

    var hcHEX60gensym22_2818574828 = [0];
    var indexHEX60gensym22_2818574835 = rawGet_2818574416(t_2818574825, key_2818574826, hcHEX60gensym22_2818574828, 0);
    if ((0 <= indexHEX60gensym22_2818574835)) {
    result_2818574827 = t_2818574825.data[chckIndx(indexHEX60gensym22_2818574835, 0, (t_2818574825.data).length - 1)]; result_2818574827_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_2818574826);
    }
    

  return [result_2818574827, result_2818574827_Idx];

}

function mustRehash_2818575209(t_2818575211) {
  var result_2818575212 = false;

    if (!((t_2818575211.counter < (t_2818575211.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818575212 = ((mulInt((t_2818575211.data).length, 2) < mulInt(t_2818575211.counter, 3)) || (subInt((t_2818575211.data).length, t_2818575211.counter) < 4));

  return result_2818575212;

}

function rawInsert_2818575818(t_2818575822, data_2818575823, data_2818575823_Idx, key_2818575824, val_2818575825, hc_2818575826, h_2818575827) {
    data_2818575823[data_2818575823_Idx][chckIndx(h_2818575827, 0, (data_2818575823[data_2818575823_Idx]).length - 1)].Field1 = key_2818575824;
    data_2818575823[data_2818575823_Idx][chckIndx(h_2818575827, 0, (data_2818575823[data_2818575823_Idx]).length - 1)].Field2 = val_2818575825;
    data_2818575823[data_2818575823_Idx][chckIndx(h_2818575827, 0, (data_2818575823[data_2818575823_Idx]).length - 1)].Field0 = hc_2818575826;

  
}

function enlarge_2818575412(t_2818575415) {
    var n_2818575418 = [];
    n_2818575418 = new Array(chckRange(mulInt((t_2818575415.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818575415.data).length, 2), 0, 2147483647) ; ++i) { n_2818575418[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2818575415.data; t_2818575415.data = n_2818575418; n_2818575418 = Temporary1;    Label2: {
      var i_2818575498 = 0;
      var colontmp__536873069 = 0;
      colontmp__536873069 = (n_2818575418).length - 1;
      var res_536873070 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536873070 <= colontmp__536873069)) break Label4;
            i_2818575498 = res_536873070;
            var eh_2818575576 = n_2818575418[chckIndx(i_2818575498, 0, (n_2818575418).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818575576)) {
            var j_2818575580 = (eh_2818575576 & (t_2818575415.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818575415.data[chckIndx(j_2818575580, 0, (t_2818575415.data).length - 1)].Field0)) break Label6;
                  j_2818575580 = nextTry_1308622883(j_2818575580, (t_2818575415.data).length - 1);
                }
            };
            rawInsert_2818575818(t_2818575415, t_2818575415, "data", n_2818575418[chckIndx(i_2818575498, 0, (n_2818575418).length - 1)].Field1, n_2818575418[chckIndx(i_2818575498, 0, (n_2818575418).length - 1)].Field2, eh_2818575576, j_2818575580);
            }
            
            res_536873070 = addInt(res_536873070, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818576059(t_2818576062, key_2818576063, hc_2818576064) {
  var result_2818576065 = 0;

  BeforeRet: {
    if (((t_2818576062.data).length == 0)) {
    result_2818576065 = -1;
    break BeforeRet;
    }
    
    var h_2818576132 = (hc_2818576064 & (t_2818576062.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818576062.data[chckIndx(h_2818576132, 0, (t_2818576062.data).length - 1)].Field0)) break Label2;
          if (((t_2818576062.data[chckIndx(h_2818576132, 0, (t_2818576062.data).length - 1)].Field0 == hc_2818576064) && (t_2818576062.data[chckIndx(h_2818576132, 0, (t_2818576062.data).length - 1)].Field1 == key_2818576063))) {
          result_2818576065 = h_2818576132;
          break BeforeRet;
          }
          
          h_2818576132 = nextTry_1308622883(h_2818576132, (t_2818576062.data).length - 1);
        }
    };
    result_2818576065 = subInt(-1, h_2818576132);
  };

  return result_2818576065;

}

function HEX5BHEX5DHEX3D_2818574980(t_2818574983, key_2818574984, val_2818574985) {
    if (((t_2818574983.data).length == 0)) {
    var correctSizeHEX60gensym43_2818575050 = slotsNeeded_1308622891(32);
    t_2818574983.counter = 0;
    t_2818574983.data = new Array(chckRange(correctSizeHEX60gensym43_2818575050, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym43_2818575050, 0, 2147483647) ; ++i) { t_2818574983.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2818575055 = [0];
    var index_2818575062 = rawGet_2818574416(t_2818574983, key_2818574984, hc_2818575055, 0);
    if ((0 <= index_2818575062)) {
    t_2818574983.data[chckIndx(index_2818575062, 0, (t_2818574983.data).length - 1)].Field2 = val_2818574985;
    }
    else {
      if (((t_2818574983.data).length == 0)) {
      var correctSizeHEX60gensym46_2818575204 = slotsNeeded_1308622891(32);
      t_2818574983.counter = 0;
      t_2818574983.data = new Array(chckRange(correctSizeHEX60gensym46_2818575204, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym46_2818575204, 0, 2147483647) ; ++i) { t_2818574983.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2818575209(t_2818574983)) {
      enlarge_2818575412(t_2818574983);
      index_2818575062 = rawGetKnownHC_2818576059(t_2818574983, key_2818574984, hc_2818575055[0]);
      }
      
      index_2818575062 = subInt(-1, index_2818575062);
      rawInsert_2818575818(t_2818574983, t_2818574983, "data", key_2818574984, val_2818574985, hc_2818575055[0], index_2818575062);
      t_2818574983.counter = addInt(t_2818574983.counter, 1);
    }
    

  
}

function initTable_2818576385(initialSize_2818576388) {
  var result_2818576394 = ({data: [], counter: 0});

    var correctSizeHEX60gensym54_2818576396 = slotsNeeded_1308622891(chckRange(initialSize_2818576388, 0, 2147483647));
    result_2818576394.counter = 0;
    result_2818576394.data = new Array(chckRange(correctSizeHEX60gensym54_2818576396, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym54_2818576396, 0, 2147483647) ; ++i) { result_2818576394.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }
  return result_2818576394;

}

function matches_2885681272(self_2885681273, node_2885681274, selection_2885681275) {
  var result_2885681276 = [];

  BeforeRet: {
    result_2885681276 = nimCopy(null, self_2885681273.matches(node_2885681274, {row: selection_2885681275.Field0.Field0, column: selection_2885681275.Field0.Field1, m_type: NTI2885681166}, {row: selection_2885681275.Field1.Field0, column: selection_2885681275.Field1.Field1, m_type: NTI2885681166}), NTI2885681249);
    break BeforeRet;
  };

  return result_2885681276;

}

function rawGet_2818576588(t_2818576591, key_2818576592, hc_2818576593, hc_2818576593_Idx) {
  var result_2818576594 = 0;

  BeforeRet: {
    hc_2818576593[hc_2818576593_Idx] = hash_1325400491(key_2818576592);
    if ((hc_2818576593[hc_2818576593_Idx] == 0)) {
    hc_2818576593[hc_2818576593_Idx] = 314159265;
    }
    
    if (((t_2818576591.data).length == 0)) {
    result_2818576594 = -1;
    break BeforeRet;
    }
    
    var h_2818576662 = (hc_2818576593[hc_2818576593_Idx] & (t_2818576591.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818576591.data[chckIndx(h_2818576662, 0, (t_2818576591.data).length - 1)].Field0)) break Label2;
          if (((t_2818576591.data[chckIndx(h_2818576662, 0, (t_2818576591.data).length - 1)].Field0 == hc_2818576593[hc_2818576593_Idx]) && eqStrings(t_2818576591.data[chckIndx(h_2818576662, 0, (t_2818576591.data).length - 1)].Field1, key_2818576592))) {
          result_2818576594 = h_2818576662;
          break BeforeRet;
          }
          
          h_2818576662 = nextTry_1308622883(h_2818576662, (t_2818576591.data).length - 1);
        }
    };
    result_2818576594 = subInt(-1, h_2818576662);
  };

  return result_2818576594;

}

function hasKey_2818576581(t_2818576584, key_2818576585) {
  var result_2818576586 = false;

    var hc_2818576587 = [0];
    result_2818576586 = (0 <= rawGet_2818576588(t_2818576584, key_2818576585, hc_2818576587, 0));

  return result_2818576586;

}

function contains_2818576575(t_2818576578, key_2818576579) {
  var result_2818576580 = false;

  BeforeRet: {
    result_2818576580 = hasKey_2818576581(t_2818576578, key_2818576579);
    break BeforeRet;
  };

  return result_2818576580;

}

function HEX5BHEX5D_2818576983(t_2818576986, key_2818576987) {
  var result_2818576988 = null;

    var hcHEX60gensym22_2818576989 = [0];
    var indexHEX60gensym22_2818576996 = rawGet_2818576588(t_2818576986, key_2818576987, hcHEX60gensym22_2818576989, 0);
    if ((0 <= indexHEX60gensym22_2818576996)) {
    result_2818576988 = t_2818576986.data[chckIndx(indexHEX60gensym22_2818576996, 0, (t_2818576986.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2818576987);
    }
    

  return result_2818576988;

}

function mustRehash_2818577366(t_2818577368) {
  var result_2818577369 = false;

    if (!((t_2818577368.counter < (t_2818577368.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818577369 = ((mulInt((t_2818577368.data).length, 2) < mulInt(t_2818577368.counter, 3)) || (subInt((t_2818577368.data).length, t_2818577368.counter) < 4));

  return result_2818577369;

}

function rawInsert_2818577975(t_2818577979, data_2818577980, data_2818577980_Idx, key_2818577981, val_2818577982, hc_2818577983, h_2818577984) {
    data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field1 = nimCopy(null, key_2818577981, NTI33554449);
    data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field2 = nimCopy(data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field2, val_2818577982, NTI2852126723);
    data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field0 = hc_2818577983;

  
}

function enlarge_2818577569(t_2818577572) {
    var n_2818577575 = [];
    n_2818577575 = new Array(chckRange(mulInt((t_2818577572.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818577572.data).length, 2), 0, 2147483647) ; ++i) { n_2818577575[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    var Temporary1 = t_2818577572.data; t_2818577572.data = n_2818577575; n_2818577575 = Temporary1;    Label2: {
      var i_2818577655 = 0;
      var colontmp__536873076 = 0;
      colontmp__536873076 = (n_2818577575).length - 1;
      var res_536873077 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536873077 <= colontmp__536873076)) break Label4;
            i_2818577655 = res_536873077;
            var eh_2818577733 = n_2818577575[chckIndx(i_2818577655, 0, (n_2818577575).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818577733)) {
            var j_2818577737 = (eh_2818577733 & (t_2818577572.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818577572.data[chckIndx(j_2818577737, 0, (t_2818577572.data).length - 1)].Field0)) break Label6;
                  j_2818577737 = nextTry_1308622883(j_2818577737, (t_2818577572.data).length - 1);
                }
            };
            rawInsert_2818577975(t_2818577572, t_2818577572, "data", n_2818577575[chckIndx(i_2818577655, 0, (n_2818577575).length - 1)].Field1, n_2818577575[chckIndx(i_2818577655, 0, (n_2818577575).length - 1)].Field2, eh_2818577733, j_2818577737);
            }
            
            res_536873077 = addInt(res_536873077, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818578216(t_2818578219, key_2818578220, hc_2818578221) {
  var result_2818578222 = 0;

  BeforeRet: {
    if (((t_2818578219.data).length == 0)) {
    result_2818578222 = -1;
    break BeforeRet;
    }
    
    var h_2818578289 = (hc_2818578221 & (t_2818578219.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818578219.data[chckIndx(h_2818578289, 0, (t_2818578219.data).length - 1)].Field0)) break Label2;
          if (((t_2818578219.data[chckIndx(h_2818578289, 0, (t_2818578219.data).length - 1)].Field0 == hc_2818578221) && eqStrings(t_2818578219.data[chckIndx(h_2818578289, 0, (t_2818578219.data).length - 1)].Field1, key_2818578220))) {
          result_2818578222 = h_2818578289;
          break BeforeRet;
          }
          
          h_2818578289 = nextTry_1308622883(h_2818578289, (t_2818578219.data).length - 1);
        }
    };
    result_2818578222 = subInt(-1, h_2818578289);
  };

  return result_2818578222;

}

function HEX5BHEX5DHEX3D_2818577137(t_2818577140, key_2818577141, val_2818577142) {
    if (((t_2818577140.data).length == 0)) {
    var correctSizeHEX60gensym68_2818577207 = slotsNeeded_1308622891(32);
    t_2818577140.counter = 0;
    t_2818577140.data = new Array(chckRange(correctSizeHEX60gensym68_2818577207, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym68_2818577207, 0, 2147483647) ; ++i) { t_2818577140.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    }
    
    var hc_2818577212 = [0];
    var index_2818577219 = rawGet_2818576588(t_2818577140, key_2818577141, hc_2818577212, 0);
    if ((0 <= index_2818577219)) {
    t_2818577140.data[chckIndx(index_2818577219, 0, (t_2818577140.data).length - 1)].Field2 = nimCopy(t_2818577140.data[chckIndx(index_2818577219, 0, (t_2818577140.data).length - 1)].Field2, val_2818577142, NTI2852126723);
    }
    else {
      if (((t_2818577140.data).length == 0)) {
      var correctSizeHEX60gensym71_2818577361 = slotsNeeded_1308622891(32);
      t_2818577140.counter = 0;
      t_2818577140.data = new Array(chckRange(correctSizeHEX60gensym71_2818577361, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym71_2818577361, 0, 2147483647) ; ++i) { t_2818577140.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }      }
      
      if (mustRehash_2818577366(t_2818577140)) {
      enlarge_2818577569(t_2818577140);
      index_2818577219 = rawGetKnownHC_2818578216(t_2818577140, key_2818577141, hc_2818577212[0]);
      }
      
      index_2818577219 = subInt(-1, index_2818577219);
      rawInsert_2818577975(t_2818577140, t_2818577140, "data", key_2818577141, val_2818577142, hc_2818577212[0], index_2818577219);
      t_2818577140.counter = addInt(t_2818577140.counter, 1);
    }
    

  
}

function HEX24_2885681319(node_2885681320) {
  var result_2885681321 = [];

  BeforeRet: {
    result_2885681321 = nimCopy(null, cstrToNimstr(node_2885681320.toString()), NTI33554449);
    break BeforeRet;
  };

  return result_2885681321;

}

function formatValue_2818578766(result_2818578768, result_2818578768_Idx, value_2818578769, specifier_2818578770) {
    formatValue_721420459(result_2818578768, result_2818578768_Idx, HEX24_2885681319(value_2818578769), specifier_2818578770);

  
}

function insert_2818574279(x_2818574281, x_2818574281_Idx, item_2818574282, i_2818574283) {
    var it_2818574303 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
    x_2818574281[x_2818574281_Idx] = x_2818574281[x_2818574281_Idx] || []; x_2818574281[x_2818574281_Idx].splice(i_2818574283, 0, it_2818574303);
    x_2818574281[x_2818574281_Idx][chckIndx(i_2818574283, 0, (x_2818574281[x_2818574281_Idx]).length - 1)] = nimCopy(x_2818574281[x_2818574281_Idx][chckIndx(i_2818574283, 0, (x_2818574281[x_2818574281_Idx]).length - 1)], item_2818574282, NTI2818572422);

  
}

function splitAt_2818574217(line_2818574218, line_2818574218_Idx, index_2818574219) {
    var index_2818574220 = index_2818574219;
    var i_2818574221 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_2818574221 < (line_2818574218[line_2818574218_Idx].parts).length) && ((line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text).length <= index_2818574220))) break Label2;
          index_2818574220 = subInt(index_2818574220, (line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text).length);
          i_2818574221 = addInt(i_2818574221, 1);
        }
    };
    if ((((i_2818574221 < (line_2818574218[line_2818574218_Idx].parts).length) && !((index_2818574220 == 0))) && !((index_2818574220 == (line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text).length)))) {
    var copy_2818574236 = nimCopy(null, line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)], NTI2818572422);
    line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text = nimCopy(null, HEX5BHEX5D_855639291(line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text, HEX2EHEX2E_805306418(0, subInt(index_2818574220, 1))), NTI33554449);
    copy_2818574236.text = nimCopy(null, HEX5BHEX5D_855639319(copy_2818574236.text, HEX2EHEX2E_1040187488(index_2818574220, 1)), NTI33554449);
    insert_2818574279(line_2818574218[line_2818574218_Idx], "parts", copy_2818574236, chckRange(addInt(i_2818574221, 1), 0, 2147483647));
    }
    

  
}

function overrideStyle_2818574313(line_2818574314, line_2818574314_Idx, first_2818574315, last_2818574316, scope_2818574317, priority_2818574318) {
    var index_2818574319 = 0;
    Label1: {
      var i_2818574327 = 0;
      var colontmp__536873083 = 0;
      colontmp__536873083 = (line_2818574314[line_2818574314_Idx].parts).length - 1;
      var res_536873084 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536873084 <= colontmp__536873083)) break Label3;
            i_2818574327 = res_536873084;
            if ((((first_2818574315 <= index_2818574319) && (addInt(index_2818574319, (line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].text).length) <= last_2818574316)) && (priority_2818574318 < line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].priority))) {
            line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].scope = nimCopy(null, scope_2818574317, NTI33554449);
            line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].priority = priority_2818574318;
            }
            
            index_2818574319 = addInt(index_2818574319, (line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].text).length);
            res_536873084 = addInt(res_536873084, 1);
          }
      };
    };

  
}

function getStyledText_2818574341(self_2818574342, i_2818574343) {
    var Temporary1;
                                          var Temporary15;
                                          var Temporary16;
                        var Temporary17;
                        var Temporary18;

  var result_2818574344 = [null];

  BeforeRet: {
    if (contains_2818574403(self_2818574342.styledTextCache, i_2818574343)) {
    result_2818574344[0] = (Temporary1 = HEX5BHEX5D_2818574822(self_2818574342.styledTextCache, i_2818574343), Temporary1)[0][Temporary1[1]];
    }
    else {
      var line_2818574925 = nimCopy(null, self_2818574342.lines[chckIndx(i_2818574343, 0, (self_2818574342.lines).length - 1)], NTI33554449);
      result_2818574344[0] = {index: i_2818574343, parts: [{text: nimCopy(null, line_2818574925, NTI33554449), scope: [], priority: 1000000000, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})}]};
      HEX5BHEX5DHEX3D_2818574980(self_2818574342.styledTextCache, i_2818574343, result_2818574344[0]);
      var regexes_2818576410 = [initTable_2818576385(32)];
      if ((((self_2818574342.tsParser == null) || (self_2818574342.highlightQuery == null)) || (self_2818574342.currentTree == null))) {
      break BeforeRet;
      }
      
      Label2: {
        var match_2818576442 = null;
        var colontmp__536873061 = [];
        colontmp__536873061 = matches_2885681272(self_2818574342.highlightQuery, self_2818574342.currentTree.rootNode, {Field0: {Field0: i_2818574343, Field1: 0}, Field1: {Field0: i_2818574343, Field1: (line_2818574925).length}});
        var i_536873063 = 0;
        var L_536873064 = (colontmp__536873061).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536873063 < L_536873064)) break Label4;
              match_2818576442 = colontmp__536873061[chckIndx(i_536873063, 0, (colontmp__536873061).length - 1)];
              var predicates_2818576443 = self_2818574342.highlightQuery.predicatesForPattern(match_2818576442.pattern);
              Label5: {
                var capture_2818576466 = null;
                var colontmp__536873056 = [];
                colontmp__536873056 = match_2818576442.captures;
                var i_536873058 = 0;
                var L_536873059 = (colontmp__536873056).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536873058 < L_536873059)) break Label7;
                      capture_2818576466 = colontmp__536873056[chckIndx(i_536873058, 0, (colontmp__536873056).length - 1)];
                      Label8: {
                        var scope_2818576467 = capture_2818576466.name;
                        var node_2818576468 = capture_2818576466.node;
                        var matches_2818576469 = true;
                        Label9: {
                          var predicate_2818576492 = null;
                          var i_536873053 = 0;
                          var L_536873054 = (predicates_2818576443).length;
                          Label10: {
                              Label11: while (true) {
                              if (!(i_536873053 < L_536873054)) break Label11;
                                predicate_2818576492 = predicates_2818576443[chckIndx(i_536873053, 0, (predicates_2818576443).length - 1)];
                                if (!(matches_2818576469)) {
                                break Label9;
                                }
                                
                                Label12: {
                                  var operand_2818576515 = null;
                                  var colontmp__536873047 = [];
                                  colontmp__536873047 = predicate_2818576492.operands;
                                  var i_536873049 = 0;
                                  var L_536873050 = (colontmp__536873047).length;
                                  Label13: {
                                      Label14: while (true) {
                                      if (!(i_536873049 < L_536873050)) break Label14;
                                        operand_2818576515 = colontmp__536873047[chckIndx(i_536873049, 0, (colontmp__536873047).length - 1)];
                                        var value_2818576516 = cstrToNimstr(operand_2818576515.type);
                                        if (!((operand_2818576515.name == scope_2818576467))) {
                                        matches_2818576469 = false;
                                        break Label12;
                                        }
                                        
                                        switch (toJSStr(cstrToNimstr(predicate_2818576492.operator))) {
                                        case "match?":
                                          if (contains_2818576575(regexes_2818576410[0], value_2818576516)) {
                                          Temporary15 = HEX5BHEX5D_2818576983(regexes_2818576410[0], value_2818576516);
                                          }
                                          else {
                                            var regex_2818577086 = re_2852126779(value_2818576516);
                                            HEX5BHEX5DHEX3D_2818577137(regexes_2818576410[0], value_2818576516, regex_2818577086);
                                          Temporary15 = regex_2818577086;
                                          }
                                          
                                          var regex_2818578542 = nimCopy(null, Temporary15, NTI2852126723);
                                          var nodeText_2818578543 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if (!((matchLen_2852126756(nodeText_2818578543, regex_2818578542, 0) == (nodeText_2818578543).length))) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-match?":
                                          if (contains_2818576575(regexes_2818576410[0], value_2818576516)) {
                                          Temporary16 = HEX5BHEX5D_2818576983(regexes_2818576410[0], value_2818576516);
                                          }
                                          else {
                                            var regex_2818578689 = re_2852126779(value_2818576516);
                                            HEX5BHEX5DHEX3D_2818577137(regexes_2818576410[0], value_2818576516, regex_2818578689);
                                          Temporary16 = regex_2818578689;
                                          }
                                          
                                          var regex_2818578746 = nimCopy(null, Temporary16, NTI2852126723);
                                          var nodeText_2818578747 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if ((matchLen_2852126756(nodeText_2818578747, regex_2818578746, 0) == (nodeText_2818578747).length)) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "eq?":
                                          var nodeText_2818578748 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if (!(eqStrings(nodeText_2818578748, value_2818576516))) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-eq?":
                                          var nodeText_2818578749 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if (eqStrings(nodeText_2818578749, value_2818576516)) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        default: 
                                          var fmtRes_2818578754 = [mnewString(0)];
                                          fmtRes_2818578754[0].push.apply(fmtRes_2818578754[0], [85,110,107,110,111,119,110,32,112,114,101,100,105,99,97,116,101,32,39]);;
                                          add_33556386(fmtRes_2818578754, 0, predicate_2818576492.operator);
                                          fmtRes_2818578754[0].push.apply(fmtRes_2818578754[0], [39]);;
                                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818578754[0], NTI33554449)]);
                                          break;
                                        }
                                        i_536873049 = addInt(i_536873049, 1);
                                        if (!(((colontmp__536873047).length == L_536873050))) {
                                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                        }
                                        
                                      }
                                  };
                                };
                                if (getFlag_1291848874(gEditor, [116,101,120,116,46,112,114,105,110,116,45,109,97,116,99,104,101,115], false)) {
                                var nodeText_2818578755 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                var fmtRes_2818578760 = [mnewString(0)];
                                formatValue_2701131945(fmtRes_2818578760, 0, match_2818576442.pattern, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [58,32,39]);;
                                formatValue_721420459(fmtRes_2818578760, 0, nodeText_2818578755, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [39,32]);;
                                formatValue_2818578766(fmtRes_2818578760, 0, node_2818576468, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [32,40,109,97,116,99,104,101,115,58,32]);;
                                formatValue_2785018306(fmtRes_2818578760, 0, matches_2818576469, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [41]);;
                                log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818578760[0], NTI33554449)]);
                                }
                                
                                i_536873053 = addInt(i_536873053, 1);
                                if (!(((predicates_2818576443).length == L_536873054))) {
                                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          };
                        };
                        if (!(matches_2818576469)) {
                        break Label8;
                        }
                        
                        var nodeRange_2818578776 = getRange_2885681336(node_2818576468);
                        if ((nodeRange_2818578776.Field0.Field0 == i_2818574343)) {
                        splitAt_2818574217(result_2818574344, 0, nodeRange_2818578776.Field0.Field1);
                        }
                        
                        if ((nodeRange_2818578776.Field1.Field0 == i_2818574343)) {
                        splitAt_2818574217(result_2818574344, 0, nodeRange_2818578776.Field1.Field1);
                        }
                        
                        if ((nodeRange_2818578776.Field0.Field0 < i_2818574343)) {
                        Temporary17 = 0;
                        }
                        else {
                        if ((nodeRange_2818578776.Field0.Field0 == i_2818574343)) {
                        Temporary17 = nodeRange_2818578776.Field0.Field1;
                        }
                        else {
                        Temporary17 = (line_2818574925).length;
                        }
                        }
                        var first_2818578777 = Temporary17;
                        if ((nodeRange_2818578776.Field1.Field0 < i_2818574343)) {
                        Temporary18 = 0;
                        }
                        else {
                        if ((nodeRange_2818578776.Field1.Field0 == i_2818574343)) {
                        Temporary18 = nodeRange_2818578776.Field1.Field1;
                        }
                        else {
                        Temporary18 = (line_2818574925).length;
                        }
                        }
                        var last_2818578778 = Temporary18;
                        overrideStyle_2818574313(result_2818574344, 0, first_2818578777, last_2818578778, cstrToNimstr(scope_2818576467), match_2818576442.pattern);
                      };
                      i_536873058 = addInt(i_536873058, 1);
                      if (!(((colontmp__536873056).length == L_536873059))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              i_536873063 = addInt(i_536873063, 1);
              if (!(((colontmp__536873061).length == L_536873064))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };

  return result_2818574344[0];

}

function getOrDefault_3439330610(t_3439330613, key_3439330614, default_3439330615) {
    var Temporary1;

  var result_3439330616 = [];

    var hcHEX60gensym25_3439330619 = [0];
    var indexHEX60gensym25_3439330626 = rawGet_2818581106(t_3439330613, key_3439330614, hcHEX60gensym25_3439330619, 0);
    if ((0 <= indexHEX60gensym25_3439330626)) {
    Temporary1 = t_3439330613.data[chckIndx(indexHEX60gensym25_3439330626, 0, (t_3439330613.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3439330615;
    }
    
    result_3439330616 = nimCopy(null, Temporary1, NTI2818572535);

  return result_3439330616;

}

function map_3439330711(s_3439330714, op_3439330716) {
  var result_3439330717 = [];

    result_3439330717 = new Array(chckRange((s_3439330714).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3439330714).length, 0, 2147483647) ; ++i) { result_3439330717[i] = {Field0: 0, Field1: 0}; }    Label1: {
      var i_3439330732 = 0;
      var colontmp__536873087 = 0;
      colontmp__536873087 = (s_3439330714).length;
      var i_536873088 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873088 < colontmp__536873087)) break Label3;
            i_3439330732 = i_536873088;
            result_3439330717[chckIndx(i_3439330732, 0, (result_3439330717).length - 1)] = nimCopy(result_3439330717[chckIndx(i_3439330732, 0, (result_3439330717).length - 1)], op_3439330716(s_3439330714[chckIndx(i_3439330732, 0, (s_3439330714).length - 1)]), NTI3439329284);
            i_536873088 = addInt(i_536873088, 1);
          }
      };
    };

  return result_3439330717;

}

function clampToLine_3439329297(selection_3439329298, line_3439329299, lineLength_3439329300) {
    var Temporary1;
    var Temporary2;

  var result_3439329303 = {Field0: 0, Field1: 0};

    if ((selection_3439329298.Field0.Field0 < line_3439329299)) {
    Temporary1 = 0;
    }
    else {
    if ((selection_3439329298.Field0.Field0 == line_3439329299)) {
    Temporary1 = selection_3439329298.Field0.Field1;
    }
    else {
    Temporary1 = lineLength_3439329300;
    }
    }
    result_3439329303.Field0 = Temporary1;
    if ((selection_3439329298.Field1.Field0 < line_3439329299)) {
    Temporary2 = 0;
    }
    else {
    if ((selection_3439329298.Field1.Field0 == line_3439329299)) {
    Temporary2 = selection_3439329298.Field1.Field1;
    }
    else {
    Temporary2 = lineLength_3439329300;
    }
    }
    result_3439329303.Field1 = Temporary2;

  return result_3439329303;

}

function len_2818574169(line_2818574170) {
  var result_2818574171 = 0;

    result_2818574171 = 0;
    Label1: {
      var p_2818574194 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
      var i_536873092 = 0;
      var L_536873093 = (line_2818574170.parts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873092 < L_536873093)) break Label3;
            p_2818574194 = line_2818574170.parts[chckIndx(i_536873092, 0, (line_2818574170.parts).length - 1)];
            result_2818574171 = addInt(result_2818574171, (p_2818574194.text).length);
            i_536873092 = addInt(i_536873092, 1);
            if (!(((line_2818574170.parts).length == L_536873093))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818574171;

}

function contains_2449473918(selection_2449473919, cursor_2449473920) {
  var result_2449473921 = false;

    result_2449473921 = (HEX3CHEX3D_2449473882(selection_2449473919.Field0, cursor_2449473920) && HEX3CHEX3D_2449473882(cursor_2449473920, selection_2449473919.Field1));

  return result_2449473921;

}

function renderTextHighlight_3439329304(panel_3439329305, app_3439329306, startOffset_3439329307, endOffset_3439329308, line_3439329309, startIndex_3439329310, selection_3439329311, selectionClamped_3439329314, part_3439329315, color_3439329316, totalLineHeight_3439329317) {
  BeforeRet: {
    var startOffset_3439329318 = Math.floor(startOffset_3439329307);
    var endOffset_3439329319 = Math.ceil(endOffset_3439329308);
    var left_3439329320 = 0.0;
    var right_3439329321 = 0.0;
    if ((((startIndex_3439329310 < selectionClamped_3439329314.Field1) && (selectionClamped_3439329314.Field0 < addInt(startIndex_3439329310, (part_3439329315.text).length))) && (0 < (part_3439329315.text).length))) {
    left_3439329320 = (startOffset_3439329318 + ((nimMax(0, subInt(selectionClamped_3439329314.Field0, startIndex_3439329310)) / ((part_3439329315.text).length - 0.0)) * (endOffset_3439329319 - startOffset_3439329318)));
    right_3439329321 = (startOffset_3439329318 + ((nimMin((part_3439329315.text).length, subInt(selectionClamped_3439329314.Field1, startIndex_3439329310)) / ((part_3439329315.text).length - 0.0)) * (endOffset_3439329319 - startOffset_3439329318)));
    }
    else {
    if (((((part_3439329315.text).length == 0) && contains_2449473918(selection_3439329311, {Field0: line_3439329309, Field1: startIndex_3439329310})) && !(isEmpty_2449473911(selection_3439329311)))) {
    left_3439329320 = startOffset_3439329318;
    right_3439329321 = Math.ceil((startOffset_3439329318 + (charWidth_2768240799(app_3439329306.platform) * 0.5)));
    }
    else {
      break BeforeRet;
    }
    }
    if ((left_3439329320 == right_3439329321)) {
    break BeforeRet;
    }
    
    add_2785018080(panel_3439329305, {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 0.0)}, NTI2785017869), left: left_3439329320, right: right_3439329321, bottom: totalLineHeight_3439329317, fillBackground: true, backgroundColor: nimCopy(null, color_3439329316, NTI2550136835), lastHierarchyChange: panel_3439329305.lastHierarchyChange, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0});
  };

  
}

function renderTextHighlight_3439329322(panel_3439329323, app_3439329324, startOffset_3439329325, endOffset_3439329326, line_3439329327, startIndex_3439329328, selections_3439329329, selectionClamped_3439329332, part_3439329333, color_3439329334, totalLineHeight_3439329335) {
    Label1: {
      var i_3439329343 = 0;
      var colontmp__536873096 = 0;
      colontmp__536873096 = (selections_3439329329).length;
      var i_536873097 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873097 < colontmp__536873096)) break Label3;
            i_3439329343 = i_536873097;
            renderTextHighlight_3439329304(panel_3439329323, app_3439329324, startOffset_3439329325, endOffset_3439329326, line_3439329327, startIndex_3439329328, selections_3439329329[chckIndx(i_3439329343, 0, (selections_3439329329).length - 1)], selectionClamped_3439329332[chckIndx(i_3439329343, 0, (selectionClamped_3439329332).length - 1)], part_3439329333, color_3439329334, totalLineHeight_3439329335);
            i_536873097 = addInt(i_536873097, 1);
          }
      };
    };

  
}

function renderCompletions_3439329442(self_3439329443, app_3439329444, contentPanel_3439329445, cursorBounds_3439329446, frameIndex_3439329447) {
    
function renderLine_3439329784(lineWidget_3439329785, i_3439329786, down_3439329787, frameIndex_3439329788) {
      var result_3439329789 = false;

      BeforeRet: {
        var top_3439329790 = ((subInt(i_3439329786, self_3439329443.completionsBaseIndex) * totalLineHeight_3439329448) + self_3439329443.scrollOffset);
        if ((i_3439329786 == self_3439329443.selectedCompletion)) {
        lineWidget_3439329785.fillBackground = true;
        lineWidget_3439329785.backgroundColor = nimCopy(lineWidget_3439329785.backgroundColor, selectedBackgroundColor_3439329613, NTI2550136835);
        }
        
        var completion_3439329791 = nimCopy(null, self_3439329443.completions[chckIndx(i_3439329786, 0, (self_3439329443.completions).length - 1)], NTI2919235630);
        var nameWidget_3439329792 = createPartWidget_3439329344(completion_3439329791.name, 0.0, ((completion_3439329791.name).length * charWidth_3439329449), totalLineHeight_3439329448, nameColor_3439329756, frameIndex_3439329788);
        add_2785018080(lineWidget_3439329785, nameWidget_3439329792);
        var scopeWidget_3439329793 = createPartWidget_3439329344(completion_3439329791.scope, (-((completion_3439329791.scope).length) * charWidth_3439329449), totalLineHeight_3439329448, ((completion_3439329791.scope).length * charWidth_3439329449), scopeColor_3439329768, frameIndex_3439329788);
        scopeWidget_3439329793.anchor.Field0.x = 1.0;
        scopeWidget_3439329793.anchor.Field1.x = 1.0;
        add_2785018080(lineWidget_3439329785, scopeWidget_3439329793);
        self_3439329443.lastCompletionWidgets.push({Field0: i_3439329786, Field1: lineWidget_3439329785});;
        result_3439329789 = true;
        break BeforeRet;
      };

      return result_3439329789;

    }

    var totalLineHeight_3439329448 = totalLineHeight_2768240810(app_3439329444.platform);
    var charWidth_3439329449 = charWidth_2768240799(app_3439329444.platform);
    var backgroundColor_3439329607 = color_3439329450(app_3439329444.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(30, 30, 30));
    var selectedBackgroundColor_3439329613 = color_3439329450(app_3439329444.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var nameColor_3439329756 = tokenColor_3439329618(app_3439329444.theme, [[101,110,116,105,116,121,46,110,97,109,101,46,108,97,98,101,108], [101,110,116,105,116,121,46,110,97,109,101]], rgb_2550136919(255, 255, 255));
    var textColor_3439329762 = color_3439329450(app_3439329444.theme, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 175));
    var scopeColor_3439329768 = color_3439329450(app_3439329444.theme, [115,116,114,105,110,103], rgb_2550136919(175, 255, 175));
    var panel_3439329769 = {left: cursorBounds_3439329446.x, top: (cursorBounds_3439329446.y + cursorBounds_3439329446.h), right: (cursorBounds_3439329446.x + (charWidth_3439329449 * 60.0)), bottom: ((cursorBounds_3439329446.y + cursorBounds_3439329446.h) + (totalLineHeight_3439329448 * 20.0)), fillBackground: true, backgroundColor: nimCopy(null, backgroundColor_3439329607, NTI2550136835), lastHierarchyChange: frameIndex_3439329447, maskContent: true, layout: {kind: 0}, m_type: NTI2785017871, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    layoutWidget_2785018531(panel_3439329769, contentPanel_3439329445.lastBounds, frameIndex_3439329447, app_3439329444.platform.layoutOptions);
    add_2785018080(contentPanel_3439329445, panel_3439329769);
    self_3439329443.lastCompletionsWidget = panel_3439329769;
    updateBaseIndexAndScrollOffset_3439329351(panel_3439329769, self_3439329443, "completionsBaseIndex", self_3439329443, "completionsScrollOffset", (self_3439329443.completions).length, totalLineHeight_3439329448, self_3439329443.scrollToCompletion);
    self_3439329443.scrollToCompletion = nimCopy(self_3439329443.scrollToCompletion, none_3003121842(), NTI1191183280);
    if (self_3439329443.lastCompletionWidgets.length < 0) { for (var i = self_3439329443.lastCompletionWidgets.length ; i < 0 ; ++i) self_3439329443.lastCompletionWidgets.push({Field0: 0, Field1: null}); }
               else { self_3439329443.lastCompletionWidgets.length = 0; };
    createLinesInPanel_3439329412(app_3439329444, panel_3439329769, self_3439329443.completionsBaseIndex, self_3439329443.completionsScrollOffset, (self_3439329443.completions).length, frameIndex_3439329447, true, renderLine_3439329784);

  
}

function updateWidget_3439329801(self_3439329802, app_3439329803, widget_3439329804, frameIndex_3439329805) {
    var Temporary1;
    
function HEX3Aanonymous_3439329835(wf_3439329846) {
      var result_3439329849 = [];

        result_3439329849 = nimCopy(null, ([32,45,32] || []).concat(wf_3439329846.name || []), NTI33554449);

      return result_3439329849;

    }
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
                    var Temporary12;
    var Temporary14;
    var Temporary15;
    var Temporary16;
    
function renderLine_3439330532(lineWidget_3439330533, i_3439330534, down_3439330535, frameIndex_3439330536) {
        
function HEX3Aanonymous_3439330680(s_3439330688) {
          var result_3439330691 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

            result_3439330691 = nimCopy(result_3439330691, normalized_2449473905(s_3439330688), NTI2449473548);

          return result_3439330691;

        }
        
function HEX3Aanonymous_3439330700(s_3439330707) {
          var result_3439330710 = {Field0: 0, Field1: 0};

            result_3439330710 = nimCopy(result_3439330710, clampToLine_3439329297(s_3439330707, i_3439330534, len_2818574169(styledText_3439330539)), NTI3439329284);

          return result_3439330710;

        }
        
function HEX3Aanonymous_3439330819(s_3439330827) {
          var result_3439330830 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

            result_3439330830 = nimCopy(result_3439330830, normalized_2449473905(s_3439330827), NTI2449473548);

          return result_3439330830;

        }
        
function HEX3Aanonymous_3439330839(s_3439330846) {
          var result_3439330849 = {Field0: 0, Field1: 0};

            result_3439330849 = nimCopy(result_3439330849, clampToLine_3439329297(s_3439330846, i_3439330534, len_2818574169(styledText_3439330539)), NTI3439329284);

          return result_3439330849;

        }
        var Temporary1;
                        var Temporary8;
                var Temporary9;

      var result_3439330537 = false;

      BeforeRet: {
        var top_3439330538 = ((subInt(i_3439330534, self_3439329802.previousBaseIndex) * totalLineHeight_3439329807) + self_3439329802.scrollOffset);
        if (sizeToContent_3439329815) {
        lineWidget_3439330533.sizeToContent = true;
        }
        
        var styledText_3439330539 = getStyledText_2818574341(self_3439329802.document, i_3439330534);
        var selectionsNormalizedOnLine_3439330699 = map_2818572735(getOrDefault_3439330610(selectionsPerLine_3439329926[0], i_3439330534, []), HEX3Aanonymous_3439330680);
        var selectionsClampedOnLine_3439330742 = map_3439330711(selectionsNormalizedOnLine_3439330699, HEX3Aanonymous_3439330700);
        var highlightsNormalizedOnLine_3439330838 = map_2818572735(getOrDefault_3439330610(highlightsPerLine_3439330181, i_3439330534, []), HEX3Aanonymous_3439330819);
        var highlightsClampedOnLine_3439330856 = map_3439330711(highlightsNormalizedOnLine_3439330838, HEX3Aanonymous_3439330839);
        if ((!((lineNumbers_3439330259 == 0)) && (cursorLine_3439330262 == i_3439330534))) {
        var partWidget_3439330861 = createPartWidget_3439329344(HEX24_369098760(i_3439330534), 0.0, lineNumberBounds_3439330269.x, totalLineHeight_3439329807, textColor_3439329814, frameIndex_3439330536);
        add_2785018080(lineWidget_3439330533, partWidget_3439330861);
        }
        else {
          switch (lineNumbers_3439330259) {
          case 1:
            var text_3439330862 = HEX24_369098760(i_3439330534);
            var x_3439330863 = max_33555646(0.0, (lineNumberBounds_3439330269.x - ((text_3439330862).length * charWidth_3439329808)));
            var partWidget_3439330864 = createPartWidget_3439329344(text_3439330862, x_3439330863, lineNumberBounds_3439330269.x, totalLineHeight_3439329807, textColor_3439329814, frameIndex_3439330536);
            add_2785018080(lineWidget_3439330533, partWidget_3439330864);
            break;
          case 2:
            var text_3439330865 = HEX24_369098760(absInt(subInt(i_3439330534, cursorLine_3439330262)));
            var x_3439330866 = max_33555646(0.0, (lineNumberBounds_3439330269.x - ((text_3439330865).length * charWidth_3439329808)));
            var partWidget_3439330867 = createPartWidget_3439329344(text_3439330865, x_3439330866, lineNumberBounds_3439330269.x, totalLineHeight_3439329807, textColor_3439329814, frameIndex_3439330536);
            add_2785018080(lineWidget_3439330533, partWidget_3439330867);
            break;
          default: 
            break;
          }
        }
        
        if ((lineNumbers_3439330259 == 0)) {
        Temporary1 = 0.0;
        }
        else {
        Temporary1 = (lineNumberBounds_3439330269.x + lineNumberPadding_3439330263);
        }
        
        var startOffset_3439330872 = [Temporary1];
        var startIndex_3439330873 = 0;
        Label2: {
          var partIndex_3439330879 = 0;
          var part_3439330880 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
          var i_536873030 = 0;
          var L_536873031 = (styledText_3439330539.parts).length;
          Label3: {
              Label4: while (true) {
              if (!(i_536873030 < L_536873031)) break Label4;
                partIndex_3439330879 = i_536873030;
                part_3439330880 = nimCopy(part_3439330880, styledText_3439330539.parts[chckIndx(i_536873030, 0, (styledText_3439330539.parts).length - 1)], NTI2818572422);
                var width_3439330881 = ((part_3439330880.text).length * charWidth_3439329808);
                renderTextHighlight_3439329322(lineWidget_3439330533, app_3439329803, startOffset_3439330872[0], (startOffset_3439330872[0] + width_3439330881), i_3439330534, startIndex_3439330873, selectionsNormalizedOnLine_3439330699, selectionsClampedOnLine_3439330742, part_3439330880, selectionColor_3439330290, totalLineHeight_3439329807);
                renderTextHighlight_3439329322(lineWidget_3439330533, app_3439329803, startOffset_3439330872[0], (startOffset_3439330872[0] + width_3439330881), i_3439330534, startIndex_3439330873, highlightsNormalizedOnLine_3439330838, highlightsClampedOnLine_3439330856, part_3439330880, highlightColor_3439330410, totalLineHeight_3439329807);
                Label5: {
                  var selection_3439330961 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                  var colontmp__536873026 = [];
                  colontmp__536873026 = getOrDefault_3439330610(selectionsPerLine_3439329926[0], i_3439330534, []);
                  var i_536873027 = 0;
                  var L_536873028 = (colontmp__536873026).length;
                  Label6: {
                      Label7: while (true) {
                      if (!(i_536873027 < L_536873028)) break Label7;
                        selection_3439330961 = colontmp__536873026[chckIndx(i_536873027, 0, (colontmp__536873026).length - 1)];
                        if ((((selection_3439330961.Field1.Field0 == i_3439330534) && (startIndex_3439330873 <= selection_3439330961.Field1.Field1)) && (selection_3439330961.Field1.Field1 <= addInt(startIndex_3439330873, (part_3439330880.text).length)))) {
                        if (((part_3439330880.text).length == 0)) {
                        Temporary8 = 0.0;
                        }
                        else {
                        Temporary8 = ((subInt(selection_3439330961.Field1.Field1, startIndex_3439330873) / (part_3439330880.text).length) * width_3439330881);
                        }
                        
                        var offsetFromPartStart_3439330962 = Temporary8;
                        add_2785018080(lineWidget_3439330533, {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 0.0)}, NTI2785017869), left: (startOffset_3439330872[0] + offsetFromPartStart_3439330962), right: ((startOffset_3439330872[0] + offsetFromPartStart_3439330962) + (cursorWidth_3439330284 * charWidth_3439329808)), bottom: totalLineHeight_3439329807, fillBackground: true, backgroundColor: nimCopy(null, cursorColor_3439330530, NTI2550136835), lastHierarchyChange: frameIndex_3439330536, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0});
                        cursorBounds_3439330531 = nimCopy(cursorBounds_3439330531, rect_2147483666((startOffset_3439330872[0] + offsetFromPartStart_3439330962), top_3439330538, (charWidth_3439329808 * cursorWidth_3439330284), lineHeight_3439329806), NTI2147483653);
                        }
                        
                        i_536873027 = addInt(i_536873027, 1);
                        if (!(((colontmp__536873026).length == L_536873028))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                if (((part_3439330880.scope).length == 0)) {
                Temporary9 = textColor_3439329814;
                }
                else {
                Temporary9 = tokenColor_3439330963(app_3439329803.theme, part_3439330880.scope, rgb_2550136919(255, 200, 200));
                }
                
                var color_3439331003 = nimCopy(null, Temporary9, NTI2550136835);
                var partWidget_3439331004 = createPartWidget_3439329344(part_3439330880.text, startOffset_3439330872[0], width_3439330881, totalLineHeight_3439329807, color_3439331003, frameIndex_3439330536);
                styledText_3439330539.parts[chckIndx(partIndex_3439330879, 0, (styledText_3439330539.parts).length - 1)].bounds.x = partWidget_3439331004.left;
                styledText_3439330539.parts[chckIndx(partIndex_3439330879, 0, (styledText_3439330539.parts).length - 1)].bounds.y = lineWidget_3439330533.top;
                styledText_3439330539.parts[chckIndx(partIndex_3439330879, 0, (styledText_3439330539.parts).length - 1)].bounds.w = (partWidget_3439331004.right - partWidget_3439331004.left);
                styledText_3439330539.parts[chckIndx(partIndex_3439330879, 0, (styledText_3439330539.parts).length - 1)].bounds.h = (lineWidget_3439330533.bottom - lineWidget_3439330533.top);
                HEX2BHEX3D_855640304(startOffset_3439330872, 0, width_3439330881);
                startIndex_3439330873 = addInt(startIndex_3439330873, (part_3439330880.text).length);
                add_2785018080(lineWidget_3439330533, partWidget_3439331004);
                i_536873030 = addInt(i_536873030, 1);
                if (!(((styledText_3439330539.parts).length == L_536873031))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        self_3439329802.lastRenderedLines.push(styledText_3439330539);;
        result_3439330537 = true;
        break BeforeRet;
      };

      return result_3439330537;

    }

  BeforeRet: {
    var lineHeight_3439329806 = lineHeight_2768240794(app_3439329803.platform);
    var totalLineHeight_3439329807 = totalLineHeight_2768240810(app_3439329803.platform);
    var charWidth_3439329808 = charWidth_2768240799(app_3439329803.platform);
    var textColor_3439329814 = color_3439329450(app_3439329803.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var sizeToContent_3439329815 = widget_3439329804.sizeToContent;
    var headerPanel_3439329816 = null;
    var headerPart1Text_3439329817 = null;
    var headerPart2Text_3439329818 = null;
    var contentPanel_3439329819 = null;
    if ((len_2785018037(widget_3439329804) == 0)) {
    headerPanel_3439329816 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), bottom: totalLineHeight_3439329807, lastHierarchyChange: frameIndex_3439329805, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(widget_3439329804, headerPanel_3439329816);
    headerPart1Text_3439329817 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3439329805, foregroundColor: nimCopy(null, textColor_3439329814, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(headerPanel_3439329816, headerPart1Text_3439329817);
    headerPart2Text_3439329818 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), pivot: vec2_2164261725(1.0, 0.0), lastHierarchyChange: frameIndex_3439329805, foregroundColor: nimCopy(null, textColor_3439329814, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(headerPanel_3439329816, headerPart2Text_3439329818);
    contentPanel_3439329819 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), top: totalLineHeight_3439329807, lastHierarchyChange: frameIndex_3439329805, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    contentPanel_3439329819.maskContent = true;
    add_2785018080(widget_3439329804, contentPanel_3439329819);
    layoutWidget_2785018531(headerPanel_3439329816, widget_3439329804.lastBounds, frameIndex_3439329805, app_3439329803.platform.layoutOptions);
    layoutWidget_2785018531(contentPanel_3439329819, widget_3439329804.lastBounds, frameIndex_3439329805, app_3439329803.platform.layoutOptions);
    }
    else {
      headerPanel_3439329816 = HEX5BHEX5D_2785018033(widget_3439329804, 0);
      headerPart1Text_3439329817 = HEX5BHEX5D_2785018033(headerPanel_3439329816, 0);
      headerPart2Text_3439329818 = HEX5BHEX5D_2785018033(headerPanel_3439329816, 1);
      contentPanel_3439329819 = HEX5BHEX5D_2785018033(widget_3439329804, 1);
    }
    
    if (self_3439329802.renderHeader) {
    headerPanel_3439329816.bottom = totalLineHeight_3439329807;
    contentPanel_3439329819.top = totalLineHeight_3439329807;
    if (active_2415919218(self_3439329802)) {
    Temporary1 = color_3439329450(app_3439329803.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3439329450(app_3439329803.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3439329830 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785018361(headerPanel_3439329816, color_3439329830, frameIndex_3439329805);
    var workspaceName_3439329873 = get_2348810295(map_1291854416(self_3439329802.document.workspace, HEX3Aanonymous_3439329835), []);
    if (((self_3439329802.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3439329802.currentMode;
    }
    
    var mode_3439329874 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3439329879 = [mnewString(0)];
    fmtRes_3439329879[0].push.apply(fmtRes_3439329879[0], [32]);;
    formatValue_721420459(fmtRes_3439329879, 0, mode_3439329874, []);
    fmtRes_3439329879[0].push.apply(fmtRes_3439329879[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3439329879, 0, self_3439329802.document.filename, []);
    fmtRes_3439329879[0].push.apply(fmtRes_3439329879[0], [32]);;
    formatValue_721420459(fmtRes_3439329879, 0, workspaceName_3439329873, []);
    fmtRes_3439329879[0].push.apply(fmtRes_3439329879[0], [32]);;
    headerPart1Text_3439329817.text = nimCopy(null, fmtRes_3439329879[0], NTI33554449);
    var fmtRes_3439329884 = [mnewString(0)];
    fmtRes_3439329884[0].push.apply(fmtRes_3439329884[0], [32]);;
    formatValue_2818572415(fmtRes_3439329884, 0, selection_2818572805(self_3439329802), []);
    fmtRes_3439329884[0].push.apply(fmtRes_3439329884[0], [32,45,32]);;
    formatValue_2701131945(fmtRes_3439329884, 0, self_3439329802.id, []);
    fmtRes_3439329884[0].push.apply(fmtRes_3439329884[0], [32]);;
    headerPart2Text_3439329818.text = nimCopy(null, fmtRes_3439329884[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785018369(headerPanel_3439329816, frameIndex_3439329805);
    }
    else {
      headerPanel_3439329816.bottom = 0.0;
      contentPanel_3439329819.top = 0.0;
    }
    
    self_3439329802.lastContentBounds = nimCopy(self_3439329802.lastContentBounds, contentPanel_3439329819.lastBounds, NTI2147483653);
    widget_3439329804.lastHierarchyChange = nimMax(widget_3439329804.lastHierarchyChange, headerPanel_3439329816.lastHierarchyChange);
    contentPanel_3439329819.sizeToContent = sizeToContent_3439329815;
    if (active_2415919218(self_3439329802)) {
    Temporary3 = color_3439329450(app_3439329803.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3439329450(app_3439329803.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785018361(contentPanel_3439329819, Temporary3, frameIndex_3439329805);
      if (changed_2785018532(contentPanel_3439329819, frameIndex_3439329805)) Temporary5 = true; else {        Temporary5 = dirty_2415919140(self_3439329802);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3439329803.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2415919213(self_3439329802);
    setLen_2785018073(contentPanel_3439329819, 0);
    if (!(self_3439329802.disableScrolling)) {
    updateBaseIndexAndScrollOffset_3439329351(contentPanel_3439329819, self_3439329802, "previousBaseIndex", self_3439329802, "scrollOffset", (self_3439329802.document.lines).length, totalLineHeight_3439329807, none_3003121842());
    }
    
    var selectionsPerLine_3439329926 = [initTable_3439329915(32)];
    Label6: {
      var s_3439329930 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var colontmp__536873020 = [];
      colontmp__536873020 = selections_2818572802(self_3439329802);
      var i_536873021 = 0;
      var L_536873022 = (colontmp__536873020).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536873021 < L_536873022)) break Label8;
            s_3439329930 = colontmp__536873020[chckIndx(i_536873021, 0, (colontmp__536873020).length - 1)];
            var sn_3439329931 = normalized_2449473905(s_3439329930);
            Label9: {
              var line_3439329936 = 0;
              var res_536873018 = sn_3439329931.Field0.Field0;
              Label10: {
                  Label11: while (true) {
                  if (!(res_536873018 <= sn_3439329931.Field1.Field0)) break Label11;
                    line_3439329936 = res_536873018;
                    var Temporary13 = nimCopy(null, s_3439329930, NTI2449473548);
                    (Temporary12 = mgetOrPut_3439329967(selectionsPerLine_3439329926[0], line_3439329936, []), Temporary12)[0][Temporary12[1]].push(Temporary13);;
                    res_536873018 = addInt(res_536873018, 1);
                  }
              };
            };
            i_536873021 = addInt(i_536873021, 1);
            if (!(((colontmp__536873020).length == L_536873022))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var highlightsPerLine_3439330181 = nimCopy(null, self_3439329802.searchResults, NTI2818572541);
    var lineNumbers_3439330259 = get_3439330245(self_3439329802.lineNumbers, getOption_3439330190(app_3439329803, [101,100,105,116,111,114,46,116,101,120,116,46,108,105,110,101,45,110,117,109,98,101,114,115], 1));
    switch (lineNumbers_3439330259) {
    case 1:
      Temporary14 = addInt(self_3439329802.previousBaseIndex, ((((contentPanel_3439329819.lastBounds.h - self_3439329802.scrollOffset) / totalLineHeight_3439329807)) | 0));
      break;
    case 2:
      Temporary14 = 99;
      break;
    default: 
      Temporary14 = 0;
      break;
    }
    var maxLineNumber_3439330260 = Temporary14;
    var maxLineNumberLen_3439330261 = addInt((HEX24_369098760(maxLineNumber_3439330260)).length, 1);
    var cursorLine_3439330262 = selection_2818572805(self_3439329802).Field1.Field0;
    var lineNumberPadding_3439330263 = charWidth_3439329808;
    if (!((lineNumbers_3439330259 == 0))) {
    Temporary15 = vec2_2164261725((maxLineNumberLen_3439330261 * charWidth_3439329808), 0.0);
    }
    else {
    Temporary15 = vec2_2164261686();
    }
    
    var lineNumberBounds_3439330269 = nimCopy(null, Temporary15, NTI2164261152);
    if (self_3439329802.lastRenderedLines.length < 0) { for (var i = self_3439329802.lastRenderedLines.length ; i < 0 ; ++i) self_3439329802.lastRenderedLines.push(null); }
               else { self_3439329802.lastRenderedLines.length = 0; };
    var isWide_3439330283 = getOption_2818583615(app_3439329803, getContextWithMode_2818583609(self_3439329802, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    if (isWide_3439330283) {
    Temporary16 = 1.0;
    }
    else {
    Temporary16 = 0.2;
    }
    
    var cursorWidth_3439330284 = Temporary16;
    var selectionColor_3439330290 = color_3439329450(app_3439329803.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var highlightColor_3439330410 = color_3439330295(app_3439329803.theme, [[101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100]], rgb_2550136919(200, 200, 200));
    var cursorColor_3439330530 = color_3439330415(app_3439329803.theme, [[101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], [102,111,114,101,103,114,111,117,110,100]], rgba_2550136933(255, 255, 255, 127));
    var cursorBounds_3439330531 = rect_2147483672(vec2_2164261686(), vec2_2164261686());
    var renderOnlyLinesInBounds_3439331026 = !(sizeToContent_3439329815);
    createLinesInPanel_3439329412(app_3439329803, contentPanel_3439329819, self_3439329802.previousBaseIndex, self_3439329802.scrollOffset, (self_3439329802.document.lines).length, frameIndex_3439329805, renderOnlyLinesInBounds_3439331026, renderLine_3439330532);
    if (self_3439329802.showCompletions) {
    renderCompletions_3439329442(self_3439329802, app_3439329803, contentPanel_3439329819, cursorBounds_3439330531, frameIndex_3439329805);
    }
    
    contentPanel_3439329819.lastHierarchyChange = frameIndex_3439329805;
    widget_3439329804.lastHierarchyChange = nimMax(widget_3439329804.lastHierarchyChange, contentPanel_3439329819.lastHierarchyChange);
    self_3439329802.lastContentBounds = nimCopy(self_3439329802.lastContentBounds, contentPanel_3439329819.lastBounds, NTI2147483653);
  };

  
}

function updateWidget_3405774854(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858) {
  
}

function updateWidget_3405774859(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858) {
    chckNilDisp(self_3405774855);
    if (isObj(self_3405774855.m_type, NTI3254780014)) {
    updateWidget_3472886213(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858);
    }
    else {
    if (isObj(self_3405774855.m_type, NTI2969568641)) {
    updateWidget_3422553650(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858);
    }
    else {
    if (isObj(self_3405774855.m_type, NTI2818572510)) {
    updateWidget_3439329801(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858);
    }
    else {
    if (isObj(self_3405774855.m_type, NTI2415919108)) {
    updateWidget_3405774854(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858);
    }
    }}}

  
}

function dirty_2483027986(self_2483027987) {
  var result_2483027988 = false;

    result_2483027988 = self_2483027987.mDirty;

  return result_2483027988;

}

function resetDirty_2483028016(self_2483028017) {
    self_2483028017.mDirty = false;

  
}

function pop_2785018021(s_2785018023, s_2785018023_Idx) {
  var result_2785018024 = null;

    var L_2785018028 = subInt((s_2785018023[s_2785018023_Idx]).length, 1);
    result_2785018024 = s_2785018023[s_2785018023_Idx][chckIndx(L_2785018028, 0, (s_2785018023[s_2785018023_Idx]).length - 1)];
    if (s_2785018023[s_2785018023_Idx].length < chckRange(L_2785018028, 0, 2147483647)) { for (var i = s_2785018023[s_2785018023_Idx].length ; i < chckRange(L_2785018028, 0, 2147483647) ; ++i) s_2785018023[s_2785018023_Idx].push(null); }
               else { s_2785018023[s_2785018023_Idx].length = chckRange(L_2785018028, 0, 2147483647); };

  return result_2785018024;

}

function pop_2785018018(self_2785018019) {
  var result_2785018020 = null;

    result_2785018020 = pop_2785018021(self_2785018019, "children");

  return result_2785018020;

}

function updateWidget_3456106526(self_3456106527, app_3456106528, widget_3456106529, frameIndex_3456106530) {
    var Temporary1;

    var textColor_3456106536 = color_3439329450(app_3456106528.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if ((len_2785018037(widget_3456106529) == 0)) {
    var text_3456106537 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3456106530, m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(widget_3456106529, text_3456106537);
    Temporary1 = text_3456106537;
    }
    else {
    Temporary1 = HEX5BHEX5D_2785018033(widget_3456106529, 0);
    }
    
    var text_3456106538 = Temporary1;
    text_3456106538.text = nimCopy(null, self_3456106527.path, NTI33554449);
    updateForegroundColor_2785018347(text_3456106538, textColor_3456106536, frameIndex_3456106530);
    updateLastHierarchyChangeFromChildren_2785018369(text_3456106538, -1);

  
}

function updateWidget_3456106513(self_3456106514, app_3456106515, widget_3456106516, frameIndex_3456106517) {
    var Temporary1;

    var textColor_3456106523 = color_3439329450(app_3456106515.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if ((len_2785018037(widget_3456106516) == 0)) {
    var text_3456106524 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3456106517, m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(widget_3456106516, text_3456106524);
    Temporary1 = text_3456106524;
    }
    else {
    Temporary1 = HEX5BHEX5D_2785018033(widget_3456106516, 0);
    }
    
    var text_3456106525 = Temporary1;
    text_3456106525.text = nimCopy(null, self_3456106514.path, NTI33554449);
    updateForegroundColor_2785018347(text_3456106525, textColor_3456106523, frameIndex_3456106517);
    updateLastHierarchyChangeFromChildren_2785018369(text_3456106525, -1);

  
}

function updateWidget_3422552092(self_3422552093, app_3422552094, widget_3422552095, frameIndex_3422552096) {
        var Temporary1;
        var Temporary2;

  BeforeRet: {
    var charWidth_3422552097 = charWidth_2768240799(app_3422552094.platform);
    var totalLineHeight_3422552098 = totalLineHeight_2768240810(app_3422552094.platform);
    var textColor_3422552104 = color_3439329450(app_3422552094.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    setLen_2785018073(widget_3422552095, 0);
    var name_3422552105 = [];
    var typ_3422552106 = [];
    var nameColors_3422552111 = [[]];
    var typeColors_3422552112 = [115,116,111,114,97,103,101,46,116,121,112,101];
    switch (self_3422552093.completion.kind) {
    case 0:
        var Temporary2 = self_3422552093.completion;
        if (ConstSet358[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568637)); }
        var oHEX60gensym0_3422552115 = getSymbol_3019906948(ctx_2969567289, Temporary2.id);
        if (!isSome_3087009356(oHEX60gensym0_3422552115)) Temporary1 = false; else {          var sym_3422552138 = get_3087009376(oHEX60gensym0_3422552115);
          Temporary1 = true;        }      if (Temporary1) {
      name_3422552105 = nimCopy(null, sym_3422552138.name, NTI33554449);
      typ_3422552106 = nimCopy(null, HEX24_3087008191(computeSymbolType_3019928398(ctx_2969567289, sym_3422552138, true)), NTI33554449);
      nameColors_3422552111 = nimCopy(null, getColorForSymbol_3137341355(ctx_2969567289, sym_3422552138), NTI3137340452);
      }
      
      break;
    default: 
      break BeforeRet;
      break;
    }
    var nameColor_3422552144 = tokenColor_3439329618(app_3422552094.theme, nameColors_3422552111, rgb_2550136919(255, 255, 255));
    var nameWidget_3422552145 = createPartWidget_3439329344(name_3422552105, 0.0, ((name_3422552105).length * charWidth_3422552097), totalLineHeight_3422552098, nameColor_3422552144, frameIndex_3422552096);
    add_2785018080(widget_3422552095, nameWidget_3422552145);
    var typeColor_3422552151 = tokenColor_3439330963(app_3422552094.theme, typeColors_3422552112, rgb_2550136919(255, 255, 255));
    var typeWidget_3422552152 = createPartWidget_3439329344(typ_3422552106, (-((typ_3422552106).length) * charWidth_3422552097), 0.0, totalLineHeight_3422552098, typeColor_3422552151, frameIndex_3422552096);
    typeWidget_3422552152.anchor.Field0.x = 1.0;
    typeWidget_3422552152.anchor.Field1.x = 1.0;
    add_2785018080(widget_3422552095, typeWidget_3422552152);
  };

  
}

function updateWidget_3405774866(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870) {
  
}

function updateWidget_3405774871(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870) {
    chckNilDisp(self_3405774867);
    if (isObj(self_3405774867.m_type, NTI1291848506)) {
    updateWidget_3456106526(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870);
    }
    else {
    if (isObj(self_3405774867.m_type, NTI1291848508)) {
    updateWidget_3456106513(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870);
    }
    else {
    if (isObj(self_3405774867.m_type, NTI2969576809)) {
    updateWidget_3422552092(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870);
    }
    else {
    if (isObj(self_3405774867.m_type, NTI3187671048)) {
    updateWidget_3405774866(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870);
    }
    }}}

  
}

function updateWidget_3456106539(self_3456106540, app_3456106541, widget_3456106542, frameIndex_3456106543) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var lineHeight_3456106544 = lineHeight_2768240794(app_3456106541.platform);
    var totalLineHeight_3456106545 = totalLineHeight_2768240810(app_3456106541.platform);
    var charWidth_3456106546 = charWidth_2768240799(app_3456106541.platform);
    var textColor_3456106552 = color_3439329450(app_3456106541.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3456106553 = null;
    var contentPanel_3456106554 = null;
    if ((len_2785018037(widget_3456106542) == 0)) {
    headerPanel_3456106553 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), bottom: totalLineHeight_3456106545, lastHierarchyChange: frameIndex_3456106543, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    add_2785018080(widget_3456106542, headerPanel_3456106553);
    contentPanel_3456106554 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), top: totalLineHeight_3456106545, lastHierarchyChange: frameIndex_3456106543, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0};
    contentPanel_3456106554.maskContent = true;
    add_2785018080(widget_3456106542, contentPanel_3456106554);
    layoutWidget_2785018531(headerPanel_3456106553, widget_3456106542.lastBounds, frameIndex_3456106543, app_3456106541.platform.layoutOptions);
    layoutWidget_2785018531(contentPanel_3456106554, widget_3456106542.lastBounds, frameIndex_3456106543, app_3456106541.platform.layoutOptions);
    }
    else {
      headerPanel_3456106553 = HEX5BHEX5D_2785018033(widget_3456106542, 0);
      contentPanel_3456106554 = HEX5BHEX5D_2785018033(widget_3456106542, 1);
    }
    
    updateWidget_3405774859(self_3456106540.textEditor, app_3456106541, headerPanel_3456106553, frameIndex_3456106543);
    updateLastHierarchyChangeFromChildren_2785018369(headerPanel_3456106553, frameIndex_3456106543);
    widget_3456106542.lastHierarchyChange = nimMax(widget_3456106542.lastHierarchyChange, headerPanel_3456106553.lastHierarchyChange);
    updateBackgroundColor_2785018361(contentPanel_3456106554, color_3439329450(app_3456106541.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), frameIndex_3456106543);
    self_3456106540.lastContentBounds = nimCopy(self_3456106540.lastContentBounds, contentPanel_3456106554.lastBounds, NTI2147483653);
      if (changed_2785018532(contentPanel_3456106554, frameIndex_3456106543)) Temporary2 = true; else {        Temporary2 = dirty_2483027986(self_3456106540);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = app_3456106541.platform.redrawEverything;      }    if (!(Temporary1)) {
    break BeforeRet;
    }
    
    resetDirty_2483028016(self_3456106540);
    var maxLineCount_3456106560 = ((Math.floor((widget_3456106542.lastBounds.h / totalLineHeight_3456106545))) | 0);
    var targetNumRenderedItems_3456106564 = nimMin(maxLineCount_3456106560, (self_3456106540.completions).length);
    var lastRenderedIndex_3456106568 = nimMin(subInt(addInt(self_3456106540.scrollOffset, targetNumRenderedItems_3456106564), 1), (self_3456106540.completions).length - 1);
    if ((self_3456106540.selected < self_3456106540.scrollOffset)) {
    self_3456106540.scrollOffset = self_3456106540.selected;
    lastRenderedIndex_3456106568 = nimMin(subInt(addInt(self_3456106540.scrollOffset, targetNumRenderedItems_3456106564), 1), (self_3456106540.completions).length - 1);
    }
    
    if ((lastRenderedIndex_3456106568 < self_3456106540.selected)) {
    self_3456106540.scrollOffset = nimMax(addInt(subInt(self_3456106540.selected, targetNumRenderedItems_3456106564), 1), 0);
    lastRenderedIndex_3456106568 = nimMin(subInt(addInt(self_3456106540.scrollOffset, targetNumRenderedItems_3456106564), 1), (self_3456106540.completions).length - 1);
    }
    
    var numRenderedItems_3456106575 = nimMax(addInt(subInt(lastRenderedIndex_3456106568, self_3456106540.scrollOffset), 1), 0);
    Label3: {
        Label4: while (true) {
        if (!(numRenderedItems_3456106575 < len_2785018037(contentPanel_3456106554))) break Label4;
          var _ = pop_2785018018(contentPanel_3456106554);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(len_2785018037(contentPanel_3456106554) < numRenderedItems_3456106575)) break Label6;
          add_2785018080(contentPanel_3456106554, {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false, fontSizeIncreasePercent: 0.0});
        }
    };
    var selectionColor_3456106581 = color_3439329450(app_3456106541.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var top_3456106582 = 0.0;
    var widgetIndex_3456106583 = 0;
    Label7: {
      var completionIndex_3456106588 = 0;
      var res_536873102 = self_3456106540.scrollOffset;
      Label8: {
          Label9: while (true) {
          if (!(res_536873102 <= lastRenderedIndex_3456106568)) break Label9;
            completionIndex_3456106588 = res_536873102;
            try {
            var lineWidget_3456106594 = HEX5BHEX5D_2785018033(contentPanel_3456106554, widgetIndex_3456106583);
            lineWidget_3456106594.top = top_3456106582;
            lineWidget_3456106594.bottom = (top_3456106582 + totalLineHeight_3456106545);
            lineWidget_3456106594.lastHierarchyChange = frameIndex_3456106543;
            if ((completionIndex_3456106588 == self_3456106540.selected)) {
            lineWidget_3456106594.fillBackground = true;
            updateBackgroundColor_2785018361(lineWidget_3456106594, selectionColor_3456106581, frameIndex_3456106543);
            }
            else {
              lineWidget_3456106594.fillBackground = false;
              updateBackgroundColor_2785018361(lineWidget_3456106594, color_2550136904(0.0, 0.0, 0.0, 1.0), frameIndex_3456106543);
            }
            
            updateWidget_3405774871(self_3456106540.completions[chckIndx(completionIndex_3456106588, 0, (self_3456106540.completions).length - 1)], app_3456106541, lineWidget_3456106594, frameIndex_3456106543);
            top_3456106582 = lineWidget_3456106594.bottom;
            res_536873102 = addInt(res_536873102, 1);
            } finally {
            widgetIndex_3456106583 = addInt(widgetIndex_3456106583, 1);
            }
          }
      };
    };
    contentPanel_3456106554.lastHierarchyChange = frameIndex_3456106543;
    widget_3456106542.lastHierarchyChange = nimMax(widget_3456106542.lastHierarchyChange, contentPanel_3456106554.lastHierarchyChange);
  };

  
}

function updateWidget_3405774860(self_3405774861, app_3405774862, widget_3405774863, frameIndex_3405774864) {
  
}

function updateWidget_3405774865(self_3405774861, app_3405774862, widget_3405774863, frameIndex_3405774864) {
    chckNilDisp(self_3405774861);
    if (isObj(self_3405774861.m_type, NTI3187671062)) {
    updateWidget_3456106539(self_3405774861, app_3405774862, widget_3405774863, frameIndex_3405774864);
    }
    else {
    if (isObj(self_3405774861.m_type, NTI2483027972)) {
    updateWidget_3405774860(self_3405774861, app_3405774862, widget_3405774863, frameIndex_3405774864);
    }
    }

  
}
