/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI2516582848 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3087007840 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007837 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007834 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111556 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681170 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681169 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681249 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2550136837 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291846989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2130706495 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2130706436 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2130706435 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291847200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018260 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225617 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170894057 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818586210 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818586256 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919187 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2466250756 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919237549 = {size: 0, kind: 23, base: null, node: null, finalizer: null};
var NTI2919237548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182375 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182353 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182532 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182380 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182360 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182411 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182374 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182397 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182364 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182354 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182385 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182361 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182389 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182362 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182393 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182363 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182401 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182365 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182369 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969568619 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969574395 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578635 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017876 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017875 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017874 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017873 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017872 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017869 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017868 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017871 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017870 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516584388 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582915 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1627391161 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845668 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845664 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845667 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627390088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291850591 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2533359773 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2550136853 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291849420 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291849426 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2466250766 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068561 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068448 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3338666077 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3338666076 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584226 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584223 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584220 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338666054 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3338666062 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338666059 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3338666071 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338666026 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338666033 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338666030 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3338666044 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338666021 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338666020 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3338666010 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3338666009 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338666008 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3338666002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338665996 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068509 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068508 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068507 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068505 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068504 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068502 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068500 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068499 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068495 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068494 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068493 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068491 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068490 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068489 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068488 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068487 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068486 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068485 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068446 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068605 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068602 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068481 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068551 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068440 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068540 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068552 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068441 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068445 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068553 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068442 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068534 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068431 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068533 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068532 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068432 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068530 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068554 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068443 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068555 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068444 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068430 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068541 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3338665995 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291855966 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291855973 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291855972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291855971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291855979 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568643 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568642 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568641 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568640 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568638 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568637 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568636 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568635 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568628 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568626 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568620 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848319 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854649 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291848508 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848506 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818585760 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498824 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225479 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3221225686 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225512 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805188 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805187 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3221225500 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225499 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3221225506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225480 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3221225475 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3221225495 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3221225494 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2113929938 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1811939335 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939334 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845663 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2281701394 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2281701391 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2281701388 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2281701380 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2214592522 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592521 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141891 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141904 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2399141901 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141893 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2264924164 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969578215 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007896 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007967 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554441 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2550136836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498825 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1644167173 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1660944393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644167172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498822 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1694498821 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498823 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944407 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944399 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944394 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3170893834 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3170893832 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893831 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3170893830 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3170893829 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568614 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568613 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568615 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2969568612 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568607 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568591 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969568590 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572509 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3170893828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969569488 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121804 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572567 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572566 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572565 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572563 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572562 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473551 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2818572554 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572544 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572541 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572518 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572516 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572426 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845738 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845732 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845731 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845730 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845724 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027972 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2483027971 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845718 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845716 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845713 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845710 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582423 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2516582412 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582404 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582453 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582450 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582447 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582438 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582435 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582432 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582405 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845660 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845641 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845637 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2113929231 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2113929230 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2013265952 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2013265986 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265954 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2013265955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929229 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929228 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2449473539 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2415919108 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2415919107 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2197815299 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845702 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2751463428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463427 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2214592519 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592518 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2214592515 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845700 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845697 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845694 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929222 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929221 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845685 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017867 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017866 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017859 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554447 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI2785017877 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2785017865 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240743 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240742 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240741 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240735 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919122 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2415919121 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919120 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919114 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240723 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240722 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240721 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240715 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240706 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240705 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240704 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240698 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240684 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240683 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240676 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240659 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240651 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2768240643 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2449473553 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845669 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638530 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592520 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2214592516 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2197815306 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2197815300 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818572425 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572423 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572501 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681160 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681159 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681162 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681161 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681155 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681158 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681157 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572480 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572479 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572475 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572474 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572459 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572458 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572457 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572441 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572440 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572434 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572427 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969572511 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969572506 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969571604 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711498 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568616 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969568617 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893842 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572428 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003123002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568610 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568460 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969568463 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568461 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969572212 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568639 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969569239 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2550136835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898994 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898991 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898977 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898974 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019900758 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3120562388 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3120563809 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3120563706 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3120563236 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3120563334 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3120563270 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1560281203 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3120562359 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087009001 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2164261152 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007774 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007824 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007821 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007818 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007798 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007803 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582403 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007783 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3087007788 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007780 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007779 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007843 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007771 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007778 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007773 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007775 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019900519 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137340421 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019928015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008731 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121783 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008718 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008715 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008712 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008653 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008383 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013268507 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019908968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019927104 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008193 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3036676326 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008199 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898997 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898897 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898894 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898884 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898985 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007752 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007762 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007754 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087008908 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019907149 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007753 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087008054 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007757 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007756 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007748 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121671 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121667 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3003121670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121668 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007763 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007751 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007750 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3036676233 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007747 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI3036676198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898919 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3019898900 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898883 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898888 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122753 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3036676201 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3036676199 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676202 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898908 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019899109 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818585704 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818585703 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191183280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584215 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI2147483653 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572422 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235627 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2919235630 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235662 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235613 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235622 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235619 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235593 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2919235608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235605 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235602 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235590 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919235589 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572486 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852126727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572524 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818583494 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389974 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1627389957 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389956 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810261 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578557 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578525 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578483 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627924 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818576615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576685 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473666 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473675 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473595 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2868903940 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903939 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852126723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818579834 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576075 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818579318 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576430 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572296 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572294 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572292 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818576104 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572291 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2885681165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681166 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572629 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572640 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572821 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572694 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473555 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473545 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638433 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389955 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2113929251 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2013265971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265951 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788536198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529168 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI788536206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265949 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2013265950 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187470 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187476 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587460 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2382364676 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2046820355 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1174405133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1174405134 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643078 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1174405123 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405123, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405123, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405123, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405123, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405123, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405123, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405123, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405123, name: "lvlNone", len: 0, sons: null}}};
NTI1174405123.node = NNI1174405123;
var NNI1174405134 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null}, 
{kind: 1, offset: "flushThreshold", len: 0, typ: NTI1174405123, name: "flushThreshold", sons: null}]};
NTI1174405134.node = NNI1174405134;
var NNI1174405133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI1174405123, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554449, name: "fmtStr", sons: null}]};
NTI1174405133.node = NNI1174405133;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI1174405133.base = NTI33555171;
NTI1174405134.base = NTI1174405133;
NTI1174405132.base = NTI1174405134;
var NNI704643084 = {kind: 1, offset: "val", len: 0, typ: NTI1174405132, name: "val", sons: null};
NTI704643084.node = NNI704643084;
var NNI704643076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI704643076.node = NNI704643076;
NTI704643076.base = NTI1174405133;
NTI704643075.base = NTI704643076;
var NNI704643097 = {kind: 1, offset: "val", len: 0, typ: NTI704643075, name: "val", sons: null};
NTI704643097.node = NNI704643097;
var NNI704643078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "consoleLogger", len: 0, typ: NTI704643084, name: "consoleLogger", sons: null}, 
{kind: 1, offset: "fileLogger", len: 0, typ: NTI704643097, name: "fileLogger", sons: null}]};
NTI704643078.node = NNI704643078;
NTI704643078.base = NTI1174405133;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217745.base = NTI33555176;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555176;
NTI134217742.base = NTI134217741;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
var NNI2046820355 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "padding", len: 0, typ: NTI33554435, name: "padding", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI33554438, name: "time", sons: null}, 
{kind: 1, offset: "fuzz", len: 0, typ: NTI33554438, name: "fuzz", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554438, name: "count", sons: null}]};
NTI2046820355.node = NNI2046820355;
var NNI2382364676 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2382364676.node = NNI2382364676;
var NNI2365587460 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2365587460.node = NNI2365587460;
NTI2365587460.base = NTI33555171;
NTI2382364676.base = NTI2365587460;
var NNI1040187476 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1040187470, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1040187476.node = NNI1040187476;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI2013265949 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2013265949, name: "Control", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2013265949, name: "Shift", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2013265949, name: "Alt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2013265949, name: "Super", len: 0, sons: null}}};
NTI2013265949.node = NNI2013265949;
NTI2013265950.base = NTI2013265949;
NTI788536206.base = NTI788529168;
NTI788536198.base = NTI788529168;
var NNI2013265971 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265950, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2013265971.node = NNI2013265971;
NTI2013265968.base = NTI2013265971;
var NNI2013265965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265968, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265965.node = NNI2013265965;
var NNI2013265951 = {kind: 1, offset: "next", len: 0, typ: NTI2013265965, name: "next", sons: null};
NTI2013265951.node = NNI2013265951;
var NNI2113929251 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2113929251.node = NNI2113929251;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555176;
var NNI1627389955 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389955, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389955, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389955, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389955, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389955, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389955, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389955, name: "JArray", len: 0, sons: null}}};
NTI1627389955.node = NNI1627389955;
NTI855638433.base = NTI33554449;
var NNI2449473545 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2449473545.node = NNI2449473545;
var NNI2449473547 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473545, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473545, name: "Field1", sons: null}]};
NTI2449473547.node = NNI2449473547;
NTI2449473555.base = NTI2449473547;
NTI2818572694.base = NTI2449473555;
NTI2818572821.base = NTI2449473547;
NTI2818572640.base = NTI2449473547;
NTI2818572629.base = NTI2449473547;
var NNI805306392 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306392.node = NNI805306392;
var NNI2885681166 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "row", len: 0, typ: NTI33554435, name: "row", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554435, name: "column", sons: null}]};
NTI2885681166.node = NNI2885681166;
NTI2885681166.base = NTI33555171;
NTI2885681165.base = NTI2885681166;
var NNI2885681176 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "startIndex", len: 0, typ: NTI33554435, name: "startIndex", sons: null}, 
{kind: 1, offset: "oldEndIndex", len: 0, typ: NTI33554435, name: "oldEndIndex", sons: null}, 
{kind: 1, offset: "newEndIndex", len: 0, typ: NTI33554435, name: "newEndIndex", sons: null}, 
{kind: 1, offset: "startPosition", len: 0, typ: NTI2885681165, name: "startPosition", sons: null}, 
{kind: 1, offset: "oldEndPosition", len: 0, typ: NTI2885681165, name: "oldEndPosition", sons: null}, 
{kind: 1, offset: "newEndPosition", len: 0, typ: NTI2885681165, name: "newEndPosition", sons: null}]};
NTI2885681176.node = NNI2885681176;
NTI2885681176.base = NTI33555171;
var NNI2818572291 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2818572291, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2818572291, name: "Insert", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2818572291, name: "Nested", len: 0, sons: null}}};
NTI2818572291.node = NNI2818572291;
NTI2818572295.base = NTI2449473547;
NTI2818572296.base = NTI2818572292;
var NNI2818572294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldSelection", len: 0, typ: NTI2818572295, name: "oldSelection", sons: null}, 
{kind: 3, offset: "kind", len: 3, typ: NTI2818572291, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "selection", len: 0, typ: NTI2449473547, name: "selection", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cursor", len: 0, typ: NTI2449473545, name: "cursor", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]}], 
[setConstr(2), {kind: 1, offset: "children", len: 0, typ: NTI2818572296, name: "children", sons: null}]]}]};
NTI2818572294.node = NNI2818572294;
NTI2818572292.base = NTI2818572294;
NTI2818576104.base = NTI2818572292;
NTI2818576430.base = NTI2449473547;
NTI2818579318.base = NTI2449473547;
NTI2818576075.base = NTI2449473547;
NTI2818579834.base = NTI2449473547;
var NNI2868903940 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI2868903940.node = NNI2868903940;
var NNI33555181 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555181.node = NNI33555181;
NTI33555181.base = NTI33555171;
NTI2868903940.base = NTI33555181;
NTI2868903939.base = NTI2868903940;
var NNI2852126723 = {kind: 1, offset: "impl", len: 0, typ: NTI2868903939, name: "impl", sons: null};
NTI2852126723.node = NNI2852126723;
NTI2449473595.base = NTI2449473547;
NTI2449473675.base = NTI2449473547;
NTI2449473666.base = NTI2449473547;
NTI2818576685.base = NTI2449473547;
var NNI2818576690 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2818576685, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818576690.node = NNI2818576690;
NTI2818576615.base = NTI2449473547;
var NNI1157627924 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627924.node = NNI1157627924;
NTI1157627924.base = NTI33555176;
NTI2818572535.base = NTI2449473547;
var NNI2818578483 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473545, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473545, name: "Field1", sons: null}]};
NTI2818578483.node = NNI2818578483;
var NNI2818578525 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473545, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473545, name: "Field1", sons: null}]};
NTI2818578525.node = NNI2818578525;
var NNI2818578557 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473545, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473545, name: "Field1", sons: null}]};
NTI2818578557.node = NNI2818578557;
var NNI2348810261 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2348810261.node = NNI2348810261;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI1627389972 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1627389956, name: "Field3", sons: null}]};
NTI1627389972.node = NNI1627389972;
NTI1627389969.base = NTI1627389972;
var NNI1627389966 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1627389969, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1627389966.node = NNI1627389966;
NTI1627389974.base = NTI1627389956;
var NNI1627389957 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1627389955, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1627389966, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1627389974, name: "elems", sons: null}]]}]};
NTI1627389957.node = NNI1627389957;
NTI1627389956.base = NTI1627389957;
NTI2818572615.base = NTI2449473547;
NTI2818583494.base = NTI2449473547;
var NNI2818572524 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2852126723, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572524.node = NNI2818572524;
var NNI2852126727 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2852126727.node = NNI2852126727;
var NNI2818572547 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572535, name: "Field2", sons: null}]};
NTI2818572547.node = NNI2818572547;
var NNI2919235608 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235593, name: "Field2", sons: null}]};
NTI2919235608.node = NNI2919235608;
NTI2919235605.base = NTI2919235608;
var NNI2919235602 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235605, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235602.node = NNI2919235602;
NTI2919235613.base = NTI33554435;
var NNI2919235625 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235613, name: "Field2", sons: null}]};
NTI2919235625.node = NNI2919235625;
NTI2919235622.base = NTI2919235625;
var NNI2919235619 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235622, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235619.node = NNI2919235619;
var NNI2919235590 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onRequestSave", len: 0, typ: NTI2919235602, name: "onRequestSave", sons: null}, 
{kind: 1, offset: "onRequestSaveIndex", len: 0, typ: NTI2919235619, name: "onRequestSaveIndex", sons: null}]};
NTI2919235590.node = NNI2919235590;
NTI2919235590.base = NTI33555171;
NTI2919235589.base = NTI2919235590;
var NNI2818572486 = {kind: 1, offset: "val", len: 0, typ: NTI2919235589, name: "val", sons: null};
NTI2818572486.node = NNI2818572486;
var NNI2919235627 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2919235627, name: "Unknown", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2919235627, name: "Procedure", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2919235627, name: "Function", len: 0, sons: null}}};
NTI2919235627.node = NNI2919235627;
var NNI2919235630 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI2449473545, name: "location", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2919235627, name: "kind", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "doc", len: 0, typ: NTI33554449, name: "doc", sons: null}]};
NTI2919235630.node = NNI2919235630;
NTI2919235662.base = NTI2919235630;
var NNI2147483653 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI33554446, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI33554446, name: "h", sons: null}]};
NTI2147483653.node = NNI2147483653;
var NNI2818572422 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2147483653, name: "bounds", sons: null}]};
NTI2818572422.node = NNI2818572422;
NTI2818584215.base = NTI2919235630;
var NNI1191183280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1191183280.node = NNI1191183280;
var NNI2818585704 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818585704.node = NNI2818585704;
var NNI2818585703 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2818585704, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473545, name: "Field1", sons: null}]};
NTI2818585703.node = NNI2818585703;
var NNI3036676199 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3036676199.node = NNI3036676199;
var NNI3036676202 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3036676199, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676201, name: "Field1", sons: null}]};
NTI3036676202.node = NNI3036676202;
NTI3019898908.base = NTI3036676202;
NTI3019899109.base = NTI3019898908;
NTI3003122753.base = NTI33554435;
var NNI3019898883 = {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null};
NTI3019898883.node = NNI3019898883;
NTI3019898888.base = NTI3019898883;
var NNI3019898900 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676202, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898888, name: "Field2", sons: null}]};
NTI3019898900.node = NNI3019898900;
var NNI3036676204 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI3036676204, name: "Grey", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3036676204, name: "Red", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3036676204, name: "Green", len: 0, sons: null}}};
NTI3036676204.node = NNI3036676204;
var NNI3019898919 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676202, name: "Field1", sons: null}]};
NTI3019898919.node = NNI3019898919;
NTI3036676198.base = NTI33554439;
var NNI3087007747 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007747, name: "tError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007747, name: "tVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007747, name: "tString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007747, name: "tInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007747, name: "tFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007747, name: "tAny", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007747, name: "tType", len: 0, sons: null}}};
NTI3087007747.node = NNI3087007747;
NTI3036676233.base = NTI3036676202;
var NNI3087007750 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007750, name: "vkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007750, name: "vkVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007750, name: "vkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007750, name: "vkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007750, name: "vkBuiltinFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007750, name: "vkAstFunction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007750, name: "vkType", len: 0, sons: null}}};
NTI3087007750.node = NNI3087007750;
var NNI3003121667 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI3003121667, name: "Empty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3003121667, name: "Identifier", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3003121667, name: "NumberLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3003121667, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3003121667, name: "ConstDecl", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3003121667, name: "LetDecl", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3003121667, name: "VarDecl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI3003121667, name: "NodeList", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI3003121667, name: "Call", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI3003121667, name: "If", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI3003121667, name: "While", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI3003121667, name: "FunctionDefinition", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI3003121667, name: "Params", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI3003121667, name: "Assignment", len: 0, sons: null}}};
NTI3003121667.node = NNI3003121667;
NTI3003121671.base = NTI3003121668;
var NNI3003121670 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3003121668, name: "parent", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "reff", len: 0, typ: NTI2046820355, name: "reff", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI3003121667, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3003121671, name: "children", sons: null}]};
NTI3003121670.node = NNI3003121670;
NTI3003121668.base = NTI3003121670;
NTI3087007757.base = NTI3087007748;
var NNI3087007756 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mHash", len: 0, typ: NTI1325400067, name: "mHash", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI3087007747, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(6), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "open", len: 0, typ: NTI33554466, name: "open", sons: null}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "returnType", len: 0, typ: NTI3087007748, name: "returnType", sons: null}, 
{kind: 1, offset: "paramTypes", len: 0, typ: NTI3087007757, name: "paramTypes", sons: null}]}]]}]};
NTI3087007756.node = NNI3087007756;
NTI3087007748.base = NTI3087007756;
var NNI3087007751 = {kind: 3, offset: "kind", len: 7, typ: NTI3087007750, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(3), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(4), {kind: 1, offset: "impl", len: 0, typ: NTI3087007763, name: "impl", sons: null}], 
[setConstr(5), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "rev", len: 0, typ: NTI33554435, name: "rev", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}]]};
NTI3087007751.node = NNI3087007751;
NTI3087008054.base = NTI3087007748;
var NNI3087007753 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007753, name: "skAstNode", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007753, name: "skBuiltin", len: 0, sons: null}}};
NTI3087007753.node = NNI3087007753;
var NNI3019907149 = {kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null};
NTI3019907149.node = NNI3019907149;
var NNI3087007752 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007752, name: "Regular", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007752, name: "Prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007752, name: "Postfix", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007752, name: "Infix", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007752, name: "Scope", len: 0, sons: null}}};
NTI3087007752.node = NNI3087007752;
var NNI3087007762 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mHash", len: 0, typ: NTI1325400067, name: "mHash", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI3087007753, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}], 
[setConstr(1), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3087007751, name: "value", sons: null}, 
{kind: 1, offset: "operatorNotation", len: 0, typ: NTI3087007752, name: "operatorNotation", sons: null}, 
{kind: 1, offset: "precedence", len: 0, typ: NTI33554435, name: "precedence", sons: null}]}]]}]};
NTI3087007762.node = NNI3087007762;
NTI3087007754.base = NTI3087007762;
var NNI3087008908 = {kind: 1, offset: "val", len: 0, typ: NTI3087007754, name: "val", sons: null};
NTI3087008908.node = NNI3087008908;
NTI3019898985.base = NTI2046820355;
NTI3019898897.base = NTI3019898900;
var NNI3019898894 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898897, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898894.node = NNI3019898894;
var NNI3019898884 = {kind: 1, offset: "queries", len: 0, typ: NTI3019898894, name: "queries", sons: null};
NTI3019898884.node = NNI3019898884;
var NNI3019898997 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676202, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898985, name: "Field2", sons: null}]};
NTI3019898997.node = NNI3019898997;
NTI3087008199.base = NTI33554439;
NTI3036676326.base = NTI33554439;
NTI3087008193.base = NTI33554439;
NTI3019927104.base = NTI3087007751;
var NNI3019908968 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3019908968.node = NNI3019908968;
NTI2013268507.base = NTI33554439;
NTI3087008383.base = NTI33554439;
NTI3087008653.base = NTI33554439;
var NNI3087008718 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007754, name: "Field2", sons: null}]};
NTI3087008718.node = NNI3087008718;
NTI3087008715.base = NTI3087008718;
var NNI3087008712 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087008715, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087008712.node = NNI3087008712;
var NNI3003121783 = {kind: 1, offset: "val", len: 0, typ: NTI3003121668, name: "val", sons: null};
NTI3003121783.node = NNI3003121783;
var NNI3087008731 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3087008731.node = NNI3087008731;
var NNI3019928015 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3019928015.node = NNI3019928015;
NTI3137340421.base = NTI3087007751;
NTI3019900519.base = NTI33554439;
var NNI3087007771 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007771, name: "Horizontal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007771, name: "Vertical", len: 0, sons: null}}};
NTI3087007771.node = NNI3087007771;
NTI3087007779.base = NTI3087007773;
NTI3087007780.base = NTI33554449;
var NNI2516582403 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2516582403, name: "Italic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2516582403, name: "Underline", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2516582403, name: "Bold", len: 0, sons: null}}};
NTI2516582403.node = NNI2516582403;
NTI3087007783.base = NTI2516582403;
var NNI3087007788 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007783, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007788.node = NNI3087007788;
NTI3087007798.base = NTI33554449;
var NNI3087007803 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007798, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007803.node = NNI3087007803;
var NNI3087007778 = {kind: 2, len: 16, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mhash", len: 0, typ: NTI1325400067, name: "mhash", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "orientation", len: 0, typ: NTI3087007771, name: "orientation", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2147483653, name: "bounds", sons: null}, 
{kind: 1, offset: "indent", len: 0, typ: NTI33554435, name: "indent", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554445, name: "fontSize", sons: null}, 
{kind: 1, offset: "render", len: 0, typ: NTI3087007843, name: "render", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3087007779, name: "children", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI3087007780, name: "colors", sons: null}, 
{kind: 1, offset: "styleOverride", len: 0, typ: NTI3087007788, name: "styleOverride", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI3087007803, name: "background", sons: null}, 
{kind: 1, offset: "depth", len: 0, typ: NTI33554435, name: "depth", sons: null}]};
NTI3087007778.node = NNI3087007778;
NTI3087007773.base = NTI3087007778;
var NNI3087007774 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI3087007774.node = NNI3087007774;
var NNI3087007824 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007774, name: "Field2", sons: null}]};
NTI3087007824.node = NNI3087007824;
NTI3087007821.base = NTI3087007824;
var NNI3087007818 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007821, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007818.node = NNI3087007818;
var NNI3087007775 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "root", len: 0, typ: NTI3087007773, name: "root", sons: null}, 
{kind: 1, offset: "nodeToVisualNode", len: 0, typ: NTI3087007818, name: "nodeToVisualNode", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}]};
NTI3087007775.node = NNI3087007775;
var NNI2164261152 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}]};
NTI2164261152.node = NNI2164261152;
NTI3087009001.base = NTI3087007773;
NTI3120562359.base = NTI33554449;
NTI1560281203.base = NTI33554449;
NTI3120563270.base = NTI33554449;
NTI3120563334.base = NTI2516582403;
NTI3120563236.base = NTI33554449;
var NNI3120563706 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3120563236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3120563706.node = NNI3120563706;
var NNI3120563809 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3120563236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3120563809.node = NNI3120563809;
NTI3120562388.base = NTI33554449;
NTI3019900758.base = NTI33554439;
var NNI3019898980 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898884, name: "Field2", sons: null}]};
NTI3019898980.node = NNI3019898980;
NTI3019898977.base = NTI3019898980;
var NNI3019898974 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898977, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898974.node = NNI3019898974;
NTI3019898994.base = NTI3019898997;
var NNI3019898991 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898994, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898991.node = NNI3019898991;
var NNI2550136835 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554446, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554446, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554446, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554446, name: "a", sons: null}]};
NTI2550136835.node = NNI2550136835;
NTI2969569239.base = NTI3003121668;
var NNI2969568639 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007775, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2164261152, name: "Field1", sons: null}]};
NTI2969568639.node = NNI2969568639;
var NNI2969568460 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2969568460, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2969568460, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2969568460, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2969568460, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2969568460, name: "SymbolNameChange", len: 0, sons: null}}};
NTI2969568460.node = NNI2969568460;
var NNI2969568463 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI2969568460, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3003121668, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI2969568463.node = NNI2969568463;
NTI2969568461.base = NTI2969568463;
NTI2969572212.base = NTI2969568461;
var NNI2969568610 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121668, name: "Field2", sons: null}]};
NTI2969568610.node = NNI2969568610;
var NNI3003123002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121668, name: "Field1", sons: null}]};
NTI3003123002.node = NNI3003123002;
NTI2818572428.base = NTI33554449;
var NNI2969568616 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2969568616, name: "SymbolCompletion", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2969568616, name: "AstCompletion", len: 0, sons: null}}};
NTI2969568616.node = NNI2969568616;
var NNI2969568617 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI33554445, name: "score", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2969568616, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodeKind", len: 0, typ: NTI3003121667, name: "nodeKind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]}]]}]};
NTI2969568617.node = NNI2969568617;
NTI3170893842.base = NTI2969568617;
NTI1979711498.base = NTI33554435;
NTI1979711504.base = NTI1979711498;
NTI1979711531.base = NTI33554435;
NTI2969571604.base = NTI2969568617;
var NNI2969572506 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121668, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2969572506.node = NNI2969572506;
var NNI2969572511 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2969572506, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2969572511.node = NNI2969572511;
var NNI2818572441 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572442, name: "Field1", sons: null}]};
NTI2818572441.node = NNI2818572441;
NTI2818572440.base = NTI2818572441;
var NNI2818572434 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572440, name: "handlers", sons: null};
NTI2818572434.node = NNI2818572434;
var NNI2818572458 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572459, name: "Field1", sons: null}]};
NTI2818572458.node = NNI2818572458;
NTI2818572457.base = NTI2818572458;
var NNI2818572451 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572457, name: "handlers", sons: null};
NTI2818572451.node = NNI2818572451;
var NNI2818572475 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572476, name: "Field1", sons: null}]};
NTI2818572475.node = NNI2818572475;
NTI2818572474.base = NTI2818572475;
var NNI2818572468 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572474, name: "handlers", sons: null};
NTI2818572468.node = NNI2818572468;
NTI2818572479.base = NTI2818572292;
NTI2818572480.base = NTI2818572292;
var NNI2885681158 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681158.node = NNI2885681158;
NTI2885681158.base = NTI33555171;
NTI2885681157.base = NTI2885681158;
var NNI2885681156 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681156.node = NNI2885681156;
NTI2885681155.base = NTI2885681156;
var NNI2885681162 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681162.node = NNI2885681162;
NTI2885681162.base = NTI33555171;
NTI2885681161.base = NTI2885681162;
var NNI2885681160 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681160.node = NNI2885681160;
NTI2885681160.base = NTI33555171;
NTI2885681159.base = NTI2885681160;
NTI2818572425.base = NTI2818572422;
var NNI2818572424 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "parts", len: 0, typ: NTI2818572425, name: "parts", sons: null}]};
NTI2818572424.node = NNI2818572424;
NTI2818572423.base = NTI2818572424;
var NNI2818572507 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572423, name: "Field2", sons: null}]};
NTI2818572507.node = NNI2818572507;
NTI2818572504.base = NTI2818572507;
var NNI2818572501 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572504, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572501.node = NNI2818572501;
var NNI2818572427 = {kind: 2, len: 17, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "lines", len: 0, typ: NTI2818572428, name: "lines", sons: null}, 
{kind: 1, offset: "languageId", len: 0, typ: NTI33554449, name: "languageId", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "textChanged", len: 0, typ: NTI2818572434, name: "textChanged", sons: null}, 
{kind: 1, offset: "textInserted", len: 0, typ: NTI2818572451, name: "textInserted", sons: null}, 
{kind: 1, offset: "textDeleted", len: 0, typ: NTI2818572468, name: "textDeleted", sons: null}, 
{kind: 1, offset: "singleLine", len: 0, typ: NTI33554466, name: "singleLine", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2818572479, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2818572480, name: "redoOps", sons: null}, 
{kind: 1, offset: "tsParser", len: 0, typ: NTI2885681157, name: "tsParser", sons: null}, 
{kind: 1, offset: "tsLanguage", len: 0, typ: NTI2885681155, name: "tsLanguage", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI2885681161, name: "currentTree", sons: null}, 
{kind: 1, offset: "highlightQuery", len: 0, typ: NTI2885681159, name: "highlightQuery", sons: null}, 
{kind: 1, offset: "languageServer", len: 0, typ: NTI2818572486, name: "languageServer", sons: null}, 
{kind: 1, offset: "onRequestSaveHandle", len: 0, typ: NTI33554435, name: "onRequestSaveHandle", sons: null}, 
{kind: 1, offset: "styledTextCache", len: 0, typ: NTI2818572501, name: "styledTextCache", sons: null}]};
NTI2818572427.node = NNI2818572427;
var NNI2214592520 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}]};
NTI2214592520.node = NNI2214592520;
NTI2214592520.base = NTI33555171;
NTI2214592516.base = NTI2214592520;
var NNI2197815306 = {kind: 1, offset: "val", len: 0, typ: NTI2214592516, name: "val", sons: null};
NTI2197815306.node = NNI2197815306;
var NNI2197815300 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2197815306, name: "workspace", sons: null}]};
NTI2197815300.node = NNI2197815300;
NTI2197815300.base = NTI33555171;
NTI2818572427.base = NTI2197815300;
NTI855638541.base = NTI33554449;
NTI855638530.base = NTI33554449;
NTI503316776.base = NTI33554449;
var NNI2449473553 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2449473553, name: "gui", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2449473553, name: "terminal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2449473553, name: "browser", len: 0, sons: null}}};
NTI2449473553.node = NNI2449473553;
var NNI2768240658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240659, name: "Field1", sons: null}]};
NTI2768240658.node = NNI2768240658;
NTI2768240657.base = NTI2768240658;
var NNI2768240651 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240657, name: "handlers", sons: null};
NTI2768240651.node = NNI2768240651;
var NNI2768240683 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240684, name: "Field1", sons: null}]};
NTI2768240683.node = NNI2768240683;
NTI2768240682.base = NTI2768240683;
var NNI2768240676 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240682, name: "handlers", sons: null};
NTI2768240676.node = NNI2768240676;
var NNI2768240705 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240706, name: "Field1", sons: null}]};
NTI2768240705.node = NNI2768240705;
NTI2768240704.base = NTI2768240705;
var NNI2768240698 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240704, name: "handlers", sons: null};
NTI2768240698.node = NNI2768240698;
var NNI2768240722 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240723, name: "Field1", sons: null}]};
NTI2768240722.node = NNI2768240722;
NTI2768240721.base = NTI2768240722;
var NNI2768240715 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240721, name: "handlers", sons: null};
NTI2768240715.node = NNI2768240715;
var NNI2415919121 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919122, name: "Field1", sons: null}]};
NTI2415919121.node = NNI2415919121;
NTI2415919120.base = NTI2415919121;
var NNI2415919114 = {kind: 1, offset: "handlers", len: 0, typ: NTI2415919120, name: "handlers", sons: null};
NTI2415919114.node = NNI2415919114;
var NNI2768240742 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240743, name: "Field1", sons: null}]};
NTI2768240742.node = NNI2768240742;
NTI2768240741.base = NTI2768240742;
var NNI2768240735 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240741, name: "handlers", sons: null};
NTI2768240735.node = NNI2768240735;
var NNI2785017865 = {kind: 1, offset: "getTextBounds", len: 0, typ: NTI2785017877, name: "getTextBounds", sons: null};
NTI2785017865.node = NNI2785017865;
var NNI2768240644 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "redrawEverything", len: 0, typ: NTI33554466, name: "redrawEverything", sons: null}, 
{kind: 1, offset: "onKeyPress", len: 0, typ: NTI2768240651, name: "onKeyPress", sons: null}, 
{kind: 1, offset: "onKeyRelease", len: 0, typ: NTI2768240651, name: "onKeyRelease", sons: null}, 
{kind: 1, offset: "onRune", len: 0, typ: NTI2768240651, name: "onRune", sons: null}, 
{kind: 1, offset: "onMousePress", len: 0, typ: NTI2768240676, name: "onMousePress", sons: null}, 
{kind: 1, offset: "onMouseRelease", len: 0, typ: NTI2768240676, name: "onMouseRelease", sons: null}, 
{kind: 1, offset: "onMouseMove", len: 0, typ: NTI2768240698, name: "onMouseMove", sons: null}, 
{kind: 1, offset: "onScroll", len: 0, typ: NTI2768240715, name: "onScroll", sons: null}, 
{kind: 1, offset: "onCloseRequested", len: 0, typ: NTI2415919114, name: "onCloseRequested", sons: null}, 
{kind: 1, offset: "onDropFile", len: 0, typ: NTI2768240735, name: "onDropFile", sons: null}, 
{kind: 1, offset: "layoutOptions", len: 0, typ: NTI2785017865, name: "layoutOptions", sons: null}]};
NTI2768240644.node = NNI2768240644;
NTI2768240644.base = NTI33555171;
NTI2768240643.base = NTI2768240644;
var NNI2785017867 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2164261152, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2164261152, name: "Field1", sons: null}]};
NTI2785017867.node = NNI2785017867;
var NNI2785017866 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "anchor", len: 0, typ: NTI2785017867, name: "anchor", sons: null}, 
{kind: 1, offset: "pivot", len: 0, typ: NTI2164261152, name: "pivot", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554445, name: "left", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554445, name: "right", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554445, name: "top", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554445, name: "bottom", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2550136835, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2550136835, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastBoundsChange", len: 0, typ: NTI33554435, name: "lastBoundsChange", sons: null}, 
{kind: 1, offset: "lastHierarchyChange", len: 0, typ: NTI33554435, name: "lastHierarchyChange", sons: null}, 
{kind: 1, offset: "lastInvalidationRect", len: 0, typ: NTI2147483653, name: "lastInvalidationRect", sons: null}, 
{kind: 1, offset: "lastInvalidation", len: 0, typ: NTI33554435, name: "lastInvalidation", sons: null}, 
{kind: 1, offset: "sizeToContent", len: 0, typ: NTI33554466, name: "sizeToContent", sons: null}, 
{kind: 1, offset: "drawBorder", len: 0, typ: NTI33554466, name: "drawBorder", sons: null}, 
{kind: 1, offset: "fillBackground", len: 0, typ: NTI33554466, name: "fillBackground", sons: null}, 
{kind: 1, offset: "logLayout", len: 0, typ: NTI33554466, name: "logLayout", sons: null}, 
{kind: 1, offset: "allowAlpha", len: 0, typ: NTI33554466, name: "allowAlpha", sons: null}]};
NTI2785017866.node = NNI2785017866;
NTI2785017866.base = NTI33555171;
NTI2785017859.base = NTI2785017866;
var NNI1795162126 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1795162126.node = NNI1795162126;
NTI1795162123.base = NTI1795162126;
var NNI1795162120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1795162123, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1795162120.node = NNI1795162120;
var NNI2113929222 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "context", len: 0, typ: NTI33554449, name: "context", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1795162120, name: "commands", sons: null}, 
{kind: 1, offset: "handleActions", len: 0, typ: NTI33554466, name: "handleActions", sons: null}, 
{kind: 1, offset: "handleInputs", len: 0, typ: NTI33554466, name: "handleInputs", sons: null}, 
{kind: 1, offset: "consumeAllActions", len: 0, typ: NTI33554466, name: "consumeAllActions", sons: null}, 
{kind: 1, offset: "consumeAllInput", len: 0, typ: NTI33554466, name: "consumeAllInput", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}]};
NTI2113929222.node = NNI2113929222;
NTI2113929221.base = NTI2113929222;
var NNI1291845685 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2113929221, name: "Field2", sons: null}]};
NTI1291845685.node = NNI1291845685;
NTI1291845682.base = NTI1291845685;
var NNI1291845679 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845682, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845679.node = NNI1291845679;
var NNI1291845700 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1291845700.node = NNI1291845700;
NTI1291845697.base = NTI1291845700;
var NNI1291845694 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845697, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845694.node = NNI1291845694;
NTI1174405131.base = NTI1174405133;
NTI2214592519.base = NTI2214592516;
var NNI2214592518 = {kind: 1, offset: "folders", len: 0, typ: NTI2214592519, name: "folders", sons: null};
NTI2214592518.node = NNI2214592518;
NTI2214592515.base = NTI2214592518;
var NNI2751463428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2751463428.node = NNI2751463428;
NTI2751463428.base = NTI33555171;
NTI2751463427.base = NTI2751463428;
NTI2197815299.base = NTI2197815300;
var NNI2013265955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "current", len: 0, typ: NTI33554435, name: "current", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554435, name: "persistent", sons: null}]};
NTI2013265955.node = NNI2013265955;
var NNI2013265986 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265952, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2013265951, name: "Field2", sons: null}]};
NTI2013265986.node = NNI2013265986;
NTI2013265983.base = NTI2013265986;
var NNI2013265980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265983, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265980.node = NNI2013265980;
var NNI2013265953 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isTerminal", len: 0, typ: NTI33554466, name: "isTerminal", sons: null}, 
{kind: 1, offset: "nextState", len: 0, typ: NTI33554435, name: "nextState", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554466, name: "persistent", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554449, name: "function", sons: null}, 
{kind: 1, offset: "inputs", len: 0, typ: NTI2013265980, name: "inputs", sons: null}]};
NTI2013265953.node = NNI2013265953;
NTI2013265989.base = NTI2013265953;
var NNI2013265988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "persistentState", len: 0, typ: NTI33554435, name: "persistentState", sons: null}, 
{kind: 1, offset: "states", len: 0, typ: NTI2013265989, name: "states", sons: null}]};
NTI2013265988.node = NNI2013265988;
NTI2013265954.base = NTI2013265988;
var NNI2113929229 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "state", len: 0, typ: NTI2013265955, name: "state", sons: null}, 
{kind: 1, offset: "config", len: 0, typ: NTI2113929221, name: "config", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "dfaInternal", len: 0, typ: NTI2013265954, name: "dfaInternal", sons: null}, 
{kind: 1, offset: "handleAction", len: 0, typ: NTI2113929230, name: "handleAction", sons: null}, 
{kind: 1, offset: "handleInput", len: 0, typ: NTI2113929231, name: "handleInput", sons: null}]};
NTI2113929229.node = NNI2113929229;
NTI2113929228.base = NTI2113929229;
var NNI2415919108 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2449473539, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "renderHeader", len: 0, typ: NTI33554466, name: "renderHeader", sons: null}, 
{kind: 1, offset: "fillAvailableSpace", len: 0, typ: NTI33554466, name: "fillAvailableSpace", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2415919114, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI33554466, name: "active", sons: null}]};
NTI2415919108.node = NNI2415919108;
NTI2415919108.base = NTI33555171;
NTI2415919107.base = NTI2415919108;
var NNI1291845636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "document", len: 0, typ: NTI2197815299, name: "document", sons: null}, 
{kind: 1, offset: "editor", len: 0, typ: NTI2415919107, name: "editor", sons: null}]};
NTI1291845636.node = NNI1291845636;
NTI1291845635.base = NTI1291845636;
NTI1291845702.base = NTI1291845635;
var NNI1291845642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845642.node = NNI1291845642;
NTI1291845642.base = NTI33555171;
NTI1291845637.base = NTI1291845642;
var NNI1291845660 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554446, name: "Field2", sons: null}]};
NTI1291845660.node = NNI1291845660;
NTI1291845657.base = NTI1291845660;
var NNI1291845654 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845657, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845654.node = NNI1291845654;
var NNI1291845646 = {kind: 1, offset: "props", len: 0, typ: NTI1291845654, name: "props", sons: null};
NTI1291845646.node = NNI1291845646;
NTI1291845641.base = NTI1291845646;
var NNI2516582438 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2550136835, name: "Field2", sons: null}]};
NTI2516582438.node = NNI2516582438;
NTI2516582435.base = NTI2516582438;
var NNI2516582432 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2516582435, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2516582432.node = NNI2516582432;
var NNI2516582412 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2550136835, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2516582412.node = NNI2516582412;
NTI2516582423.base = NTI2516582403;
var NNI2516582404 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "foreground", len: 0, typ: NTI2516582412, name: "foreground", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2516582412, name: "background", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI2516582423, name: "fontStyle", sons: null}]};
NTI2516582404.node = NNI2516582404;
var NNI2516582453 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2516582404, name: "Field2", sons: null}]};
NTI2516582453.node = NNI2516582453;
NTI2516582450.base = NTI2516582453;
var NNI2516582447 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2516582450, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2516582447.node = NNI2516582447;
var NNI2516582424 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "colorSpace", len: 0, typ: NTI33554449, name: "colorSpace", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2516582432, name: "colors", sons: null}, 
{kind: 1, offset: "tokenColors", len: 0, typ: NTI2516582447, name: "tokenColors", sons: null}]};
NTI2516582424.node = NNI2516582424;
NTI2516582405.base = NTI2516582424;
var NNI1291845716 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473539, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2415919107, name: "Field2", sons: null}]};
NTI1291845716.node = NNI1291845716;
NTI1291845713.base = NTI1291845716;
var NNI1291845710 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845713, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845710.node = NNI1291845710;
var NNI2483027972 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2449473539, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2415919114, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}]};
NTI2483027972.node = NNI2483027972;
NTI2483027972.base = NTI33555171;
NTI2483027971.base = NTI2483027972;
NTI1291845718.base = NTI2483027971;
var NNI1291845731 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845732, name: "Field1", sons: null}]};
NTI1291845731.node = NNI1291845731;
NTI1291845730.base = NTI1291845731;
var NNI1291845724 = {kind: 1, offset: "handlers", len: 0, typ: NTI1291845730, name: "handlers", sons: null};
NTI1291845724.node = NNI1291845724;
NTI1291845738.base = NTI2415919107;
var NNI1291845670 = {kind: 2, len: 37, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "backend", len: 0, typ: NTI2449473553, name: "backend", sons: null}, 
{kind: 1, offset: "platform", len: 0, typ: NTI2768240643, name: "platform", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "clearAtlasTimer", len: 0, typ: NTI33554447, name: "clearAtlasTimer", sons: null}, 
{kind: 1, offset: "timer", len: 0, typ: NTI33554447, name: "timer", sons: null}, 
{kind: 1, offset: "frameTimer", len: 0, typ: NTI33554447, name: "frameTimer", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "closeRequested", len: 0, typ: NTI33554466, name: "closeRequested", sons: null}, 
{kind: 1, offset: "widget", len: 0, typ: NTI2785017859, name: "widget", sons: null}, 
{kind: 1, offset: "eventHandlerConfigs", len: 0, typ: NTI1291845679, name: "eventHandlerConfigs", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1627389956, name: "options", sons: null}, 
{kind: 1, offset: "callbacks", len: 0, typ: NTI1291845694, name: "callbacks", sons: null}, 
{kind: 1, offset: "logger", len: 0, typ: NTI1174405131, name: "logger", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2214592515, name: "workspace", sons: null}, 
{kind: 1, offset: "scriptContext", len: 0, typ: NTI2751463427, name: "scriptContext", sons: null}, 
{kind: 1, offset: "initializeCalled", len: 0, typ: NTI33554466, name: "initializeCalled", sons: null}, 
{kind: 1, offset: "statusBarOnTop", len: 0, typ: NTI33554466, name: "statusBarOnTop", sons: null}, 
{kind: 1, offset: "currentView", len: 0, typ: NTI33554435, name: "currentView", sons: null}, 
{kind: 1, offset: "views", len: 0, typ: NTI1291845702, name: "views", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI1291845637, name: "layout", sons: null}, 
{kind: 1, offset: "layout_props", len: 0, typ: NTI1291845641, name: "layout_props", sons: null}, 
{kind: 1, offset: "theme", len: 0, typ: NTI2516582405, name: "theme", sons: null}, 
{kind: 1, offset: "loadedFontSize", len: 0, typ: NTI33554445, name: "loadedFontSize", sons: null}, 
{kind: 1, offset: "editors", len: 0, typ: NTI1291845710, name: "editors", sons: null}, 
{kind: 1, offset: "popups", len: 0, typ: NTI1291845718, name: "popups", sons: null}, 
{kind: 1, offset: "onEditorRegistered", len: 0, typ: NTI1291845724, name: "onEditorRegistered", sons: null}, 
{kind: 1, offset: "onEditorDeregistered", len: 0, typ: NTI1291845724, name: "onEditorDeregistered", sons: null}, 
{kind: 1, offset: "commandLineTextEditor", len: 0, typ: NTI2415919107, name: "commandLineTextEditor", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "commandLineEventHandler", len: 0, typ: NTI2113929228, name: "commandLineEventHandler", sons: null}, 
{kind: 1, offset: "commandLineMode", len: 0, typ: NTI33554466, name: "commandLineMode", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "editor_defaults", len: 0, typ: NTI1291845738, name: "editor_defaults", sons: null}]};
NTI1291845670.node = NNI1291845670;
NTI1291845669.base = NTI1291845670;
NTI2818572426.base = NTI2818572427;
NTI2818572518.base = NTI2449473555;
var NNI2818572516 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572518, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2818572516.node = NNI2818572516;
NTI2818572544.base = NTI2818572547;
var NNI2818572541 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572544, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572541.node = NNI2818572541;
var NNI2449473551 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2449473551, name: "none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2449473551, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2449473551, name: "relative", len: 0, sons: null}}};
NTI2449473551.node = NNI2449473551;
var NNI2818572554 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2449473551, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572554.node = NNI2818572554;
NTI2818572562.base = NTI2818572423;
NTI2818572563.base = NTI2919235630;
var NNI2818572565 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI2818572565.node = NNI2818572565;
NTI2818572564.base = NTI2818572565;
var NNI2818572567 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI2818572567.node = NNI2818572567;
NTI2818572566.base = NTI2818572567;
var NNI2818572510 = {kind: 2, len: 27, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2818572426, name: "document", sons: null}, 
{kind: 1, offset: "selectionsInternal", len: 0, typ: NTI2449473555, name: "selectionsInternal", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2818572516, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "searchQuery", len: 0, typ: NTI33554449, name: "searchQuery", sons: null}, 
{kind: 1, offset: "searchRegex", len: 0, typ: NTI2818572524, name: "searchRegex", sons: null}, 
{kind: 1, offset: "searchResults", len: 0, typ: NTI2818572541, name: "searchResults", sons: null}, 
{kind: 1, offset: "targetColumn", len: 0, typ: NTI33554435, name: "targetColumn", sons: null}, 
{kind: 1, offset: "hideCursorWhenInactive", len: 0, typ: NTI33554466, name: "hideCursorWhenInactive", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2113929228, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "commandCount", len: 0, typ: NTI33554435, name: "commandCount", sons: null}, 
{kind: 1, offset: "commandCountRestore", len: 0, typ: NTI33554435, name: "commandCountRestore", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lineNumbers", len: 0, typ: NTI2818572554, name: "lineNumbers", sons: null}, 
{kind: 1, offset: "lastRenderedLines", len: 0, typ: NTI2818572562, name: "lastRenderedLines", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2818572563, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "completionsBaseIndex", len: 0, typ: NTI33554435, name: "completionsBaseIndex", sons: null}, 
{kind: 1, offset: "completionsScrollOffset", len: 0, typ: NTI33554445, name: "completionsScrollOffset", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2818572564, name: "lastItems", sons: null}, 
{kind: 1, offset: "lastCompletionsWidget", len: 0, typ: NTI2785017859, name: "lastCompletionsWidget", sons: null}, 
{kind: 1, offset: "lastCompletionWidgets", len: 0, typ: NTI2818572566, name: "lastCompletionWidgets", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}, 
{kind: 1, offset: "scrollToCompletion", len: 0, typ: NTI1191183280, name: "scrollToCompletion", sons: null}]};
NTI2818572510.node = NNI2818572510;
NTI2818572510.base = NTI2415919108;
var NNI3003121804 = {kind: 1, offset: "val", len: 0, typ: NTI3003121668, name: "val", sons: null};
NTI3003121804.node = NNI3003121804;
var NNI2969569488 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121668, name: "Field1", sons: null}]};
NTI2969569488.node = NNI2969569488;
NTI2818572509.base = NTI2818572510;
NTI2969568607.base = NTI2969568610;
var NNI2969568604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2969568607, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2969568604.node = NNI2969568604;
NTI2969568612.base = NTI2969568615;
NTI2969568613.base = NTI2969568461;
NTI2969568614.base = NTI2969568461;
var NNI2969568591 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "symbols", len: 0, typ: NTI3087008712, name: "symbols", sons: null}, 
{kind: 1, offset: "rootNode", len: 0, typ: NTI3003121668, name: "rootNode", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI2969568604, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI2969568612, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2969568613, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2969568614, name: "redoOps", sons: null}]};
NTI2969568591.node = NNI2969568591;
NTI2969568591.base = NTI2197815300;
NTI2969568590.base = NTI2969568591;
NTI3170893829.base = NTI2969568617;
var NNI3170893832 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI3170893832.node = NNI3170893832;
NTI3170893831.base = NTI3170893832;
var NNI3170893828 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2969568590, name: "document", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3170893829, name: "completions", sons: null}, 
{kind: 1, offset: "handleSymbolSelected", len: 0, typ: NTI3170893830, name: "handleSymbolSelected", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3170893831, name: "lastItems", sons: null}]};
NTI3170893828.node = NNI3170893828;
NTI3170893828.base = NTI2483027972;
NTI1979711564.base = NTI33554449;
NTI3170893834.base = NTI2969568617;
var NNI1660944862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1660944862.node = NNI1660944862;
var NNI1660944394 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1660944395, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1660944396, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1660944397, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1660944398, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1660944399, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1660944404, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1660944406, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1660944407, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1660944408, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1660944409, name: "flushImpl", sons: null}]};
NTI1660944394.node = NNI1660944394;
NTI1660944394.base = NTI33555171;
NTI1660944862.base = NTI1660944394;
var NNI1694498820 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498820, name: "tkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498820, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498820, name: "tkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498820, name: "tkInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498820, name: "tkFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498820, name: "tkTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498820, name: "tkFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498820, name: "tkNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498820, name: "tkCurlyLe", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498820, name: "tkCurlyRi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498820, name: "tkBracketLe", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498820, name: "tkBracketRi", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1694498820, name: "tkColon", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1694498820, name: "tkComma", len: 0, sons: null}}};
NTI1694498820.node = NNI1694498820;
var NNI1694498819 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498819, name: "jsonError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498819, name: "jsonEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498819, name: "jsonString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498819, name: "jsonInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498819, name: "jsonFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498819, name: "jsonTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498819, name: "jsonFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498819, name: "jsonNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498819, name: "jsonObjectStart", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498819, name: "jsonObjectEnd", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498819, name: "jsonArrayStart", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498819, name: "jsonArrayEnd", len: 0, sons: null}}};
NTI1694498819.node = NNI1694498819;
var NNI1694498821 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498821, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498821, name: "errInvalidToken", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498821, name: "errStringExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498821, name: "errColonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498821, name: "errCommaExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498821, name: "errBracketRiExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498821, name: "errCurlyRiExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498821, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498821, name: "errEOC_Expected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498821, name: "errEofExpected", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498821, name: "errExprExpected", len: 0, sons: null}}};
NTI1694498821.node = NNI1694498821;
var NNI1694498822 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498822, name: "stateEof", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498822, name: "stateStart", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498822, name: "stateObject", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498822, name: "stateArray", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498822, name: "stateExpectArrayComma", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498822, name: "stateExpectObjectComma", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498822, name: "stateExpectColon", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498822, name: "stateExpectValue", len: 0, sons: null}}};
NTI1694498822.node = NNI1694498822;
NTI1694498830.base = NTI1694498822;
var NNI1694498823 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "tok", len: 0, typ: NTI1694498820, name: "tok", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1694498819, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1694498821, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1694498830, name: "state", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "rawStringLiterals", len: 0, typ: NTI33554466, name: "rawStringLiterals", sons: null}]};
NTI1694498823.node = NNI1694498823;
NTI1660944393.base = NTI1660944394;
NTI1644167173.base = NTI33554448;
var NNI1644167172 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1660944393, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1644167173, name: "refillChars", sons: null}]};
NTI1644167172.node = NNI1644167172;
NTI1644167172.base = NTI33555171;
NTI1694498823.base = NTI1644167172;
NTI1694498863.base = NTI1694498822;
var NNI1694498825 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498825.node = NNI1694498825;
NTI1694498825.base = NTI134217746;
var NNI2550136836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}]};
NTI2550136836.node = NNI2550136836;
var NNI3087007967 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI3087007967.node = NNI3087007967;
var NNI3087007896 = {kind: 1, offset: "val", len: 0, typ: NTI3087007773, name: "val", sons: null};
NTI3087007896.node = NNI3087007896;
var NNI2969578215 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554446, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI2969578215.node = NNI2969578215;
var NNI2264924164 = {kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null};
NTI2264924164.node = NNI2264924164;
NTI2264924164.base = NTI2214592520;
NTI2214592521.base = NTI33554449;
NTI2214592522.base = NTI33554449;
var NNI2214592517 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "files", len: 0, typ: NTI2214592521, name: "files", sons: null}, 
{kind: 1, offset: "folders", len: 0, typ: NTI2214592522, name: "folders", sons: null}]};
NTI2214592517.node = NNI2214592517;
var NNI2399141891 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "done", len: 0, typ: NTI33554466, name: "done", sons: null}, 
{kind: 1, offset: "listing", len: 0, typ: NTI2214592517, name: "listing", sons: null}]};
NTI2399141891.node = NNI2399141891;
var NNI2399141907 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2399141891, name: "Field2", sons: null}]};
NTI2399141907.node = NNI2399141907;
NTI2399141904.base = NTI2399141907;
var NNI2399141901 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2399141904, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2399141901.node = NNI2399141901;
var NNI2399141893 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2399141901, name: "cachedDirectoryListings", sons: null}]};
NTI2399141893.node = NNI2399141893;
NTI2399141893.base = NTI2214592520;
var NNI2281701394 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2214592517, name: "Field2", sons: null}]};
NTI2281701394.node = NNI2281701394;
NTI2281701391.base = NTI2281701394;
var NNI2281701388 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2281701391, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2281701388.node = NNI2281701388;
var NNI2281701380 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "user", len: 0, typ: NTI33554449, name: "user", sons: null}, 
{kind: 1, offset: "repository", len: 0, typ: NTI33554449, name: "repository", sons: null}, 
{kind: 1, offset: "branchOrHash", len: 0, typ: NTI33554449, name: "branchOrHash", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2281701388, name: "cachedDirectoryListings", sons: null}, 
{kind: 1, offset: "pathToSha", len: 0, typ: NTI1795162120, name: "pathToSha", sons: null}]};
NTI2281701380.node = NNI2281701380;
NTI2281701380.base = NTI2214592520;
var NNI1291845663 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1291845663, name: "Local", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1291845663, name: "AbsytreeServer", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1291845663, name: "Github", len: 0, sons: null}}};
NTI1291845663.node = NNI1291845663;
var NNI1811939334 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939334, name: "joptEnumOrd", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939334, name: "joptEnumSymbol", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939334, name: "joptEnumString", len: 0, sons: null}}};
NTI1811939334.node = NNI1811939334;
var NNI1811939335 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939335, name: "joptJsonNodeAsRef", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939335, name: "joptJsonNodeAsCopy", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939335, name: "joptJsonNodeAsObject", len: 0, sons: null}}};
NTI1811939335.node = NNI1811939335;
var NNI1811939336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "enumMode", len: 0, typ: NTI1811939334, name: "enumMode", sons: null}, 
{kind: 1, offset: "jsonNodeMode", len: 0, typ: NTI1811939335, name: "jsonNodeMode", sons: null}]};
NTI1811939336.node = NNI1811939336;
var NNI1291845643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845643.node = NNI1291845643;
NTI1291845643.base = NTI1291845642;
var NNI1291845644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845644.node = NNI1291845644;
NTI1291845644.base = NTI1291845642;
var NNI1291845645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845645.node = NNI1291845645;
NTI1291845645.base = NTI1291845642;
var NNI2113929938 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2113929938.node = NNI2113929938;
var NNI3221225480 = {kind: 1, offset: "score", len: 0, typ: NTI33554446, name: "score", sons: null};
NTI3221225480.node = NNI3221225480;
NTI3221225480.base = NTI33555171;
NTI3221225475.base = NTI3221225480;
NTI3221225495.base = NTI3221225475;
var NNI3221225500 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI3221225500.node = NNI3221225500;
NTI3221225499.base = NTI3221225500;
var NNI2499805188 = {kind: 1, offset: "canceled", len: 0, typ: NTI33554466, name: "canceled", sons: null};
NTI2499805188.node = NNI2499805188;
NTI2499805187.base = NTI2499805188;
var NNI3221225494 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554435, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3221225495, name: "completions", sons: null}, 
{kind: 1, offset: "handleItemConfirmed", len: 0, typ: NTI3221225496, name: "handleItemConfirmed", sons: null}, 
{kind: 1, offset: "handleItemSelected", len: 0, typ: NTI3221225497, name: "handleItemSelected", sons: null}, 
{kind: 1, offset: "handleCanceled", len: 0, typ: NTI3221225498, name: "handleCanceled", sons: null}, 
{kind: 1, offset: "getCompletions", len: 0, typ: NTI3221225501, name: "getCompletions", sons: null}, 
{kind: 1, offset: "getCompletionsAsync", len: 0, typ: NTI3221225503, name: "getCompletionsAsync", sons: null}, 
{kind: 1, offset: "getCompletionsAsyncIter", len: 0, typ: NTI3221225506, name: "getCompletionsAsyncIter", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3221225499, name: "lastItems", sons: null}, 
{kind: 1, offset: "cancellationToken", len: 0, typ: NTI2499805187, name: "cancellationToken", sons: null}]};
NTI3221225494.node = NNI3221225494;
NTI3221225494.base = NTI2483027972;
NTI3221225512.base = NTI3221225475;
NTI3221225479.base = NTI3221225494;
var NNI3221225686 = {kind: 1, offset: "val", len: 0, typ: NTI3221225479, name: "val", sons: null};
NTI3221225686.node = NNI3221225686;
var NNI1291848451 = {kind: 1, offset: "val", len: 0, typ: NTI2483027971, name: "val", sons: null};
NTI1291848451.node = NNI1291848451;
var NNI1694498824 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498824.node = NNI1694498824;
NTI1694498824.base = NTI134217746;
var NNI2818585760 = {kind: 1, offset: "val", len: 0, typ: NTI1627389956, name: "val", sons: null};
NTI2818585760.node = NNI2818585760;
var NNI1442840583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1442840583.node = NNI1442840583;
var NNI1291848506 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}]};
NTI1291848506.node = NNI1291848506;
NTI1291848506.base = NTI3221225480;
var NNI1291848508 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "workspaceFolder", len: 0, typ: NTI2197815306, name: "workspaceFolder", sons: null}]};
NTI1291848508.node = NNI1291848508;
NTI1291848508.base = NTI3221225480;
NTI1291854649.base = NTI2449473539;
var NNI1291848319 = {kind: 1, offset: "val", len: 0, typ: NTI2415919107, name: "val", sons: null};
NTI1291848319.node = NNI1291848319;
NTI2969568628.base = NTI3003121668;
var NNI2969568626 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2969568628, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2969568626.node = NNI2969568626;
NTI2969568635.base = NTI2969568617;
var NNI2969568637 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI2969568637.node = NNI2969568637;
NTI2969568636.base = NTI2969568637;
NTI2969568638.base = NTI2969568639;
var NNI2969568640 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568640.node = NNI2969568640;
var NNI2969568641 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568641.node = NNI2969568641;
var NNI2969568642 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568642.node = NNI2969568642;
var NNI2969568643 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568643.node = NNI2969568643;
var NNI2969568620 = {kind: 2, len: 26, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2969568590, name: "document", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI3003121668, name: "selectedNode", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2969568626, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "selectionFuture", len: 0, typ: NTI2969568626, name: "selectionFuture", sons: null}, 
{kind: 1, offset: "deletedNode", len: 0, typ: NTI3003121783, name: "deletedNode", sons: null}, 
{kind: 1, offset: "lastRootNode", len: 0, typ: NTI3003121668, name: "lastRootNode", sons: null}, 
{kind: 1, offset: "currentlyEditedSymbol", len: 0, typ: NTI2046820355, name: "currentlyEditedSymbol", sons: null}, 
{kind: 1, offset: "currentlyEditedNode", len: 0, typ: NTI3003121668, name: "currentlyEditedNode", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "textDocument", len: 0, typ: NTI2818572426, name: "textDocument", sons: null}, 
{kind: 1, offset: "textEditEventHandler", len: 0, typ: NTI2113929228, name: "textEditEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2969568635, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2969568636, name: "lastItems", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastLayouts", len: 0, typ: NTI2969568638, name: "lastLayouts", sons: null}, 
{kind: 1, offset: "lastEditCommand", len: 0, typ: NTI2969568640, name: "lastEditCommand", sons: null}, 
{kind: 1, offset: "lastMoveCommand", len: 0, typ: NTI2969568641, name: "lastMoveCommand", sons: null}, 
{kind: 1, offset: "lastOtherCommand", len: 0, typ: NTI2969568642, name: "lastOtherCommand", sons: null}, 
{kind: 1, offset: "lastCommand", len: 0, typ: NTI2969568643, name: "lastCommand", sons: null}]};
NTI2969568620.node = NNI2969568620;
NTI2969568620.base = NTI2415919108;
var NNI1291855972 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291855972.node = NNI1291855972;
var NNI1291855973 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291855973.node = NNI1291855973;
var NNI1291855971 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1291855972, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291855973, name: "Field1", sons: null}]};
NTI1291855971.node = NNI1291855971;
NTI1291855979.base = NTI1291855971;
NTI1291855966.base = NTI2449473547;
var NNI1275068527 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068527.node = NNI1275068527;
NTI1275068527.base = NTI33555171;
NTI1275068430.base = NTI1275068527;
NTI1275068556.base = NTI1275068434;
var NNI1275068555 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1275068556, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1275068555.node = NNI1275068555;
NTI1275068555.base = NTI1275068541;
NTI1275068444.base = NTI1275068555;
var NNI1275068554 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1275068554.node = NNI1275068554;
NTI1275068554.base = NTI1275068541;
NTI1275068443.base = NTI1275068554;
NTI1275068542.base = NTI1275068443;
NTI1275068543.base = NTI1275068443;
var NNI1275068541 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1275068430, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1275068444, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1275068542, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1275068543, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1275068541.node = NNI1275068541;
NTI1275068432.base = NTI1275068530;
NTI1275068531.base = NTI1275068432;
NTI1275068532.base = NTI1275068432;
NTI1275068533.base = NTI1275068432;
var NNI1275068431 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1275068431, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068431, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068431, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068431, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275068431, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275068431, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275068431, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275068431, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275068431, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275068431, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275068431, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275068431, name: "NotationNode", len: 0, sons: null}}};
NTI1275068431.node = NNI1275068431;
var NNI1275068553 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068553.node = NNI1275068553;
NTI1275068553.base = NTI1275068541;
NTI1275068442.base = NTI1275068553;
NTI1275068535.base = NTI1275068442;
NTI1275068536.base = NTI1275068444;
var NNI1275068557 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1275068557.node = NNI1275068557;
NTI1275068557.base = NTI1275068541;
NTI1275068445.base = NTI1275068557;
NTI1275068537.base = NTI1275068445;
NTI1275068538.base = NTI1275068434;
var NNI1275068552 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1275068552.node = NNI1275068552;
NTI1275068552.base = NTI1275068541;
NTI1275068441.base = NTI1275068552;
NTI1275068539.base = NTI1275068441;
var NNI1275068551 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068551.node = NNI1275068551;
NTI1275068551.base = NTI1275068541;
NTI1275068440.base = NTI1275068551;
NTI1275068540.base = NTI1275068440;
var NNI1275068601 = {kind: 1, offset: "then", len: 0, typ: NTI1275068602, name: "then", sons: null};
NTI1275068601.node = NNI1275068601;
NTI1275068481.base = NTI1275068601;
var NNI1275068604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1275068481, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1275068605, name: "onloadingdone", sons: null}]};
NTI1275068604.node = NNI1275068604;
NTI1275068482.base = NTI1275068604;
var NNI1275068534 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1275068434, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1275068434, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1275068434, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1275068434, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1275068535, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1275068536, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1275068537, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1275068538, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1275068539, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1275068540, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1275068482, name: "fonts", sons: null}]};
NTI1275068534.node = NNI1275068534;
NTI1275068534.base = NTI1275068530;
NTI1275068433.base = NTI1275068534;
var NNI1275068558 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1275068558.node = NNI1275068558;
NTI1275068558.base = NTI33555171;
NTI1275068446.base = NTI1275068558;
var NNI1275068530 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1275068531, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1275068532, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1275068533, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1275068432, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1275068432, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1275068432, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1275068431, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1275068432, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1275068432, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1275068432, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1275068433, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1275068446, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1275068434, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1275068530.node = NNI1275068530;
var NNI1275068485 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1275068486, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1275068487, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1275068488, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1275068489, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1275068490, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1275068491, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1275068492, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1275068493, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1275068494, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1275068495, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1275068496, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1275068497, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1275068498, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1275068499, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1275068500, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1275068501, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1275068502, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1275068503, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1275068504, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1275068505, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1275068506, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1275068507, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1275068508, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1275068509, name: "onloadend", sons: null}]};
NTI1275068485.node = NNI1275068485;
NTI1275068485.base = NTI33555171;
NTI1275068530.base = NTI1275068485;
NTI1275068541.base = NTI1275068530;
NTI1275068434.base = NTI1275068541;
NTI3338665996.base = NTI2147483653;
var NNI3338666009 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3338666010, name: "Field1", sons: null}]};
NTI3338666009.node = NNI3338666009;
NTI3338666008.base = NTI3338666009;
var NNI3338666002 = {kind: 1, offset: "handlers", len: 0, typ: NTI3338666008, name: "handlers", sons: null};
NTI3338666002.node = NNI3338666002;
var NNI3338666026 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554449, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI3338666026.node = NNI3338666026;
var NNI3338666033 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3338666030, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3338666030, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3338666026, name: "value", sons: null}]};
NTI3338666033.node = NNI3338666033;
NTI3338666030.base = NTI3338666033;
var NNI3338666044 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3338666030, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3338666030, name: "tail", sons: null}]};
NTI3338666044.node = NNI3338666044;
NTI3338666054.base = NTI3338666033;
var NNI3338666062 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3338666054, name: "Field2", sons: null}]};
NTI3338666062.node = NNI3338666062;
NTI3338666059.base = NTI3338666062;
var NNI3338666071 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3338666059, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3338666071.node = NNI3338666071;
var NNI2818584226 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2818584226.node = NNI2818584226;
NTI2818584223.base = NTI2818584226;
var NNI2818584220 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818584223, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818584220.node = NNI2818584220;
var NNI3338666021 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "capacity", len: 0, typ: NTI33554435, name: "capacity", sons: null}, 
{kind: 1, offset: "list", len: 0, typ: NTI3338666044, name: "list", sons: null}, 
{kind: 1, offset: "table", len: 0, typ: NTI3338666071, name: "table", sons: null}, 
{kind: 1, offset: "recordRemovedKeys", len: 0, typ: NTI33554466, name: "recordRemovedKeys", sons: null}, 
{kind: 1, offset: "removedKeys", len: 0, typ: NTI2818584220, name: "removedKeys", sons: null}]};
NTI3338666021.node = NNI3338666021;
NTI3338666020.base = NTI3338666021;
NTI3338666076.base = NTI3338666077;
var NNI1275068561 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI33554466, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI33554466, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI33554466, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI33554466, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI1275068432, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI33554466, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI33554435, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI1275068432, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI33554466, name: "isTrusted", sons: null}]};
NTI1275068561.node = NNI1275068561;
NTI1275068561.base = NTI33555171;
NTI1275068448.base = NTI1275068561;
var NNI3338665995 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI1275068434, name: "content", sons: null}, 
{kind: 1, offset: "boundsStack", len: 0, typ: NTI3338665996, name: "boundsStack", sons: null}, 
{kind: 1, offset: "onResized", len: 0, typ: NTI3338666002, name: "onResized", sons: null}, 
{kind: 1, offset: "mFontSize", len: 0, typ: NTI33554445, name: "mFontSize", sons: null}, 
{kind: 1, offset: "mLineHeight", len: 0, typ: NTI33554445, name: "mLineHeight", sons: null}, 
{kind: 1, offset: "mLineDistance", len: 0, typ: NTI33554445, name: "mLineDistance", sons: null}, 
{kind: 1, offset: "mCharWidth", len: 0, typ: NTI33554445, name: "mCharWidth", sons: null}, 
{kind: 1, offset: "escapedText", len: 0, typ: NTI3338666020, name: "escapedText", sons: null}, 
{kind: 1, offset: "domUpdates", len: 0, typ: NTI3338666076, name: "domUpdates", sons: null}, 
{kind: 1, offset: "currentEvent", len: 0, typ: NTI1275068448, name: "currentEvent", sons: null}]};
NTI3338665995.node = NNI3338665995;
NTI3338665995.base = NTI2768240644;
NTI2466250766.base = NTI2113929228;
NTI1291849420.base = NTI2415919108;
NTI1291849426.base = NTI1291849420;
var NNI2550136853 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2550136853.node = NNI2550136853;
NTI2550136853.base = NTI134217746;
var NNI2533359773 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI2533359773.node = NNI2533359773;
var NNI1291850591 = {kind: 1, offset: "val", len: 0, typ: NTI1291845669, name: "val", sons: null};
NTI1291850591.node = NNI1291850591;
NTI1627390088.base = NTI1627389956;
var NNI1291845664 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1291845663, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI33554449, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "settings", len: 0, typ: NTI1627389956, name: "settings", sons: null}]};
NTI1291845664.node = NNI1291845664;
NTI1291845667.base = NTI1291845664;
var NNI1291845662 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "ast", len: 0, typ: NTI33554466, name: "ast", sons: null}, 
{kind: 1, offset: "languageID", len: 0, typ: NTI33554449, name: "languageID", sons: null}, 
{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspaceId", len: 0, typ: NTI33554449, name: "workspaceId", sons: null}]};
NTI1291845662.node = NNI1291845662;
NTI1291845668.base = NTI1291845662;
var NNI1291845666 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "theme", len: 0, typ: NTI33554449, name: "theme", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554446, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "workspaceFolders", len: 0, typ: NTI1291845667, name: "workspaceFolders", sons: null}, 
{kind: 1, offset: "openEditors", len: 0, typ: NTI1291845668, name: "openEditors", sons: null}]};
NTI1291845666.node = NNI1291845666;
var NNI2801795076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2801795076.node = NNI2801795076;
NTI2801795076.base = NTI2751463428;
var NNI1627391161 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1627389956, name: "Field1", sons: null}]};
NTI1627391161.node = NNI1627391161;
NTI2516582915.base = NTI2516582403;
var NNI2516584388 = {kind: 1, offset: "val", len: 0, typ: NTI2516582405, name: "val", sons: null};
NTI2516584388.node = NNI2516584388;
NTI2785017871.base = NTI2785017859;
var NNI2785017870 = {kind: 1, offset: "children", len: 0, typ: NTI2785017871, name: "children", sons: null};
NTI2785017870.node = NNI2785017870;
NTI2785017870.base = NTI2785017866;
NTI2785017869.base = NTI2785017859;
var NNI2785017868 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "maskContent", len: 0, typ: NTI33554466, name: "maskContent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2785017869, name: "children", sons: null}]};
NTI2785017868.node = NNI2785017868;
NTI2785017868.base = NTI2785017866;
NTI2785017873.base = NTI2785017859;
var NNI2785017872 = {kind: 1, offset: "children", len: 0, typ: NTI2785017873, name: "children", sons: null};
NTI2785017872.node = NNI2785017872;
NTI2785017872.base = NTI2785017866;
NTI2785017875.base = NTI2785017859;
var NNI2785017874 = {kind: 1, offset: "children", len: 0, typ: NTI2785017875, name: "children", sons: null};
NTI2785017874.node = NNI2785017874;
NTI2785017874.base = NTI2785017866;
var NNI2785017876 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "lastRenderedText", len: 0, typ: NTI33554449, name: "lastRenderedText", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2516582404, name: "style", sons: null}]};
NTI2785017876.node = NNI2785017876;
NTI2785017876.base = NTI2785017866;
var NNI2818578635 = {kind: 1, offset: "val", len: 0, typ: NTI2818572509, name: "val", sons: null};
NTI2818578635.node = NNI2818578635;
NTI2969568619.base = NTI2969568620;
var NNI2969574395 = {kind: 1, offset: "val", len: 0, typ: NTI2969568619, name: "val", sons: null};
NTI2969574395.node = NNI2969574395;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555176;
NTI1191182365.base = NTI1191182401;
NTI1191182363.base = NTI1191182393;
NTI1191182362.base = NTI1191182389;
NTI1191182361.base = NTI1191182385;
var NNI1191182354 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182354, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182354, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182354, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182354, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182354, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182354, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182354, name: "Sunday", len: 0, sons: null}}};
NTI1191182354.node = NNI1191182354;
NTI1191182364.base = NTI1191182397;
var NNI1191182409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1191182410, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1191182411, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1191182409.node = NNI1191182409;
NTI1191182374.base = NTI1191182409;
var NNI1191182369 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1191182363, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1191182362, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1191182361, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1191182354, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1191182364, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1191182374, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1191182369.node = NNI1191182369;
NTI1191182369.base = NTI33555171;
var NNI1191182368 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182368.node = NNI1191182368;
var NNI1191182370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182370.node = NNI1191182370;
NTI1191182360.base = NTI1191182380;
var NNI1191182353 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1191182353, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182353, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182353, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182353, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182353, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182353, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1191182353, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1191182353, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1191182353, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1191182353, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1191182353, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1191182353, name: "December", len: 0, sons: null}}};
NTI1191182353.node = NNI1191182353;
var NNI1191182532 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1191182360, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1191182353, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1191182532.node = NNI1191182532;
var NNI1191182375 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1191182368, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1191182375.node = NNI1191182375;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555177;
NTI2919237549.base = NTI2919235613;
var NNI2919237548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2919237549, name: "Field1", sons: null}]};
NTI2919237548.node = NNI2919237548;
var NNI2466250756 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2466250756.node = NNI2466250756;
NTI2466250756.base = NTI2415919108;
NTI2415919187.base = NTI2113929228;
var NNI2818586256 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818586256.node = NNI2818586256;
var NNI2818586210 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2449473545, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818586210.node = NNI2818586210;
NTI3170894057.base = NTI2113929228;
var NNI3221225617 = {kind: 1, offset: "val", len: 0, typ: NTI3221225475, name: "val", sons: null};
NTI3221225617.node = NNI3221225617;
var NNI3170893968 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2969568617, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3170893968.node = NNI3170893968;
var NNI2785018260 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2147483653, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2785018260.node = NNI2785018260;
NTI1291847200.base = NTI2147483653;
var NNI2130706435 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2130706435, name: "Relative", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2130706435, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2130706435, name: "Percent", len: 0, sons: null}}};
NTI2130706435.node = NNI2130706435;
var NNI2130706436 = {kind: 3, offset: "kind", len: 3, typ: NTI2130706435, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rel", len: 0, typ: NTI33554446, name: "rel", sons: null}], 
[setConstr(1), {kind: 1, offset: "abs", len: 0, typ: NTI33554446, name: "abs", sons: null}], 
[setConstr(2), {kind: 1, offset: "per", len: 0, typ: NTI33554446, name: "per", sons: null}]]};
NTI2130706436.node = NNI2130706436;
var NNI2130706495 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2147483653, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI2130706495.node = NNI2130706495;
NTI1291846989.base = NTI2147483653;
var NNI2550136837 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554441, name: "a", sons: null}]};
NTI2550136837.node = NNI2550136837;
var NNI2885681170 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681170.node = NNI2885681170;
NTI2885681170.base = NTI33555171;
NTI2885681169.base = NTI2885681170;
NTI2885681249.base = NTI2885681169;
var NNI3305111556 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3305111556.node = NNI3305111556;
var NNI3087007840 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007773, name: "Field2", sons: null}]};
NTI3087007840.node = NNI3087007840;
NTI3087007837.base = NTI3087007840;
var NNI3087007834 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007837, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007834.node = NNI3087007834;
NTI2516582848.base = NTI2516582403;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function modInt(a_33556899, b_33556900) {
        if (b_33556900 == 0) raiseDivByZero();
    if (b_33556900 == -1 && a_33556899 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556899 % b_33556900);
  

  
}

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}
                      var helper_2063597622 = new Uint32Array([3198944359, 3630892171]);

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function divInt(a_33556895, b_33556896) {
        if (b_33556896 == 0) raiseDivByZero();
    if (b_33556896 == -1 && a_33556895 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556895 / b_33556896);
  

  
}

function eqStrings(a_33556874, b_33556875) {
        if (a_33556874 == b_33556875) return true;
    if (a_33556874 === null && b_33556875.length == 0) return true;
    if (b_33556875 === null && a_33556874.length == 0) return true;
    if ((!a_33556874) || (!b_33556875)) return false;
    var alen = a_33556874.length;
    if (alen != b_33556875.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556874[i] != b_33556875[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr();
var ConstSet10 = setConstr();

function SetPlus(a_33556858, b_33556859) {
        var result = {};
    for (var elem in a_33556858) { result[elem] = true; }
    for (var elem in b_33556859) { result[elem] = true; }
    return result;
  

  
}
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(2);

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet14 = setConstr();

function SetEq(a_33556842, b_33556843) {
        for (var elem in a_33556842) { if (!b_33556843[elem]) return false; }
    for (var elem in b_33556843) { if (!a_33556842[elem]) return false; }
    return true;
  

  
}

function reprEnum(e_33557353, typ_33557354) {
  var result_33557355 = [];

    var tmp_33557356 = false;
    var item_33557357 = typ_33557354.node.sons[e_33557353];
    tmp_33557356 = item_33557357 !== undefined
    if (tmp_33557356) {
    result_33557355 = nimCopy(null, makeNimstrLit(item_33557357.name), NTI33554449);
    }
    else {
      result_33557355 = nimCopy(null, (HEX24_369098760(e_33557353) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557355;

}
var ConstSet15 = setConstr();
var ConstSet16 = setConstr(1);
    var toUpperRanges_788530129 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_788530130 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_788530127 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_788530128 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);

function SetMinus(a_33556862, b_33556863) {
        var result = {};
    for (var elem in a_33556862) {
      if (!b_33556863[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 90]);
var ConstSet21 = setConstr(5);

function raiseFieldError2(f_33556718, discVal_33556719) {
    raiseException({message: (f_33556718 || []).concat(discVal_33556719 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556451) {
  var result_33556452 = [];

    if (x_33556451) {
    result_33556452 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556452 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556452;

}

function reprDiscriminant(e_33557377, typ_33557378) {
    var Temporary1;

  var result_33557379 = [];

    switch (typ_33557378.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557377, typ_33557378);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557377 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557377);
      break;
    }
    result_33557379 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557379;

}

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}
var ConstSet22 = setConstr(4);

function genericReset(x_33557114, ti_33557115) {
  var result_33557116 = null;

    result_33557116 = null;
    switch (ti_33557115.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557074(ti_33557115)) {
              result_33557116 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557116 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557115.kind == 17)) {
      result_33557116 = {m_type: ti_33557115};
      }
      else {
        result_33557116 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557116 = [];
    
      break;
    case 4:
    case 16:
            result_33557116 = new Array(x_33557114.length);
      for (var i = 0; i < x_33557114.length; ++i) {
        result_33557116[i] = genericReset(x_33557114[i], ti_33557115.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557116;

}
var ConstSet23 = setConstr(13, 10);
var ConstSet24 = setConstr(2);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(3);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(0);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(1);
var ConstSet36 = setConstr(2);
var ConstSet37 = setConstr(2);
var ConstSet38 = setConstr(2);
var ConstSet39 = setConstr(0);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(0);
var ConstSet42 = setConstr(1);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(1);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(2);
var ConstSet47 = setConstr(2);
var ConstSet48 = setConstr(2);
var ConstSet49 = setConstr(47, 47);
var ConstSet50 = setConstr(47, 47);
var ConstSet51 = setConstr(47, 47);
var ConstSet52 = setConstr(5);
var ConstSet53 = setConstr(5);

function isObj(obj_33557181, subclass_33557182) {
  var result_33557183 = false;

  BeforeRet: {
    var x_33557184 = obj_33557181;
    if ((x_33557184 == subclass_33557182)) {
    result_33557183 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557184 == subclass_33557182))) break Label2;
          if ((x_33557184 == null)) {
          result_33557183 = false;
          break BeforeRet;
          }
          
          x_33557184 = x_33557184.base;
        }
    };
    result_33557183 = true;
    break BeforeRet;
  };

  return result_33557183;

}

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet54 = setConstr([48, 57], [65, 90], [97, 122]);
var ConstSet55 = setConstr(5);
var ConstSet56 = setConstr(5);
var ConstSet57 = setConstr(2);
var ConstSet58 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet59 = setConstr([65, 90], [97, 122]);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}
    var names_3003123684 = [[69,109,112,116,121], [73,100,101,110,116,105,102,105,101,114], [78,117,109,98,101,114,76,105,116,101,114,97,108], [83,116,114,105,110,103,76,105,116,101,114,97,108], [67,111,110,115,116,68,101,99,108], [76,101,116,68,101,99,108], [86,97,114,68,101,99,108], [78,111,100,101,76,105,115,116], [67,97,108,108], [73,102], [87,104,105,108,101], [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [80,97,114,97,109,115], [65,115,115,105,103,110,109,101,110,116]];
var ConstSet60 = setConstr([48, 57]);
var ConstSet61 = setConstr([48, 57]);
var ConstSet62 = setConstr(4);
var ConstSet63 = setConstr(4);
var ConstSet64 = setConstr(5);
var ConstSet65 = setConstr(2);
var ConstSet66 = setConstr(3);
var ConstSet67 = setConstr(5);
var ConstSet68 = setConstr(6);
var ConstSet69 = setConstr(6);
var ConstSet70 = setConstr(4);
var ConstSet71 = setConstr(4);
var ConstSet72 = setConstr(4);
var ConstSet73 = setConstr(4);
var ConstSet74 = setConstr(4);
var ConstSet75 = setConstr(5);
var ConstSet76 = setConstr(5);
var ConstSet77 = setConstr(4);
var ConstSet78 = setConstr(4);
var ConstSet79 = setConstr(4);
var ConstSet80 = setConstr(4);
var ConstSet81 = setConstr(4);
var ConstSet82 = setConstr(4);
var ConstSet83 = setConstr(4);
var ConstSet84 = setConstr(4);
var ConstSet85 = setConstr(4);
var ConstSet86 = setConstr(6);
var ConstSet87 = setConstr(6);
var ConstSet88 = setConstr(0);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(1);
var ConstSet91 = setConstr(0);
var ConstSet92 = setConstr(4);
var ConstSet93 = setConstr(4);
var ConstSet94 = setConstr(5);
var ConstSet95 = setConstr(4);
var ConstSet96 = setConstr(4);
var ConstSet97 = setConstr(3);
var ConstSet98 = setConstr(2);
var ConstSet99 = setConstr(5);
var ConstSet100 = setConstr(4);
var ConstSet101 = setConstr(4);
var ConstSet102 = setConstr(5);
var ConstSet103 = setConstr(6);
var ConstSet104 = setConstr(3);
var ConstSet105 = setConstr(3);
var ConstSet106 = setConstr(2);
var ConstSet107 = setConstr(2);
var ConstSet108 = setConstr(4);
var ConstSet109 = setConstr(4);
var ConstSet110 = setConstr(5);
var ConstSet111 = setConstr(5);
var ConstSet112 = setConstr(6);
var ConstSet113 = setConstr(6);
var ConstSet114 = setConstr(5);
var ConstSet115 = setConstr(5);
var ConstSet116 = setConstr(3);
var ConstSet117 = setConstr(2);
var ConstSet118 = setConstr(5);
var ConstSet119 = setConstr(5);
var ConstSet120 = setConstr(6);
var ConstSet121 = setConstr(0);
var ConstSet122 = setConstr(1);
var ConstSet123 = setConstr(1);
var ConstSet124 = setConstr(1);
var ConstSet125 = setConstr(1);
var ConstSet126 = setConstr(0);
var ConstSet127 = setConstr(1);
var ConstSet128 = setConstr(0);
var ConstSet129 = setConstr(1);
var ConstSet130 = setConstr(3);
var ConstSet131 = setConstr(3);
var ConstSet132 = setConstr(4);
var ConstSet133 = setConstr(5);
var ConstSet134 = setConstr(4);
var ConstSet135 = setConstr(10, 9, 7);
var ConstSet136 = setConstr(8);
var ConstSet137 = setConstr(1);
var ConstSet138 = setConstr(0);
var ConstSet139 = setConstr(0);
var ConstSet140 = setConstr(0);
var ConstSet141 = setConstr(0);
var ConstSet142 = setConstr();
var ConstSet143 = setConstr(0);
var ConstSet144 = setConstr(0);
var ConstSet145 = setConstr(0);
var ConstSet146 = setConstr(2);
var ConstSet147 = setConstr(1);
var ConstSet148 = setConstr();
var ConstSet149 = setConstr(1);
var ConstSet150 = setConstr(1);
var ConstSet151 = setConstr(1);
var ConstSet152 = setConstr(3);
var ConstSet153 = setConstr(3);
var ConstSet154 = setConstr(3);

function negInt(a_33556925) {
  var result_33556926 = 0;

    result_33556926 = (a_33556925 * -1);

  return result_33556926;

}
var ConstSet155 = setConstr(2);
var ConstSet156 = setConstr(1);
var ConstSet157 = setConstr(1);
var ConstSet158 = setConstr(1);
var ConstSet159 = setConstr(0);
var ConstSet160 = setConstr(0);
var ConstSet161 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet162 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet163 = setConstr([48, 57]);
var ConstSet164 = setConstr([48, 57]);
var ConstSet165 = setConstr(101, 69);
var ConstSet166 = setConstr([48, 57]);
var ConstSet167 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557231, number_33557232, number_33557232_Idx) {
    var Temporary1;

  var result_33557233 = 0;

  BeforeRet: {
    var sign_33557234 = false;
    var i_33557235 = 0;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    sign_33557234 = true;
    i_33557235 += 1;
    }
    }
    if (((s_33557231[i_33557235] == 78) || (s_33557231[i_33557235] == 110))) {
    if (((s_33557231[(i_33557235 + 1)] == 65) || (s_33557231[(i_33557235 + 1)] == 97))) {
    if (((s_33557231[(i_33557235 + 2)] == 78) || (s_33557231[(i_33557235 + 2)] == 110))) {
    if (!((ConstSet161[s_33557231[(i_33557235 + 3)]] != undefined))) {
    number_33557232[number_33557232_Idx] = NaN;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if (((s_33557231[i_33557235] == 73) || (s_33557231[i_33557235] == 105))) {
    if (((s_33557231[(i_33557235 + 1)] == 78) || (s_33557231[(i_33557235 + 1)] == 110))) {
    if (((s_33557231[(i_33557235 + 2)] == 70) || (s_33557231[(i_33557235 + 2)] == 102))) {
    if (!((ConstSet162[s_33557231[(i_33557235 + 3)]] != undefined))) {
    if (sign_33557234) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557232[number_33557232_Idx] = Temporary1;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    var buf_33557254 = [];
    if (sign_33557234) {
    addChar(buf_33557254, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet163[s_33557231[i_33557235]] != undefined)) break Label3;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label5;
                i_33557235 += 1;
              }
          };
        }
    };
    if ((s_33557231[i_33557235] == 46)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet164[s_33557231[i_33557235]] != undefined)) break Label7;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label9;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557254).length == (sign_33557234 ? 1 : 0))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet165[s_33557231[i_33557235]] != undefined)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    }
    }
    if (!((ConstSet166[s_33557231[i_33557235]] != undefined))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet167[s_33557231[i_33557235]] != undefined)) break Label11;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label13;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    number_33557232[number_33557232_Idx] = parseFloatNative_33557211(buf_33557254);
    result_33557233 = i_33557235;
  };

  return result_33557233;

}
var ConstSet168 = setConstr(0);
var ConstSet169 = setConstr(0);
var ConstSet170 = setConstr(0);
var ConstSet171 = setConstr(0);
var ConstSet172 = setConstr(1);
var ConstSet173 = setConstr(4);
var ConstSet174 = setConstr(4);
var ConstSet175 = setConstr(4);
var ConstSet176 = setConstr(4);
var ConstSet177 = setConstr(1);
var ConstSet178 = setConstr(4);
var ConstSet179 = setConstr(0);
var ConstSet180 = setConstr(13, 10);
var ConstSet181 = setConstr(0);
var ConstSet182 = setConstr(1);
var ConstSet183 = setConstr(0);

function cmpStrings(a_33556866, b_33556867) {
        if (a_33556866 == b_33556867) return 0;
    if (!a_33556866) return -1;
    if (!b_33556867) return 1;
    for (var i = 0; i < a_33556866.length && i < b_33556867.length; i++) {
      var result = a_33556866[i] - b_33556867[i];
      if (result != 0) return result;
    }
    return a_33556866.length - b_33556867.length;
  

  
}
var ConstSet184 = setConstr(0);
var ConstSet185 = setConstr(13, 10);
var ConstSet186 = setConstr([48, 57]);
var ConstSet187 = setConstr([48, 57]);
var ConstSet188 = setConstr(69, 101);
var ConstSet189 = setConstr(43, 45);
var ConstSet190 = setConstr([48, 57]);
var ConstSet191 = setConstr(46, 101, 69);
var ConstSet192 = setConstr([48, 57], [65, 70], [97, 102]);
var ConstSet193 = setConstr([97, 122], [65, 90], 95);
var ConstSet194 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet195 = setConstr(4);
var ConstSet196 = setConstr([48, 57]);
var ConstSet197 = setConstr(0, 125);
var ConstSet198 = setConstr([48, 57]);
var ConstSet199 = setConstr([65, 90]);
var ConstSet200 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);

function absInt(a_33556931) {
    var Temporary1;

  var result_33556932 = 0;

    if ((a_33556931 < 0)) {
    Temporary1 = (a_33556931 * -1);
    }
    else {
    Temporary1 = a_33556931;
    }
    
    result_33556932 = Temporary1;

  return result_33556932;

}
      var tokToStr_1694498894 = [[105,110,118,97,108,105,100,32,116,111,107,101,110], [69,79,70], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [105,110,116,32,108,105,116,101,114,97,108], [102,108,111,97,116,32,108,105,116,101,114,97,108], [116,114,117,101], [102,97,108,115,101], [110,117,108,108], [123], [125], [91], [93], [58], [44]];
var ConstSet201 = setConstr(6);
var ConstSet202 = setConstr(46, 44);
var ConstSet203 = setConstr([65, 90]);
var ConstSet204 = setConstr([97, 122]);
var ConstSet205 = setConstr(4);
var ConstSet206 = setConstr(13, 10);
    var names_1291854604 = [[76,111,99,97,108], [65,98,115,121,116,114,101,101,83,101,114,118,101,114], [71,105,116,104,117,98]];
var ConstSet207 = setConstr(4);
var ConstSet208 = setConstr(2);
var ConstSet209 = setConstr(3);
var ConstSet210 = setConstr(1);
var ConstSet211 = setConstr(5);
var ConstSet212 = setConstr(5);
var ConstSet213 = setConstr(6);
var ConstSet214 = setConstr(6);
    var names_1291854738 = [[74,78,117,108,108], [74,66,111,111,108], [74,73,110,116], [74,70,108,111,97,116], [74,83,116,114,105,110,103], [74,79,98,106,101,99,116], [74,65,114,114,97,121]];
var ConstSet215 = setConstr(4);
var ConstSet216 = setConstr(2);
var ConstSet217 = setConstr(3);
var ConstSet218 = setConstr(1);
var ConstSet219 = setConstr(5);
var ConstSet220 = setConstr(6);
var ConstSet221 = setConstr(5);
var ConstSet222 = setConstr(5);
var ConstSet223 = setConstr(6);
var ConstSet224 = setConstr(5);
var ConstSet225 = setConstr(4);
var ConstSet226 = setConstr(4);
var ConstSet227 = setConstr(2);
var ConstSet228 = setConstr(3);
var ConstSet229 = setConstr(1);
var ConstSet230 = setConstr(2);
var ConstSet231 = setConstr(3);
var ConstSet232 = setConstr(1);
var ConstSet233 = setConstr(6);
var ConstSet234 = setConstr(6);
var ConstSet235 = setConstr(6);
var ConstSet236 = setConstr(4);
var ConstSet237 = setConstr(4);
var ConstSet238 = setConstr(2);
var ConstSet239 = setConstr(2);
var ConstSet240 = setConstr(3);
var ConstSet241 = setConstr(3);
var ConstSet242 = setConstr(1);
var ConstSet243 = setConstr(1);
var ConstSet244 = setConstr(6);
var ConstSet245 = setConstr(6);
var ConstSet246 = setConstr(5);
var ConstSet247 = setConstr(5);
var ConstSet248 = setConstr(5);
var ConstSet249 = setConstr(5);
var ConstSet250 = setConstr(5);
var ConstSet251 = setConstr(6);
var ConstSet252 = setConstr(5);
var ConstSet253 = setConstr(2);
var ConstSet254 = setConstr(2);
var ConstSet255 = setConstr(2);
var ConstSet256 = setConstr(6);
var ConstSet257 = setConstr(47, 47);
var ConstSet258 = setConstr(47, 47);
var ConstSet259 = setConstr(47, 47);
var ConstSet260 = setConstr(47, 47);
var ConstSet261 = setConstr(47, 47);
var ConstSet262 = setConstr(47, 47);
var ConstSet263 = setConstr(47, 47);
var ConstSet264 = setConstr(47, 47);
var ConstSet265 = setConstr(47, 47);
var ConstSet266 = setConstr(47, 47);
var ConstSet267 = setConstr(47, 47);
var ConstSet268 = setConstr(47, 47);
var ConstSet269 = setConstr(47, 47);
var ConstSet270 = setConstr(2, 3);
var ConstSet271 = setConstr(2);
var ConstSet272 = setConstr(0);
var ConstSet273 = setConstr(1);
var ConstSet274 = setConstr(1);
var ConstSet275 = setConstr();
var ConstSet276 = setConstr();
var ConstSet277 = setConstr();
var ConstSet278 = setConstr();
var ConstSet279 = setConstr();
var ConstSet280 = setConstr(120, 88);
var ConstSet281 = setConstr(0);
    var names_1291854223 = [[71,117,105], [84,101,114,109,105,110,97,108], [66,114,111,119,115,101,114]];
var ConstSet282 = setConstr(1);
var ConstSet283 = setConstr(1);
var ConstSet284 = setConstr(1);
var ConstSet285 = setConstr(4, 0);
var ConstSet286 = setConstr(4, 0);
var ConstSet287 = setConstr(4);
var ConstSet288 = setConstr(4);
var ConstSet289 = setConstr(4);
var ConstSet290 = setConstr(2, 3);
var ConstSet291 = setConstr(2, 3);
var ConstSet292 = setConstr(3);
var ConstSet293 = setConstr(2);
var ConstSet294 = setConstr(6);
var ConstSet295 = setConstr(4);
var ConstSet296 = setConstr(4);
var ConstSet297 = setConstr(2, 3);
var ConstSet298 = setConstr(2, 3);
var ConstSet299 = setConstr(3);
var ConstSet300 = setConstr(2);
var ConstSet301 = setConstr(2);
var ConstSet302 = setConstr(6);
var ConstSet303 = setConstr(5);
var ConstSet304 = setConstr(4);
var ConstSet305 = setConstr(6);
var ConstSet306 = setConstr(4);
var ConstSet307 = setConstr(6);
var ConstSet308 = setConstr(4);
var ConstSet309 = setConstr();
var ConstSet310 = setConstr(4);
var ConstSet311 = setConstr(6);
var ConstSet312 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet313 = setConstr([65, 90]);
    var unitWeights_1191182486 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];
    var daysUntilMonthLeap_1191182609 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1191182608 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_1174405135 = [[68,69,66,85,71], [68,69,66,85,71], [73,78,70,79], [78,79,84,73,67,69], [87,65,82,78], [69,82,82,79,82], [70,65,84,65,76], [78,79,78,69]];
var ConstSet314 = setConstr(10, 13, 32, 61);
var ConstSet315 = setConstr(10, 13, 32);
          var decodeTable_2315256293 = new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 62, 255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 63, 255, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]);
    var FormatOpen_503316842 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet316 = setConstr(6);
var ConstSet317 = setConstr(6);
var ConstSet318 = setConstr(6);
var ConstSet319 = setConstr(4);
var ConstSet320 = setConstr(4);
var ConstSet321 = setConstr(6);
var ConstSet322 = setConstr(0);
var ConstSet323 = setConstr(0);
var ConstSet324 = setConstr(1);
var ConstSet325 = setConstr(2);
var ConstSet326 = setConstr();
if (globalThis.utcInstance_1191183819 === undefined) {
  globalThis.utcInstance_1191183819 = [null];
}
if (globalThis.localInstance_1191183820 === undefined) {
  globalThis.localInstance_1191183820 = [null];
}
if (globalThis.level_1174405147 === undefined) {
  globalThis.level_1174405147 = [0];
}
if (globalThis.handlers_1174405148 === undefined) {
  globalThis.handlers_1174405148 = [[]];
}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function newCustomLogger_704643091(levelThreshold_704643092, fmtStr_704643093) {
  var result_704643094 = null;

    result_704643094 = ({m_type: NTI704643078, consoleLogger: ({val: null}), fileLogger: ({val: null}), levelThreshold: 0, fmtStr: []});
    result_704643094.fmtStr = nimCopy(null, fmtStr_704643093, NTI33554449);
    result_704643094.levelThreshold = levelThreshold_704643092;

  return result_704643094;

}
var logger_704643272 = [newCustomLogger_704643091(0, [36,108,101,118,101,108,110,97,109,101,32])];

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function some_704643120(val_704643122) {
  var result_704643123 = ({val: null});

    if (!(!((val_704643122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_704643123.val = val_704643122;

  return result_704643123;

}

function newConsoleLogger_1174405235(levelThreshold_1174405236, fmtStr_1174405237, useStderr_1174405238, flushThreshold_1174405239) {
  var result_1174405240 = null;

    result_1174405240 = ({m_type: NTI1174405134, useStderr: false, flushThreshold: 0, levelThreshold: 0, fmtStr: []});
    result_1174405240.fmtStr = nimCopy(null, fmtStr_1174405237, NTI33554449);
    result_1174405240.levelThreshold = levelThreshold_1174405236;
    result_1174405240.flushThreshold = flushThreshold_1174405239;
    result_1174405240.useStderr = useStderr_1174405238;

  return result_1174405240;

}

function enableConsoleLogger_704643118(self_704643119) {
    self_704643119.consoleLogger = nimCopy(self_704643119.consoleLogger, some_704643120(newConsoleLogger_1174405235(self_704643119.levelThreshold, self_704643119.fmtStr, false, 0)), NTI704643084);

  
}
enableConsoleLogger_704643118(logger_704643272[0]);
var objectID_1325400228 = [0];
var state_2063597581 = [{a0: 1773455756, a1: 4275166512}];

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function toCString(oid_2046820500) {
            var Temporary4;

  var result_2046820501 = null;

    Label1: {
      var i_2046820510 = 0;
      var i_2046820523 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2046820523 < 12)) break Label3;
            i_2046820510 = i_2046820523;
            if ((i_2046820510 < 4)) {
            Temporary4 = oid_2046820500.time;
            }
            else {
            if ((i_2046820510 < 8)) {
            Temporary4 = oid_2046820500.fuzz;
            }
            else {
            Temporary4 = oid_2046820500.count;
            }
            }
            var value_2046820511 = Temporary4;
            var byteOffset_2046820512 = modInt(i_2046820510, 4);
            var b_2046820517 = (value_2046820511 >> mulInt(byteOffset_2046820512, 8));
            result_2046820501 += "0123456789abcdef"[((((b_2046820517 & 240) >> 4)) | 0)];;
            result_2046820501 += "0123456789abcdef"[(((b_2046820517 & 15)) | 0)];;
            i_2046820523 = addInt(i_2046820523, 1);
          }
      };
    };

  return result_2046820501;

}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990066(result_301990068, result_301990068_Idx, x_301990069, start_301990070, n_301990071) {
    var Temporary1;

    var old_301990072 = (result_301990068[result_301990068_Idx]).length;
    if (result_301990068[result_301990068_Idx].length < (Temporary1 = chckRange(addInt(old_301990072, n_301990071), 0, 2147483647), Temporary1)) { for (var i = result_301990068[result_301990068_Idx].length; i < Temporary1; ++i) result_301990068[result_301990068_Idx].push(0); }
         else {result_301990068[result_301990068_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990086 = 0;
      var i_2046820547 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2046820547 < n_301990071)) break Label4;
            iHEX60gensym4_301990086 = i_2046820547;
            result_301990068[result_301990068_Idx][chckIndx(addInt(old_301990072, iHEX60gensym4_301990086), 0, (result_301990068[result_301990068_Idx]).length - 1)] = x_301990069.charCodeAt(chckIndx(addInt(start_301990070, iHEX60gensym4_301990086), 0, (x_301990069).length - 1));
            i_2046820547 = addInt(i_2046820547, 1);
          }
      };
    };

  
}

function addChars_301990062(result_301990064, result_301990064_Idx, x_301990065) {
    addChars_301990066(result_301990064, result_301990064_Idx, x_301990065, 0, ((x_301990065) == null ? 0 : (x_301990065).length));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990062(result_301990088, result_301990088_Idx, ((x_301990089) + ""));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addInt_301990087(result_301990109, result_301990109_Idx, x_301990110);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990108(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556695) || [],[32,46,46,32] || [],HEX24_369098760(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function rotl_2063597599(x_2063597600, k_2063597601) {
  var result_2063597602 = 0;

    result_2063597602 = ((x_2063597600 << k_2063597601) | (x_2063597600 >>> ((64 - k_2063597601) >>> 0)));

  return result_2063597602;

}

function next_2063597611(r_2063597612) {
  var result_2063597613 = 0;

    var s0_2063597614 = r_2063597612.a0;
    var s1_2063597615 = r_2063597612.a1;
    result_2063597613 = ((s0_2063597614 + s1_2063597615) >>> 0);
    s1_2063597615 = (s1_2063597615 ^ s0_2063597614);
    r_2063597612.a0 = ((rotl_2063597599(s0_2063597614, 55) ^ s1_2063597615) ^ (s1_2063597615 << 14));
    r_2063597612.a1 = rotl_2063597599(s1_2063597615, 36);

  return result_2063597613;

}

function skipRandomNumbers_2063597620(s_2063597621) {
    var s0_2063597623 = 0;
    var s1_2063597624 = 0;
    Label1: {
      var i_2063597633 = 0;
      var res_2046820541 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2046820541 <= 1)) break Label3;
            i_2063597633 = res_2046820541;
            Label4: {
              var b_2063597638 = 0;
              var i_2046820539 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2046820539 < 64)) break Label6;
                    b_2063597638 = i_2046820539;
                    if (!(((helper_2063597622[chckIndx(i_2063597633, 0, (helper_2063597622).length - 1)] & (1 << b_2063597638)) == 0))) {
                    s0_2063597623 = (s0_2063597623 ^ s_2063597621.a0);
                    s1_2063597624 = (s1_2063597624 ^ s_2063597621.a1);
                    }
                    
                    var _ = next_2063597611(s_2063597621);
                    i_2046820539 = addInt(i_2046820539, 1);
                  }
              };
            };
            res_2046820541 = addInt(res_2046820541, 1);
          }
      };
    };
    s_2063597621.a0 = s0_2063597623;
    s_2063597621.a1 = s1_2063597624;

  
}

function initRand_2063597797(seed_2063597798) {
    var Temporary1;

  var result_2063597799 = [({a0: 0, a1: 0})];

    if (!((seed_2063597798 == 0))) {
    Temporary1 = seed_2063597798;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_2063597805 = Temporary1;
    result_2063597799[0].a0 = Math.floor(seed_2063597805 / Math.pow(2, 16));
    result_2063597799[0].a1 = (seed_2063597805 & 65535);
    skipRandomNumbers_2063597620(result_2063597799[0]);
    var _ = next_2063597611(result_2063597799[0]);

  return result_2063597799[0];

}

function rand_2063597672(r_2063597674, max_2063597675) {
  var result_2063597676 = 0;

  BeforeRet: {
    if ((max_2063597675 == 0)) {
    break BeforeRet;
    }
    else {
      var max_2063597677 = max_2063597675;
      if ((max_2063597677 == -1)) {
      result_2063597676 = next_2063597611(r_2063597674);
      break BeforeRet;
      }
      
      Label1: {
          Label2: while (true) {
          if (!true) break Label2;
            var x_2063597690 = next_2063597611(r_2063597674);
            if ((x_2063597690 <= ((4294967295 - (4294967295 % max_2063597677)) ))) {
            result_2063597676 = (x_2063597690 % ((max_2063597677 + 1) ));
            break BeforeRet;
            }
            
          }
      };
    }
    
  };

  return result_2063597676;

}

function rand_2063597668(r_2063597669, max_2063597670) {
  var result_2063597671 = 0;

    result_2063597671 = rand_2063597672(r_2063597669, max_2063597670);

  return result_2063597671;

}
var t_2046820525 = Date.now();
var seed_2046820526 = [initRand_2063597797(t_2046820525)];
var incr_2046820531 = [rand_2063597668(seed_2046820526[0], 2147483647)];
var fuzz_2046820536 = rand_2063597668(seed_2046820526[0], 2147483647);

function HEX24_2046820478(oid_2046820479) {
            var Temporary4;

  var result_2046820480 = [];

    if (result_2046820480.length < 24) { for (var i = result_2046820480.length; i < 24; ++i) result_2046820480.push(0); }
         else {result_2046820480.length = 24; };
    Label1: {
      var i_2046820486 = 0;
      var i_2046820624 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2046820624 < 12)) break Label3;
            i_2046820486 = i_2046820624;
            if ((i_2046820486 < 4)) {
            Temporary4 = oid_2046820479.time;
            }
            else {
            if ((i_2046820486 < 8)) {
            Temporary4 = oid_2046820479.fuzz;
            }
            else {
            Temporary4 = oid_2046820479.count;
            }
            }
            var value_2046820487 = Temporary4;
            var byteOffset_2046820488 = modInt(i_2046820486, 4);
            var b_2046820493 = (value_2046820487 >> mulInt(byteOffset_2046820488, 8));
            result_2046820480[chckIndx(mulInt(2, i_2046820486), 0, (result_2046820480).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx(((b_2046820493 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            result_2046820480[chckIndx(addInt(mulInt(2, i_2046820486), 1), 0, (result_2046820480).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx((b_2046820493 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            i_2046820624 = addInt(i_2046820624, 1);
          }
      };
    };

  return result_2046820480;

}

function idToString(id_2046820621) {
  var result_2046820622 = null;

  BeforeRet: {
    result_2046820622 = toJSStr(HEX24_2046820478(id_2046820621));
    break BeforeRet;
  };

  return result_2046820622;

}

function idNone_2046820633() {
  var result_2046820634 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820634 = nimCopy(result_2046820634, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820634;

}
var null_2046820646 = idNone_2046820633();
var cb64_2315255812 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);
var cb64safe_2315255813 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95]);

function nextPowerOfTwo_872415437(x_872415438) {
  var result_872415439 = 0;

    result_872415439 = (x_872415438 - 1);
    result_872415439 = (result_872415439 | (result_872415439 >> 16));
    result_872415439 = (result_872415439 | (result_872415439 >> 8));
    result_872415439 = (result_872415439 | (result_872415439 >> 4));
    result_872415439 = (result_872415439 | (result_872415439 >> 2));
    result_872415439 = (result_872415439 | (result_872415439 >> 1));
    result_872415439 += (1 + ((x_872415438 <= 0) ? 1 : 0));

  return result_872415439;

}

function slotsNeeded_1308622891(count_1308622892) {
  var result_1308622893 = 0;

    result_1308622893 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1308622892, 3), 2), 4));

  return result_1308622893;

}

function initTable_1795162117(initialSize_1795162120) {
  var result_1795162126 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1795162128 = slotsNeeded_1308622891(chckRange(initialSize_1795162120, 0, 2147483647));
    result_1795162126.counter = 0;
    result_1795162126.data = new Array(chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647) ; ++i) { result_1795162126.data[i] = {Field0: 0, Field1: [], Field2: []}; }
  return result_1795162126;

}
var cachedAppFiles_2382364694 = [initTable_1795162117(32)];

function new_2365587482() {
  var result_2365587485 = null;

  BeforeRet: {
    var r_2365587487 = null;
    r_2365587487 = ({m_type: NTI2382364676});
    result_2365587485 = r_2365587487;
    break BeforeRet;
  };

  return result_2365587485;

}
var fs_2365587509 = new_2365587482();
var nextEditorId_2449473850 = [0];
var gEditor = null;
var handleIdCounter_2919235663 = [1];

function parseSaturatedNatural_771752342(s_771752343, b_771752344, b_771752344_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752345 = 0;

    var i_771752346 = 0;
    if (((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 43))) {
    i_771752346 = addInt(i_771752346, 1);
    }
    
      if (!(i_771752346 < (s_771752343).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752344[b_771752344_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752346 < (s_771752343).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752375 = subInt(s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)], 48);
          if ((b_771752344[b_771752344_Idx] <= divInt(subInt(2147483647, c_771752375), 10))) {
          b_771752344[b_771752344_Idx] = addInt(mulInt(b_771752344[b_771752344_Idx], 10), c_771752375);
          }
          else {
            b_771752344[b_771752344_Idx] = 2147483647;
          }
          
          i_771752346 = addInt(i_771752346, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 95))) break Label6;
                i_771752346 = addInt(i_771752346, 1);
              }
          };
        }
    };
    result_771752345 = i_771752346;
    }
    

  return result_771752345;

}

function parseSaturatedNatural_771752729(s_771752730, b_771752731, b_771752731_Idx, start_771752732) {
  var result_771752733 = 0;

    result_771752733 = parseSaturatedNatural_771752342((s_771752730.slice(start_771752732, (s_771752730).length - 1 + 1)), b_771752731, b_771752731_Idx);

  return result_771752733;

}

function HEX5BHEX5D_855639319(s_855639322, x_855639323) {
  var result_855639324 = [];

    var a_855639326 = x_855639323.a;
    var L_855639328 = addInt(subInt(subInt((s_855639322).length, x_855639323.b), a_855639326), 1);
    result_855639324 = nimCopy(null, mnewString(chckRange(L_855639328, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639333 = 0;
      var i_2684355216 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2684355216 < L_855639328)) break Label3;
            i_855639333 = i_2684355216;
            result_855639324[chckIndx(i_855639333, 0, (result_855639324).length - 1)] = s_855639322[chckIndx(addInt(i_855639333, a_855639326), 0, (s_855639322).length - 1)];
            i_2684355216 = addInt(i_2684355216, 1);
          }
      };
    };

  return result_855639324;

}

function HEX2EHEX2E_1040187488(a_1040187491, b_1040187492) {
  var result_1040187495 = ({a: 0, b: 0});

    result_1040187495 = nimCopy(result_1040187495, {a: a_1040187491, b: b_1040187492}, NTI1040187476);

  return result_1040187495;

}

function parseStandardFormatSpecifier_721420346(s_721420347, start_721420348, ignoreUnknownSuffix_721420349) {
      var Temporary1;
      var Temporary2;

  var result_721420350 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_721420350.fill = 32;
    result_721420350.align = 0;
    result_721420350.sign = 45;
    var i_721420352 = start_721420348;
    if (((addInt(i_721420352, 1) < (s_721420347).length) && (ConstSet2[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.fill = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    result_721420350.align = s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 2);
    }
    else {
    if (((i_721420352 < (s_721420347).length) && (ConstSet3[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.align = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    }
    if (((i_721420352 < (s_721420347).length) && (ConstSet4[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.sign = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 35))) {
    result_721420350.alternateForm = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
      if (!((addInt(i_721420352, 1) < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary1) {
    result_721420350.padWithZero = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
    var parsedLength_721420394 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "minimumWidth", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLength_721420394);
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 46))) {
    i_721420352 = addInt(i_721420352, 1);
    var parsedLengthB_721420405 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "precision", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLengthB_721420405);
    }
    else {
      result_721420350.precision = -1;
    }
    
      if (!(i_721420352 < (s_721420347).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary2) {
    result_721420350.typ = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    result_721420350.endPosition = i_721420352;
    if ((!((i_721420352 == (s_721420347).length)) && !(ignoreUnknownSuffix_721420349))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_855639319(s_721420347, HEX2EHEX2E_1040187488(i_721420352, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_721420350;

}

function nucruneLen(s_788529180) {
  var result_788529181 = 0;

    result_788529181 = 0;
    var i_788529182 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_788529182 < (s_788529180).length)) break Label2;
          if ((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] <= 127)) {
          i_788529182 = addInt(i_788529182, 1);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 5) == 6)) {
          i_788529182 = addInt(i_788529182, 2);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 4) == 14)) {
          i_788529182 = addInt(i_788529182, 3);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 3) == 30)) {
          i_788529182 = addInt(i_788529182, 4);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 2) == 62)) {
          i_788529182 = addInt(i_788529182, 5);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 1) == 126)) {
          i_788529182 = addInt(i_788529182, 6);
          }
          else {
          i_788529182 = addInt(i_788529182, 1);
          }
          }}}}}
          result_788529181 = addInt(result_788529181, 1);
        }
    };

  return result_788529181;

}

function runeLen_788536172(s_788536173) {
  var result_788536174 = 0;

    result_788536174 = nucruneLen((s_788536173.slice(0, (s_788536173).length - 1 + 1)));

  return result_788536174;

}

function runeLenAt_788529246(s_788529247, i_788529248) {
  var result_788529249 = 0;

    if ((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] <= 127)) {
    result_788529249 = 1;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 5) == 6)) {
    result_788529249 = 2;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 4) == 14)) {
    result_788529249 = 3;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 3) == 30)) {
    result_788529249 = 4;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 2) == 62)) {
    result_788529249 = 5;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 1) == 126)) {
    result_788529249 = 6;
    }
    else {
      result_788529249 = 1;
    }
    }}}}}

  return result_788529249;

}

function runeOffset_788529843(s_788529844, pos_788529845, start_788529846) {
  var result_788529847 = 0;

  BeforeRet: {
    var i_788529848 = 0;
    var o_788529849 = start_788529846;
    Label1: {
        Label2: while (true) {
        if (!(i_788529848 < pos_788529845)) break Label2;
          o_788529849 = addInt(o_788529849, chckRange(runeLenAt_788529246(s_788529844, o_788529849), 0, 2147483647));
          if (((s_788529844).length <= o_788529849)) {
          result_788529847 = -1;
          break BeforeRet;
          }
          
          i_788529848 = addInt(i_788529848, 1);
        }
    };
    result_788529847 = o_788529849;
    break BeforeRet;
  };

  return result_788529847;

}

function runeOffset_788536347(s_788536348, pos_788536349, start_788536350) {
  var result_788536351 = 0;

    result_788536351 = runeOffset_788529843((s_788536348.slice(0, (s_788536348).length - 1 + 1)), pos_788536349, start_788536350);

  return result_788536351;

}

function validateUtf8_788529475(s_788529476) {
  var result_788529477 = 0;

  BeforeRet: {
    var i_788529478 = 0;
    var L_788529482 = (s_788529476).length;
    Label1: {
        Label2: while (true) {
        if (!(i_788529478 < L_788529482)) break Label2;
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] <= 127)) {
          i_788529478 = addInt(i_788529478, 1);
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 5) == 6)) {
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] < 194)) {
          result_788529477 = i_788529478;
          break BeforeRet;
          }
          
          if (((addInt(i_788529478, 1) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 2);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_788529478, 2) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 3);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_788529478, 3) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 3), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 4);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          }}}
        }
    };
    result_788529477 = -1;
    break BeforeRet;
  };

  return result_788529477;

}

function validateUtf8_788536344(s_788536345) {
  var result_788536346 = 0;

    result_788536346 = validateUtf8_788529475((s_788536345.slice(0, (s_788536345).length - 1 + 1)));

  return result_788536346;

}

function nsuRepeatChar(c_855639133, count_855639134) {
  var result_855639135 = [];

    result_855639135 = nimCopy(null, mnewString(count_855639134), NTI33554449);
    Label1: {
      var i_855639140 = 0;
      var colontmp__2818584400 = 0;
      colontmp__2818584400 = subInt(count_855639134, 1);
      var res_2818584401 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818584401 <= colontmp__2818584400)) break Label3;
            i_855639140 = res_2818584401;
            result_855639135[chckIndx(i_855639140, 0, (result_855639135).length - 1)] = c_855639133;
            res_2818584401 = addInt(res_2818584401, 1);
          }
      };
    };

  return result_855639135;

}

function alignString_721420308(s_721420309, minimumWidth_721420310, align_721420311, fill_721420312) {
      var Temporary1;

  var result_721420313 = [];

    if ((minimumWidth_721420310 == 0)) {
    result_721420313 = nimCopy(null, s_721420309, NTI33554449);
    }
    else {
      if ((validateUtf8_788536344(s_721420309) == -1)) {
      Temporary1 = runeLen_788536172(s_721420309);
      }
      else {
      Temporary1 = (s_721420309).length;
      }
      
      var sRuneLen_721420314 = Temporary1;
      var toFill_721420315 = subInt(minimumWidth_721420310, sRuneLen_721420314);
      if ((toFill_721420315 <= 0)) {
      result_721420313 = nimCopy(null, s_721420309, NTI33554449);
      }
      else {
      if (((align_721420311 == 60) || (align_721420311 == 0))) {
      result_721420313 = nimCopy(null, (s_721420309 || []).concat(nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_721420311 == 94)) {
      var half_721420316 = divInt(toFill_721420315, 2);
      result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(half_721420316, 0, 2147483647)) || []).concat(s_721420309 || [],nsuRepeatChar(fill_721420312, chckRange(subInt(toFill_721420315, half_721420316), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []).concat(s_721420309 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420313;

}

function formatValue_721420459(result_721420460, result_721420460_Idx, value_721420461, specifier_721420462) {
    var Temporary1;

    var spec_721420463 = parseStandardFormatSpecifier_721420346(specifier_721420462, 0, false);
    var value_721420464 = nimCopy(null, value_721420461, NTI33554449);
    switch (spec_721420463.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_721420463.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_721420463.precision == -1))) {
    if ((spec_721420463.precision < runeLen_788536172(value_721420464))) {
    if (value_721420464.length < (Temporary1 = chckRange(runeOffset_788536347(value_721420464, chckRange(spec_721420463.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_721420464.length; i < Temporary1; ++i) value_721420464.push(0); }
         else {value_721420464.length = Temporary1; };
    }
    
    }
    
    result_721420460[result_721420460_Idx].push.apply(result_721420460[result_721420460_Idx], alignString_721420308(value_721420464, spec_721420463.minimumWidth, spec_721420463.align, spec_721420463.fill));;

  
}

function imul_1325400356(a_1325400357, b_1325400358) {
  var result_1325400359 = 0;

    var mask_1325400360 = 65535;
    var aHi_1325400365 = ((a_1325400357 >>> 16) & mask_1325400360);
    var aLo_1325400366 = (a_1325400357 & mask_1325400360);
    var bHi_1325400371 = ((b_1325400358 >>> 16) & mask_1325400360);
    var bLo_1325400372 = (b_1325400358 & mask_1325400360);
    result_1325400359 = ((((aLo_1325400366 * bLo_1325400372) >>> 0) + (((((aHi_1325400365 * bLo_1325400372) >>> 0) + ((aLo_1325400366 * bHi_1325400371) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1325400359;

}

function rotl32_1325400377(x_1325400378, r_1325400379) {
  var result_1325400380 = 0;

    result_1325400380 = ((x_1325400378 << r_1325400379) | (x_1325400378 >>> subInt(32, r_1325400379)));

  return result_1325400380;

}

function murmurHash_1325400389(x_1325400390) {
  var result_1325400391 = 0;

  BeforeRet: {
    var size_1325400400 = (x_1325400390).length;
    var stepSize_1325400401 = 4;
    var n_1325400402 = divInt(size_1325400400, stepSize_1325400401);
    var h1_1325400403 = 0;
    var i_1325400404 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1325400404 < mulInt(n_1325400402, stepSize_1325400401))) break Label2;
          var k1_1325400405 = 0;
          var j_1325400406 = stepSize_1325400401;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1325400406)) break Label4;
                j_1325400406 = subInt(j_1325400406, 1);
                k1_1325400405 = ((k1_1325400405 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, j_1325400406), 0, (x_1325400390).length - 1)]);
              }
          };
          i_1325400404 = addInt(i_1325400404, stepSize_1325400401);
          k1_1325400405 = imul_1325400356(k1_1325400405, 3432918353);
          k1_1325400405 = rotl32_1325400377(k1_1325400405, 15);
          k1_1325400405 = imul_1325400356(k1_1325400405, 461845907);
          h1_1325400403 = (h1_1325400403 ^ k1_1325400405);
          h1_1325400403 = rotl32_1325400377(h1_1325400403, 13);
          h1_1325400403 = ((((h1_1325400403 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1325400425 = 0;
    var rem_1325400426 = modInt(size_1325400400, stepSize_1325400401);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1325400426)) break Label6;
          rem_1325400426 = subInt(rem_1325400426, 1);
          k1_1325400425 = ((k1_1325400425 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, rem_1325400426), 0, (x_1325400390).length - 1)]);
        }
    };
    k1_1325400425 = imul_1325400356(k1_1325400425, 3432918353);
    k1_1325400425 = rotl32_1325400377(k1_1325400425, 15);
    k1_1325400425 = imul_1325400356(k1_1325400425, 461845907);
    h1_1325400403 = (h1_1325400403 ^ k1_1325400425);
    h1_1325400403 = (h1_1325400403 ^ size_1325400400);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    h1_1325400403 = imul_1325400356(h1_1325400403, 2246822507);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 13));
    h1_1325400403 = imul_1325400356(h1_1325400403, 3266489909);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    result_1325400391 = (h1_1325400403 | 0);
    break BeforeRet;
  };

  return result_1325400391;

}

function hash_1325400491(x_1325400492) {
  var result_1325400493 = 0;

    result_1325400493 = murmurHash_1325400389((x_1325400492.slice(0, (x_1325400492).length - 1 + 1)));

  return result_1325400493;

}

function isFilled_1308622880(hcode_1308622881) {
  var result_1308622882 = false;

    result_1308622882 = !((hcode_1308622881 == 0));

  return result_1308622882;

}

function nextTry_1308622883(h_1308622884, maxHash_1308622885) {
  var result_1308622886 = 0;

    result_1308622886 = (addInt(h_1308622884, 1) & maxHash_1308622885);

  return result_1308622886;

}

function rawGet_1291849221(t_1291849224, key_1291849225, hc_1291849226, hc_1291849226_Idx) {
  var result_1291849227 = 0;

  BeforeRet: {
    hc_1291849226[hc_1291849226_Idx] = hash_1325400491(key_1291849225);
    if ((hc_1291849226[hc_1291849226_Idx] == 0)) {
    hc_1291849226[hc_1291849226_Idx] = 314159265;
    }
    
    if (((t_1291849224.data).length == 0)) {
    result_1291849227 = -1;
    break BeforeRet;
    }
    
    var h_1291849279 = (hc_1291849226[hc_1291849226_Idx] & (t_1291849224.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field0)) break Label2;
          if (((t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field0 == hc_1291849226[hc_1291849226_Idx]) && eqStrings(t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field1, key_1291849225))) {
          result_1291849227 = h_1291849279;
          break BeforeRet;
          }
          
          h_1291849279 = nextTry_1308622883(h_1291849279, (t_1291849224.data).length - 1);
        }
    };
    result_1291849227 = subInt(-1, h_1291849279);
  };

  return result_1291849227;

}

function hasKey_1291849214(t_1291849217, key_1291849218) {
  var result_1291849219 = false;

    var hc_1291849220 = [0];
    result_1291849219 = (0 <= rawGet_1291849221(t_1291849217, key_1291849218, hc_1291849220, 0));

  return result_1291849219;

}

function contains_1291849208(t_1291849211, key_1291849212) {
  var result_1291849213 = false;

  BeforeRet: {
    result_1291849213 = hasKey_1291849214(t_1291849211, key_1291849212);
    break BeforeRet;
  };

  return result_1291849213;

}

function mustRehash_1291849673(t_1291849675) {
  var result_1291849676 = false;

    if (!((t_1291849675.counter < (t_1291849675.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291849676 = ((mulInt((t_1291849675.data).length, 2) < mulInt(t_1291849675.counter, 3)) || (subInt((t_1291849675.data).length, t_1291849675.counter) < 4));

  return result_1291849676;

}

function rawInsert_1291850122(t_1291850126, data_1291850127, data_1291850127_Idx, key_1291850128, val_1291850129, hc_1291850130, h_1291850131) {
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field1 = nimCopy(null, key_1291850128, NTI33554449);
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field2 = val_1291850129;
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field0 = hc_1291850130;

  
}

function enlarge_1291849828(t_1291849831) {
    var n_1291849834 = [];
    n_1291849834 = new Array(chckRange(mulInt((t_1291849831.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291849831.data).length, 2), 0, 2147483647) ; ++i) { n_1291849834[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1291849831.data; t_1291849831.data = n_1291849834; n_1291849834 = Temporary1;    Label2: {
      var i_1291849898 = 0;
      var colontmp__2818584409 = 0;
      colontmp__2818584409 = (n_1291849834).length - 1;
      var res_2818584411 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584411 <= colontmp__2818584409)) break Label4;
            i_1291849898 = res_2818584411;
            var eh_1291849952 = n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291849952)) {
            var j_1291849956 = (eh_1291849952 & (t_1291849831.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291849831.data[chckIndx(j_1291849956, 0, (t_1291849831.data).length - 1)].Field0)) break Label6;
                  j_1291849956 = nextTry_1308622883(j_1291849956, (t_1291849831.data).length - 1);
                }
            };
            rawInsert_1291850122(t_1291849831, t_1291849831, "data", n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field1, n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field2, eh_1291849952, j_1291849956);
            }
            
            res_2818584411 = addInt(res_2818584411, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291850291(t_1291850294, key_1291850295, hc_1291850296) {
  var result_1291850297 = 0;

  BeforeRet: {
    if (((t_1291850294.data).length == 0)) {
    result_1291850297 = -1;
    break BeforeRet;
    }
    
    var h_1291850348 = (hc_1291850296 & (t_1291850294.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field0)) break Label2;
          if (((t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field0 == hc_1291850296) && eqStrings(t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field1, key_1291850295))) {
          result_1291850297 = h_1291850348;
          break BeforeRet;
          }
          
          h_1291850348 = nextTry_1308622883(h_1291850348, (t_1291850294.data).length - 1);
        }
    };
    result_1291850297 = subInt(-1, h_1291850348);
  };

  return result_1291850297;

}

function HEX5BHEX5DHEX3D_1291849500(t_1291849503, key_1291849504, val_1291849505) {
    if (((t_1291849503.data).length == 0)) {
    var correctSizeHEX60gensym36_1291849554 = slotsNeeded_1308622891(32);
    t_1291849503.counter = 0;
    t_1291849503.data = new Array(chckRange(correctSizeHEX60gensym36_1291849554, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym36_1291849554, 0, 2147483647) ; ++i) { t_1291849503.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1291849559 = [0];
    var index_1291849566 = rawGet_1291849221(t_1291849503, key_1291849504, hc_1291849559, 0);
    if ((0 <= index_1291849566)) {
    t_1291849503.data[chckIndx(index_1291849566, 0, (t_1291849503.data).length - 1)].Field2 = val_1291849505;
    }
    else {
      if (((t_1291849503.data).length == 0)) {
      var correctSizeHEX60gensym39_1291849668 = slotsNeeded_1308622891(32);
      t_1291849503.counter = 0;
      t_1291849503.data = new Array(chckRange(correctSizeHEX60gensym39_1291849668, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_1291849668, 0, 2147483647) ; ++i) { t_1291849503.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1291849673(t_1291849503)) {
      enlarge_1291849828(t_1291849503);
      index_1291849566 = rawGetKnownHC_1291850291(t_1291849503, key_1291849504, hc_1291849559[0]);
      }
      
      index_1291849566 = subInt(-1, index_1291849566);
      rawInsert_1291850122(t_1291849503, t_1291849503, "data", key_1291849504, val_1291849505, hc_1291849559[0], index_1291849566);
      t_1291849503.counter = addInt(t_1291849503.counter, 1);
    }
    

  
}

function newEventHandlerConfig_2113929255(context_2113929256) {
  var result_2113929257 = null;

    result_2113929257 = ({context: [], commands: ({data: [], counter: 0}), handleActions: false, handleInputs: false, consumeAllActions: false, consumeAllInput: false, revision: 0});
    result_2113929257.handleActions = true;
    result_2113929257.handleInputs = false;
    result_2113929257.context = nimCopy(null, context_2113929256, NTI33554449);

  return result_2113929257;

}

function raiseKeyError_1627392893(key_1627392895) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1627392895 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1291850582(t_1291850585, key_1291850586) {
  var result_1291850587 = null;
  var result_1291850587_Idx = 0;

    var hcHEX60gensym22_1291850588 = [0];
    var indexHEX60gensym22_1291850595 = rawGet_1291849221(t_1291850585, key_1291850586, hcHEX60gensym22_1291850588, 0);
    if ((0 <= indexHEX60gensym22_1291850595)) {
    result_1291850587 = t_1291850585.data[chckIndx(indexHEX60gensym22_1291850595, 0, (t_1291850585.data).length - 1)]; result_1291850587_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291850586);
    }
    

  return [result_1291850587, result_1291850587_Idx];

}

function getEventHandlerConfig_1291849162(self_1291849163, context_1291849164) {
    var Temporary1;

  var result_1291849165 = null;

  BeforeRet: {
    if (!(contains_1291849208(self_1291849163.eventHandlerConfigs, context_1291849164))) {
    HEX5BHEX5DHEX3D_1291849500(self_1291849163.eventHandlerConfigs, context_1291849164, newEventHandlerConfig_2113929255(context_1291849164));
    }
    
    result_1291849165 = (Temporary1 = HEX5BHEX5D_1291850582(self_1291849163.eventHandlerConfigs, context_1291849164), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_1291849165;

}

function getModeConfig_2818584032(self_2818584033, mode_2818584034) {
  var result_2818584035 = null;

  BeforeRet: {
    result_2818584035 = getEventHandlerConfig_1291849162(self_2818584033.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(mode_2818584034 || []));
    break BeforeRet;
  };

  return result_2818584035;

}

function isAscii_2013266003(input_2013266004) {
  var result_2013266005 = false;

  BeforeRet: {
    if (((0 <= input_2013266004) && (input_2013266004 <= 255))) {
    result_2013266005 = true;
    break BeforeRet;
    }
    
    result_2013266005 = false;
    break BeforeRet;
  };

  return result_2013266005;

}

function newSeq_788533339(len_788533341) {
  var result_788533342 = [];

    result_788533342 = new Array(len_788533341); for (var i = 0 ; i < len_788533341 ; ++i) { result_788533342[i] = 0; }
  return result_788533342;

}

function toRunes_788533332(s_788533333) {
  var result_788533334 = [];

    result_788533334 = nimCopy(null, newSeq_788533339(0), NTI788536206);
    Label1: {
      var r_788533347 = 0;
      var i_2818584441 = 0;
      var result_2818584442 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584441 < (s_788533333).length)) break Label3;
            if ((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] <= 127)) {
            result_2818584442 = chckRange(s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
            i_2818584441 = addInt(i_2818584441, 1);
            }
            else {
            if (((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] >>> 5) == 6)) {
            if ((i_2818584441 <= subInt((s_788533333).length, 2))) {
            result_2818584442 = chckRange((((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] & 31) << 6) | (s_788533333[chckIndx(addInt(i_2818584441, 1), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584441 = addInt(i_2818584441, 2);
            }
            else {
              result_2818584442 = 65533;
              i_2818584441 = addInt(i_2818584441, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] >>> 4) == 14)) {
            if ((i_2818584441 <= subInt((s_788533333).length, 3))) {
            result_2818584442 = chckRange(((((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] & 15) << 12) | ((s_788533333[chckIndx(addInt(i_2818584441, 1), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584441, 2), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584441 = addInt(i_2818584441, 3);
            }
            else {
              result_2818584442 = 65533;
              i_2818584441 = addInt(i_2818584441, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] >>> 3) == 30)) {
            if ((i_2818584441 <= subInt((s_788533333).length, 4))) {
            result_2818584442 = chckRange((((((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] & 7) << 18) | ((s_788533333[chckIndx(addInt(i_2818584441, 1), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584441, 2), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584441, 3), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584441 = addInt(i_2818584441, 4);
            }
            else {
              result_2818584442 = 65533;
              i_2818584441 = addInt(i_2818584441, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] >>> 2) == 62)) {
            if ((i_2818584441 <= subInt((s_788533333).length, 5))) {
            result_2818584442 = chckRange(((((((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] & 3) << 24) | ((s_788533333[chckIndx(addInt(i_2818584441, 1), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818584441, 2), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584441, 3), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584441, 4), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584441 = addInt(i_2818584441, 5);
            }
            else {
              result_2818584442 = 65533;
              i_2818584441 = addInt(i_2818584441, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] >>> 1) == 126)) {
            if ((i_2818584441 <= subInt((s_788533333).length, 6))) {
            result_2818584442 = chckRange((((((((s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)] & 1) << 30) | ((s_788533333[chckIndx(addInt(i_2818584441, 1), 0, (s_788533333).length - 1)] & 63) << 24)) | ((s_788533333[chckIndx(addInt(i_2818584441, 2), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818584441, 3), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584441, 4), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584441, 5), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584441 = addInt(i_2818584441, 6);
            }
            else {
              result_2818584442 = 65533;
              i_2818584441 = addInt(i_2818584441, 1);
            }
            
            }
            else {
              result_2818584442 = chckRange(s_788533333[chckIndx(i_2818584441, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
              i_2818584441 = addInt(i_2818584441, 1);
            }
            }}}}}
            r_788533347 = result_2818584442;
            result_788533334.push(r_788533347);;
          }
      };
    };

  return result_788533334;

}

function toRunes_788536583(s_788536584) {
  var result_788536585 = [];

    result_788536585 = nimCopy(null, toRunes_788533332((s_788536584.slice(0, (s_788536584).length - 1 + 1))), NTI788536198);

  return result_788536585;

}

function getInputCodeFromSpecialKey_2013267119(specialKey_2013267120) {
      var Temporary1;

  var result_2013267121 = 0;

    var runes_2013267122 = toRunes_788536583(specialKey_2013267120);
    if (((runes_2013267122).length == 1)) {
    result_2013267121 = runes_2013267122[chckIndx(0, 0, (runes_2013267122).length - 1)];
    }
    else {
      switch (toJSStr(specialKey_2013267120)) {
      case "ENTER":
        Temporary1 = -1;
        break;
      case "ESCAPE":
        Temporary1 = -2;
        break;
      case "BACKSPACE":
        Temporary1 = -3;
        break;
      case "SPACE":
        Temporary1 = -4;
        break;
      case "DELETE":
        Temporary1 = -5;
        break;
      case "TAB":
        Temporary1 = -6;
        break;
      case "LEFT":
        Temporary1 = -7;
        break;
      case "RIGHT":
        Temporary1 = -8;
        break;
      case "UP":
        Temporary1 = -9;
        break;
      case "DOWN":
        Temporary1 = -10;
        break;
      case "HOME":
        Temporary1 = -11;
        break;
      case "END":
        Temporary1 = -12;
        break;
      case "PAGE_UP":
        Temporary1 = -13;
        break;
      case "PAGE_DOWN":
        Temporary1 = -14;
        break;
      case "F1":
        Temporary1 = -20;
        break;
      case "F2":
        Temporary1 = -21;
        break;
      case "F3":
        Temporary1 = -22;
        break;
      case "F4":
        Temporary1 = -23;
        break;
      case "F5":
        Temporary1 = -24;
        break;
      case "F6":
        Temporary1 = -25;
        break;
      case "F7":
        Temporary1 = -26;
        break;
      case "F8":
        Temporary1 = -27;
        break;
      case "F9":
        Temporary1 = -28;
        break;
      case "F10":
        Temporary1 = -29;
        break;
      case "F11":
        Temporary1 = -30;
        break;
      case "F12":
        Temporary1 = -31;
        break;
      default: 
        var fmtRes_2013267130 = [mnewString(0)];
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [73,110,118,97,108,105,100,32,107,101,121,32,39]);;
        formatValue_721420459(fmtRes_2013267130, 0, specialKey_2013267120, []);
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013267130[0], NTI33554449)]);
        Temporary1 = 0;
        break;
      }
      result_2013267121 = Temporary1;
    }
    

  return result_2013267121;

}

function HEX3CHEX3DHEX25_33555522(x_33555523, y_33555524) {
  var result_33555525 = false;

    result_33555525 = ((x_33555523 >>> 0) <= (y_33555524 >>> 0));

  return result_33555525;

}

function add_788529670(s_788529671, s_788529671_Idx, c_788529672) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

    var pos_788529673 = (s_788529671[s_788529671_Idx]).length;
    var iHEX60gensym58_788529675 = c_788529672;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 127)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary1 = chckRange(addInt(pos_788529673, 1), 0, 2147483647), Temporary1)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary1; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary1; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(iHEX60gensym58_788529675, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2047)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary2 = chckRange(addInt(pos_788529673, 2), 0, 2147483647), Temporary2)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary2; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary2; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 6) | 192), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 65535)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary3 = chckRange(addInt(pos_788529673, 3), 0, 2147483647), Temporary3)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary3; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary3; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 12) | 224), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2097151)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary4 = chckRange(addInt(pos_788529673, 4), 0, 2147483647), Temporary4)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary4; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary4; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 18) | 240), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 67108863)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary5 = chckRange(addInt(pos_788529673, 5), 0, 2147483647), Temporary5)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary5; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary5; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 24) | 248), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2147483647)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary6 = chckRange(addInt(pos_788529673, 6), 0, 2147483647), Temporary6)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary6; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary6; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 30) | 252), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 24) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 5), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  
}

function hasJsBigInt_973078571() {
  var result_973078572 = false;

    result_973078572 = typeof BigInt != 'undefined'

  return result_973078572;

}

function hiXorLoJs_1325400149(a_1325400150, b_1325400151) {
  var result_1325400152 = 0n;

    var prod_1325400153 = (a_1325400150 * b_1325400151);
    var mask_1325400154 = BigInt("0xffffffffffffffff");
    result_1325400152 = ((prod_1325400153 >> BigInt("64")) ^ (prod_1325400153 & mask_1325400154));

  return result_1325400152;

}

function hashWangYi1_1325400244(x_1325400246) {
  var result_1325400247 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_1325400266 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1325400267 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1325400268 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1325400269 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_1325400266, (BigInt(x_1325400246) ^ P1HEX60gensym6_1325400267)), P58HEX60gensym6_1325400268);
    result_1325400247 = Number((() => { const i = resHEX60gensym6_1325400269, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400247 = (x_1325400246 & 4294967295);
    }
    

  return result_1325400247;

}

function hash_1627392949(x_1627392951) {
  var result_1627392952 = 0;

    result_1627392952 = hashWangYi1_1325400244(x_1627392951);

  return result_1627392952;

}

function rawGet_2013266081(t_2013266084, key_2013266085, hc_2013266086, hc_2013266086_Idx) {
  var result_2013266087 = 0;

  BeforeRet: {
    hc_2013266086[hc_2013266086_Idx] = hash_1627392949(key_2013266085);
    if ((hc_2013266086[hc_2013266086_Idx] == 0)) {
    hc_2013266086[hc_2013266086_Idx] = 314159265;
    }
    
    if (((t_2013266084.data).length == 0)) {
    result_2013266087 = -1;
    break BeforeRet;
    }
    
    var h_2013266142 = (hc_2013266086[hc_2013266086_Idx] & (t_2013266084.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0)) break Label2;
          if (((t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0 == hc_2013266086[hc_2013266086_Idx]) && (t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field1 == key_2013266085))) {
          result_2013266087 = h_2013266142;
          break BeforeRet;
          }
          
          h_2013266142 = nextTry_1308622883(h_2013266142, (t_2013266084.data).length - 1);
        }
    };
    result_2013266087 = subInt(-1, h_2013266142);
  };

  return result_2013266087;

}

function hasKey_2013266074(t_2013266077, key_2013266078) {
  var result_2013266079 = false;

    var hc_2013266080 = [0];
    result_2013266079 = (0 <= rawGet_2013266081(t_2013266077, key_2013266078, hc_2013266080, 0));

  return result_2013266079;

}

function contains_2013266068(t_2013266071, key_2013266072) {
  var result_2013266073 = false;

  BeforeRet: {
    result_2013266073 = hasKey_2013266074(t_2013266071, key_2013266072);
    break BeforeRet;
  };

  return result_2013266073;

}

function HEX21HEX26_1325400067(h_1325400068, val_1325400069) {
  var result_1325400070 = 0;

    var h_1325400071 = (h_1325400068 >>> 0);
    var val_1325400072 = (val_1325400069 >>> 0);
    var res_1325400073 = ((h_1325400071 + val_1325400072) >>> 0);
    res_1325400073 = ((res_1325400073 + (res_1325400073 << 10)) >>> 0);
    res_1325400073 = (res_1325400073 ^ (res_1325400073 >>> 6));
    result_1325400070 = (res_1325400073 | 0);

  return result_1325400070;

}

function hash_2013266554(x_2013266556) {
  var result_2013266557 = 0;

    result_2013266557 = hashWangYi1_1325400244(x_2013266556);

  return result_2013266557;

}

function HEX21HEX24_1325400082(h_1325400083) {
  var result_1325400084 = 0;

    var h_1325400085 = (h_1325400083 >>> 0);
    var res_1325400090 = ((h_1325400085 + (h_1325400085 << 3)) >>> 0);
    res_1325400090 = (res_1325400090 ^ (res_1325400090 >>> 11));
    res_1325400090 = ((res_1325400090 + (res_1325400090 << 15)) >>> 0);
    result_1325400084 = (res_1325400090 | 0);

  return result_1325400084;

}

function hash_2013266518(x_2013266520) {
  var result_2013266521 = 0;

    Label1: {
      var it_2013266553 = 0;
      var i_2818584448 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584448 <= 3)) break Label3;
            if ((x_2013266520[chckRange(i_2818584448, 0, 3)] != undefined)) {
            it_2013266553 = chckRange(i_2818584448, 0, 3);
            result_2013266521 = HEX21HEX26_1325400067(result_2013266521, hash_2013266554(it_2013266553));
            }
            
            i_2818584448 = addInt(i_2818584448, 1);
          }
      };
    };
    result_2013266521 = HEX21HEX24_1325400082(result_2013266521);

  return result_2013266521;

}

function rawGet_2013266511(t_2013266514, key_2013266515, hc_2013266516, hc_2013266516_Idx) {
  var result_2013266517 = 0;

  BeforeRet: {
    hc_2013266516[hc_2013266516_Idx] = hash_2013266518(key_2013266515);
    if ((hc_2013266516[hc_2013266516_Idx] == 0)) {
    hc_2013266516[hc_2013266516_Idx] = 314159265;
    }
    
    if (((t_2013266514.data).length == 0)) {
    result_2013266517 = -1;
    break BeforeRet;
    }
    
    var h_2013266625 = (hc_2013266516[hc_2013266516_Idx] & (t_2013266514.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0)) break Label2;
          if (((t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0 == hc_2013266516[hc_2013266516_Idx]) && SetEq(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field1, key_2013266515))) {
          result_2013266517 = h_2013266625;
          break BeforeRet;
          }
          
          h_2013266625 = nextTry_1308622883(h_2013266625, (t_2013266514.data).length - 1);
        }
    };
    result_2013266517 = subInt(-1, h_2013266625);
  };

  return result_2013266517;

}

function hasKey_2013266504(t_2013266507, key_2013266508) {
  var result_2013266509 = false;

    var hc_2013266510 = [0];
    result_2013266509 = (0 <= rawGet_2013266511(t_2013266507, key_2013266508, hc_2013266510, 0));

  return result_2013266509;

}

function contains_2013266498(t_2013266501, key_2013266502) {
  var result_2013266503 = false;

  BeforeRet: {
    result_2013266503 = hasKey_2013266504(t_2013266501, key_2013266502);
    break BeforeRet;
  };

  return result_2013266503;

}

function HEX24_369098763(x_369098764) {
  var result_369098765 = [[]];

    addInt_301990087(result_369098765, 0, x_369098764);

  return result_369098765[0];

}

function raiseKeyError_2013266443(key_2013266445) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098763(key_2013266445) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266376(t_2013266379, key_2013266380) {
  var result_2013266381 = null;

    var hcHEX60gensym22_2013266382 = [0];
    var indexHEX60gensym22_2013266389 = rawGet_2013266081(t_2013266379, key_2013266380, hcHEX60gensym22_2013266382, 0);
    if ((0 <= indexHEX60gensym22_2013266389)) {
    result_2013266381 = t_2013266379.data[chckIndx(indexHEX60gensym22_2013266389, 0, (t_2013266379.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2013266443(key_2013266380);
    }
    

  return result_2013266381;

}

function addQuoted_2013267039(s_2013267041, s_2013267041_Idx, x_2013267042) {
    s_2013267041[s_2013267041_Idx].push.apply(s_2013267041[s_2013267041_Idx], reprEnum(x_2013267042, NTI2013265949));;

  
}

function collectionToString_2013267024(x_2013267026, prefix_2013267027, separator_2013267028, suffix_2013267029) {
  var result_2013267030 = [[]];

    result_2013267030[0] = nimCopy(null, prefix_2013267027, NTI33554449);
    var firstElement_2013267031 = true;
    Label1: {
      var value_2013267035 = 0;
      var i_2818584451 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584451 <= 3)) break Label3;
            if ((x_2013267026[i_2818584451] != undefined)) {
            value_2013267035 = i_2818584451;
            if (firstElement_2013267031) {
            firstElement_2013267031 = false;
            }
            else {
            result_2013267030[0].push.apply(result_2013267030[0], separator_2013267028);;
            }
            
            addQuoted_2013267039(result_2013267030, 0, value_2013267035);
            }
            
            i_2818584451 += 1;
          }
      };
    };
    result_2013267030[0].push.apply(result_2013267030[0], suffix_2013267029);;

  return result_2013267030[0];

}

function HEX24_2013267020(x_2013267022) {
  var result_2013267023 = [];

    result_2013267023 = nimCopy(null, collectionToString_2013267024(x_2013267022, [123], [44,32], [125]), NTI33554449);

  return result_2013267023;

}

function raiseKeyError_2013266989(key_2013266991) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2013267020(key_2013266991) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266922(t_2013266925, key_2013266926) {
  var result_2013266927 = null;
  var result_2013266927_Idx = 0;

    var hcHEX60gensym22_2013266928 = [0];
    var indexHEX60gensym22_2013266935 = rawGet_2013266511(t_2013266925, key_2013266926, hcHEX60gensym22_2013266928, 0);
    if ((0 <= indexHEX60gensym22_2013266935)) {
    result_2013266927 = t_2013266925.data[chckIndx(indexHEX60gensym22_2013266935, 0, (t_2013266925.data).length - 1)]; result_2013266927_Idx = "Field2";
    }
    else {
    raiseKeyError_2013266989(key_2013266926);
    }
    

  return [result_2013266927, result_2013266927_Idx];

}

function mustRehash_2013268533(t_2013268535) {
  var result_2013268536 = false;

    if (!((t_2013268535.counter < (t_2013268535.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013268536 = ((mulInt((t_2013268535.data).length, 2) < mulInt(t_2013268535.counter, 3)) || (subInt((t_2013268535.data).length, t_2013268535.counter) < 4));

  return result_2013268536;

}

function rawInsert_2013268982(t_2013268986, data_2013268987, data_2013268987_Idx, key_2013268988, val_2013268989, hc_2013268990, h_2013268991) {
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1 = nimCopy(data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1, key_2013268988, NTI2013265950);
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field2 = val_2013268989;
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field0 = hc_2013268990;

  
}

function enlarge_2013268688(t_2013268691) {
    var n_2013268694 = [];
    n_2013268694 = new Array(chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647) ; ++i) { n_2013268694[i] = {Field0: 0, Field1: {}, Field2: 0}; }    var Temporary1 = t_2013268691.data; t_2013268691.data = n_2013268694; n_2013268694 = Temporary1;    Label2: {
      var i_2013268758 = 0;
      var colontmp__2818584455 = 0;
      colontmp__2818584455 = (n_2013268694).length - 1;
      var res_2818584456 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584456 <= colontmp__2818584455)) break Label4;
            i_2013268758 = res_2818584456;
            var eh_2013268812 = n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013268812)) {
            var j_2013268816 = (eh_2013268812 & (t_2013268691.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013268691.data[chckIndx(j_2013268816, 0, (t_2013268691.data).length - 1)].Field0)) break Label6;
                  j_2013268816 = nextTry_1308622883(j_2013268816, (t_2013268691.data).length - 1);
                }
            };
            rawInsert_2013268982(t_2013268691, t_2013268691, "data", n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field1, n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field2, eh_2013268812, j_2013268816);
            }
            
            res_2818584456 = addInt(res_2818584456, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013269151(t_2013269154, key_2013269155, hc_2013269156) {
  var result_2013269157 = 0;

  BeforeRet: {
    if (((t_2013269154.data).length == 0)) {
    result_2013269157 = -1;
    break BeforeRet;
    }
    
    var h_2013269208 = (hc_2013269156 & (t_2013269154.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0)) break Label2;
          if (((t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0 == hc_2013269156) && SetEq(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field1, key_2013269155))) {
          result_2013269157 = h_2013269208;
          break BeforeRet;
          }
          
          h_2013269208 = nextTry_1308622883(h_2013269208, (t_2013269154.data).length - 1);
        }
    };
    result_2013269157 = subInt(-1, h_2013269208);
  };

  return result_2013269157;

}

function HEX5BHEX5DHEX3D_2013268360(t_2013268363, key_2013268364, val_2013268365) {
    if (((t_2013268363.data).length == 0)) {
    var correctSizeHEX60gensym32_2013268414 = slotsNeeded_1308622891(32);
    t_2013268363.counter = 0;
    t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }    }
    
    var hc_2013268419 = [0];
    var index_2013268426 = rawGet_2013266511(t_2013268363, key_2013268364, hc_2013268419, 0);
    if ((0 <= index_2013268426)) {
    t_2013268363.data[chckIndx(index_2013268426, 0, (t_2013268363.data).length - 1)].Field2 = val_2013268365;
    }
    else {
      if (((t_2013268363.data).length == 0)) {
      var correctSizeHEX60gensym35_2013268528 = slotsNeeded_1308622891(32);
      t_2013268363.counter = 0;
      t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }      }
      
      if (mustRehash_2013268533(t_2013268363)) {
      enlarge_2013268688(t_2013268363);
      index_2013268426 = rawGetKnownHC_2013269151(t_2013268363, key_2013268364, hc_2013268419[0]);
      }
      
      index_2013268426 = subInt(-1, index_2013268426);
      rawInsert_2013268982(t_2013268363, t_2013268363, "data", key_2013268364, val_2013268365, hc_2013268419[0], index_2013268426);
      t_2013268363.counter = addInt(t_2013268363.counter, 1);
    }
    

  
}

function mustRehash_2013267397(t_2013267399) {
  var result_2013267400 = false;

    if (!((t_2013267399.counter < (t_2013267399.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013267400 = ((mulInt((t_2013267399.data).length, 2) < mulInt(t_2013267399.counter, 3)) || (subInt((t_2013267399.data).length, t_2013267399.counter) < 4));

  return result_2013267400;

}

function rawInsert_2013267846(t_2013267850, data_2013267851, data_2013267851_Idx, key_2013267852, val_2013267853, hc_2013267854, h_2013267855) {
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field1 = key_2013267852;
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2 = nimCopy(data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2, val_2013267853, NTI2013265951);
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field0 = hc_2013267854;

  
}

function enlarge_2013267552(t_2013267555) {
    var n_2013267558 = [];
    n_2013267558 = new Array(chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647) ; ++i) { n_2013267558[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    var Temporary1 = t_2013267555.data; t_2013267555.data = n_2013267558; n_2013267558 = Temporary1;    Label2: {
      var i_2013267622 = 0;
      var colontmp__2818584461 = 0;
      colontmp__2818584461 = (n_2013267558).length - 1;
      var res_2818584462 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584462 <= colontmp__2818584461)) break Label4;
            i_2013267622 = res_2818584462;
            var eh_2013267676 = n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013267676)) {
            var j_2013267680 = (eh_2013267676 & (t_2013267555.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013267555.data[chckIndx(j_2013267680, 0, (t_2013267555.data).length - 1)].Field0)) break Label6;
                  j_2013267680 = nextTry_1308622883(j_2013267680, (t_2013267555.data).length - 1);
                }
            };
            rawInsert_2013267846(t_2013267555, t_2013267555, "data", n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field1, n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field2, eh_2013267676, j_2013267680);
            }
            
            res_2818584462 = addInt(res_2818584462, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013268024(t_2013268027, key_2013268028, hc_2013268029) {
  var result_2013268030 = 0;

  BeforeRet: {
    if (((t_2013268027.data).length == 0)) {
    result_2013268030 = -1;
    break BeforeRet;
    }
    
    var h_2013268081 = (hc_2013268029 & (t_2013268027.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0)) break Label2;
          if (((t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0 == hc_2013268029) && (t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field1 == key_2013268028))) {
          result_2013268030 = h_2013268081;
          break BeforeRet;
          }
          
          h_2013268081 = nextTry_1308622883(h_2013268081, (t_2013268027.data).length - 1);
        }
    };
    result_2013268030 = subInt(-1, h_2013268081);
  };

  return result_2013268030;

}

function HEX5BHEX5DHEX3D_2013267224(t_2013267227, key_2013267228, val_2013267229) {
    if (((t_2013267227.data).length == 0)) {
    var correctSizeHEX60gensym20_2013267278 = slotsNeeded_1308622891(32);
    t_2013267227.counter = 0;
    t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    }
    
    var hc_2013267283 = [0];
    var index_2013267290 = rawGet_2013266081(t_2013267227, key_2013267228, hc_2013267283, 0);
    if ((0 <= index_2013267290)) {
    t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2 = nimCopy(t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2, val_2013267229, NTI2013265951);
    }
    else {
      if (((t_2013267227.data).length == 0)) {
      var correctSizeHEX60gensym23_2013267392 = slotsNeeded_1308622891(32);
      t_2013267227.counter = 0;
      t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2013267397(t_2013267227)) {
      enlarge_2013267552(t_2013267227);
      index_2013267290 = rawGetKnownHC_2013268024(t_2013267227, key_2013267228, hc_2013267283[0]);
      }
      
      index_2013267290 = subInt(-1, index_2013267290);
      rawInsert_2013267846(t_2013267227, t_2013267227, "data", key_2013267228, val_2013267229, hc_2013267283[0], index_2013267290);
      t_2013267227.counter = addInt(t_2013267227.counter, 1);
    }
    

  
}

function linkState_2013267131(dfa_2013267132, dfa_2013267132_Idx, currentState_2013267133, nextState_2013267134, inputCode_2013267135, mods_2013267136) {
    if (!(contains_2013266068(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135))) {
    HEX5BHEX5DHEX3D_2013267224(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135, {next: ({data: [], counter: 0})});
    }
    
    HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135).next, mods_2013267136, nextState_2013267134);

  
}

function createOrUpdateState_2013269393(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, inputCode_2013269396, mods_2013269397, persistent_2013269398) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_2013269399 = 0;

  BeforeRet: {
    if (contains_2013266068(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396)) {
    if (contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397)) {
    Temporary2 = (Temporary3 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397), Temporary3)[0][Temporary3[1]];
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
      HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397, subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1));
    Temporary2 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    Temporary1 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    var nextState_2013269790 = Temporary1;
    dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(nextState_2013269790, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].persistent = persistent_2013269398;
    linkState_2013267131(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, nextState_2013269790, inputCode_2013269396, mods_2013269397);
    result_2013269399 = nextState_2013269790;
    break BeforeRet;
  };

  return result_2013269399;

}

function binarySearch_788530217(c_788530218, tab_788530219, len_788530220, stride_788530221) {
  var result_788530222 = 0;

  BeforeRet: {
    var n_788530223 = len_788530220;
    var t_788530224 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_788530223)) break Label2;
          var m_788530225 = divInt(n_788530223, 2);
          var p_788530226 = addInt(t_788530224, mulInt(m_788530225, stride_788530221));
          if ((((tab_788530219[chckIndx(p_788530226, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218)) {
          t_788530224 = p_788530226;
          n_788530223 = subInt(n_788530223, m_788530225);
          }
          else {
            n_788530223 = m_788530225;
          }
          
        }
    };
    if ((!((n_788530223 == 0)) && (((tab_788530219[chckIndx(t_788530224, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218))) {
    result_788530222 = t_788530224;
    break BeforeRet;
    }
    
    result_788530222 = -1;
    break BeforeRet;
  };

  return result_788530222;

}

function nucisLower(c_788530328) {
  var result_788530329 = false;

  BeforeRet: {
    var c_788530330 = c_788530328;
    var p_788530338 = binarySearch_788530217(c_788530330, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530338) && (((toUpperRanges_788530129[chckIndx(p_788530338, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530330)) && (c_788530330 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530338, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
    p_788530338 = binarySearch_788530217(c_788530330, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530338) && (c_788530330 == ((toUpperSinglets_788530130[chckIndx(p_788530338, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
  };

  return result_788530329;

}

function nuctoLower(c_788530228) {
  var result_788530229 = 0;

  BeforeRet: {
    var c_788530230 = c_788530228;
    var p_788530239 = binarySearch_788530217(c_788530230, toLowerRanges_788530127, 45, 3);
    if ((((0 <= p_788530239) && (((toLowerRanges_788530127[chckIndx(p_788530239, 0, (toLowerRanges_788530127).length - 1)]) | 0) <= c_788530230)) && (c_788530230 <= ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 1), 0, (toLowerRanges_788530127).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 2), 0, (toLowerRanges_788530127).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530239 = binarySearch_788530217(c_788530230, toLowerSinglets_788530128, 610, 2);
    if (((0 <= p_788530239) && (c_788530230 == ((toLowerSinglets_788530128[chckIndx(p_788530239, 0, (toLowerSinglets_788530128).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerSinglets_788530128[chckIndx(addInt(p_788530239, 1), 0, (toLowerSinglets_788530128).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530229 = c_788530230;
    break BeforeRet;
  };

  return result_788530229;

}

function nuctoUpper(c_788530276) {
  var result_788530277 = 0;

  BeforeRet: {
    var c_788530278 = c_788530276;
    var p_788530287 = binarySearch_788530217(c_788530278, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530287) && (((toUpperRanges_788530129[chckIndx(p_788530287, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530278)) && (c_788530278 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 2), 0, (toUpperRanges_788530129).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530287 = binarySearch_788530217(c_788530278, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530287) && (c_788530278 == ((toUpperSinglets_788530130[chckIndx(p_788530287, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperSinglets_788530130[chckIndx(addInt(p_788530287, 1), 0, (toUpperSinglets_788530130).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530277 = c_788530278;
    break BeforeRet;
  };

  return result_788530277;

}

function handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, index_2013269804, currentState_2013269805, defaultState_2013269806) {
              var Temporary5;
              var Temporary6;
              var Temporary7;
                var Temporary8;
    var Temporary12;

  BeforeRet: {
    var state_2013269813 = 0;
    var mods_2013269814 = nimCopy(null, ConstSet9, NTI2013265950);
    var specialKey_2013269815 = [[]];
    if (((input_2013269802).length <= index_2013269804)) {
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].isTerminal = true;
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].function = nimCopy(null, function_2013269803, NTI33554449);
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].nextState = defaultState_2013269806;
    break BeforeRet;
    }
    
    var inputCode_2013269819 = 0;
    var persistent_2013269820 = false;
    var nextIndex_2013269821 = index_2013269804;
    Label1: {
      var i_2013269829 = 0;
      var colontmp__2818584436 = 0;
      colontmp__2818584436 = (input_2013269802).length;
      var i_2818584437 = index_2013269804;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584437 < colontmp__2818584436)) break Label3;
            i_2013269829 = i_2818584437;
            Label4: {
              var rune_2013269830 = input_2013269802[chckIndx(i_2013269829, 0, (input_2013269802).length - 1)];
              if (isAscii_2013266003(rune_2013269830)) {
              Temporary5 = chckRange(rune_2013269830, 0, 255);
              }
              else {
              Temporary5 = 0;
              }
              
              var ascii_2013269831 = Temporary5;
              if (!((0 < i_2013269829) && isAscii_2013266003(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)]))) Temporary6 = false; else {                Temporary6 = (chckRange(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)], 0, 255) == 92);              }              var isEscaped_2013269832 = Temporary6;
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 92))) {
              break Label4;
              }
              
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 60))) {
              state_2013269813 = 1;
              Temporary7 = 0;
              }
              else {
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 62))) {
              if (!((state_2013269813 == 1))) {
              log_1174405220(logger_704643272[0], 5, [[69,114,114,111,114,58,32,62,32,119,105,116,104,111,117,116,32,60]]);
              break BeforeRet;
              }
              
              var inputCode_2013269838 = getInputCodeFromSpecialKey_2013267119(specialKey_2013269815[0]);
              state_2013269813 = 0;
              specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
              Temporary7 = inputCode_2013269838;
              }
              else {
                if ((state_2013269813 == 1)) {
                if ((!(isEscaped_2013269832) && (ascii_2013269831 == 45))) {
                mods_2013269814 = nimCopy(mods_2013269814, ConstSet10, NTI2013265950);
                Label9: {
                  var m_2013269843 = 0;
                  var i_2818584433 = 0;
                  var L_2818584434 = (specialKey_2013269815[0]).length;
                  Label10: {
                      Label11: while (true) {
                      if (!(i_2818584433 < L_2818584434)) break Label11;
                        m_2013269843 = specialKey_2013269815[0][chckIndx(i_2818584433, 0, (specialKey_2013269815[0]).length - 1)];
                        switch (m_2013269843) {
                        case 67:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet11), NTI2013265950);
                          break;
                        case 83:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet12), NTI2013265950);
                          break;
                        case 65:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet13), NTI2013265950);
                          break;
                        case 42:
                          persistent_2013269820 = true;
                          break;
                        default: 
                          var fmtRes_2013269861 = mnewString(0);
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [73,110,118,97,108,105,100,32,109,111,100,105,102,105,101,114,32,39]);;
                          addChar(fmtRes_2013269861, m_2013269843);;
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [39]);;
                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269861, NTI33554449)]);
                          break;
                        }
                        i_2818584433 = addInt(i_2818584433, 1);
                        if (!(((specialKey_2013269815[0]).length == L_2818584434))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
                }
                else {
                add_788529670(specialKey_2013269815, 0, rune_2013269830);
                }
                
                Temporary8 = 0;
                }
                else {
                  mods_2013269814 = nimCopy(mods_2013269814, ConstSet14, NTI2013265950);
                Temporary8 = rune_2013269830;
                }
                
              Temporary7 = Temporary8;
              }
              }
              inputCode_2013269819 = Temporary7;
              if (!((inputCode_2013269819 == 0))) {
              nextIndex_2013269821 = addInt(i_2013269829, 1);
              break Label1;
              }
              
            };
            i_2818584437 = addInt(i_2818584437, 1);
          }
      };
    };
    if ((inputCode_2013269819 == 0)) {
    var fmtRes_2013269866 = mnewString(0);
    fmtRes_2013269866.push.apply(fmtRes_2013269866, [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,105,110,112,117,116]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269866, NTI33554449)]);
    break BeforeRet;
    }
    
    var nextState_2013269867 = createOrUpdateState_2013269393(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, inputCode_2013269819, mods_2013269814, persistent_2013269820);
    if (((0 < inputCode_2013269819) && (SetEq(mods_2013269814, ConstSet15) || SetEq(mods_2013269814, ConstSet16)))) {
    var rune_2013269876 = chckRange(inputCode_2013269819, -2147483648, 2147483647);
    var bIsLower_2013269877 = nucisLower(rune_2013269876);
    if (!(bIsLower_2013269877)) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoLower(rune_2013269876), SetPlus(mods_2013269814, ConstSet17));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, inputCode_2013269819, SetPlus(mods_2013269814, ConstSet18));
    }
    
    if ((bIsLower_2013269877 && (mods_2013269814[1] != undefined))) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), SetMinus(mods_2013269814, ConstSet19));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), mods_2013269814);
    }
    
    }
    
    if (persistent_2013269820) {
    Temporary12 = nextState_2013269867;
    }
    else {
    Temporary12 = defaultState_2013269806;
    }
    
    var nextDefaultState_2013269895 = Temporary12;
    handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, nextIndex_2013269821, nextState_2013269867, nextDefaultState_2013269895);
  };

  
}

function buildDFA_2013269905(commands_2013269906) {
  var result_2013269907 = [null];

    result_2013269907[0] = ({persistentState: 0, states: []});
    result_2013269907[0].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    var currentState_2013269915 = 0;
    Label1: {
      var command_2013269938 = {Field0: [], Field1: []};
      var i_2818584427 = 0;
      var L_2818584428 = (commands_2013269906).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584427 < L_2818584428)) break Label3;
            command_2013269938 = commands_2013269906[chckIndx(i_2818584427, 0, (commands_2013269906).length - 1)];
            currentState_2013269915 = 0;
            var input_2013269939 = nimCopy(null, command_2013269938["Field0"], NTI33554449);
            var function_2013269940 = nimCopy(null, command_2013269938["Field1"], NTI33554449);
            if ((0 < (input_2013269939).length)) {
            handleNextInput_2013269800(result_2013269907, 0, toRunes_788536583(input_2013269939), function_2013269940, 0, 0, 0);
            }
            
            i_2818584427 = addInt(i_2818584427, 1);
            if (!(((commands_2013269906).length == L_2818584428))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2013269907[0];

}

function len_2113929330(t_2113929333) {
  var result_2113929334 = 0;

    result_2113929334 = t_2113929333.counter;

  return result_2113929334;

}

function buildDFA_2113929279(config_2113929280) {
  var result_2113929281 = null;

  BeforeRet: {
    var resultHEX60gensym2_2113929561 = [];
    Label1: {
      var xHEX60gensym2_2113929562 = {Field0: [], Field1: []};
      var L_2818584419 = len_2113929330(config_2113929280.commands);
      Label2: {
        var h_2818584421 = 0;
        var colontmp__2818584422 = 0;
        colontmp__2818584422 = (config_2113929280.commands.data).length - 1;
        var res_2818584423 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818584423 <= colontmp__2818584422)) break Label4;
              h_2818584421 = res_2818584423;
              if (isFilled_1308622880(config_2113929280.commands.data[chckIndx(h_2818584421, 0, (config_2113929280.commands.data).length - 1)].Field0)) {
              xHEX60gensym2_2113929562 = nimCopy(xHEX60gensym2_2113929562, {Field0: nimCopy(null, config_2113929280.commands.data[chckIndx(h_2818584421, 0, (config_2113929280.commands.data).length - 1)].Field1, NTI33554449), Field1: nimCopy(null, config_2113929280.commands.data[chckIndx(h_2818584421, 0, (config_2113929280.commands.data).length - 1)].Field2, NTI33554449)}, NTI2113929251);
              var Temporary5 = nimCopy(null, xHEX60gensym2_2113929562, NTI2113929251);
              resultHEX60gensym2_2113929561.push(Temporary5);;
              if (!((len_2113929330(config_2113929280.commands) == L_2818584419))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818584423 = addInt(res_2818584423, 1);
            }
        };
      };
    };
    result_2113929281 = buildDFA_2013269905(resultHEX60gensym2_2113929561);
    break BeforeRet;
  };

  return result_2113929281;

}

function invoke_2415919167(event_2415919169) {
    Label1: {
      var h_2415919192 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818584468 = 0;
      var L_2818584469 = (event_2415919169.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584468 < L_2818584469)) break Label3;
            h_2415919192 = event_2415919169.handlers[chckIndx(i_2818584468, 0, (event_2415919169.handlers).length - 1)];
            h_2415919192.Field1();
            i_2818584468 = addInt(i_2818584468, 1);
            if (!(((event_2415919169.handlers).length == L_2818584469))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function markDirty_2415919143(self_2415919144) {
    if (!(self_2415919144.mDirty)) {
    invoke_2415919167(self_2415919144.onMarkedDirty);
    }
    
    self_2415919144.mDirty = true;

  
}

function setMode_2818584221(self_2818584222, mode_2818584223) {
        
function HEX3Aanonymous_2818584249(actionHEX60gensym189HEX60gensym190_2818584250, argHEX60gensym189HEX60gensym190_2818584251) {
          var result_2818584252 = 0;

          BeforeRet: {
            if (handlerHEX60gensym189_2818584237.config.handleActions) {
            var action_2818584253 = nimCopy(null, actionHEX60gensym189HEX60gensym190_2818584250, NTI33554449);
            var arg_2818584254 = nimCopy(null, argHEX60gensym189HEX60gensym190_2818584251, NTI33554449);
            var responseHEX60gensym189HEX60gensym190_2818584255 = handleAction_2818572653(self_2818584222, action_2818584253, arg_2818584254);
            if (handlerHEX60gensym189_2818584237.config.consumeAllActions) {
            result_2818584252 = 3;
            break BeforeRet;
            }
            
            result_2818584252 = responseHEX60gensym189HEX60gensym190_2818584255;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym189_2818584237.config.consumeAllActions) {
            result_2818584252 = 3;
            break BeforeRet;
            }
            else {
              result_2818584252 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2818584252;

        }
        
function HEX3Aanonymous_2818584257(inputHEX60gensym189HEX60gensym191_2818584258) {
          var result_2818584259 = 0;

          BeforeRet: {
            if (handlerHEX60gensym189_2818584237.config.handleInputs) {
            var input_2818584260 = nimCopy(null, inputHEX60gensym189HEX60gensym191_2818584258, NTI33554449);
            result_2818584259 = handleInput_2818572661(self_2818584222, input_2818584260);
            break BeforeRet;
            }
            else {
              result_2818584259 = 1;
              break BeforeRet;
            }
            
          };

          return result_2818584259;

        }

  BeforeRet: {
    if (eqStrings(mode_2818584223, [99,111,109,112,108,101,116,105,111,110])) {
    var fmtRes_2818584228 = [mnewString(0)];
    fmtRes_2818584228[0].push.apply(fmtRes_2818584228[0], [67,97,110,39,116,32,115,101,116,32,109,111,100,101,32,116,111,32,39]);;
    formatValue_721420459(fmtRes_2818584228, 0, mode_2818584223, []);
    fmtRes_2818584228[0].push.apply(fmtRes_2818584228[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818584228[0], NTI33554449)]);
    break BeforeRet;
    }
    
    if (((mode_2818584223).length == 0)) {
    self_2818584222.modeEventHandler = null;
    }
    else {
      var config_2818584229 = getModeConfig_2818584032(self_2818584222, mode_2818584223);
      Label1: {
        var handlerHEX60gensym189_2818584237 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym189_2818584237.config = config_2818584229;
        handlerHEX60gensym189_2818584237.dfaInternal = buildDFA_2113929279(config_2818584229);
        handlerHEX60gensym189_2818584237.handleAction = HEX3Aanonymous_2818584249;
        handlerHEX60gensym189_2818584237.handleInput = HEX3Aanonymous_2818584257;
      };
      self_2818584222.modeEventHandler = handlerHEX60gensym189_2818584237;
    }
    
    self_2818584222.currentMode = nimCopy(null, mode_2818584223, NTI33554449);
    markDirty_2415919143(self_2818584222);
  };

  
}

function setModeJsWrapper_2818584182(self_2818584346, mode_2818584347) {
    setMode_2818584221(self_2818584346, mode_2818584347);

  
}
editor_text_prototype.setMode = function(mode_ /* : string */) { return (setModeJsWrapper_2818584182(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2818584477(self_2818584478) {
  var result_2818584479 = [];

  BeforeRet: {
    result_2818584479 = nimCopy(null, self_2818584478.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2818584479;

}

function modeJsWrapper_2818584473(self_2818584508) {
  var result_2818584509 = [];

    result_2818584509 = nimCopy(null, mode_2818584477(self_2818584508), NTI33554449);

  return result_2818584509;

}
editor_text_prototype.mode = function() { return toJSStr(modeJsWrapper_2818584473(this));};

function getContextWithMode_2818583607(self_2818583608, context_2818583609) {
  var result_2818584537 = [];

  BeforeRet: {
    result_2818584537 = nimCopy(null, (context_2818583609 || []).concat([46] || [],self_2818583608.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2818584537;

}

function getContextWithModeJsWrapper_2818584530(self_2818584567, context_2818584568) {
  var result_2818584569 = [];

    result_2818584569 = nimCopy(null, getContextWithMode_2818583607(self_2818584567, context_2818584568), NTI33554449);

  return result_2818584569;

}
editor_text_prototype.getContextWithMode = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper_2818584530(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function nimIdentNormalize_855638137(s_855638138) {
  var result_855638139 = [];

  BeforeRet: {
    result_855638139 = nimCopy(null, mnewString(chckRange((s_855638138).length, 0, 2147483647)), NTI33554449);
    if (((s_855638138).length == 0)) {
    break BeforeRet;
    }
    
    result_855638139[chckIndx(0, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(0, 0, (s_855638138).length - 1)];
    var j_855638140 = 1;
    Label1: {
      var i_855638145 = 0;
      var colontmp__1811939856 = 0;
      colontmp__1811939856 = subInt((s_855638138).length, 1);
      var res_1811939857 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_1811939857 <= colontmp__1811939856)) break Label3;
            i_855638145 = res_1811939857;
            if ((ConstSet20[s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)]] != undefined)) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = chckRange(addInt(s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)], 32), 0, 255);
            j_855638140 = addInt(j_855638140, 1);
            }
            else {
            if (!((s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)] == 95))) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)];
            j_855638140 = addInt(j_855638140, 1);
            }
            }
            res_1811939857 = addInt(res_1811939857, 1);
          }
      };
    };
    if (!((j_855638140 == (s_855638138).length))) {
    if (result_855638139.length < chckRange(j_855638140, 0, 2147483647)) { for (var i = result_855638139.length; i < chckRange(j_855638140, 0, 2147483647); ++i) result_855638139.push(0); }
         else {result_855638139.length = chckRange(j_855638140, 0, 2147483647); };
    }
    
  };

  return result_855638139;

}

function parseEnum_2818583667(s_2818583669, default_2818583670) {
    var Temporary1;

  var result_2818583671 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818583669))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      Temporary1 = default_2818583670;
      break;
    }
    result_2818583671 = Temporary1;

  return result_2818583671;

}

function rawGet_1627392619(t_1627392622, key_1627392623, hc_1627392624, hc_1627392624_Idx) {
  var result_1627392625 = 0;

  BeforeRet: {
    hc_1627392624[hc_1627392624_Idx] = hash_1325400491(key_1627392623);
    if ((hc_1627392624[hc_1627392624_Idx] == 0)) {
    hc_1627392624[hc_1627392624_Idx] = 314159265;
    }
    
    if (((t_1627392622.data).length == 0)) {
    result_1627392625 = -1;
    break BeforeRet;
    }
    
    var h_1627392676 = (hc_1627392624[hc_1627392624_Idx] & (t_1627392622.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0)) break Label2;
          if (((t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0 == hc_1627392624[hc_1627392624_Idx]) && eqStrings(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field2, key_1627392623))) {
          result_1627392625 = h_1627392676;
          break BeforeRet;
          }
          
          h_1627392676 = nextTry_1308622883(h_1627392676, (t_1627392622.data).length - 1);
        }
    };
    result_1627392625 = subInt(-1, h_1627392676);
  };

  return result_1627392625;

}

function getOrDefault_1627393397(t_1627393400, key_1627393401) {
  var result_1627393402 = null;

    var hcHEX60gensym59_1627393405 = [0];
    var indexHEX60gensym59_1627393412 = rawGet_1627392619(t_1627393400, key_1627393401, hcHEX60gensym59_1627393405, 0);
    if ((0 <= indexHEX60gensym59_1627393412)) {
    result_1627393402 = t_1627393400.data[chckIndx(indexHEX60gensym59_1627393412, 0, (t_1627393400.data).length - 1)].Field3;
    }
    

  return result_1627393402;

}

function HEX7BHEX7D_1627393316(node_1627393317, keys_1627393318) {
            var Temporary4;

  var result_1627393319 = null;

  BeforeRet: {
    result_1627393319 = node_1627393317;
    Label1: {
      var key_1627393323 = [];
      var i_2818584698 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584698 < (keys_1627393318).length)) break Label3;
            key_1627393323 = keys_1627393318[chckIndx(i_2818584698, 0, (keys_1627393318).length - 1)];
            if (((result_1627393319 == null) || !((result_1627393319.kind == 5)))) {
            result_1627393319 = null;
            break BeforeRet;
            }
            
            var Temporary4 = result_1627393319;
            if (ConstSet21[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
            result_1627393319 = getOrDefault_1627393397(Temporary4.fields, key_1627393323);
            i_2818584698 = addInt(i_2818584698, 1);
          }
      };
    };
  };

  return result_1627393319;

}

function substrEq_855638270(s_855638271, pos_855638272, substr_855638273) {
  var result_855638274 = false;

  BeforeRet: {
    var i_855638275 = 0;
    var length_855638276 = (substr_855638273).length;
    Label1: {
        Label2: while (true) {
        if (!(((i_855638275 < length_855638276) && (addInt(pos_855638272, i_855638275) < (s_855638271).length)) && (s_855638271[chckIndx(addInt(pos_855638272, i_855638275), 0, (s_855638271).length - 1)] == substr_855638273[chckIndx(i_855638275, 0, (substr_855638273).length - 1)]))) break Label2;
          i_855638275 = addInt(i_855638275, 1);
        }
    };
    result_855638274 = (i_855638275 == length_855638276);
    break BeforeRet;
  };

  return result_855638274;

}

function substr_33557821(s_33557822, first_33557823, last_33557824) {
  var result_33557825 = [];

    var first_33557826 = nimMax(first_33557823, 0);
    var L_33557827 = nimMax(addInt(subInt(nimMin(last_33557824, (s_33557822).length - 1), first_33557826), 1), 0);
    result_33557825 = nimCopy(null, mnewString(chckRange(L_33557827, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33557832 = 0;
      var colontmp__2684355097 = 0;
      colontmp__2684355097 = subInt(L_33557827, 1);
      var res_2684355098 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2684355098 <= colontmp__2684355097)) break Label3;
            i_33557832 = res_2684355098;
            result_33557825[chckIndx(i_33557832, 0, (result_33557825).length - 1)] = s_33557822[chckIndx(addInt(i_33557832, first_33557826), 0, (s_33557822).length - 1)];
            res_2684355098 = addInt(res_2684355098, 1);
          }
      };
    };

  return result_33557825;

}

function nsuSplitString(s_855638588, sep_855638589, maxsplit_855638590) {
  var result_855638591 = [];

    if (!((0 < (sep_855638589).length))) {
    failedAssertImpl_268435515([115,116,114,117,116,105,108,115,46,110,105,109,40,55,54,48,44,32,49,49,41,32,96,115,101,112,46,108,101,110,32,62,32,48,96,32]);
    }
    
    result_855638591 = nimCopy(null, [], NTI855638433);
    Label1: {
      var xHEX60gensym71_855638602 = [];
      var lastHEX60gensym40_2818584704 = 0;
      var splitsHEX60gensym40_2818584705 = maxsplit_855638590;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym40_2818584704 <= (s_855638588).length)) break Label3;
            var firstHEX60gensym40_2818584707 = lastHEX60gensym40_2818584704;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym40_2818584704 < (s_855638588).length) && !(substrEq_855638270(s_855638588, lastHEX60gensym40_2818584704, sep_855638589)))) break Label5;
                  lastHEX60gensym40_2818584704 = addInt(lastHEX60gensym40_2818584704, 1);
                }
            };
            if ((splitsHEX60gensym40_2818584705 == 0)) {
            lastHEX60gensym40_2818584704 = (s_855638588).length;
            }
            
            xHEX60gensym71_855638602 = substr_33557821(s_855638588, firstHEX60gensym40_2818584707, subInt(lastHEX60gensym40_2818584704, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym71_855638602, NTI33554449);
            result_855638591.push(Temporary6);;
            if ((splitsHEX60gensym40_2818584705 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym40_2818584705 = subInt(splitsHEX60gensym40_2818584705, 1);
            lastHEX60gensym40_2818584704 = addInt(lastHEX60gensym40_2818584704, (sep_855638589).length);
          }
      };
    };

  return result_855638591;

}

function getStr_1627390106(n_1627390107, default_1627390108) {
      var Temporary1;

  var result_1627390109 = [];

  BeforeRet: {
    if (((n_1627390107 == null) || !((n_1627390107.kind == 4)))) {
    result_1627390109 = nimCopy(null, default_1627390108, NTI33554449);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390107;
      if (ConstSet22[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390109 = nimCopy(null, Temporary1.str, NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_1627390109;

}

function getOption_2818583641(editor_2818583643, path_2818583644, default_2818583645) {
  var result_2818583651 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583643 == null)) {
      result_2818583651 = default_2818583645;
      break BeforeRet;
      }
      
      var nodeHEX60gensym166_2818583663 = HEX7BHEX7D_1627393316(editor_2818583643.options, nsuSplitString(path_2818583644, [46], -1));
      if ((nodeHEX60gensym166_2818583663 == null)) {
      result_2818583651 = default_2818583645;
      break BeforeRet;
      }
      
    };
    result_2818583651 = parseEnum_2818583667(getStr_1627390106(nodeHEX60gensym166_2818583663, []), default_2818583645);
    break BeforeRet;
  };

  return result_2818583651;

}

function selection_2818572803(self_2818572804) {
  var result_2818572805 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572805 = nimCopy(result_2818572805, self_2818572804.selectionsInternal[chckIndx((self_2818572804.selectionsInternal).length - 1, 0, (self_2818572804.selectionsInternal).length - 1)], NTI2449473547);

  return result_2818572805;

}

function getCursor_2818583637(self_2818583638, cursor_2818583639) {
  var result_2818583640 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (cursor_2818583639) {
    case 0:
      var configCursor_2818583701 = getOption_2818583641(self_2818583638.editor, getContextWithMode_2818583607(self_2818583638, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      result_2818583640 = nimCopy(result_2818583640, getCursor_2818583637(self_2818583638, configCursor_2818583701), NTI2449473545);
      break BeforeRet;
      break;
    case 1:
    case 3:
    case 4:
      result_2818583640 = nimCopy(result_2818583640, selection_2818572803(self_2818583638).Field1, NTI2449473545);
      break BeforeRet;
      break;
    case 2:
      result_2818583640 = nimCopy(result_2818583640, selection_2818572803(self_2818583638).Field0, NTI2449473545);
      break BeforeRet;
      break;
    }
  };

  return result_2818583640;

}

function updateTargetColumn_2818584599(self_2818584600, cursor_2818584601) {
    self_2818584600.targetColumn = getCursor_2818583637(self_2818584600, cursor_2818584601).Field1;

  
}

function updateTargetColumnJsWrapper_2818584595(self_2818584630, cursor_2818584631) {
    updateTargetColumn_2818584599(self_2818584630, cursor_2818584631);

  
}
editor_text_prototype.updateTargetColumn = function(cursor_ /* : SelectionCursor */) { return (updateTargetColumnJsWrapper_2818584595(this, cursor_));};

function HEX3DHEX3D_2449473609(x_2449473611, y_2449473612) {
  var result_2449473613 = false;

  BeforeRet: {
    if (!((x_2449473611["Field0"] == y_2449473612["Field0"]))) {
    result_2449473613 = false;
    break BeforeRet;
    }
    
    if (!((x_2449473611["Field1"] == y_2449473612["Field1"]))) {
    result_2449473613 = false;
    break BeforeRet;
    }
    
    result_2449473613 = true;
    break BeforeRet;
  };

  return result_2449473613;

}

function HEX3DHEX3D_2449473599(x_2449473601, y_2449473602) {
  var result_2449473603 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2449473609(x_2449473601["Field0"], y_2449473602["Field0"]))) {
    result_2449473603 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2449473609(x_2449473601["Field1"], y_2449473602["Field1"]))) {
    result_2449473603 = false;
    break BeforeRet;
    }
    
    result_2449473603 = true;
    break BeforeRet;
  };

  return result_2449473603;

}

function newSeq_2818572843(len_2818572845) {
  var result_2818572846 = [];

    result_2818572846 = new Array(len_2818572845); for (var i = 0 ; i < len_2818572845 ; ++i) { result_2818572846[i] = []; }
  return result_2818572846;

}

function expandIfNeeded_2818572833(deq_2818572835) {
              var Temporary5;
    var Temporary6;

    if ((deq_2818572835.mask == 0)) {
    var correctSizeHEX60gensym9_2818572837 = nextPowerOfTwo_872415437(4);
    deq_2818572835.mask = subInt(correctSizeHEX60gensym9_2818572837, 1);
    deq_2818572835.data = new Array(chckRange(correctSizeHEX60gensym9_2818572837, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_2818572837, 0, 2147483647) ; ++i) { deq_2818572835.data[i] = []; }    }
    
    var cap_2818572842 = addInt(deq_2818572835.mask, 1);
    if ((cap_2818572842 <= deq_2818572835.count)) {
    var n_2818572860 = newSeq_2818572843(chckRange(mulInt(cap_2818572842, 2), 0, 2147483647));
    var i_2818572861 = 0;
    Label1: {
      var x_2818572871 = null;
      var x_2818572871_Idx = 0;
      var i_2818584764 = deq_2818572835.head;
      Label2: {
        var c_2818584766 = 0;
        var i_2818584767 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2818584767 < deq_2818572835.count)) break Label4;
              c_2818584766 = i_2818584767;
              x_2818572871 = deq_2818572835.data; x_2818572871_Idx = chckIndx(i_2818584764, 0, (deq_2818572835.data).length - 1);
              Temporary5 = x_2818572871[x_2818572871_Idx];
              x_2818572871[x_2818572871_Idx] = genericReset(x_2818572871[x_2818572871_Idx], NTI2449473555);
              n_2818572860[chckIndx(i_2818572861, 0, (n_2818572860).length - 1)] = nimCopy(null, Temporary5, NTI2449473555);
              i_2818572861 = addInt(i_2818572861, 1);
              i_2818584764 = (addInt(i_2818584764, 1) & deq_2818572835.mask);
              i_2818584767 = addInt(i_2818584767, 1);
            }
        };
      };
    };
    Temporary6 = n_2818572860;
    n_2818572860 = genericReset(n_2818572860, NTI2818572694);
    deq_2818572835.data = nimCopy(null, Temporary6, NTI2818572694);
    deq_2818572835.mask = subInt(mulInt(cap_2818572842, 2), 1);
    deq_2818572835.tail = deq_2818572835.count;
    deq_2818572835.head = 0;
    }
    

  
}

function addLast_2818572824(deq_2818572826, item_2818572827) {
    expandIfNeeded_2818572833(deq_2818572826);
    deq_2818572826.count = addInt(deq_2818572826.count, 1);
    deq_2818572826.data[chckIndx(deq_2818572826.tail, 0, (deq_2818572826.data).length - 1)] = nimCopy(null, item_2818572827, NTI2449473555);
    deq_2818572826.tail = (addInt(deq_2818572826.tail, 1) & deq_2818572826.mask);

  
}

function len_2818572974(deq_2818572976) {
  var result_2818572977 = 0;

    result_2818572977 = deq_2818572976.count;

  return result_2818572977;

}

function popFirst_2818573046(deq_2818573048) {
    var Temporary1;

  var result_2818573049 = [];

    if ((deq_2818573048.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818573048.count = subInt(deq_2818573048.count, 1);
    Temporary1 = deq_2818573048.data[chckIndx(deq_2818573048.head, 0, (deq_2818573048.data).length - 1)];
    deq_2818573048.data[chckIndx(deq_2818573048.head, 0, (deq_2818573048.data).length - 1)] = genericReset(deq_2818573048.data[chckIndx(deq_2818573048.head, 0, (deq_2818573048.data).length - 1)], NTI2449473555);
    result_2818573049 = nimCopy(null, Temporary1, NTI2449473555);
    deq_2818573048.head = (addInt(deq_2818573048.head, 1) & deq_2818573048.mask);

  return result_2818573049;

}

function clamp_1660945119(x_1660945121, a_1660945122, b_1660945123) {
  var result_1660945124 = 0;

  BeforeRet: {
    if ((x_1660945121 < a_1660945122)) {
    result_1660945124 = a_1660945122;
    break BeforeRet;
    }
    
    if ((b_1660945123 < x_1660945121)) {
    result_1660945124 = b_1660945123;
    break BeforeRet;
    }
    
    result_1660945124 = x_1660945121;
    break BeforeRet;
  };

  return result_1660945124;

}

function lineLength_2818572671(self_2818572672, line_2818572673) {
  var result_2818572674 = 0;

  BeforeRet: {
    if ((line_2818572673 < (self_2818572672.lines).length)) {
    result_2818572674 = (self_2818572672.lines[chckIndx(line_2818572673, 0, (self_2818572672.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572674 = 0;
    break BeforeRet;
  };

  return result_2818572674;

}

function clampCursor_2818572685(self_2818572686, cursor_2818572687) {
  var result_2818572688 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818572689 = nimCopy(null, cursor_2818572687, NTI2449473545);
    if (((self_2818572686.lines).length == 0)) {
    var colontmp__2818584771 = 0;
    var colontmp__2818584772 = 0;
    result_2818572688 = nimCopy(result_2818572688, {Field0: colontmp__2818584771, Field1: colontmp__2818584772}, NTI2449473545);
    break BeforeRet;
    }
    
    cursor_2818572689.Field0 = clamp_1660945119(cursor_2818572689.Field0, 0, subInt((self_2818572686.lines).length, 1));
    cursor_2818572689.Field1 = clamp_1660945119(cursor_2818572689.Field1, 0, lineLength_2818572671(self_2818572686, cursor_2818572689.Field0));
    result_2818572688 = nimCopy(result_2818572688, cursor_2818572689, NTI2449473545);
    break BeforeRet;
  };

  return result_2818572688;

}

function clampSelection_2818572710(self_2818572711, selection_2818572712) {
  var result_2818572713 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818584769 = clampCursor_2818572685(self_2818572711, selection_2818572712.Field0);
    var colontmp__2818584770 = clampCursor_2818572685(self_2818572711, selection_2818572712.Field1);
    result_2818572713 = nimCopy(result_2818572713, {Field0: nimCopy(null, colontmp__2818584769, NTI2449473545), Field1: nimCopy(null, colontmp__2818584770, NTI2449473545)}, NTI2449473547);

  return result_2818572713;

}

function clampSelection_2818572714(self_2818572715, selection_2818572716) {
  var result_2818572717 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572717 = nimCopy(result_2818572717, clampSelection_2818572710(self_2818572715.document, selection_2818572716), NTI2449473547);

  return result_2818572717;

}

function selectionHEX3D_2818572809(self_2818572810, selection_2818572811) {
  BeforeRet: {
    if ((((self_2818572810.selectionsInternal).length == 1) && HEX3DHEX3D_2449473599(self_2818572810.selectionsInternal[chckIndx(0, 0, (self_2818572810.selectionsInternal).length - 1)], selection_2818572811))) {
    break BeforeRet;
    }
    
    addLast_2818572824(self_2818572810.selectionHistory, self_2818572810.selectionsInternal);
    if ((100 < len_2818572974(self_2818572810.selectionHistory))) {
    var _ = popFirst_2818573046(self_2818572810.selectionHistory);
    }
    
    self_2818572810.selectionsInternal = nimCopy(null, [nimCopy(null, clampSelection_2818572714(self_2818572810, selection_2818572811), NTI2449473547)], NTI2818572821);
    markDirty_2415919143(self_2818572810);
  };

  
}

function invertSelection_2818584716(self_2818584717) {
    selectionHEX3D_2818572809(self_2818584717, {Field0: nimCopy(null, selection_2818572803(self_2818584717).Field1, NTI2449473545), Field1: nimCopy(null, selection_2818572803(self_2818584717).Field0, NTI2449473545)});

  
}

function invertSelectionJsWrapper_2818584712(self_2818584745) {
    invertSelection_2818584716(self_2818584745);

  
}
editor_text_prototype.invertSelection = function() { return (invertSelectionJsWrapper_2818584712(this));};

function any_2449473969(s_2449473971, pred_2449473973) {
  var result_2449473974 = false;

  BeforeRet: {
    Label1: {
      var i_2449473987 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585218 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585218 < (s_2449473971).length)) break Label3;
            i_2449473987 = s_2449473971[chckIndx(i_2818585218, 0, (s_2449473971).length - 1)];
            if (pred_2449473973(i_2449473987)) {
            result_2449473974 = true;
            break BeforeRet;
            }
            
            i_2818585218 = addInt(i_2818585218, 1);
          }
      };
    };
    result_2449473974 = false;
  };

  return result_2449473974;

}

function cmp_33557727(x_33557729, y_33557730) {
  var result_33557731 = 0;

  BeforeRet: {
    if ((x_33557729 == y_33557730)) {
    result_33557731 = 0;
    break BeforeRet;
    }
    
    if ((x_33557729 < y_33557730)) {
    result_33557731 = -1;
    break BeforeRet;
    }
    
    result_33557731 = 1;
    break BeforeRet;
  };

  return result_33557731;

}

function HEX3CHEX3D_2449473879(x_2449473881, y_2449473882) {
  var result_2449473883 = false;

  BeforeRet: {
    var c_2449473893 = cmp_33557727(x_2449473881["Field0"], y_2449473882["Field0"]);
    if ((c_2449473893 < 0)) {
    result_2449473883 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473893)) {
    result_2449473883 = false;
    break BeforeRet;
    }
    
    var c_2449473898 = cmp_33557727(x_2449473881["Field1"], y_2449473882["Field1"]);
    if ((c_2449473898 < 0)) {
    result_2449473883 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473898)) {
    result_2449473883 = false;
    break BeforeRet;
    }
    
    result_2449473883 = true;
    break BeforeRet;
  };

  return result_2449473883;

}

function contains_2449473927(selection_2449473928, other_2449473929) {
  var result_2449473930 = false;

    result_2449473930 = (HEX3CHEX3D_2449473879(selection_2449473928.Field0, other_2449473929.Field0) && HEX3CHEX3D_2449473879(other_2449473929.Field1, selection_2449473928.Field1));

  return result_2449473930;

}

function contains_2449474006(self_2449474007, other_2449474008) {
    other_2449474008 = nimCopy(null, other_2449474008, NTI2449473547);
    
function HEX3Aanonymous_2449474010(s_2449474013) {
      var result_2449474016 = false;

        result_2449474016 = contains_2449473927(s_2449474013, other_2449474008);

      return result_2449474016;

    }

  var result_2449474009 = false;

    result_2449474009 = any_2449473969(self_2449474007, HEX3Aanonymous_2449474010);

  return result_2449474009;

}

function deduplicate_2818572755(s_2818572757, isSorted_2818572758) {
  var result_2818572759 = [];

    result_2818572759 = nimCopy(null, [], NTI2818572640);
    if ((0 < (s_2818572757).length)) {
    if (isSorted_2818572758) {
    var prev_2818572767 = nimCopy(null, s_2818572757[chckIndx(0, 0, (s_2818572757).length - 1)], NTI2449473547);
    var Temporary1 = nimCopy(null, prev_2818572767, NTI2449473547);
    result_2818572759.push(Temporary1);;
    Label2: {
      var i_2818572779 = 0;
      var colontmp__2818585210 = 0;
      colontmp__2818585210 = (s_2818572757).length - 1;
      var res_2818585211 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_2818585211 <= colontmp__2818585210)) break Label4;
            i_2818572779 = res_2818585211;
            if (!(HEX3DHEX3D_2449473599(s_2818572757[chckIndx(i_2818572779, 0, (s_2818572757).length - 1)], prev_2818572767))) {
            prev_2818572767 = nimCopy(prev_2818572767, s_2818572757[chckIndx(i_2818572779, 0, (s_2818572757).length - 1)], NTI2449473547);
            var Temporary5 = nimCopy(null, prev_2818572767, NTI2449473547);
            result_2818572759.push(Temporary5);;
            }
            
            res_2818585211 = addInt(res_2818585211, 1);
          }
      };
    };
    }
    else {
      Label6: {
        var itm_2818572791 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
        var i_2818585215 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_2818585215 < (s_2818572757).length)) break Label8;
              itm_2818572791 = s_2818572757[chckIndx(i_2818585215, 0, (s_2818572757).length - 1)];
              if (!(contains_2449474006(result_2818572759, itm_2818572791))) {
              var Temporary9 = nimCopy(null, itm_2818572791, NTI2449473547);
              result_2818572759.push(Temporary9);;
              }
              
              i_2818585215 = addInt(i_2818585215, 1);
            }
        };
      };
    }
    
    }
    

  return result_2818572759;

}

function map_2818572733(s_2818572736, op_2818572738) {
  var result_2818572739 = [];

    result_2818572739 = new Array(chckRange((s_2818572736).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818572736).length, 0, 2147483647) ; ++i) { result_2818572739[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818572754 = 0;
      var colontmp__2818585221 = 0;
      colontmp__2818585221 = (s_2818572736).length;
      var i_2818585222 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585222 < colontmp__2818585221)) break Label3;
            i_2818572754 = i_2818585222;
            result_2818572739[chckIndx(i_2818572754, 0, (result_2818572739).length - 1)] = nimCopy(result_2818572739[chckIndx(i_2818572754, 0, (result_2818572739).length - 1)], op_2818572738(s_2818572736[chckIndx(i_2818572754, 0, (s_2818572736).length - 1)]), NTI2449473547);
            i_2818585222 = addInt(i_2818585222, 1);
          }
      };
    };

  return result_2818572739;

}

function clampAndMergeSelections_2818572718(self_2818572719, selections_2818572720) {
    
function HEX3Aanonymous_2818572722(s_2818572729) {
      var result_2818572732 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818572732 = nimCopy(result_2818572732, clampSelection_2818572710(self_2818572719, s_2818572729), NTI2449473547);

      return result_2818572732;

    }

  var result_2818572721 = [];

    result_2818572721 = nimCopy(null, deduplicate_2818572755(map_2818572733(selections_2818572720, HEX3Aanonymous_2818572722), false), NTI2818572629);

  return result_2818572721;

}

function HEX40_2818579361(a_2818579363) {
  var result_2818579364 = [];

    result_2818579364 = new Array(chckRange((a_2818579363).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_2818579363).length, 0, 2147483647) ; ++i) { result_2818579364[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818579379 = 0;
      var colontmp__2818585225 = 0;
      colontmp__2818585225 = subInt((a_2818579363).length, 1);
      var res_2818585226 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585226 <= colontmp__2818585225)) break Label3;
            i_2818579379 = res_2818585226;
            result_2818579364[chckIndx(i_2818579379, 0, (result_2818579364).length - 1)] = nimCopy(result_2818579364[chckIndx(i_2818579379, 0, (result_2818579364).length - 1)], a_2818579363[chckIndx(i_2818579379, 0, (a_2818579363).length - 1)], NTI2449473547);
            res_2818585226 = addInt(res_2818585226, 1);
          }
      };
    };

  return result_2818579364;

}

function byteOffset_2818579341(self_2818579342, cursor_2818579343) {
  var result_2818579344 = 0;

    result_2818579344 = cursor_2818579343.Field1;
    Label1: {
      var i_2818579349 = 0;
      var i_2818585229 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585229 < cursor_2818579343.Field0)) break Label3;
            i_2818579349 = i_2818585229;
            result_2818579344 = addInt(result_2818579344, addInt((self_2818579342.lines[chckIndx(i_2818579349, 0, (self_2818579342.lines).length - 1)]).length, 1));
            i_2818585229 = addInt(i_2818585229, 1);
          }
      };
    };

  return result_2818579344;

}

function nsuFindChar(s_855639698, sub_855639699, start_855639700, last_855639701) {
    var Temporary1;

  var result_855639702 = 0;

  BeforeRet: {
    result_855639702 = -1;
    if ((last_855639701 < 0)) {
    Temporary1 = (s_855639698).length - 1;
    }
    else {
    Temporary1 = last_855639701;
    }
    
    var last_855639703 = Temporary1;
    Label2: {
      var iHEX60gensym176_855639717 = 0;
      var colontmp__2818584210 = 0;
      colontmp__2818584210 = start_855639700;
      var res_2818584211 = colontmp__2818584210;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584211 <= last_855639703)) break Label4;
            iHEX60gensym176_855639717 = res_2818584211;
            if ((s_855639698[chckIndx(iHEX60gensym176_855639717, 0, (s_855639698).length - 1)] == sub_855639699)) {
            result_855639702 = iHEX60gensym176_855639717;
            break BeforeRet;
            }
            
            res_2818584211 = addInt(res_2818584211, 1);
          }
      };
    };
  };

  return result_855639702;

}

function substr_33557833(s_33557834, first_33557835) {
  var result_33557836 = [];

    result_33557836 = nimCopy(null, substr_33557821(s_33557834, first_33557835, (s_33557834).length - 1), NTI33554449);

  return result_33557836;

}

function fill_855639634(a_855639636, value_855639637) {
    var xHEX60gensym172_855639643 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_855639643 <= (a_855639636).length - 1)) break Label2;
          a_855639636[chckIndx(xHEX60gensym172_855639643, 0, (a_855639636).length - 1)] = value_855639637;
          xHEX60gensym172_855639643 = addInt(xHEX60gensym172_855639643, 1);
        }
    };

  
}

function nsuInitSkipTable(a_855639631, sub_855639632) {
    var m_855639633 = (sub_855639632).length;
    fill_855639634(a_855639631, m_855639633);
    Label1: {
      var i_855639653 = 0;
      var colontmp__2818585232 = 0;
      colontmp__2818585232 = subInt(m_855639633, 1);
      var i_2818585233 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585233 < colontmp__2818585232)) break Label3;
            i_855639653 = i_2818585233;
            a_855639631[chckIndx(sub_855639632[chckIndx(i_855639653, 0, (sub_855639632).length - 1)], 0, (a_855639631).length - 1)] = subInt(subInt(m_855639633, 1), i_855639653);
            i_2818585233 = addInt(i_2818585233, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_855639673) {
  var result_855639674 = [new Int32Array(256)];

    nsuInitSkipTable(result_855639674[0], sub_855639673);

  return result_855639674[0];

}

function nsuFindStrA(a_855639676, s_855639677, sub_855639678, start_855639679, last_855639680) {
    var Temporary1;

  var result_855639681 = 0;

  BeforeRet: {
    if ((last_855639680 < 0)) {
    Temporary1 = (s_855639677).length - 1;
    }
    else {
    Temporary1 = last_855639680;
    }
    
    var last_855639682 = Temporary1;
    var subLast_855639683 = subInt((sub_855639678).length, 1);
    if ((subLast_855639683 == -1)) {
    result_855639681 = start_855639679;
    break BeforeRet;
    }
    
    result_855639681 = -1;
    var skip_855639684 = start_855639679;
    Label2: {
        Label3: while (true) {
        if (!(subLast_855639683 <= subInt(last_855639682, skip_855639684))) break Label3;
          var i_855639685 = subLast_855639683;
          Label4: {
              Label5: while (true) {
              if (!(s_855639677[chckIndx(addInt(skip_855639684, i_855639685), 0, (s_855639677).length - 1)] == sub_855639678[chckIndx(i_855639685, 0, (sub_855639678).length - 1)])) break Label5;
                if ((i_855639685 == 0)) {
                result_855639681 = skip_855639684;
                break BeforeRet;
                }
                
                i_855639685 = subInt(i_855639685, 1);
              }
          };
          skip_855639684 = addInt(skip_855639684, a_855639676[chckIndx(s_855639677[chckIndx(addInt(skip_855639684, subLast_855639683), 0, (s_855639677).length - 1)], 0, (a_855639676).length - 1)]);
        }
    };
  };

  return result_855639681;

}

function nsuReplaceStr(s_855639886, sub_855639887, by_855639888) {
  var result_855639889 = [];

    result_855639889 = nimCopy(null, [], NTI33554449);
    var subLen_855639890 = (sub_855639887).length;
    if ((subLen_855639890 == 0)) {
    result_855639889 = nimCopy(null, s_855639886, NTI33554449);
    }
    else {
    if ((subLen_855639890 == 1)) {
    var c_855639891 = sub_855639887[chckIndx(0, 0, (sub_855639887).length - 1)];
    var last_855639892 = (s_855639886).length - 1;
    var i_855639893 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_855639894 = nsuFindChar(s_855639886, c_855639891, chckRange(i_855639893, 0, 2147483647), last_855639892);
          if ((j_855639894 < 0)) {
          break Label1;
          }
          
          result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639893, subInt(j_855639894, 1)));;
          result_855639889.push.apply(result_855639889, by_855639888);;
          i_855639893 = addInt(j_855639894, subLen_855639890);
        }
    };
    result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639893));;
    }
    else {
      var a_855639895 = nsuInitNewSkipTable(sub_855639887);
      var last_855639896 = (s_855639886).length - 1;
      var i_855639897 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_855639898 = nsuFindStrA(a_855639895, s_855639886, sub_855639887, chckRange(i_855639897, 0, 2147483647), last_855639896);
            if ((j_855639898 < 0)) {
            break Label3;
            }
            
            result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639897, subInt(j_855639898, 1)));;
            result_855639889.push.apply(result_855639889, by_855639888);;
            i_855639897 = addInt(j_855639898, subLen_855639890);
          }
      };
      result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639897));;
    }
    }

  return result_855639889;

}

function insert_33557745(x_33557746, x_33557746_Idx, item_33557747, i_33557748) {
    var Temporary1;

    var xl_33557749 = (x_33557746[x_33557746_Idx]).length;
    if (x_33557746[x_33557746_Idx].length < (Temporary1 = chckRange(addInt(xl_33557749, (item_33557747).length), 0, 2147483647), Temporary1)) { for (var i = x_33557746[x_33557746_Idx].length; i < Temporary1; ++i) x_33557746[x_33557746_Idx].push(0); }
         else {x_33557746[x_33557746_Idx].length = Temporary1; };
    var j_33557750 = subInt(xl_33557749, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33557748 <= j_33557750)) break Label3;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, (item_33557747).length), 0, (x_33557746[x_33557746_Idx]).length - 1)] = x_33557746[x_33557746_Idx][chckIndx(j_33557750, 0, (x_33557746[x_33557746_Idx]).length - 1)];
          j_33557750 = subInt(j_33557750, 1);
        }
    };
    j_33557750 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33557750 < (item_33557747).length)) break Label5;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, i_33557748), 0, (x_33557746[x_33557746_Idx]).length - 1)] = item_33557747[chckIndx(j_33557750, 0, (item_33557747).length - 1)];
          j_33557750 = addInt(j_33557750, 1);
        }
    };

  
}

function insert_2818579916(x_2818579918, x_2818579918_Idx, item_2818579919, i_2818579920) {
    var it_2818579940 = [];
    x_2818579918[x_2818579918_Idx] = x_2818579918[x_2818579918_Idx] || []; x_2818579918[x_2818579918_Idx].splice(i_2818579920, 0, it_2818579940);
    x_2818579918[x_2818579918_Idx][chckIndx(i_2818579920, 0, (x_2818579918[x_2818579918_Idx]).length - 1)] = nimCopy(null, item_2818579919, NTI33554449);

  
}

function HEX24_855639412(x_855639415) {
  var result_855639416 = [];

    result_855639416 = nimCopy(null, HEX24_369098760(x_855639415.a), NTI33554449);
    result_855639416.push.apply(result_855639416, [32,46,46,32]);;
    result_855639416.push.apply(result_855639416, HEX24_369098760(x_855639415.b));;

  return result_855639416;

}

function addQuoted_855639404(s_855639406, s_855639406_Idx, x_855639407) {
    s_855639406[s_855639406_Idx].push.apply(s_855639406[s_855639406_Idx], HEX24_855639412(x_855639407));;

  
}

function addQuoted_855639425(s_855639427, s_855639427_Idx, x_855639428) {
    addInt_301990108(s_855639427, s_855639427_Idx, x_855639428);

  
}

function HEX24_855639371(x_855639373) {
  var result_855639374 = [[]];

    result_855639374[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym136_855639385 = 0;
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [115,108,105,99,101]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639404(result_855639374, 0, x_855639373["Field0"]);
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [108,101,110]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639425(result_855639374, 0, x_855639373["Field1"]);
    result_855639374[0].push.apply(result_855639374[0], [41]);;

  return result_855639374[0];

}

function delete_855639365(s_855639366, s_855639366_Idx, slice_855639368) {
    if (!((((slice_855639368.a < (s_855639366[s_855639366_Idx]).length) && (0 <= slice_855639368.a)) && (slice_855639368.b < (s_855639366[s_855639366_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_855639368, NTI805306392), Field1: (s_855639366[s_855639366_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_855639368.a <= slice_855639368.b)) {
    var i_855639431 = slice_855639368.a;
    var j_855639432 = addInt(slice_855639368.b, 1);
    var newLen_855639433 = addInt(subInt((s_855639366[s_855639366_Idx]).length, j_855639432), i_855639431);
    Label1: {
        Label2: while (true) {
        if (!(i_855639431 < newLen_855639433)) break Label2;
          s_855639366[s_855639366_Idx][chckIndx(i_855639431, 0, (s_855639366[s_855639366_Idx]).length - 1)] = s_855639366[s_855639366_Idx][chckIndx(j_855639432, 0, (s_855639366[s_855639366_Idx]).length - 1)];
          i_855639431 = addInt(i_855639431, 1);
          j_855639432 = addInt(j_855639432, 1);
        }
    };
    if (s_855639366[s_855639366_Idx].length < chckRange(newLen_855639433, 0, 2147483647)) { for (var i = s_855639366[s_855639366_Idx].length; i < chckRange(newLen_855639433, 0, 2147483647); ++i) s_855639366[s_855639366_Idx].push(0); }
         else {s_855639366[s_855639366_Idx].length = chckRange(newLen_855639433, 0, 2147483647); };
    }
    

  
}

function HEX2EHEX2E_805306418(a_805306421, b_805306422) {
  var result_805306423 = ({a: 0, b: 0});

    result_805306423 = nimCopy(result_805306423, {a: a_805306421, b: b_805306422}, NTI805306392);

  return result_805306423;

}

function toSelection_2449474029(cursor_2449474030) {
  var result_2449474031 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818585242 = nimCopy(null, cursor_2449474030, NTI2449473545);
    var colontmp__2818585243 = nimCopy(null, cursor_2449474030, NTI2449473545);
    result_2449474031 = nimCopy(result_2449474031, {Field0: nimCopy(null, colontmp__2818585242, NTI2449473545), Field1: nimCopy(null, colontmp__2818585243, NTI2449473545)}, NTI2449473547);

  return result_2449474031;

}

function add_2449474053(cursor_2449474054, selection_2449474055) {
  var result_2449474056 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473879(cursor_2449474054, selection_2449474055.Field0)) {
    result_2449474056 = nimCopy(result_2449474056, cursor_2449474054, NTI2449473545);
    break BeforeRet;
    }
    
    if ((selection_2449474055.Field0.Field0 == selection_2449474055.Field1.Field0)) {
    if ((cursor_2449474054.Field0 == selection_2449474055.Field0.Field0)) {
    var colontmp__2818585246 = cursor_2449474054.Field0;
    var colontmp__2818585247 = addInt(cursor_2449474054.Field1, subInt(selection_2449474055.Field1.Field1, selection_2449474055.Field0.Field1));
    result_2449474056 = nimCopy(result_2449474056, {Field0: colontmp__2818585246, Field1: colontmp__2818585247}, NTI2449473545);
    break BeforeRet;
    }
    else {
      result_2449474056 = nimCopy(result_2449474056, cursor_2449474054, NTI2449473545);
      break BeforeRet;
    }
    
    }
    else {
    if ((cursor_2449474054.Field0 == selection_2449474055.Field0.Field0)) {
    var colontmp__2818585248 = selection_2449474055.Field1.Field0;
    var colontmp__2818585249 = addInt(selection_2449474055.Field1.Field1, subInt(cursor_2449474054.Field1, selection_2449474055.Field0.Field1));
    result_2449474056 = nimCopy(result_2449474056, {Field0: colontmp__2818585248, Field1: colontmp__2818585249}, NTI2449473545);
    break BeforeRet;
    }
    else {
      var colontmp__2818585250 = addInt(cursor_2449474054.Field0, subInt(selection_2449474055.Field1.Field0, selection_2449474055.Field0.Field0));
      var colontmp__2818585251 = cursor_2449474054.Field1;
      result_2449474056 = nimCopy(result_2449474056, {Field0: colontmp__2818585250, Field1: colontmp__2818585251}, NTI2449473545);
      break BeforeRet;
    }
    }
  };

  return result_2449474056;

}

function add_2449474061(self_2449474062, other_2449474063) {
  var result_2449474064 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818585244 = add_2449474053(self_2449474062.Field0, other_2449474063);
    var colontmp__2818585245 = add_2449474053(self_2449474062.Field1, other_2449474063);
    result_2449474064 = nimCopy(result_2449474064, {Field0: nimCopy(null, colontmp__2818585244, NTI2449473545), Field1: nimCopy(null, colontmp__2818585245, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
  };

  return result_2449474064;

}

function nsuJoinSep(a_855639591, sep_855639592) {
  var result_855639593 = [];

    if ((0 < (a_855639591).length)) {
    var L_855639600 = mulInt((sep_855639592).length, subInt((a_855639591).length, 1));
    Label1: {
      var i_855639608 = 0;
      var colontmp__2818585253 = 0;
      colontmp__2818585253 = (a_855639591).length - 1;
      var res_2818585254 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585254 <= colontmp__2818585253)) break Label3;
            i_855639608 = res_2818585254;
            L_855639600 = addInt(L_855639600, (a_855639591[chckIndx(i_855639608, 0, (a_855639591).length - 1)]).length);
            res_2818585254 = addInt(res_2818585254, 1);
          }
      };
    };
    result_855639593 = nimCopy(null, mnewString(0), NTI33554449);
    result_855639593.push.apply(result_855639593, a_855639591[chckIndx(0, 0, (a_855639591).length - 1)]);;
    Label4: {
      var i_855639621 = 0;
      var colontmp__2818585257 = 0;
      colontmp__2818585257 = (a_855639591).length - 1;
      var res_2818585258 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_2818585258 <= colontmp__2818585257)) break Label6;
            i_855639621 = res_2818585258;
            result_855639593.push.apply(result_855639593, sep_855639592);;
            result_855639593.push.apply(result_855639593, a_855639591[chckIndx(i_855639621, 0, (a_855639591).length - 1)]);;
            res_2818585258 = addInt(res_2818585258, 1);
          }
      };
    };
    }
    else {
      result_855639593 = nimCopy(null, [], NTI33554449);
    }
    

  return result_855639593;

}

function isSome_2885681248(self_2885681250) {
  var result_2885681251 = false;

    result_2885681251 = !((self_2885681250.val == null));

  return result_2885681251;

}

function get_2885681239(self_2885681241, otherwise_2885681242) {
    var Temporary1;

  var result_2885681243 = null;

    if (isSome_2885681248(self_2885681241)) {
    Temporary1 = self_2885681241.val;
    }
    else {
    Temporary1 = otherwise_2885681242;
    }
    
    result_2885681243 = Temporary1;

  return result_2885681243;

}

function parseString_2885681211(self_2885681212, text_2885681213, oldTree_2885681225) {
  var result_2885681226 = null;

  BeforeRet: {
    result_2885681226 = self_2885681212.parse(toJSStr(text_2885681213), get_2885681239(oldTree_2885681225, null));
    break BeforeRet;
  };

  return result_2885681226;

}

function some_2818579535(val_2818579537) {
  var result_2818579538 = ({val: null});

    if (!(!((val_2818579537 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818579538.val = val_2818579537;

  return result_2818579538;

}

function invoke_2818580007(event_2818580009, arg_2818580010) {
    Label1: {
      var h_2818580033 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585262 = 0;
      var L_2818585263 = (event_2818580009.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585262 < L_2818585263)) break Label3;
            h_2818580033 = event_2818580009.handlers[chckIndx(i_2818585262, 0, (event_2818580009.handlers).length - 1)];
            h_2818580033.Field1(arg_2818580010);
            i_2818585262 = addInt(i_2818585262, 1);
            if (!(((event_2818580009.handlers).length == L_2818585263))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_2818573290(event_2818573292, arg_2818573293) {
    Label1: {
      var h_2818573316 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585267 = 0;
      var L_2818585268 = (event_2818573292.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585267 < L_2818585268)) break Label3;
            h_2818573316 = event_2818573292.handlers[chckIndx(i_2818585267, 0, (event_2818573292.handlers).length - 1)];
            h_2818573316.Field1(arg_2818573293);
            i_2818585267 = addInt(i_2818585267, 1);
            if (!(((event_2818573292.handlers).length == L_2818585268))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clear_2818573393(t_2818573396) {
    Label1: {
      var i_2818573465 = 0;
      var colontmp__2818585271 = 0;
      colontmp__2818585271 = (t_2818573396.data).length;
      var i_2818585272 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585272 < colontmp__2818585271)) break Label3;
            i_2818573465 = i_2818585272;
            t_2818573396.data[chckIndx(i_2818573465, 0, (t_2818573396.data).length - 1)].Field0 = 0;
            t_2818573396.data[chckIndx(i_2818573465, 0, (t_2818573396.data).length - 1)].Field1 = 0;
            t_2818573396.data[chckIndx(i_2818573465, 0, (t_2818573396.data).length - 1)].Field2 = null;
            i_2818585272 = addInt(i_2818585272, 1);
          }
      };
    };
    t_2818573396.counter = 0;

  
}

function notifyTextChanged_2818573266(self_2818573267) {
    invoke_2818573290(self_2818573267.textChanged, self_2818573267);
    clear_2818573393(self_2818573267.styledTextCache);

  
}

function insert_2818579851(self_2818579852, selections_2818579853, oldSelection_2818579854, text_2818579855, notify_2818579856, record_2818579857, autoIndent_2818579858) {
                      var Temporary10;
            var Temporary15;
      var Temporary16;
        var Temporary17;

  var result_2818579859 = [];

    var newEmptyLines_2818579860 = [];
    result_2818579859 = nimCopy(null, clampAndMergeSelections_2818572718(self_2818579852, selections_2818579853), NTI2449473555);
    var undoOp_2818579868 = {kind: 2, children: [], oldSelection: HEX40_2818579361(oldSelection_2818579854), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818579874 = 0;
      var selection_2818579875 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585206 = 0;
      var L_2818585207 = (result_2818579859).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585206 < L_2818585207)) break Label3;
            i_2818579874 = i_2818585206;
            selection_2818579875 = nimCopy(selection_2818579875, result_2818579859[chckIndx(i_2818585206, 0, (result_2818579859).length - 1)], NTI2449473547);
            var oldCursor_2818579876 = nimCopy(null, selection_2818579875.Field1, NTI2449473545);
            var cursor_2818579877 = nimCopy(null, selection_2818579875.Field1, NTI2449473545);
            var startByte_2818579878 = byteOffset_2818579341(self_2818579852, cursor_2818579877);
            var lineCounter_2818579879 = 0;
            if (self_2818579852.singleLine) {
            var text_2818579880 = nsuReplaceStr(text_2818579855, [10], [32]);
            if (((self_2818579852.lines).length == 0)) {
            var Temporary4 = nimCopy(null, text_2818579880, NTI33554449);
            self_2818579852.lines.push(Temporary4);;
            }
            else {
            insert_33557745(self_2818579852.lines, chckIndx(0, 0, (self_2818579852.lines).length - 1), text_2818579880, chckRange(cursor_2818579877.Field1, 0, 2147483647));
            }
            
            cursor_2818579877.Field1 = addInt(cursor_2818579877.Field1, (text_2818579880).length);
            }
            else {
              Label5: {
                var line_2818579892 = [];
                var first_2818585195 = 0;
                var last_2818585196 = 0;
                var eolpos_2818585197 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!true) break Label7;
                      Label8: {
                          Label9: while (true) {
                          if (!((last_2818585196 < (text_2818579855).length) && !((ConstSet23[text_2818579855[chckIndx(last_2818585196, 0, (text_2818579855).length - 1)]] != undefined)))) break Label9;
                            last_2818585196 = addInt(last_2818585196, 1);
                          }
                      };
                      eolpos_2818585197 = last_2818585196;
                      if ((last_2818585196 < (text_2818579855).length)) {
                      if ((text_2818579855[chckIndx(last_2818585196, 0, (text_2818579855).length - 1)] == 10)) {
                      last_2818585196 = addInt(last_2818585196, 1);
                      }
                      else {
                      if ((text_2818579855[chckIndx(last_2818585196, 0, (text_2818579855).length - 1)] == 13)) {
                      last_2818585196 = addInt(last_2818585196, 1);
                      if (((last_2818585196 < (text_2818579855).length) && (text_2818579855[chckIndx(last_2818585196, 0, (text_2818579855).length - 1)] == 10))) {
                      last_2818585196 = addInt(last_2818585196, 1);
                      }
                      
                      }
                      }
                      }
                      
                      if (false) {
                      Temporary10 = subInt(last_2818585196, 1);
                      }
                      else {
                      Temporary10 = subInt(eolpos_2818585197, 1);
                      }
                      
                      line_2818579892 = substr_33557821(text_2818579855, first_2818585195, Temporary10);
                      try {
                      if ((0 < lineCounter_2818579879)) {
                      insert_2818579916(self_2818579852, "lines", HEX5BHEX5D_855639319(self_2818579852.lines[chckIndx(cursor_2818579877.Field0, 0, (self_2818579852.lines).length - 1)], HEX2EHEX2E_1040187488(cursor_2818579877.Field1, 1)), chckRange(addInt(cursor_2818579877.Field0, 1), 0, 2147483647));
                      newEmptyLines_2818579860.push(addInt(cursor_2818579877.Field0, 1));;
                      if ((cursor_2818579877.Field1 < lineLength_2818572671(self_2818579852, cursor_2818579877.Field0))) {
                      delete_855639365(self_2818579852.lines, chckIndx(cursor_2818579877.Field0, 0, (self_2818579852.lines).length - 1), HEX2EHEX2E_805306418(cursor_2818579877.Field1, subInt(lineLength_2818572671(self_2818579852, cursor_2818579877.Field0), 1)));
                      }
                      
                      var colontmp__2818585191 = addInt(cursor_2818579877.Field0, 1);
                      var colontmp__2818585192 = 0;
                      cursor_2818579877 = nimCopy(cursor_2818579877, {Field0: colontmp__2818585191, Field1: colontmp__2818585192}, NTI2449473545);
                      }
                      
                      if ((0 < (line_2818579892).length)) {
                      insert_33557745(self_2818579852.lines, chckIndx(cursor_2818579877.Field0, 0, (self_2818579852.lines).length - 1), line_2818579892, chckRange(cursor_2818579877.Field1, 0, 2147483647));
                      cursor_2818579877.Field1 = addInt(cursor_2818579877.Field1, (line_2818579892).length);
                      }
                      
                      if ((eolpos_2818585197 == last_2818585196)) {
                      break Label6;
                      }
                      
                      first_2818585195 = last_2818585196;
                      } finally {
                      lineCounter_2818579879 = addInt(lineCounter_2818579879, 1);
                      }
                    }
                };
              };
            }
            
            result_2818579859[chckIndx(i_2818579874, 0, (result_2818579859).length - 1)] = nimCopy(result_2818579859[chckIndx(i_2818579874, 0, (result_2818579859).length - 1)], toSelection_2449474029(cursor_2818579877), NTI2449473547);
            Label12: {
              var k_2818579967 = 0;
              var colontmp__2818585201 = 0;
              var colontmp__2818585202 = 0;
              colontmp__2818585201 = addInt(i_2818579874, 1);
              colontmp__2818585202 = (result_2818579859).length - 1;
              var res_2818585203 = colontmp__2818585201;
              Label13: {
                  Label14: while (true) {
                  if (!(res_2818585203 <= colontmp__2818585202)) break Label14;
                    k_2818579967 = res_2818585203;
                    result_2818579859[chckIndx(k_2818579967, 0, (result_2818579859).length - 1)] = nimCopy(result_2818579859[chckIndx(k_2818579967, 0, (result_2818579859).length - 1)], add_2449474061(result_2818579859[chckIndx(k_2818579967, 0, (result_2818579859).length - 1)], {Field0: nimCopy(null, oldCursor_2818579876, NTI2449473545), Field1: nimCopy(null, cursor_2818579877, NTI2449473545)}), NTI2449473547);
                    res_2818585203 = addInt(res_2818585203, 1);
                  }
              };
            };
            if (!((self_2818579852.tsParser == null))) {
            var edit_2818579971 = {startIndex: startByte_2818579878, oldEndIndex: startByte_2818579878, newEndIndex: addInt(startByte_2818579878, (text_2818579855).length), startPosition: {row: oldCursor_2818579876.Field0, column: oldCursor_2818579876.Field1, m_type: NTI2885681166}, oldEndPosition: {row: oldCursor_2818579876.Field0, column: oldCursor_2818579876.Field1, m_type: NTI2885681166}, newEndPosition: {row: cursor_2818579877.Field0, column: cursor_2818579877.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
            var _ = self_2818579852.currentTree.edit(edit_2818579971);
            var strValue_2818579972 = nsuJoinSep(self_2818579852.lines, [10]);
            self_2818579852.currentTree = parseString_2885681211(self_2818579852.tsParser, strValue_2818579972, some_2818579535(self_2818579852.currentTree));
            }
            
            self_2818579852.version = addInt(self_2818579852.version, 1);
            if (record_2818579857) {
            var Temporary15 = undoOp_2818579868;
            if (ConstSet24[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI2818572291)); }
            Temporary15.children.push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, oldCursor_2818579876, NTI2449473545), Field1: nimCopy(null, cursor_2818579877, NTI2449473545)}, NTI2449473547), oldSelection: [], cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
            }
            
            if (notify_2818579856) {
            invoke_2818580007(self_2818579852.textInserted, {Field0: self_2818579852, Field1: nimCopy(null, oldCursor_2818579876, NTI2449473545), Field2: nimCopy(null, text_2818579855, NTI33554449)});
            }
            
            i_2818585206 = addInt(i_2818585206, 1);
            if (!(((result_2818579859).length == L_2818585207))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818579856) {
    notifyTextChanged_2818573266(self_2818579852);
    }
    
      if (!record_2818579857) Temporary16 = false; else {        var Temporary17 = undoOp_2818579868;
        if (ConstSet25[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2818572291)); }
        Temporary16 = (0 < (Temporary17.children).length);      }    if (Temporary16) {
    self_2818579852.undoOps.push(undoOp_2818579868);;
    self_2818579852.redoOps = nimCopy(null, [], NTI2818576104);
    }
    

  return result_2818579859;

}

function selections_2818572800(self_2818572801) {
  var result_2818572802 = [];

    result_2818572802 = nimCopy(null, self_2818572801.selectionsInternal, NTI2449473555);

  return result_2818572802;

}

function insert_2818584779(self_2818584780, selections_2818584781, text_2818584782, notify_2818584783, record_2818584784, autoIndent_2818584785) {
  var result_2818584786 = [];

  BeforeRet: {
    result_2818584786 = nimCopy(null, insert_2818579851(self_2818584780.document, selections_2818584781, selections_2818572800(self_2818584780), text_2818584782, notify_2818584783, record_2818584784, autoIndent_2818584785), NTI2818576430);
    break BeforeRet;
  };

  return result_2818584786;

}

function insertJsWrapper_2818584775(self_2818584820, selections_2818584821, text_2818584822, notify_2818584823, record_2818584824, autoIndent_2818584825) {
  var result_2818584826 = [];

    result_2818584826 = nimCopy(null, insert_2818584779(self_2818584820, selections_2818584821, text_2818584822, notify_2818584823, record_2818584824, autoIndent_2818584825), NTI2818579318);

  return result_2818584826;

}
editor_text_prototype.insert = function(selections_ /* : seq[Selection] */, text_ /* : string */, notify_ /* : bool */, record_ /* : bool */, autoIndent_ /* : bool */) { return (insertJsWrapper_2818584775(this, selections_, text_ == undefined ? undefined : cstrToNimstr(text_), notify_, record_, autoIndent_));};

function isEmpty_2449473908(selection_2449473909) {
  var result_2449473910 = false;

    result_2449473910 = HEX3DHEX3D_2449473609(selection_2449473909.Field0, selection_2449473909.Field1);

  return result_2449473910;

}

function HEX3E_2449473867(a_2449473868, b_2449473869) {
  var result_2449473870 = false;

  BeforeRet: {
    if ((b_2449473869.Field0 < a_2449473868.Field0)) {
    result_2449473870 = true;
    break BeforeRet;
    }
    else {
    if (((a_2449473868.Field0 == b_2449473869.Field0) && (b_2449473869.Field1 < a_2449473868.Field1))) {
    result_2449473870 = true;
    break BeforeRet;
    }
    else {
      result_2449473870 = false;
      break BeforeRet;
    }
    }
  };

  return result_2449473870;

}

function isBackwards_2449473899(selection_2449473900) {
  var result_2449473901 = false;

  BeforeRet: {
    result_2449473901 = HEX3E_2449473867(selection_2449473900.Field0, selection_2449473900.Field1);
    break BeforeRet;
  };

  return result_2449473901;

}

function normalized_2449473902(selection_2449473903) {
  var result_2449473904 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if (isBackwards_2449473899(selection_2449473903)) {
    var colontmp__2818585365 = nimCopy(null, selection_2449473903.Field1, NTI2449473545);
    var colontmp__2818585366 = nimCopy(null, selection_2449473903.Field0, NTI2449473545);
    result_2449473904 = nimCopy(result_2449473904, {Field0: nimCopy(null, colontmp__2818585365, NTI2449473545), Field1: nimCopy(null, colontmp__2818585366, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
    }
    else {
      result_2449473904 = nimCopy(result_2449473904, selection_2449473903, NTI2449473547);
      break BeforeRet;
    }
    
  };

  return result_2449473904;

}

function HEX5BHEX5D_855639291(s_855639294, x_855639295) {
  var result_855639296 = [];

    var a_855639298 = x_855639295.a;
    var L_855639300 = addInt(subInt(x_855639295.b, a_855639298), 1);
    result_855639296 = nimCopy(null, mnewString(chckRange(L_855639300, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639305 = 0;
      var i_2818585373 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585373 < L_855639300)) break Label3;
            i_855639305 = i_2818585373;
            result_855639296[chckIndx(i_855639305, 0, (result_855639296).length - 1)] = s_855639294[chckIndx(addInt(i_855639305, a_855639298), 0, (s_855639294).length - 1)];
            i_2818585373 = addInt(i_2818585373, 1);
          }
      };
    };

  return result_855639296;

}

function contentString_2818574089(self_2818574090, selection_2818574091) {
  var result_2818574092 = [];

  BeforeRet: {
    var colontmp__2818585371 = normalized_2449473902(selection_2818574091);
    var first_2818574093 = nimCopy(null, colontmp__2818585371["Field0"], NTI2449473545);
    var last_2818574094 = nimCopy(null, colontmp__2818585371["Field1"], NTI2449473545);
    if ((first_2818574093.Field0 == last_2818574094.Field0)) {
    result_2818574092 = nimCopy(null, HEX5BHEX5D_855639291(self_2818574090.lines[chckIndx(first_2818574093.Field0, 0, (self_2818574090.lines).length - 1)], HEX2EHEX2E_805306418(first_2818574093.Field1, subInt(last_2818574094.Field1, 1))), NTI33554449);
    break BeforeRet;
    }
    
    result_2818574092 = nimCopy(null, HEX5BHEX5D_855639319(self_2818574090.lines[chckIndx(first_2818574093.Field0, 0, (self_2818574090.lines).length - 1)], HEX2EHEX2E_1040187488(first_2818574093.Field1, 1)), NTI33554449);
    Label1: {
      var i_2818574141 = 0;
      var colontmp__2818585368 = 0;
      colontmp__2818585368 = addInt(first_2818574093.Field0, 1);
      var i_2818585369 = colontmp__2818585368;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585369 < last_2818574094.Field0)) break Label3;
            i_2818574141 = i_2818585369;
            result_2818574092.push.apply(result_2818574092, [10]);;
            result_2818574092.push.apply(result_2818574092, self_2818574090.lines[chckIndx(i_2818574141, 0, (self_2818574090.lines).length - 1)]);;
            i_2818585369 = addInt(i_2818585369, 1);
          }
      };
    };
    result_2818574092.push.apply(result_2818574092, [10]);;
    result_2818574092.push.apply(result_2818574092, HEX5BHEX5D_855639291(self_2818574090.lines[chckIndx(last_2818574094.Field0, 0, (self_2818574090.lines).length - 1)], HEX2EHEX2E_805306418(0, subInt(last_2818574094.Field1, 1))));;
  };

  return result_2818574092;

}

function delete_2818579470(s_2818579472, s_2818579472_Idx, slice_2818579473) {
    if (!((((slice_2818579473.a < (s_2818579472[s_2818579472_Idx]).length) && (0 <= slice_2818579473.a)) && (slice_2818579473.b < (s_2818579472[s_2818579472_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2818579473, NTI805306392), Field1: (s_2818579472[s_2818579472_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2818579473.a <= slice_2818579473.b)) {
    var n_2818579520 = addInt(subInt(slice_2818579473.b, slice_2818579473.a), 1);
    var first_2818579521 = slice_2818579473.a;
    s_2818579472[s_2818579472_Idx].splice(first_2818579521, n_2818579520);
    }
    

  
}

function subtract_2449474037(cursor_2449474038, selection_2449474039) {
  var result_2449474040 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473879(cursor_2449474038, selection_2449474039.Field0)) {
    result_2449474040 = nimCopy(result_2449474040, cursor_2449474038, NTI2449473545);
    break BeforeRet;
    }
    
    if (HEX3CHEX3D_2449473879(cursor_2449474038, selection_2449474039.Field1)) {
    result_2449474040 = nimCopy(result_2449474040, selection_2449474039.Field0, NTI2449473545);
    break BeforeRet;
    }
    
    if ((cursor_2449474038.Field0 == selection_2449474039.Field1.Field0)) {
    if ((selection_2449474039.Field0.Field0 == selection_2449474039.Field1.Field0)) {
    var colontmp__2818585379 = cursor_2449474038.Field0;
    var colontmp__2818585380 = subInt(cursor_2449474038.Field1, subInt(selection_2449474039.Field1.Field1, selection_2449474039.Field0.Field1));
    result_2449474040 = nimCopy(result_2449474040, {Field0: colontmp__2818585379, Field1: colontmp__2818585380}, NTI2449473545);
    break BeforeRet;
    }
    else {
      var colontmp__2818585381 = selection_2449474039.Field0.Field0;
      var colontmp__2818585382 = addInt(selection_2449474039.Field0.Field1, subInt(cursor_2449474038.Field1, selection_2449474039.Field1.Field1));
      result_2449474040 = nimCopy(result_2449474040, {Field0: colontmp__2818585381, Field1: colontmp__2818585382}, NTI2449473545);
      break BeforeRet;
    }
    
    }
    
    var colontmp__2818585383 = subInt(cursor_2449474038.Field0, subInt(selection_2449474039.Field1.Field0, selection_2449474039.Field0.Field0));
    var colontmp__2818585384 = cursor_2449474038.Field1;
    result_2449474040 = nimCopy(result_2449474040, {Field0: colontmp__2818585383, Field1: colontmp__2818585384}, NTI2449473545);
    break BeforeRet;
  };

  return result_2449474040;

}

function subtract_2449474049(self_2449474050, other_2449474051) {
  var result_2449474052 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818585377 = subtract_2449474037(self_2449474050.Field0, other_2449474051);
    var colontmp__2818585378 = subtract_2449474037(self_2449474050.Field1, other_2449474051);
    result_2449474052 = nimCopy(result_2449474052, {Field0: nimCopy(null, colontmp__2818585377, NTI2449473545), Field1: nimCopy(null, colontmp__2818585378, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
  };

  return result_2449474052;

}

function invoke_2818579579(event_2818579581, arg_2818579582) {
    Label1: {
      var h_2818579605 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585387 = 0;
      var L_2818585388 = (event_2818579581.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585387 < L_2818585388)) break Label3;
            h_2818579605 = event_2818579581.handlers[chckIndx(i_2818585387, 0, (event_2818579581.handlers).length - 1)];
            h_2818579605.Field1(arg_2818579582);
            i_2818585387 = addInt(i_2818585387, 1);
            if (!(((event_2818579581.handlers).length == L_2818585388))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function delete_2818579354(self_2818579355, selections_2818579356, oldSelection_2818579357, notify_2818579358, record_2818579359) {
              var Temporary8;
      var Temporary9;
        var Temporary10;

  var result_2818579360 = [];

    result_2818579360 = nimCopy(null, clampAndMergeSelections_2818572718(self_2818579355, selections_2818579356), NTI2449473555);
    var undoOp_2818579384 = {kind: 2, children: [], oldSelection: HEX40_2818579361(oldSelection_2818579357), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818579417 = 0;
      var selection_2818579418 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585362 = 0;
      var L_2818585363 = (result_2818579360).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585362 < L_2818585363)) break Label3;
            i_2818579417 = i_2818585362;
            selection_2818579418 = nimCopy(selection_2818579418, result_2818579360[chckIndx(i_2818585362, 0, (result_2818579360).length - 1)], NTI2449473547);
            Label4: {
              if (isEmpty_2449473908(selection_2818579418)) {
              break Label4;
              }
              
              var selection_2818579419 = normalized_2449473902(selection_2818579418);
              var startByte_2818579420 = byteOffset_2818579341(self_2818579355, selection_2818579419.Field0);
              var endByte_2818579421 = byteOffset_2818579341(self_2818579355, selection_2818579419.Field1);
              var deletedText_2818579422 = contentString_2818574089(self_2818579355, selection_2818579419);
              var colontmp__2818585375 = normalized_2449473902(selection_2818579419);
              var first_2818579423 = nimCopy(null, colontmp__2818585375["Field0"], NTI2449473545);
              var last_2818579424 = nimCopy(null, colontmp__2818585375["Field1"], NTI2449473545);
              if ((first_2818579423.Field0 == last_2818579424.Field0)) {
              delete_855639365(self_2818579355.lines, chckIndx(last_2818579424.Field0, 0, (self_2818579355.lines).length - 1), HEX2EHEX2E_805306418(first_2818579423.Field1, subInt(last_2818579424.Field1, 1)));
              }
              else {
                if ((first_2818579423.Field1 < lineLength_2818572671(self_2818579355, first_2818579423.Field0))) {
                delete_855639365(self_2818579355.lines, chckIndx(first_2818579423.Field0, 0, (self_2818579355.lines).length - 1), HEX2EHEX2E_805306418(first_2818579423.Field1, subInt(lineLength_2818572671(self_2818579355, first_2818579423.Field0), 1)));
                }
                
                self_2818579355.lines[chckIndx(first_2818579423.Field0, 0, (self_2818579355.lines).length - 1)].push.apply(self_2818579355.lines[chckIndx(first_2818579423.Field0, 0, (self_2818579355.lines).length - 1)], HEX5BHEX5D_855639319(self_2818579355.lines[chckIndx(last_2818579424.Field0, 0, (self_2818579355.lines).length - 1)], HEX2EHEX2E_1040187488(last_2818579424.Field1, 1)));;
                delete_2818579470(self_2818579355, "lines", HEX2EHEX2E_805306418(addInt(first_2818579423.Field0, 1), last_2818579424.Field0));
              }
              
              result_2818579360[chckIndx(i_2818579417, 0, (result_2818579360).length - 1)] = nimCopy(result_2818579360[chckIndx(i_2818579417, 0, (result_2818579360).length - 1)], toSelection_2449474029(selection_2818579419.Field0), NTI2449473547);
              Label5: {
                var k_2818579529 = 0;
                var colontmp__2818585358 = 0;
                var colontmp__2818585359 = 0;
                colontmp__2818585358 = addInt(i_2818579417, 1);
                colontmp__2818585359 = (result_2818579360).length - 1;
                var res_2818585360 = colontmp__2818585358;
                Label6: {
                    Label7: while (true) {
                    if (!(res_2818585360 <= colontmp__2818585359)) break Label7;
                      k_2818579529 = res_2818585360;
                      result_2818579360[chckIndx(k_2818579529, 0, (result_2818579360).length - 1)] = nimCopy(result_2818579360[chckIndx(k_2818579529, 0, (result_2818579360).length - 1)], subtract_2449474049(result_2818579360[chckIndx(k_2818579529, 0, (result_2818579360).length - 1)], selection_2818579419), NTI2449473547);
                      res_2818585360 = addInt(res_2818585360, 1);
                    }
                };
              };
              if (!((self_2818579355.tsParser == null))) {
              var edit_2818579533 = {startIndex: startByte_2818579420, oldEndIndex: endByte_2818579421, newEndIndex: startByte_2818579420, startPosition: {row: selection_2818579419.Field0.Field0, column: selection_2818579419.Field0.Field1, m_type: NTI2885681166}, oldEndPosition: {row: selection_2818579419.Field1.Field0, column: selection_2818579419.Field1.Field1, m_type: NTI2885681166}, newEndPosition: {row: selection_2818579419.Field0.Field0, column: selection_2818579419.Field0.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
              var _ = self_2818579355.currentTree.edit(edit_2818579533);
              var strValue_2818579534 = nsuJoinSep(self_2818579355.lines, [10]);
              self_2818579355.currentTree = parseString_2885681211(self_2818579355.tsParser, strValue_2818579534, some_2818579535(self_2818579355.currentTree));
              }
              
              self_2818579355.version = addInt(self_2818579355.version, 1);
              if (record_2818579359) {
              var Temporary8 = undoOp_2818579384;
              if (ConstSet26[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
              Temporary8.children.push({kind: 1, cursor: nimCopy(null, selection_2818579419.Field0, NTI2449473545), text: nimCopy(null, deletedText_2818579422, NTI33554449), oldSelection: [], selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
              }
              
              if (notify_2818579358) {
              invoke_2818579579(self_2818579355.textDeleted, {Field0: self_2818579355, Field1: nimCopy(null, selection_2818579419, NTI2449473547)});
              }
              
            };
            i_2818585362 = addInt(i_2818585362, 1);
            if (!(((result_2818579360).length == L_2818585363))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818579358) {
    notifyTextChanged_2818573266(self_2818579355);
    }
    
      if (!record_2818579359) Temporary9 = false; else {        var Temporary10 = undoOp_2818579384;
        if (ConstSet27[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2818572291)); }
        Temporary9 = (0 < (Temporary10.children).length);      }    if (Temporary9) {
    self_2818579355.undoOps.push(undoOp_2818579384);;
    self_2818579355.redoOps = nimCopy(null, [], NTI2818576104);
    }
    

  return result_2818579360;

}

function delete_2818585280(self_2818585281, selections_2818585282, notify_2818585283, record_2818585284) {
  var result_2818585285 = [];

  BeforeRet: {
    result_2818585285 = nimCopy(null, delete_2818579354(self_2818585281.document, selections_2818585282, selections_2818572800(self_2818585281), notify_2818585283, record_2818585284), NTI2818576075);
    break BeforeRet;
  };

  return result_2818585285;

}

function deleteJsWrapper_2818585276(self_2818585317, selections_2818585318, notify_2818585319, record_2818585320) {
  var result_2818585321 = [];

    result_2818585321 = nimCopy(null, delete_2818585280(self_2818585317, selections_2818585318, notify_2818585319, record_2818585320), NTI2818579834);

  return result_2818585321;

}
editor_text_prototype.delete = function(selections_ /* : seq[Selection] */, notify_ /* : bool */, record_ /* : bool */) { return (deleteJsWrapper_2818585276(this, selections_, notify_, record_));};

function popLast_2818585529(deq_2818585531) {
    var Temporary1;

  var result_2818585532 = [];

    if ((deq_2818585531.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818585531.count = subInt(deq_2818585531.count, 1);
    deq_2818585531.tail = (subInt(deq_2818585531.tail, 1) & deq_2818585531.mask);
    Temporary1 = deq_2818585531.data[chckIndx(deq_2818585531.tail, 0, (deq_2818585531.data).length - 1)];
    deq_2818585531.data[chckIndx(deq_2818585531.tail, 0, (deq_2818585531.data).length - 1)] = genericReset(deq_2818585531.data[chckIndx(deq_2818585531.tail, 0, (deq_2818585531.data).length - 1)], NTI2449473555);
    result_2818585532 = nimCopy(null, Temporary1, NTI2449473555);

  return result_2818585532;

}

function addFirst_2818585548(deq_2818585550, item_2818585551) {
    expandIfNeeded_2818572833(deq_2818585550);
    deq_2818585550.count = addInt(deq_2818585550.count, 1);
    deq_2818585550.head = (subInt(deq_2818585550.head, 1) & deq_2818585550.mask);
    deq_2818585550.data[chckIndx(deq_2818585550.head, 0, (deq_2818585550.data).length - 1)] = nimCopy(null, item_2818585551, NTI2449473555);

  
}

function totalLineHeight_2768240810(self_2768240811) {
  var result_2768240812 = 0.0;

    result_2768240812 = (lineHeight_2768240794(self_2768240811) + lineDistance_2768240789(self_2768240811));

  return result_2768240812;

}

function clamp_2634023065(x_2634023067, a_2634023068, b_2634023069) {
  var result_2634023070 = 0.0;

  BeforeRet: {
    if ((x_2634023067 < a_2634023068)) {
    result_2634023070 = a_2634023068;
    break BeforeRet;
    }
    
    if ((b_2634023069 < x_2634023067)) {
    result_2634023070 = b_2634023069;
    break BeforeRet;
    }
    
    result_2634023070 = x_2634023067;
    break BeforeRet;
  };

  return result_2634023070;

}

function getFloat_1627390140(n_1627390141, default_1627390142) {
      var Temporary1;
      var Temporary2;

  var result_1627390143 = 0.0;

  BeforeRet: {
    if ((n_1627390141 == null)) {
    result_1627390143 = default_1627390142;
    break BeforeRet;
    }
    
    switch (n_1627390141.kind) {
    case 3:
      var Temporary1 = n_1627390141;
      if (ConstSet28[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390143 = Temporary1.fnum;
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = n_1627390141;
      if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627390143 = Temporary2.num;
      break BeforeRet;
      break;
    default: 
      result_1627390143 = default_1627390142;
      break BeforeRet;
      break;
    }
  };

  return result_1627390143;

}

function getOption_2818583574(editor_2818583576, path_2818583577, default_2818583578) {
  var result_2818583584 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583576 == null)) {
      result_2818583584 = default_2818583578;
      break BeforeRet;
      }
      
      var nodeHEX60gensym163_2818583597 = HEX7BHEX7D_1627393316(editor_2818583576.options, nsuSplitString(path_2818583577, [46], -1));
      if ((nodeHEX60gensym163_2818583597 == null)) {
      result_2818583584 = default_2818583578;
      break BeforeRet;
      }
      
    };
    result_2818583584 = getFloat_1627390140(nodeHEX60gensym163_2818583597, default_2818583578);
    break BeforeRet;
  };

  return result_2818583584;

}

function scrollToCursor_2818583566(self_2818583567, cursor_2818583568, keepVerticalOffset_2818583569) {
    var targetLine_2818583570 = cursor_2818583568.Field0;
    var totalLineHeight_2818583571 = totalLineHeight_2768240810(self_2818583567.editor.platform);
    if (keepVerticalOffset_2818583569) {
    var currentLineY_2818583572 = ((subInt(selection_2818572803(self_2818583567).Field1.Field0, self_2818583567.previousBaseIndex) * totalLineHeight_2818583571) + self_2818583567.scrollOffset);
    self_2818583567.previousBaseIndex = targetLine_2818583570;
    self_2818583567.scrollOffset = currentLineY_2818583572;
    }
    else {
      var targetLineY_2818583573 = ((subInt(targetLine_2818583570, self_2818583567.previousBaseIndex) * totalLineHeight_2818583571) + self_2818583567.scrollOffset);
      var margin_2818583606 = clamp_2634023065(getOption_2818583574(self_2818583567.editor, [116,101,120,116,46,99,117,114,115,111,114,45,109,97,114,103,105,110], 25.0), 0.0, ((self_2818583567.lastContentBounds.h * 0.5) - (totalLineHeight_2818583571 * 0.5)));
      if ((targetLineY_2818583573 < margin_2818583606)) {
      self_2818583567.scrollOffset = margin_2818583606;
      self_2818583567.previousBaseIndex = targetLine_2818583570;
      }
      else {
      if (((self_2818583567.lastContentBounds.h - margin_2818583606) < (targetLineY_2818583573 + totalLineHeight_2818583571))) {
      self_2818583567.scrollOffset = ((self_2818583567.lastContentBounds.h - margin_2818583606) - totalLineHeight_2818583571);
      self_2818583567.previousBaseIndex = targetLine_2818583570;
      }
      }
    }
    
    markDirty_2415919143(self_2818583567);

  
}

function selectPrev_2818585396(self_2818585397) {
    if ((0 < len_2818572974(self_2818585397.selectionHistory))) {
    var selection_2818585542 = popLast_2818585529(self_2818585397.selectionHistory);
    addFirst_2818585548(self_2818585397.selectionHistory, selections_2818572800(self_2818585397));
    self_2818585397.selectionsInternal = nimCopy(null, selection_2818585542, NTI2449473555);
    }
    
    scrollToCursor_2818583566(self_2818585397, selection_2818572803(self_2818585397).Field1, false);

  
}

function selectPrevJsWrapper_2818585392(self_2818585592) {
    selectPrev_2818585396(self_2818585592);

  
}
editor_text_prototype.selectPrev = function() { return (selectPrevJsWrapper_2818585392(this));};

function selectNext_2818585614(self_2818585615) {
    if ((0 < len_2818572974(self_2818585615.selectionHistory))) {
    var selection_2818585750 = popFirst_2818573046(self_2818585615.selectionHistory);
    addLast_2818572824(self_2818585615.selectionHistory, selections_2818572800(self_2818585615));
    self_2818585615.selectionsInternal = nimCopy(null, selection_2818585750, NTI2449473555);
    }
    
    scrollToCursor_2818583566(self_2818585615, selection_2818572803(self_2818585615).Field1, false);

  
}

function selectNextJsWrapper_2818585610(self_2818585787) {
    selectNext_2818585614(self_2818585787);

  
}
editor_text_prototype.selectNext = function() { return (selectNextJsWrapper_2818585610(this));};

function re_2852126779(text_2852126780) {
  var result_2852126781 = ({impl: null});

  BeforeRet: {
    result_2852126781 = nimCopy(result_2852126781, {impl: new RegExp(toJSStr(text_2852126780), "dg")}, NTI2852126723);
    break BeforeRet;
  };

  return result_2852126781;

}

function matchLen_2852126756(text_2852126757, regex_2852126758, start_2852126759) {
  var result_2852126760 = 0;

    regex_2852126758.impl.lastIndex = 0;
    result_2852126760 = ((regex_2852126758.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126757, HEX2EHEX2E_1040187488(start_2852126759, 1))))) || {index:-1}).index;

  return result_2852126760;

}

function selectInside_2818585808(self_2818585809, cursor_2818585810) {
    var regex_2818585811 = re_2852126779([91,97,45,122,65,45,90,48,45,57,95,93]);
    var first_2818585812 = cursor_2818585810.Field1;
    Label1: {
        Label2: while (true) {
        if (!((0 < first_2818585812) && (matchLen_2852126756(self_2818585809.document.lines[chckIndx(cursor_2818585810.Field0, 0, (self_2818585809.document.lines).length - 1)], regex_2818585811, subInt(first_2818585812, 1)) == 1))) break Label2;
          first_2818585812 = subInt(first_2818585812, 1);
        }
    };
    var last_2818585817 = cursor_2818585810.Field1;
    Label3: {
        Label4: while (true) {
        if (!((last_2818585817 < (self_2818585809.document.lines[chckIndx(cursor_2818585810.Field0, 0, (self_2818585809.document.lines).length - 1)]).length) && (matchLen_2852126756(self_2818585809.document.lines[chckIndx(cursor_2818585810.Field0, 0, (self_2818585809.document.lines).length - 1)], regex_2818585811, last_2818585817) == 1))) break Label4;
          last_2818585817 = addInt(last_2818585817, 1);
        }
    };
    selectionHEX3D_2818572809(self_2818585809, {Field0: {Field0: cursor_2818585810.Field0, Field1: first_2818585812}, Field1: {Field0: cursor_2818585810.Field0, Field1: last_2818585817}});

  
}

function selectInsideJsWrapper_2818585804(self_2818585850, cursor_2818585851) {
    selectInside_2818585808(self_2818585850, cursor_2818585851);

  
}
editor_text_prototype.selectInside = function(cursor_ /* : Cursor */) { return (selectInsideJsWrapper_2818585804(this, cursor_));};

function selectInsideCurrent_2818585885(self_2818585886) {
    selectInside_2818585808(self_2818585886, selection_2818572803(self_2818585886).Field1);

  
}

function selectInsideCurrentJsWrapper_2818585881(self_2818585914) {
    selectInsideCurrent_2818585885(self_2818585914);

  
}
editor_text_prototype.selectInsideCurrent = function() { return (selectInsideCurrentJsWrapper_2818585881(this));};

function lineLength_2818572678(self_2818572679, line_2818572680) {
  var result_2818572681 = 0;

  BeforeRet: {
    if ((line_2818572680 < (self_2818572679.document.lines).length)) {
    result_2818572681 = (self_2818572679.document.lines[chckIndx(line_2818572680, 0, (self_2818572679.document.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572681 = 0;
    break BeforeRet;
  };

  return result_2818572681;

}

function selectLine_2818585935(self_2818585936, line_2818585937) {
    selectionHEX3D_2818572809(self_2818585936, {Field0: {Field0: line_2818585937, Field1: 0}, Field1: {Field0: line_2818585937, Field1: lineLength_2818572678(self_2818585936, line_2818585937)}});

  
}

function selectLineJsWrapper_2818585931(self_2818585966, line_2818585967) {
    selectLine_2818585935(self_2818585966, line_2818585967);

  
}
editor_text_prototype.selectLine = function(line_ /* : int */) { return (selectLineJsWrapper_2818585931(this, line_));};

function selectLineCurrent_2818585993(self_2818585994) {
    selectLine_2818585935(self_2818585994, selection_2818572803(self_2818585994).Field1.Field0);

  
}

function selectLineCurrentJsWrapper_2818585989(self_2818586022) {
    selectLineCurrent_2818585993(self_2818586022);

  
}
editor_text_prototype.selectLineCurrent = function() { return (selectLineCurrentJsWrapper_2818585989(this));};

function toTsPoint_2885681339(cursor_2885681340) {
  var result_2885681341 = null;

    result_2885681341 = {row: cursor_2885681340.Field0, column: cursor_2885681340.Field1, m_type: NTI2885681166};

  return result_2885681341;

}

function descendantForRange_2885681405(node_2885681406, selection_2885681407) {
  var result_2885681408 = null;

    result_2885681408 = node_2885681406.descendantForPosition(toTsPoint_2885681339(selection_2885681407.Field0), toTsPoint_2885681339(selection_2885681407.Field1));

  return result_2885681408;

}

function startPoint_2885681328(node_2885681329) {
  var result_2885681330 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681331 = node_2885681329.startPosition;
    var colontmp__2818586116 = point_2885681331.row;
    var colontmp__2818586117 = point_2885681331.column;
    result_2885681330 = nimCopy(result_2885681330, {Field0: colontmp__2818586116, Field1: colontmp__2818586117}, NTI2449473545);
    break BeforeRet;
  };

  return result_2885681330;

}

function endPoint_2885681332(node_2885681333) {
  var result_2885681334 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681335 = node_2885681333.endPosition;
    var colontmp__2818586118 = point_2885681335.row;
    var colontmp__2818586119 = point_2885681335.column;
    result_2885681334 = nimCopy(result_2885681334, {Field0: colontmp__2818586118, Field1: colontmp__2818586119}, NTI2449473545);
    break BeforeRet;
  };

  return result_2885681334;

}

function getRange_2885681336(node_2885681337) {
  var result_2885681338 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818586114 = startPoint_2885681328(node_2885681337);
    var colontmp__2818586115 = endPoint_2885681332(node_2885681337);
    result_2885681338 = nimCopy(result_2885681338, {Field0: nimCopy(null, colontmp__2818586114, NTI2449473545), Field1: nimCopy(null, colontmp__2818586115, NTI2449473545)}, NTI2449473547);

  return result_2885681338;

}

function selectParentTs_2818586043(self_2818586044, selection_2818586045) {
  BeforeRet: {
    if ((self_2818586044.document.currentTree == null)) {
    break BeforeRet;
    }
    
    var node_2818586049 = descendantForRange_2885681405(self_2818586044.document.currentTree.rootNode, selection_2818586045);
    Label1: {
        Label2: while (true) {
        if (!(HEX3DHEX3D_2449473599(getRange_2885681336(node_2818586049), selection_2818586045) && !((node_2818586049 == self_2818586044.document.currentTree.rootNode)))) break Label2;
          node_2818586049 = node_2818586049.parent;
        }
    };
    selectionHEX3D_2818572809(self_2818586044, getRange_2885681336(node_2818586049));
  };

  
}

function selectParentTsJsWrapper_2818586039(self_2818586086, selection_2818586087) {
    selectParentTs_2818586043(self_2818586086, selection_2818586087);

  
}
editor_text_prototype.selectParentTs = function(selection_ /* : Selection */) { return (selectParentTsJsWrapper_2818586039(this, selection_));};

function selectParentCurrentTs_2818586126(self_2818586127) {
    selectParentTs_2818586043(self_2818586127, selection_2818572803(self_2818586127));

  
}

function selectParentCurrentTsJsWrapper_2818586122(self_2818586155) {
    selectParentCurrentTs_2818586126(self_2818586155);

  
}
editor_text_prototype.selectParentCurrentTs = function() { return (selectParentCurrentTsJsWrapper_2818586122(this));};

function newSeq_2449473682(len_2449473684) {
  var result_2449473685 = [];

    result_2449473685 = new Array(len_2449473684); for (var i = 0 ; i < len_2449473684 ; ++i) { result_2449473685[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }
  return result_2449473685;

}

function HEX2A_1023410184(x_1023410185, order_1023410186) {
  var result_1023410187 = 0;

    var y_1023410192 = subInt(order_1023410186, 1);
    result_1023410187 = subInt((x_1023410185 ^ y_1023410192), y_1023410192);

  return result_1023410187;

}

function mergeAlt_2449473711(a_2449473713, b_2449473714, lo_2449473715, m_2449473716, hi_2449473717, cmp_2449473720, order_2449473721) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2449473720(a_2449473713[chckIndx(m_2449473716, 0, (a_2449473713).length - 1)], a_2449473713[chckIndx(addInt(m_2449473716, 1), 0, (a_2449473713).length - 1)]), order_2449473721) <= 0)) {
    break BeforeRet;
    }
    
    var j_2449473722 = lo_2449473715;
    if (!((j_2449473722 <= m_2449473716))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2449473728 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2449473722 <= m_2449473716)) break Label2;
          b_2449473714[chckIndx(bb_2449473728, 0, (b_2449473714).length - 1)] = nimCopy(b_2449473714[chckIndx(bb_2449473728, 0, (b_2449473714).length - 1)], a_2449473713[chckIndx(j_2449473722, 0, (a_2449473713).length - 1)], NTI2449473547);
          bb_2449473728 = addInt(bb_2449473728, 1);
          j_2449473722 = addInt(j_2449473722, 1);
        }
    };
    var i_2449473739 = 0;
    var k_2449473740 = lo_2449473715;
    Label3: {
        Label4: while (true) {
        if (!((k_2449473740 < j_2449473722) && (j_2449473722 <= hi_2449473717))) break Label4;
          if ((HEX2A_1023410184(cmp_2449473720(b_2449473714[chckIndx(i_2449473739, 0, (b_2449473714).length - 1)], a_2449473713[chckIndx(j_2449473722, 0, (a_2449473713).length - 1)]), order_2449473721) <= 0)) {
          a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)] = nimCopy(a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)], b_2449473714[chckIndx(i_2449473739, 0, (b_2449473714).length - 1)], NTI2449473547);
          i_2449473739 = addInt(i_2449473739, 1);
          }
          else {
            a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)] = nimCopy(a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)], a_2449473713[chckIndx(j_2449473722, 0, (a_2449473713).length - 1)], NTI2449473547);
            j_2449473722 = addInt(j_2449473722, 1);
          }
          
          k_2449473740 = addInt(k_2449473740, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2449473740 < j_2449473722)) break Label6;
          a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)] = nimCopy(a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)], b_2449473714[chckIndx(i_2449473739, 0, (b_2449473714).length - 1)], NTI2449473547);
          k_2449473740 = addInt(k_2449473740, 1);
          i_2449473739 = addInt(i_2449473739, 1);
        }
    };
  };

  
}

function sort_2449473670(a_2449473672, cmp_2449473675, order_2449473676) {
    var n_2449473681 = (a_2449473672).length;
    var b_2449473708 = newSeq_2449473682(chckRange(divInt(n_2449473681, 2), 0, 2147483647));
    var s_2449473709 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2449473709 < n_2449473681)) break Label2;
          var m_2449473710 = subInt(subInt(n_2449473681, 1), s_2449473709);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2449473710)) break Label4;
                mergeAlt_2449473711(a_2449473672, b_2449473708, nimMax(addInt(subInt(m_2449473710, s_2449473709), 1), 0), m_2449473710, addInt(m_2449473710, s_2449473709), cmp_2449473675, order_2449473676);
                m_2449473710 = subInt(m_2449473710, mulInt(s_2449473709, 2));
              }
          };
          s_2449473709 = mulInt(s_2449473709, 2);
        }
    };

  
}

function sorted_2449473812(a_2449473814, cmp_2449473817, order_2449473818) {
  var result_2449473819 = [];

    result_2449473819 = nimCopy(null, newSeq_2449473682(chckRange((a_2449473814).length, 0, 2147483647)), NTI2449473595);
    Label1: {
      var i_2449473833 = 0;
      var colontmp__2818586233 = 0;
      colontmp__2818586233 = (a_2449473814).length - 1;
      var res_2818586234 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586234 <= colontmp__2818586233)) break Label3;
            i_2449473833 = res_2818586234;
            result_2449473819[chckIndx(i_2449473833, 0, (result_2449473819).length - 1)] = nimCopy(result_2449473819[chckIndx(i_2449473833, 0, (result_2449473819).length - 1)], a_2449473814[chckIndx(i_2449473833, 0, (a_2449473814).length - 1)], NTI2449473547);
            res_2818586234 = addInt(res_2818586234, 1);
          }
      };
    };
    sort_2449473670(result_2449473819, cmp_2449473817, order_2449473818);

  return result_2449473819;

}

function HEX3C_2449473642(x_2449473644, y_2449473645) {
  var result_2449473646 = false;

  BeforeRet: {
    var c_2449473656 = cmp_33557727(x_2449473644["Field0"], y_2449473645["Field0"]);
    if ((c_2449473656 < 0)) {
    result_2449473646 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473656)) {
    result_2449473646 = false;
    break BeforeRet;
    }
    
    var c_2449473661 = cmp_33557727(x_2449473644["Field1"], y_2449473645["Field1"]);
    if ((c_2449473661 < 0)) {
    result_2449473646 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473661)) {
    result_2449473646 = false;
    break BeforeRet;
    }
    
    result_2449473646 = false;
    break BeforeRet;
  };

  return result_2449473646;

}

function cmp_2449473633(x_2449473635, y_2449473636) {
  var result_2449473637 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2449473609(x_2449473635, y_2449473636)) {
    result_2449473637 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2449473642(x_2449473635, y_2449473636)) {
    result_2449473637 = -1;
    break BeforeRet;
    }
    
    result_2449473637 = 1;
    break BeforeRet;
  };

  return result_2449473637;

}

function HEX3C_2449473623(x_2449473625, y_2449473626) {
  var result_2449473627 = false;

  BeforeRet: {
    var c_2449473662 = cmp_2449473633(x_2449473625["Field0"], y_2449473626["Field0"]);
    if ((c_2449473662 < 0)) {
    result_2449473627 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473662)) {
    result_2449473627 = false;
    break BeforeRet;
    }
    
    var c_2449473667 = cmp_2449473633(x_2449473625["Field1"], y_2449473626["Field1"]);
    if ((c_2449473667 < 0)) {
    result_2449473627 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473667)) {
    result_2449473627 = false;
    break BeforeRet;
    }
    
    result_2449473627 = false;
    break BeforeRet;
  };

  return result_2449473627;

}

function cmp_2449473594(x_2449473596, y_2449473597) {
  var result_2449473598 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2449473599(x_2449473596, y_2449473597)) {
    result_2449473598 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2449473623(x_2449473596, y_2449473597)) {
    result_2449473598 = -1;
    break BeforeRet;
    }
    
    result_2449473598 = 1;
    break BeforeRet;
  };

  return result_2449473598;

}

function sorted_2449473801(a_2449473803, order_2449473804) {
  var result_2449473805 = [];

    result_2449473805 = nimCopy(null, sorted_2449473812(a_2449473803, cmp_2449473594, order_2449473804), NTI2449473675);

  return result_2449473805;

}

function normalized_2449473798(self_2449473799) {
  var result_2449473800 = [];

  BeforeRet: {
    result_2449473800 = nimCopy(null, sorted_2449473801(self_2449473799, 1), NTI2449473666);
    break BeforeRet;
  };

  return result_2449473800;

}

function HEX3DHEX3D_2818573084(x_2818573086, y_2818573087) {
  var result_2818573088 = false;

  BeforeRet: {
    var sameObject_2818573095 = false;
    sameObject_2818573095 = x_2818573086 === y_2818573087
    if (sameObject_2818573095) {
    result_2818573088 = true;
    break BeforeRet;
    }
    
    if (!(((x_2818573086).length == (y_2818573087).length))) {
    result_2818573088 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2818573109 = 0;
      var colontmp__2818586242 = 0;
      colontmp__2818586242 = subInt((x_2818573086).length, 1);
      var res_2818586243 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586243 <= colontmp__2818586242)) break Label3;
            i_2818573109 = res_2818586243;
            if (!(HEX3DHEX3D_2449473599(x_2818573086[chckIndx(i_2818573109, 0, (x_2818573086).length - 1)], y_2818573087[chckIndx(i_2818573109, 0, (y_2818573087).length - 1)]))) {
            result_2818573088 = false;
            break BeforeRet;
            }
            
            res_2818586243 = addInt(res_2818586243, 1);
          }
      };
    };
    result_2818573088 = true;
    break BeforeRet;
  };

  return result_2818573088;

}

function clampAndMergeSelections_2818572796(self_2818572797, selections_2818572798) {
  var result_2818572799 = [];

    result_2818572799 = nimCopy(null, clampAndMergeSelections_2818572718(self_2818572797.document, selections_2818572798), NTI2449473555);

  return result_2818572799;

}

function selectionsHEX3D_2818573081(self_2818573082, selections_2818573083) {
  BeforeRet: {
    if (HEX3DHEX3D_2818573084(self_2818573082.selectionsInternal, selections_2818573083)) {
    break BeforeRet;
    }
    
    addLast_2818572824(self_2818573082.selectionHistory, self_2818573082.selectionsInternal);
    if ((100 < len_2818572974(self_2818573082.selectionHistory))) {
    var _ = popFirst_2818573046(self_2818573082.selectionHistory);
    }
    
    self_2818573082.selectionsInternal = nimCopy(null, clampAndMergeSelections_2818572796(self_2818573082, selections_2818573083), NTI2449473555);
    if (((self_2818573082.selectionsInternal).length == 0)) {
    self_2818573082.selectionsInternal = nimCopy(null, [nimCopy(null, toSelection_2449474029({Field0: 0, Field1: 0}), NTI2449473547)], NTI2818572821);
    }
    
    markDirty_2415919143(self_2818573082);
  };

  
}

function edit_2818580068(self_2818580069, selections_2818580070, oldSelection_2818580071, text_2818580072, notify_2818580073) {
    
function HEX3Aanonymous_2818580075(s_2818580083) {
      var result_2818580086 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818580086 = nimCopy(result_2818580086, normalized_2449473902(s_2818580083), NTI2449473547);

      return result_2818580086;

    }

  var result_2818580074 = [];

    var selections_2818580094 = map_2818572733(selections_2818580070, HEX3Aanonymous_2818580075);
    result_2818580074 = nimCopy(null, delete_2818579354(self_2818580069, selections_2818580094, oldSelection_2818580071, false, true), NTI2818576075);
    result_2818580074 = nimCopy(null, insert_2818579851(self_2818580069, result_2818580074, oldSelection_2818580071, text_2818580072, true, true, true), NTI2818576430);

  return result_2818580074;

}

function insertText_2818586179(self_2818586180, text_2818586181) {
  BeforeRet: {
    if ((self_2818586180.document.singleLine && eqStrings(text_2818586181, [10]))) {
    break BeforeRet;
    }
    
    var selections_2818586182 = normalized_2449473798(selections_2818572800(self_2818586180));
    selectionsHEX3D_2818573081(self_2818586180, edit_2818580068(self_2818586180.document, selections_2818572800(self_2818586180), selections_2818572800(self_2818586180), text_2818586181, true));
    updateTargetColumn_2818584599(self_2818586180, 3);
    if ((eqStrings(text_2818586181, [46]) || eqStrings(text_2818586181, [44]))) {
    self_2818586180.showCompletions = true;
    var _ = getCompletionsAsync_2818586170(self_2818586180);
    }
    else {
    if (self_2818586180.showCompletions) {
    var _ = getCompletionsAsync_2818586170(self_2818586180);
    }
    }
  };

  
}

function insertTextJsWrapper_2818586175(self_2818586211, text_2818586212) {
    insertText_2818586179(self_2818586211, text_2818586212);

  
}
editor_text_prototype.insertText = function(text_ /* : string */) { return (insertTextJsWrapper_2818586175(this, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function none_2818580163() {
  var result_2818580170 = ({val: [], has: false});

  return result_2818580170;

}

function pop_2818580174(s_2818580176, s_2818580176_Idx) {
  var result_2818580177 = null;

    var L_2818580181 = subInt((s_2818580176[s_2818580176_Idx]).length, 1);
    result_2818580177 = s_2818580176[s_2818580176_Idx][chckIndx(L_2818580181, 0, (s_2818580176[s_2818580176_Idx]).length - 1)];
    if (s_2818580176[s_2818580176_Idx].length < chckRange(L_2818580181, 0, 2147483647)) { for (var i = s_2818580176[s_2818580176_Idx].length ; i < chckRange(L_2818580181, 0, 2147483647) ; ++i) s_2818580176[s_2818580176_Idx].push(null); }
               else { s_2818580176[s_2818580176_Idx].length = chckRange(L_2818580181, 0, 2147483647); };

  return result_2818580177;

}

function some_2818580187(val_2818580189) {
  var result_2818580190 = ({val: [], has: false});

    result_2818580190.has = true;
    result_2818580190.val = nimCopy(null, val_2818580189, NTI2818576615);

  return result_2818580190;

}

function doUndo_2818580104(document_2818580105, op_2818580106, oldSelection_2818580107, useOldSelection_2818580108, redoOps_2818580109, redoOps_2818580109_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary8;
              var Temporary11;
              var Temporary12;
              var Temporary13;

  var result_2818580110 = [];

    switch (op_2818580106.kind) {
    case 0:
      var Temporary1 = op_2818580106;
      if (ConstSet30[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818580111 = contentString_2818574089(document_2818580105, Temporary1.selection);
      var Temporary2 = op_2818580106;
      if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818580110 = nimCopy(null, delete_2818579354(document_2818580105, [nimCopy(null, Temporary2.selection, NTI2449473547)], op_2818580106.oldSelection, true, false), NTI2818576075);
      var Temporary3 = op_2818580106;
      if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      redoOps_2818580109[redoOps_2818580109_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2449473545), text: nimCopy(null, text_2818580111, NTI33554449), oldSelection: HEX40_2818579361(oldSelection_2818580107), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818580106;
      if (ConstSet33[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818580106;
      if (ConstSet34[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var selections_2818580119 = insert_2818579851(document_2818580105, [nimCopy(null, toSelection_2449474029(Temporary4.cursor), NTI2449473547)], op_2818580106.oldSelection, Temporary5.text, true, false, false);
      result_2818580110 = nimCopy(null, selections_2818580119, NTI2818576430);
      var Temporary6 = op_2818580106;
      if (ConstSet35[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      redoOps_2818580109[redoOps_2818580109_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary6.cursor, NTI2449473545), Field1: nimCopy(null, selections_2818580119[chckIndx(0, 0, (selections_2818580119).length - 1)].Field1, NTI2449473545)}, NTI2449473547), oldSelection: HEX40_2818579361(oldSelection_2818580107), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818580110 = nimCopy(null, op_2818580106.oldSelection, NTI2818572295);
      var redoOp_2818580130 = {kind: 2, oldSelection: HEX40_2818579361(oldSelection_2818580107), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label7: {
        var i_2818580139 = 0;
        var colontmp__2818586344 = 0;
        var Temporary8 = op_2818580106;
        if (ConstSet36[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
        colontmp__2818586344 = (Temporary8.children).length - 1;
        var res_2818586345 = colontmp__2818586344;
        Label9: {
            Label10: while (true) {
            if (!(0 <= res_2818586345)) break Label10;
              i_2818580139 = res_2818586345;
              var Temporary11 = op_2818580106;
              if (ConstSet37[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2818572291)); }
              var Temporary13 = redoOp_2818580130;
              if (ConstSet38[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2818572291)); }
              var _ = doUndo_2818580104(document_2818580105, (Temporary12 = Temporary11.children, Temporary12)[chckIndx(i_2818580139, 0, (Temporary12).length - 1)], oldSelection_2818580107, useOldSelection_2818580108, Temporary13, "children");
              res_2818586345 = subInt(res_2818586345, 1);
            }
        };
      };
      redoOps_2818580109[redoOps_2818580109_Idx].push(redoOp_2818580130);;
      break;
    }
    if (useOldSelection_2818580108) {
    result_2818580110 = nimCopy(null, op_2818580106.oldSelection, NTI2818572295);
    }
    

  return result_2818580110;

}

function undo_2818580153(document_2818580154, oldSelection_2818580155, useOldSelection_2818580156) {
  var result_2818580162 = ({val: [], has: false});

  BeforeRet: {
    result_2818580162 = nimCopy(result_2818580162, none_2818580163(), NTI2818576690);
    if (((document_2818580154.undoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818580186 = pop_2818580174(document_2818580154, "undoOps");
    result_2818580162 = nimCopy(result_2818580162, some_2818580187(doUndo_2818580104(document_2818580154, op_2818580186, oldSelection_2818580155, useOldSelection_2818580156, document_2818580154, "redoOps")), NTI2818576690);
    break BeforeRet;
  };

  return result_2818580162;

}

function isSome_2818586260(self_2818586262) {
  var result_2818586263 = false;

    result_2818586263 = self_2818586262.has;

  return result_2818586263;

}

function isNone_2818586285(self_2818586287) {
  var result_2818586288 = false;

    result_2818586288 = !(self_2818586287.has);

  return result_2818586288;

}

function get_2818586277(self_2818586279) {
  var result_2818586280 = [];

    if (isNone_2818586285(self_2818586279)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818586280 = self_2818586279["val"];

  return result_2818586280;

}

function undo_2818586251(self_2818586252) {
      var Temporary1;

      var oHEX60gensym378_2818586255 = undo_2818580153(self_2818586252.document, selections_2818572800(self_2818586252), true);
      if (!isSome_2818586260(oHEX60gensym378_2818586255)) Temporary1 = false; else {        var selections_2818586300 = nimCopy(null, get_2818586277(oHEX60gensym378_2818586255), NTI2818576685);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573081(self_2818586252, selections_2818586300);
    }
    

  
}

function undoJsWrapper_2818586247(self_2818586328) {
    undo_2818586251(self_2818586328);

  
}
editor_text_prototype.undo = function() { return (undoJsWrapper_2818586247(this));};

function doRedo_2818580201(document_2818580202, op_2818580203, oldSelection_2818580204, useOldSelection_2818580205, undoOps_2818580206, undoOps_2818580206_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary9;
              var Temporary12;
              var Temporary13;
              var Temporary14;

  var result_2818580207 = [];

    switch (op_2818580203.kind) {
    case 0:
      var Temporary1 = op_2818580203;
      if (ConstSet39[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818580208 = contentString_2818574089(document_2818580202, Temporary1.selection);
      var Temporary2 = op_2818580203;
      if (ConstSet40[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818580207 = nimCopy(null, delete_2818579354(document_2818580202, [nimCopy(null, Temporary2.selection, NTI2449473547)], op_2818580203.oldSelection, true, false), NTI2818576075);
      var Temporary3 = op_2818580203;
      if (ConstSet41[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      undoOps_2818580206[undoOps_2818580206_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2449473545), text: nimCopy(null, text_2818580208, NTI33554449), oldSelection: HEX40_2818579361(oldSelection_2818580204), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818580203;
      if (ConstSet42[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818580203;
      if (ConstSet43[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var Temporary6 = op_2818580203;
      if (ConstSet44[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      result_2818580207 = nimCopy(null, insert_2818579851(document_2818580202, [nimCopy(null, toSelection_2449474029(Temporary4.cursor), NTI2449473547)], [nimCopy(null, toSelection_2449474029(Temporary5.cursor), NTI2449473547)], Temporary6.text, true, false, false), NTI2818576430);
      var Temporary7 = op_2818580203;
      if (ConstSet45[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2818572291)); }
      undoOps_2818580206[undoOps_2818580206_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary7.cursor, NTI2449473545), Field1: nimCopy(null, result_2818580207[chckIndx(0, 0, (result_2818580207).length - 1)].Field1, NTI2449473545)}, NTI2449473547), oldSelection: HEX40_2818579361(oldSelection_2818580204), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818580207 = nimCopy(null, op_2818580203.oldSelection, NTI2818572295);
      var undoOp_2818580226 = {kind: 2, oldSelection: HEX40_2818579361(oldSelection_2818580204), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label8: {
        var i_2818580235 = 0;
        var colontmp__2818586424 = 0;
        var Temporary9 = op_2818580203;
        if (ConstSet46[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2818572291)); }
        colontmp__2818586424 = (Temporary9.children).length - 1;
        var res_2818586425 = colontmp__2818586424;
        Label10: {
            Label11: while (true) {
            if (!(0 <= res_2818586425)) break Label11;
              i_2818580235 = res_2818586425;
              var Temporary12 = op_2818580203;
              if (ConstSet47[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2818572291)); }
              var Temporary14 = undoOp_2818580226;
              if (ConstSet48[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI2818572291)); }
              var _ = doRedo_2818580201(document_2818580202, (Temporary13 = Temporary12.children, Temporary13)[chckIndx(i_2818580235, 0, (Temporary13).length - 1)], oldSelection_2818580204, useOldSelection_2818580205, Temporary14, "children");
              res_2818586425 = subInt(res_2818586425, 1);
            }
        };
      };
      undoOps_2818580206[undoOps_2818580206_Idx].push(undoOp_2818580226);;
      break;
    }
    if (useOldSelection_2818580205) {
    result_2818580207 = nimCopy(null, op_2818580203.oldSelection, NTI2818572295);
    }
    

  return result_2818580207;

}

function redo_2818580240(document_2818580241, oldSelection_2818580242, useOldSelection_2818580243) {
  var result_2818580245 = ({val: [], has: false});

  BeforeRet: {
    result_2818580245 = nimCopy(result_2818580245, none_2818580163(), NTI2818576690);
    if (((document_2818580241.redoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818580259 = pop_2818580174(document_2818580241, "redoOps");
    result_2818580245 = nimCopy(result_2818580245, some_2818580187(doRedo_2818580201(document_2818580241, op_2818580259, oldSelection_2818580242, useOldSelection_2818580243, document_2818580241, "undoOps")), NTI2818576690);
    break BeforeRet;
  };

  return result_2818580245;

}

function redo_2818586353(self_2818586354) {
      var Temporary1;

      var oHEX60gensym388_2818586357 = redo_2818580240(self_2818586354.document, selections_2818572800(self_2818586354), true);
      if (!isSome_2818586260(oHEX60gensym388_2818586357)) Temporary1 = false; else {        var selections_2818586380 = nimCopy(null, get_2818586277(oHEX60gensym388_2818586357), NTI2818576685);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573081(self_2818586354, selections_2818586380);
    }
    

  
}

function redoJsWrapper_2818586349(self_2818586408) {
    redo_2818586353(self_2818586408);

  
}
editor_text_prototype.redo = function() { return (redoJsWrapper_2818586349(this));};

function HEX2BHEX3D_855640304(x_855640306, x_855640306_Idx, y_855640307) {
    x_855640306[x_855640306_Idx] = (x_855640306[x_855640306_Idx] + y_855640307);

  
}

function scrollText_2818586433(self_2818586434, amount_2818586435) {
    HEX2BHEX3D_855640304(self_2818586434, "scrollOffset", amount_2818586435);
    markDirty_2415919143(self_2818586434);

  
}

function scrollTextJsWrapper_2818586429(self_2818586468, amount_2818586469) {
    scrollText_2818586433(self_2818586468, amount_2818586469);

  
}
editor_text_prototype.scrollText = function(amount_ /* : float32 */) { return (scrollTextJsWrapper_2818586429(this, amount_));};

function clampCursor_2818572706(self_2818572707, cursor_2818572708) {
  var result_2818572709 = {Field0: 0, Field1: 0};

    result_2818572709 = nimCopy(result_2818572709, clampCursor_2818572685(self_2818572707.document, cursor_2818572708), NTI2449473545);

  return result_2818572709;

}

function doMoveCursorColumn_2818583515(self_2818583516, cursor_2818583517, offset_2818583518) {
  var result_2818583519 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818583520 = nimCopy(null, cursor_2818583517, NTI2449473545);
    var column_2818583521 = addInt(cursor_2818583520.Field1, offset_2818583518);
    if ((column_2818583521 < 0)) {
    if ((0 < cursor_2818583520.Field0)) {
    cursor_2818583520.Field0 = subInt(cursor_2818583520.Field0, 1);
    cursor_2818583520.Field1 = lineLength_2818572678(self_2818583516, cursor_2818583520.Field0);
    }
    else {
      cursor_2818583520.Field1 = 0;
    }
    
    }
    else {
    if ((lineLength_2818572678(self_2818583516, cursor_2818583520.Field0) < column_2818583521)) {
    if ((cursor_2818583520.Field0 < subInt((self_2818583516.document.lines).length, 1))) {
    cursor_2818583520.Field0 = addInt(cursor_2818583520.Field0, 1);
    cursor_2818583520.Field1 = 0;
    }
    else {
      cursor_2818583520.Field1 = lineLength_2818572678(self_2818583516, cursor_2818583520.Field0);
    }
    
    }
    else {
      cursor_2818583520.Field1 = column_2818583521;
    }
    }
    result_2818583519 = nimCopy(result_2818583519, clampCursor_2818572706(self_2818583516, cursor_2818583520), NTI2449473545);
    break BeforeRet;
  };

  return result_2818583519;

}

function HEX26_2818586563(x_2818586565, y_2818586566) {
  var result_2818586567 = [];

    result_2818586567 = new Array(chckRange(addInt((x_2818586565).length, (y_2818586566).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2818586565).length, (y_2818586566).length), 0, 2147483647) ; ++i) { result_2818586567[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818586585 = 0;
      var colontmp__2818586640 = 0;
      colontmp__2818586640 = subInt((x_2818586565).length, 1);
      var res_2818586641 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586641 <= colontmp__2818586640)) break Label3;
            i_2818586585 = res_2818586641;
            result_2818586567[chckIndx(i_2818586585, 0, (result_2818586567).length - 1)] = nimCopy(result_2818586567[chckIndx(i_2818586585, 0, (result_2818586567).length - 1)], x_2818586565[chckIndx(i_2818586585, 0, (x_2818586565).length - 1)], NTI2449473547);
            res_2818586641 = addInt(res_2818586641, 1);
          }
      };
    };
    Label4: {
      var i_2818586593 = 0;
      var colontmp__2818586644 = 0;
      colontmp__2818586644 = subInt((y_2818586566).length, 1);
      var res_2818586645 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2818586645 <= colontmp__2818586644)) break Label6;
            i_2818586593 = res_2818586645;
            result_2818586567[chckIndx(addInt(i_2818586593, (x_2818586565).length), 0, (result_2818586567).length - 1)] = nimCopy(result_2818586567[chckIndx(addInt(i_2818586593, (x_2818586565).length), 0, (result_2818586567).length - 1)], y_2818586566[chckIndx(i_2818586593, 0, (y_2818586566).length - 1)], NTI2449473547);
            res_2818586645 = addInt(res_2818586645, 1);
          }
      };
    };

  return result_2818586567;

}

function duplicateLastSelection_2818586553(self_2818586554) {
    var Temporary1;

    var newSelection_2818586558 = toSelection_2449474029(doMoveCursorColumn_2818583515(self_2818586554, (Temporary1 = selections_2818572800(self_2818586554), Temporary1)[chckIndx((selections_2818572800(self_2818586554)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    selectionsHEX3D_2818573081(self_2818586554, HEX26_2818586563(selections_2818572800(self_2818586554), [nimCopy(null, newSelection_2818586558, NTI2449473547)]));

  
}

function duplicateLastSelectionJsWrapper_2818586549(self_2818586624) {
    duplicateLastSelection_2818586553(self_2818586624);

  
}
editor_text_prototype.duplicateLastSelection = function() { return (duplicateLastSelectionJsWrapper_2818586549(this));};

function doMoveCursorLine_2818583525(self_2818583526, cursor_2818583527, offset_2818583528) {
  var result_2818583529 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818583530 = nimCopy(null, cursor_2818583527, NTI2449473545);
    var line_2818583531 = addInt(cursor_2818583530.Field0, offset_2818583528);
    if ((line_2818583531 < 0)) {
    var colontmp__2818586709 = 0;
    var colontmp__2818586710 = cursor_2818583530.Field1;
    cursor_2818583530 = nimCopy(cursor_2818583530, {Field0: colontmp__2818586709, Field1: colontmp__2818586710}, NTI2449473545);
    }
    else {
    if (((self_2818583526.document.lines).length <= line_2818583531)) {
    var colontmp__2818586711 = subInt((self_2818583526.document.lines).length, 1);
    var colontmp__2818586712 = cursor_2818583530.Field1;
    cursor_2818583530 = nimCopy(cursor_2818583530, {Field0: colontmp__2818586711, Field1: colontmp__2818586712}, NTI2449473545);
    }
    else {
      cursor_2818583530.Field0 = line_2818583531;
      cursor_2818583530.Field1 = self_2818583526.targetColumn;
    }
    }
    result_2818583529 = nimCopy(result_2818583529, clampCursor_2818572706(self_2818583526, cursor_2818583530), NTI2449473545);
    break BeforeRet;
  };

  return result_2818583529;

}

function addCursorBelow_2818586653(self_2818586654) {
    var Temporary1;

    var newCursor_2818586658 = toSelection_2449474029(doMoveCursorLine_2818583525(self_2818586654, (Temporary1 = selections_2818572800(self_2818586654), Temporary1)[chckIndx((selections_2818572800(self_2818586654)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    if (!(contains_2449474006(selections_2818572800(self_2818586654), newCursor_2818586658))) {
    selectionsHEX3D_2818573081(self_2818586654, HEX26_2818586563(selections_2818572800(self_2818586654), [nimCopy(null, newCursor_2818586658, NTI2449473547)]));
    }
    

  
}

function addCursorBelowJsWrapper_2818586649(self_2818586694) {
    addCursorBelow_2818586653(self_2818586694);

  
}
editor_text_prototype.addCursorBelow = function() { return (addCursorBelowJsWrapper_2818586649(this));};

function addCursorAbove_2818586719(self_2818586720) {
    var Temporary1;

    var newCursor_2818586724 = toSelection_2449474029(doMoveCursorLine_2818583525(self_2818586720, (Temporary1 = selections_2818572800(self_2818586720), Temporary1)[chckIndx((selections_2818572800(self_2818586720)).length - 1, 0, (Temporary1).length - 1)].Field1, -1));
    if (!(contains_2449474006(selections_2818572800(self_2818586720), newCursor_2818586724))) {
    selectionsHEX3D_2818573081(self_2818586720, HEX26_2818586563(selections_2818572800(self_2818586720), [nimCopy(null, newCursor_2818586724, NTI2449473547)]));
    }
    

  
}

function addCursorAboveJsWrapper_2818586715(self_2818586760) {
    addCursorAbove_2818586719(self_2818586760);

  
}
editor_text_prototype.addCursorAbove = function() { return (addCursorAboveJsWrapper_2818586715(this));};

function hash_1325400236(x_1325400238) {
  var result_1325400239 = 0;

    result_1325400239 = hashWangYi1_1325400244(x_1325400238);

  return result_1325400239;

}

function rawGet_2818581104(t_2818581107, key_2818581108, hc_2818581109, hc_2818581109_Idx) {
  var result_2818581110 = 0;

  BeforeRet: {
    hc_2818581109[hc_2818581109_Idx] = hash_1325400236(key_2818581108);
    if ((hc_2818581109[hc_2818581109_Idx] == 0)) {
    hc_2818581109[hc_2818581109_Idx] = 314159265;
    }
    
    if (((t_2818581107.data).length == 0)) {
    result_2818581110 = -1;
    break BeforeRet;
    }
    
    var h_2818581180 = (hc_2818581109[hc_2818581109_Idx] & (t_2818581107.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818581107.data[chckIndx(h_2818581180, 0, (t_2818581107.data).length - 1)].Field0)) break Label2;
          if (((t_2818581107.data[chckIndx(h_2818581180, 0, (t_2818581107.data).length - 1)].Field0 == hc_2818581109[hc_2818581109_Idx]) && (t_2818581107.data[chckIndx(h_2818581180, 0, (t_2818581107.data).length - 1)].Field1 == key_2818581108))) {
          result_2818581110 = h_2818581180;
          break BeforeRet;
          }
          
          h_2818581180 = nextTry_1308622883(h_2818581180, (t_2818581107.data).length - 1);
        }
    };
    result_2818581110 = subInt(-1, h_2818581180);
  };

  return result_2818581110;

}

function hasKey_2818586857(t_2818586860, key_2818586861) {
  var result_2818586862 = false;

    var hc_2818586863 = [0];
    result_2818586862 = (0 <= rawGet_2818581104(t_2818586860, key_2818586861, hc_2818586863, 0));

  return result_2818586862;

}

function contains_2818586851(t_2818586854, key_2818586855) {
  var result_2818586856 = false;

  BeforeRet: {
    result_2818586856 = hasKey_2818586857(t_2818586854, key_2818586855);
    break BeforeRet;
  };

  return result_2818586856;

}

function raiseKeyError_1291850850(key_1291850852) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1291850852) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2818586947(t_2818586950, key_2818586951) {
  var result_2818586952 = null;
  var result_2818586952_Idx = 0;

    var hcHEX60gensym22_2818586953 = [0];
    var indexHEX60gensym22_2818586960 = rawGet_2818581104(t_2818586950, key_2818586951, hcHEX60gensym22_2818586953, 0);
    if ((0 <= indexHEX60gensym22_2818586960)) {
    result_2818586952 = t_2818586950.data[chckIndx(indexHEX60gensym22_2818586960, 0, (t_2818586950.data).length - 1)]; result_2818586952_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_2818586951);
    }
    

  return [result_2818586952, result_2818586952_Idx];

}

function HEX3C_2449473863(a_2449473864, b_2449473865) {
  var result_2449473866 = false;

  BeforeRet: {
    if ((a_2449473864.Field0 < b_2449473865.Field0)) {
    result_2449473866 = true;
    break BeforeRet;
    }
    else {
    if (((a_2449473864.Field0 == b_2449473865.Field0) && (a_2449473864.Field1 < b_2449473865.Field1))) {
    result_2449473866 = true;
    break BeforeRet;
    }
    else {
      result_2449473866 = false;
      break BeforeRet;
    }
    }
  };

  return result_2449473866;

}

function getPrevFindResult_2818583548(self_2818583549, cursor_2818583550, offset_2818583551) {
            var Temporary4;

  var result_2818586785 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818586786 = 0;
    Label1: {
      var line_2818586792 = 0;
      var res_2818587123 = cursor_2818583550.Field0;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818587123)) break Label3;
            line_2818586792 = res_2818587123;
            if (contains_2818586851(self_2818583549.searchResults, line_2818586792)) {
            var selections_2818587041 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2818586947(self_2818583549.searchResults, line_2818586792), Temporary4)[0][Temporary4[1]], NTI2818572535);
            Label5: {
              var k_2818587050 = 0;
              var colontmp__2818587120 = 0;
              colontmp__2818587120 = (selections_2818587041).length - 1;
              var res_2818587121 = colontmp__2818587120;
              Label6: {
                  Label7: while (true) {
                  if (!(0 <= res_2818587121)) break Label7;
                    k_2818587050 = res_2818587121;
                    if (HEX3C_2449473863(selections_2818587041[chckIndx(k_2818587050, 0, (selections_2818587041).length - 1)].Field1, cursor_2818583550)) {
                    if ((i_2818586786 == offset_2818583551)) {
                    result_2818586785 = nimCopy(result_2818586785, selections_2818587041[chckIndx(k_2818587050, 0, (selections_2818587041).length - 1)], NTI2449473547);
                    break BeforeRet;
                    }
                    
                    i_2818586786 = addInt(i_2818586786, 1);
                    }
                    
                    res_2818587121 = subInt(res_2818587121, 1);
                  }
              };
            };
            }
            
            res_2818587123 = subInt(res_2818587123, 1);
          }
      };
    };
    result_2818586785 = nimCopy(result_2818586785, toSelection_2449474029(cursor_2818583550), NTI2449473547);
    break BeforeRet;
  };

  return result_2818586785;

}

function getPrevFindResultJsWrapper_2818586777(self_2818587086, cursor_2818587087, offset_2818587088) {
  var result_2818587089 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818587089 = nimCopy(result_2818587089, getPrevFindResult_2818583548(self_2818587086, cursor_2818587087, offset_2818587088), NTI2449473547);

  return result_2818587089;

}
editor_text_prototype.getPrevFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getPrevFindResultJsWrapper_2818586777(this, cursor_, offset_));};

function getNextFindResult_2818583552(self_2818583553, cursor_2818583554, offset_2818583555) {
              var Temporary5;

  var result_2818587136 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818587137 = 0;
    Label1: {
      var line_2818587145 = 0;
      var colontmp__2818587369 = 0;
      colontmp__2818587369 = (self_2818583553.document.lines).length - 1;
      var res_2818587370 = cursor_2818583554.Field0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818587370 <= colontmp__2818587369)) break Label3;
            line_2818587145 = res_2818587370;
            if (contains_2818586851(self_2818583553.searchResults, line_2818587145)) {
            Label4: {
              var selection_2818587294 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
              var colontmp__2818587364 = [];
              colontmp__2818587364 = (Temporary5 = HEX5BHEX5D_2818586947(self_2818583553.searchResults, line_2818587145), Temporary5)[0][Temporary5[1]];
              var i_2818587366 = 0;
              var L_2818587367 = (colontmp__2818587364).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_2818587366 < L_2818587367)) break Label7;
                    selection_2818587294 = colontmp__2818587364[chckIndx(i_2818587366, 0, (colontmp__2818587364).length - 1)];
                    if (HEX3C_2449473863(cursor_2818583554, selection_2818587294.Field0)) {
                    if ((i_2818587137 == offset_2818583555)) {
                    result_2818587136 = nimCopy(result_2818587136, selection_2818587294, NTI2449473547);
                    break BeforeRet;
                    }
                    
                    i_2818587137 = addInt(i_2818587137, 1);
                    }
                    
                    i_2818587366 = addInt(i_2818587366, 1);
                    if (!(((colontmp__2818587364).length == L_2818587367))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            
            res_2818587370 = addInt(res_2818587370, 1);
          }
      };
    };
    result_2818587136 = nimCopy(result_2818587136, toSelection_2449474029(cursor_2818583554), NTI2449473547);
    break BeforeRet;
  };

  return result_2818587136;

}

function getNextFindResultJsWrapper_2818587128(self_2818587330, cursor_2818587331, offset_2818587332) {
  var result_2818587333 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818587333 = nimCopy(result_2818587333, getNextFindResult_2818583552(self_2818587330, cursor_2818587331, offset_2818587332), NTI2449473547);

  return result_2818587333;

}
editor_text_prototype.getNextFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getNextFindResultJsWrapper_2818587128(this, cursor_, offset_));};

function addNextFindResultToSelection_2818587378(self_2818587379) {
    selectionsHEX3D_2818573081(self_2818587379, HEX26_2818586563(selections_2818572800(self_2818587379), [nimCopy(null, getNextFindResult_2818583552(self_2818587379, selection_2818572803(self_2818587379).Field1, 0), NTI2449473547)]));

  
}

function addNextFindResultToSelectionJsWrapper_2818587374(self_2818587415) {
    addNextFindResultToSelection_2818587378(self_2818587415);

  
}
editor_text_prototype.addNextFindResultToSelection = function() { return (addNextFindResultToSelectionJsWrapper_2818587374(this));};

function addPrevFindResultToSelection_2818587436(self_2818587437) {
    selectionsHEX3D_2818573081(self_2818587437, HEX26_2818586563(selections_2818572800(self_2818587437), [nimCopy(null, getPrevFindResult_2818583548(self_2818587437, selection_2818572803(self_2818587437).Field0, 0), NTI2449473547)]));

  
}

function addPrevFindResultToSelectionJsWrapper_2818587432(self_2818587473) {
    addPrevFindResultToSelection_2818587436(self_2818587473);

  
}
editor_text_prototype.addPrevFindResultToSelection = function() { return (addPrevFindResultToSelectionJsWrapper_2818587432(this));};

function len_2818587565(t_2818587568) {
  var result_2818587569 = 0;

    result_2818587569 = t_2818587568.counter;

  return result_2818587569;

}

function setAllFindResultToSelection_2818587494(self_2818587495) {
    var selections_2818587500 = [];
    Label1: {
      var searchResults_2818587802 = [];
      var L_2818587871 = len_2818587565(self_2818587495.searchResults);
      Label2: {
        var h_2818587873 = 0;
        var colontmp__2818587874 = 0;
        colontmp__2818587874 = (self_2818587495.searchResults.data).length - 1;
        var res_2818587875 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818587875 <= colontmp__2818587874)) break Label4;
              h_2818587873 = res_2818587875;
              if (isFilled_1308622880(self_2818587495.searchResults.data[chckIndx(h_2818587873, 0, (self_2818587495.searchResults.data).length - 1)].Field0)) {
              searchResults_2818587802 = self_2818587495.searchResults.data[chckIndx(h_2818587873, 0, (self_2818587495.searchResults.data).length - 1)]["Field2"];
              Label5: {
                var s_2818587806 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                var i_2818587864 = 0;
                var L_2818587865 = (searchResults_2818587802).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_2818587864 < L_2818587865)) break Label7;
                      s_2818587806 = searchResults_2818587802[chckIndx(i_2818587864, 0, (searchResults_2818587802).length - 1)];
                      var Temporary8 = nimCopy(null, s_2818587806, NTI2449473547);
                      selections_2818587500.push(Temporary8);;
                      i_2818587864 = addInt(i_2818587864, 1);
                      if (!(((searchResults_2818587802).length == L_2818587865))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_2818587565(self_2818587495.searchResults) == L_2818587871))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818587875 = addInt(res_2818587875, 1);
            }
        };
      };
    };
    selectionsHEX3D_2818573081(self_2818587495, selections_2818587500);

  
}

function setAllFindResultToSelectionJsWrapper_2818587490(self_2818587847) {
    setAllFindResultToSelection_2818587494(self_2818587847);

  
}
editor_text_prototype.setAllFindResultToSelection = function() { return (setAllFindResultToSelectionJsWrapper_2818587490(this));};

function clearSelections_2818587883(self_2818587884) {
    if ((1 < (selections_2818572800(self_2818587884)).length)) {
    selectionHEX3D_2818572809(self_2818587884, selection_2818572803(self_2818587884));
    }
    else {
    selectionHEX3D_2818572809(self_2818587884, toSelection_2449474029(selection_2818572803(self_2818587884).Field1));
    }
    

  
}

function clearSelectionsJsWrapper_2818587879(self_2818587918) {
    clearSelections_2818587883(self_2818587918);

  
}
editor_text_prototype.clearSelections = function() { return (clearSelectionsJsWrapper_2818587879(this));};

function map_2818583757(s_2818583760, op_2818583762) {
  var result_2818583763 = [];

    result_2818583763 = new Array(chckRange((s_2818583760).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818583760).length, 0, 2147483647) ; ++i) { result_2818583763[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818583778 = 0;
      var colontmp__2818588038 = 0;
      colontmp__2818588038 = (s_2818583760).length;
      var i_2818588039 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588039 < colontmp__2818588038)) break Label3;
            i_2818583778 = i_2818588039;
            result_2818583763[chckIndx(i_2818583778, 0, (result_2818583763).length - 1)] = nimCopy(result_2818583763[chckIndx(i_2818583778, 0, (result_2818583763).length - 1)], op_2818583762(s_2818583760[chckIndx(i_2818583778, 0, (s_2818583760).length - 1)]), NTI2818578483);
            i_2818588039 = addInt(i_2818588039, 1);
          }
      };
    };

  return result_2818583763;

}

function moveCursor_2818583702(self_2818583703, cursor_2818583704, movement_2818583709, offset_2818583710, all_2818583711) {
      
function HEX3Aanonymous_2818583722(s_2818583729) {
        var result_2818583732 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818583732 = nimCopy(result_2818583732, toSelection_2449474029(movement_2818583709(self_2818583703, s_2818583729.Field1, offset_2818583710)), NTI2449473547);

        return result_2818583732;

      }
      
function HEX3Aanonymous_2818583746(s_2818583753) {
        var result_2818583756 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818588025 = movement_2818583709(self_2818583703, s_2818583753.Field0, offset_2818583710);
          var colontmp__2818588026 = nimCopy(null, s_2818583753.Field1, NTI2449473545);
          result_2818583756 = nimCopy(result_2818583756, {Field0: nimCopy(null, colontmp__2818588025, NTI2449473545), Field1: nimCopy(null, colontmp__2818588026, NTI2449473545)}, NTI2818578483);

        return result_2818583756;

      }
      
function HEX3Aanonymous_2818583789(s_2818583796) {
        var result_2818583799 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818588029 = nimCopy(null, s_2818583796.Field0, NTI2449473545);
          var colontmp__2818588030 = movement_2818583709(self_2818583703, s_2818583796.Field1, offset_2818583710);
          result_2818583799 = nimCopy(result_2818583799, {Field0: nimCopy(null, colontmp__2818588029, NTI2449473545), Field1: nimCopy(null, colontmp__2818588030, NTI2449473545)}, NTI2818578525);

        return result_2818583799;

      }
      
function HEX3Aanonymous_2818583816(s_2818583823) {
        var result_2818583826 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818588033 = nimCopy(null, s_2818583823.Field1, NTI2449473545);
          var colontmp__2818588034 = movement_2818583709(self_2818583703, s_2818583823.Field1, offset_2818583710);
          result_2818583826 = nimCopy(result_2818583826, {Field0: nimCopy(null, colontmp__2818588033, NTI2449473545), Field1: nimCopy(null, colontmp__2818588034, NTI2449473545)}, NTI2818578557);

        return result_2818583826;

      }

    switch (cursor_2818583704) {
    case 0:
      var configCursor_2818583721 = getOption_2818583641(self_2818583703.editor, getContextWithMode_2818583607(self_2818583703, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      moveCursor_2818583702(self_2818583703, configCursor_2818583721, movement_2818583709, offset_2818583710, all_2818583711);
      break;
    case 1:
      if (all_2818583711) {
      selectionsHEX3D_2818573081(self_2818583703, map_2818572733(selections_2818572800(self_2818583703), HEX3Aanonymous_2818583722));
      }
      else {
        var selections_2818583739 = selections_2818572800(self_2818583703);
        selections_2818583739[chckIndx((selections_2818583739).length - 1, 0, (selections_2818583739).length - 1)] = nimCopy(selections_2818583739[chckIndx((selections_2818583739).length - 1, 0, (selections_2818583739).length - 1)], toSelection_2449474029(movement_2818583709(self_2818583703, selections_2818583739[chckIndx((selections_2818583739).length - 1, 0, (selections_2818583739).length - 1)].Field1, offset_2818583710)), NTI2449473547);
        selectionsHEX3D_2818573081(self_2818583703, selections_2818583739);
      }
      
      scrollToCursor_2818583566(self_2818583703, selection_2818572803(self_2818583703).Field1, false);
      break;
    case 2:
      if (all_2818583711) {
      selectionsHEX3D_2818573081(self_2818583703, map_2818583757(selections_2818572800(self_2818583703), HEX3Aanonymous_2818583746));
      }
      else {
        var selections_2818583779 = selections_2818572800(self_2818583703);
        var colontmp__2818588027 = movement_2818583709(self_2818583703, selections_2818583779[chckIndx((selections_2818583779).length - 1, 0, (selections_2818583779).length - 1)].Field0, offset_2818583710);
        var colontmp__2818588028 = nimCopy(null, selections_2818583779[chckIndx((selections_2818583779).length - 1, 0, (selections_2818583779).length - 1)].Field1, NTI2449473545);
        selections_2818583779[chckIndx((selections_2818583779).length - 1, 0, (selections_2818583779).length - 1)] = nimCopy(selections_2818583779[chckIndx((selections_2818583779).length - 1, 0, (selections_2818583779).length - 1)], {Field0: nimCopy(null, colontmp__2818588027, NTI2449473545), Field1: nimCopy(null, colontmp__2818588028, NTI2449473545)}, NTI2449473547);
        selectionsHEX3D_2818573081(self_2818583703, selections_2818583779);
      }
      
      scrollToCursor_2818583566(self_2818583703, selection_2818572803(self_2818583703).Field0, false);
      break;
    case 3:
      if (all_2818583711) {
      selectionsHEX3D_2818573081(self_2818583703, map_2818583757(selections_2818572800(self_2818583703), HEX3Aanonymous_2818583789));
      }
      else {
        var selections_2818583806 = selections_2818572800(self_2818583703);
        var colontmp__2818588031 = nimCopy(null, selections_2818583806[chckIndx((selections_2818583806).length - 1, 0, (selections_2818583806).length - 1)].Field0, NTI2449473545);
        var colontmp__2818588032 = movement_2818583709(self_2818583703, selections_2818583806[chckIndx((selections_2818583806).length - 1, 0, (selections_2818583806).length - 1)].Field1, offset_2818583710);
        selections_2818583806[chckIndx((selections_2818583806).length - 1, 0, (selections_2818583806).length - 1)] = nimCopy(selections_2818583806[chckIndx((selections_2818583806).length - 1, 0, (selections_2818583806).length - 1)], {Field0: nimCopy(null, colontmp__2818588031, NTI2449473545), Field1: nimCopy(null, colontmp__2818588032, NTI2449473545)}, NTI2449473547);
        selectionsHEX3D_2818573081(self_2818583703, selections_2818583806);
      }
      
      scrollToCursor_2818583566(self_2818583703, selection_2818572803(self_2818583703).Field1, false);
      break;
    case 4:
      if (all_2818583711) {
      selectionsHEX3D_2818573081(self_2818583703, map_2818583757(selections_2818572800(self_2818583703), HEX3Aanonymous_2818583816));
      }
      else {
        var selections_2818583833 = selections_2818572800(self_2818583703);
        var colontmp__2818588035 = nimCopy(null, selections_2818583833[chckIndx((selections_2818583833).length - 1, 0, (selections_2818583833).length - 1)].Field1, NTI2449473545);
        var colontmp__2818588036 = movement_2818583709(self_2818583703, selections_2818583833[chckIndx((selections_2818583833).length - 1, 0, (selections_2818583833).length - 1)].Field1, offset_2818583710);
        selections_2818583833[chckIndx((selections_2818583833).length - 1, 0, (selections_2818583833).length - 1)] = nimCopy(selections_2818583833[chckIndx((selections_2818583833).length - 1, 0, (selections_2818583833).length - 1)], {Field0: nimCopy(null, colontmp__2818588035, NTI2449473545), Field1: nimCopy(null, colontmp__2818588036, NTI2449473545)}, NTI2449473547);
        selectionsHEX3D_2818573081(self_2818583703, selections_2818583833);
      }
      
      scrollToCursor_2818583566(self_2818583703, selection_2818572803(self_2818583703).Field1, false);
      break;
    }

  
}

function moveCursorColumn_2818587939(self_2818587940, distance_2818587941, cursor_2818587942, all_2818587943) {
    moveCursor_2818583702(self_2818587940, cursor_2818587942, doMoveCursorColumn_2818583515, distance_2818587941, all_2818587943);
    updateTargetColumn_2818584599(self_2818587940, cursor_2818587942);

  
}

function moveCursorColumnJsWrapper_2818587935(self_2818587992, distance_2818587993, cursor_2818587994, all_2818587995) {
    moveCursorColumn_2818587939(self_2818587992, distance_2818587993, cursor_2818587994, all_2818587995);

  
}
editor_text_prototype.moveCursorColumn = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorColumnJsWrapper_2818587935(this, distance_, cursor_, all_));};

function moveCursorLine_2818588047(self_2818588048, distance_2818588049, cursor_2818588050, all_2818588051) {
    moveCursor_2818583702(self_2818588048, cursor_2818588050, doMoveCursorLine_2818583525, distance_2818588049, all_2818588051);

  
}

function moveCursorLineJsWrapper_2818588043(self_2818588082, distance_2818588083, cursor_2818588084, all_2818588085) {
    moveCursorLine_2818588047(self_2818588082, distance_2818588083, cursor_2818588084, all_2818588085);

  
}
editor_text_prototype.moveCursorLine = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorLineJsWrapper_2818588043(this, distance_, cursor_, all_));};

function doMoveCursorHome_2818583538(self_2818583539, cursor_2818583540, offset_2818583541) {
  var result_2818583542 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818588181 = cursor_2818583540.Field0;
    var colontmp__2818588182 = 0;
    result_2818583542 = nimCopy(result_2818583542, {Field0: colontmp__2818588181, Field1: colontmp__2818588182}, NTI2449473545);
    break BeforeRet;
  };

  return result_2818583542;

}

function moveCursorHome_2818588121(self_2818588122, cursor_2818588123, all_2818588124) {
    moveCursor_2818583702(self_2818588122, cursor_2818588123, doMoveCursorHome_2818583538, 0, all_2818588124);
    updateTargetColumn_2818584599(self_2818588122, cursor_2818588123);

  
}

function moveCursorHomeJsWrapper_2818588117(self_2818588154, cursor_2818588155, all_2818588156) {
    moveCursorHome_2818588121(self_2818588154, cursor_2818588155, all_2818588156);

  
}
editor_text_prototype.moveCursorHome = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorHomeJsWrapper_2818588117(this, cursor_, all_));};

function doMoveCursorEnd_2818583543(self_2818583544, cursor_2818583545, offset_2818583546) {
  var result_2818583547 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818588249 = cursor_2818583545.Field0;
    var colontmp__2818588250 = lineLength_2818572671(self_2818583544.document, cursor_2818583545.Field0);
    result_2818583547 = nimCopy(result_2818583547, {Field0: colontmp__2818588249, Field1: colontmp__2818588250}, NTI2449473545);
    break BeforeRet;
  };

  return result_2818583547;

}

function moveCursorEnd_2818588189(self_2818588190, cursor_2818588191, all_2818588192) {
    moveCursor_2818583702(self_2818588190, cursor_2818588191, doMoveCursorEnd_2818583543, 0, all_2818588192);
    updateTargetColumn_2818584599(self_2818588190, cursor_2818588191);

  
}

function moveCursorEndJsWrapper_2818588185(self_2818588222, cursor_2818588223, all_2818588224) {
    moveCursorEnd_2818588189(self_2818588222, cursor_2818588223, all_2818588224);

  
}
editor_text_prototype.moveCursorEnd = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorEndJsWrapper_2818588185(this, cursor_, all_));};

function getLine_2818572664(self_2818572665, line_2818572666) {
  var result_2818572667 = [];

  BeforeRet: {
    if ((line_2818572666 < (self_2818572665.lines).length)) {
    result_2818572667 = nimCopy(null, self_2818572665.lines[chckIndx(line_2818572666, 0, (self_2818572665.lines).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    result_2818572667 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2818572667;

}

function nsuFindStr(s_855639735, sub_855639736, start_855639737, last_855639738) {
  var result_855639739 = 0;

  BeforeRet: {
    if ((subInt((s_855639735).length, start_855639737) < (sub_855639736).length)) {
    result_855639739 = -1;
    break BeforeRet;
    }
    
    if (((sub_855639736).length == 1)) {
    result_855639739 = nsuFindChar(s_855639735, sub_855639736[chckIndx(0, 0, (sub_855639736).length - 1)], start_855639737, last_855639738);
    break BeforeRet;
    }
    
    result_855639739 = nsuFindStrA(nsuInitNewSkipTable(sub_855639736), s_855639735, sub_855639736, start_855639737, last_855639738);
  };

  return result_855639739;

}

function moveCursorTo_2818588257(self_2818588258, str_2818588259, cursor_2818588260, all_2818588261) {
    str_2818588259 = nimCopy(null, str_2818588259, NTI33554449);
    
function doMoveCursorTo_2818588262(self_2818588263, cursor_2818588264, offset_2818588265) {
      var result_2818588266 = {Field0: 0, Field1: 0};

        var line_2818588267 = getLine_2818572664(self_2818588263.document, cursor_2818588264.Field0);
        result_2818588266 = nimCopy(result_2818588266, cursor_2818588264, NTI2449473545);
        var index_2818588268 = nsuFindStr(line_2818588267, str_2818588259, chckRange(addInt(cursor_2818588264.Field1, 1), 0, 2147483647), -1);
        if ((0 <= index_2818588268)) {
        var colontmp__2818588332 = cursor_2818588264.Field0;
        var colontmp__2818588333 = index_2818588268;
        result_2818588266 = nimCopy(result_2818588266, {Field0: colontmp__2818588332, Field1: colontmp__2818588333}, NTI2449473545);
        }
        

      return result_2818588266;

    }

    moveCursor_2818583702(self_2818588258, cursor_2818588260, doMoveCursorTo_2818588262, 0, all_2818588261);
    updateTargetColumn_2818584599(self_2818588258, cursor_2818588260);

  
}

function moveCursorToJsWrapper_2818588253(self_2818588299, str_2818588300, cursor_2818588301, all_2818588302) {
    moveCursorTo_2818588257(self_2818588299, str_2818588300, cursor_2818588301, all_2818588302);

  
}
editor_text_prototype.moveCursorTo = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorToJsWrapper_2818588253(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function moveCursorBefore_2818588340(self_2818588341, str_2818588342, cursor_2818588343, all_2818588344) {
    str_2818588342 = nimCopy(null, str_2818588342, NTI33554449);
    
function doMoveCursorBefore_2818588345(self_2818588346, cursor_2818588347, offset_2818588348) {
      var result_2818588349 = {Field0: 0, Field1: 0};

        var line_2818588350 = getLine_2818572664(self_2818588346.document, cursor_2818588347.Field0);
        result_2818588349 = nimCopy(result_2818588349, cursor_2818588347, NTI2449473545);
        var index_2818588351 = nsuFindStr(line_2818588350, str_2818588342, chckRange(cursor_2818588347.Field1, 0, 2147483647), -1);
        if ((0 < index_2818588351)) {
        var colontmp__2818588415 = cursor_2818588347.Field0;
        var colontmp__2818588416 = subInt(index_2818588351, 1);
        result_2818588349 = nimCopy(result_2818588349, {Field0: colontmp__2818588415, Field1: colontmp__2818588416}, NTI2449473545);
        }
        

      return result_2818588349;

    }

    moveCursor_2818583702(self_2818588341, cursor_2818588343, doMoveCursorBefore_2818588345, 0, all_2818588344);
    updateTargetColumn_2818584599(self_2818588341, cursor_2818588343);

  
}

function moveCursorBeforeJsWrapper_2818588336(self_2818588382, str_2818588383, cursor_2818588384, all_2818588385) {
    moveCursorBefore_2818588340(self_2818588382, str_2818588383, cursor_2818588384, all_2818588385);

  
}
editor_text_prototype.moveCursorBefore = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorBeforeJsWrapper_2818588336(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function doMoveCursorNextFindResult_2818583561(self_2818583562, cursor_2818583563, offset_2818583564) {
  var result_2818583565 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818583565 = nimCopy(result_2818583565, getNextFindResult_2818583552(self_2818583562, cursor_2818583563, offset_2818583564).Field0, NTI2449473545);
    break BeforeRet;
  };

  return result_2818583565;

}

function moveCursorNextFindResult_2818588423(self_2818588424, cursor_2818588425, all_2818588426) {
    moveCursor_2818583702(self_2818588424, cursor_2818588425, doMoveCursorNextFindResult_2818583561, 0, all_2818588426);
    updateTargetColumn_2818584599(self_2818588424, cursor_2818588425);

  
}

function moveCursorNextFindResultJsWrapper_2818588419(self_2818588456, cursor_2818588457, all_2818588458) {
    moveCursorNextFindResult_2818588423(self_2818588456, cursor_2818588457, all_2818588458);

  
}
editor_text_prototype.moveCursorNextFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorNextFindResultJsWrapper_2818588419(this, cursor_, all_));};

function doMoveCursorPrevFindResult_2818583556(self_2818583557, cursor_2818583558, offset_2818583559) {
  var result_2818583560 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818583560 = nimCopy(result_2818583560, getPrevFindResult_2818583548(self_2818583557, cursor_2818583558, offset_2818583559).Field0, NTI2449473545);
    break BeforeRet;
  };

  return result_2818583560;

}

function moveCursorPrevFindResult_2818588489(self_2818588490, cursor_2818588491, all_2818588492) {
    moveCursor_2818583702(self_2818588490, cursor_2818588491, doMoveCursorPrevFindResult_2818583556, 0, all_2818588492);
    updateTargetColumn_2818584599(self_2818588490, cursor_2818588491);

  
}

function moveCursorPrevFindResultJsWrapper_2818588485(self_2818588522, cursor_2818588523, all_2818588524) {
    moveCursorPrevFindResult_2818588489(self_2818588522, cursor_2818588523, all_2818588524);

  
}
editor_text_prototype.moveCursorPrevFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorPrevFindResultJsWrapper_2818588485(this, cursor_, all_));};

function scrollToCursor_2818584036(self_2818584037, cursor_2818584038) {
    scrollToCursor_2818583566(self_2818584037, getCursor_2818583637(self_2818584037, cursor_2818584038), false);

  
}

function scrollToCursorJsWrapper_2818588551(self_2818588586, cursor_2818588587) {
    scrollToCursor_2818584036(self_2818588586, cursor_2818588587);

  
}
editor_text_prototype.scrollToCursor = function(cursor_ /* : SelectionCursor */) { return (scrollToCursorJsWrapper_2818588551(this, cursor_));};

function deinit_2885681592(self_2885681593) {
  
}

function deinit_2885681594(self_2885681595) {
  
}

function nossplitFile(path_1426063614) {
            var Temporary4;

  var result_1426063618 = {Field0: [], Field1: [], Field2: []};

    var namePos_1426063619 = 0;
    var dotPos_1426063620 = 0;
    Label1: {
      var i_1426063627 = 0;
      var colontmp__2818588658 = 0;
      colontmp__2818588658 = subInt((path_1426063614).length, 1);
      var res_2818588659 = colontmp__2818588658;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818588659)) break Label3;
            i_1426063627 = res_2818588659;
            if (((ConstSet49[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined) || (i_1426063627 == 0))) {
            if ((ConstSet50[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined)) {
            if ((1 <= i_1426063627)) {
            Temporary4 = subInt(i_1426063627, 1);
            }
            else {
            Temporary4 = 0;
            }
            
            result_1426063618.Field0 = nimCopy(null, substr_33557821(path_1426063614, 0, Temporary4), NTI33554449);
            namePos_1426063619 = addInt(i_1426063627, 1);
            }
            
            if ((i_1426063627 < dotPos_1426063620)) {
            result_1426063618.Field1 = nimCopy(null, substr_33557821(path_1426063614, namePos_1426063619, subInt(dotPos_1426063620, 1)), NTI33554449);
            result_1426063618.Field2 = nimCopy(null, substr_33557833(path_1426063614, dotPos_1426063620), NTI33554449);
            }
            else {
              result_1426063618.Field1 = nimCopy(null, substr_33557833(path_1426063614, namePos_1426063619), NTI33554449);
            }
            
            break Label1;
            }
            else {
            if (((((((path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)] == 46) && (0 < i_1426063627)) && (i_1426063627 < subInt((path_1426063614).length, 1))) && !((ConstSet51[path_1426063614[chckIndx(subInt(i_1426063627, 1), 0, (path_1426063614).length - 1)]] != undefined))) && !((path_1426063614[chckIndx(addInt(i_1426063627, 1), 0, (path_1426063614).length - 1)] == 46))) && (dotPos_1426063620 == 0))) {
            dotPos_1426063620 = i_1426063627;
            }
            }
            res_2818588659 = subInt(res_2818588659, 1);
          }
      };
    };

  return result_1426063618;

}

function none_2348810263() {
  var result_2348810270 = ({val: [], has: false});

  return result_2348810270;

}

function some_2281701410(val_2281701412) {
  var result_2281701413 = ({val: [], has: false});

    result_2281701413.has = true;
    result_2281701413.val = nimCopy(null, val_2281701412, NTI33554449);

  return result_2281701413;

}

function getLanguageForFile_2902458372(filename_2902458373) {
    var Temporary1;

  var result_2902458375 = ({val: [], has: false});

  BeforeRet: {
    var extension_2902458376 = nimCopy(null, nossplitFile(filename_2902458373).Field2, NTI33554449);
    if ((0 < (extension_2902458376).length)) {
    extension_2902458376 = nimCopy(null, HEX5BHEX5D_855639319(extension_2902458376, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    switch (toJSStr(extension_2902458376)) {
    case "c":
    case "cc":
    case "inc":
      Temporary1 = [99];
      break;
    case "sh":
      Temporary1 = [98,97,115,104];
      break;
    case "cs":
      Temporary1 = [99,115,104,97,114,112];
      break;
    case "cpp":
    case "hpp":
    case "h":
      Temporary1 = [99,112,112];
      break;
    case "css":
      Temporary1 = [99,115,115];
      break;
    case "go":
      Temporary1 = [103,111];
      break;
    case "hs":
      Temporary1 = [104,97,115,107,101,108,108];
      break;
    case "html":
      Temporary1 = [104,116,109,108];
      break;
    case "java":
      Temporary1 = [106,97,118,97];
      break;
    case "js":
    case "jsx":
    case "json":
      Temporary1 = [106,97,118,97,115,99,114,105,112,116];
      break;
    case "ocaml":
      Temporary1 = [111,99,97,109,108];
      break;
    case "php":
      Temporary1 = [112,104,112];
      break;
    case "py":
      Temporary1 = [112,121,116,104,111,110];
      break;
    case "ruby":
      Temporary1 = [114,117,98,121];
      break;
    case "rs":
      Temporary1 = [114,117,115,116];
      break;
    case "scala":
      Temporary1 = [115,99,97,108,97];
      break;
    case "ts":
      Temporary1 = [116,121,112,101,115,99,114,105,112,116];
      break;
    case "nim":
    case "nims":
      Temporary1 = [110,105,109];
      break;
    case "zig":
      Temporary1 = [122,105,103];
      break;
    default: 
      var fmtRes_2902458399 = [mnewString(0)];
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [85,110,107,110,111,119,110,32,102,105,108,101,32,101,120,116,101,110,115,105,111,110,32,39]);;
      formatValue_721420459(fmtRes_2902458399, 0, extension_2902458376, []);
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [39]);;
      log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2902458399[0], NTI33554449)]);
      result_2902458375 = nimCopy(result_2902458375, none_2348810263(), NTI2348810261);
      break BeforeRet;
      break;
    }
    var languageId_2902458407 = nimCopy(null, Temporary1, NTI33554449);
    result_2902458375 = nimCopy(result_2902458375, some_2281701410(languageId_2902458407), NTI2348810261);
    break BeforeRet;
  };

  return result_2902458375;

}

function isSome_2348810304(self_2348810306) {
  var result_2348810307 = false;

    result_2348810307 = self_2348810306.has;

  return result_2348810307;

}

function isNone_2818578913(self_2818578915) {
  var result_2818578916 = false;

    result_2818578916 = !(self_2818578915.has);

  return result_2818578916;

}

function get_2818578905(self_2818578907) {
  var result_2818578908 = [];

    if (isNone_2818578913(self_2818578907)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578908 = self_2818578907["val"];

  return result_2818578908;

}

function getOption_2818578921(editor_2818578923, path_2818578924, default_2818578925) {
  var result_2818578931 = null;

  BeforeRet: {
    if ((editor_2818578923 == null)) {
    result_2818578931 = default_2818578925;
    break BeforeRet;
    }
    
    var node_2818578943 = HEX7BHEX7D_1627393316(editor_2818578923.options, nsuSplitString(path_2818578924, [46], -1));
    if ((node_2818578943 == null)) {
    result_2818578931 = default_2818578925;
    break BeforeRet;
    }
    
    result_2818578931 = node_2818578943;
    break BeforeRet;
  };

  return result_2818578931;

}

function initOrderedTable_1627390053(initialSize_1627390056) {
  var result_1627390057 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1627390059 = slotsNeeded_1308622891(chckRange(initialSize_1627390056, 0, 2147483647));
    result_1627390057.counter = 0;
    result_1627390057.data = new Array(chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647) ; ++i) { result_1627390057.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1627390057.first = -1;
    result_1627390057.last = -1;

  return result_1627390057;

}

function newJObject_1627390051() {
  var result_1627390052 = null;

    result_1627390052 = {kind: 5, fields: initOrderedTable_1627390053(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1627390052;

}

function rawGet_1627390328(t_1627390331, key_1627390332, hc_1627390333, hc_1627390333_Idx) {
  var result_1627390334 = 0;

  BeforeRet: {
    hc_1627390333[hc_1627390333_Idx] = hash_1325400491(key_1627390332);
    if ((hc_1627390333[hc_1627390333_Idx] == 0)) {
    hc_1627390333[hc_1627390333_Idx] = 314159265;
    }
    
    if (((t_1627390331.data).length == 0)) {
    result_1627390334 = -1;
    break BeforeRet;
    }
    
    var h_1627390385 = (hc_1627390333[hc_1627390333_Idx] & (t_1627390331.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0)) break Label2;
          if (((t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0 == hc_1627390333[hc_1627390333_Idx]) && eqStrings(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field2, key_1627390332))) {
          result_1627390334 = h_1627390385;
          break BeforeRet;
          }
          
          h_1627390385 = nextTry_1308622883(h_1627390385, (t_1627390331.data).length - 1);
        }
    };
    result_1627390334 = subInt(-1, h_1627390385);
  };

  return result_1627390334;

}

function hasKey_1627392538(t_1627392541, key_1627392542) {
  var result_1627392543 = false;

    var hc_1627392544 = [0];
    result_1627392543 = (0 <= rawGet_1627390328(t_1627392541, key_1627392542, hc_1627392544, 0));

  return result_1627392543;

}

function hasKey_1627393154(node_1627393155, key_1627393156) {
    var Temporary1;

  var result_1627393157 = false;

    if (!((node_1627393155.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,57,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393155;
    if (ConstSet52[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393157 = hasKey_1627392538(Temporary1.fields, key_1627393156);

  return result_1627393157;

}

function HEX5BHEX5D_1627392612(t_1627392615, key_1627392616) {
  var result_1627392617 = null;
  var result_1627392617_Idx = 0;

    var hcHEX60gensym89_1627392618 = [0];
    var indexHEX60gensym89_1627392839 = rawGet_1627392619(t_1627392615, key_1627392616, hcHEX60gensym89_1627392618, 0);
    if ((0 <= indexHEX60gensym89_1627392839)) {
    result_1627392617 = t_1627392615.data[chckIndx(indexHEX60gensym89_1627392839, 0, (t_1627392615.data).length - 1)]; result_1627392617_Idx = "Field3";
    }
    else {
    raiseKeyError_1627392893(key_1627392616);
    }
    

  return [result_1627392617, result_1627392617_Idx];

}

function HEX5BHEX5D_1627393037(node_1627393038, name_1627393039) {
    var Temporary1;
    var Temporary2;

  var result_1627393040 = null;

    if (!(!((node_1627393038 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393038.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393038;
    if (ConstSet53[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393040 = (Temporary2 = HEX5BHEX5D_1627392612(Temporary1.fields, name_1627393039), Temporary2)[0][Temporary2[1]];

  return result_1627393040;

}

function none_2885681453() {
  var result_2885681459 = ({val: null});

  return result_2885681459;

}

function some_2885681464(val_2885681466) {
  var result_2885681467 = ({val: null});

    if (!(!((val_2885681466 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2885681467.val = val_2885681466;

  return result_2885681467;

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentExceptionMsg_33556469() {
  var result_33556470 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556456()) {
    result_33556470 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556475 = null;
            if (lastJSError.message !== undefined) {
        msg_33556475 = lastJSError.message;
      }
      
      if (!((msg_33556475 == null))) {
      result_33556470 = nimCopy(null, cstrToNimstr(msg_33556475), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556470 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556470;

}
async function loadLanguageDynamically_2885681415(languageId_2885681416, config_2885681417) {
    var Temporary2;

  var result_2885681424 = null;

  BeforeRet: {
++excHandler;
    try {
    if (hasKey_1627393154(config_2885681417, [119,97,115,109])) {
    Temporary2 = getStr_1627390106(HEX5BHEX5D_1627393037(config_2885681417, [119,97,115,109]), []);
    }
    else {
      var fmtRes_2885681438 = [mnewString(0)];
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [108,97,110,103,117,97,103,101,115,47,116,114,101,101,45,115,105,116,116,101,114,45]);;
      formatValue_721420459(fmtRes_2885681438, 0, languageId_2885681416, []);
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [46,119,97,115,109]);;
    Temporary2 = fmtRes_2885681438[0];
    }
    
    var wasmPath_2885681439 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_2885681444 = [mnewString(0)];
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [84,114,121,105,110,103,32,116,111,32,108,111,97,100,32,116,114,101,101,115,105,116,116,101,114,32,102,114,111,109,32,39]);;
    formatValue_721420459(fmtRes_2885681444, 0, wasmPath_2885681439, []);
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2885681444[0], NTI33554449)]);
    var language_2885681449 = (await loadTreesitterLanguage(toJSStr(wasmPath_2885681439)));
    if ((language_2885681449 == null)) {
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    
    result_2885681424 = some_2885681464(language_2885681449);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2885681494 = [mnewString(0)];
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [91,116,101,120,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,108,97,110,103,117,97,103,101,32,102,114,111,109,32,119,97,115,109,58,32,39]);;
    formatValue_721420459(fmtRes_2885681494, 0, languageId_2885681416, []);
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [39,58,32]);;
    formatValue_721420459(fmtRes_2885681494, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2885681494[0], NTI33554449)]);
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2885681424;

}

function isSome_2885681559(self_2885681561) {
  var result_2885681562 = false;

    result_2885681562 = !((self_2885681561.val == null));

  return result_2885681562;

}
async function loadLanguage_2885681535(languageId_2885681536, config_2885681537) {
  var result_2885681540 = null;

  BeforeRet: {
    var language_2885681554 = (await loadLanguageDynamically_2885681415(languageId_2885681536, config_2885681537));
    if (isSome_2885681559(language_2885681554)) {
    result_2885681540 = language_2885681554;
    break BeforeRet;
    }
    
    result_2885681540 = none_2885681453();
    break BeforeRet;
  };

  return result_2885681540;

}

function isNone_2818578957(self_2818578959) {
  var result_2818578960 = false;

    result_2818578960 = (self_2818578959.val == null);

  return result_2818578960;

}

function createTsParser_2885681581() {
  var result_2885681582 = null;

  BeforeRet: {
    result_2885681582 = new Parser();
    break BeforeRet;
  };

  return result_2885681582;

}

function get_2818578990(self_2818578992) {
  var result_2818578993 = null;
  var result_2818578993_Idx = 0;

  BeforeRet: {
    if (isNone_2818578957(self_2818578992)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578993 = self_2818578992; result_2818578993_Idx = "val";
    break BeforeRet;
  };

  return [result_2818578993, result_2818578993_Idx];

}

function contentString_2818574086(document_2818574087) {
  var result_2818574088 = [];

  BeforeRet: {
    result_2818574088 = nimCopy(null, nsuJoinSep(document_2818574087.lines, [10]), NTI33554449);
    break BeforeRet;
  };

  return result_2818574088;

}

function none_2885681218() {
  var result_2885681224 = ({val: null});

  return result_2885681224;

}
async function initTreesitter_2818578868(self_2818578869) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary6;

  var result_2818578871 = null;

  BeforeRet: {
    if (!((self_2818578869.tsParser == null))) {
    deinit_2885681592(self_2818578869.tsParser);
    self_2818578869.tsParser = null;
    }
    
    if (!((self_2818578869.highlightQuery == null))) {
    deinit_2885681594(self_2818578869.highlightQuery);
    self_2818578869.highlightQuery = null;
    }
    
      var oHEX60gensym88_2818578885 = getLanguageForFile_2902458372(self_2818578869.filename);
      if (!isSome_2348810304(oHEX60gensym88_2818578885)) Temporary2 = false; else {        var languageId_2818578919 = nimCopy(null, get_2818578905(oHEX60gensym88_2818578885), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818578919;
    }
    else {
      result_2818578871 = undefined;
      break BeforeRet;
    }
    
    var languageId_2818578920 = nimCopy(null, Temporary1, NTI33554449);
    var config_2818578947 = getOption_2818578921(gEditor, ([101,100,105,116,111,114,46,116,101,120,116,46,116,114,101,101,115,105,116,116,101,114,46] || []).concat(languageId_2818578920 || []), newJObject_1627390051());
    var language_2818578952 = [(await loadLanguage_2885681535(languageId_2818578920, config_2818578947))];
    if (isNone_2818578957(language_2818578952[0])) {
    var fmtRes_2818578969 = [mnewString(0)];
    fmtRes_2818578969[0].push.apply(fmtRes_2818578969[0], [76,97,110,103,117,97,103,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,58,32,39]);;
    formatValue_721420459(fmtRes_2818578969, 0, languageId_2818578920, []);
    fmtRes_2818578969[0].push.apply(fmtRes_2818578969[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578969[0], NTI33554449)]);
    result_2818578871 = undefined;
    break BeforeRet;
    }
    
    self_2818578869.tsParser = createTsParser_2885681581();
    if ((self_2818578869.tsParser == null)) {
    var fmtRes_2818578977 = [mnewString(0)];
    fmtRes_2818578977[0].push.apply(fmtRes_2818578977[0], [70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,115,32,112,97,114,115,101,114,32,102,111,114,58,32,39]);;
    formatValue_721420459(fmtRes_2818578977, 0, languageId_2818578920, []);
    fmtRes_2818578977[0].push.apply(fmtRes_2818578977[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578977[0], NTI33554449)]);
    result_2818578871 = undefined;
    break BeforeRet;
    }
    
    self_2818578869.tsParser.setLanguage((Temporary3 = get_2818578990(language_2818578952[0]), Temporary3)[0][Temporary3[1]]);
    self_2818578869.tsLanguage = (Temporary4 = get_2818578990(language_2818578952[0]), Temporary4)[0][Temporary4[1]];
    self_2818578869.currentTree = parseString_2885681211(self_2818578869.tsParser, contentString_2818574086(self_2818578869), none_2885681218());
++excHandler;
    try {
    var fmtRes_2818579030 = [mnewString(0)];
    fmtRes_2818579030[0].push.apply(fmtRes_2818579030[0], [46,47,108,97,110,103,117,97,103,101,115,47]);;
    formatValue_721420459(fmtRes_2818579030, 0, languageId_2818578920, []);
    fmtRes_2818579030[0].push.apply(fmtRes_2818579030[0], [47,113,117,101,114,105,101,115,47,104,105,103,104,108,105,103,104,116,115,46,115,99,109]);;
    var queryString_2818579031 = loadFile_2365587463(fs_2365587509, fmtRes_2818579030[0]);
    self_2818578869.highlightQuery = (Temporary6 = get_2818578990(language_2818578952[0]), Temporary6)[0][Temporary6[1]].query(toJSStr(queryString_2818579031));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818579051 = [mnewString(0)];
    fmtRes_2818579051[0].push.apply(fmtRes_2818579051[0], [91,116,101,120,116,101,100,105,116,93,32,78,111,32,104,105,103,104,108,105,103,104,116,32,113,117,101,114,105,101,115,32,102,111,117,110,100,32,102,111,114,32,39]);;
    formatValue_721420459(fmtRes_2818579051, 0, languageId_2818578920, []);
    fmtRes_2818579051[0].push.apply(fmtRes_2818579051[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818579051[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    notifyTextChanged_2818573266(self_2818578869);
    requestRender_2768240746(gEditor.platform, false);
    result_2818578871 = undefined;
    break BeforeRet;
  };

  return result_2818578871;

}

function reloadTreesitter_2818588613(self_2818588614) {
    log_1174405220(logger_704643272[0], 2, [[114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114]]);
    var _ = initTreesitter_2818578868(self_2818588614.document);

  
}

function reloadTreesitterJsWrapper_2818588609(self_2818588642) {
    reloadTreesitter_2818588613(self_2818588642);

  
}
editor_text_prototype.reloadTreesitter = function() { return (reloadTreesitterJsWrapper_2818588609(this));};

function deleteLeft_2818588669(self_2818588670) {
    var selections_2818588671 = selections_2818572800(self_2818588670);
    Label1: {
      var i_2818588677 = 0;
      var selection_2818588678 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818588724 = 0;
      var L_2818588725 = (selections_2818588671).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588724 < L_2818588725)) break Label3;
            i_2818588677 = i_2818588724;
            selection_2818588678 = nimCopy(selection_2818588678, selections_2818588671[chckIndx(i_2818588724, 0, (selections_2818588671).length - 1)], NTI2449473547);
            if (isEmpty_2449473908(selection_2818588678)) {
            var colontmp__2818588722 = doMoveCursorColumn_2818583515(self_2818588670, selection_2818588678.Field0, -1);
            var colontmp__2818588723 = nimCopy(null, selection_2818588678.Field0, NTI2449473545);
            selections_2818588671[chckIndx(i_2818588677, 0, (selections_2818588671).length - 1)] = nimCopy(selections_2818588671[chckIndx(i_2818588677, 0, (selections_2818588671).length - 1)], {Field0: nimCopy(null, colontmp__2818588722, NTI2449473545), Field1: nimCopy(null, colontmp__2818588723, NTI2449473545)}, NTI2449473547);
            }
            
            i_2818588724 = addInt(i_2818588724, 1);
            if (!(((selections_2818588671).length == L_2818588725))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573081(self_2818588670, delete_2818579354(self_2818588670.document, selections_2818588671, selections_2818572800(self_2818588670), true, true));
    updateTargetColumn_2818584599(self_2818588670, 3);

  
}

function deleteLeftJsWrapper_2818588665(self_2818588706) {
    deleteLeft_2818588669(self_2818588706);

  
}
editor_text_prototype.deleteLeft = function() { return (deleteLeftJsWrapper_2818588665(this));};

function deleteRight_2818588733(self_2818588734) {
    var selections_2818588735 = selections_2818572800(self_2818588734);
    Label1: {
      var i_2818588741 = 0;
      var selection_2818588742 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818588788 = 0;
      var L_2818588789 = (selections_2818588735).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588788 < L_2818588789)) break Label3;
            i_2818588741 = i_2818588788;
            selection_2818588742 = nimCopy(selection_2818588742, selections_2818588735[chckIndx(i_2818588788, 0, (selections_2818588735).length - 1)], NTI2449473547);
            if (isEmpty_2449473908(selection_2818588742)) {
            var colontmp__2818588786 = nimCopy(null, selection_2818588742.Field0, NTI2449473545);
            var colontmp__2818588787 = doMoveCursorColumn_2818583515(self_2818588734, selection_2818588742.Field0, 1);
            selections_2818588735[chckIndx(i_2818588741, 0, (selections_2818588735).length - 1)] = nimCopy(selections_2818588735[chckIndx(i_2818588741, 0, (selections_2818588735).length - 1)], {Field0: nimCopy(null, colontmp__2818588786, NTI2449473545), Field1: nimCopy(null, colontmp__2818588787, NTI2449473545)}, NTI2449473547);
            }
            
            i_2818588788 = addInt(i_2818588788, 1);
            if (!(((selections_2818588735).length == L_2818588789))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573081(self_2818588734, delete_2818579354(self_2818588734.document, selections_2818588735, selections_2818572800(self_2818588734), true, true));
    updateTargetColumn_2818584599(self_2818588734, 3);

  
}

function deleteRightJsWrapper_2818588729(self_2818588770) {
    deleteRight_2818588733(self_2818588770);

  
}
editor_text_prototype.deleteRight = function() { return (deleteRightJsWrapper_2818588729(this));};

function getCommandCount_2818588797(self_2818588798) {
  var result_2818588799 = 0;

  BeforeRet: {
    result_2818588799 = self_2818588798.commandCount;
    break BeforeRet;
  };

  return result_2818588799;

}

function getCommandCountJsWrapper_2818588793(self_2818588828) {
  var result_2818588829 = 0;

    result_2818588829 = getCommandCount_2818588797(self_2818588828);

  return result_2818588829;

}
editor_text_prototype.getCommandCount = function() { return (getCommandCountJsWrapper_2818588793(this));};

function setCommandCount_2818588854(self_2818588855, count_2818588856) {
    self_2818588855.commandCount = count_2818588856;

  
}

function setCommandCountJsWrapper_2818588850(self_2818588885, count_2818588886) {
    setCommandCount_2818588854(self_2818588885, count_2818588886);

  
}
editor_text_prototype.setCommandCount = function(count_ /* : int */) { return (setCommandCountJsWrapper_2818588850(this, count_));};

function setCommandCountRestore_2818588912(self_2818588913, count_2818588914) {
    self_2818588913.commandCountRestore = count_2818588914;

  
}

function setCommandCountRestoreJsWrapper_2818588908(self_2818588943, count_2818588944) {
    setCommandCountRestore_2818588912(self_2818588943, count_2818588944);

  
}
editor_text_prototype.setCommandCountRestore = function(count_ /* : int */) { return (setCommandCountRestoreJsWrapper_2818588908(this, count_));};

function updateCommandCount_2818588970(self_2818588971, digit_2818588972) {
    self_2818588971.commandCount = addInt(mulInt(self_2818588971.commandCount, 10), digit_2818588972);

  
}

function updateCommandCountJsWrapper_2818588966(self_2818589001, digit_2818589002) {
    updateCommandCount_2818588970(self_2818589001, digit_2818589002);

  
}
editor_text_prototype.updateCommandCount = function(digit_ /* : int */) { return (updateCommandCountJsWrapper_2818588966(this, digit_));};

function setFlag_2818589028(self_2818589029, name_2818589030, value_2818589031) {
    setFlag_1291848951(self_2818589029.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818589030 || []), value_2818589031);
    markDirty_2415919143(self_2818589029);

  
}

function setFlagJsWrapper_2818589024(self_2818589061, name_2818589062, value_2818589063) {
    setFlag_2818589028(self_2818589061, name_2818589062, value_2818589063);

  
}
editor_text_prototype.setFlag = function(name_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper_2818589024(this, name_ == undefined ? undefined : cstrToNimstr(name_), value_));};

function getFlag_2818589094(self_2818589095, name_2818589096) {
  var result_2818589097 = false;

  BeforeRet: {
    result_2818589097 = getFlag_1291848874(self_2818589095.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818589096 || []), false);
    break BeforeRet;
  };

  return result_2818589097;

}

function getFlagJsWrapper_2818589090(self_2818589127, name_2818589128) {
  var result_2818589129 = false;

    result_2818589129 = getFlag_2818589094(self_2818589127, name_2818589128);

  return result_2818589129;

}
editor_text_prototype.getFlag = function(name_ /* : string */) { return (getFlagJsWrapper_2818589090(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runAction_2818589164(self_2818589165, action_2818589166, args_2818589167) {
  var result_2818589168 = false;

  BeforeRet: {
    result_2818589168 = (handleActionInternal_2818572657(self_2818589165, action_2818589166, args_2818589167) == 3);
    break BeforeRet;
  };

  return result_2818589168;

}

function runActionJsWrapper_2818589160(self_2818589203, action_2818589204, args_2818589205) {
  var result_2818589206 = false;

    result_2818589206 = runAction_2818589164(self_2818589203, action_2818589204, args_2818589205);

  return result_2818589206;

}
editor_text_prototype.runAction = function(action_ /* : string */, args_ /* : JsonNode */) { return (runActionJsWrapper_2818589160(this, action_ == undefined ? undefined : cstrToNimstr(action_), args_));};

function nsuIsAlphaNumericChar(c_855638061) {
  var result_855638062 = false;

  BeforeRet: {
    result_855638062 = (ConstSet54[c_855638061] != undefined);
    break BeforeRet;
  };

  return result_855638062;

}

function charCategory_2818589230(c_2818589231) {
  var result_2818589232 = 0;

  BeforeRet: {
    if ((nsuIsAlphaNumericChar(c_2818589231) || (c_2818589231 == 95))) {
    result_2818589232 = 0;
    break BeforeRet;
    }
    
    if (((c_2818589231 == 32) || (c_2818589231 == 9))) {
    result_2818589232 = 1;
    break BeforeRet;
    }
    
    result_2818589232 = 2;
    break BeforeRet;
  };

  return result_2818589232;

}

function findWordBoundary_2818589239(self_2818589240, cursor_2818589241) {
  var result_2818589242 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var line_2818589243 = getLine_2818572664(self_2818589240.document, cursor_2818589241.Field0);
    result_2818589242 = nimCopy(result_2818589242, toSelection_2449474029(cursor_2818589241), NTI2449473547);
    if ((result_2818589242.Field0.Field1 == (line_2818589243).length)) {
    result_2818589242.Field0.Field1 = subInt(result_2818589242.Field0.Field1, 1);
    result_2818589242.Field1.Field1 = subInt(result_2818589242.Field1.Field1, 1);
    }
    
    Label1: {
        Label2: while (true) {
        if (!((0 < result_2818589242.Field0.Field1) && (result_2818589242.Field0.Field1 < (line_2818589243).length))) break Label2;
          var leftCategory_2818589254 = charCategory_2818589230(line_2818589243[chckIndx(subInt(result_2818589242.Field0.Field1, 1), 0, (line_2818589243).length - 1)]);
          var rightCategory_2818589255 = charCategory_2818589230(line_2818589243[chckIndx(result_2818589242.Field0.Field1, 0, (line_2818589243).length - 1)]);
          if (!((leftCategory_2818589254 == rightCategory_2818589255))) {
          break Label1;
          }
          
          result_2818589242.Field0.Field1 = subInt(result_2818589242.Field0.Field1, 1);
        }
    };
    if ((result_2818589242.Field1.Field1 < (line_2818589243).length)) {
    result_2818589242.Field1.Field1 = addInt(result_2818589242.Field1.Field1, 1);
    }
    
    Label3: {
        Label4: while (true) {
        if (!((0 <= result_2818589242.Field1.Field1) && (result_2818589242.Field1.Field1 < (line_2818589243).length))) break Label4;
          var leftCategory_2818589264 = charCategory_2818589230(line_2818589243[chckIndx(subInt(result_2818589242.Field1.Field1, 1), 0, (line_2818589243).length - 1)]);
          var rightCategory_2818589265 = charCategory_2818589230(line_2818589243[chckIndx(result_2818589242.Field1.Field1, 0, (line_2818589243).length - 1)]);
          if (!((leftCategory_2818589264 == rightCategory_2818589265))) {
          break Label3;
          }
          
          result_2818589242.Field1.Field1 = addInt(result_2818589242.Field1.Field1, 1);
        }
    };

  return result_2818589242;

}

function findWordBoundaryJsWrapper_2818589235(self_2818589299, cursor_2818589300) {
  var result_2818589301 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818589301 = nimCopy(result_2818589301, findWordBoundary_2818589239(self_2818589299, cursor_2818589300), NTI2449473547);

  return result_2818589301;

}
editor_text_prototype.findWordBoundary = function(cursor_ /* : Cursor */) { return (findWordBoundaryJsWrapper_2818589235(this, cursor_));};

function min_2449473871(a_2449473872, b_2449473873) {
  var result_2449473874 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3C_2449473863(a_2449473872, b_2449473873)) {
    result_2449473874 = nimCopy(result_2449473874, a_2449473872, NTI2449473545);
    break BeforeRet;
    }
    
    result_2449473874 = nimCopy(result_2449473874, b_2449473873, NTI2449473545);
    break BeforeRet;
  };

  return result_2449473874;

}

function max_2449473875(a_2449473876, b_2449473877) {
  var result_2449473878 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473879(b_2449473877, a_2449473876)) {
    result_2449473878 = nimCopy(result_2449473878, a_2449473876, NTI2449473545);
    break BeforeRet;
    }
    
    result_2449473878 = nimCopy(result_2449473878, b_2449473877, NTI2449473545);
    break BeforeRet;
  };

  return result_2449473878;

}

function or_2449474023(a_2449474024, b_2449474025) {
  var result_2449474026 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var an_2449474027 = normalized_2449473902(a_2449474024);
    var bn_2449474028 = normalized_2449473902(b_2449474025);
    var colontmp__2818589543 = min_2449473871(an_2449474027.Field0, bn_2449474028.Field0);
    var colontmp__2818589544 = max_2449473875(an_2449474027.Field1, bn_2449474028.Field1);
    result_2449474026 = nimCopy(result_2449474026, {Field0: nimCopy(null, colontmp__2818589543, NTI2449473545), Field1: nimCopy(null, colontmp__2818589544, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
  };

  return result_2449474026;

}

function reverse_2449473905(selection_2449473906) {
  var result_2449473907 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818589545 = nimCopy(null, selection_2449473906.Field1, NTI2449473545);
    var colontmp__2818589546 = nimCopy(null, selection_2449473906.Field0, NTI2449473545);
    result_2449473907 = nimCopy(result_2449473907, {Field0: nimCopy(null, colontmp__2818589545, NTI2449473545), Field1: nimCopy(null, colontmp__2818589546, NTI2449473545)}, NTI2449473547);

  return result_2449473907;

}

function nsuStartsWith(s_855639466, prefix_855639467) {
  var result_855639468 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_855639473 = (prefix_855639467).length;
    var sLenHEX60gensym146_855639474 = (s_855639466).length;
    var iHEX60gensym146_855639475 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_855639473 <= iHEX60gensym146_855639475)) {
          result_855639468 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_855639474 <= iHEX60gensym146_855639475) || !((s_855639466[chckIndx(iHEX60gensym146_855639475, 0, (s_855639466).length - 1)] == prefix_855639467[chckIndx(iHEX60gensym146_855639475, 0, (prefix_855639467).length - 1)])))) {
          result_855639468 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_855639475 = addInt(iHEX60gensym146_855639475, 1);
        }
    };
  };

  return result_855639468;

}

function getSelectionForMove_2818589333(self_2818589334, cursor_2818589335, move_2818589336, count_2818589337) {
  var result_2818589338 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (toJSStr(move_2818589336)) {
    case "word":
      result_2818589338 = nimCopy(result_2818589338, findWordBoundary_2818589239(self_2818589334, cursor_2818589335), NTI2449473547);
      Label1: {
        var __2818589343 = 0;
        var i_2818589501 = 1;
        Label2: {
            Label3: while (true) {
            if (!(i_2818589501 < count_2818589337)) break Label3;
              __2818589343 = i_2818589501;
              result_2818589338 = nimCopy(result_2818589338, or_2449474023(or_2449474023(result_2818589338, findWordBoundary_2818589239(self_2818589334, result_2818589338.Field1)), findWordBoundary_2818589239(self_2818589334, result_2818589338.Field0)), NTI2449473547);
              i_2818589501 = addInt(i_2818589501, 1);
            }
        };
      };
      break;
    case "word-line":
      var line_2818589344 = getLine_2818572664(self_2818589334.document, cursor_2818589335.Field0);
      result_2818589338 = nimCopy(result_2818589338, findWordBoundary_2818589239(self_2818589334, cursor_2818589335), NTI2449473547);
      if (((cursor_2818589335.Field1 == 0) && (0 < cursor_2818589335.Field0))) {
      var colontmp__2818589503 = subInt(cursor_2818589335.Field0, 1);
      var colontmp__2818589504 = (getLine_2818572664(self_2818589334.document, subInt(cursor_2818589335.Field0, 1))).length;
      result_2818589338.Field0 = nimCopy(result_2818589338.Field0, {Field0: colontmp__2818589503, Field1: colontmp__2818589504}, NTI2449473545);
      }
      
      if (((cursor_2818589335.Field1 == (line_2818589344).length) && (cursor_2818589335.Field0 < subInt((self_2818589334.document.lines).length, 1)))) {
      var colontmp__2818589505 = addInt(cursor_2818589335.Field0, 1);
      var colontmp__2818589506 = 0;
      result_2818589338.Field1 = nimCopy(result_2818589338.Field1, {Field0: colontmp__2818589505, Field1: colontmp__2818589506}, NTI2449473545);
      }
      
      Label4: {
        var __2818589352 = 0;
        var i_2818589512 = 1;
        Label5: {
            Label6: while (true) {
            if (!(i_2818589512 < count_2818589337)) break Label6;
              __2818589352 = i_2818589512;
              result_2818589338 = nimCopy(result_2818589338, or_2449474023(or_2449474023(result_2818589338, findWordBoundary_2818589239(self_2818589334, result_2818589338.Field1)), findWordBoundary_2818589239(self_2818589334, result_2818589338.Field0)), NTI2449473547);
              var line_2818589353 = getLine_2818572664(self_2818589334.document, result_2818589338.Field1.Field0);
              if (((result_2818589338.Field0.Field1 == 0) && (0 < result_2818589338.Field0.Field0))) {
              var colontmp__2818589508 = subInt(result_2818589338.Field0.Field0, 1);
              var colontmp__2818589509 = (getLine_2818572664(self_2818589334.document, subInt(result_2818589338.Field0.Field0, 1))).length;
              result_2818589338.Field0 = nimCopy(result_2818589338.Field0, {Field0: colontmp__2818589508, Field1: colontmp__2818589509}, NTI2449473545);
              }
              
              if (((result_2818589338.Field1.Field1 == (line_2818589353).length) && (result_2818589338.Field1.Field0 < subInt((self_2818589334.document.lines).length, 1)))) {
              var colontmp__2818589510 = addInt(result_2818589338.Field1.Field0, 1);
              var colontmp__2818589511 = 0;
              result_2818589338.Field1 = nimCopy(result_2818589338.Field1, {Field0: colontmp__2818589510, Field1: colontmp__2818589511}, NTI2449473545);
              }
              
              i_2818589512 = addInt(i_2818589512, 1);
            }
        };
      };
      break;
    case "word-back":
      result_2818589338 = nimCopy(result_2818589338, reverse_2449473905(getSelectionForMove_2818589333(self_2818589334, {Field0: cursor_2818589335.Field0, Field1: nimMax(0, subInt(cursor_2818589335.Field1, 1))}, [119,111,114,100], count_2818589337)), NTI2449473547);
      break BeforeRet;
      break;
    case "word-line-back":
      result_2818589338 = nimCopy(result_2818589338, reverse_2449473905(getSelectionForMove_2818589333(self_2818589334, {Field0: cursor_2818589335.Field0, Field1: nimMax(0, subInt(cursor_2818589335.Field1, 1))}, [119,111,114,100,45,108,105,110,101], count_2818589337)), NTI2449473547);
      break BeforeRet;
      break;
    case "line":
      var colontmp__2818589514 = {Field0: cursor_2818589335.Field0, Field1: 0};
      var colontmp__2818589515 = {Field0: cursor_2818589335.Field0, Field1: (getLine_2818572664(self_2818589334.document, cursor_2818589335.Field0)).length};
      result_2818589338 = nimCopy(result_2818589338, {Field0: nimCopy(null, colontmp__2818589514, NTI2449473545), Field1: nimCopy(null, colontmp__2818589515, NTI2449473545)}, NTI2449473547);
      break;
    case "line-next":
      var colontmp__2818589516 = {Field0: cursor_2818589335.Field0, Field1: 0};
      var colontmp__2818589517 = {Field0: cursor_2818589335.Field0, Field1: (getLine_2818572664(self_2818589334.document, cursor_2818589335.Field0)).length};
      result_2818589338 = nimCopy(result_2818589338, {Field0: nimCopy(null, colontmp__2818589516, NTI2449473545), Field1: nimCopy(null, colontmp__2818589517, NTI2449473545)}, NTI2449473547);
      if ((addInt(result_2818589338.Field1.Field0, 1) < (self_2818589334.document.lines).length)) {
      var colontmp__2818589518 = addInt(result_2818589338.Field1.Field0, 1);
      var colontmp__2818589519 = 0;
      result_2818589338.Field1 = nimCopy(result_2818589338.Field1, {Field0: colontmp__2818589518, Field1: colontmp__2818589519}, NTI2449473545);
      }
      
      Label7: {
        var __2818589364 = 0;
        var i_2818589523 = 1;
        Label8: {
            Label9: while (true) {
            if (!(i_2818589523 < count_2818589337)) break Label9;
              __2818589364 = i_2818589523;
              result_2818589338 = nimCopy(result_2818589338, or_2449474023(result_2818589338, {Field0: {Field0: result_2818589338.Field1.Field0, Field1: 0}, Field1: {Field0: result_2818589338.Field1.Field0, Field1: (getLine_2818572664(self_2818589334.document, result_2818589338.Field1.Field0)).length}}), NTI2449473547);
              if ((addInt(result_2818589338.Field1.Field0, 1) < (self_2818589334.document.lines).length)) {
              var colontmp__2818589521 = addInt(result_2818589338.Field1.Field0, 1);
              var colontmp__2818589522 = 0;
              result_2818589338.Field1 = nimCopy(result_2818589338.Field1, {Field0: colontmp__2818589521, Field1: colontmp__2818589522}, NTI2449473545);
              }
              
              i_2818589523 = addInt(i_2818589523, 1);
            }
        };
      };
      break;
    case "file":
      var colontmp__2818589525 = 0;
      var colontmp__2818589526 = 0;
      result_2818589338.Field0 = nimCopy(result_2818589338.Field0, {Field0: colontmp__2818589525, Field1: colontmp__2818589526}, NTI2449473545);
      var line_2818589371 = subInt((self_2818589334.document.lines).length, 1);
      var colontmp__2818589527 = line_2818589371;
      var colontmp__2818589528 = (getLine_2818572664(self_2818589334.document, line_2818589371)).length;
      result_2818589338.Field1 = nimCopy(result_2818589338.Field1, {Field0: colontmp__2818589527, Field1: colontmp__2818589528}, NTI2449473545);
      break;
    case "prev-find-result":
      result_2818589338 = nimCopy(result_2818589338, getPrevFindResult_2818583548(self_2818589334, cursor_2818589335, count_2818589337), NTI2449473547);
      break;
    case "next-find-result":
      result_2818589338 = nimCopy(result_2818589338, getNextFindResult_2818583552(self_2818589334, cursor_2818589335, count_2818589337), NTI2449473547);
      break;
    default: 
      if (nsuStartsWith(move_2818589336, [109,111,118,101,45,116,111,32])) {
      var str_2818589390 = HEX5BHEX5D_855639319(move_2818589336, HEX2EHEX2E_1040187488(8, 1));
      var line_2818589391 = getLine_2818572664(self_2818589334.document, cursor_2818589335.Field0);
      result_2818589338 = nimCopy(result_2818589338, toSelection_2449474029(cursor_2818589335), NTI2449473547);
      var index_2818589392 = nsuFindStr(line_2818589391, str_2818589390, chckRange(cursor_2818589335.Field1, 0, 2147483647), -1);
      if ((0 <= index_2818589392)) {
      var colontmp__2818589529 = cursor_2818589335.Field0;
      var colontmp__2818589530 = addInt(index_2818589392, 1);
      result_2818589338.Field1 = nimCopy(result_2818589338.Field1, {Field0: colontmp__2818589529, Field1: colontmp__2818589530}, NTI2449473545);
      }
      
      Label10: {
        var __2818589397 = 0;
        var i_2818589534 = 1;
        Label11: {
            Label12: while (true) {
            if (!(i_2818589534 < count_2818589337)) break Label12;
              __2818589397 = i_2818589534;
              var index_2818589398 = nsuFindStr(line_2818589391, str_2818589390, chckRange(result_2818589338.Field1.Field1, 0, 2147483647), -1);
              if ((0 <= index_2818589398)) {
              var colontmp__2818589532 = result_2818589338.Field1.Field0;
              var colontmp__2818589533 = addInt(index_2818589398, 1);
              result_2818589338.Field1 = nimCopy(result_2818589338.Field1, {Field0: colontmp__2818589532, Field1: colontmp__2818589533}, NTI2449473545);
              }
              
              i_2818589534 = addInt(i_2818589534, 1);
            }
        };
      };
      }
      else {
      if (nsuStartsWith(move_2818589336, [109,111,118,101,45,98,101,102,111,114,101,32])) {
      var str_2818589417 = HEX5BHEX5D_855639319(move_2818589336, HEX2EHEX2E_1040187488(12, 1));
      var line_2818589418 = getLine_2818572664(self_2818589334.document, cursor_2818589335.Field0);
      result_2818589338 = nimCopy(result_2818589338, toSelection_2449474029(cursor_2818589335), NTI2449473547);
      var index_2818589419 = nsuFindStr(line_2818589418, str_2818589417, chckRange(addInt(cursor_2818589335.Field1, 1), 0, 2147483647), -1);
      if ((0 <= index_2818589419)) {
      var colontmp__2818589536 = cursor_2818589335.Field0;
      var colontmp__2818589537 = index_2818589419;
      result_2818589338.Field1 = nimCopy(result_2818589338.Field1, {Field0: colontmp__2818589536, Field1: colontmp__2818589537}, NTI2449473545);
      }
      
      Label13: {
        var __2818589424 = 0;
        var i_2818589541 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_2818589541 < count_2818589337)) break Label15;
              __2818589424 = i_2818589541;
              var index_2818589425 = nsuFindStr(line_2818589418, str_2818589417, chckRange(addInt(result_2818589338.Field1.Field1, 1), 0, 2147483647), -1);
              if ((0 <= index_2818589425)) {
              var colontmp__2818589539 = result_2818589338.Field1.Field0;
              var colontmp__2818589540 = index_2818589425;
              result_2818589338.Field1 = nimCopy(result_2818589338.Field1, {Field0: colontmp__2818589539, Field1: colontmp__2818589540}, NTI2449473545);
              }
              
              i_2818589541 = addInt(i_2818589541, 1);
            }
        };
      };
      }
      else {
        result_2818589338 = nimCopy(result_2818589338, toSelection_2449474029(cursor_2818589335), NTI2449473547);
        var fmtRes_2818589430 = [mnewString(0)];
        fmtRes_2818589430[0].push.apply(fmtRes_2818589430[0], [91,101,114,114,111,114,93,32,85,110,107,110,111,119,110,32,109,111,118,101,32,39]);;
        formatValue_721420459(fmtRes_2818589430, 0, move_2818589336, []);
        fmtRes_2818589430[0].push.apply(fmtRes_2818589430[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818589430[0], NTI33554449)]);
      }
      }
      break;
    }
  };

  return result_2818589338;

}

function getSelectionForMoveJsWrapper_2818589329(self_2818589462, cursor_2818589463, move_2818589464, count_2818589465) {
  var result_2818589466 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818589466 = nimCopy(result_2818589466, getSelectionForMove_2818589333(self_2818589462, cursor_2818589463, move_2818589464, count_2818589465), NTI2449473547);

  return result_2818589466;

}
editor_text_prototype.getSelectionForMove = function(cursor_ /* : Cursor */, move_ /* : string */, count_ /* : int */) { return (getSelectionForMoveJsWrapper_2818589329(this, cursor_, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function HEX5BHEX5D_2818589611(s_2818589615, x_2818589616) {
  var result_2818589617 = [];

    var a_2818589619 = x_2818589616.a;
    var L_2818589624 = addInt(subInt(subInt((s_2818589615).length, x_2818589616.b), a_2818589619), 1);
    result_2818589617 = new Array(chckRange(L_2818589624, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2818589624, 0, 2147483647) ; ++i) { result_2818589617[i] = []; }    Label1: {
      var i_2818589633 = 0;
      var i_2818589851 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589851 < L_2818589624)) break Label3;
            i_2818589633 = i_2818589851;
            result_2818589617[chckIndx(i_2818589633, 0, (result_2818589617).length - 1)] = nimCopy(null, s_2818589615[chckIndx(addInt(i_2818589633, a_2818589619), 0, (s_2818589615).length - 1)], NTI33554449);
            i_2818589851 = addInt(i_2818589851, 1);
          }
      };
    };

  return result_2818589617;

}

function contains_1627393212(node_1627393213, key_1627393214) {
    var Temporary1;

  var result_1627393215 = false;

    if (!((node_1627393213.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,54,52,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393213;
    if (ConstSet55[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393215 = hasKey_1627392538(Temporary1.fields, key_1627393214);

  return result_1627393215;

}

function mustRehash_1627390664(t_1627390666) {
  var result_1627390667 = false;

    if (!((t_1627390666.counter < (t_1627390666.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1627390667 = ((mulInt((t_1627390666.data).length, 2) < mulInt(t_1627390666.counter, 3)) || (subInt((t_1627390666.data).length, t_1627390666.counter) < 4));

  return result_1627390667;

}

function rawInsert_1627391242(t_1627391245, data_1627391246, data_1627391246_Idx, key_1627391247, val_1627391248, hc_1627391249, h_1627391250) {
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field2 = nimCopy(null, key_1627391247, NTI33554449);
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field3 = val_1627391248;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field0 = hc_1627391249;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = -1;
    if ((t_1627391245.first < 0)) {
    t_1627391245.first = h_1627391250;
    }
    
    if ((0 <= t_1627391245.last)) {
    data_1627391246[data_1627391246_Idx][chckIndx(t_1627391245.last, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = h_1627391250;
    }
    
    t_1627391245.last = h_1627391250;

  
}

function enlarge_1627390827(t_1627390830) {
          var Temporary6;
          var Temporary7;

    var n_1627390833 = [];
    n_1627390833 = new Array(chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647) ; ++i) { n_1627390833[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1627390885 = t_1627390830.first;
    t_1627390830.first = -1;
    t_1627390830.last = -1;
    var Temporary1 = t_1627390830.data; t_1627390830.data = n_1627390833; n_1627390833 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1627390885)) break Label3;
          var nxt_1627390943 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field1;
          var eh_1627390997 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0;
          if (isFilled_1308622880(eh_1627390997)) {
          var j_1627391001 = (eh_1627390997 & (t_1627390830.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1308622880(t_1627390830.data[chckIndx(j_1627391001, 0, (t_1627390830.data).length - 1)].Field0)) break Label5;
                j_1627391001 = nextTry_1308622883(j_1627391001, (t_1627390830.data).length - 1);
              }
          };
          Temporary6 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3, NTI1627389956);
          rawInsert_1627391242(t_1627390830, t_1627390830, "data", Temporary6, Temporary7, n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0, j_1627391001);
          }
          
          h_1627390885 = nxt_1627390943;
        }
    };

  
}

function rawGetKnownHC_1627391524(t_1627391527, key_1627391528, hc_1627391529) {
  var result_1627391530 = 0;

  BeforeRet: {
    if (((t_1627391527.data).length == 0)) {
    result_1627391530 = -1;
    break BeforeRet;
    }
    
    var h_1627391581 = (hc_1627391529 & (t_1627391527.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0)) break Label2;
          if (((t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0 == hc_1627391529) && eqStrings(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field2, key_1627391528))) {
          result_1627391530 = h_1627391581;
          break BeforeRet;
          }
          
          h_1627391581 = nextTry_1308622883(h_1627391581, (t_1627391527.data).length - 1);
        }
    };
    result_1627391530 = subInt(-1, h_1627391581);
  };

  return result_1627391530;

}

function HEX5BHEX5DHEX3D_1627390259(t_1627390262, key_1627390263, val_1627390264) {
    if (((t_1627390262.data).length == 0)) {
    var correctSizeHEX60gensym13_1627390314 = slotsNeeded_1308622891(32);
    t_1627390262.counter = 0;
    t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1627390262.first = -1;
    t_1627390262.last = -1;
    }
    
    var hc_1627390319 = [0];
    var index_1627390557 = rawGet_1627390328(t_1627390262, key_1627390263, hc_1627390319, 0);
    if ((0 <= index_1627390557)) {
    t_1627390262.data[chckIndx(index_1627390557, 0, (t_1627390262.data).length - 1)].Field3 = val_1627390264;
    }
    else {
      if (((t_1627390262.data).length == 0)) {
      var correctSizeHEX60gensym18_1627390659 = slotsNeeded_1308622891(32);
      t_1627390262.counter = 0;
      t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1627390262.first = -1;
      t_1627390262.last = -1;
      }
      
      if (mustRehash_1627390664(t_1627390262)) {
      enlarge_1627390827(t_1627390262);
      index_1627390557 = rawGetKnownHC_1627391524(t_1627390262, key_1627390263, hc_1627390319[0]);
      }
      
      index_1627390557 = subInt(-1, index_1627390557);
      rawInsert_1627391242(t_1627390262, t_1627390262, "data", key_1627390263, val_1627390264, hc_1627390319[0], index_1627390557);
      t_1627390262.counter = addInt(t_1627390262.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1627391903(obj_1627391904, key_1627391905, val_1627391906) {
    var Temporary1;

    if (!((obj_1627391904.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,57,48,44,32,57,41,32,96,111,98,106,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = obj_1627391904;
    if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    HEX5BHEX5DHEX3D_1627390259(Temporary1.fields, key_1627391905, val_1627391906);

  
}

function HEX5BHEX5D_2701132581(s_2701132583, i_2701132584) {
  var result_2701132585 = [];

    result_2701132585 = nimCopy(null, s_2701132583[chckIndx(subInt((s_2701132583).length, i_2701132584), 0, (s_2701132583).length - 1)], NTI33554449);

  return result_2701132585;

}

function newJInt_1627390040(n_1627390041) {
  var result_1627390042 = null;

    result_1627390042 = {kind: 2, num: n_1627390041, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390042;

}

function setOption_2818589581(editor_2818589583, path_2818589584, value_2818589585) {
  BeforeRet: {
    Label1: {
      if ((editor_2818589583 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym738_2818589600 = nsuSplitString(path_2818589584, [46], -1);
      var nodeHEX60gensym738_2818589601 = editor_2818589583.options;
      Label2: {
        var keyHEX60gensym738_2818589637 = [];
        var colontmp__2818589846 = [];
        colontmp__2818589846 = HEX5BHEX5D_2818589611(pathItemsHEX60gensym738_2818589600, HEX2EHEX2E_1040187488(0, 2));
        var i_2818589847 = 0;
        var L_2818589848 = (colontmp__2818589846).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818589847 < L_2818589848)) break Label4;
              keyHEX60gensym738_2818589637 = colontmp__2818589846[chckIndx(i_2818589847, 0, (colontmp__2818589846).length - 1)];
              if (!((nodeHEX60gensym738_2818589601.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym738_2818589601, keyHEX60gensym738_2818589637))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym738_2818589601, keyHEX60gensym738_2818589637, newJObject_1627390051());
              }
              
              nodeHEX60gensym738_2818589601 = HEX5BHEX5D_1627393037(nodeHEX60gensym738_2818589601, keyHEX60gensym738_2818589637);
              i_2818589847 = addInt(i_2818589847, 1);
              if (!(((colontmp__2818589846).length == L_2818589848))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym738_2818589601 == null) || !((nodeHEX60gensym738_2818589601.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym738_2818589601, HEX5BHEX5D_2701132581(pathItemsHEX60gensym738_2818589600, 1), newJInt_1627390040(value_2818589585));
    };
    requestRender_2768240746(editor_2818589583.platform, true);
  };

  
}

function getOption_2818589653(editor_2818589655, path_2818589656, default_2818589657) {
  var result_2818589662 = [];

  BeforeRet: {
    Label1: {
      if ((editor_2818589655 == null)) {
      result_2818589662 = nimCopy(null, default_2818589657, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym743_2818589675 = HEX7BHEX7D_1627393316(editor_2818589655.options, nsuSplitString(path_2818589656, [46], -1));
      if ((nodeHEX60gensym743_2818589675 == null)) {
      result_2818589662 = nimCopy(null, default_2818589657, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_2818589662 = nimCopy(null, getStr_1627390106(nodeHEX60gensym743_2818589675, default_2818589657), NTI33554449);
    break BeforeRet;
  };

  return result_2818589662;

}

function getInt_1627390118(n_1627390119, default_1627390120) {
      var Temporary1;

  var result_1627390121 = 0;

  BeforeRet: {
    if (((n_1627390119 == null) || !((n_1627390119.kind == 2)))) {
    result_1627390121 = default_1627390120;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390119;
      if (ConstSet57[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390121 = chckRange(Temporary1.num, -2147483648, 2147483647);
      break BeforeRet;
    }
    
  };

  return result_1627390121;

}

function getOption_2818589679(editor_2818589681, path_2818589682, default_2818589683) {
  var result_2818589688 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818589681 == null)) {
      result_2818589688 = default_2818589683;
      break BeforeRet;
      }
      
      var nodeHEX60gensym744_2818589700 = HEX7BHEX7D_1627393316(editor_2818589681.options, nsuSplitString(path_2818589682, [46], -1));
      if ((nodeHEX60gensym744_2818589700 == null)) {
      result_2818589688 = default_2818589683;
      break BeforeRet;
      }
      
    };
    result_2818589688 = getInt_1627390118(nodeHEX60gensym744_2818589700, default_2818589683);
    break BeforeRet;
  };

  return result_2818589688;

}

function newJString_1627389994(s_1627389995) {
  var result_1627389996 = null;

    result_1627389996 = {kind: 4, str: nimCopy(null, s_1627389995, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627389996;

}

function setOption_2818589713(editor_2818589715, path_2818589716, value_2818589717) {
  BeforeRet: {
    Label1: {
      if ((editor_2818589715 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym745_2818589733 = nsuSplitString(path_2818589716, [46], -1);
      var nodeHEX60gensym745_2818589734 = editor_2818589715.options;
      Label2: {
        var keyHEX60gensym745_2818589753 = [];
        var colontmp__2818589860 = [];
        colontmp__2818589860 = HEX5BHEX5D_2818589611(pathItemsHEX60gensym745_2818589733, HEX2EHEX2E_1040187488(0, 2));
        var i_2818589861 = 0;
        var L_2818589862 = (colontmp__2818589860).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818589861 < L_2818589862)) break Label4;
              keyHEX60gensym745_2818589753 = colontmp__2818589860[chckIndx(i_2818589861, 0, (colontmp__2818589860).length - 1)];
              if (!((nodeHEX60gensym745_2818589734.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym745_2818589734, keyHEX60gensym745_2818589753))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym745_2818589734, keyHEX60gensym745_2818589753, newJObject_1627390051());
              }
              
              nodeHEX60gensym745_2818589734 = HEX5BHEX5D_1627393037(nodeHEX60gensym745_2818589734, keyHEX60gensym745_2818589753);
              i_2818589861 = addInt(i_2818589861, 1);
              if (!(((colontmp__2818589860).length == L_2818589862))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym745_2818589734 == null) || !((nodeHEX60gensym745_2818589734.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym745_2818589734, HEX5BHEX5D_2701132581(pathItemsHEX60gensym745_2818589733, 1), newJString_1627389994(value_2818589717));
    };
    requestRender_2768240746(editor_2818589715.platform, true);
  };

  
}

function setMove_2818589578(self_2818589579, args_2818589580) {
    setOption_2818589581(self_2818589579.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], getCommandCount_2818588797(self_2818589579));
    setMode_2818584221(self_2818589579, getOption_2818589653(self_2818589579.editor, [116,101,120,116,46,109,111,118,101,45,110,101,120,116,45,109,111,100,101], []));
    setCommandCount_2818588854(self_2818589579, getOption_2818589679(self_2818589579.editor, [116,101,120,116,46,109,111,118,101,45,99,111,109,109,97,110,100,45,99,111,117,110,116], 0));
    var _ = runAction_2818589164(self_2818589579, getOption_2818589653(self_2818589579.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []), args_2818589580);
    setOption_2818589713(self_2818589579.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []);

  
}

function setMoveJsWrapper_2818589574(self_2818589797, args_2818589798) {
    setMove_2818589578(self_2818589797, args_2818589798);

  
}
editor_text_prototype.setMove = function(args_ /* : JsonNode */) { return (setMoveJsWrapper_2818589574(this, args_));};

function deleteMove_2818589870(self_2818589871, move_2818589872, which_2818589873, all_2818589874) {
    move_2818589872 = nimCopy(null, move_2818589872, NTI33554449);
    
function HEX3Aanonymous_2818589886(s_2818589893) {
        var Temporary1;

      var result_2818589896 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818589885) {
        Temporary1 = getSelectionForMove_2818589333(self_2818589871, s_2818589893.Field1, move_2818589872, count_2818589884);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818589893.Field1, NTI2449473545), Field1: nimCopy(null, getSelectionForMove_2818589333(self_2818589871, s_2818589893.Field1, move_2818589872, count_2818589884).Field1, NTI2449473545)};
        }
        
        result_2818589896 = nimCopy(result_2818589896, Temporary1, NTI2449473547);

      return result_2818589896;

    }

    var count_2818589884 = getOption_2818589679(self_2818589871.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818589885 = getFlag_2818589094(self_2818589871, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818589903 = map_2818572733(selections_2818572800(self_2818589871), HEX3Aanonymous_2818589886);
    selectionsHEX3D_2818573081(self_2818589871, delete_2818579354(self_2818589871.document, selections_2818589903, selections_2818572800(self_2818589871), true, true));
    scrollToCursor_2818584036(self_2818589871, 3);
    updateTargetColumn_2818584599(self_2818589871, 3);

  
}

function deleteMoveJsWrapper_2818589866(self_2818589935, move_2818589936, which_2818589937, all_2818589938) {
    deleteMove_2818589870(self_2818589935, move_2818589936, which_2818589937, all_2818589938);

  
}
editor_text_prototype.deleteMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (deleteMoveJsWrapper_2818589866(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function mapAllOrLast_2818589997(self_2818589999, all_2818590000, p_2818590002) {
    
function HEX3Aanonymous_2818590004(s_2818590011) {
      var result_2818590014 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818590014 = nimCopy(result_2818590014, p_2818590002(s_2818590011), NTI2449473547);

      return result_2818590014;

    }

  var result_2818590003 = [];

    if (all_2818590000) {
    result_2818590003 = nimCopy(null, map_2818572733(self_2818589999, HEX3Aanonymous_2818590004), NTI2818572615);
    }
    else {
      result_2818590003 = nimCopy(null, self_2818589999, NTI2818583494);
      if ((0 < (result_2818590003).length)) {
      result_2818590003[chckIndx((result_2818590003).length - 1, 0, (result_2818590003).length - 1)] = nimCopy(result_2818590003[chckIndx((result_2818590003).length - 1, 0, (result_2818590003).length - 1)], p_2818590002(result_2818590003[chckIndx((result_2818590003).length - 1, 0, (result_2818590003).length - 1)]), NTI2449473547);
      }
      
    }
    

  return result_2818590003;

}

function selectMove_2818589974(self_2818589975, move_2818589976, which_2818589977, all_2818589978) {
    move_2818589976 = nimCopy(null, move_2818589976, NTI33554449);
    
function HEX3Aanonymous_2818589989(s_2818589992) {
      var result_2818589995 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818589995 = nimCopy(result_2818589995, getSelectionForMove_2818589333(self_2818589975, s_2818589992.Field1, move_2818589976, count_2818589988), NTI2449473547);

      return result_2818589995;

    }

    var count_2818589988 = getOption_2818589679(self_2818589975.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    selectionsHEX3D_2818573081(self_2818589975, mapAllOrLast_2818589997(selections_2818572800(self_2818589975), all_2818589978, HEX3Aanonymous_2818589989));
    scrollToCursor_2818584036(self_2818589975, 3);
    updateTargetColumn_2818584599(self_2818589975, 3);

  
}

function selectMoveJsWrapper_2818589970(self_2818590064, move_2818590065, which_2818590066, all_2818590067) {
    selectMove_2818589974(self_2818590064, move_2818590065, which_2818590066, all_2818590067);

  
}
editor_text_prototype.selectMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (selectMoveJsWrapper_2818589970(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function changeMove_2818590103(self_2818590104, move_2818590105, which_2818590106, all_2818590107) {
    move_2818590105 = nimCopy(null, move_2818590105, NTI33554449);
    
function HEX3Aanonymous_2818590119(s_2818590126) {
        var Temporary1;

      var result_2818590129 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818590118) {
        Temporary1 = getSelectionForMove_2818589333(self_2818590104, s_2818590126.Field1, move_2818590105, count_2818590117);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818590126.Field1, NTI2449473545), Field1: nimCopy(null, getSelectionForMove_2818589333(self_2818590104, s_2818590126.Field1, move_2818590105, count_2818590117).Field1, NTI2449473545)};
        }
        
        result_2818590129 = nimCopy(result_2818590129, Temporary1, NTI2449473547);

      return result_2818590129;

    }

    var count_2818590117 = getOption_2818589679(self_2818590104.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818590118 = getFlag_2818589094(self_2818590104, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818590136 = map_2818572733(selections_2818572800(self_2818590104), HEX3Aanonymous_2818590119);
    selectionsHEX3D_2818573081(self_2818590104, delete_2818579354(self_2818590104.document, selections_2818590136, selections_2818572800(self_2818590104), true, true));
    scrollToCursor_2818584036(self_2818590104, 3);
    updateTargetColumn_2818584599(self_2818590104, 3);

  
}

function changeMoveJsWrapper_2818590099(self_2818590168, move_2818590169, which_2818590170, all_2818590171) {
    changeMove_2818590103(self_2818590168, move_2818590169, which_2818590170, all_2818590171);

  
}
editor_text_prototype.changeMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (changeMoveJsWrapper_2818590099(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function toSelection_2449474032(cursor_2449474033, default_2449474034, which_2449474035) {
  var result_2449474036 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (which_2449474035) {
    case 0:
      result_2449474036 = nimCopy(result_2449474036, default_2449474034, NTI2449473547);
      break BeforeRet;
      break;
    case 1:
      var colontmp__2818590320 = nimCopy(null, cursor_2449474033, NTI2449473545);
      var colontmp__2818590321 = nimCopy(null, cursor_2449474033, NTI2449473545);
      result_2449474036 = nimCopy(result_2449474036, {Field0: nimCopy(null, colontmp__2818590320, NTI2449473545), Field1: nimCopy(null, colontmp__2818590321, NTI2449473545)}, NTI2449473547);
      break BeforeRet;
      break;
    case 2:
      var colontmp__2818590322 = nimCopy(null, cursor_2449474033, NTI2449473545);
      var colontmp__2818590323 = nimCopy(null, default_2449474034.Field1, NTI2449473545);
      result_2449474036 = nimCopy(result_2449474036, {Field0: nimCopy(null, colontmp__2818590322, NTI2449473545), Field1: nimCopy(null, colontmp__2818590323, NTI2449473545)}, NTI2449473547);
      break BeforeRet;
      break;
    case 3:
      var colontmp__2818590324 = nimCopy(null, default_2449474034.Field0, NTI2449473545);
      var colontmp__2818590325 = nimCopy(null, cursor_2449474033, NTI2449473545);
      result_2449474036 = nimCopy(result_2449474036, {Field0: nimCopy(null, colontmp__2818590324, NTI2449473545), Field1: nimCopy(null, colontmp__2818590325, NTI2449473545)}, NTI2449473547);
      break BeforeRet;
      break;
    case 4:
      var colontmp__2818590326 = nimCopy(null, default_2449474034.Field1, NTI2449473545);
      var colontmp__2818590327 = nimCopy(null, cursor_2449474033, NTI2449473545);
      result_2449474036 = nimCopy(result_2449474036, {Field0: nimCopy(null, colontmp__2818590326, NTI2449473545), Field1: nimCopy(null, colontmp__2818590327, NTI2449473545)}, NTI2449473547);
      break BeforeRet;
      break;
    }
  };

  return result_2449474036;

}

function cursor_2818589558(self_2818589559, selection_2818589560, which_2818589561) {
  var result_2818589562 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (which_2818589561) {
    case 0:
      result_2818589562 = nimCopy(result_2818589562, cursor_2818589558(self_2818589559, selection_2818589560, getOption_2818583641(self_2818589559.editor, getContextWithMode_2818583607(self_2818589559, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473545);
      break BeforeRet;
      break;
    case 1:
      result_2818589562 = nimCopy(result_2818589562, selection_2818589560.Field1, NTI2449473545);
      break BeforeRet;
      break;
    case 2:
      result_2818589562 = nimCopy(result_2818589562, selection_2818589560.Field0, NTI2449473545);
      break BeforeRet;
      break;
    case 3:
    case 4:
      result_2818589562 = nimCopy(result_2818589562, selection_2818589560.Field1, NTI2449473545);
      break BeforeRet;
      break;
    }
  };

  return result_2818589562;

}

function moveLast_2818590207(self_2818590208, move_2818590209, which_2818590210, all_2818590211, count_2818590212) {
      move_2818590209 = nimCopy(null, move_2818590209, NTI33554449);
      
function HEX3Aanonymous_2818590213(s_2818590216) {
        var result_2818590219 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590219 = nimCopy(result_2818590219, toSelection_2449474032(getSelectionForMove_2818589333(self_2818590208, cursor_2818589558(self_2818590208, s_2818590216, which_2818590210), move_2818590209, count_2818590212).Field1, s_2818590216, getOption_2818583641(self_2818590208.editor, getContextWithMode_2818583607(self_2818590208, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473547);

        return result_2818590219;

      }
      
function HEX3Aanonymous_2818590236(s_2818590239) {
        var result_2818590242 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590242 = nimCopy(result_2818590242, toSelection_2449474032(getSelectionForMove_2818589333(self_2818590208, cursor_2818589558(self_2818590208, s_2818590239, which_2818590210), move_2818590209, count_2818590212).Field1, s_2818590239, which_2818590210), NTI2449473547);

        return result_2818590242;

      }

    switch (which_2818590210) {
    case 0:
      selectionsHEX3D_2818573081(self_2818590208, mapAllOrLast_2818589997(selections_2818572800(self_2818590208), all_2818590211, HEX3Aanonymous_2818590213));
      break;
    default: 
      selectionsHEX3D_2818573081(self_2818590208, mapAllOrLast_2818589997(selections_2818572800(self_2818590208), all_2818590211, HEX3Aanonymous_2818590236));
      break;
    }
    scrollToCursor_2818584036(self_2818590208, which_2818590210);
    updateTargetColumn_2818584599(self_2818590208, which_2818590210);

  
}

function moveLastJsWrapper_2818590203(self_2818590281, move_2818590282, which_2818590283, all_2818590284, count_2818590285) {
    moveLast_2818590207(self_2818590281, move_2818590282, which_2818590283, all_2818590284, count_2818590285);

  
}
editor_text_prototype.moveLast = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveLastJsWrapper_2818590203(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function moveFirst_2818590334(self_2818590335, move_2818590336, which_2818590337, all_2818590338, count_2818590339) {
      move_2818590336 = nimCopy(null, move_2818590336, NTI33554449);
      
function HEX3Aanonymous_2818590340(s_2818590343) {
        var result_2818590346 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590346 = nimCopy(result_2818590346, toSelection_2449474032(getSelectionForMove_2818589333(self_2818590335, cursor_2818589558(self_2818590335, s_2818590343, which_2818590337), move_2818590336, count_2818590339).Field0, s_2818590343, getOption_2818583641(self_2818590335.editor, getContextWithMode_2818583607(self_2818590335, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473547);

        return result_2818590346;

      }
      
function HEX3Aanonymous_2818590363(s_2818590366) {
        var result_2818590369 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590369 = nimCopy(result_2818590369, toSelection_2449474032(getSelectionForMove_2818589333(self_2818590335, cursor_2818589558(self_2818590335, s_2818590366, which_2818590337), move_2818590336, count_2818590339).Field0, s_2818590366, which_2818590337), NTI2449473547);

        return result_2818590369;

      }

    switch (which_2818590337) {
    case 0:
      selectionsHEX3D_2818573081(self_2818590335, mapAllOrLast_2818589997(selections_2818572800(self_2818590335), all_2818590338, HEX3Aanonymous_2818590340));
      break;
    default: 
      selectionsHEX3D_2818573081(self_2818590335, mapAllOrLast_2818589997(selections_2818572800(self_2818590335), all_2818590338, HEX3Aanonymous_2818590363));
      break;
    }
    scrollToCursor_2818584036(self_2818590335, which_2818590337);
    updateTargetColumn_2818584599(self_2818590335, which_2818590337);

  
}

function moveFirstJsWrapper_2818590330(self_2818590408, move_2818590409, which_2818590410, all_2818590411, count_2818590412) {
    moveFirst_2818590334(self_2818590408, move_2818590409, which_2818590410, all_2818590411, count_2818590412);

  
}
editor_text_prototype.moveFirst = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveFirstJsWrapper_2818590330(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function some_2818590456(val_2818590458) {
  var result_2818590459 = ({val: ({impl: null}), has: false});

    result_2818590459.has = true;
    result_2818590459.val = nimCopy(result_2818590459.val, val_2818590458, NTI2852126723);

  return result_2818590459;

}

function isNone_2818580298(self_2818580300) {
  var result_2818580301 = false;

    result_2818580301 = !(self_2818580300.has);

  return result_2818580301;

}

function clear_2818580359(t_2818580362) {
    Label1: {
      var i_2818580431 = 0;
      var colontmp__2818590526 = 0;
      colontmp__2818590526 = (t_2818580362.data).length;
      var i_2818590527 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818590527 < colontmp__2818590526)) break Label3;
            i_2818580431 = i_2818590527;
            t_2818580362.data[chckIndx(i_2818580431, 0, (t_2818580362.data).length - 1)].Field0 = 0;
            t_2818580362.data[chckIndx(i_2818580431, 0, (t_2818580362.data).length - 1)].Field1 = 0;
            t_2818580362.data[chckIndx(i_2818580431, 0, (t_2818580362.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            i_2818590527 = addInt(i_2818590527, 1);
          }
      };
    };
    t_2818580362.counter = 0;

  
}

function findBounds_2852126727(text_2852126728, regex_2852126729, start_2852126730) {
  var result_2852126733 = {Field0: 0, Field1: 0};

  BeforeRet: {
    regex_2852126729.impl.lastIndex = 0;
    var bounds_2852126752 = ((regex_2852126729.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126728, HEX2EHEX2E_1040187488(start_2852126730, 1))))) || {indices: [[-1, 0]]}).indices[0];
    var colontmp__2818590529 = bounds_2852126752[chckIndx(0, 0, (bounds_2852126752).length - 1)];
    var colontmp__2818590530 = subInt(bounds_2852126752[chckIndx(1, 0, (bounds_2852126752).length - 1)], 1);
    result_2852126733 = nimCopy(result_2852126733, {Field0: colontmp__2818590529, Field1: colontmp__2818590530}, NTI2852126727);
    break BeforeRet;
  };

  return result_2852126733;

}

function get_2818580955(self_2818580957) {
  var result_2818580958 = null;

  BeforeRet: {
    if (isNone_2818580298(self_2818580957)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818580958 = self_2818580957.val;
    break BeforeRet;
  };

  return result_2818580958;

}

function mustRehash_2818581580(t_2818581582) {
  var result_2818581583 = false;

    if (!((t_2818581582.counter < (t_2818581582.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818581583 = ((mulInt((t_2818581582.data).length, 2) < mulInt(t_2818581582.counter, 3)) || (subInt((t_2818581582.data).length, t_2818581582.counter) < 4));

  return result_2818581583;

}

function rawInsert_2818582189(t_2818582193, data_2818582194, data_2818582194_Idx, key_2818582195, val_2818582196, hc_2818582197, h_2818582198) {
    data_2818582194[data_2818582194_Idx][chckIndx(h_2818582198, 0, (data_2818582194[data_2818582194_Idx]).length - 1)].Field1 = key_2818582195;
    data_2818582194[data_2818582194_Idx][chckIndx(h_2818582198, 0, (data_2818582194[data_2818582194_Idx]).length - 1)].Field2 = nimCopy(null, val_2818582196, NTI2818572535);
    data_2818582194[data_2818582194_Idx][chckIndx(h_2818582198, 0, (data_2818582194[data_2818582194_Idx]).length - 1)].Field0 = hc_2818582197;

  
}

function enlarge_2818581783(t_2818581786) {
    var n_2818581789 = [];
    n_2818581789 = new Array(chckRange(mulInt((t_2818581786.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818581786.data).length, 2), 0, 2147483647) ; ++i) { n_2818581789[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2818581786.data; t_2818581786.data = n_2818581789; n_2818581789 = Temporary1;    Label2: {
      var i_2818581869 = 0;
      var colontmp__2818590533 = 0;
      colontmp__2818590533 = (n_2818581789).length - 1;
      var res_2818590534 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818590534 <= colontmp__2818590533)) break Label4;
            i_2818581869 = res_2818590534;
            var eh_2818581947 = n_2818581789[chckIndx(i_2818581869, 0, (n_2818581789).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818581947)) {
            var j_2818581951 = (eh_2818581947 & (t_2818581786.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818581786.data[chckIndx(j_2818581951, 0, (t_2818581786.data).length - 1)].Field0)) break Label6;
                  j_2818581951 = nextTry_1308622883(j_2818581951, (t_2818581786.data).length - 1);
                }
            };
            rawInsert_2818582189(t_2818581786, t_2818581786, "data", n_2818581789[chckIndx(i_2818581869, 0, (n_2818581789).length - 1)].Field1, n_2818581789[chckIndx(i_2818581869, 0, (n_2818581789).length - 1)].Field2, eh_2818581947, j_2818581951);
            }
            
            res_2818590534 = addInt(res_2818590534, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818582430(t_2818582433, key_2818582434, hc_2818582435) {
  var result_2818582436 = 0;

  BeforeRet: {
    if (((t_2818582433.data).length == 0)) {
    result_2818582436 = -1;
    break BeforeRet;
    }
    
    var h_2818582503 = (hc_2818582435 & (t_2818582433.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818582433.data[chckIndx(h_2818582503, 0, (t_2818582433.data).length - 1)].Field0)) break Label2;
          if (((t_2818582433.data[chckIndx(h_2818582503, 0, (t_2818582433.data).length - 1)].Field0 == hc_2818582435) && (t_2818582433.data[chckIndx(h_2818582503, 0, (t_2818582433.data).length - 1)].Field1 == key_2818582434))) {
          result_2818582436 = h_2818582503;
          break BeforeRet;
          }
          
          h_2818582503 = nextTry_1308622883(h_2818582503, (t_2818582433.data).length - 1);
        }
    };
    result_2818582436 = subInt(-1, h_2818582503);
  };

  return result_2818582436;

}

function HEX5BHEX5DHEX3D_2818581028(t_2818581031, key_2818581032, val_2818581033) {
    if (((t_2818581031.data).length == 0)) {
    var correctSizeHEX60gensym147_2818581098 = slotsNeeded_1308622891(32);
    t_2818581031.counter = 0;
    t_2818581031.data = new Array(chckRange(correctSizeHEX60gensym147_2818581098, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym147_2818581098, 0, 2147483647) ; ++i) { t_2818581031.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2818581103 = [0];
    var index_2818581433 = rawGet_2818581104(t_2818581031, key_2818581032, hc_2818581103, 0);
    if ((0 <= index_2818581433)) {
    t_2818581031.data[chckIndx(index_2818581433, 0, (t_2818581031.data).length - 1)].Field2 = nimCopy(null, val_2818581033, NTI2818572535);
    }
    else {
      if (((t_2818581031.data).length == 0)) {
      var correctSizeHEX60gensym152_2818581575 = slotsNeeded_1308622891(32);
      t_2818581031.counter = 0;
      t_2818581031.data = new Array(chckRange(correctSizeHEX60gensym152_2818581575, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym152_2818581575, 0, 2147483647) ; ++i) { t_2818581031.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2818581580(t_2818581031)) {
      enlarge_2818581783(t_2818581031);
      index_2818581433 = rawGetKnownHC_2818582430(t_2818581031, key_2818581032, hc_2818581103[0]);
      }
      
      index_2818581433 = subInt(-1, index_2818581433);
      rawInsert_2818582189(t_2818581031, t_2818581031, "data", key_2818581032, val_2818581033, hc_2818581103[0], index_2818581433);
      t_2818581031.counter = addInt(t_2818581031.counter, 1);
    }
    

  
}

function isEmpty_1308622877(hcode_1308622878) {
  var result_1308622879 = false;

    result_1308622879 = (hcode_1308622878 == 0);

  return result_1308622879;

}

function del_2818582796(t_2818582799, key_2818582800) {
    var hc_2818582801 = [0];
    var i_2818582808 = rawGet_2818581104(t_2818582799, key_2818582800, hc_2818582801, 0);
    var mskHEX60gensym36_2818582812 = (t_2818582799.data).length - 1;
    if ((0 <= i_2818582808)) {
    t_2818582799.counter = subInt(t_2818582799.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2818582819 = i_2818582808;
            var rHEX60gensym36_2818582820 = jHEX60gensym36_2818582819;
            t_2818582799.data[chckIndx(i_2818582808, 0, (t_2818582799.data).length - 1)].Field0 = 0;
            t_2818582799.data[chckIndx(i_2818582808, 0, (t_2818582799.data).length - 1)].Field1 = 0;
            t_2818582799.data[chckIndx(i_2818582808, 0, (t_2818582799.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2818582808 = (addInt(i_2818582808, 1) & mskHEX60gensym36_2818582812);
                  if (isEmpty_1308622877(t_2818582799.data[chckIndx(i_2818582808, 0, (t_2818582799.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2818582820 = (t_2818582799.data[chckIndx(i_2818582808, 0, (t_2818582799.data).length - 1)].Field0 & mskHEX60gensym36_2818582812);
                  if (!(((((rHEX60gensym36_2818582820 <= i_2818582808) && (jHEX60gensym36_2818582819 < rHEX60gensym36_2818582820)) || ((jHEX60gensym36_2818582819 < rHEX60gensym36_2818582820) && (i_2818582808 < jHEX60gensym36_2818582819))) || ((i_2818582808 < jHEX60gensym36_2818582819) && (rHEX60gensym36_2818582820 <= i_2818582808))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2818582799.data[chckIndx(jHEX60gensym36_2818582819, 0, (t_2818582799.data).length - 1)] = nimCopy(t_2818582799.data[chckIndx(jHEX60gensym36_2818582819, 0, (t_2818582799.data).length - 1)], t_2818582799.data[chckIndx(i_2818582808, 0, (t_2818582799.data).length - 1)], NTI2818572547);
          }
      };
    };
    }
    

  
}

function updateSearchResults_2818580292(self_2818580293) {
  BeforeRet: {
    if (isNone_2818580298(self_2818580293.searchRegex)) {
    clear_2818580359(self_2818580293.searchResults);
    markDirty_2415919143(self_2818580293);
    break BeforeRet;
    }
    
    Label1: {
      var i_2818580935 = 0;
      var line_2818580936 = [];
      var i_2818590522 = 0;
      var L_2818590523 = (self_2818580293.document.lines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818590522 < L_2818590523)) break Label3;
            i_2818580935 = i_2818590522;
            line_2818580936 = self_2818580293.document.lines[chckIndx(i_2818590522, 0, (self_2818580293.document.lines).length - 1)];
            var selections_2818580941 = [];
            var start_2818580942 = 0;
            Label4: {
                Label5: while (true) {
                if (!(start_2818580942 < (line_2818580936).length)) break Label5;
                  var bounds_2818580967 = findBounds_2852126727(line_2818580936, get_2818580955(self_2818580293.searchRegex), start_2818580942);
                  if ((bounds_2818580967.Field0 == -1)) {
                  break Label4;
                  }
                  
                  selections_2818580941.push({Field0: {Field0: i_2818580935, Field1: bounds_2818580967.Field0}, Field1: {Field0: i_2818580935, Field1: addInt(bounds_2818580967.Field1, 1)}});;
                  start_2818580942 = nimMax(addInt(bounds_2818580967.Field1, 1), addInt(start_2818580942, 1));
                }
            };
            if ((0 < (selections_2818580941).length)) {
            HEX5BHEX5DHEX3D_2818581028(self_2818580293.searchResults, i_2818580935, selections_2818580941);
            }
            else {
            del_2818582796(self_2818580293.searchResults, i_2818580935);
            }
            
            i_2818590522 = addInt(i_2818590522, 1);
            if (!(((self_2818580293.document.lines).length == L_2818590523))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    markDirty_2415919143(self_2818580293);
  };

  
}

function setSearchQuery_2818590453(self_2818590454, query_2818590455) {
    self_2818590454.searchQuery = nimCopy(null, query_2818590455, NTI33554449);
    self_2818590454.searchRegex = nimCopy(self_2818590454.searchRegex, some_2818590456(re_2852126779(query_2818590455)), NTI2818572524);
    updateSearchResults_2818580292(self_2818590454);

  
}

function setSearchQueryJsWrapper_2818590449(self_2818590498, query_2818590499) {
    setSearchQuery_2818590453(self_2818590498, query_2818590499);

  
}
editor_text_prototype.setSearchQuery = function(query_ /* : string */) { return (setSearchQueryJsWrapper_2818590449(this, query_ == undefined ? undefined : cstrToNimstr(query_)));};

function setSearchQueryFromMove_2818590545(self_2818590546, move_2818590547, count_2818590548) {
    var selection_2818590549 = getSelectionForMove_2818589333(self_2818590546, selection_2818572803(self_2818590546).Field1, move_2818590547, count_2818590548);
    selectionHEX3D_2818572809(self_2818590546, selection_2818590549);
    setSearchQuery_2818590453(self_2818590546, contentString_2818574089(self_2818590546.document, selection_2818590549));

  
}

function setSearchQueryFromMoveJsWrapper_2818590541(self_2818590579, move_2818590580, count_2818590581) {
    setSearchQueryFromMove_2818590545(self_2818590579, move_2818590580, count_2818590581);

  
}
editor_text_prototype.setSearchQueryFromMove = function(move_ /* : string */, count_ /* : int */) { return (setSearchQueryFromMoveJsWrapper_2818590541(this, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function none_2936012824() {
  var result_2936012830 = ({val: null});

  return result_2936012830;

}

function isSome_2818579155(self_2818579157) {
  var result_2818579158 = false;

    result_2818579158 = !((self_2818579157.val == null));

  return result_2818579158;

}
async function getOrCreateLanguageServer_2936012808(languageId_2936012809, filename_2936012810) {
  var result_2936012814 = null;

  BeforeRet: {
    result_2936012814 = none_2936012824();
    break BeforeRet;
  };

  return result_2936012814;

}
async function saveTempFile_2818579062(self_2818579063, filename_2818579064) {
  var result_2818579066 = null;

  BeforeRet: {
    result_2818579066 = undefined;
    break BeforeRet;
  };

  return result_2818579066;

}

function hash_2919236192(x_2919236194) {
  var result_2919236195 = 0;

    result_2919236195 = hashWangYi1_1325400244(x_2919236194);

  return result_2919236195;

}

function rawGet_2919236185(t_2919236188, key_2919236189, hc_2919236190, hc_2919236190_Idx) {
  var result_2919236191 = 0;

  BeforeRet: {
    hc_2919236190[hc_2919236190_Idx] = hash_2919236192(key_2919236189);
    if ((hc_2919236190[hc_2919236190_Idx] == 0)) {
    hc_2919236190[hc_2919236190_Idx] = 314159265;
    }
    
    if (((t_2919236188.data).length == 0)) {
    result_2919236191 = -1;
    break BeforeRet;
    }
    
    var h_2919236254 = (hc_2919236190[hc_2919236190_Idx] & (t_2919236188.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0)) break Label2;
          if (((t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0 == hc_2919236190[hc_2919236190_Idx]) && (t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field1 == key_2919236189))) {
          result_2919236191 = h_2919236254;
          break BeforeRet;
          }
          
          h_2919236254 = nextTry_1308622883(h_2919236254, (t_2919236188.data).length - 1);
        }
    };
    result_2919236191 = subInt(-1, h_2919236254);
  };

  return result_2919236191;

}

function mustRehash_2919236752(t_2919236754) {
  var result_2919236755 = false;

    if (!((t_2919236754.counter < (t_2919236754.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919236755 = ((mulInt((t_2919236754.data).length, 2) < mulInt(t_2919236754.counter, 3)) || (subInt((t_2919236754.data).length, t_2919236754.counter) < 4));

  return result_2919236755;

}

function rawInsert_2919237201(t_2919237205, data_2919237206, data_2919237206_Idx, key_2919237207, val_2919237208, hc_2919237209, h_2919237210) {
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field1 = key_2919237207;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field2 = val_2919237208;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field0 = hc_2919237209;

  
}

function enlarge_2919236907(t_2919236910) {
    var n_2919236913 = [];
    n_2919236913 = new Array(chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647) ; ++i) { n_2919236913[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2919236910.data; t_2919236910.data = n_2919236913; n_2919236913 = Temporary1;    Label2: {
      var i_2919236977 = 0;
      var colontmp__2818593115 = 0;
      colontmp__2818593115 = (n_2919236913).length - 1;
      var res_2818593116 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818593116 <= colontmp__2818593115)) break Label4;
            i_2919236977 = res_2818593116;
            var eh_2919237031 = n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919237031)) {
            var j_2919237035 = (eh_2919237031 & (t_2919236910.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919236910.data[chckIndx(j_2919237035, 0, (t_2919236910.data).length - 1)].Field0)) break Label6;
                  j_2919237035 = nextTry_1308622883(j_2919237035, (t_2919236910.data).length - 1);
                }
            };
            rawInsert_2919237201(t_2919236910, t_2919236910, "data", n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field1, n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field2, eh_2919237031, j_2919237035);
            }
            
            res_2818593116 = addInt(res_2818593116, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919237388(t_2919237391, key_2919237392, hc_2919237393) {
  var result_2919237394 = 0;

  BeforeRet: {
    if (((t_2919237391.data).length == 0)) {
    result_2919237394 = -1;
    break BeforeRet;
    }
    
    var h_2919237445 = (hc_2919237393 & (t_2919237391.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0)) break Label2;
          if (((t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0 == hc_2919237393) && (t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field1 == key_2919237392))) {
          result_2919237394 = h_2919237445;
          break BeforeRet;
          }
          
          h_2919237445 = nextTry_1308622883(h_2919237445, (t_2919237391.data).length - 1);
        }
    };
    result_2919237394 = subInt(-1, h_2919237445);
  };

  return result_2919237394;

}

function HEX5BHEX5DHEX3D_2919236579(t_2919236582, key_2919236583, val_2919236584) {
    if (((t_2919236582.data).length == 0)) {
    var correctSizeHEX60gensym12_2919236633 = slotsNeeded_1308622891(32);
    t_2919236582.counter = 0;
    t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2919236638 = [0];
    var index_2919236645 = rawGet_2919236185(t_2919236582, key_2919236583, hc_2919236638, 0);
    if ((0 <= index_2919236645)) {
    t_2919236582.data[chckIndx(index_2919236645, 0, (t_2919236582.data).length - 1)].Field2 = val_2919236584;
    }
    else {
      if (((t_2919236582.data).length == 0)) {
      var correctSizeHEX60gensym15_2919236747 = slotsNeeded_1308622891(32);
      t_2919236582.counter = 0;
      t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2919236752(t_2919236582)) {
      enlarge_2919236907(t_2919236582);
      index_2919236645 = rawGetKnownHC_2919237388(t_2919236582, key_2919236583, hc_2919236638[0]);
      }
      
      index_2919236645 = subInt(-1, index_2919236645);
      rawInsert_2919237201(t_2919236582, t_2919236582, "data", key_2919236583, val_2919236584, hc_2919236638[0], index_2919236645);
      t_2919236582.counter = addInt(t_2919236582.counter, 1);
    }
    

  
}

function rawGet_2919235731(t_2919235734, key_2919235735, hc_2919235736, hc_2919235736_Idx) {
  var result_2919235737 = 0;

  BeforeRet: {
    hc_2919235736[hc_2919235736_Idx] = hash_1325400491(key_2919235735);
    if ((hc_2919235736[hc_2919235736_Idx] == 0)) {
    hc_2919235736[hc_2919235736_Idx] = 314159265;
    }
    
    if (((t_2919235734.data).length == 0)) {
    result_2919235737 = -1;
    break BeforeRet;
    }
    
    var h_2919235789 = (hc_2919235736[hc_2919235736_Idx] & (t_2919235734.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0)) break Label2;
          if (((t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0 == hc_2919235736[hc_2919235736_Idx]) && eqStrings(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field1, key_2919235735))) {
          result_2919235737 = h_2919235789;
          break BeforeRet;
          }
          
          h_2919235789 = nextTry_1308622883(h_2919235789, (t_2919235734.data).length - 1);
        }
    };
    result_2919235737 = subInt(-1, h_2919235789);
  };

  return result_2919235737;

}

function hasKey_2919235724(t_2919235727, key_2919235728) {
  var result_2919235729 = false;

    var hc_2919235730 = [0];
    result_2919235729 = (0 <= rawGet_2919235731(t_2919235727, key_2919235728, hc_2919235730, 0));

  return result_2919235729;

}

function contains_2919235718(t_2919235721, key_2919235722) {
  var result_2919235723 = false;

  BeforeRet: {
    result_2919235723 = hasKey_2919235724(t_2919235721, key_2919235722);
    break BeforeRet;
  };

  return result_2919235723;

}

function HEX5BHEX5D_2919236023(t_2919236026, key_2919236027) {
  var result_2919236028 = null;
  var result_2919236028_Idx = 0;

    var hcHEX60gensym22_2919236029 = [0];
    var indexHEX60gensym22_2919236036 = rawGet_2919235731(t_2919236026, key_2919236027, hcHEX60gensym22_2919236029, 0);
    if ((0 <= indexHEX60gensym22_2919236036)) {
    result_2919236028 = t_2919236026.data[chckIndx(indexHEX60gensym22_2919236036, 0, (t_2919236026.data).length - 1)]; result_2919236028_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_2919236027);
    }
    

  return [result_2919236028, result_2919236028_Idx];

}

function mustRehash_2919237952(t_2919237954) {
  var result_2919237955 = false;

    if (!((t_2919237954.counter < (t_2919237954.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919237955 = ((mulInt((t_2919237954.data).length, 2) < mulInt(t_2919237954.counter, 3)) || (subInt((t_2919237954.data).length, t_2919237954.counter) < 4));

  return result_2919237955;

}

function rawInsert_2919238401(t_2919238405, data_2919238406, data_2919238406_Idx, key_2919238407, val_2919238408, hc_2919238409, h_2919238410) {
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field1 = nimCopy(null, key_2919238407, NTI33554449);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field2 = nimCopy(null, val_2919238408, NTI2919235613);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field0 = hc_2919238409;

  
}

function enlarge_2919238107(t_2919238110) {
    var n_2919238113 = [];
    n_2919238113 = new Array(chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647) ; ++i) { n_2919238113[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_2919238110.data; t_2919238110.data = n_2919238113; n_2919238113 = Temporary1;    Label2: {
      var i_2919238177 = 0;
      var colontmp__2818593122 = 0;
      colontmp__2818593122 = (n_2919238113).length - 1;
      var res_2818593123 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818593123 <= colontmp__2818593122)) break Label4;
            i_2919238177 = res_2818593123;
            var eh_2919238231 = n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919238231)) {
            var j_2919238235 = (eh_2919238231 & (t_2919238110.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919238110.data[chckIndx(j_2919238235, 0, (t_2919238110.data).length - 1)].Field0)) break Label6;
                  j_2919238235 = nextTry_1308622883(j_2919238235, (t_2919238110.data).length - 1);
                }
            };
            rawInsert_2919238401(t_2919238110, t_2919238110, "data", n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field1, n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field2, eh_2919238231, j_2919238235);
            }
            
            res_2818593123 = addInt(res_2818593123, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919238570(t_2919238573, key_2919238574, hc_2919238575) {
  var result_2919238576 = 0;

  BeforeRet: {
    if (((t_2919238573.data).length == 0)) {
    result_2919238576 = -1;
    break BeforeRet;
    }
    
    var h_2919238627 = (hc_2919238575 & (t_2919238573.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0)) break Label2;
          if (((t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0 == hc_2919238575) && eqStrings(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field1, key_2919238574))) {
          result_2919238576 = h_2919238627;
          break BeforeRet;
          }
          
          h_2919238627 = nextTry_1308622883(h_2919238627, (t_2919238573.data).length - 1);
        }
    };
    result_2919238576 = subInt(-1, h_2919238627);
  };

  return result_2919238576;

}

function HEX5BHEX5DHEX3D_2919237779(t_2919237782, key_2919237783, val_2919237784) {
    if (((t_2919237782.data).length == 0)) {
    var correctSizeHEX60gensym24_2919237833 = slotsNeeded_1308622891(32);
    t_2919237782.counter = 0;
    t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_2919237838 = [0];
    var index_2919237845 = rawGet_2919235731(t_2919237782, key_2919237783, hc_2919237838, 0);
    if ((0 <= index_2919237845)) {
    t_2919237782.data[chckIndx(index_2919237845, 0, (t_2919237782.data).length - 1)].Field2 = nimCopy(null, val_2919237784, NTI2919235613);
    }
    else {
      if (((t_2919237782.data).length == 0)) {
      var correctSizeHEX60gensym27_2919237947 = slotsNeeded_1308622891(32);
      t_2919237782.counter = 0;
      t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_2919237952(t_2919237782)) {
      enlarge_2919238107(t_2919237782);
      index_2919237845 = rawGetKnownHC_2919238570(t_2919237782, key_2919237783, hc_2919237838[0]);
      }
      
      index_2919237845 = subInt(-1, index_2919237845);
      rawInsert_2919238401(t_2919237782, t_2919237782, "data", key_2919237783, val_2919237784, hc_2919237838[0], index_2919237845);
      t_2919237782.counter = addInt(t_2919237782.counter, 1);
    }
    

  
}

function addOnRequestSaveHandler_2919236526(self_2919236527, filename_2919236528, handler_2919236532) {
    var Temporary1;

  var result_2919236533 = 0;

    result_2919236533 = handleIdCounter_2919235663[0];
    handleIdCounter_2919235663[0] = addInt(handleIdCounter_2919235663[0], 1);
    HEX5BHEX5DHEX3D_2919236579(self_2919236527.onRequestSave, result_2919236533, handler_2919236532);
    if (contains_2919235718(self_2919236527.onRequestSaveIndex, filename_2919236528)) {
    (Temporary1 = HEX5BHEX5D_2919236023(self_2919236527.onRequestSaveIndex, filename_2919236528), Temporary1)[0][Temporary1[1]].push(result_2919236533);;
    }
    else {
    HEX5BHEX5DHEX3D_2919237779(self_2919236527.onRequestSaveIndex, filename_2919236528, [result_2919236533]);
    }
    

  return result_2919236533;

}

function isNone_2818579183(self_2818579185) {
  var result_2818579186 = false;

    result_2818579186 = (self_2818579185.val == null);

  return result_2818579186;

}

function get_2818579175(self_2818579177) {
  var result_2818579178 = null;
  var result_2818579178_Idx = 0;

  BeforeRet: {
    if (isNone_2818579183(self_2818579177)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818579178 = self_2818579177; result_2818579178_Idx = "val";
    break BeforeRet;
  };

  return [result_2818579178, result_2818579178_Idx];

}
async function getLanguageServer_2818590609(self_2818590610) {
    var Temporary1;
      var Temporary2;
      async function HEX3Aanonymous_2818590683(targetFilename_2818590684) {
        var result_2818590686 = null;

        BeforeRet: {
          (await saveTempFile_2818579062(self_2818590610.document, targetFilename_2818590684));
          result_2818590686 = undefined;
          break BeforeRet;
        };

        return result_2818590686;

      }
      var Temporary3;

  var result_2818590613 = null;

  BeforeRet: {
      var oHEX60gensym848_2818590625 = getLanguageForFile_2902458372(self_2818590610.document.filename);
      if (!isSome_2348810304(oHEX60gensym848_2818590625)) Temporary2 = false; else {        var languageId_2818590648 = nimCopy(null, get_2818578905(oHEX60gensym848_2818590625), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818590648;
    }
    else {
      result_2818590613 = none_2936012824();
      break BeforeRet;
    }
    
    var languageId_2818590659 = nimCopy(null, Temporary1, NTI33554449);
    if (isSome_2818579155(self_2818590610.document.languageServer)) {
    result_2818590613 = self_2818590610.document.languageServer;
    break BeforeRet;
    }
    else {
      self_2818590610.document.languageServer = nimCopy(self_2818590610.document.languageServer, (await getOrCreateLanguageServer_2936012808(languageId_2818590659, self_2818590610.document.filename)), NTI2818572486);
      if (isSome_2818579155(self_2818590610.document.languageServer)) {
      var callback_2818590697 = HEX3Aanonymous_2818590683;
      self_2818590610.document.onRequestSaveHandle = addOnRequestSaveHandler_2919236526((Temporary3 = get_2818579175(self_2818590610.document.languageServer), Temporary3)[0][Temporary3[1]], self_2818590610.document.filename, callback_2818590697);
      }
      
      result_2818590613 = self_2818590610.document.languageServer;
      break BeforeRet;
    }
    
  };

  return result_2818590613;

}

function get_2818590758(self_2818590760) {
  var result_2818590761 = null;

    if (isNone_2818579183(self_2818590760)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818590761 = self_2818590760["val"];

  return result_2818590761;

}

function isSome_2818590788(self_2818590790) {
  var result_2818590791 = false;

    result_2818590791 = self_2818590790.has;

  return result_2818590791;

}

function isNone_2818590813(self_2818590815) {
  var result_2818590816 = false;

    result_2818590816 = !(self_2818590815.has);

  return result_2818590816;

}

function get_2818590805(self_2818590807) {
  var result_2818590808 = ({location: {Field0: 0, Field1: 0}, filename: []});

    if (isNone_2818590813(self_2818590807)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818590808 = self_2818590807.val;

  return result_2818590808;

}
async function gotoDefinitionAsync_2818590718(self_2818590719) {
  var result_2818590721 = null;

  BeforeRet: {
    var languageServer_2818590731 = (await getLanguageServer_2818590609(self_2818590719));
    if (isNone_2818579183(languageServer_2818590731)) {
    result_2818590721 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2818579155(languageServer_2818590731)) {
    var definition_2818590783 = (await getDefinition_2919235651(get_2818590758(languageServer_2818590731), self_2818590719.document.filename, selection_2818572803(self_2818590719).Field1));
    if (isSome_2818590788(definition_2818590783)) {
    selectionHEX3D_2818572809(self_2818590719, toSelection_2449474029(get_2818590805(definition_2818590783).location));
    scrollToCursor_2818584036(self_2818590719, 0);
    }
    
    }
    
    result_2818590721 = undefined;
    break BeforeRet;
  };

  return result_2818590721;

}

function gotoDefinition_2818593068(self_2818593069) {
    var _ = gotoDefinitionAsync_2818590718(self_2818593069);

  
}

function gotoDefinitionJsWrapper_2818593064(self_2818593097) {
    gotoDefinition_2818593068(self_2818593097);

  
}
editor_text_prototype.gotoDefinition = function() { return (gotoDefinitionJsWrapper_2818593064(this));};

function slotsNeeded_1828716594(count_1828716595) {
  var result_1828716596 = 0;

    result_1828716596 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1828716595, 3), 2), 4));

  return result_1828716596;

}

function init_2818590861(s_2818590863, initialSize_2818590864) {
    var correctSizeHEX60gensym859_2818590866 = slotsNeeded_1828716594(chckRange(initialSize_2818590864, 0, 2147483647));
    s_2818590863.counter = 0;
    s_2818590863.data = new Array(chckRange(correctSizeHEX60gensym859_2818590866, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym859_2818590866, 0, 2147483647) ; ++i) { s_2818590863.data[i] = {Field0: 0, Field1: []}; }
  
}

function initHashSet_2818590849(initialSize_2818590851) {
  var result_2818590856 = [({data: [], counter: 0})];

    init_2818590861(result_2818590856[0], initialSize_2818590851);

  return result_2818590856[0];

}

function allCharsInSet_855639569(s_855639570, theSet_855639571) {
  var result_855639572 = false;

  BeforeRet: {
    Label1: {
      var c_855639573 = 0;
      var i_2818593203 = 0;
      var L_2818593204 = (s_855639570).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818593203 < L_2818593204)) break Label3;
            c_855639573 = s_855639570[chckIndx(i_2818593203, 0, (s_855639570).length - 1)];
            if (!((theSet_855639571[c_855639573] != undefined))) {
            result_855639572 = false;
            break BeforeRet;
            }
            
            i_2818593203 = addInt(i_2818593203, 1);
            if (!(((s_855639570).length == L_2818593204))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_855639572 = true;
    break BeforeRet;
  };

  return result_855639572;

}

function nsuIsEmptyOrWhitespace(s_855640546) {
  var result_855640547 = false;

    result_855640547 = allCharsInSet_855639569(s_855640546, ConstSet58);

  return result_855640547;

}

function nsuIsAlphaAsciiChar(c_855638054) {
  var result_855638055 = false;

  BeforeRet: {
    result_855638055 = (ConstSet59[c_855638054] != undefined);
    break BeforeRet;
  };

  return result_855638055;

}

function isFilled_1828716583(hcode_1828716584) {
  var result_1828716585 = false;

    result_1828716585 = !((hcode_1828716584 == 0));

  return result_1828716585;

}

function nextTry_1828716586(h_1828716587, maxHash_1828716588) {
  var result_1828716589 = 0;

    result_1828716589 = (addInt(h_1828716587, 1) & maxHash_1828716588);

  return result_1828716589;

}

function rawGet_2818591073(t_2818591076, key_2818591077, hc_2818591078, hc_2818591078_Idx) {
  var result_2818591079 = 0;

  BeforeRet: {
    hc_2818591078[hc_2818591078_Idx] = hash_1325400491(key_2818591077);
    if ((hc_2818591078[hc_2818591078_Idx] == 0)) {
    hc_2818591078[hc_2818591078_Idx] = 314159265;
    }
    
    if (((t_2818591076.data).length == 0)) {
    result_2818591079 = -1;
    break BeforeRet;
    }
    
    var h_2818591146 = (hc_2818591078[hc_2818591078_Idx] & (t_2818591076.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2818591076.data[chckIndx(h_2818591146, 0, (t_2818591076.data).length - 1)].Field0)) break Label2;
          if (((t_2818591076.data[chckIndx(h_2818591146, 0, (t_2818591076.data).length - 1)].Field0 == hc_2818591078[hc_2818591078_Idx]) && eqStrings(t_2818591076.data[chckIndx(h_2818591146, 0, (t_2818591076.data).length - 1)].Field1, key_2818591077))) {
          result_2818591079 = h_2818591146;
          break BeforeRet;
          }
          
          h_2818591146 = nextTry_1828716586(h_2818591146, (t_2818591076.data).length - 1);
        }
    };
    result_2818591079 = subInt(-1, h_2818591146);
  };

  return result_2818591079;

}

function mustRehash_2818591391(t_2818591393) {
  var result_2818591394 = false;

    if (!((t_2818591393.counter < (t_2818591393.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818591394 = ((mulInt((t_2818591393.data).length, 2) < mulInt(t_2818591393.counter, 3)) || (subInt((t_2818591393.data).length, t_2818591393.counter) < 4));

  return result_2818591394;

}

function rawGetKnownHC_2818591916(t_2818591919, key_2818591920, hc_2818591921) {
  var result_2818591922 = 0;

  BeforeRet: {
    if (((t_2818591919.data).length == 0)) {
    result_2818591922 = -1;
    break BeforeRet;
    }
    
    var h_2818591989 = (hc_2818591921 & (t_2818591919.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2818591919.data[chckIndx(h_2818591989, 0, (t_2818591919.data).length - 1)].Field0)) break Label2;
          if (((t_2818591919.data[chckIndx(h_2818591989, 0, (t_2818591919.data).length - 1)].Field0 == hc_2818591921) && eqStrings(t_2818591919.data[chckIndx(h_2818591989, 0, (t_2818591919.data).length - 1)].Field1, key_2818591920))) {
          result_2818591922 = h_2818591989;
          break BeforeRet;
          }
          
          h_2818591989 = nextTry_1828716586(h_2818591989, (t_2818591919.data).length - 1);
        }
    };
    result_2818591922 = subInt(-1, h_2818591989);
  };

  return result_2818591922;

}

function rawInsert_2818592383(s_2818592385, data_2818592386, data_2818592386_Idx, key_2818592387, hc_2818592388, h_2818592389) {
    if (((data_2818592386[data_2818592386_Idx]).length == 0)) {
    var correctSizeHEX60gensym874_2818592454 = slotsNeeded_1828716594(64);
    s_2818592385.counter = 0;
    s_2818592385.data = new Array(chckRange(correctSizeHEX60gensym874_2818592454, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym874_2818592454, 0, 2147483647) ; ++i) { s_2818592385.data[i] = {Field0: 0, Field1: []}; }    }
    
    data_2818592386[data_2818592386_Idx][chckIndx(h_2818592389, 0, (data_2818592386[data_2818592386_Idx]).length - 1)].Field1 = nimCopy(null, key_2818592387, NTI33554449);
    data_2818592386[data_2818592386_Idx][chckIndx(h_2818592389, 0, (data_2818592386[data_2818592386_Idx]).length - 1)].Field0 = hc_2818592388;

  
}

function enlarge_2818591600(s_2818591602) {
    var n_2818591604 = [];
    n_2818591604 = new Array(chckRange(mulInt((s_2818591602.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2818591602.data).length, 2), 0, 2147483647) ; ++i) { n_2818591604[i] = {Field0: 0, Field1: []}; }    var Temporary1 = s_2818591602.data; s_2818591602.data = n_2818591604; n_2818591604 = Temporary1;    Label2: {
      var i_2818591684 = 0;
      var colontmp__2818593208 = 0;
      colontmp__2818593208 = (n_2818591604).length - 1;
      var res_2818593209 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818593209 <= colontmp__2818593208)) break Label4;
            i_2818591684 = res_2818593209;
            if (isFilled_1828716583(n_2818591604[chckIndx(i_2818591684, 0, (n_2818591604).length - 1)].Field0)) {
            var j_2818592224 = subInt(-1, rawGetKnownHC_2818591916(s_2818591602, n_2818591604[chckIndx(i_2818591684, 0, (n_2818591604).length - 1)].Field1, n_2818591604[chckIndx(i_2818591684, 0, (n_2818591604).length - 1)].Field0));
            rawInsert_2818592383(s_2818591602, s_2818591602, "data", n_2818591604[chckIndx(i_2818591684, 0, (n_2818591604).length - 1)].Field1, n_2818591604[chckIndx(i_2818591684, 0, (n_2818591604).length - 1)].Field0, j_2818592224);
            }
            
            res_2818593209 = addInt(res_2818593209, 1);
          }
      };
    };

  
}

function incl_2818590981(s_2818590983, key_2818590984) {
    if (((s_2818590983.data).length == 0)) {
    var correctSizeHEX60gensym865_2818591050 = slotsNeeded_1828716594(64);
    s_2818590983.counter = 0;
    s_2818590983.data = new Array(chckRange(correctSizeHEX60gensym865_2818591050, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym865_2818591050, 0, 2147483647) ; ++i) { s_2818590983.data[i] = {Field0: 0, Field1: []}; }    }
    
    var hc_2818591065 = [0];
    var index_2818591390 = rawGet_2818591073(s_2818590983, key_2818590984, hc_2818591065, 0);
    if ((index_2818591390 < 0)) {
    if (mustRehash_2818591391(s_2818590983)) {
    enlarge_2818591600(s_2818590983);
    index_2818591390 = rawGetKnownHC_2818591916(s_2818590983, key_2818590984, hc_2818591065[0]);
    }
    
    rawInsert_2818592383(s_2818590983, s_2818590983, "data", key_2818590984, hc_2818591065[0], subInt(-1, index_2818591390));
    s_2818590983.counter = addInt(s_2818590983.counter, 1);
    }
    

  
}

function len_2818592715(s_2818592717) {
  var result_2818592718 = 0;

    result_2818592718 = s_2818592717.counter;

  return result_2818592718;

}

function getCompletionsFromContent_2818590846(self_2818590847) {
  var result_2818590848 = [];

    var s_2818590890 = [initHashSet_2818590849(64)];
    Label1: {
      var li_2818590924 = 0;
      var line_2818590925 = null;
      var i_2818593188 = 0;
      var L_2818593189 = (self_2818590847.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818593188 < L_2818593189)) break Label3;
            li_2818590924 = i_2818593188;
            line_2818590925 = self_2818590847.lastRenderedLines[chckIndx(i_2818593188, 0, (self_2818590847.lastRenderedLines).length - 1)];
            Label4: {
              var i_2818590958 = 0;
              var part_2818590959 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_2818593184 = 0;
              var L_2818593185 = (line_2818590925.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2818593184 < L_2818593185)) break Label6;
                    i_2818590958 = i_2818593184;
                    part_2818590959 = nimCopy(part_2818590959, line_2818590925.parts[chckIndx(i_2818593184, 0, (line_2818590925.parts).length - 1)], NTI2818572422);
                    Label7: {
                      if (((50 < (part_2818590959.text).length) || nsuIsEmptyOrWhitespace(part_2818590959.text))) {
                      break Label7;
                      }
                      
                      var use_2818590960 = false;
                      Label8: {
                        var c_2818590961 = 0;
                        var i_2818593180 = 0;
                        var L_2818593181 = (part_2818590959.text).length;
                        Label9: {
                            Label10: while (true) {
                            if (!(i_2818593180 < L_2818593181)) break Label10;
                              c_2818590961 = part_2818590959.text[chckIndx(i_2818593180, 0, (part_2818590959.text).length - 1)];
                              if (((((nsuIsAlphaAsciiChar(c_2818590961) || (c_2818590961 == 95)) || (c_2818590961 == 64)) || (c_2818590961 == 36)) || (c_2818590961 == 35))) {
                              use_2818590960 = true;
                              break Label8;
                              }
                              
                              i_2818593180 = addInt(i_2818593180, 1);
                              if (!(((part_2818590959.text).length == L_2818593181))) {
                              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      if (!(use_2818590960)) {
                      break Label7;
                      }
                      
                      incl_2818590981(s_2818590890[0], part_2818590959.text);
                    };
                    i_2818593184 = addInt(i_2818593184, 1);
                    if (!(((line_2818590925.parts).length == L_2818593185))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_2818593188 = addInt(i_2818593188, 1);
            if (!(((self_2818590847.lastRenderedLines).length == L_2818593189))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label11: {
      var text_2818592950 = [];
      var length_2818593196 = len_2818592715(s_2818590890[0]);
      Label12: {
        var h_2818593198 = 0;
        var colontmp__2818593199 = 0;
        colontmp__2818593199 = (s_2818590890[0].data).length - 1;
        var res_2818593200 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_2818593200 <= colontmp__2818593199)) break Label14;
              h_2818593198 = res_2818593200;
              if (isFilled_1828716583(s_2818590890[0].data[chckIndx(h_2818593198, 0, (s_2818590890[0].data).length - 1)].Field0)) {
              text_2818592950 = s_2818590890[0].data[chckIndx(h_2818593198, 0, (s_2818590890[0].data).length - 1)].Field1;
              result_2818590848.push({name: nimCopy(null, text_2818592950, NTI33554449), scope: [100,111,99,117,109,101,110,116], location: {Field0: 0, Field1: 0}, filename: [], kind: 0, typ: [], doc: []});;
              if (!((len_2818592715(s_2818590890[0]) == length_2818593196))) {
              failedAssertImpl_268435515(makeNimstrLit("sets.nim(269, 13) `len(s) == length` the length of the HashSet changed while iterating over it"));
              }
              
              }
              
              res_2818593200 = addInt(res_2818593200, 1);
            }
        };
      };
    };

  return result_2818590848;

}
async function getCompletionsAsync_2818586170(self_2818586171) {
  var result_2818592986 = null;

  BeforeRet: {
    var languageServer_2818592996 = (await getLanguageServer_2818590609(self_2818586171));
    if (isSome_2818579155(languageServer_2818592996)) {
    self_2818586171.completions = nimCopy(null, (await getCompletions_2919235661(get_2818590758(languageServer_2818592996), self_2818586171.document.languageId, self_2818586171.document.filename, selection_2818572803(self_2818586171).Field1)), NTI2919235662);
    }
    else {
      self_2818586171.completions = nimCopy(null, getCompletionsFromContent_2818590846(self_2818586171), NTI2818584215);
    }
    
    self_2818586171.selectedCompletion = clamp_1660945119(self_2818586171.selectedCompletion, 0, (self_2818586171.completions).length - 1);
    if (((self_2818586171.completions).length == 0)) {
    self_2818586171.showCompletions = false;
    }
    else {
      self_2818586171.showCompletions = true;
    }
    
    markDirty_2415919143(self_2818586171);
    result_2818592986 = undefined;
    break BeforeRet;
  };

  return result_2818592986;

}

function getCompletions_2818593132(self_2818593133) {
    var _ = getCompletionsAsync_2818586170(self_2818593133);

  
}

function getCompletionsJsWrapper_2818593128(self_2818593161) {
    getCompletions_2818593132(self_2818593161);

  
}
editor_text_prototype.getCompletions = function() { return (getCompletionsJsWrapper_2818593128(this));};

function hideCompletions_2818593218(self_2818593219) {
    self_2818593219.showCompletions = false;
    markDirty_2415919143(self_2818593219);

  
}

function hideCompletionsJsWrapper_2818593214(self_2818593247) {
    hideCompletions_2818593218(self_2818593247);

  
}
editor_text_prototype.hideCompletions = function() { return (hideCompletionsJsWrapper_2818593214(this));};

function some_1191184367(val_1191184369) {
  var result_1191184370 = ({val: 0, has: false});

    result_1191184370.has = true;
    result_1191184370.val = val_1191184369;

  return result_1191184370;

}

function selectPrevCompletion_2818593268(self_2818593269) {
    if ((0 < (self_2818593269.completions).length)) {
    self_2818593269.selectedCompletion = clamp_1660945119(subInt(self_2818593269.selectedCompletion, 1), 0, subInt((self_2818593269.completions).length, 1));
    }
    else {
      self_2818593269.selectedCompletion = 0;
    }
    
    self_2818593269.scrollToCompletion = nimCopy(self_2818593269.scrollToCompletion, some_1191184367(self_2818593269.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2818593269);

  
}

function selectPrevCompletionJsWrapper_2818593264(self_2818593314) {
    selectPrevCompletion_2818593268(self_2818593314);

  
}
editor_text_prototype.selectPrevCompletion = function() { return (selectPrevCompletionJsWrapper_2818593264(this));};

function selectNextCompletion_2818593335(self_2818593336) {
    if ((0 < (self_2818593336.completions).length)) {
    self_2818593336.selectedCompletion = clamp_1660945119(addInt(self_2818593336.selectedCompletion, 1), 0, subInt((self_2818593336.completions).length, 1));
    }
    else {
      self_2818593336.selectedCompletion = 0;
    }
    
    self_2818593336.scrollToCompletion = nimCopy(self_2818593336.scrollToCompletion, some_1191184367(self_2818593336.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2818593336);

  
}

function selectNextCompletionJsWrapper_2818593331(self_2818593381) {
    selectNextCompletion_2818593335(self_2818593381);

  
}
editor_text_prototype.selectNextCompletion = function() { return (selectNextCompletionJsWrapper_2818593331(this));};

function addEscapedChar_33557761(s_33557762, s_33557762_Idx, c_33557763) {
    switch (c_33557763) {
    case 7:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,97]);;
      break;
    case 8:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,98]);;
      break;
    case 9:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,116]);;
      break;
    case 10:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,110]);;
      break;
    case 11:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,118]);;
      break;
    case 12:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,102]);;
      break;
    case 13:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,114]);;
      break;
    case 27:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,101]);;
      break;
    case 92:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,92]);;
      break;
    case 39:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,39]);;
      break;
    case 34:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557762[s_33557762_Idx], c_33557763);;
      break;
    default: 
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,120]);;
      var n_33557773 = c_33557763;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33557773 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33557773 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_1593835572(s_1593835574, s_1593835574_Idx, x_1593835575) {
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;
    Label1: {
      var c_1593835576 = 0;
      var i_2818593581 = 0;
      var L_2818593582 = (x_1593835575).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818593581 < L_2818593582)) break Label3;
            c_1593835576 = x_1593835575[chckIndx(i_2818593581, 0, (x_1593835575).length - 1)];
            if ((c_1593835576 <= 127)) {
            addEscapedChar_33557761(s_1593835574, s_1593835574_Idx, c_1593835576);
            }
            else {
            addChar(s_1593835574[s_1593835574_Idx], c_1593835576);;
            }
            
            i_2818593581 = addInt(i_2818593581, 1);
            if (!(((x_1593835575).length == L_2818593582))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;

  
}

function HEX24_2449473857(cursor_2449473858) {
  var result_2449473859 = [];

  BeforeRet: {
    result_2449473859 = nimCopy(null, (HEX24_369098760(cursor_2449473858.Field0) || []).concat([58] || [],HEX24_369098760(cursor_2449473858.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2449473859;

}

function addQuoted_2818593468(s_2818593470, s_2818593470_Idx, x_2818593471) {
    s_2818593470[s_2818593470_Idx].push.apply(s_2818593470[s_2818593470_Idx], HEX24_2449473857(x_2818593471));;

  
}

function addQuoted_2818593497(s_2818593499, s_2818593499_Idx, x_2818593500) {
    s_2818593499[s_2818593499_Idx].push.apply(s_2818593499[s_2818593499_Idx], reprEnum(x_2818593500, NTI2919235627));;

  
}

function HEX24_2818593418(x_2818593420) {
  var result_2818593421 = [[]];

    result_2818593421[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym934_2818593432 = 0;
    if ((0 < countHEX60gensym934_2818593432)) {
    result_2818593421[0].push.apply(result_2818593421[0], [44,32]);;
    }
    
    result_2818593421[0].push.apply(result_2818593421[0], [110,97,109,101]);;
    result_2818593421[0].push.apply(result_2818593421[0], [58,32]);;
    countHEX60gensym934_2818593432 += 1;
    addQuoted_1593835572(result_2818593421, 0, x_2818593420.name);
    if ((0 < countHEX60gensym934_2818593432)) {
    result_2818593421[0].push.apply(result_2818593421[0], [44,32]);;
    }
    
    result_2818593421[0].push.apply(result_2818593421[0], [115,99,111,112,101]);;
    result_2818593421[0].push.apply(result_2818593421[0], [58,32]);;
    countHEX60gensym934_2818593432 += 1;
    addQuoted_1593835572(result_2818593421, 0, x_2818593420.scope);
    if ((0 < countHEX60gensym934_2818593432)) {
    result_2818593421[0].push.apply(result_2818593421[0], [44,32]);;
    }
    
    result_2818593421[0].push.apply(result_2818593421[0], [108,111,99,97,116,105,111,110]);;
    result_2818593421[0].push.apply(result_2818593421[0], [58,32]);;
    countHEX60gensym934_2818593432 += 1;
    addQuoted_2818593468(result_2818593421, 0, x_2818593420.location);
    if ((0 < countHEX60gensym934_2818593432)) {
    result_2818593421[0].push.apply(result_2818593421[0], [44,32]);;
    }
    
    result_2818593421[0].push.apply(result_2818593421[0], [102,105,108,101,110,97,109,101]);;
    result_2818593421[0].push.apply(result_2818593421[0], [58,32]);;
    countHEX60gensym934_2818593432 += 1;
    addQuoted_1593835572(result_2818593421, 0, x_2818593420.filename);
    if ((0 < countHEX60gensym934_2818593432)) {
    result_2818593421[0].push.apply(result_2818593421[0], [44,32]);;
    }
    
    result_2818593421[0].push.apply(result_2818593421[0], [107,105,110,100]);;
    result_2818593421[0].push.apply(result_2818593421[0], [58,32]);;
    countHEX60gensym934_2818593432 += 1;
    addQuoted_2818593497(result_2818593421, 0, x_2818593420.kind);
    if ((0 < countHEX60gensym934_2818593432)) {
    result_2818593421[0].push.apply(result_2818593421[0], [44,32]);;
    }
    
    result_2818593421[0].push.apply(result_2818593421[0], [116,121,112]);;
    result_2818593421[0].push.apply(result_2818593421[0], [58,32]);;
    countHEX60gensym934_2818593432 += 1;
    addQuoted_1593835572(result_2818593421, 0, x_2818593420.typ);
    if ((0 < countHEX60gensym934_2818593432)) {
    result_2818593421[0].push.apply(result_2818593421[0], [44,32]);;
    }
    
    result_2818593421[0].push.apply(result_2818593421[0], [100,111,99]);;
    result_2818593421[0].push.apply(result_2818593421[0], [58,32]);;
    countHEX60gensym934_2818593432 += 1;
    addQuoted_1593835572(result_2818593421, 0, x_2818593420.doc);
    result_2818593421[0].push.apply(result_2818593421[0], [41]);;

  return result_2818593421[0];

}

function formatValue_2818593413(result_2818593415, result_2818593415_Idx, value_2818593416, specifier_2818593417) {
    formatValue_721420459(result_2818593415, result_2818593415_Idx, HEX24_2818593418(value_2818593416), specifier_2818593417);

  
}

function applySelectedCompletion_2818593402(self_2818593403) {
  BeforeRet: {
    if (!(self_2818593403.showCompletions)) {
    break BeforeRet;
    }
    
    if (((self_2818593403.completions).length - 1 < self_2818593403.selectedCompletion)) {
    break BeforeRet;
    }
    
    var com_2818593407 = nimCopy(null, self_2818593403.completions[chckIndx(self_2818593403.selectedCompletion, 0, (self_2818593403.completions).length - 1)], NTI2919235630);
    var fmtRes_2818593412 = [mnewString(0)];
    fmtRes_2818593412[0].push.apply(fmtRes_2818593412[0], [65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2818593413(fmtRes_2818593412, 0, com_2818593407, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818593412[0], NTI33554449)]);
    var cursor_2818593530 = nimCopy(null, selection_2818572803(self_2818593403).Field1, NTI2449473545);
    if ((cursor_2818593530.Field1 == 0)) {
    selectionsHEX3D_2818573081(self_2818593403, insert_2818579851(self_2818593403.document, [nimCopy(null, toSelection_2449474029(cursor_2818593530), NTI2449473547)], selections_2818572800(self_2818593403), com_2818593407.name, true, true, false));
    }
    else {
      var line_2818593531 = getLine_2818572664(self_2818593403.document, cursor_2818593530.Field0);
      var column_2818593532 = cursor_2818593530.Field1;
      Label1: {
          Label2: while (true) {
          if (!(0 < column_2818593532)) break Label2;
            switch (line_2818593531[chckIndx(subInt(column_2818593532, 1), 0, (line_2818593531).length - 1)]) {
            case 32:
            case 9:
            case 46:
            case 44:
            case 40:
            case 41:
            case 91:
            case 93:
            case 123:
            case 125:
            case 58:
            case 59:
              break Label1;
              break;
            default: 
              column_2818593532 = subInt(column_2818593532, 1);
              break;
            }
          }
      };
      selectionsHEX3D_2818573081(self_2818593403, edit_2818580068(self_2818593403.document, [nimCopy(null, {Field0: {Field0: cursor_2818593530.Field0, Field1: column_2818593532}, Field1: nimCopy(null, cursor_2818593530, NTI2449473545)}, NTI2818585703)], selections_2818572800(self_2818593403), com_2818593407.name, true));
    }
    
  };

  
}

function applySelectedCompletionJsWrapper_2818593398(self_2818593564) {
    applySelectedCompletion_2818593402(self_2818593564);

  
}
editor_text_prototype.applySelectedCompletion = function() { return (applySelectedCompletionJsWrapper_2818593398(this));};

function handleHexChar_2046820364(c_2046820365) {
  var result_2046820366 = 0;

    switch (c_2046820365) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      result_2046820366 = subInt(c_2046820365, 48);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      result_2046820366 = addInt(subInt(c_2046820365, 97), 10);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      result_2046820366 = addInt(subInt(c_2046820365, 65), 10);
      break;
    default: 
      break;
    }

  return result_2046820366;

}

function hexbyte_2046820410(hex_2046820411) {
  var result_2046820412 = 0;

    result_2046820412 = handleHexChar_2046820364(hex_2046820411);

  return result_2046820412;

}

function hash_2046820393(x_2046820395) {
  var result_2046820396 = 0;

    result_2046820396 = hashWangYi1_1325400244(x_2046820395);

  return result_2046820396;

}

function hash_2046820389(oid_2046820390) {
  var result_2046820391 = 0;

    var h_2046820392 = 0;
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.time));
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.fuzz));
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.count));
    result_2046820391 = HEX21HEX24_1325400082(h_2046820392);

  return result_2046820391;

}

function parseOid_2046820433(str_2046820434) {
  var result_2046820435 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((str_2046820434).length == 24))) {
    break BeforeRet;
    }
    
    result_2046820435.time = 0;
    Label1: {
      var i_2046820440 = 0;
      var i_2986344551 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2986344551 < 4)) break Label3;
            i_2046820440 = i_2986344551;
            var hexValue_2046820445 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, i_2046820440), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, i_2046820440), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.time = (result_2046820435.time | (hexValue_2046820445 << mulInt(i_2046820440, 8)));
            i_2986344551 = addInt(i_2986344551, 1);
          }
      };
    };
    result_2046820435.fuzz = 0;
    Label4: {
      var i_2046820454 = 0;
      var i_2986344554 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_2986344554 < 4)) break Label6;
            i_2046820454 = i_2986344554;
            var hexValue_2046820459 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, addInt(i_2046820454, 4)), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, addInt(i_2046820454, 4)), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.fuzz = (result_2046820435.fuzz | (hexValue_2046820459 << mulInt(i_2046820454, 8)));
            i_2986344554 = addInt(i_2986344554, 1);
          }
      };
    };
    result_2046820435.count = 0;
    Label7: {
      var i_2046820468 = 0;
      var i_2986344557 = 0;
      Label8: {
          Label9: while (true) {
          if (!(i_2986344557 < 4)) break Label9;
            i_2046820468 = i_2986344557;
            var hexValue_2046820473 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, addInt(i_2046820468, 8)), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, addInt(i_2046820468, 8)), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.count = (result_2046820435.count | (hexValue_2046820473 << mulInt(i_2046820468, 8)));
            i_2986344557 = addInt(i_2986344557, 1);
          }
      };
    };
    result_2046820435.padding = hash_2046820389(result_2046820435);
  };

  return result_2046820435;

}

function parseId_2046820640(s_2046820641) {
  var result_2046820642 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((s_2046820641).length == 24))) {
    rawEcho([105,110,118,97,108,105,100,32,105,100,32,39], s_2046820641, [39]);
    result_2046820642 = nimCopy(result_2046820642, idNone_2046820633(), NTI2046820355);
    break BeforeRet;
    }
    
    result_2046820642 = nimCopy(result_2046820642, parseOid_2046820433(s_2046820641), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820642;

}
var IdPrint_2986344450 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,55]);
var IdAdd_2986344451 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,56]);
var IdSub_2986344452 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,57]);
var IdMul_2986344453 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,97]);
var IdDiv_2986344454 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,98]);
var IdMod_2986344455 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,99]);
var IdNegate_2986344456 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,100]);
var IdNot_2986344457 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,101]);
var IdDeref_2986344458 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,102]);
var IdAppendString_2986344459 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,48]);
var IdInt_2986344460 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,49]);
var IdString_2986344461 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,50]);
var IdVoid_2986344462 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,51]);
var IdLess_2986344463 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,52]);
var IdLessEqual_2986344464 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,53]);
var IdGreater_2986344465 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,54]);
var IdGreaterEqual_2986344466 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,55]);
var IdEqual_2986344467 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,56]);
var IdNotEqual_2986344468 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,57]);
var IdAnd_2986344469 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,97]);
var IdOr_2986344470 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,98]);
var IdOrder_2986344471 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,99]);
var IdBuildString_2986344472 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,100]);
var Id62e53399564d29f77293450e_2986344473 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,101]);
var Id62e53399564d29f77293450f_2986344474 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var Id62e53399564d29f772934510_2986344475 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,48]);
var Id62e53399564d29f772934511_2986344476 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,49]);
var Id62e53399564d29f772934512_2986344477 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,50]);
var Id62e53399564d29f772934513_2986344478 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,51]);
var Id62e53399564d29f772934514_2986344479 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,52]);
var Id62e53399564d29f772934515_2986344480 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,53]);
var Id62e5339a564d29f772934516_2986344481 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,54]);
var Id62e5339a564d29f772934517_2986344482 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,55]);
var Id62e5339a564d29f772934518_2986344483 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,56]);
var Id62e5339a564d29f772934519_2986344484 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,57]);
var Id62e5339a564d29f77293451a_2986344485 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,97]);
var Id62e5339a564d29f77293451b_2986344486 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,98]);
var Id62e5339a564d29f77293451c_2986344487 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,99]);
var Id62e5339a564d29f77293451d_2986344488 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,100]);
var Id62e5339a564d29f77293451e_2986344489 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,101]);
var Id62e5339a564d29f77293451f_2986344490 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,102]);
var Id62e5339b564d29f772934520_2986344491 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,48]);
var Id62e5339b564d29f772934521_2986344492 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,49]);
var Id62e5339b564d29f772934522_2986344493 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,50]);
var Id62e5339b564d29f772934523_2986344494 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,51]);
var Id62e5339b564d29f772934524_2986344495 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,52]);
var Id62e5339b564d29f772934525_2986344496 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,53]);
var Id62e5339b564d29f772934526_2986344497 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,54]);
var Id62e5339b564d29f772934527_2986344498 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,55]);
var Id62e5339b564d29f772934528_2986344499 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,56]);
var Id62e5339c564d29f772934529_2986344500 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,57]);
var Id62e5339c564d29f77293452a_2986344501 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,97]);
var Id62e5339c564d29f77293452b_2986344502 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,98]);
var Id62e5339c564d29f77293452c_2986344503 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,99]);
var Id62e5339c564d29f77293452d_2986344504 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,100]);
var Id62e5339c564d29f77293452e_2986344505 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,101]);
var Id62e5339c564d29f77293452f_2986344506 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,102]);
var Id62e5339c564d29f772934530_2986344507 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,48]);
var Id62e5339c564d29f772934531_2986344508 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,49]);
var Id62e5339d564d29f772934532_2986344509 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,50]);
var Id62e5339d564d29f772934533_2986344510 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,51]);
var Id62e5339d564d29f772934534_2986344511 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,52]);
var Id62e5339d564d29f772934535_2986344512 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,53]);
var Id62e5339d564d29f772934536_2986344513 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,54]);
var Id62e5339d564d29f772934537_2986344514 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,55]);
var Id62e5339d564d29f772934538_2986344515 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,56]);
var Id62e5339d564d29f772934539_2986344516 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,57]);
var Id62e5339d564d29f77293453a_2986344517 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,97]);
var Id62e5339e564d29f77293453b_2986344518 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,98]);
var Id62e5339e564d29f77293453c_2986344519 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,99]);
var Id62e5339e564d29f77293453d_2986344520 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,100]);
var Id62e5339e564d29f77293453e_2986344521 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,101]);
var Id62e5339e564d29f77293453f_2986344522 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,102]);
var Id62e5339e564d29f772934540_2986344523 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,48]);
var Id62e5339e564d29f772934541_2986344524 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,49]);
var Id62e5339e564d29f772934542_2986344525 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,50]);
var Id62e5339e564d29f772934543_2986344526 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,51]);
var Id62e5339e564d29f772934544_2986344527 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,52]);
var Id62e5339f564d29f772934545_2986344528 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,53]);
var Id62e5339f564d29f772934546_2986344529 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,54]);
var Id62e5339f564d29f772934547_2986344530 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,55]);
var Id62e5339f564d29f772934548_2986344531 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,56]);
var Id62e5339f564d29f772934549_2986344532 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,57]);
var Id62e5339f564d29f77293454a_2986344533 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,97]);
var Id62e5339f564d29f77293454b_2986344534 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,98]);
var Id62e5339f564d29f77293454c_2986344535 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,99]);
var Id62e5339f564d29f77293454d_2986344536 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,100]);
var Id62e533a0564d29f77293454e_2986344537 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,101]);
var Id62e533a0564d29f77293454f_2986344538 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,102]);
var Id62e533a0564d29f772934550_2986344539 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,48]);
var Id62e533a0564d29f772934551_2986344540 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,49]);
var Id62e533a0564d29f772934552_2986344541 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,50]);
var Id62e533a0564d29f772934553_2986344542 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,51]);
var Id62e533a0564d29f772934554_2986344543 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,52]);
var Id62e533a0564d29f772934555_2986344544 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,53]);
var Id62e533a0564d29f772934556_2986344545 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,54]);
var Id62e533a1564d29f772934557_2986344546 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,55]);
var Id62e533a1564d29f772934558_2986344547 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,56]);
var Id62e533a1564d29f772934559_2986344548 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,57]);
var Id62e533a1564d29f77293455a_2986344549 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,97]);

function getIdAstNodeJs(node_3003123792) {
  var result_3003123793 = null;

    return toCString(node_3003123792.id);

  return result_3003123793;

}
var currentIndent_3036676111 = [0];

function getIdItemIdJs(item_3036676276) {
  var result_3036676277 = null;

    return '' + toCString(item_3036676276.Field0) + item_3036676276.Field1;

  return result_3036676277;

}

function getIdDependencyJs(dep_3036676279) {
  var result_3036676280 = null;

    return getIdItemIdJs(dep_3036676279.Field0) + dep_3036676279.Field1;

  return result_3036676280;

}
var dependencyGlobalRevision_3036676213 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,98]);

function getIdFunctionExecutionContextJs(fec_3087010803) {
  var result_3087010804 = null;

    return toCString(fec_3087010803.id);

  return result_3087010804;

}

function getIdSymbolJs(sym_3087010806) {
  var result_3087010807 = null;

    return toCString(sym_3087010806.id);

  return result_3087010807;

}

function getIdNodeLayoutInputJs(input_3087010809) {
  var result_3087010810 = null;

    return toCString(input_3087010809.id);

  return result_3087010810;

}
var config_3120562389 = [{fontSize: 20.0, fontRegular: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], fontBold: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], fontItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], fontBoldItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], indent: 20.0, colors: {separator: [112,117,110,99,116,117,97,116,105,111,110], separatorParen: [[109,101,116,97,46,98,114,97,99,101,46,114,111,117,110,100], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBrace: [[109,101,116,97,46,98,114,97,99,101,46,99,117,114,108,121], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBracket: [[109,101,116,97,46,98,114,97,99,101,46,115,113,117,97,114,101], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], empty: [115,116,114,105,110,103], keyword: [107,101,121,119,111,114,100], typ: [115,116,111,114,97,103,101,46,116,121,112,101]}, revision: 0}];

function rawGet_3036676559(t_3036676562, key_3036676563, hc_3036676564, hc_3036676564_Idx) {
  var result_3036676565 = 0;

  BeforeRet: {
    hc_3036676564[hc_3036676564_Idx] = hash_1325400236(key_3036676563);
    if ((hc_3036676564[hc_3036676564_Idx] == 0)) {
    hc_3036676564[hc_3036676564_Idx] = 314159265;
    }
    
    if (((t_3036676562.data).length == 0)) {
    result_3036676565 = -1;
    break BeforeRet;
    }
    
    var h_3036676653 = (hc_3036676564[hc_3036676564_Idx] & (t_3036676562.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036676562.data[chckIndx(h_3036676653, 0, (t_3036676562.data).length - 1)].Field0)) break Label2;
          if (((t_3036676562.data[chckIndx(h_3036676653, 0, (t_3036676562.data).length - 1)].Field0 == hc_3036676564[hc_3036676564_Idx]) && (t_3036676562.data[chckIndx(h_3036676653, 0, (t_3036676562.data).length - 1)].Field1 == key_3036676563))) {
          result_3036676565 = h_3036676653;
          break BeforeRet;
          }
          
          h_3036676653 = nextTry_1308622883(h_3036676653, (t_3036676562.data).length - 1);
        }
    };
    result_3036676565 = subInt(-1, h_3036676653);
  };

  return result_3036676565;

}

function mustRehash_3036677083(t_3036677085) {
  var result_3036677086 = false;

    if (!((t_3036677085.counter < (t_3036677085.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3036677086 = ((mulInt((t_3036677085.data).length, 2) < mulInt(t_3036677085.counter, 3)) || (subInt((t_3036677085.data).length, t_3036677085.counter) < 4));

  return result_3036677086;

}

function rawInsert_3036677776(t_3036677780, data_3036677781, data_3036677781_Idx, key_3036677782, val_3036677783, hc_3036677784, h_3036677785) {
    data_3036677781[data_3036677781_Idx][chckIndx(h_3036677785, 0, (data_3036677781[data_3036677781_Idx]).length - 1)].Field1 = key_3036677782;
    data_3036677781[data_3036677781_Idx][chckIndx(h_3036677785, 0, (data_3036677781[data_3036677781_Idx]).length - 1)].Field2 = nimCopy(null, val_3036677783, NTI33554449);
    data_3036677781[data_3036677781_Idx][chckIndx(h_3036677785, 0, (data_3036677781[data_3036677781_Idx]).length - 1)].Field0 = hc_3036677784;

  
}

function enlarge_3036677340(t_3036677343) {
    var n_3036677346 = [];
    n_3036677346 = new Array(chckRange(mulInt((t_3036677343.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3036677343.data).length, 2), 0, 2147483647) ; ++i) { n_3036677346[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_3036677343.data; t_3036677343.data = n_3036677346; n_3036677346 = Temporary1;    Label2: {
      var i_3036677444 = 0;
      var colontmp__2969567309 = 0;
      colontmp__2969567309 = (n_3036677346).length - 1;
      var res_2969567310 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567310 <= colontmp__2969567309)) break Label4;
            i_3036677444 = res_2969567310;
            var eh_3036677525 = n_3036677346[chckIndx(i_3036677444, 0, (n_3036677346).length - 1)].Field0;
            if (isFilled_1308622880(eh_3036677525)) {
            var j_3036677529 = (eh_3036677525 & (t_3036677343.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3036677343.data[chckIndx(j_3036677529, 0, (t_3036677343.data).length - 1)].Field0)) break Label6;
                  j_3036677529 = nextTry_1308622883(j_3036677529, (t_3036677343.data).length - 1);
                }
            };
            rawInsert_3036677776(t_3036677343, t_3036677343, "data", n_3036677346[chckIndx(i_3036677444, 0, (n_3036677346).length - 1)].Field1, n_3036677346[chckIndx(i_3036677444, 0, (n_3036677346).length - 1)].Field2, eh_3036677525, j_3036677529);
            }
            
            res_2969567310 = addInt(res_2969567310, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3036678026(t_3036678029, key_3036678030, hc_3036678031) {
  var result_3036678032 = 0;

  BeforeRet: {
    if (((t_3036678029.data).length == 0)) {
    result_3036678032 = -1;
    break BeforeRet;
    }
    
    var h_3036678117 = (hc_3036678031 & (t_3036678029.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036678029.data[chckIndx(h_3036678117, 0, (t_3036678029.data).length - 1)].Field0)) break Label2;
          if (((t_3036678029.data[chckIndx(h_3036678117, 0, (t_3036678029.data).length - 1)].Field0 == hc_3036678031) && (t_3036678029.data[chckIndx(h_3036678117, 0, (t_3036678029.data).length - 1)].Field1 == key_3036678030))) {
          result_3036678032 = h_3036678117;
          break BeforeRet;
          }
          
          h_3036678117 = nextTry_1308622883(h_3036678117, (t_3036678029.data).length - 1);
        }
    };
    result_3036678032 = subInt(-1, h_3036678117);
  };

  return result_3036678032;

}

function HEX5BHEX5DHEX3D_3036676464(t_3036676467, key_3036676468, val_3036676469) {
    if (((t_3036676467.data).length == 0)) {
    var correctSizeHEX60gensym3_3036676553 = slotsNeeded_1308622891(32);
    t_3036676467.counter = 0;
    t_3036676467.data = new Array(chckRange(correctSizeHEX60gensym3_3036676553, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3036676553, 0, 2147483647) ; ++i) { t_3036676467.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3036676558 = [0];
    var index_3036676915 = rawGet_3036676559(t_3036676467, key_3036676468, hc_3036676558, 0);
    if ((0 <= index_3036676915)) {
    t_3036676467.data[chckIndx(index_3036676915, 0, (t_3036676467.data).length - 1)].Field2 = nimCopy(null, val_3036676469, NTI33554449);
    }
    else {
      if (((t_3036676467.data).length == 0)) {
      var correctSizeHEX60gensym8_3036677078 = slotsNeeded_1308622891(32);
      t_3036676467.counter = 0;
      t_3036676467.data = new Array(chckRange(correctSizeHEX60gensym8_3036677078, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3036677078, 0, 2147483647) ; ++i) { t_3036676467.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_3036677083(t_3036676467)) {
      enlarge_3036677340(t_3036676467);
      index_3036676915 = rawGetKnownHC_3036678026(t_3036676467, key_3036676468, hc_3036676558[0]);
      }
      
      index_3036676915 = subInt(-1, index_3036676915);
      rawInsert_3036677776(t_3036676467, t_3036676467, "data", key_3036676468, val_3036676469, hc_3036676558[0], index_3036676915);
      t_3036676467.counter = addInt(t_3036676467.counter, 1);
    }
    

  
}

function newDependencyGraph_3036676396() {
  var result_3036676397 = null;

    result_3036676397 = ({verified: null, changed: null, fingerprints: null, dependencies: null, queryNames: ({data: [], counter: 0}), revision: 0});
    result_3036676397.revision = 0;
    HEX5BHEX5DHEX3D_3036676464(result_3036676397.queryNames, -1, []);
    result_3036676397.verified = (new Map());
    result_3036676397.changed = (new Map());
    result_3036676397.fingerprints = (new Map());
    result_3036676397.dependencies = (new Map());

  return result_3036676397;

}

function mapKeyJs_3019899557(key_3019899559) {
  var result_3019899560 = null;

    let temp = key_3019899559;
    if (temp._id === undefined) temp._id = getIdItemIdJs(key_3019899559);
    return temp._id;

  return result_3019899560;

}

function contains_3019899546(t_3019899549, key_3019899550) {
  var result_3019899551 = false;

    result_3019899551 = t_3019899549.has(mapKeyJs_3019899557(key_3019899550));

  return result_3019899551;

}

function HEX24_2046820617(id_2046820618) {
  var result_2046820619 = [];

  BeforeRet: {
    result_2046820619 = nimCopy(null, HEX24_2046820478(id_2046820618), NTI33554449);
    break BeforeRet;
  };

  return result_2046820619;

}

function formatValue_3036676340(result_3036676342, result_3036676342_Idx, value_3036676343, specifier_3036676344) {
    formatValue_721420459(result_3036676342, result_3036676342_Idx, HEX24_2046820617(value_3036676343), specifier_3036676344);

  
}

function mkDigit_721420293(v_721420294, typ_721420295) {
      var Temporary1;

  var result_721420296 = [];

    if (!((v_721420294 < 26))) {
    failedAssertImpl_268435515([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_721420294 < 10)) {
    result_721420296 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_721420294), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_721420295 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_721420296 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_721420294), 10), 0, 255)), NTI33554449);
    }
    

  return result_721420296;

}

function formatInt_2701131953(n_2701131955, radix_2701131956, spec_2701131957) {
    var Temporary1;

  var result_2701131958 = [];

    var n_2701131961 = n_2701131955;
    var negative_2701131962 = (n_2701131961 < 0);
    if (negative_2701131962) {
    Temporary1 = ((~(n_2701131961) + 1) );
    }
    else {
    Temporary1 = n_2701131961;
    }
    
    var v_2701131963 = Temporary1;
    var xx_2701131964 = [];
    if (spec_2701131957.alternateForm) {
    switch (spec_2701131957.typ) {
    case 88:
      xx_2701131964 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_2701131964 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_2701131964 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_2701131964 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_2701131963 == 0)) {
    result_2701131958 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_2701131958 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0 < v_2701131963)) break Label3;
            var d_2701131965 = (v_2701131963 % radix_2701131956);
            v_2701131963 = Math.trunc(((v_2701131963 / radix_2701131956) ));
            result_2701131958.push.apply(result_2701131958, mkDigit_721420293(chckRange(d_2701131965, -2147483648, 2147483647), spec_2701131957.typ));;
          }
      };
      Label4: {
        var idx_2701131970 = 0;
        var colontmp__2969567315 = 0;
        colontmp__2969567315 = divInt((result_2701131958).length, 2);
        var i_2969567316 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2969567316 < colontmp__2969567315)) break Label6;
              idx_2701131970 = i_2969567316;
              var Temporary7 = result_2701131958[chckIndx(idx_2701131970, 0, (result_2701131958).length - 1)]; result_2701131958[chckIndx(idx_2701131970, 0, (result_2701131958).length - 1)] = result_2701131958[chckIndx(subInt(subInt((result_2701131958).length, idx_2701131970), 1), 0, (result_2701131958).length - 1)]; result_2701131958[chckIndx(subInt(subInt((result_2701131958).length, idx_2701131970), 1), 0, (result_2701131958).length - 1)] = Temporary7;              i_2969567316 = addInt(i_2969567316, 1);
            }
        };
      };
    }
    
    if (spec_2701131957.padWithZero) {
    var sign_2701131975 = (negative_2701131962 || !((spec_2701131957.sign == 45)));
    var toFill_2701131979 = subInt(subInt(subInt(spec_2701131957.minimumWidth, (result_2701131958).length), (xx_2701131964).length), (sign_2701131975 ? 1 : 0));
    if ((0 < toFill_2701131979)) {
    result_2701131958 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2701131979, 0, 2147483647)) || []).concat(result_2701131958 || []), NTI33554449);
    }
    
    }
    
    if (negative_2701131962) {
    result_2701131958 = nimCopy(null, ([45] || []).concat(xx_2701131964 || [],result_2701131958 || []), NTI33554449);
    }
    else {
    if (!((spec_2701131957.sign == 45))) {
    result_2701131958 = nimCopy(null, [spec_2701131957.sign].concat(xx_2701131964 || [],result_2701131958 || []), NTI33554449);
    }
    else {
      result_2701131958 = nimCopy(null, (xx_2701131964 || []).concat(result_2701131958 || []), NTI33554449);
    }
    }
    if ((spec_2701131957.align == 60)) {
    Label8: {
      var i_2701131984 = 0;
      var colontmp__2969567319 = 0;
      colontmp__2969567319 = (result_2701131958).length;
      var i_2969567320 = colontmp__2969567319;
      Label9: {
          Label10: while (true) {
          if (!(i_2969567320 < spec_2701131957.minimumWidth)) break Label10;
            i_2701131984 = i_2969567320;
            addChar(result_2701131958, spec_2701131957.fill);;
            i_2969567320 = addInt(i_2969567320, 1);
          }
      };
    };
    }
    else {
      var toFill_2701131985 = subInt(spec_2701131957.minimumWidth, (result_2701131958).length);
      if ((spec_2701131957.align == 94)) {
      var half_2701131986 = divInt(toFill_2701131985, 2);
      result_2701131958 = nimCopy(null, (nsuRepeatChar(spec_2701131957.fill, chckRange(half_2701131986, 0, 2147483647)) || []).concat(result_2701131958 || [],nsuRepeatChar(spec_2701131957.fill, chckRange(subInt(toFill_2701131985, half_2701131986), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_2701131985)) {
        result_2701131958 = nimCopy(null, (nsuRepeatChar(spec_2701131957.fill, chckRange(toFill_2701131985, 0, 2147483647)) || []).concat(result_2701131958 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_2701131958;

}

function formatValue_2701131945(result_2701131947, result_2701131947_Idx, value_2701131948, specifier_2701131949) {
  BeforeRet: {
    if (((specifier_2701131949).length == 0)) {
    result_2701131947[result_2701131947_Idx].push.apply(result_2701131947[result_2701131947_Idx], HEX24_369098760(value_2701131948));;
    break BeforeRet;
    }
    
    var spec_2701131950 = parseStandardFormatSpecifier_721420346(specifier_2701131949, 0, false);
    var radix_2701131951 = 10;
    switch (spec_2701131950.typ) {
    case 120:
    case 88:
      radix_2701131951 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_2701131951 = 2;
      break;
    case 111:
      radix_2701131951 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_2701131950.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2701131947[result_2701131947_Idx].push.apply(result_2701131947[result_2701131947_Idx], formatInt_2701131953(value_2701131948, radix_2701131951, spec_2701131950));;
  };

  
}

function HEX24_3036676332(item_3036676333) {
  var result_3036676334 = [];

  BeforeRet: {
    var fmtRes_3036676339 = [mnewString(0)];
    fmtRes_3036676339[0].push.apply(fmtRes_3036676339[0], [40]);;
    formatValue_3036676340(fmtRes_3036676339, 0, item_3036676333.Field0, []);
    fmtRes_3036676339[0].push.apply(fmtRes_3036676339[0], [44,32]);;
    formatValue_2701131945(fmtRes_3036676339, 0, item_3036676333.Field1, []);
    fmtRes_3036676339[0].push.apply(fmtRes_3036676339[0], [41]);;
    result_3036676334 = nimCopy(null, fmtRes_3036676339[0], NTI33554449);
    break BeforeRet;
  };

  return result_3036676334;

}

function HEX5BHEX5D_3019899656(t_3019899659, key_3019899660) {
  var result_3019899661 = null;

    result_3019899661 = t_3019899659.get(mapKeyJs_3019899557(key_3019899660));

  return result_3019899661;

}

function nsuRepeatStr(s_855639142, n_855639143) {
  var result_855639144 = [];

    result_855639144 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_855639149 = 0;
      var colontmp__2969567350 = 0;
      colontmp__2969567350 = n_855639143;
      var res_2969567351 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567351 <= colontmp__2969567350)) break Label3;
            i_855639149 = res_2969567351;
            result_855639144.push.apply(result_855639144, s_855639142);;
            res_2969567351 = addInt(res_2969567351, 1);
          }
      };
    };

  return result_855639144;

}

function repeat2_3036676112(s_3036676113, n_3036676114) {
  var result_3036676115 = [];

    result_3036676115 = nimCopy(null, nsuRepeatStr(s_3036676113, n_3036676114), NTI33554449);

  return result_3036676115;

}

function symbolName_3003123674(a_3003123676) {
  var result_3003123677 = [];

    result_3003123677 = nimCopy(null, names_3003123684[chckIndx(subInt(a_3003123676, 0), 0, (names_3003123684).length - 1)], NTI33554449);

  return result_3003123677;

}

function HEX3DHEX3D_2046820385(oid1_2046820386, oid2_2046820387) {
  var result_2046820388 = false;

    result_2046820388 = (((oid1_2046820386.time == oid2_2046820387.time) && (oid1_2046820386.fuzz == oid2_2046820387.fuzz)) && (oid1_2046820386.count == oid2_2046820387.count));

  return result_2046820388;

}

function HEX3DHEX3D_2046820626(idA_2046820627, idB_2046820628) {
  var result_2046820629 = false;

  BeforeRet: {
    result_2046820629 = HEX3DHEX3D_2046820385(idA_2046820627, idB_2046820628);
    break BeforeRet;
  };

  return result_2046820629;

}

function len_3003121752(node_3003121753) {
  var result_3003121754 = 0;

  BeforeRet: {
    result_3003121754 = (node_3003121753.children).length;
    break BeforeRet;
  };

  return result_3003121754;

}

function collectionToString_3003123772(x_3003123774, prefix_3003123775, separator_3003123776, suffix_3003123777) {
  var result_3003123778 = [[]];

    result_3003123778[0] = nimCopy(null, prefix_3003123775, NTI33554449);
    var firstElement_3003123779 = true;
    Label1: {
      var value_3003123783 = 0;
      var i_2969567355 = 0;
      var L_2969567356 = (x_3003123774).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567355 < L_2969567356)) break Label3;
            value_3003123783 = x_3003123774[i_2969567355];
            if (firstElement_3003123779) {
            firstElement_3003123779 = false;
            }
            else {
            result_3003123778[0].push.apply(result_3003123778[0], separator_3003123776);;
            }
            
            addQuoted_855639425(result_3003123778, 0, value_3003123783);
            i_2969567355 += 1;
            if (!(((x_3003123774).length == L_2969567356))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3003123778[0].push.apply(result_3003123778[0], suffix_3003123777);;

  return result_3003123778[0];

}

function HEX24_3003123768(x_3003123770) {
  var result_3003123771 = [];

    result_3003123771 = nimCopy(null, collectionToString_3003123772(x_3003123770, [64,91], [44,32], [93]), NTI33554449);

  return result_3003123771;

}

function find_3003121779(a_3003121782, item_3003121783) {
  var result_3003121784 = 0;

  BeforeRet: {
    result_3003121784 = 0;
    Label1: {
      var i_3003121806 = null;
      var i_2969567360 = 0;
      var L_2969567361 = (a_3003121782).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567360 < L_2969567361)) break Label3;
            i_3003121806 = a_3003121782[chckIndx(i_2969567360, 0, (a_3003121782).length - 1)];
            if ((i_3003121806 == item_3003121783)) {
            break BeforeRet;
            }
            
            result_3003121784 = addInt(result_3003121784, 1);
            i_2969567360 = addInt(i_2969567360, 1);
            if (!(((a_3003121782).length == L_2969567361))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3003121784 = -1;
  };

  return result_3003121784;

}

function index_3003121772(node_3003121773) {
  var result_3003121774 = 0;

  BeforeRet: {
    if ((node_3003121773.parent == null)) {
    result_3003121774 = -1;
    break BeforeRet;
    }
    
    result_3003121774 = find_3003121779(node_3003121773.parent.children, node_3003121773);
    break BeforeRet;
  };

  return result_3003121774;

}

function reverse_3003123641(a_3003123643, first_3003123644, last_3003123645) {
    var x_3003123646 = first_3003123644;
    var y_3003123647 = last_3003123645;
    Label1: {
        Label2: while (true) {
        if (!(x_3003123646 < y_3003123647)) break Label2;
          var Temporary3 = a_3003123643[chckIndx(x_3003123646, 0, (a_3003123643).length - 1)]; a_3003123643[chckIndx(x_3003123646, 0, (a_3003123643).length - 1)] = a_3003123643[chckIndx(y_3003123647, 0, (a_3003123643).length - 1)]; a_3003123643[chckIndx(y_3003123647, 0, (a_3003123643).length - 1)] = Temporary3;          y_3003123647 = subInt(y_3003123647, 1);
          x_3003123646 = addInt(x_3003123646, 1);
        }
    };

  
}

function reverse_3003123635(a_3003123637) {
    reverse_3003123641(a_3003123637, 0, chckRange(nimMax(0, (a_3003123637).length - 1), 0, 2147483647));

  
}

function path_3003123619(node_3003123620) {
  var result_3003123621 = [];

    result_3003123621 = nimCopy(null, [], NTI3003122753);
    var node_3003123626 = node_3003123620;
    Label1: {
        Label2: while (true) {
        if (!!((node_3003123626.parent == null))) break Label2;
          result_3003123621.push(index_3003121772(node_3003123626));;
          node_3003123626 = node_3003123626.parent;
        }
    };
    reverse_3003123635(result_3003123621);

  return result_3003123621;

}

function HEX24_3003123671(node_3003123672) {
  var result_3003123673 = [];

    result_3003123673 = nimCopy(null, (symbolName_3003123674(node_3003123672.kind) || []).concat([40] || []), NTI33554449);
    if (!(HEX3DHEX3D_2046820626(node_3003123672.id, idNone_2046820633()))) {
    result_3003123673.push.apply(result_3003123673, (HEX24_2046820617(node_3003123672.id) || []).concat([44,32] || []));;
    }
    
    if (!(HEX3DHEX3D_2046820626(node_3003123672.reff, idNone_2046820633()))) {
    result_3003123673.push.apply(result_3003123673, ([114,101,102,102,58,32] || []).concat(HEX24_2046820617(node_3003123672.reff) || [],[44,32] || []));;
    }
    
    if ((0 < (node_3003123672.text).length)) {
    result_3003123673.push.apply(result_3003123673, ([39] || []).concat(node_3003123672.text || [],[39,44,32] || []));;
    }
    
    if ((0 < len_3003121752(node_3003123672))) {
    result_3003123673.push.apply(result_3003123673, (HEX24_369098760(len_3003121752(node_3003123672)) || []).concat([44,32] || []));;
    }
    
    result_3003123673.push.apply(result_3003123673, HEX24_3003123768(path_3003123619(node_3003123672)));;
    result_3003123673.push.apply(result_3003123673, [41]);;

  return result_3003123673;

}

function getTypeKey_3019912757(ctxHEX60gensym90_3019912758, itemIdHEX60gensym90_3019912759) {
  var result_3019912760 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2969567364 = nimCopy(null, itemIdHEX60gensym90_3019912759, NTI3036676199);
    var colontmp__2969567365 = 0;
    result_3019912760 = nimCopy(result_3019912760, {Field0: nimCopy(null, colontmp__2969567364, NTI3036676199), Field1: colontmp__2969567365}, NTI3036676202);
    break BeforeRet;
  };

  return result_3019912760;

}

function bigEndian32_2046820550(b_2046820551) {
  var result_2046820552 = 0;

    result_2046820552 = (((((b_2046820551 & 255) << 24) | ((b_2046820551 & 65280) << 8)) | ((b_2046820551 & 16711680) >> 8)) | (b_2046820551 >> 24));

  return result_2046820552;

}

function genOid_2046820580() {
  var result_2046820581 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var timeHEX60gensym1_2046820584 = Date.now();
    var iHEX60gensym1_2046820585 = 0;
    incr_2046820531[0] = addInt(incr_2046820531[0], 1);
    iHEX60gensym1_2046820585 = ((incr_2046820531[0]) | 0);
    result_2046820581.time = bigEndian32_2046820550(timeHEX60gensym1_2046820584);
    result_2046820581.fuzz = fuzz_2046820536;
    result_2046820581.count = bigEndian32_2046820550(iHEX60gensym1_2046820585);
    result_2046820581.padding = hash_2046820389(result_2046820581);

  return result_2046820581;

}

function newId_2046820597() {
  var result_2046820598 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820598 = nimCopy(result_2046820598, genOid_2046820580(), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820598;

}

function getItem_3019905914(selfHEX60gensym75_3019905915) {
  var result_3019905916 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym75_3019905915.id, null_2046820646)) {
    selfHEX60gensym75_3019905915.id = nimCopy(selfHEX60gensym75_3019905915.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym75_3019905915.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,56,49,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,53,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567366 = nimCopy(null, selfHEX60gensym75_3019905915.id, NTI2046820355);
    var colontmp__2969567367 = 0;
    result_3019905916 = nimCopy(result_3019905916, {Field0: nimCopy(null, colontmp__2969567366, NTI2046820355), Field1: colontmp__2969567367}, NTI3036676199);
    break BeforeRet;
  };

  return result_3019905916;

}

function hash_2046820630(id_2046820631) {
  var result_2046820632 = 0;

  BeforeRet: {
    result_2046820632 = id_2046820631.padding;
    break BeforeRet;
  };

  return result_2046820632;

}

function hash_3019907897(x_3019907899) {
  var result_3019907900 = 0;

    result_3019907900 = HEX21HEX26_1325400067(result_3019907900, hash_2046820630(x_3019907899["Field0"]));
    result_3019907900 = HEX21HEX26_1325400067(result_3019907900, hash_1325400236(x_3019907899["Field1"]));
    result_3019907900 = HEX21HEX24_1325400082(result_3019907900);

  return result_3019907900;

}

function hash_3019907889(x_3019907891) {
  var result_3019907892 = 0;

    result_3019907892 = HEX21HEX26_1325400067(result_3019907892, hash_3019907897(x_3019907891["Field0"]));
    result_3019907892 = HEX21HEX26_1325400067(result_3019907892, hash_1325400236(x_3019907891["Field1"]));
    result_3019907892 = HEX21HEX24_1325400082(result_3019907892);

  return result_3019907892;

}

function HEX3DHEX3D_3019908247(x_3019908249, y_3019908250) {
  var result_3019908251 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2046820626(x_3019908249["Field0"], y_3019908250["Field0"]))) {
    result_3019908251 = false;
    break BeforeRet;
    }
    
    if (!((x_3019908249["Field1"] == y_3019908250["Field1"]))) {
    result_3019908251 = false;
    break BeforeRet;
    }
    
    result_3019908251 = true;
    break BeforeRet;
  };

  return result_3019908251;

}

function HEX3DHEX3D_3019908237(x_3019908239, y_3019908240) {
  var result_3019908241 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_3019908247(x_3019908239["Field0"], y_3019908240["Field0"]))) {
    result_3019908241 = false;
    break BeforeRet;
    }
    
    if (!((x_3019908239["Field1"] == y_3019908240["Field1"]))) {
    result_3019908241 = false;
    break BeforeRet;
    }
    
    result_3019908241 = true;
    break BeforeRet;
  };

  return result_3019908241;

}

function rawGet_3019936950(t_3019936953, key_3019936954, hc_3019936955, hc_3019936955_Idx) {
  var result_3019936956 = 0;

  BeforeRet: {
    hc_3019936955[hc_3019936955_Idx] = hash_3019907889(key_3019936954);
    if ((hc_3019936955[hc_3019936955_Idx] == 0)) {
    hc_3019936955[hc_3019936955_Idx] = 314159265;
    }
    
    if (((t_3019936953.data).length == 0)) {
    result_3019936956 = -1;
    break BeforeRet;
    }
    
    var h_3019937045 = (hc_3019936955[hc_3019936955_Idx] & (t_3019936953.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019936953.data[chckIndx(h_3019937045, 0, (t_3019936953.data).length - 1)].Field0)) break Label2;
          if (((t_3019936953.data[chckIndx(h_3019937045, 0, (t_3019936953.data).length - 1)].Field0 == hc_3019936955[hc_3019936955_Idx]) && HEX3DHEX3D_3019908237(t_3019936953.data[chckIndx(h_3019937045, 0, (t_3019936953.data).length - 1)].Field1, key_3019936954))) {
          result_3019936956 = h_3019937045;
          break BeforeRet;
          }
          
          h_3019937045 = nextTry_1308622883(h_3019937045, (t_3019936953.data).length - 1);
        }
    };
    result_3019936956 = subInt(-1, h_3019937045);
  };

  return result_3019936956;

}

function hasKey_3019936943(t_3019936946, key_3019936947) {
  var result_3019936948 = false;

    var hc_3019936949 = [0];
    result_3019936948 = (0 <= rawGet_3019936950(t_3019936946, key_3019936947, hc_3019936949, 0));

  return result_3019936948;

}

function contains_3019936937(t_3019936940, key_3019936941) {
  var result_3019936942 = false;

  BeforeRet: {
    result_3019936942 = hasKey_3019936943(t_3019936940, key_3019936941);
    break BeforeRet;
  };

  return result_3019936942;

}

function addQuoted_3019911387(s_3019911389, s_3019911389_Idx, x_3019911390) {
    s_3019911389[s_3019911389_Idx].push.apply(s_3019911389[s_3019911389_Idx], HEX24_3036676332(x_3019911390));;

  
}

function HEX24_3019911361(x_3019911363) {
  var result_3019911364 = [[]];

    result_3019911364[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym224_3019911375 = 0;
    if ((0 < countHEX60gensym224_3019911375)) {
    result_3019911364[0].push.apply(result_3019911364[0], [44,32]);;
    }
    
    result_3019911364[0].push.apply(result_3019911364[0], [105,116,101,109]);;
    result_3019911364[0].push.apply(result_3019911364[0], [58,32]);;
    countHEX60gensym224_3019911375 += 1;
    addQuoted_3019911387(result_3019911364, 0, x_3019911363["Field0"]);
    if ((0 < countHEX60gensym224_3019911375)) {
    result_3019911364[0].push.apply(result_3019911364[0], [44,32]);;
    }
    
    result_3019911364[0].push.apply(result_3019911364[0], [117,112,100,97,116,101]);;
    result_3019911364[0].push.apply(result_3019911364[0], [58,32]);;
    countHEX60gensym224_3019911375 += 1;
    addQuoted_855639425(result_3019911364, 0, x_3019911363["Field1"]);
    result_3019911364[0].push.apply(result_3019911364[0], [41]);;

  return result_3019911364[0];

}

function raiseKeyError_3019937476(key_3019937478) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3019911361(key_3019937478) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3019937382(t_3019937385, key_3019937386) {
  var result_3019937387 = null;
  var result_3019937387_Idx = 0;

    var hcHEX60gensym22_3019937388 = [0];
    var indexHEX60gensym22_3019937395 = rawGet_3019936950(t_3019937385, key_3019937386, hcHEX60gensym22_3019937388, 0);
    if ((0 <= indexHEX60gensym22_3019937395)) {
    result_3019937387 = t_3019937385.data[chckIndx(indexHEX60gensym22_3019937395, 0, (t_3019937385.data).length - 1)]; result_3019937387_Idx = "Field2";
    }
    else {
    raiseKeyError_3019937476(key_3019937386);
    }
    

  return [result_3019937387, result_3019937387_Idx];

}

function rawGet_3019938112(t_3019938115, key_3019938116, hc_3019938117, hc_3019938117_Idx) {
  var result_3019938118 = 0;

  BeforeRet: {
    hc_3019938117[hc_3019938117_Idx] = hash_3019907889(key_3019938116);
    if ((hc_3019938117[hc_3019938117_Idx] == 0)) {
    hc_3019938117[hc_3019938117_Idx] = 314159265;
    }
    
    if (((t_3019938115.data).length == 0)) {
    result_3019938118 = -1;
    break BeforeRet;
    }
    
    var h_3019938207 = (hc_3019938117[hc_3019938117_Idx] & (t_3019938115.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019938115.data[chckIndx(h_3019938207, 0, (t_3019938115.data).length - 1)].Field0)) break Label2;
          if (((t_3019938115.data[chckIndx(h_3019938207, 0, (t_3019938115.data).length - 1)].Field0 == hc_3019938117[hc_3019938117_Idx]) && HEX3DHEX3D_3019908237(t_3019938115.data[chckIndx(h_3019938207, 0, (t_3019938115.data).length - 1)].Field1, key_3019938116))) {
          result_3019938118 = h_3019938207;
          break BeforeRet;
          }
          
          h_3019938207 = nextTry_1308622883(h_3019938207, (t_3019938115.data).length - 1);
        }
    };
    result_3019938118 = subInt(-1, h_3019938207);
  };

  return result_3019938118;

}

function del_3019938106(t_3019938109, key_3019938110) {
    var hc_3019938111 = [0];
    var i_3019938473 = rawGet_3019938112(t_3019938109, key_3019938110, hc_3019938111, 0);
    var mskHEX60gensym36_3019938477 = (t_3019938109.data).length - 1;
    if ((0 <= i_3019938473)) {
    t_3019938109.counter = subInt(t_3019938109.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019938484 = i_3019938473;
            var rHEX60gensym36_3019938485 = jHEX60gensym36_3019938484;
            t_3019938109.data[chckIndx(i_3019938473, 0, (t_3019938109.data).length - 1)].Field0 = 0;
            t_3019938109.data[chckIndx(i_3019938473, 0, (t_3019938109.data).length - 1)].Field1 = nimCopy(t_3019938109.data[chckIndx(i_3019938473, 0, (t_3019938109.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676202);
            t_3019938109.data[chckIndx(i_3019938473, 0, (t_3019938109.data).length - 1)].Field2 = nimCopy(null, [], NTI3019898888);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019938473 = (addInt(i_3019938473, 1) & mskHEX60gensym36_3019938477);
                  if (isEmpty_1308622877(t_3019938109.data[chckIndx(i_3019938473, 0, (t_3019938109.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019938485 = (t_3019938109.data[chckIndx(i_3019938473, 0, (t_3019938109.data).length - 1)].Field0 & mskHEX60gensym36_3019938477);
                  if (!(((((rHEX60gensym36_3019938485 <= i_3019938473) && (jHEX60gensym36_3019938484 < rHEX60gensym36_3019938485)) || ((jHEX60gensym36_3019938484 < rHEX60gensym36_3019938485) && (i_3019938473 < jHEX60gensym36_3019938484))) || ((i_3019938473 < jHEX60gensym36_3019938484) && (rHEX60gensym36_3019938485 <= i_3019938473))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019938109.data[chckIndx(jHEX60gensym36_3019938484, 0, (t_3019938109.data).length - 1)] = nimCopy(t_3019938109.data[chckIndx(jHEX60gensym36_3019938484, 0, (t_3019938109.data).length - 1)], t_3019938109.data[chckIndx(i_3019938473, 0, (t_3019938109.data).length - 1)], NTI3019898900);
          }
      };
    };
    }
    

  
}

function rawGet_3019937605(t_3019937608, key_3019937609, hc_3019937610, hc_3019937610_Idx) {
  var result_3019937611 = 0;

  BeforeRet: {
    hc_3019937610[hc_3019937610_Idx] = hash_2046820630(key_3019937609);
    if ((hc_3019937610[hc_3019937610_Idx] == 0)) {
    hc_3019937610[hc_3019937610_Idx] = 314159265;
    }
    
    if (((t_3019937608.data).length == 0)) {
    result_3019937611 = -1;
    break BeforeRet;
    }
    
    var h_3019937697 = (hc_3019937610[hc_3019937610_Idx] & (t_3019937608.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019937608.data[chckIndx(h_3019937697, 0, (t_3019937608.data).length - 1)].Field0)) break Label2;
          if (((t_3019937608.data[chckIndx(h_3019937697, 0, (t_3019937608.data).length - 1)].Field0 == hc_3019937610[hc_3019937610_Idx]) && HEX3DHEX3D_2046820626(t_3019937608.data[chckIndx(h_3019937697, 0, (t_3019937608.data).length - 1)].Field1, key_3019937609))) {
          result_3019937611 = h_3019937697;
          break BeforeRet;
          }
          
          h_3019937697 = nextTry_1308622883(h_3019937697, (t_3019937608.data).length - 1);
        }
    };
    result_3019937611 = subInt(-1, h_3019937697);
  };

  return result_3019937611;

}

function raiseKeyError_3003123480(key_3003123482) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2046820617(key_3003123482) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3019937598(t_3019937601, key_3019937602) {
  var result_3019937603 = null;

    var hcHEX60gensym22_3019937604 = [0];
    var indexHEX60gensym22_3019937950 = rawGet_3019937605(t_3019937601, key_3019937602, hcHEX60gensym22_3019937604, 0);
    if ((0 <= indexHEX60gensym22_3019937950)) {
    result_3019937603 = t_3019937601.data[chckIndx(indexHEX60gensym22_3019937950, 0, (t_3019937601.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3019937602);
    }
    

  return result_3019937603;

}

function voidType_3087008163() {
  var result_3087008164 = null;

    result_3087008164 = {kind: 1, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008164;

}

function integerOutOfRangeError_771752261() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_771752263(s_771752264, b_771752265, b_771752265_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752266 = 0;

    var sign_771752267 = -1;
    var i_771752268 = 0;
    if ((i_771752268 < (s_771752264).length)) {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 43)) {
    i_771752268 += 1;
    }
    else {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 45)) {
    i_771752268 += 1;
    sign_771752267 = 1;
    }
    }
    }
    
      if (!(i_771752268 < (s_771752264).length)) Temporary1 = false; else {        Temporary1 = (ConstSet60[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752265[b_771752265_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752268 < (s_771752264).length)) Temporary4 = false; else {            Temporary4 = (ConstSet61[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752302 = (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_771752302) / 10) <= b_771752265[b_771752265_Idx])) {
          b_771752265[b_771752265_Idx] = ((b_771752265[b_771752265_Idx] * 10) - c_771752302);
          }
          else {
          integerOutOfRangeError_771752261();
          }
          
          i_771752268 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_771752268 < (s_771752264).length) && (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 95))) break Label6;
                i_771752268 += 1;
              }
          };
        }
    };
    if (((sign_771752267 == -1) && (b_771752265[b_771752265_Idx] == -9223372036854775808))) {
    integerOutOfRangeError_771752261();
    }
    else {
      b_771752265[b_771752265_Idx] = (b_771752265[b_771752265_Idx] * sign_771752267);
      result_771752266 = i_771752268;
    }
    
    }
    

  return result_771752266;

}

function npuParseBiggestInt(s_771752325, number_771752326, number_771752326_Idx) {
  var result_771752327 = 0;

    var res_771752328 = [0];
    result_771752327 = rawParseInt_771752263(s_771752325, res_771752328, 0);
    if (!((result_771752327 == 0))) {
    number_771752326[number_771752326_Idx] = res_771752328[0];
    }
    

  return result_771752327;

}

function npuParseInt(s_771752330, number_771752331, number_771752331_Idx) {
  var result_771752332 = 0;

    var res_771752333 = [0];
    result_771752332 = npuParseBiggestInt(s_771752330, res_771752333, 0);
    if (((res_771752333[0] < -2147483648) || (2147483647 < res_771752333[0]))) {
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752332 == 0))) {
    number_771752331[number_771752331_Idx] = chckRange(res_771752333[0], -2147483648, 2147483647);
    }
    

  return result_771752332;

}

function parseInt_771752724(s_771752725, number_771752726, number_771752726_Idx, start_771752727) {
  var result_771752728 = 0;

    result_771752728 = npuParseInt((s_771752725.slice(start_771752727, (s_771752725).length - 1 + 1)), number_771752726, number_771752726_Idx);

  return result_771752728;

}

function nsuParseInt(s_855638869) {
  var result_855638870 = [0];

    result_855638870[0] = 0;
    var L_855638871 = parseInt_771752724(s_855638869, result_855638870, 0, 0);
    if ((!((L_855638871 == (s_855638869).length)) || (L_855638871 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638869 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638870[0];

}

function intType_3087008165() {
  var result_3087008166 = null;

    result_3087008166 = {kind: 3, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008166;

}

function errorType_3087008127() {
  var result_3087008128 = null;

    result_3087008128 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008128;

}

function stringType_3087008167() {
  var result_3087008168 = null;

    result_3087008168 = {kind: 2, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008168;

}

function HEX5BHEX5D_3003121748(node_3003121749, index_3003121750) {
  var result_3003121751 = null;

  BeforeRet: {
    result_3003121751 = node_3003121749.children[chckIndx(index_3003121750, 0, (node_3003121749.children).length - 1)];
    break BeforeRet;
  };

  return result_3003121751;

}

function recordDependency_3019905701(ctxHEX60gensym72_3019905702, itemHEX60gensym72_3019905703, updateHEX60gensym72_3019905704) {
    if ((0 < (ctxHEX60gensym72_3019905702.dependencyStack).length)) {
    ctxHEX60gensym72_3019905702.dependencyStack[chckIndx((ctxHEX60gensym72_3019905702.dependencyStack).length - 1, 0, (ctxHEX60gensym72_3019905702.dependencyStack).length - 1)].push({Field0: nimCopy(null, itemHEX60gensym72_3019905703, NTI3036676199), Field1: updateHEX60gensym72_3019905704});;
    }
    

  
}

function startTimer_2080374869() {
  var result_2080374870 = 0.0;

    result_2080374870 = (Date.now() / 1000);

  return result_2080374870;

}

function mapKeyJs_3036678529(key_3036678531) {
  var result_3036678532 = null;

    let temp = key_3036678531;
    if (temp._id === undefined) temp._id = getIdDependencyJs(key_3036678531);
    return temp._id;

  return result_3036678532;

}

function getOrDefault_3036678516(t_3036678519, key_3036678520, default_3036678521) {
  var result_3036678522 = 0;

    result_3036678522 = orDefaultJs((t_3036678519).get(mapKeyJs_3036678529(key_3036678520)), (default_3036678521));

  return result_3036678522;

}

function nodeColor_3036678422(graph_3036678423, key_3036678424, parentVerified_3036678425) {
  var result_3036678426 = 0;

  BeforeRet: {
    if ((key_3036678424.Field1 == -1)) {
    var inputChangedRevision_3036678543 = getOrDefault_3036678516(graph_3036678423.changed, key_3036678424, graph_3036678423.revision);
    if ((parentVerified_3036678425 < inputChangedRevision_3036678543)) {
    result_3036678426 = 1;
    break BeforeRet;
    }
    else {
      result_3036678426 = 2;
      break BeforeRet;
    }
    
    }
    
    var verified_3036678639 = getOrDefault_3036678516(graph_3036678423.verified, key_3036678424, 0);
    if (!((verified_3036678639 == graph_3036678423.revision))) {
    result_3036678426 = 0;
    break BeforeRet;
    }
    
    var changed_3036678735 = getOrDefault_3036678516(graph_3036678423.changed, key_3036678424, graph_3036678423.revision);
    if ((changed_3036678735 == graph_3036678423.revision)) {
    result_3036678426 = 1;
    break BeforeRet;
    }
    
    result_3036678426 = 2;
    break BeforeRet;
  };

  return result_3036678426;

}

function mapKeyJs_3019899747(key_3019899749) {
  var result_3019899750 = null;

    let temp = key_3019899749;
    if (temp._id === undefined) temp._id = getIdAstNodeJs(key_3019899749);
    return temp._id;

  return result_3019899750;

}

function contains_3019912845(t_3019912848, key_3019912849) {
  var result_3019912850 = false;

    result_3019912850 = t_3019912848.has(mapKeyJs_3019899747(key_3019912849));

  return result_3019912850;

}

function HEX5BHEX5D_3019907696(t_3019907699, key_3019907700) {
  var result_3019907701 = null;
  var result_3019907701_Idx = 0;

    var hcHEX60gensym22_3019907702 = [0];
    var indexHEX60gensym22_3019907709 = rawGet_3036676559(t_3019907699, key_3019907700, hcHEX60gensym22_3019907702, 0);
    if ((0 <= indexHEX60gensym22_3019907709)) {
    result_3019907701 = t_3019907699.data[chckIndx(indexHEX60gensym22_3019907709, 0, (t_3019907699.data).length - 1)]; result_3019907701_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3019907700);
    }
    

  return [result_3019907701, result_3019907701_Idx];

}

function rawGet_3019907882(t_3019907885, key_3019907886, hc_3019907887, hc_3019907887_Idx) {
  var result_3019907888 = 0;

  BeforeRet: {
    hc_3019907887[hc_3019907887_Idx] = hash_3019907889(key_3019907886);
    if ((hc_3019907887[hc_3019907887_Idx] == 0)) {
    hc_3019907887[hc_3019907887_Idx] = 314159265;
    }
    
    if (((t_3019907885.data).length == 0)) {
    result_3019907888 = -1;
    break BeforeRet;
    }
    
    var h_3019907996 = (hc_3019907887[hc_3019907887_Idx] & (t_3019907885.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019907885.data[chckIndx(h_3019907996, 0, (t_3019907885.data).length - 1)].Field0)) break Label2;
          if (((t_3019907885.data[chckIndx(h_3019907996, 0, (t_3019907885.data).length - 1)].Field0 == hc_3019907887[hc_3019907887_Idx]) && HEX3DHEX3D_3019908237(t_3019907885.data[chckIndx(h_3019907996, 0, (t_3019907885.data).length - 1)].Field1, key_3019907886))) {
          result_3019907888 = h_3019907996;
          break BeforeRet;
          }
          
          h_3019907996 = nextTry_1828716586(h_3019907996, (t_3019907885.data).length - 1);
        }
    };
    result_3019907888 = subInt(-1, h_3019907996);
  };

  return result_3019907888;

}

function contains_3019907869(s_3019907871, key_3019907872) {
  var result_3019907873 = false;

    var hc_3019907874 = [0];
    var index_3019908278 = rawGet_3019907882(s_3019907871, key_3019907872, hc_3019907874, 0);
    result_3019907873 = (0 <= index_3019908278);

  return result_3019907873;

}

function mustRehash_3019908414(t_3019908416) {
  var result_3019908417 = false;

    if (!((t_3019908416.counter < (t_3019908416.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019908417 = ((mulInt((t_3019908416.data).length, 2) < mulInt(t_3019908416.counter, 3)) || (subInt((t_3019908416.data).length, t_3019908416.counter) < 4));

  return result_3019908417;

}

function rawGetKnownHC_3019909020(t_3019909023, key_3019909024, hc_3019909025) {
  var result_3019909026 = 0;

  BeforeRet: {
    if (((t_3019909023.data).length == 0)) {
    result_3019909026 = -1;
    break BeforeRet;
    }
    
    var h_3019909111 = (hc_3019909025 & (t_3019909023.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019909023.data[chckIndx(h_3019909111, 0, (t_3019909023.data).length - 1)].Field0)) break Label2;
          if (((t_3019909023.data[chckIndx(h_3019909111, 0, (t_3019909023.data).length - 1)].Field0 == hc_3019909025) && HEX3DHEX3D_3019908237(t_3019909023.data[chckIndx(h_3019909111, 0, (t_3019909023.data).length - 1)].Field1, key_3019909024))) {
          result_3019909026 = h_3019909111;
          break BeforeRet;
          }
          
          h_3019909111 = nextTry_1828716586(h_3019909111, (t_3019909023.data).length - 1);
        }
    };
    result_3019909026 = subInt(-1, h_3019909111);
  };

  return result_3019909026;

}

function rawInsert_3019909524(s_3019909526, data_3019909527, data_3019909527_Idx, key_3019909528, hc_3019909529, h_3019909530) {
    if (((data_3019909527[data_3019909527_Idx]).length == 0)) {
    var correctSizeHEX60gensym210_3019909613 = slotsNeeded_1828716594(64);
    s_3019909526.counter = 0;
    s_3019909526.data = new Array(chckRange(correctSizeHEX60gensym210_3019909613, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym210_3019909613, 0, 2147483647) ; ++i) { s_3019909526.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    data_3019909527[data_3019909527_Idx][chckIndx(h_3019909530, 0, (data_3019909527[data_3019909527_Idx]).length - 1)].Field1 = nimCopy(data_3019909527[data_3019909527_Idx][chckIndx(h_3019909530, 0, (data_3019909527[data_3019909527_Idx]).length - 1)].Field1, key_3019909528, NTI3036676202);
    data_3019909527[data_3019909527_Idx][chckIndx(h_3019909530, 0, (data_3019909527[data_3019909527_Idx]).length - 1)].Field0 = hc_3019909529;

  
}

function enlarge_3019908677(s_3019908679) {
    var n_3019908681 = [];
    n_3019908681 = new Array(chckRange(mulInt((s_3019908679.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3019908679.data).length, 2), 0, 2147483647) ; ++i) { n_3019908681[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    var Temporary1 = s_3019908679.data; s_3019908679.data = n_3019908681; n_3019908681 = Temporary1;    Label2: {
      var i_3019908779 = 0;
      var colontmp__2969567381 = 0;
      colontmp__2969567381 = (n_3019908681).length - 1;
      var res_2969567382 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567382 <= colontmp__2969567381)) break Label4;
            i_3019908779 = res_2969567382;
            if (isFilled_1828716583(n_3019908681[chckIndx(i_3019908779, 0, (n_3019908681).length - 1)].Field0)) {
            var j_3019909359 = subInt(-1, rawGetKnownHC_3019909020(s_3019908679, n_3019908681[chckIndx(i_3019908779, 0, (n_3019908681).length - 1)].Field1, n_3019908681[chckIndx(i_3019908779, 0, (n_3019908681).length - 1)].Field0));
            rawInsert_3019909524(s_3019908679, s_3019908679, "data", n_3019908681[chckIndx(i_3019908779, 0, (n_3019908681).length - 1)].Field1, n_3019908681[chckIndx(i_3019908779, 0, (n_3019908681).length - 1)].Field0, j_3019909359);
            }
            
            res_2969567382 = addInt(res_2969567382, 1);
          }
      };
    };

  
}

function incl_3019908298(s_3019908300, key_3019908301) {
    if (((s_3019908300.data).length == 0)) {
    var correctSizeHEX60gensym203_3019908384 = slotsNeeded_1828716594(64);
    s_3019908300.counter = 0;
    s_3019908300.data = new Array(chckRange(correctSizeHEX60gensym203_3019908384, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym203_3019908384, 0, 2147483647) ; ++i) { s_3019908300.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    var hc_3019908399 = [0];
    var index_3019908413 = rawGet_3019907882(s_3019908300, key_3019908301, hc_3019908399, 0);
    if ((index_3019908413 < 0)) {
    if (mustRehash_3019908414(s_3019908300)) {
    enlarge_3019908677(s_3019908300);
    index_3019908413 = rawGetKnownHC_3019909020(s_3019908300, key_3019908301, hc_3019908399[0]);
    }
    
    rawInsert_3019909524(s_3019908300, s_3019908300, "data", key_3019908301, hc_3019908399[0], subInt(-1, index_3019908413));
    s_3019908300.counter = addInt(s_3019908300.counter, 1);
    }
    

  
}

function getOrDefault_3019910005(t_3019910008, key_3019910009) {
  var result_3019910010 = [];

    var hcHEX60gensym211_3019910013 = [0];
    var indexHEX60gensym211_3019910020 = rawGet_3036676559(t_3019910008, key_3019910009, hcHEX60gensym211_3019910013, 0);
    if ((0 <= indexHEX60gensym211_3019910020)) {
    result_3019910010 = nimCopy(null, t_3019910008.data[chckIndx(indexHEX60gensym211_3019910020, 0, (t_3019910008.data).length - 1)].Field2, NTI33554449);
    }
    

  return result_3019910010;

}

function rawGet_3019902573(t_3019902576, key_3019902577, hc_3019902578, hc_3019902578_Idx) {
  var result_3019902579 = 0;

  BeforeRet: {
    hc_3019902578[hc_3019902578_Idx] = hash_1325400236(key_3019902577);
    if ((hc_3019902578[hc_3019902578_Idx] == 0)) {
    hc_3019902578[hc_3019902578_Idx] = 314159265;
    }
    
    if (((t_3019902576.data).length == 0)) {
    result_3019902579 = -1;
    break BeforeRet;
    }
    
    var h_3019902667 = (hc_3019902578[hc_3019902578_Idx] & (t_3019902576.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019902576.data[chckIndx(h_3019902667, 0, (t_3019902576.data).length - 1)].Field0)) break Label2;
          if (((t_3019902576.data[chckIndx(h_3019902667, 0, (t_3019902576.data).length - 1)].Field0 == hc_3019902578[hc_3019902578_Idx]) && (t_3019902576.data[chckIndx(h_3019902667, 0, (t_3019902576.data).length - 1)].Field1 == key_3019902577))) {
          result_3019902579 = h_3019902667;
          break BeforeRet;
          }
          
          h_3019902667 = nextTry_1308622883(h_3019902667, (t_3019902576.data).length - 1);
        }
    };
    result_3019902579 = subInt(-1, h_3019902667);
  };

  return result_3019902579;

}

function hasKey_3019910183(t_3019910186, key_3019910187) {
  var result_3019910188 = false;

    var hc_3019910189 = [0];
    result_3019910188 = (0 <= rawGet_3019902573(t_3019910186, key_3019910187, hc_3019910189, 0));

  return result_3019910188;

}

function contains_3019910177(t_3019910180, key_3019910181) {
  var result_3019910182 = false;

  BeforeRet: {
    result_3019910182 = hasKey_3019910183(t_3019910180, key_3019910181);
    break BeforeRet;
  };

  return result_3019910182;

}

function HEX5BHEX5D_3019910276(t_3019910279, key_3019910280) {
  var result_3019910281 = null;
  var result_3019910281_Idx = 0;

    var hcHEX60gensym22_3019910282 = [0];
    var indexHEX60gensym22_3019910289 = rawGet_3019902573(t_3019910279, key_3019910280, hcHEX60gensym22_3019910282, 0);
    if ((0 <= indexHEX60gensym22_3019910289)) {
    result_3019910281 = t_3019910279.data[chckIndx(indexHEX60gensym22_3019910289, 0, (t_3019910279.data).length - 1)]; result_3019910281_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3019910280);
    }
    

  return [result_3019910281, result_3019910281_Idx];

}

function HEX5BHEX5DHEX3D_3036679287(t_3036679290, key_3036679291, val_3036679292) {
    t_3036679290.set(mapKeyJs_3036678529(key_3036679291), val_3036679292);

  
}

function HEX5BHEX5DHEX3D_3036679507(t_3036679510, key_3036679511, val_3036679512) {
    t_3036679510.set(mapKeyJs_3036678529(key_3036679511), val_3036679512);

  
}

function markRed_3036679302(graph_3036679303, key_3036679304, fingerprint_3036679305) {
    HEX5BHEX5DHEX3D_3036679287(graph_3036679303.verified, key_3036679304, graph_3036679303.revision);
    HEX5BHEX5DHEX3D_3036679287(graph_3036679303.changed, key_3036679304, graph_3036679303.revision);
    HEX5BHEX5DHEX3D_3036679507(graph_3036679303.fingerprints, key_3036679304, fingerprint_3036679305);

  
}

function HEX5BHEX5DHEX3D_3036678945(t_3036678948, key_3036678949, val_3036678950) {
    t_3036678948.set(mapKeyJs_3036678529(key_3036678949), val_3036678950);

  
}

function clearEdges_3036678875(graph_3036678876, key_3036678877) {
    HEX5BHEX5DHEX3D_3036678945(graph_3036678876.dependencies, key_3036678877, []);

  
}

function setDependencies_3036678960(graph_3036678961, key_3036678962, deps_3036678963) {
    HEX5BHEX5DHEX3D_3036678945(graph_3036678961.dependencies, key_3036678962, deps_3036678963);

  
}

function pop_3019910422(s_3019910424, s_3019910424_Idx) {
  var result_3019910425 = [];

    var L_3019910429 = subInt((s_3019910424[s_3019910424_Idx]).length, 1);
    result_3019910425 = nimCopy(null, s_3019910424[s_3019910424_Idx][chckIndx(L_3019910429, 0, (s_3019910424[s_3019910424_Idx]).length - 1)], NTI3019898908);
    if (s_3019910424[s_3019910424_Idx].length < chckRange(L_3019910429, 0, 2147483647)) { for (var i = s_3019910424[s_3019910424_Idx].length ; i < chckRange(L_3019910429, 0, 2147483647) ; ++i) s_3019910424[s_3019910424_Idx].push([]); }
               else { s_3019910424[s_3019910424_Idx].length = chckRange(L_3019910429, 0, 2147483647); };

  return result_3019910425;

}

function isEmpty_1828716580(hcode_1828716581) {
  var result_1828716582 = false;

    result_1828716582 = (hcode_1828716581 == 0);

  return result_1828716582;

}

function exclImpl_3019910464(s_3019910466, key_3019910467) {
          var Temporary5;

  var result_3019910468 = false;

  BeforeRet: {
    var hc_3019910469 = [0];
    var i_3019910476 = rawGet_3019907882(s_3019910466, key_3019910467, hc_3019910469, 0);
    var msk_3019910480 = (s_3019910466.data).length - 1;
    result_3019910468 = true;
    if ((0 <= i_3019910476)) {
    result_3019910468 = false;
    s_3019910466.counter = subInt(s_3019910466.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3019910486 = i_3019910476;
          var r_3019910487 = j_3019910486;
          s_3019910466.data[chckIndx(i_3019910476, 0, (s_3019910466.data).length - 1)].Field0 = 0;
          s_3019910466.data[chckIndx(i_3019910476, 0, (s_3019910466.data).length - 1)].Field1 = nimCopy(s_3019910466.data[chckIndx(i_3019910476, 0, (s_3019910466.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676202);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3019910476 = (addInt(i_3019910476, 1) & msk_3019910480);
                if (isEmpty_1828716580(s_3019910466.data[chckIndx(i_3019910476, 0, (s_3019910466.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3019910487 = (s_3019910466.data[chckIndx(i_3019910476, 0, (s_3019910466.data).length - 1)].Field0 & msk_3019910480);
                if (!(((((r_3019910487 <= i_3019910476) && (j_3019910486 < r_3019910487)) || ((j_3019910486 < r_3019910487) && (i_3019910476 < j_3019910486))) || ((i_3019910476 < j_3019910486) && (r_3019910487 <= i_3019910476))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3019910466.data[chckIndx(i_3019910476, 0, (s_3019910466.data).length - 1)];
          s_3019910466.data[chckIndx(i_3019910476, 0, (s_3019910466.data).length - 1)] = genericReset(s_3019910466.data[chckIndx(i_3019910476, 0, (s_3019910466.data).length - 1)], NTI3019898919);
          s_3019910466.data[chckIndx(j_3019910486, 0, (s_3019910466.data).length - 1)] = nimCopy(s_3019910466.data[chckIndx(j_3019910486, 0, (s_3019910466.data).length - 1)], Temporary5, NTI3019898919);
        }
    };
    }
    
  };

  return result_3019910468;

}

function excl_3019910449(s_3019910451, key_3019910452) {
    var _ = exclImpl_3019910464(s_3019910451, key_3019910452);

  
}

function pop_3019911052(s_3019911054, s_3019911054_Idx) {
  var result_3019911055 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

    var L_3019911059 = subInt((s_3019911054[s_3019911054_Idx]).length, 1);
    result_3019911055 = nimCopy(result_3019911055, s_3019911054[s_3019911054_Idx][chckIndx(L_3019911059, 0, (s_3019911054[s_3019911054_Idx]).length - 1)], NTI3036676202);
    if (s_3019911054[s_3019911054_Idx].length < chckRange(L_3019911059, 0, 2147483647)) { for (var i = s_3019911054[s_3019911054_Idx].length ; i < chckRange(L_3019911059, 0, 2147483647) ; ++i) s_3019911054[s_3019911054_Idx].push({Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}); }
               else { s_3019911054[s_3019911054_Idx].length = chckRange(L_3019911059, 0, 2147483647); };

  return result_3019911055;

}

function contains_3036679113(t_3036679116, key_3036679117) {
  var result_3036679118 = false;

    result_3036679118 = t_3036679116.has(mapKeyJs_3036678529(key_3036679117));

  return result_3036679118;

}

function HEX5BHEX5D_3036679207(t_3036679210, key_3036679211) {
  var result_3036679212 = [];

    result_3036679212 = nimCopy(null, t_3036679210.get(mapKeyJs_3036678529(key_3036679211)), NTI3036676198);

  return result_3036679212;

}

function fingerprint_3036679033(graph_3036679034, key_3036679035) {
  var result_3036679036 = [];

  BeforeRet: {
    if (contains_3036679113(graph_3036679034.fingerprints, key_3036679035)) {
    result_3036679036 = nimCopy(null, HEX5BHEX5D_3036679207(graph_3036679034.fingerprints, key_3036679035), NTI3036676198);
    break BeforeRet;
    }
    
  };

  return result_3036679036;

}

function HEX3DHEX3D_3019911065(x_3019911067, y_3019911068) {
  var result_3019911069 = false;

  BeforeRet: {
    var sameObject_3019911076 = false;
    sameObject_3019911076 = x_3019911067 === y_3019911068
    if (sameObject_3019911076) {
    result_3019911069 = true;
    break BeforeRet;
    }
    
    if (!(((x_3019911067).length == (y_3019911068).length))) {
    result_3019911069 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3019911090 = 0;
      var colontmp__2969567389 = 0;
      colontmp__2969567389 = subInt((x_3019911067).length, 1);
      var res_2969567390 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567390 <= colontmp__2969567389)) break Label3;
            i_3019911090 = res_2969567390;
            if (!((x_3019911067[chckIndx(i_3019911090, 0, (x_3019911067).length - 1)] == y_3019911068[chckIndx(i_3019911090, 0, (y_3019911068).length - 1)]))) {
            result_3019911069 = false;
            break BeforeRet;
            }
            
            res_2969567390 = addInt(res_2969567390, 1);
          }
      };
    };
    result_3019911069 = true;
    break BeforeRet;
  };

  return result_3019911069;

}

function markGreen_3036679221(graph_3036679222, key_3036679223) {
    HEX5BHEX5DHEX3D_3036679287(graph_3036679222.verified, key_3036679223, graph_3036679222.revision);

  
}

function force_3019907603(ctxHEX60gensym88_3019907604, keyHEX60gensym88_3019907605) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
    var Temporary10;

  BeforeRet: {
    if (ctxHEX60gensym88_3019907604.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], Temporary1);
    try {
    if (ctxHEX60gensym88_3019907604.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [102,111,114,99,101,32], (Temporary3 = HEX5BHEX5D_3019907696(ctxHEX60gensym88_3019907604.depGraph.queryNames, keyHEX60gensym88_3019907605.Field1), Temporary3)[0][Temporary3[1]], HEX24_3036676332(keyHEX60gensym88_3019907605.Field0));
    }
    
    if (contains_3019907869(ctxHEX60gensym88_3019907604.activeQuerySet, keyHEX60gensym88_3019907605)) {
    incl_3019908298(ctxHEX60gensym88_3019907604.recursiveQueries, keyHEX60gensym88_3019907605);
    var itemHEX60gensym88_3019909817 = nimCopy(null, keyHEX60gensym88_3019907605.Field0, NTI3036676199);
    var queryHEX60gensym88_3019909903 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3019907696(ctxHEX60gensym88_3019907604.depGraph.queryNames, keyHEX60gensym88_3019907605.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3036676332(itemHEX60gensym88_3019909817), [32,40], queryHEX60gensym88_3019909903, [41]);
    Label5: {
      var kHEX60gensym88_3019909911 = 0;
      var colontmp__2969567376 = 0;
      colontmp__2969567376 = (ctxHEX60gensym88_3019907604.activeQueryStack).length - 1;
      var res_2969567377 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2969567377 <= colontmp__2969567376)) break Label7;
            kHEX60gensym88_3019909911 = res_2969567377;
            var iHEX60gensym88_3019909915 = subInt(subInt((ctxHEX60gensym88_3019907604.activeQueryStack).length, kHEX60gensym88_3019909911), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,91], HEX24_369098760(kHEX60gensym88_3019909911), [93,32,80,97,114,101,110,116,58,32], HEX24_3036676332(ctxHEX60gensym88_3019907604.activeQueryStack[chckIndx(iHEX60gensym88_3019909915, 0, (ctxHEX60gensym88_3019907604.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3019910005(ctxHEX60gensym88_3019907604.depGraph.queryNames, ctxHEX60gensym88_3019907604.activeQueryStack[chckIndx(iHEX60gensym88_3019909915, 0, (ctxHEX60gensym88_3019907604.activeQueryStack).length - 1)].Field1));
            res_2969567377 = addInt(res_2969567377, 1);
          }
      };
    };
    if (ctxHEX60gensym88_3019907604.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3019910177(ctxHEX60gensym88_3019907604.recoveryFunctions, keyHEX60gensym88_3019907605.Field1)) {
    (Temporary8 = HEX5BHEX5D_3019910276(ctxHEX60gensym88_3019907604.recoveryFunctions, keyHEX60gensym88_3019907605.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym88_3019907605);
    markRed_3036679302(ctxHEX60gensym88_3019907604.depGraph, keyHEX60gensym88_3019907605, []);
    }
    
    break BeforeRet;
    }
    
    incl_3019908298(ctxHEX60gensym88_3019907604.activeQuerySet, keyHEX60gensym88_3019907605);
    var Temporary9 = nimCopy(null, keyHEX60gensym88_3019907605, NTI3036676202);
    ctxHEX60gensym88_3019907604.activeQueryStack.push(Temporary9);;
    clearEdges_3036678875(ctxHEX60gensym88_3019907604.depGraph, keyHEX60gensym88_3019907605);
    ctxHEX60gensym88_3019907604.dependencyStack.push([]);;
    recordDependency_3019905701(ctxHEX60gensym88_3019907604, keyHEX60gensym88_3019907605.Field0, -1);
    var fingerprintHEX60gensym88_3019910421 = ctxHEX60gensym88_3019907604.updateFunctions[chckIndx(keyHEX60gensym88_3019907605.Field1, 0, (ctxHEX60gensym88_3019907604.updateFunctions).length - 1)](keyHEX60gensym88_3019907605.Field0);
    setDependencies_3036678960(ctxHEX60gensym88_3019907604.depGraph, keyHEX60gensym88_3019907605, pop_3019910422(ctxHEX60gensym88_3019907604, "dependencyStack"));
    excl_3019910449(ctxHEX60gensym88_3019907604.activeQuerySet, keyHEX60gensym88_3019907605);
    var _ = pop_3019911052(ctxHEX60gensym88_3019907604, "activeQueryStack");
    var prevFingerprintHEX60gensym88_3019911064 = fingerprint_3036679033(ctxHEX60gensym88_3019907604.depGraph, keyHEX60gensym88_3019907605);
    if (HEX3DHEX3D_3019911065(fingerprintHEX60gensym88_3019910421, prevFingerprintHEX60gensym88_3019911064)) {
    if (ctxHEX60gensym88_3019907604.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3036679221(ctxHEX60gensym88_3019907604.depGraph, keyHEX60gensym88_3019907605);
    }
    else {
      if (ctxHEX60gensym88_3019907604.enableLogging) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [109,97,114,107,32,114,101,100]);
      }
      
      markRed_3036679302(ctxHEX60gensym88_3019907604.depGraph, keyHEX60gensym88_3019907605, fingerprintHEX60gensym88_3019910421);
    }
    
    } finally {
    if (ctxHEX60gensym88_3019907604.enableLogging) {
    Temporary10 = 1;
    }
    else {
    Temporary10 = 0;
    }
    
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], Temporary10);
    }
  };

  
}

function addQuoted_3087008234(s_3087008236, s_3087008236_Idx, x_3087008237) {
    s_3087008236[s_3087008236_Idx].push.apply(s_3087008236[s_3087008236_Idx], HEX24_3087008187(x_3087008237));;

  
}

function collectionToString_3087008194(x_3087008196, prefix_3087008197, separator_3087008198, suffix_3087008199) {
  var result_3087008200 = [[]];

    result_3087008200[0] = nimCopy(null, prefix_3087008197, NTI33554449);
    var firstElement_3087008201 = true;
    Label1: {
      var value_3087008224 = null;
      var i_2969567394 = 0;
      var L_2969567395 = (x_3087008196).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567394 < L_2969567395)) break Label3;
            value_3087008224 = x_3087008196[i_2969567394];
            if (firstElement_3087008201) {
            firstElement_3087008201 = false;
            }
            else {
            result_3087008200[0].push.apply(result_3087008200[0], separator_3087008198);;
            }
            
            if ((value_3087008224 == null)) {
            result_3087008200[0].push.apply(result_3087008200[0], [110,105,108]);;
            }
            else {
            addQuoted_3087008234(result_3087008200, 0, value_3087008224);
            }
            
            i_2969567394 += 1;
            if (!(((x_3087008196).length == L_2969567395))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008200[0].push.apply(result_3087008200[0], suffix_3087008199);;

  return result_3087008200[0];

}

function HEX24_3087008190(x_3087008192) {
  var result_3087008193 = [];

    result_3087008193 = nimCopy(null, collectionToString_3087008194(x_3087008192, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008193;

}

function formatValue_2818577314(result_2818577316, result_2818577316_Idx, value_2818577317, specifier_2818577318) {
    formatValue_721420459(result_2818577316, result_2818577316_Idx, nimBoolToStr(value_2818577317), specifier_2818577318);

  
}

function HEX24_3087008187(typ_3087008188) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008189 = [];

  BeforeRet: {
    switch (typ_3087008188.kind) {
    case 0:
      result_3087008189 = nimCopy(null, [101,114,114,111,114], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008189 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      result_3087008189 = nimCopy(null, [115,116,114,105,110,103], NTI33554449);
      break BeforeRet;
      break;
    case 3:
      result_3087008189 = nimCopy(null, [105,110,116], NTI33554449);
      break BeforeRet;
      break;
    case 4:
      var Temporary1 = typ_3087008188;
      if (ConstSet62[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      var Temporary2 = typ_3087008188;
      if (ConstSet63[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      result_3087008189 = nimCopy(null, (HEX24_3087008190(Temporary1.paramTypes) || []).concat([32,45,62,32] || [],HEX24_3087008187(Temporary2.returnType) || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      result_3087008189 = nimCopy(null, [116,121,112,101], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var fmtRes_3087008253 = [mnewString(0)];
      fmtRes_3087008253[0].push.apply(fmtRes_3087008253[0], [97,110,121,40]);;
      var Temporary3 = typ_3087008188;
      if (ConstSet64[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      formatValue_2818577314(fmtRes_3087008253, 0, Temporary3.open, []);
      fmtRes_3087008253[0].push.apply(fmtRes_3087008253[0], [41]);;
      result_3087008189 = nimCopy(null, fmtRes_3087008253[0], NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008189;

}

function HEX5BHEX5D_3019912939(t_3019912942, key_3019912943) {
  var result_3019912944 = null;

    result_3019912944 = t_3019912942.get(mapKeyJs_3019899747(key_3019912943));

  return result_3019912944;

}

function addQuoted_3019911355(s_3019911357, s_3019911357_Idx, x_3019911358) {
    s_3019911357[s_3019911357_Idx].push.apply(s_3019911357[s_3019911357_Idx], HEX24_3019911361(x_3019911358));;

  
}

function collectionToString_3019911322(x_3019911324, prefix_3019911325, separator_3019911326, suffix_3019911327) {
  var result_3019911328 = [[]];

    result_3019911328[0] = nimCopy(null, prefix_3019911325, NTI33554449);
    var firstElement_3019911329 = true;
    Label1: {
      var value_3019911351 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var i_2969567410 = 0;
      var L_2969567411 = (x_3019911324).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567410 < L_2969567411)) break Label3;
            value_3019911351 = x_3019911324[i_2969567410];
            if (firstElement_3019911329) {
            firstElement_3019911329 = false;
            }
            else {
            result_3019911328[0].push.apply(result_3019911328[0], separator_3019911326);;
            }
            
            addQuoted_3019911355(result_3019911328, 0, value_3019911351);
            i_2969567410 += 1;
            if (!(((x_3019911324).length == L_2969567411))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3019911328[0].push.apply(result_3019911328[0], suffix_3019911327);;

  return result_3019911328[0];

}

function HEX24_3019911318(x_3019911320) {
  var result_3019911321 = [];

    result_3019911321 = nimCopy(null, collectionToString_3019911322(x_3019911320, [64,91], [44,32], [93]), NTI33554449);

  return result_3019911321;

}

function getOrDefault_3036678842(t_3036678845, key_3036678846, default_3036678847) {
  var result_3036678848 = [];

    result_3036678848 = nimCopy(null, orDefaultJs((t_3036678845).get(mapKeyJs_3036678529(key_3036678846)), (default_3036678847)), NTI3036676233);

  return result_3036678848;

}

function getDependencies_3036678745(graph_3036678746, key_3036678747) {
  var result_3036678748 = [];

    result_3036678748 = nimCopy(null, getOrDefault_3036678842(graph_3036678746.dependencies, key_3036678747, []), NTI3036676233);
    if ((((result_3036678748).length == 0) && !((key_3036678747.Field1 == -1)))) {
    result_3036678748.push({Field0: nimCopy(null, key_3036678747.Field0, NTI3036676199), Field1: -1});;
    }
    

  return result_3036678748;

}

function tryMarkGreen_3019911122(ctxHEX60gensym89_3019911123, keyHEX60gensym89_3019911124, tryForceHEX60gensym89_3019911125) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
    var Temporary22;

  var result_3019911126 = 0;

  BeforeRet: {
    if (ctxHEX60gensym89_3019911123.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], Temporary1);
    try {
    if (ctxHEX60gensym89_3019911123.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [116,114,121,77,97,114,107,71,114,101,101,110,32], ((Temporary3 = HEX5BHEX5D_3019907696(ctxHEX60gensym89_3019911123.depGraph.queryNames, keyHEX60gensym89_3019911124.Field1), Temporary3)[0][Temporary3[1]] || []).concat([58] || [],HEX24_3036676332(keyHEX60gensym89_3019911124.Field0) || []), [44,32,100,101,112,115,58,32], HEX24_3019911318(getDependencies_3036678745(ctxHEX60gensym89_3019911123.depGraph, keyHEX60gensym89_3019911124)));
    }
    
    if (contains_3019907869(ctxHEX60gensym89_3019911123.activeQuerySet, keyHEX60gensym89_3019911124)) {
    incl_3019908298(ctxHEX60gensym89_3019911123.recursiveQueries, keyHEX60gensym89_3019911124);
    var itemHEX60gensym89_3019911508 = nimCopy(null, keyHEX60gensym89_3019911124.Field0, NTI3036676199);
    var queryHEX60gensym89_3019911594 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3019907696(ctxHEX60gensym89_3019911123.depGraph.queryNames, keyHEX60gensym89_3019911124.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3036676332(itemHEX60gensym89_3019911508), [32,40], queryHEX60gensym89_3019911594, [41]);
    Label5: {
      var kHEX60gensym89_3019911602 = 0;
      var colontmp__2969567398 = 0;
      colontmp__2969567398 = (ctxHEX60gensym89_3019911123.activeQueryStack).length - 1;
      var res_2969567399 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2969567399 <= colontmp__2969567398)) break Label7;
            kHEX60gensym89_3019911602 = res_2969567399;
            var iHEX60gensym89_3019911606 = subInt(subInt((ctxHEX60gensym89_3019911123.activeQueryStack).length, kHEX60gensym89_3019911602), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,91], HEX24_369098760(kHEX60gensym89_3019911602), [93,32,80,97,114,101,110,116,58,32], HEX24_3036676332(ctxHEX60gensym89_3019911123.activeQueryStack[chckIndx(iHEX60gensym89_3019911606, 0, (ctxHEX60gensym89_3019911123.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3019910005(ctxHEX60gensym89_3019911123.depGraph.queryNames, ctxHEX60gensym89_3019911123.activeQueryStack[chckIndx(iHEX60gensym89_3019911606, 0, (ctxHEX60gensym89_3019911123.activeQueryStack).length - 1)].Field1));
            res_2969567399 = addInt(res_2969567399, 1);
          }
      };
    };
    if (ctxHEX60gensym89_3019911123.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3019910177(ctxHEX60gensym89_3019911123.recoveryFunctions, keyHEX60gensym89_3019911124.Field1)) {
    (Temporary8 = HEX5BHEX5D_3019910276(ctxHEX60gensym89_3019911123.recoveryFunctions, keyHEX60gensym89_3019911124.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym89_3019911124);
    markRed_3036679302(ctxHEX60gensym89_3019911123.depGraph, keyHEX60gensym89_3019911124, []);
    }
    
    result_3019911126 = 2;
    break BeforeRet;
    }
    
    incl_3019908298(ctxHEX60gensym89_3019911123.activeQuerySet, keyHEX60gensym89_3019911124);
    var Temporary9 = nimCopy(null, keyHEX60gensym89_3019911124, NTI3036676202);
    ctxHEX60gensym89_3019911123.activeQueryStack.push(Temporary9);;
    try {
    var verifiedHEX60gensym89_3019912015 = getOrDefault_3036678516(ctxHEX60gensym89_3019911123.depGraph.verified, keyHEX60gensym89_3019911124, 0);
    Label11: {
      var iHEX60gensym89_3019912039 = 0;
      var depHEX60gensym89_3019912040 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var colontmp__2969567403 = [];
      colontmp__2969567403 = getDependencies_3036678745(ctxHEX60gensym89_3019911123.depGraph, keyHEX60gensym89_3019911124);
      var i_2969567405 = 0;
      var L_2969567406 = (colontmp__2969567403).length;
      Label12: {
          Label13: while (true) {
          if (!(i_2969567405 < L_2969567406)) break Label13;
            iHEX60gensym89_3019912039 = i_2969567405;
            depHEX60gensym89_3019912040 = nimCopy(depHEX60gensym89_3019912040, colontmp__2969567403[chckIndx(i_2969567405, 0, (colontmp__2969567403).length - 1)], NTI3036676202);
            Label14: {
              if (HEX3DHEX3D_2046820626(depHEX60gensym89_3019912040.Field0.Field0, null_2046820646)) {
              if (ctxHEX60gensym89_3019911123.enableLogging) {
              rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,103,111,116,32,100,101,108,101,116,101,100,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3019911126 = 1;
              break BeforeRet;
              }
              else {
              if (HEX3DHEX3D_2046820626(depHEX60gensym89_3019912040.Field0.Field0, dependencyGlobalRevision_3036676213)) {
              if ((verifiedHEX60gensym89_3019912015 < ctxHEX60gensym89_3019911123.depGraph.revision)) {
              if (ctxHEX60gensym89_3019911123.enableLogging) {
              rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3019911126 = 1;
              break BeforeRet;
              }
              else {
                if (ctxHEX60gensym89_3019911123.enableLogging) {
                rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
              }
              
              }
              }
              switch (nodeColor_3036678422(ctxHEX60gensym89_3019911123.depGraph, depHEX60gensym89_3019912040, verifiedHEX60gensym89_3019912015)) {
              case 2:
                if (ctxHEX60gensym89_3019911123.enableLogging) {
                rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary15 = HEX5BHEX5D_3019907696(ctxHEX60gensym89_3019911123.depGraph.queryNames, depHEX60gensym89_3019912040.Field1), Temporary15)[0][Temporary15[1]] || []).concat([58] || [],HEX24_3036676332(depHEX60gensym89_3019912040.Field0) || []), [32,105,115,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
                break;
              case 1:
                if (ctxHEX60gensym89_3019911123.enableLogging) {
                rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary16 = HEX5BHEX5D_3019907696(ctxHEX60gensym89_3019911123.depGraph.queryNames, depHEX60gensym89_3019912040.Field1), Temporary16)[0][Temporary16[1]] || []).concat([58] || [],HEX24_3036676332(depHEX60gensym89_3019912040.Field0) || []), [32,105,115,32,114,101,100,44,32,102,97,105,108,101,100]);
                }
                
                result_3019911126 = 1;
                break BeforeRet;
                break;
              case 0:
                if (ctxHEX60gensym89_3019911123.enableLogging) {
                rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary17 = HEX5BHEX5D_3019907696(ctxHEX60gensym89_3019911123.depGraph.queryNames, depHEX60gensym89_3019912040.Field1), Temporary17)[0][Temporary17[1]] || []).concat([58] || [],HEX24_3036676332(depHEX60gensym89_3019912040.Field0) || []), [32,105,115,32,103,114,101,121]);
                }
                
                switch (tryMarkGreen_3019911122(ctxHEX60gensym89_3019911123, depHEX60gensym89_3019912040, true)) {
                case 2:
                  if (ctxHEX60gensym89_3019911123.enableLogging) {
                  rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary18 = HEX5BHEX5D_3019907696(ctxHEX60gensym89_3019911123.depGraph.queryNames, depHEX60gensym89_3019912040.Field1), Temporary18)[0][Temporary18[1]] || []).concat([58] || [],HEX24_3036676332(depHEX60gensym89_3019912040.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,49,32] || []).concat(HEX24_3019911361(keyHEX60gensym89_3019911124) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3019911126 = 2;
                  break BeforeRet;
                  break;
                case 1:
                  if (ctxHEX60gensym89_3019911123.enableLogging) {
                  rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary19 = HEX5BHEX5D_3019907696(ctxHEX60gensym89_3019911123.depGraph.queryNames, depHEX60gensym89_3019912040.Field1), Temporary19)[0][Temporary19[1]] || []).concat([58] || [],HEX24_3036676332(depHEX60gensym89_3019912040.Field0) || []), [44,32,109,97,114,107,32,103,114,101,101,110,32,102,97,105,108,101,100]);
                  }
                  
                  if (tryForceHEX60gensym89_3019911125) {
                  force_3019907603(ctxHEX60gensym89_3019911123, depHEX60gensym89_3019912040);
                  }
                  else {
                    result_3019911126 = 1;
                    break BeforeRet;
                  }
                  
                  if (contains_3019907869(ctxHEX60gensym89_3019911123.recursiveQueries, keyHEX60gensym89_3019911124)) {
                  excl_3019910449(ctxHEX60gensym89_3019911123.recursiveQueries, keyHEX60gensym89_3019911124);
                  if (ctxHEX60gensym89_3019911123.enableLogging) {
                  rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary20 = HEX5BHEX5D_3019907696(ctxHEX60gensym89_3019911123.depGraph.queryNames, depHEX60gensym89_3019912040.Field1), Temporary20)[0][Temporary20[1]] || []).concat([58] || [],HEX24_3036676332(depHEX60gensym89_3019912040.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,50,32] || []).concat(HEX24_3019911361(keyHEX60gensym89_3019911124) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3019911126 = 1;
                  break BeforeRet;
                  }
                  
                  if ((nodeColor_3036678422(ctxHEX60gensym89_3019911123.depGraph, depHEX60gensym89_3019912040, verifiedHEX60gensym89_3019912015) == 1)) {
                  if (ctxHEX60gensym89_3019911123.enableLogging) {
                  rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary21 = HEX5BHEX5D_3019907696(ctxHEX60gensym89_3019911123.depGraph.queryNames, depHEX60gensym89_3019912040.Field1), Temporary21)[0][Temporary21[1]] || []).concat([58] || [],HEX24_3036676332(depHEX60gensym89_3019912040.Field0) || []), [44,32,118,97,108,117,101,32,99,104,97,110,103,101,100]);
                  }
                  
                  result_3019911126 = 1;
                  break BeforeRet;
                  }
                  
                  break Label14;
                  break;
                default: 
                  break;
                }
                break;
              }
            };
            i_2969567405 = addInt(i_2969567405, 1);
            if (!(((colontmp__2969567403).length == L_2969567406))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (ctxHEX60gensym89_3019911123.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3036679221(ctxHEX60gensym89_3019911123.depGraph, keyHEX60gensym89_3019911124);
    result_3019911126 = 0;
    break BeforeRet;
    } finally {
    excl_3019910449(ctxHEX60gensym89_3019911123.activeQuerySet, keyHEX60gensym89_3019911124);
    var _ = pop_3019911052(ctxHEX60gensym89_3019911123, "activeQueryStack");
    }
    } finally {
    if (ctxHEX60gensym89_3019911123.enableLogging) {
    Temporary22 = 1;
    }
    else {
    Temporary22 = 0;
    }
    
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], Temporary22);
    }
  };

  return result_3019911126;

}

function clear_3019913072(s_3019913074) {
    s_3019913074.counter = 0;
    Label1: {
      var i_3019913160 = 0;
      var colontmp__2969567414 = 0;
      colontmp__2969567414 = (s_3019913074.data).length;
      var i_2969567415 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567415 < colontmp__2969567414)) break Label3;
            i_3019913160 = i_2969567415;
            s_3019913074.data[chckIndx(i_3019913160, 0, (s_3019913074.data).length - 1)].Field0 = 0;
            s_3019913074.data[chckIndx(i_3019913160, 0, (s_3019913074.data).length - 1)].Field1 = nimCopy(s_3019913074.data[chckIndx(i_3019913160, 0, (s_3019913074.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676202);
            i_2969567415 = addInt(i_2969567415, 1);
          }
      };
    };

  
}

function elapsed_2080374866(timer_2080374867) {
  var result_2080374868 = 0.0;

    result_2080374868 = ((Date.now() / 1000) - timer_2080374867);

  return result_2080374868;

}

function getStackTrace_33556599(e_33556600) {
  var result_33556601 = [];

    result_33556601 = nimCopy(null, e_33556600.trace, NTI33554449);

  return result_33556601;

}

function getCurrentException() {
  var result_33556459 = null;

    if (isNimException_33556456()) {
    result_33556459 = lastJSError;
    }
    

  return result_33556459;

}

function computeType_3019912985(ctxHEX60gensym92_3019912986, inputHEX60gensym92_3019912987, recordDependencyHEX60gensym92_3019912988) {
    var Temporary4;
    var Temporary6;

  var result_3019912989 = null;

  BeforeRet: {
++excHandler;
    try {
    var timerHEX60gensym92_3019912990 = startTimer_2080374869();
    ctxHEX60gensym92_3019912986.statsType.totalCalls = addInt(ctxHEX60gensym92_3019912986.statsType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym92_3019913405 = getItem_3019905914(inputHEX60gensym92_3019912987);
    var keyHEX60gensym92_3019913406 = {Field0: nimCopy(null, itemHEX60gensym92_3019913405, NTI3036676199), Field1: 0};
    if (recordDependencyHEX60gensym92_3019912988) {
    recordDependency_3019905701(ctxHEX60gensym92_3019912986, itemHEX60gensym92_3019913405, 0);
    }
    
    var colorHEX60gensym92_3019913407 = nodeColor_3036678422(ctxHEX60gensym92_3019912986.depGraph, keyHEX60gensym92_3019913406, 0);
    if (ctxHEX60gensym92_3019912986.enableLogging) {
    Temporary4 = 1;
    }
    else {
    Temporary4 = 0;
    }
    
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], Temporary4);
    try {
    if (ctxHEX60gensym92_3019912986.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [84,121,112,101], [32], reprEnum(colorHEX60gensym92_3019913407, NTI3036676204), [44,32], HEX24_3036676332(itemHEX60gensym92_3019913405));
    }
    
    if ((colorHEX60gensym92_3019913407 == 2)) {
    if (!(contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    if (ctxHEX60gensym92_3019912986.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym92_3019912986, keyHEX60gensym92_3019913406);
    if (false) {
    markRed_3036679302(ctxHEX60gensym92_3019912986.depGraph, keyHEX60gensym92_3019913406, []);
    }
    
    if ((ctxHEX60gensym92_3019912986.enableLogging && contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987)));
    }
    
    }
    else {
      if ((ctxHEX60gensym92_3019912986.enableLogging && contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987)));
      }
      
    }
    
    if (!(contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym92_3019912987) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019912989 = HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym92_3019913407 == 0)) {
    if (!(contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    if (ctxHEX60gensym92_3019912986.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym92_3019912986, keyHEX60gensym92_3019913406);
    if (false) {
    markRed_3036679302(ctxHEX60gensym92_3019912986.depGraph, keyHEX60gensym92_3019913406, []);
    }
    
    if ((ctxHEX60gensym92_3019912986.enableLogging && contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987)));
    }
    
    if (!(contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym92_3019912987) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019912989 = HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym92_3019912986.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911122(ctxHEX60gensym92_3019912986, keyHEX60gensym92_3019913406, true) == 0)) {
    if ((ctxHEX60gensym92_3019912986.enableLogging && contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987)));
    }
    
    if (!(contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym92_3019912987) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019912989 = HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym92_3019912986.enableLogging) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019907603(ctxHEX60gensym92_3019912986, keyHEX60gensym92_3019913406);
      if (false) {
      markRed_3036679302(ctxHEX60gensym92_3019912986.depGraph, keyHEX60gensym92_3019913406, []);
      }
      
      if ((ctxHEX60gensym92_3019912986.enableLogging && contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987)));
      }
      
      if (!(contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
      raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym92_3019912987) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019912989 = HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym92_3019913407 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,52,50,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym92_3019912986.enableLogging && contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987)));
    }
    
    if (!(contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    force_3019907603(ctxHEX60gensym92_3019912986, keyHEX60gensym92_3019913406);
    }
    
    if (!(contains_3019912845(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym92_3019912987) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019912989 = HEX5BHEX5D_3019912939(ctxHEX60gensym92_3019912986.queryCacheType, inputHEX60gensym92_3019912987);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym92_3019912986.enableLogging) {
    Temporary6 = 1;
    }
    else {
    Temporary6 = 0;
    }
    
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], Temporary6);
    }
    } finally {
    if (((ctxHEX60gensym92_3019912986.dependencyStack).length == 0)) {
    clear_3019913072(ctxHEX60gensym92_3019912986.recursiveQueries);
    }
    
    }
    } finally {
    HEX2BHEX3D_855640304(ctxHEX60gensym92_3019912986.statsType, "time", elapsed_2080374866(timerHEX60gensym92_3019912990));
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym92_3019912986.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019912989;

}

function formatValue_3019945661(result_3019945663, result_3019945663_Idx, value_3019945664, specifier_3019945665) {
    formatValue_721420459(result_3019945663, result_3019945663_Idx, HEX24_3087008187(value_3019945664), specifier_3019945665);

  
}

function contains_3019915976(t_3019915979, key_3019915980) {
  var result_3019915981 = false;

    result_3019915981 = t_3019915979.has(mapKeyJs_3019899747(key_3019915980));

  return result_3019915981;

}

function HEX24_3087008494(value_3087008495) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008496 = [];

  BeforeRet: {
    switch (value_3087008495.kind) {
    case 0:
      result_3087008496 = nimCopy(null, [60,118,107,69,114,114,111,114,62], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008496 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary1 = value_3087008495;
      if (ConstSet65[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008496 = nimCopy(null, Temporary1.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 3:
      var Temporary2 = value_3087008495;
      if (ConstSet66[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008496 = nimCopy(null, HEX24_369098760(Temporary2.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 4:
      result_3087008496 = nimCopy(null, [60,98,117,105,108,116,105,110,45,102,117,110,99,116,105,111,110,62], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008495;
      if (ConstSet67[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008496 = nimCopy(null, ([60,97,115,116,45,102,117,110,99,116,105,111,110,32] || []).concat(HEX24_3003123671(Temporary3.node) || [],[62] || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008495;
      if (ConstSet68[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008496 = nimCopy(null, HEX24_3087008187(Temporary4.typ), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008496;

}

function HEX5BHEX5D_3019916070(t_3019916073, key_3019916074) {
  var result_3019916075 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019916075 = nimCopy(result_3019916075, t_3019916073.get(mapKeyJs_3019899747(key_3019916074)), NTI3087007751);

  return result_3019916075;

}

function computeValue_3019916118(ctxHEX60gensym96_3019916119, inputHEX60gensym96_3019916120, recordDependencyHEX60gensym96_3019916121) {
    var Temporary4;
    var Temporary6;

  var result_3019916122 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    var timerHEX60gensym96_3019916123 = startTimer_2080374869();
    ctxHEX60gensym96_3019916119.statsValue.totalCalls = addInt(ctxHEX60gensym96_3019916119.statsValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym96_3019916208 = getItem_3019905914(inputHEX60gensym96_3019916120);
    var keyHEX60gensym96_3019916209 = {Field0: nimCopy(null, itemHEX60gensym96_3019916208, NTI3036676199), Field1: 1};
    if (recordDependencyHEX60gensym96_3019916121) {
    recordDependency_3019905701(ctxHEX60gensym96_3019916119, itemHEX60gensym96_3019916208, 1);
    }
    
    var colorHEX60gensym96_3019916210 = nodeColor_3036678422(ctxHEX60gensym96_3019916119.depGraph, keyHEX60gensym96_3019916209, 0);
    if (ctxHEX60gensym96_3019916119.enableLogging) {
    Temporary4 = 1;
    }
    else {
    Temporary4 = 0;
    }
    
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], Temporary4);
    try {
    if (ctxHEX60gensym96_3019916119.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,117,101], [32], reprEnum(colorHEX60gensym96_3019916210, NTI3036676204), [44,32], HEX24_3036676332(itemHEX60gensym96_3019916208));
    }
    
    if ((colorHEX60gensym96_3019916210 == 2)) {
    if (!(contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    if (ctxHEX60gensym96_3019916119.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym96_3019916119, keyHEX60gensym96_3019916209);
    if (false) {
    markRed_3036679302(ctxHEX60gensym96_3019916119.depGraph, keyHEX60gensym96_3019916209, []);
    }
    
    if ((ctxHEX60gensym96_3019916119.enableLogging && contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120)));
    }
    
    }
    else {
      if ((ctxHEX60gensym96_3019916119.enableLogging && contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120)));
      }
      
    }
    
    if (!(contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym96_3019916120) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916122 = nimCopy(result_3019916122, HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym96_3019916210 == 0)) {
    if (!(contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    if (ctxHEX60gensym96_3019916119.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym96_3019916119, keyHEX60gensym96_3019916209);
    if (false) {
    markRed_3036679302(ctxHEX60gensym96_3019916119.depGraph, keyHEX60gensym96_3019916209, []);
    }
    
    if ((ctxHEX60gensym96_3019916119.enableLogging && contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120)));
    }
    
    if (!(contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym96_3019916120) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916122 = nimCopy(result_3019916122, HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym96_3019916119.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911122(ctxHEX60gensym96_3019916119, keyHEX60gensym96_3019916209, true) == 0)) {
    if ((ctxHEX60gensym96_3019916119.enableLogging && contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120)));
    }
    
    if (!(contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym96_3019916120) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916122 = nimCopy(result_3019916122, HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym96_3019916119.enableLogging) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019907603(ctxHEX60gensym96_3019916119, keyHEX60gensym96_3019916209);
      if (false) {
      markRed_3036679302(ctxHEX60gensym96_3019916119.depGraph, keyHEX60gensym96_3019916209, []);
      }
      
      if ((ctxHEX60gensym96_3019916119.enableLogging && contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120)));
      }
      
      if (!(contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym96_3019916120) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019916122 = nimCopy(result_3019916122, HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym96_3019916210 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,52,50,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,54,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym96_3019916119.enableLogging && contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120)));
    }
    
    if (!(contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    force_3019907603(ctxHEX60gensym96_3019916119, keyHEX60gensym96_3019916209);
    }
    
    if (!(contains_3019915976(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym96_3019916120) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916122 = nimCopy(result_3019916122, HEX5BHEX5D_3019916070(ctxHEX60gensym96_3019916119.queryCacheValue, inputHEX60gensym96_3019916120), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym96_3019916119.enableLogging) {
    Temporary6 = 1;
    }
    else {
    Temporary6 = 0;
    }
    
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], Temporary6);
    }
    } finally {
    if (((ctxHEX60gensym96_3019916119.dependencyStack).length == 0)) {
    clear_3019913072(ctxHEX60gensym96_3019916119.recursiveQueries);
    }
    
    }
    } finally {
    HEX2BHEX3D_855640304(ctxHEX60gensym96_3019916119.statsValue, "time", elapsed_2080374866(timerHEX60gensym96_3019916123));
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym96_3019916119.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019916122;

}

function formatValue_3137340831(result_3137340833, result_3137340833_Idx, value_3137340834, specifier_3137340835) {
    formatValue_721420459(result_3137340833, result_3137340833_Idx, HEX24_3087008494(value_3137340834), specifier_3137340835);

  
}

function newFunctionType_3087008169(paramTypes_3087008170, returnType_3087008171) {
  var result_3087008172 = null;

    result_3087008172 = {kind: 4, returnType: returnType_3087008171, paramTypes: nimCopy(null, paramTypes_3087008170, NTI3087008054), mHash: 0, open: false};

  return result_3087008172;

}

function HEX3DHEX3D_3087008327(x_3087008329, y_3087008330) {
  var result_3087008331 = false;

  BeforeRet: {
    var sameObject_3087008338 = false;
    sameObject_3087008338 = x_3087008329 === y_3087008330
    if (sameObject_3087008338) {
    result_3087008331 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008329).length == (y_3087008330).length))) {
    result_3087008331 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008352 = 0;
      var colontmp__2969567418 = 0;
      colontmp__2969567418 = subInt((x_3087008329).length, 1);
      var res_2969567419 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567419 <= colontmp__2969567418)) break Label3;
            i_3087008352 = res_2969567419;
            if (!(HEX3DHEX3D_3087008309(x_3087008329[chckIndx(i_3087008352, 0, (x_3087008329).length - 1)], y_3087008330[chckIndx(i_3087008352, 0, (y_3087008330).length - 1)]))) {
            result_3087008331 = false;
            break BeforeRet;
            }
            
            res_2969567419 = addInt(res_2969567419, 1);
          }
      };
    };
    result_3087008331 = true;
    break BeforeRet;
  };

  return result_3087008331;

}

function HEX3DHEX3D_3087008309(a_3087008310, b_3087008311) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_3087008312 = false;

  BeforeRet: {
    if ((a_3087008310 == null)) {
    result_3087008312 = (b_3087008311 == null);
    break BeforeRet;
    }
    
    if ((b_3087008311 == null)) {
    result_3087008312 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008310.kind == b_3087008311.kind))) {
    result_3087008312 = false;
    break BeforeRet;
    }
    
    switch (a_3087008310.kind) {
    case 4:
      var Temporary2 = a_3087008310;
      if (ConstSet71[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = b_3087008311;
      if (ConstSet72[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      if (!HEX3DHEX3D_3087008309(Temporary2.returnType, Temporary3.returnType)) Temporary1 = false; else {        var Temporary4 = a_3087008310;
        if (ConstSet73[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        var Temporary5 = b_3087008311;
        if (ConstSet74[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary1 = HEX3DHEX3D_3087008327(Temporary4.paramTypes, Temporary5.paramTypes);      }      result_3087008312 = Temporary1;
      break BeforeRet;
      break;
    case 5:
      var Temporary6 = a_3087008310;
      if (ConstSet75[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      var Temporary7 = b_3087008311;
      if (ConstSet76[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007747)); }
      result_3087008312 = (Temporary6.open == Temporary7.open);
      break BeforeRet;
      break;
    default: 
      result_3087008312 = true;
      break BeforeRet;
      break;
    }
  };

  return result_3087008312;

}

function anyType_3087008184(open_3087008185) {
  var result_3087008186 = null;

    result_3087008186 = {kind: 5, open: open_3087008185, mHash: 0, returnType: null, paramTypes: []};

  return result_3087008186;

}

function contains_3019921918(t_3019921921, key_3019921922) {
  var result_3019921923 = false;

    result_3019921923 = t_3019921921.has(mapKeyJs_3019899747(key_3019921922));

  return result_3019921923;

}

function len_3087009061(t_3087009064) {
  var result_3087009065 = 0;

    result_3087009065 = t_3087009064.counter;

  return result_3087009065;

}

function addQuoted_3019905304(s_3019905306, s_3019905306_Idx, x_3019905307) {
    s_3019905306[s_3019905306_Idx].push.apply(s_3019905306[s_3019905306_Idx], HEX24_2046820617(x_3019905307));;

  
}

function HEX24_3087008911(symbol_3087008912) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008913 = [];

  BeforeRet: {
    switch (symbol_3087008912.kind) {
    case 0:
      var Temporary1 = symbol_3087008912;
      if (ConstSet88[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008913 = nimCopy(null, ([83,121,109,40,65,115,116,78,111,100,101,44,32] || []).concat(HEX24_2046820617(symbol_3087008912.id) || [],[44,32] || [],HEX24_3003123671(Temporary1.node) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = symbol_3087008912;
      if (ConstSet89[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008912;
      if (ConstSet90[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3087008913 = nimCopy(null, ([83,121,109,40,66,117,105,108,116,105,110,44,32] || []).concat(HEX24_2046820617(symbol_3087008912.id) || [],[44,32] || [],HEX24_3087008187(Temporary2.typ) || [],[44,32] || [],HEX24_3087008494(Temporary3.value) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008913;

}

function addQuoted_3019905115(s_3019905117, s_3019905117_Idx, x_3019905118) {
    s_3019905117[s_3019905117_Idx].push.apply(s_3019905117[s_3019905117_Idx], HEX24_3087008911(x_3019905118));;

  
}

function HEX24_3019905211(t_3019905214) {
  var result_3019905215 = [[]];

    if ((len_3087009061(t_3019905214) == 0)) {
    result_3019905215[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_3019905215[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_3019905302 = ({padding: 0, time: 0, fuzz: 0, count: 0});
        var val_3019905303 = null;
        var L_2969567426 = len_3087009061(t_3019905214);
        Label2: {
          var h_2969567428 = 0;
          var colontmp__2969567429 = 0;
          colontmp__2969567429 = (t_3019905214.data).length - 1;
          var res_2969567430 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_2969567430 <= colontmp__2969567429)) break Label4;
                h_2969567428 = res_2969567430;
                if (isFilled_1308622880(t_3019905214.data[chckIndx(h_2969567428, 0, (t_3019905214.data).length - 1)].Field0)) {
                key_3019905302 = nimCopy(key_3019905302, t_3019905214.data[chckIndx(h_2969567428, 0, (t_3019905214.data).length - 1)].Field1, NTI2046820355);
                val_3019905303 = t_3019905214.data[chckIndx(h_2969567428, 0, (t_3019905214.data).length - 1)].Field2;
                if ((1 < (result_3019905215[0]).length)) {
                result_3019905215[0].push.apply(result_3019905215[0], [44,32]);;
                }
                
                addQuoted_3019905304(result_3019905215, 0, key_3019905302);
                result_3019905215[0].push.apply(result_3019905215[0], [58,32]);;
                addQuoted_3019905115(result_3019905215, 0, val_3019905303);
                if (!((len_3087009061(t_3019905214) == L_2969567426))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_2969567430 = addInt(res_2969567430, 1);
              }
          };
        };
      };
      result_3019905215[0].push.apply(result_3019905215[0], [125]);;
    }
    

  return result_3019905215[0];

}

function HEX5BHEX5D_3019922012(t_3019922015, key_3019922016) {
  var result_3019922017 = null;

    result_3019922017 = t_3019922015.get(mapKeyJs_3019899747(key_3019922016));

  return result_3019922017;

}

function computeSymbols_3019922062(ctxHEX60gensym104_3019922063, inputHEX60gensym104_3019922064, recordDependencyHEX60gensym104_3019922065) {
    var Temporary4;
    var Temporary6;

  var result_3019922068 = null;

  BeforeRet: {
++excHandler;
    try {
    var timerHEX60gensym104_3019922069 = startTimer_2080374869();
    ctxHEX60gensym104_3019922063.statsSymbols.totalCalls = addInt(ctxHEX60gensym104_3019922063.statsSymbols.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym104_3019922154 = getItem_3019905914(inputHEX60gensym104_3019922064);
    var keyHEX60gensym104_3019922155 = {Field0: nimCopy(null, itemHEX60gensym104_3019922154, NTI3036676199), Field1: 3};
    if (recordDependencyHEX60gensym104_3019922065) {
    recordDependency_3019905701(ctxHEX60gensym104_3019922063, itemHEX60gensym104_3019922154, 3);
    }
    
    var colorHEX60gensym104_3019922156 = nodeColor_3036678422(ctxHEX60gensym104_3019922063.depGraph, keyHEX60gensym104_3019922155, 0);
    if (ctxHEX60gensym104_3019922063.enableLogging) {
    Temporary4 = 1;
    }
    else {
    Temporary4 = 0;
    }
    
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], Temporary4);
    try {
    if (ctxHEX60gensym104_3019922063.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,115], [32], reprEnum(colorHEX60gensym104_3019922156, NTI3036676204), [44,32], HEX24_3036676332(itemHEX60gensym104_3019922154));
    }
    
    if ((colorHEX60gensym104_3019922156 == 2)) {
    if (!(contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    if (ctxHEX60gensym104_3019922063.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym104_3019922063, keyHEX60gensym104_3019922155);
    if (false) {
    markRed_3036679302(ctxHEX60gensym104_3019922063.depGraph, keyHEX60gensym104_3019922155, []);
    }
    
    if ((ctxHEX60gensym104_3019922063.enableLogging && contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905211(HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064)));
    }
    
    }
    else {
      if ((ctxHEX60gensym104_3019922063.enableLogging && contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905211(HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064)));
      }
      
    }
    
    if (!(contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym104_3019922064) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922068 = HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym104_3019922156 == 0)) {
    if (!(contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    if (ctxHEX60gensym104_3019922063.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym104_3019922063, keyHEX60gensym104_3019922155);
    if (false) {
    markRed_3036679302(ctxHEX60gensym104_3019922063.depGraph, keyHEX60gensym104_3019922155, []);
    }
    
    if ((ctxHEX60gensym104_3019922063.enableLogging && contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905211(HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064)));
    }
    
    if (!(contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym104_3019922064) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922068 = HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym104_3019922063.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911122(ctxHEX60gensym104_3019922063, keyHEX60gensym104_3019922155, true) == 0)) {
    if ((ctxHEX60gensym104_3019922063.enableLogging && contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3019905211(HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064)));
    }
    
    if (!(contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym104_3019922064) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922068 = HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym104_3019922063.enableLogging) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019907603(ctxHEX60gensym104_3019922063, keyHEX60gensym104_3019922155);
      if (false) {
      markRed_3036679302(ctxHEX60gensym104_3019922063.depGraph, keyHEX60gensym104_3019922155, []);
      }
      
      if ((ctxHEX60gensym104_3019922063.enableLogging && contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905211(HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064)));
      }
      
      if (!(contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym104_3019922064) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019922068 = HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym104_3019922156 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,52,50,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,52,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym104_3019922063.enableLogging && contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905211(HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064)));
    }
    
    if (!(contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    force_3019907603(ctxHEX60gensym104_3019922063, keyHEX60gensym104_3019922155);
    }
    
    if (!(contains_3019921918(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym104_3019922064) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922068 = HEX5BHEX5D_3019922012(ctxHEX60gensym104_3019922063.queryCacheSymbols, inputHEX60gensym104_3019922064);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym104_3019922063.enableLogging) {
    Temporary6 = 1;
    }
    else {
    Temporary6 = 0;
    }
    
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], Temporary6);
    }
    } finally {
    if (((ctxHEX60gensym104_3019922063.dependencyStack).length == 0)) {
    clear_3019913072(ctxHEX60gensym104_3019922063.recursiveQueries);
    }
    
    }
    } finally {
    HEX2BHEX3D_855640304(ctxHEX60gensym104_3019922063.statsSymbols, "time", elapsed_2080374866(timerHEX60gensym104_3019922069));
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym104_3019922063.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019922068;

}

function rawGet_3019934929(t_3019934932, key_3019934933, hc_3019934934, hc_3019934934_Idx) {
  var result_3019934935 = 0;

  BeforeRet: {
    hc_3019934934[hc_3019934934_Idx] = hash_2046820630(key_3019934933);
    if ((hc_3019934934[hc_3019934934_Idx] == 0)) {
    hc_3019934934[hc_3019934934_Idx] = 314159265;
    }
    
    if (((t_3019934932.data).length == 0)) {
    result_3019934935 = -1;
    break BeforeRet;
    }
    
    var h_3019935020 = (hc_3019934934[hc_3019934934_Idx] & (t_3019934932.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019934932.data[chckIndx(h_3019935020, 0, (t_3019934932.data).length - 1)].Field0)) break Label2;
          if (((t_3019934932.data[chckIndx(h_3019935020, 0, (t_3019934932.data).length - 1)].Field0 == hc_3019934934[hc_3019934934_Idx]) && HEX3DHEX3D_2046820626(t_3019934932.data[chckIndx(h_3019935020, 0, (t_3019934932.data).length - 1)].Field1, key_3019934933))) {
          result_3019934935 = h_3019935020;
          break BeforeRet;
          }
          
          h_3019935020 = nextTry_1308622883(h_3019935020, (t_3019934932.data).length - 1);
        }
    };
    result_3019934935 = subInt(-1, h_3019935020);
  };

  return result_3019934935;

}

function hasKey_3019946275(t_3019946278, key_3019946279) {
  var result_3019946280 = false;

    var hc_3019946281 = [0];
    result_3019946280 = (0 <= rawGet_3019934929(t_3019946278, key_3019946279, hc_3019946281, 0));

  return result_3019946280;

}

function hasKey_3019946149(t_3019946152, key_3019946153) {
  var result_3019946154 = false;

    result_3019946154 = hasKey_3019946275(t_3019946152, key_3019946153);

  return result_3019946154;

}

function contains_3019946113(t_3019946116, key_3019946117) {
  var result_3019946118 = false;

  BeforeRet: {
    result_3019946118 = hasKey_3019946149(t_3019946116, key_3019946117);
    break BeforeRet;
  };

  return result_3019946118;

}

function HEX5BHEX5D_3019946534(t_3019946537, key_3019946538) {
  var result_3019946539 = null;
  var result_3019946539_Idx = 0;

    var hcHEX60gensym22_3019946540 = [0];
    var indexHEX60gensym22_3019946547 = rawGet_3019934929(t_3019946537, key_3019946538, hcHEX60gensym22_3019946540, 0);
    if ((0 <= indexHEX60gensym22_3019946547)) {
    result_3019946539 = t_3019946537.data[chckIndx(indexHEX60gensym22_3019946547, 0, (t_3019946537.data).length - 1)]; result_3019946539_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3019946538);
    }
    

  return [result_3019946539, result_3019946539_Idx];

}

function HEX5BHEX5D_3019946368(t_3019946371, key_3019946372) {
    var Temporary1;

  var result_3019946373 = null;
  var result_3019946373_Idx = 0;

    result_3019946373 = (Temporary1 = HEX5BHEX5D_3019946534(t_3019946371, key_3019946372), Temporary1)[0]; result_3019946373_Idx = Temporary1[1];

  return [result_3019946373, result_3019946373_Idx];

}

function getItem_3019906700(selfHEX60gensym81_3019906701) {
  var result_3019906702 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym81_3019906701.id, null_2046820646)) {
    selfHEX60gensym81_3019906701.id = nimCopy(selfHEX60gensym81_3019906701.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym81_3019906701.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,56,49,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,49,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567433 = nimCopy(null, selfHEX60gensym81_3019906701.id, NTI2046820355);
    var colontmp__2969567434 = 2;
    result_3019906702 = nimCopy(result_3019906702, {Field0: nimCopy(null, colontmp__2969567433, NTI2046820355), Field1: colontmp__2969567434}, NTI3036676199);
    break BeforeRet;
  };

  return result_3019906702;

}

function mapKeyJs_3019901167(key_3019901169) {
  var result_3019901170 = null;

    let temp = key_3019901169;
    if (temp._id === undefined) temp._id = getIdSymbolJs(key_3019901169);
    return temp._id;

  return result_3019901170;

}

function contains_3019925077(t_3019925080, key_3019925081) {
  var result_3019925082 = false;

    result_3019925082 = t_3019925080.has(mapKeyJs_3019901167(key_3019925081));

  return result_3019925082;

}

function HEX5BHEX5D_3019925171(t_3019925174, key_3019925175) {
  var result_3019925176 = null;

    result_3019925176 = t_3019925174.get(mapKeyJs_3019901167(key_3019925175));

  return result_3019925176;

}

function computeSymbolType_3019925190(ctxHEX60gensym108_3019925191, inputHEX60gensym108_3019925192, recordDependencyHEX60gensym108_3019925193) {
    var Temporary4;
    var Temporary6;

  var result_3019925194 = null;

  BeforeRet: {
++excHandler;
    try {
    var timerHEX60gensym108_3019925195 = startTimer_2080374869();
    ctxHEX60gensym108_3019925191.statsSymbolType.totalCalls = addInt(ctxHEX60gensym108_3019925191.statsSymbolType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym108_3019925280 = getItem_3019906700(inputHEX60gensym108_3019925192);
    var keyHEX60gensym108_3019925281 = {Field0: nimCopy(null, itemHEX60gensym108_3019925280, NTI3036676199), Field1: 4};
    if (recordDependencyHEX60gensym108_3019925193) {
    recordDependency_3019905701(ctxHEX60gensym108_3019925191, itemHEX60gensym108_3019925280, 4);
    }
    
    var colorHEX60gensym108_3019925282 = nodeColor_3036678422(ctxHEX60gensym108_3019925191.depGraph, keyHEX60gensym108_3019925281, 0);
    if (ctxHEX60gensym108_3019925191.enableLogging) {
    Temporary4 = 1;
    }
    else {
    Temporary4 = 0;
    }
    
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], Temporary4);
    try {
    if (ctxHEX60gensym108_3019925191.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,84,121,112,101], [32], reprEnum(colorHEX60gensym108_3019925282, NTI3036676204), [44,32], HEX24_3036676332(itemHEX60gensym108_3019925280));
    }
    
    if ((colorHEX60gensym108_3019925282 == 2)) {
    if (!(contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    if (ctxHEX60gensym108_3019925191.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym108_3019925191, keyHEX60gensym108_3019925281);
    if (false) {
    markRed_3036679302(ctxHEX60gensym108_3019925191.depGraph, keyHEX60gensym108_3019925281, []);
    }
    
    if ((ctxHEX60gensym108_3019925191.enableLogging && contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192)));
    }
    
    }
    else {
      if ((ctxHEX60gensym108_3019925191.enableLogging && contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192)));
      }
      
    }
    
    if (!(contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008911(inputHEX60gensym108_3019925192) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925194 = HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym108_3019925282 == 0)) {
    if (!(contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    if (ctxHEX60gensym108_3019925191.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym108_3019925191, keyHEX60gensym108_3019925281);
    if (false) {
    markRed_3036679302(ctxHEX60gensym108_3019925191.depGraph, keyHEX60gensym108_3019925281, []);
    }
    
    if ((ctxHEX60gensym108_3019925191.enableLogging && contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192)));
    }
    
    if (!(contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008911(inputHEX60gensym108_3019925192) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925194 = HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym108_3019925191.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911122(ctxHEX60gensym108_3019925191, keyHEX60gensym108_3019925281, true) == 0)) {
    if ((ctxHEX60gensym108_3019925191.enableLogging && contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192)));
    }
    
    if (!(contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008911(inputHEX60gensym108_3019925192) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925194 = HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym108_3019925191.enableLogging) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019907603(ctxHEX60gensym108_3019925191, keyHEX60gensym108_3019925281);
      if (false) {
      markRed_3036679302(ctxHEX60gensym108_3019925191.depGraph, keyHEX60gensym108_3019925281, []);
      }
      
      if ((ctxHEX60gensym108_3019925191.enableLogging && contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192)));
      }
      
      if (!(contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008911(inputHEX60gensym108_3019925192) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019925194 = HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym108_3019925282 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,52,50,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,56,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym108_3019925191.enableLogging && contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008187(HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192)));
    }
    
    if (!(contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    force_3019907603(ctxHEX60gensym108_3019925191, keyHEX60gensym108_3019925281);
    }
    
    if (!(contains_3019925077(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008911(inputHEX60gensym108_3019925192) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925194 = HEX5BHEX5D_3019925171(ctxHEX60gensym108_3019925191.queryCacheSymbolType, inputHEX60gensym108_3019925192);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym108_3019925191.enableLogging) {
    Temporary6 = 1;
    }
    else {
    Temporary6 = 0;
    }
    
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], Temporary6);
    }
    } finally {
    if (((ctxHEX60gensym108_3019925191.dependencyStack).length == 0)) {
    clear_3019913072(ctxHEX60gensym108_3019925191.recursiveQueries);
    }
    
    }
    } finally {
    HEX2BHEX3D_855640304(ctxHEX60gensym108_3019925191.statsSymbolType, "time", elapsed_2080374866(timerHEX60gensym108_3019925195));
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym108_3019925191.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019925194;

}

function none_3019912969() {
  var result_3019912975 = ({val: null});

  return result_3019912975;

}

function none_3019912966() {
  var result_3019912968 = ({val: null});

    result_3019912968 = nimCopy(result_3019912968, none_3019912969(), NTI3019907149);

  return result_3019912968;

}

function isNone_3019946723(self_3019946725) {
  var result_3019946726 = false;

    result_3019946726 = (self_3019946725.val == null);

  return result_3019946726;

}

function get_3019946766(self_3019946768) {
  var result_3019946769 = null;
  var result_3019946769_Idx = 0;

  BeforeRet: {
    if (isNone_3019946723(self_3019946768)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3019946769 = self_3019946768; result_3019946769_Idx = "val";
    break BeforeRet;
  };

  return [result_3019946769, result_3019946769_Idx];

}

function some_3019912953(val_3019912955) {
  var result_3019912956 = ({val: null});

    if (!(!((val_3019912955 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3019912956.val = val_3019912955;

  return result_3019912956;

}

function last_3003121922(node_3003121923) {
  var result_3003121924 = null;

  BeforeRet: {
    if ((0 < len_3003121752(node_3003121923))) {
    result_3003121924 = HEX5BHEX5D_3003121748(node_3003121923, subInt(len_3003121752(node_3003121923), 1));
    break BeforeRet;
    }
    
    result_3003121924 = null;
    break BeforeRet;
  };

  return result_3003121924;

}

function isSome_3019946893(self_3019946895) {
  var result_3019946896 = false;

    result_3019946896 = !((self_3019946895.val == null));

  return result_3019946896;

}

function get_3019946884(self_3019946886, otherwise_3019946887) {
    var Temporary1;

  var result_3019946888 = null;

    if (isSome_3019946893(self_3019946886)) {
    Temporary1 = self_3019946886.val;
    }
    else {
    Temporary1 = otherwise_3019946887;
    }
    
    result_3019946888 = Temporary1;

  return result_3019946888;

}

function contains_3019918770(t_3019918773, key_3019918774) {
  var result_3019918775 = false;

    result_3019918775 = t_3019918773.has(mapKeyJs_3019899747(key_3019918774));

  return result_3019918775;

}

function isSome_3087009352(self_3087009354) {
  var result_3087009355 = false;

    result_3087009355 = !((self_3087009354.val == null));

  return result_3087009355;

}

function HEX24_3019905104(self_3019905106) {
  var result_3019905107 = [[]];

    if (isSome_3087009352(self_3019905106)) {
    result_3019905107[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_3019905115(result_3019905107, 0, self_3019905106.val);
    result_3019905107[0].push.apply(result_3019905107[0], [41]);;
    }
    else {
      result_3019905107[0] = nimCopy(null, [110,111,110,101,40,83,121,109,98,111,108,41], NTI33554449);
    }
    

  return result_3019905107[0];

}

function HEX5BHEX5D_3019918864(t_3019918867, key_3019918868) {
  var result_3019918869 = ({val: null});

    result_3019918869 = nimCopy(result_3019918869, t_3019918867.get(mapKeyJs_3019899747(key_3019918868)), NTI3087008908);

  return result_3019918869;

}

function computeSymbol_3019918905(ctxHEX60gensym100_3019918906, inputHEX60gensym100_3019918907, recordDependencyHEX60gensym100_3019918908) {
    var Temporary4;
    var Temporary6;

  var result_3019918910 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var timerHEX60gensym100_3019918911 = startTimer_2080374869();
    ctxHEX60gensym100_3019918906.statsSymbol.totalCalls = addInt(ctxHEX60gensym100_3019918906.statsSymbol.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym100_3019918996 = getItem_3019905914(inputHEX60gensym100_3019918907);
    var keyHEX60gensym100_3019918997 = {Field0: nimCopy(null, itemHEX60gensym100_3019918996, NTI3036676199), Field1: 2};
    if (recordDependencyHEX60gensym100_3019918908) {
    recordDependency_3019905701(ctxHEX60gensym100_3019918906, itemHEX60gensym100_3019918996, 2);
    }
    
    var colorHEX60gensym100_3019918998 = nodeColor_3036678422(ctxHEX60gensym100_3019918906.depGraph, keyHEX60gensym100_3019918997, 0);
    if (ctxHEX60gensym100_3019918906.enableLogging) {
    Temporary4 = 1;
    }
    else {
    Temporary4 = 0;
    }
    
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], Temporary4);
    try {
    if (ctxHEX60gensym100_3019918906.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108], [32], reprEnum(colorHEX60gensym100_3019918998, NTI3036676204), [44,32], HEX24_3036676332(itemHEX60gensym100_3019918996));
    }
    
    if ((colorHEX60gensym100_3019918998 == 2)) {
    if (!(contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    if (ctxHEX60gensym100_3019918906.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym100_3019918906, keyHEX60gensym100_3019918997);
    if (false) {
    markRed_3036679302(ctxHEX60gensym100_3019918906.depGraph, keyHEX60gensym100_3019918997, []);
    }
    
    if ((ctxHEX60gensym100_3019918906.enableLogging && contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905104(HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907)));
    }
    
    }
    else {
      if ((ctxHEX60gensym100_3019918906.enableLogging && contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905104(HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907)));
      }
      
    }
    
    if (!(contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym100_3019918907) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019918910 = nimCopy(result_3019918910, HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907), NTI3087008908);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym100_3019918998 == 0)) {
    if (!(contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    if (ctxHEX60gensym100_3019918906.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym100_3019918906, keyHEX60gensym100_3019918997);
    if (false) {
    markRed_3036679302(ctxHEX60gensym100_3019918906.depGraph, keyHEX60gensym100_3019918997, []);
    }
    
    if ((ctxHEX60gensym100_3019918906.enableLogging && contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905104(HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907)));
    }
    
    if (!(contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym100_3019918907) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019918910 = nimCopy(result_3019918910, HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907), NTI3087008908);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym100_3019918906.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911122(ctxHEX60gensym100_3019918906, keyHEX60gensym100_3019918997, true) == 0)) {
    if ((ctxHEX60gensym100_3019918906.enableLogging && contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3019905104(HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907)));
    }
    
    if (!(contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym100_3019918907) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019918910 = nimCopy(result_3019918910, HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907), NTI3087008908);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym100_3019918906.enableLogging) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019907603(ctxHEX60gensym100_3019918906, keyHEX60gensym100_3019918997);
      if (false) {
      markRed_3036679302(ctxHEX60gensym100_3019918906.depGraph, keyHEX60gensym100_3019918997, []);
      }
      
      if ((ctxHEX60gensym100_3019918906.enableLogging && contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905104(HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907)));
      }
      
      if (!(contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym100_3019918907) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019918910 = nimCopy(result_3019918910, HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907), NTI3087008908);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym100_3019918998 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,52,50,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym100_3019918906.enableLogging && contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905104(HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907)));
    }
    
    if (!(contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    force_3019907603(ctxHEX60gensym100_3019918906, keyHEX60gensym100_3019918997);
    }
    
    if (!(contains_3019918770(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym100_3019918907) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019918910 = nimCopy(result_3019918910, HEX5BHEX5D_3019918864(ctxHEX60gensym100_3019918906.queryCacheSymbol, inputHEX60gensym100_3019918907), NTI3087008908);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym100_3019918906.enableLogging) {
    Temporary6 = 1;
    }
    else {
    Temporary6 = 0;
    }
    
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], Temporary6);
    }
    } finally {
    if (((ctxHEX60gensym100_3019918906.dependencyStack).length == 0)) {
    clear_3019913072(ctxHEX60gensym100_3019918906.recursiveQueries);
    }
    
    }
    } finally {
    HEX2BHEX3D_855640304(ctxHEX60gensym100_3019918906.statsSymbol, "time", elapsed_2080374866(timerHEX60gensym100_3019918911));
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym100_3019918906.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019918910;

}

function isNone_3087009380(self_3087009382) {
  var result_3087009383 = false;

    result_3087009383 = (self_3087009382.val == null);

  return result_3087009383;

}

function get_3087009372(self_3087009374) {
  var result_3087009375 = null;

    if (isNone_3087009380(self_3087009374)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087009375 = self_3087009374["val"];

  return result_3087009375;

}

function formatValue_3019947039(result_3019947041, result_3019947041_Idx, value_3019947042, specifier_3019947043) {
    formatValue_721420459(result_3019947041, result_3019947041_Idx, HEX24_3087008911(value_3019947042), specifier_3019947043);

  
}

function mustRehash_3019939561(t_3019939563) {
  var result_3019939564 = false;

    if (!((t_3019939563.counter < (t_3019939563.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019939564 = ((mulInt((t_3019939563.data).length, 2) < mulInt(t_3019939563.counter, 3)) || (subInt((t_3019939563.data).length, t_3019939563.counter) < 4));

  return result_3019939564;

}

function rawInsert_3019940254(t_3019940258, data_3019940259, data_3019940259_Idx, key_3019940260, val_3019940261, hc_3019940262, h_3019940263) {
    data_3019940259[data_3019940259_Idx][chckIndx(h_3019940263, 0, (data_3019940259[data_3019940259_Idx]).length - 1)].Field1 = nimCopy(data_3019940259[data_3019940259_Idx][chckIndx(h_3019940263, 0, (data_3019940259[data_3019940259_Idx]).length - 1)].Field1, key_3019940260, NTI3036676202);
    data_3019940259[data_3019940259_Idx][chckIndx(h_3019940263, 0, (data_3019940259[data_3019940259_Idx]).length - 1)].Field2 = nimCopy(null, val_3019940261, NTI3019898985);
    data_3019940259[data_3019940259_Idx][chckIndx(h_3019940263, 0, (data_3019940259[data_3019940259_Idx]).length - 1)].Field0 = hc_3019940262;

  
}

function enlarge_3019939818(t_3019939821) {
    var n_3019939824 = [];
    n_3019939824 = new Array(chckRange(mulInt((t_3019939821.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019939821.data).length, 2), 0, 2147483647) ; ++i) { n_3019939824[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3019939821.data; t_3019939821.data = n_3019939824; n_3019939824 = Temporary1;    Label2: {
      var i_3019939922 = 0;
      var colontmp__2969567437 = 0;
      colontmp__2969567437 = (n_3019939824).length - 1;
      var res_2969567438 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567438 <= colontmp__2969567437)) break Label4;
            i_3019939922 = res_2969567438;
            var eh_3019940003 = n_3019939824[chckIndx(i_3019939922, 0, (n_3019939824).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019940003)) {
            var j_3019940007 = (eh_3019940003 & (t_3019939821.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019939821.data[chckIndx(j_3019940007, 0, (t_3019939821.data).length - 1)].Field0)) break Label6;
                  j_3019940007 = nextTry_1308622883(j_3019940007, (t_3019939821.data).length - 1);
                }
            };
            rawInsert_3019940254(t_3019939821, t_3019939821, "data", n_3019939824[chckIndx(i_3019939922, 0, (n_3019939824).length - 1)].Field1, n_3019939824[chckIndx(i_3019939922, 0, (n_3019939824).length - 1)].Field2, eh_3019940003, j_3019940007);
            }
            
            res_2969567438 = addInt(res_2969567438, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019940513(t_3019940516, key_3019940517, hc_3019940518) {
  var result_3019940519 = 0;

  BeforeRet: {
    if (((t_3019940516.data).length == 0)) {
    result_3019940519 = -1;
    break BeforeRet;
    }
    
    var h_3019940604 = (hc_3019940518 & (t_3019940516.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019940516.data[chckIndx(h_3019940604, 0, (t_3019940516.data).length - 1)].Field0)) break Label2;
          if (((t_3019940516.data[chckIndx(h_3019940604, 0, (t_3019940516.data).length - 1)].Field0 == hc_3019940518) && HEX3DHEX3D_3019908237(t_3019940516.data[chckIndx(h_3019940604, 0, (t_3019940516.data).length - 1)].Field1, key_3019940517))) {
          result_3019940519 = h_3019940604;
          break BeforeRet;
          }
          
          h_3019940604 = nextTry_1308622883(h_3019940604, (t_3019940516.data).length - 1);
        }
    };
    result_3019940519 = subInt(-1, h_3019940604);
  };

  return result_3019940519;

}

function HEX5BHEX5DHEX3D_3019939293(t_3019939296, key_3019939297, val_3019939298) {
    if (((t_3019939296.data).length == 0)) {
    var correctSizeHEX60gensym334_3019939381 = slotsNeeded_1308622891(32);
    t_3019939296.counter = 0;
    t_3019939296.data = new Array(chckRange(correctSizeHEX60gensym334_3019939381, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym334_3019939381, 0, 2147483647) ; ++i) { t_3019939296.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3019939386 = [0];
    var index_3019939393 = rawGet_3019936950(t_3019939296, key_3019939297, hc_3019939386, 0);
    if ((0 <= index_3019939393)) {
    t_3019939296.data[chckIndx(index_3019939393, 0, (t_3019939296.data).length - 1)].Field2 = nimCopy(null, val_3019939298, NTI3019898985);
    }
    else {
      if (((t_3019939296.data).length == 0)) {
      var correctSizeHEX60gensym337_3019939556 = slotsNeeded_1308622891(32);
      t_3019939296.counter = 0;
      t_3019939296.data = new Array(chckRange(correctSizeHEX60gensym337_3019939556, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym337_3019939556, 0, 2147483647) ; ++i) { t_3019939296.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3019939561(t_3019939296)) {
      enlarge_3019939818(t_3019939296);
      index_3019939393 = rawGetKnownHC_3019940513(t_3019939296, key_3019939297, hc_3019939386[0]);
      }
      
      index_3019939393 = subInt(-1, index_3019939393);
      rawInsert_3019940254(t_3019939296, t_3019939296, "data", key_3019939297, val_3019939298, hc_3019939386[0], index_3019939393);
      t_3019939296.counter = addInt(t_3019939296.counter, 1);
    }
    

  
}

function hasKey_3019940962(t_3019940965, key_3019940966) {
  var result_3019940967 = false;

    var hc_3019940968 = [0];
    result_3019940967 = (0 <= rawGet_3019937605(t_3019940965, key_3019940966, hc_3019940968, 0));

  return result_3019940967;

}

function contains_3019940956(t_3019940959, key_3019940960) {
  var result_3019940961 = false;

  BeforeRet: {
    result_3019940961 = hasKey_3019940962(t_3019940959, key_3019940960);
    break BeforeRet;
  };

  return result_3019940961;

}

function mustRehash_3019941306(t_3019941308) {
  var result_3019941309 = false;

    if (!((t_3019941308.counter < (t_3019941308.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019941309 = ((mulInt((t_3019941308.data).length, 2) < mulInt(t_3019941308.counter, 3)) || (subInt((t_3019941308.data).length, t_3019941308.counter) < 4));

  return result_3019941309;

}

function rawInsert_3019941999(t_3019942003, data_3019942004, data_3019942004_Idx, key_3019942005, val_3019942006, hc_3019942007, h_3019942008) {
    data_3019942004[data_3019942004_Idx][chckIndx(h_3019942008, 0, (data_3019942004[data_3019942004_Idx]).length - 1)].Field1 = nimCopy(data_3019942004[data_3019942004_Idx][chckIndx(h_3019942008, 0, (data_3019942004[data_3019942004_Idx]).length - 1)].Field1, key_3019942005, NTI2046820355);
    data_3019942004[data_3019942004_Idx][chckIndx(h_3019942008, 0, (data_3019942004[data_3019942004_Idx]).length - 1)].Field2 = nimCopy(data_3019942004[data_3019942004_Idx][chckIndx(h_3019942008, 0, (data_3019942004[data_3019942004_Idx]).length - 1)].Field2, val_3019942006, NTI3019898884);
    data_3019942004[data_3019942004_Idx][chckIndx(h_3019942008, 0, (data_3019942004[data_3019942004_Idx]).length - 1)].Field0 = hc_3019942007;

  
}

function enlarge_3019941563(t_3019941566) {
    var n_3019941569 = [];
    n_3019941569 = new Array(chckRange(mulInt((t_3019941566.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019941566.data).length, 2), 0, 2147483647) ; ++i) { n_3019941569[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    var Temporary1 = t_3019941566.data; t_3019941566.data = n_3019941569; n_3019941569 = Temporary1;    Label2: {
      var i_3019941667 = 0;
      var colontmp__2969567443 = 0;
      colontmp__2969567443 = (n_3019941569).length - 1;
      var res_2969567444 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567444 <= colontmp__2969567443)) break Label4;
            i_3019941667 = res_2969567444;
            var eh_3019941748 = n_3019941569[chckIndx(i_3019941667, 0, (n_3019941569).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019941748)) {
            var j_3019941752 = (eh_3019941748 & (t_3019941566.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019941566.data[chckIndx(j_3019941752, 0, (t_3019941566.data).length - 1)].Field0)) break Label6;
                  j_3019941752 = nextTry_1308622883(j_3019941752, (t_3019941566.data).length - 1);
                }
            };
            rawInsert_3019941999(t_3019941566, t_3019941566, "data", n_3019941569[chckIndx(i_3019941667, 0, (n_3019941569).length - 1)].Field1, n_3019941569[chckIndx(i_3019941667, 0, (n_3019941569).length - 1)].Field2, eh_3019941748, j_3019941752);
            }
            
            res_2969567444 = addInt(res_2969567444, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019942258(t_3019942261, key_3019942262, hc_3019942263) {
  var result_3019942264 = 0;

  BeforeRet: {
    if (((t_3019942261.data).length == 0)) {
    result_3019942264 = -1;
    break BeforeRet;
    }
    
    var h_3019942349 = (hc_3019942263 & (t_3019942261.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019942261.data[chckIndx(h_3019942349, 0, (t_3019942261.data).length - 1)].Field0)) break Label2;
          if (((t_3019942261.data[chckIndx(h_3019942349, 0, (t_3019942261.data).length - 1)].Field0 == hc_3019942263) && HEX3DHEX3D_2046820626(t_3019942261.data[chckIndx(h_3019942349, 0, (t_3019942261.data).length - 1)].Field1, key_3019942262))) {
          result_3019942264 = h_3019942349;
          break BeforeRet;
          }
          
          h_3019942349 = nextTry_1308622883(h_3019942349, (t_3019942261.data).length - 1);
        }
    };
    result_3019942264 = subInt(-1, h_3019942349);
  };

  return result_3019942264;

}

function HEX5BHEX5DHEX3D_3019941038(t_3019941041, key_3019941042, val_3019941043) {
    if (((t_3019941041.data).length == 0)) {
    var correctSizeHEX60gensym346_3019941126 = slotsNeeded_1308622891(32);
    t_3019941041.counter = 0;
    t_3019941041.data = new Array(chckRange(correctSizeHEX60gensym346_3019941126, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym346_3019941126, 0, 2147483647) ; ++i) { t_3019941041.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    }
    
    var hc_3019941131 = [0];
    var index_3019941138 = rawGet_3019937605(t_3019941041, key_3019941042, hc_3019941131, 0);
    if ((0 <= index_3019941138)) {
    t_3019941041.data[chckIndx(index_3019941138, 0, (t_3019941041.data).length - 1)].Field2 = nimCopy(t_3019941041.data[chckIndx(index_3019941138, 0, (t_3019941041.data).length - 1)].Field2, val_3019941043, NTI3019898884);
    }
    else {
      if (((t_3019941041.data).length == 0)) {
      var correctSizeHEX60gensym349_3019941301 = slotsNeeded_1308622891(32);
      t_3019941041.counter = 0;
      t_3019941041.data = new Array(chckRange(correctSizeHEX60gensym349_3019941301, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym349_3019941301, 0, 2147483647) ; ++i) { t_3019941041.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_3019941306(t_3019941041)) {
      enlarge_3019941563(t_3019941041);
      index_3019941138 = rawGetKnownHC_3019942258(t_3019941041, key_3019941042, hc_3019941131[0]);
      }
      
      index_3019941138 = subInt(-1, index_3019941138);
      rawInsert_3019941999(t_3019941041, t_3019941041, "data", key_3019941042, val_3019941043, hc_3019941131[0], index_3019941138);
      t_3019941041.counter = addInt(t_3019941041.counter, 1);
    }
    

  
}

function hasKey_3019942778(t_3019942781, key_3019942782) {
  var result_3019942783 = false;

    var hc_3019942784 = [0];
    result_3019942783 = (0 <= rawGet_3019938112(t_3019942781, key_3019942782, hc_3019942784, 0));

  return result_3019942783;

}

function contains_3019942772(t_3019942775, key_3019942776) {
  var result_3019942777 = false;

  BeforeRet: {
    result_3019942777 = hasKey_3019942778(t_3019942775, key_3019942776);
    break BeforeRet;
  };

  return result_3019942777;

}

function mustRehash_3019943211(t_3019943213) {
  var result_3019943214 = false;

    if (!((t_3019943213.counter < (t_3019943213.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019943214 = ((mulInt((t_3019943213.data).length, 2) < mulInt(t_3019943213.counter, 3)) || (subInt((t_3019943213.data).length, t_3019943213.counter) < 4));

  return result_3019943214;

}

function rawInsert_3019943904(t_3019943908, data_3019943909, data_3019943909_Idx, key_3019943910, val_3019943911, hc_3019943912, h_3019943913) {
    data_3019943909[data_3019943909_Idx][chckIndx(h_3019943913, 0, (data_3019943909[data_3019943909_Idx]).length - 1)].Field1 = nimCopy(data_3019943909[data_3019943909_Idx][chckIndx(h_3019943913, 0, (data_3019943909[data_3019943909_Idx]).length - 1)].Field1, key_3019943910, NTI3036676202);
    data_3019943909[data_3019943909_Idx][chckIndx(h_3019943913, 0, (data_3019943909[data_3019943909_Idx]).length - 1)].Field2 = nimCopy(null, val_3019943911, NTI3019898888);
    data_3019943909[data_3019943909_Idx][chckIndx(h_3019943913, 0, (data_3019943909[data_3019943909_Idx]).length - 1)].Field0 = hc_3019943912;

  
}

function enlarge_3019943468(t_3019943471) {
    var n_3019943474 = [];
    n_3019943474 = new Array(chckRange(mulInt((t_3019943471.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019943471.data).length, 2), 0, 2147483647) ; ++i) { n_3019943474[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3019943471.data; t_3019943471.data = n_3019943474; n_3019943474 = Temporary1;    Label2: {
      var i_3019943572 = 0;
      var colontmp__2969567449 = 0;
      colontmp__2969567449 = (n_3019943474).length - 1;
      var res_2969567450 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567450 <= colontmp__2969567449)) break Label4;
            i_3019943572 = res_2969567450;
            var eh_3019943653 = n_3019943474[chckIndx(i_3019943572, 0, (n_3019943474).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019943653)) {
            var j_3019943657 = (eh_3019943653 & (t_3019943471.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019943471.data[chckIndx(j_3019943657, 0, (t_3019943471.data).length - 1)].Field0)) break Label6;
                  j_3019943657 = nextTry_1308622883(j_3019943657, (t_3019943471.data).length - 1);
                }
            };
            rawInsert_3019943904(t_3019943471, t_3019943471, "data", n_3019943474[chckIndx(i_3019943572, 0, (n_3019943474).length - 1)].Field1, n_3019943474[chckIndx(i_3019943572, 0, (n_3019943474).length - 1)].Field2, eh_3019943653, j_3019943657);
            }
            
            res_2969567450 = addInt(res_2969567450, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019944154(t_3019944157, key_3019944158, hc_3019944159) {
  var result_3019944160 = 0;

  BeforeRet: {
    if (((t_3019944157.data).length == 0)) {
    result_3019944160 = -1;
    break BeforeRet;
    }
    
    var h_3019944245 = (hc_3019944159 & (t_3019944157.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019944157.data[chckIndx(h_3019944245, 0, (t_3019944157.data).length - 1)].Field0)) break Label2;
          if (((t_3019944157.data[chckIndx(h_3019944245, 0, (t_3019944157.data).length - 1)].Field0 == hc_3019944159) && HEX3DHEX3D_3019908237(t_3019944157.data[chckIndx(h_3019944245, 0, (t_3019944157.data).length - 1)].Field1, key_3019944158))) {
          result_3019944160 = h_3019944245;
          break BeforeRet;
          }
          
          h_3019944245 = nextTry_1308622883(h_3019944245, (t_3019944157.data).length - 1);
        }
    };
    result_3019944160 = subInt(-1, h_3019944245);
  };

  return result_3019944160;

}

function HEX5BHEX5DHEX3D_3019942943(t_3019942946, key_3019942947, val_3019942948) {
    if (((t_3019942946.data).length == 0)) {
    var correctSizeHEX60gensym358_3019943031 = slotsNeeded_1308622891(32);
    t_3019942946.counter = 0;
    t_3019942946.data = new Array(chckRange(correctSizeHEX60gensym358_3019943031, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym358_3019943031, 0, 2147483647) ; ++i) { t_3019942946.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3019943036 = [0];
    var index_3019943043 = rawGet_3019938112(t_3019942946, key_3019942947, hc_3019943036, 0);
    if ((0 <= index_3019943043)) {
    t_3019942946.data[chckIndx(index_3019943043, 0, (t_3019942946.data).length - 1)].Field2 = nimCopy(null, val_3019942948, NTI3019898888);
    }
    else {
      if (((t_3019942946.data).length == 0)) {
      var correctSizeHEX60gensym361_3019943206 = slotsNeeded_1308622891(32);
      t_3019942946.counter = 0;
      t_3019942946.data = new Array(chckRange(correctSizeHEX60gensym361_3019943206, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym361_3019943206, 0, 2147483647) ; ++i) { t_3019942946.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3019943211(t_3019942946)) {
      enlarge_3019943468(t_3019942946);
      index_3019943043 = rawGetKnownHC_3019944154(t_3019942946, key_3019942947, hc_3019943036[0]);
      }
      
      index_3019943043 = subInt(-1, index_3019943043);
      rawInsert_3019943904(t_3019942946, t_3019942946, "data", key_3019942947, val_3019942948, hc_3019943036[0], index_3019943043);
      t_3019942946.counter = addInt(t_3019942946.counter, 1);
    }
    

  
}

function HEX5BHEX5D_3019944676(t_3019944679, key_3019944680) {
  var result_3019944681 = null;
  var result_3019944681_Idx = 0;

    var hcHEX60gensym22_3019944682 = [0];
    var indexHEX60gensym22_3019944689 = rawGet_3019938112(t_3019944679, key_3019944680, hcHEX60gensym22_3019944682, 0);
    if ((0 <= indexHEX60gensym22_3019944689)) {
    result_3019944681 = t_3019944679.data[chckIndx(indexHEX60gensym22_3019944689, 0, (t_3019944679.data).length - 1)]; result_3019944681_Idx = "Field2";
    }
    else {
    raiseKeyError_3019937476(key_3019944680);
    }
    

  return [result_3019944681, result_3019944681_Idx];

}

function del_3019944849(t_3019944852, key_3019944853) {
    var hc_3019944854 = [0];
    var i_3019944861 = rawGet_3019936950(t_3019944852, key_3019944853, hc_3019944854, 0);
    var mskHEX60gensym36_3019944865 = (t_3019944852.data).length - 1;
    if ((0 <= i_3019944861)) {
    t_3019944852.counter = subInt(t_3019944852.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019944872 = i_3019944861;
            var rHEX60gensym36_3019944873 = jHEX60gensym36_3019944872;
            t_3019944852.data[chckIndx(i_3019944861, 0, (t_3019944852.data).length - 1)].Field0 = 0;
            t_3019944852.data[chckIndx(i_3019944861, 0, (t_3019944852.data).length - 1)].Field1 = nimCopy(t_3019944852.data[chckIndx(i_3019944861, 0, (t_3019944852.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676202);
            t_3019944852.data[chckIndx(i_3019944861, 0, (t_3019944852.data).length - 1)].Field2 = nimCopy(null, [], NTI3019898985);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019944861 = (addInt(i_3019944861, 1) & mskHEX60gensym36_3019944865);
                  if (isEmpty_1308622877(t_3019944852.data[chckIndx(i_3019944861, 0, (t_3019944852.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019944873 = (t_3019944852.data[chckIndx(i_3019944861, 0, (t_3019944852.data).length - 1)].Field0 & mskHEX60gensym36_3019944865);
                  if (!(((((rHEX60gensym36_3019944873 <= i_3019944861) && (jHEX60gensym36_3019944872 < rHEX60gensym36_3019944873)) || ((jHEX60gensym36_3019944872 < rHEX60gensym36_3019944873) && (i_3019944861 < jHEX60gensym36_3019944872))) || ((i_3019944861 < jHEX60gensym36_3019944872) && (rHEX60gensym36_3019944873 <= i_3019944861))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019944852.data[chckIndx(jHEX60gensym36_3019944872, 0, (t_3019944852.data).length - 1)] = nimCopy(t_3019944852.data[chckIndx(jHEX60gensym36_3019944872, 0, (t_3019944852.data).length - 1)], t_3019944852.data[chckIndx(i_3019944861, 0, (t_3019944852.data).length - 1)], NTI3019898997);
          }
      };
    };
    }
    

  
}

function computeTypeImpl_3019899431(ctx_3019899432, node_3019899433) {
      var Temporary4;
      var Temporary16;
      var Temporary19;
      var Temporary20;
      var Temporary21;
        var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
      var Temporary29;
                  var Temporary34;
                    var Temporary35;
                  var Temporary36;
                  var Temporary37;
                var Temporary39;
                var Temporary40;
      var Temporary41;
      var Temporary44;
      var Temporary48;
      var Temporary50;
                var Temporary60;
        var Temporary61;
        var Temporary64;
        var Temporary66;
            var Temporary71;

  var result_3019936847 = null;

  BeforeRet: {
    var logQueryHEX60gensym322_3019936849 = (ctx_3019899432.enableLogging || ctx_3019899432.enableQueryLogging);
    if (logQueryHEX60gensym322_3019936849) {
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym322_3019936849) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899433) || []));
    }
    
    try {
    var key_3019936860 = nimCopy(null, getTypeKey_3019912757(ctx_3019899432, getItem_3019905914(node_3019899433)), NTI3036676202);
    if (contains_3019936937(ctx_3019899432.diagnosticsPerQuery, key_3019936860)) {
    Label3: {
      var id_3019937517 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2969567323 = [];
      colontmp__2969567323 = (Temporary4 = HEX5BHEX5D_3019937382(ctx_3019899432.diagnosticsPerQuery, key_3019936860), Temporary4)[0][Temporary4[1]];
      var i_2969567325 = 0;
      var L_2969567326 = (colontmp__2969567323).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567325 < L_2969567326)) break Label6;
            id_3019937517 = colontmp__2969567323[chckIndx(i_2969567325, 0, (colontmp__2969567323).length - 1)];
            del_3019938106(HEX5BHEX5D_3019937598(ctx_3019899432.diagnosticsPerNode, id_3019937517).queries, key_3019936860);
            i_2969567325 = addInt(i_2969567325, 1);
            if (!(((colontmp__2969567323).length == L_2969567326))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnostics_3019939220 = [];
    var ids_3019939225 = [];
    try {
    Label8: {
      var expr_3019945598 = node_3019899433;
      var pos_3019945599 = 0;
      var _ = pos_3019945599;
      if ((expr_3019945598.kind == 0)) {
      result_3019936847 = voidType_3087008163();
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 2)) {
++excHandler;
      try {
      var _ = nsuParseInt(node_3019899433.text);
      result_3019936847 = intType_3087008165();
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      }
      else {
      if ((expr_3019945598.kind == 3)) {
      result_3019936847 = stringType_3087008167();
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 12)) {
      result_3019936847 = voidType_3087008163();
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 11)) {
      if ((len_3003121752(node_3019899433) < 3)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var params_3019945622 = HEX5BHEX5D_3003121748(node_3019899433, 0);
      recordDependency_3019905701(ctx_3019899432, getItem_3019905914(params_3019945622), -1);
      var returnTypeNode_3019945623 = HEX5BHEX5D_3003121748(node_3019899433, 1);
      var paramTypes_3019945628 = [];
      var ok_3019945629 = true;
      Label10: {
        var param_3019945633 = null;
        var i_2969567336 = 0;
        var L_2969567337 = (params_3019945622.children).length;
        Label11: {
            Label12: while (true) {
            if (!(i_2969567336 < L_2969567337)) break Label12;
              param_3019945633 = params_3019945622.children[chckIndx(i_2969567336, 0, (params_3019945622.children).length - 1)];
              Label13: {
                var paramType_3019945634 = computeType_3019912985(ctx_3019899432, param_3019945633, true);
                if ((paramType_3019945634.kind == 0)) {
                ok_3019945629 = false;
                break Label13;
                }
                
                paramTypes_3019945628.push(paramType_3019945634);;
              };
              i_2969567336 = addInt(i_2969567336, 1);
              if (!(((params_3019945622.children).length == L_2969567337))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var returnTypeType_3019945643 = computeType_3019912985(ctx_3019899432, returnTypeNode_3019945623, true);
      if ((returnTypeType_3019945643.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if (!((returnTypeType_3019945643.kind == 6))) {
      var Temporary14 = nimCopy(null, returnTypeNode_3019945623.id, NTI2046820355);
      ids_3019939225.push(Temporary14);;
      var fmtRes_3019945660 = [mnewString(0)];
      fmtRes_3019945660[0].push.apply(fmtRes_3019945660[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019945661(fmtRes_3019945660, 0, returnTypeType_3019945643, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945660[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var returnTypeValue_3019945670 = computeValue_3019916118(ctx_3019899432, returnTypeNode_3019945623, true);
      if ((returnTypeValue_3019945670.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if (!((returnTypeValue_3019945670.kind == 6))) {
      var Temporary15 = nimCopy(null, returnTypeNode_3019945623.id, NTI2046820355);
      ids_3019939225.push(Temporary15);;
      var fmtRes_3019945687 = [mnewString(0)];
      fmtRes_3019945687[0].push.apply(fmtRes_3019945687[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3137340831(fmtRes_3019945687, 0, returnTypeValue_3019945670, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945687[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var Temporary16 = returnTypeValue_3019945670;
      if (ConstSet69[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
      var returnType_3019945697 = Temporary16.typ;
      result_3019936847 = newFunctionType_3087008169(paramTypes_3019945628, returnType_3019945697);
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 8)) {
      if ((len_3003121752(node_3019899433) == 0)) {
      var Temporary17 = nimCopy(null, node_3019899433.id, NTI2046820355);
      ids_3019939225.push(Temporary17);;
      var fmtRes_3019945710 = mnewString(0);
      fmtRes_3019945710.push.apply(fmtRes_3019945710, [69,109,112,116,121,32,99,97,108,108,32,110,111,100,101]);;
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945710, NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var function_3019945715 = HEX5BHEX5D_3003121748(node_3019899433, 0);
      var functionType_3019945716 = computeType_3019912985(ctx_3019899432, function_3019945715, true);
      if ((functionType_3019945716.kind == 0)) {
      result_3019936847 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      if (!((functionType_3019945716.kind == 4))) {
      var Temporary18 = nimCopy(null, function_3019945715.id, NTI2046820355);
      ids_3019939225.push(Temporary18);;
      var fmtRes_3019945733 = [mnewString(0)];
      fmtRes_3019945733[0].push.apply(fmtRes_3019945733[0], [84,114,121,105,110,103,32,116,111,32,99,97,108,108,32,110,111,110,45,102,117,110,99,116,105,111,110,32,116,121,112,101,32]);;
      formatValue_3019945661(fmtRes_3019945733, 0, functionType_3019945716, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945733[0], NTI33554449)});;
      result_3019936847 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var numArgs_3019945743 = subInt(len_3003121752(node_3019899433), 1);
      var Temporary21 = functionType_3019945716;
      if (ConstSet70[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI3087007747)); }
      if (!(0 < (Temporary21.paramTypes).length)) Temporary20 = false; else {        var Temporary22 = functionType_3019945716;
        if (ConstSet77[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007747)); }
        var Temporary23 = functionType_3019945716;
        if (ConstSet78[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI3087007747)); }
        Temporary20 = HEX3DHEX3D_3087008309((Temporary24 = Temporary22.paramTypes, Temporary24)[chckIndx((Temporary23.paramTypes).length - 1, 0, (Temporary24).length - 1)], anyType_3087008184(true));      }      if (!Temporary20) Temporary19 = false; else {        var Temporary25 = functionType_3019945716;
        if (ConstSet79[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI3087007747)); }
        Temporary19 = (subInt((Temporary25.paramTypes).length, 1) <= numArgs_3019945743);      }      var isValidOpenAnyCall_3019945753 = Temporary19;
        var Temporary27 = functionType_3019945716;
        if (ConstSet80[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007747)); }
        if (!!((numArgs_3019945743 == (Temporary27.paramTypes).length))) Temporary26 = false; else {          Temporary26 = !(isValidOpenAnyCall_3019945753);        }      if (Temporary26) {
      var Temporary28 = nimCopy(null, node_3019899433.id, NTI2046820355);
      ids_3019939225.push(Temporary28);;
      var fmtRes_3019945765 = [mnewString(0)];
      fmtRes_3019945765[0].push.apply(fmtRes_3019945765[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,69,120,112,101,99,116,101,100,32]);;
      var Temporary29 = functionType_3019945716;
      if (ConstSet81[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI3087007747)); }
      formatValue_2701131945(fmtRes_3019945765, 0, (Temporary29.paramTypes).length, []);
      fmtRes_3019945765[0].push.apply(fmtRes_3019945765[0], [32,103,111,116,32]);;
      formatValue_2701131945(fmtRes_3019945765, 0, numArgs_3019945743, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945765[0], NTI33554449)});;
      result_3019936847 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var allArgsOk_3019945783 = true;
      Label30: {
        var i_3019945788 = 0;
        var res_2969567341 = 1;
        Label31: {
            Label32: while (true) {
            if (!(res_2969567341 <= numArgs_3019945743)) break Label32;
              i_3019945788 = res_2969567341;
              Label33: {
                var argType_3019945789 = computeType_3019912985(ctx_3019899432, HEX5BHEX5D_3003121748(node_3019899433, i_3019945788), true);
                if ((argType_3019945789.kind == 0)) {
                allArgsOk_3019945783 = false;
                break Label33;
                }
                
                  if (!isValidOpenAnyCall_3019945753) Temporary34 = false; else {                    var Temporary35 = functionType_3019945716;
                    if (ConstSet82[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI3087007747)); }
                    Temporary34 = ((Temporary35.paramTypes).length - 1 < i_3019945788);                  }                if (Temporary34) {
                break Label33;
                }
                
                  var Temporary36 = functionType_3019945716;
                  if (ConstSet83[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI3087007747)); }
                if (!(HEX3DHEX3D_3087008309(argType_3019945789, (Temporary37 = Temporary36.paramTypes, Temporary37)[chckIndx(subInt(i_3019945788, 1), 0, (Temporary37).length - 1)]))) {
                var Temporary38 = nimCopy(null, HEX5BHEX5D_3003121748(node_3019899433, i_3019945788).id, NTI2046820355);
                ids_3019939225.push(Temporary38);;
                var fmtRes_3019945805 = [mnewString(0)];
                fmtRes_3019945805[0].push.apply(fmtRes_3019945805[0], [65,114,103,117,109,101,110,116,32]);;
                formatValue_2701131945(fmtRes_3019945805, 0, i_3019945788, []);
                fmtRes_3019945805[0].push.apply(fmtRes_3019945805[0], [32,104,97,115,32,116,104,101,32,119,114,111,110,103,32,116,121,112,101,46,32,69,120,112,101,99,116,101,100,32]);;
                var Temporary39 = functionType_3019945716;
                if (ConstSet84[Temporary39.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary39.kind, NTI3087007747)); }
                formatValue_3019945661(fmtRes_3019945805, 0, (Temporary40 = Temporary39.paramTypes, Temporary40)[chckIndx(subInt(i_3019945788, 1), 0, (Temporary40).length - 1)], []);
                fmtRes_3019945805[0].push.apply(fmtRes_3019945805[0], [32,103,111,116,32]);;
                formatValue_3019945661(fmtRes_3019945805, 0, argType_3019945789, []);
                diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945805[0], NTI33554449)});;
                allArgsOk_3019945783 = false;
                }
                
              };
              res_2969567341 = addInt(res_2969567341, 1);
            }
        };
      };
      if (!(allArgsOk_3019945783)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var Temporary41 = functionType_3019945716;
      if (ConstSet85[Temporary41.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary41.kind, NTI3087007747)); }
      result_3019936847 = Temporary41.returnType;
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 4)) {
      if ((len_3003121752(node_3019899433) == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      result_3019936847 = computeType_3019912985(ctx_3019899432, HEX5BHEX5D_3003121748(node_3019899433, 0), true);
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 5)) {
      if ((len_3003121752(node_3019899433) < 1)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var typeNode_3019945833 = HEX5BHEX5D_3003121748(node_3019899433, 0);
      var typ_3019945834 = voidType_3087008163();
      if (!((typeNode_3019945833.kind == 0))) {
      var typeNodeType_3019945839 = computeType_3019912985(ctx_3019899432, typeNode_3019945833, true);
      if ((typeNodeType_3019945839.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3019945839.kind == 6))) {
      var Temporary42 = nimCopy(null, typeNode_3019945833.id, NTI2046820355);
      ids_3019939225.push(Temporary42);;
      var fmtRes_3019945856 = [mnewString(0)];
      fmtRes_3019945856[0].push.apply(fmtRes_3019945856[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019945661(fmtRes_3019945856, 0, typeNodeType_3019945839, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945856[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var typeNodeValue_3019945866 = computeValue_3019916118(ctx_3019899432, typeNode_3019945833, true);
      if ((typeNodeValue_3019945866.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3019945866.kind == 6))) {
      var Temporary43 = nimCopy(null, typeNode_3019945833.id, NTI2046820355);
      ids_3019939225.push(Temporary43);;
      var fmtRes_3019945883 = [mnewString(0)];
      fmtRes_3019945883[0].push.apply(fmtRes_3019945883[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3137340831(fmtRes_3019945883, 0, typeNodeValue_3019945866, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945883[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var Temporary44 = typeNodeValue_3019945866;
      if (ConstSet86[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI3087007750)); }
      typ_3019945834 = Temporary44.typ;
      }
      
      if ((2 <= len_3003121752(node_3019899433))) {
      var valueNode_3019945893 = HEX5BHEX5D_3003121748(node_3019899433, 1);
      if (!((valueNode_3019945893.kind == 0))) {
      var valueNodeType_3019945898 = computeType_3019912985(ctx_3019899432, valueNode_3019945893, true);
      if ((valueNodeType_3019945898.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if ((typ_3019945834.kind == 1)) {
      typ_3019945834 = valueNodeType_3019945898;
      }
      
      if (!(HEX3DHEX3D_3087008309(valueNodeType_3019945898, typ_3019945834))) {
      var Temporary45 = nimCopy(null, valueNode_3019945893.id, NTI2046820355);
      ids_3019939225.push(Temporary45);;
      var fmtRes_3019945915 = [mnewString(0)];
      fmtRes_3019945915[0].push.apply(fmtRes_3019945915[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3019945661(fmtRes_3019945915, 0, typ_3019945834, []);
      fmtRes_3019945915[0].push.apply(fmtRes_3019945915[0], [44,32,103,111,116,32]);;
      formatValue_3019945661(fmtRes_3019945915, 0, valueNodeType_3019945898, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945915[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3019936847 = typ_3019945834;
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 6)) {
      if ((len_3003121752(node_3019899433) < 1)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var typeNode_3019945934 = HEX5BHEX5D_3003121748(node_3019899433, 0);
      var typ_3019945935 = voidType_3087008163();
      if (!((typeNode_3019945934.kind == 0))) {
      var typeNodeType_3019945940 = computeType_3019912985(ctx_3019899432, typeNode_3019945934, true);
      if ((typeNodeType_3019945940.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3019945940.kind == 6))) {
      var Temporary46 = nimCopy(null, typeNode_3019945934.id, NTI2046820355);
      ids_3019939225.push(Temporary46);;
      var fmtRes_3019945957 = [mnewString(0)];
      fmtRes_3019945957[0].push.apply(fmtRes_3019945957[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019945661(fmtRes_3019945957, 0, typeNodeType_3019945940, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945957[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var typeNodeValue_3019945967 = computeValue_3019916118(ctx_3019899432, typeNode_3019945934, true);
      if ((typeNodeValue_3019945967.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3019945967.kind == 6))) {
      var Temporary47 = nimCopy(null, typeNode_3019945934.id, NTI2046820355);
      ids_3019939225.push(Temporary47);;
      var fmtRes_3019945984 = [mnewString(0)];
      fmtRes_3019945984[0].push.apply(fmtRes_3019945984[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3137340831(fmtRes_3019945984, 0, typeNodeValue_3019945967, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019945984[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var Temporary48 = typeNodeValue_3019945967;
      if (ConstSet87[Temporary48.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary48.kind, NTI3087007750)); }
      typ_3019945935 = Temporary48.typ;
      }
      
      if ((2 <= len_3003121752(node_3019899433))) {
      var valueNode_3019945994 = HEX5BHEX5D_3003121748(node_3019899433, 1);
      if (!((valueNode_3019945994.kind == 0))) {
      var valueNodeType_3019945999 = computeType_3019912985(ctx_3019899432, valueNode_3019945994, true);
      if ((valueNodeType_3019945999.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if ((typ_3019945935.kind == 1)) {
      typ_3019945935 = valueNodeType_3019945999;
      }
      
      if (!(HEX3DHEX3D_3087008309(valueNodeType_3019945999, typ_3019945935))) {
      var Temporary49 = nimCopy(null, valueNode_3019945994.id, NTI2046820355);
      ids_3019939225.push(Temporary49);;
      var fmtRes_3019946016 = [mnewString(0)];
      fmtRes_3019946016[0].push.apply(fmtRes_3019946016[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3019945661(fmtRes_3019946016, 0, typ_3019945935, []);
      fmtRes_3019946016[0].push.apply(fmtRes_3019946016[0], [44,32,103,111,116,32]);;
      formatValue_3019945661(fmtRes_3019946016, 0, valueNodeType_3019945999, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019946016[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3019936847 = typ_3019945935;
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 1)) {
      var id_3019946035 = nimCopy(null, node_3019899433.reff, NTI2046820355);
      var symbols_3019946036 = computeSymbols_3019922062(ctx_3019899432, node_3019899433, true);
      if (contains_3019946113(symbols_3019946036, id_3019946035)) {
      var symbol_3019946640 = (Temporary50 = HEX5BHEX5D_3019946368(symbols_3019946036, id_3019946035), Temporary50)[0][Temporary50[1]];
      result_3019936847 = computeSymbolType_3019925190(ctx_3019899432, symbol_3019946640, true);
      break BeforeRet;
      }
      
      var Temporary51 = nimCopy(null, node_3019899433.id, NTI2046820355);
      ids_3019939225.push(Temporary51);;
      var fmtRes_3019946649 = [mnewString(0)];
      fmtRes_3019946649[0].push.apply(fmtRes_3019946649[0], [85,110,107,110,111,119,110,32,115,121,109,98,111,108,32,39]);;
      formatValue_3036676340(fmtRes_3019946649, 0, id_3019946035, []);
      fmtRes_3019946649[0].push.apply(fmtRes_3019946649[0], [39]);;
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019946649[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 7)) {
      if ((len_3003121752(node_3019899433) == 0)) {
      result_3019936847 = voidType_3087008163();
      break BeforeRet;
      }
      
      var lastType_3019946663 = null;
      Label52: {
        var child_3019946667 = null;
        var i_2969567344 = 0;
        var L_2969567345 = (node_3019899433.children).length;
        Label53: {
            Label54: while (true) {
            if (!(i_2969567344 < L_2969567345)) break Label54;
              child_3019946667 = node_3019899433.children[chckIndx(i_2969567344, 0, (node_3019899433.children).length - 1)];
              lastType_3019946663 = computeType_3019912985(ctx_3019899432, child_3019946667, true);
              if ((lastType_3019946663.kind == 0)) {
              result_3019936847 = errorType_3087008127();
              break BeforeRet;
              }
              
              i_2969567344 = addInt(i_2969567344, 1);
              if (!(((node_3019899433.children).length == L_2969567345))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3019936847 = lastType_3019946663;
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 9)) {
      if ((len_3003121752(node_3019899433) < 2)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var ok_3019946676 = true;
      var commonType_3019946679 = [none_3019912966()];
      var index_3019946680 = 0;
      Label55: {
          Label56: while (true) {
          if (!(addInt(index_3019946680, 1) < len_3003121752(node_3019899433))) break Label56;
            Label57: {
              try {
              var condition_3019946685 = HEX5BHEX5D_3003121748(node_3019899433, index_3019946680);
              var trueCase_3019946686 = HEX5BHEX5D_3003121748(node_3019899433, addInt(index_3019946680, 1));
              var conditionType_3019946687 = computeType_3019912985(ctx_3019899432, condition_3019946685, true);
              if ((conditionType_3019946687.kind == 0)) {
              ok_3019946676 = false;
              }
              else {
              if (!((conditionType_3019946687.kind == 3))) {
              var Temporary59 = nimCopy(null, condition_3019946685.id, NTI2046820355);
              ids_3019939225.push(Temporary59);;
              var fmtRes_3019946704 = [mnewString(0)];
              fmtRes_3019946704[0].push.apply(fmtRes_3019946704[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
              formatValue_3019945661(fmtRes_3019946704, 0, conditionType_3019946687, []);
              diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019946704[0], NTI33554449)});;
              ok_3019946676 = false;
              }
              }
              var trueCaseType_3019946714 = computeType_3019912985(ctx_3019899432, trueCase_3019946686, true);
              if ((trueCaseType_3019946714.kind == 0)) {
              ok_3019946676 = false;
              break Label57;
              }
              
              if ((isNone_3019946723(commonType_3019946679[0]) || HEX3DHEX3D_3087008309(trueCaseType_3019946714, (Temporary60 = get_3019946766(commonType_3019946679[0]), Temporary60)[0][Temporary60[1]]))) {
              commonType_3019946679[0] = nimCopy(commonType_3019946679[0], some_3019912953(trueCaseType_3019946714), NTI3019907149);
              }
              else {
                commonType_3019946679[0] = nimCopy(commonType_3019946679[0], some_3019912953(voidType_3087008163()), NTI3019907149);
              }
              
              } finally {
              index_3019946680 = addInt(index_3019946680, 2);
              }
            };
          }
      };
      if (!((modInt(len_3003121752(node_3019899433), 2) == 0))) {
      var falseCaseType_3019946793 = computeType_3019912985(ctx_3019899432, last_3003121922(node_3019899433), true);
      if ((falseCaseType_3019946793.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if ((isNone_3019946723(commonType_3019946679[0]) || HEX3DHEX3D_3087008309(falseCaseType_3019946793, (Temporary61 = get_3019946766(commonType_3019946679[0]), Temporary61)[0][Temporary61[1]]))) {
      commonType_3019946679[0] = nimCopy(commonType_3019946679[0], some_3019912953(falseCaseType_3019946793), NTI3019907149);
      }
      else {
        commonType_3019946679[0] = nimCopy(commonType_3019946679[0], some_3019912953(voidType_3087008163()), NTI3019907149);
      }
      
      }
      
      if (!(ok_3019946676)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      result_3019936847 = get_3019946884(commonType_3019946679[0], voidType_3087008163());
      break BeforeRet;
      }
      else {
      if ((expr_3019945598.kind == 10)) {
      if ((len_3003121752(node_3019899433) < 2)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var ok_3019946905 = true;
      var conditionType_3019946906 = computeType_3019912985(ctx_3019899432, HEX5BHEX5D_3003121748(node_3019899433, 0), true);
      if ((conditionType_3019946906.kind == 0)) {
      ok_3019946905 = false;
      }
      else {
      if (!((conditionType_3019946906.kind == 3))) {
      var Temporary62 = nimCopy(null, HEX5BHEX5D_3003121748(node_3019899433, 0).id, NTI2046820355);
      ids_3019939225.push(Temporary62);;
      var fmtRes_3019946923 = [mnewString(0)];
      fmtRes_3019946923[0].push.apply(fmtRes_3019946923[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
      formatValue_3019945661(fmtRes_3019946923, 0, conditionType_3019946906, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019946923[0], NTI33554449)});;
      ok_3019946905 = false;
      }
      }
      var bodyType_3019946933 = computeType_3019912985(ctx_3019899432, HEX5BHEX5D_3003121748(node_3019899433, 1), true);
      if ((bodyType_3019946933.kind == 0)) {
      ok_3019946905 = false;
      }
      
      if (ok_3019946905) {
      result_3019936847 = voidType_3087008163();
      break BeforeRet;
      }
      else {
        result_3019936847 = errorType_3087008127();
        break BeforeRet;
      }
      
      }
      else {
      if ((expr_3019945598.kind == 13)) {
      if ((len_3003121752(node_3019899433) < 2)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var target_3019946942 = HEX5BHEX5D_3003121748(node_3019899433, 0);
      var value_3019946943 = HEX5BHEX5D_3003121748(node_3019899433, 1);
      var targetType_3019946944 = computeType_3019912985(ctx_3019899432, target_3019946942, true);
      if ((targetType_3019946944.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      var valueType_3019946949 = computeType_3019912985(ctx_3019899432, value_3019946943, true);
      if ((valueType_3019946949.kind == 0)) {
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if (!(HEX3DHEX3D_3087008309(targetType_3019946944, valueType_3019946949))) {
      var Temporary63 = nimCopy(null, value_3019946943.id, NTI2046820355);
      ids_3019939225.push(Temporary63);;
      var fmtRes_3019946962 = [mnewString(0)];
      fmtRes_3019946962[0].push.apply(fmtRes_3019946962[0], [67,97,110,39,116,32,97,115,115,105,103,110,32]);;
      formatValue_3019945661(fmtRes_3019946962, 0, valueType_3019946949, []);
      fmtRes_3019946962[0].push.apply(fmtRes_3019946962[0], [32,116,111,32]);;
      formatValue_3019945661(fmtRes_3019946962, 0, targetType_3019946944, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019946962[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
        var oHEX60gensym455_3019946979 = computeSymbol_3019918905(ctx_3019899432, target_3019946942, true);
        if (!isSome_3087009352(oHEX60gensym455_3019946979)) Temporary64 = false; else {          var sym_3019947025 = get_3087009372(oHEX60gensym455_3019946979);
          Temporary64 = true;        }      if (Temporary64) {
      if ((sym_3019947025.kind == 1)) {
      var Temporary65 = nimCopy(null, target_3019946942.id, NTI2046820355);
      ids_3019939225.push(Temporary65);;
      var fmtRes_3019947038 = [mnewString(0)];
      fmtRes_3019947038[0].push.apply(fmtRes_3019947038[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,98,117,105,108,116,105,110,32,115,121,109,98,111,108,32]);;
      formatValue_3019947039(fmtRes_3019947038, 0, sym_3019947025, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019947038[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      if (!((sym_3019947025.kind == 0))) {
      failedAssertImpl_268435515([99,111,109,112,105,108,101,114,46,110,105,109,40,52,52,52,44,32,55,41,32,96,115,121,109,46,107,105,110,100,32,61,61,32,115,107,65,115,116,78,111,100,101,96,32]);
      }
      
        var Temporary66 = sym_3019947025;
        if (ConstSet91[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI3087007753)); }
      if (!((Temporary66.node.kind == 6))) {
      var Temporary67 = nimCopy(null, target_3019946942.id, NTI2046820355);
      ids_3019939225.push(Temporary67);;
      var fmtRes_3019947069 = [mnewString(0)];
      fmtRes_3019947069[0].push.apply(fmtRes_3019947069[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,110,111,110,45,109,117,116,97,98,108,101,32,115,121,109,98,111,108,32]);;
      formatValue_3019947039(fmtRes_3019947069, 0, sym_3019947025, []);
      diagnostics_3019939220.push({message: nimCopy(null, fmtRes_3019947069[0], NTI33554449)});;
      result_3019936847 = errorType_3087008127();
      break BeforeRet;
      }
      
      }
      
      result_3019936847 = voidType_3087008163();
      break BeforeRet;
      }
      else {
        result_3019936847 = errorType_3087008127();
        break BeforeRet;
      }
      }}}}}}}}}}}}}
    };
    } finally {
    if ((0 < (diagnostics_3019939220).length)) {
    HEX5BHEX5DHEX3D_3019939293(ctx_3019899432.diagnosticsPerQuery, key_3019936860, ids_3019939225);
    Label68: {
      var i_3019940877 = 0;
      var colontmp__2969567329 = 0;
      colontmp__2969567329 = (ids_3019939225).length - 1;
      var res_2969567330 = 0;
      Label69: {
          Label70: while (true) {
          if (!(res_2969567330 <= colontmp__2969567329)) break Label70;
            i_3019940877 = res_2969567330;
            var id_3019940878 = nimCopy(null, ids_3019939225[chckIndx(i_3019940877, 0, (ids_3019939225).length - 1)], NTI2046820355);
            var diag_3019940879 = nimCopy(null, diagnostics_3019939220[chckIndx(i_3019940877, 0, (diagnostics_3019939220).length - 1)], NTI3019898883);
            if (!(contains_3019940956(ctx_3019899432.diagnosticsPerNode, id_3019940878))) {
            HEX5BHEX5DHEX3D_3019941038(ctx_3019899432.diagnosticsPerNode, id_3019940878, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3019942772(HEX5BHEX5D_3019937598(ctx_3019899432.diagnosticsPerNode, id_3019940878).queries, key_3019936860))) {
            HEX5BHEX5DHEX3D_3019942943(HEX5BHEX5D_3019937598(ctx_3019899432.diagnosticsPerNode, id_3019940878).queries, key_3019936860, []);
            }
            
            var Temporary72 = nimCopy(null, diag_3019940879, NTI3019898883);
            (Temporary71 = HEX5BHEX5D_3019944676(HEX5BHEX5D_3019937598(ctx_3019899432.diagnosticsPerNode, id_3019940878).queries, key_3019936860), Temporary71)[0][Temporary71[1]].push(Temporary72);;
            res_2969567330 = addInt(res_2969567330, 1);
          }
      };
    };
    }
    else {
    del_3019944849(ctx_3019899432.diagnosticsPerQuery, key_3019936860);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym322_3019936849 && true)) {
    rawEcho((repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008187(result_3019936847) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym322_3019936849) {
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], 1);
    }
    
    }
  };

  return result_3019936847;

}

function HEX5BHEX5DHEX3D_3019899735(t_3019899738, key_3019899739, val_3019899740) {
    t_3019899738.set(mapKeyJs_3019899747(key_3019899739), val_3019899740);

  
}

function HEX26_3087008360(x_3087008362, y_3087008363) {
  var result_3087008364 = [];

    result_3087008364 = new Array(chckRange(addInt((x_3087008362).length, (y_3087008363).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3087008362).length, (y_3087008363).length), 0, 2147483647) ; ++i) { result_3087008364[i] = 0; }    Label1: {
      var i_3087008382 = 0;
      var colontmp__2969567461 = 0;
      colontmp__2969567461 = subInt((x_3087008362).length, 1);
      var res_2969567462 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567462 <= colontmp__2969567461)) break Label3;
            i_3087008382 = res_2969567462;
            result_3087008364[chckIndx(i_3087008382, 0, (result_3087008364).length - 1)] = x_3087008362[chckIndx(i_3087008382, 0, (x_3087008362).length - 1)];
            res_2969567462 = addInt(res_2969567462, 1);
          }
      };
    };
    Label4: {
      var i_3087008390 = 0;
      var colontmp__2969567465 = 0;
      colontmp__2969567465 = subInt((y_3087008363).length, 1);
      var res_2969567466 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2969567466 <= colontmp__2969567465)) break Label6;
            i_3087008390 = res_2969567466;
            result_3087008364[chckIndx(addInt(i_3087008390, (x_3087008362).length), 0, (result_3087008364).length - 1)] = y_3087008363[chckIndx(i_3087008390, 0, (y_3087008363).length - 1)];
            res_2969567466 = addInt(res_2969567466, 1);
          }
      };
    };

  return result_3087008364;

}

function add_3087008398(x_3087008400, x_3087008400_Idx, y_3087008401) {
    var Temporary1;

    var xl_3087008405 = (x_3087008400[x_3087008400_Idx]).length;
    if (x_3087008400[x_3087008400_Idx].length < (Temporary1 = chckRange(addInt(xl_3087008405, (y_3087008401).length), 0, 2147483647), Temporary1)) { for (var i = x_3087008400[x_3087008400_Idx].length ; i < Temporary1 ; ++i) x_3087008400[x_3087008400_Idx].push(0); }
               else { x_3087008400[x_3087008400_Idx].length = Temporary1; };
    Label2: {
      var i_3087008420 = 0;
      var colontmp__2969567469 = 0;
      colontmp__2969567469 = (y_3087008401).length - 1;
      var res_2969567470 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567470 <= colontmp__2969567469)) break Label4;
            i_3087008420 = res_2969567470;
            x_3087008400[x_3087008400_Idx][chckIndx(addInt(xl_3087008405, i_3087008420), 0, (x_3087008400[x_3087008400_Idx]).length - 1)] = y_3087008401[chckIndx(i_3087008420, 0, (y_3087008401).length - 1)];
            res_2969567470 = addInt(res_2969567470, 1);
          }
      };
    };

  
}

function fingerprint_3087008353(typ_3087008354) {
      var Temporary1;
        var Temporary3;
      var Temporary6;

  var result_3087008355 = [[]];

    switch (typ_3087008354.kind) {
    case 4:
      var Temporary1 = typ_3087008354;
      if (ConstSet92[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      result_3087008355[0] = nimCopy(null, HEX26_3087008360([typ_3087008354.kind], fingerprint_3087008353(Temporary1.returnType)), NTI3087008199);
      Label2: {
        var param_3087008397 = null;
        var colontmp__2969567456 = [];
        var Temporary3 = typ_3087008354;
        if (ConstSet93[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
        colontmp__2969567456 = Temporary3.paramTypes;
        var i_2969567457 = 0;
        var L_2969567458 = (colontmp__2969567456).length;
        Label4: {
            Label5: while (true) {
            if (!(i_2969567457 < L_2969567458)) break Label5;
              param_3087008397 = colontmp__2969567456[chckIndx(i_2969567457, 0, (colontmp__2969567456).length - 1)];
              add_3087008398(result_3087008355, 0, fingerprint_3087008353(param_3087008397));
              i_2969567457 = addInt(i_2969567457, 1);
              if (!(((colontmp__2969567456).length == L_2969567458))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 5:
      var Temporary6 = typ_3087008354;
      if (ConstSet94[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      result_3087008355[0] = nimCopy(null, [typ_3087008354.kind, Temporary6.open], NTI3036676326);
      break;
    default: 
      result_3087008355[0] = nimCopy(null, [typ_3087008354.kind], NTI3087008193);
      break;
    }

  return result_3087008355[0];

}

function init_3019899845(result_3019899848, result_3019899848_Idx, capacity_3019899849) {
    result_3019899848[result_3019899848_Idx] = (new Map());

  
}

function errorValue_3087008438() {
  var result_3087008439 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008439 = nimCopy(result_3087008439, {kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008439;

}

function HEX5BHEX5D_3137341205(s_3137341209, x_3137341210) {
  var result_3137341211 = [];

    var a_3137341213 = x_3137341210.a;
    var L_3137341219 = addInt(subInt(subInt((s_3137341209).length, x_3137341210.b), a_3137341213), 1);
    result_3137341211 = new Array(chckRange(L_3137341219, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3137341219, 0, 2147483647) ; ++i) { result_3137341211[i] = null; }    Label1: {
      var i_3137341228 = 0;
      var i_2969567480 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567480 < L_3137341219)) break Label3;
            i_3137341228 = i_2969567480;
            result_3137341211[chckIndx(i_3137341228, 0, (result_3137341211).length - 1)] = s_3137341209[chckIndx(addInt(i_3137341228, a_3137341213), 0, (s_3137341209).length - 1)];
            i_2969567480 = addInt(i_2969567480, 1);
          }
      };
    };

  return result_3137341211;

}

function formatValue_3087008586(result_3087008588, result_3087008588_Idx, value_3087008589, specifier_3087008590) {
    formatValue_721420459(result_3087008588, result_3087008588_Idx, HEX24_3003123671(value_3087008589), specifier_3087008590);

  
}

function values_3019907124(t_3019907127) {
  var result_3019907128 = [];

    var iter_3019907133 = t_3019907127.values();
    for (var i in iter_3019907133) {result_3019907128.push(i);}

  return result_3019907128;

}

function hash_3003124022(node_3003124023) {
  var result_3003124024 = 0;

    result_3003124024 = node_3003124023;

  return result_3003124024;

}

function hash_3087008500(x_3087008502) {
  var result_3087008503 = 0;

    result_3087008503 = hashWangYi1_1325400244(x_3087008502);

  return result_3087008503;

}

function hash_3087008262(x_3087008264) {
  var result_3087008265 = 0;

    result_3087008265 = hashWangYi1_1325400244(x_3087008264);

  return result_3087008265;

}

function hash_3087008273(x_3087008275) {
  var result_3087008276 = 0;

    Label1: {
      var a_3087008290 = null;
      var i_2969567494 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567494 < (x_3087008275).length)) break Label3;
            a_3087008290 = x_3087008275[chckIndx(i_2969567494, 0, (x_3087008275).length - 1)];
            result_3087008276 = HEX21HEX26_1325400067(result_3087008276, hash_3087008259(a_3087008290));
            i_2969567494 = addInt(i_2969567494, 1);
          }
      };
    };
    result_3087008276 = HEX21HEX24_1325400082(result_3087008276);

  return result_3087008276;

}

function hash_2701134432(x_2701134434) {
  var result_2701134435 = 0;

    result_2701134435 = hashWangYi1_1325400244((x_2701134434 ? 1 : 0));

  return result_2701134435;

}

function hash_3087008259(typ_3087008260) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008261 = 0;

  BeforeRet: {
    if ((typ_3087008260.mHash == 0)) {
    switch (typ_3087008260.kind) {
    case 4:
      var Temporary2 = typ_3087008260;
      if (ConstSet100[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = typ_3087008260;
      if (ConstSet101[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      Temporary1 = ((hash_3087008262(typ_3087008260.kind) ^ hash_3087008259(Temporary2.returnType)) ^ hash_3087008273(Temporary3.paramTypes));
      break;
    case 5:
      var Temporary4 = typ_3087008260;
      if (ConstSet102[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
      Temporary1 = (hash_3087008262(typ_3087008260.kind) ^ hash_2701134432(Temporary4.open));
      break;
    default: 
      Temporary1 = hash_3087008262(typ_3087008260.kind);
      break;
    }
    typ_3087008260.mHash = Temporary1;
    }
    
    result_3087008261 = typ_3087008260.mHash;
    break BeforeRet;
  };

  return result_3087008261;

}

function hash_3087008497(value_3087008498) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008499 = 0;

  BeforeRet: {
    switch (value_3087008498.kind) {
    case 0:
      result_3087008499 = hash_3087008500(value_3087008498.kind);
      break BeforeRet;
      break;
    case 1:
      result_3087008499 = hash_3087008500(value_3087008498.kind);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008498;
      if (ConstSet97[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008499 = hash_1325400236(Temporary1.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008498;
      if (ConstSet98[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008499 = hash_1325400491(Temporary2.stringValue);
      break BeforeRet;
      break;
    case 4:
      result_3087008499 = 0;
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008498;
      if (ConstSet99[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008499 = hash_3003124022(Temporary3.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008498;
      if (ConstSet103[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008499 = hash_3087008259(Temporary4.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008499;

}

function hash_3087008731(x_3087008733) {
  var result_3087008734 = 0;

    Label1: {
      var a_3087008748 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567490 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567490 < (x_3087008733).length)) break Label3;
            a_3087008748 = x_3087008733[chckIndx(i_2969567490, 0, (x_3087008733).length - 1)];
            result_3087008734 = HEX21HEX26_1325400067(result_3087008734, hash_3087008497(a_3087008748));
            i_2969567490 = addInt(i_2969567490, 1);
          }
      };
    };
    result_3087008734 = HEX21HEX24_1325400082(result_3087008734);

  return result_3087008734;

}

function hash_3087008749(x_3087008751) {
  var result_3087008752 = 0;

    result_3087008752 = HEX21HEX26_1325400067(result_3087008752, hash_1325400236(x_3087008751.val));
    result_3087008752 = HEX21HEX26_1325400067(result_3087008752, hash_2701134432(x_3087008751.has));
    result_3087008752 = HEX21HEX24_1325400082(result_3087008752);

  return result_3087008752;

}

function hash_3087008728(fec_3087008729) {
  var result_3087008730 = 0;

  BeforeRet: {
    if ((fec_3087008729.mHash == 0)) {
    fec_3087008729.mHash = HEX21HEX26_1325400067(HEX21HEX26_1325400067(hash_3003124022(fec_3087008729.node), hash_3087008731(fec_3087008729.arguments)), hash_3087008749(fec_3087008729.maxLoopIterations));
    fec_3087008729.mHash = HEX21HEX24_1325400082(result_3087008730);
    }
    
    result_3087008730 = fec_3087008729.mHash;
    break BeforeRet;
  };

  return result_3087008730;

}

function HEX3DHEX3D_3087008517(a_3087008518, b_3087008519) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_3087008520 = false;

  BeforeRet: {
    if (!((a_3087008518.kind == b_3087008519.kind))) {
    result_3087008520 = false;
    break BeforeRet;
    }
    
    switch (a_3087008518.kind) {
    case 0:
      result_3087008520 = true;
      break BeforeRet;
      break;
    case 1:
      result_3087008520 = true;
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = a_3087008518;
      if (ConstSet104[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      var Temporary2 = b_3087008519;
      if (ConstSet105[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008520 = (Temporary1.intValue == Temporary2.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = a_3087008518;
      if (ConstSet106[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = b_3087008519;
      if (ConstSet107[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008520 = eqStrings(Temporary3.stringValue, Temporary4.stringValue);
      break BeforeRet;
      break;
    case 4:
      var Temporary5 = a_3087008518;
      if (ConstSet108[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      var Temporary6 = b_3087008519;
      if (ConstSet109[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007750)); }
      result_3087008520 = (Temporary5.impl == Temporary6.impl);
      break BeforeRet;
      break;
    case 5:
      var Temporary7 = a_3087008518;
      if (ConstSet110[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007750)); }
      var Temporary8 = b_3087008519;
      if (ConstSet111[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007750)); }
      result_3087008520 = (Temporary7.node == Temporary8.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary9 = a_3087008518;
      if (ConstSet112[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007750)); }
      var Temporary10 = b_3087008519;
      if (ConstSet113[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007750)); }
      result_3087008520 = HEX3DHEX3D_3087008309(Temporary9.typ, Temporary10.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008520;

}

function HEX3DHEX3D_3087008789(x_3087008791, y_3087008792) {
  var result_3087008793 = false;

  BeforeRet: {
    var sameObject_3087008800 = false;
    sameObject_3087008800 = x_3087008791 === y_3087008792
    if (sameObject_3087008800) {
    result_3087008793 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008791).length == (y_3087008792).length))) {
    result_3087008793 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008814 = 0;
      var colontmp__2969567497 = 0;
      colontmp__2969567497 = subInt((x_3087008791).length, 1);
      var res_2969567498 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567498 <= colontmp__2969567497)) break Label3;
            i_3087008814 = res_2969567498;
            if (!(HEX3DHEX3D_3087008517(x_3087008791[chckIndx(i_3087008814, 0, (x_3087008791).length - 1)], y_3087008792[chckIndx(i_3087008814, 0, (y_3087008792).length - 1)]))) {
            result_3087008793 = false;
            break BeforeRet;
            }
            
            res_2969567498 = addInt(res_2969567498, 1);
          }
      };
    };
    result_3087008793 = true;
    break BeforeRet;
  };

  return result_3087008793;

}

function isSome_1191185117(self_1191185119) {
  var result_1191185120 = false;

    result_1191185120 = self_1191185119.has;

  return result_1191185120;

}

function isNone_1191185194(self_1191185196) {
  var result_1191185197 = false;

    result_1191185197 = !(self_1191185196.has);

  return result_1191185197;

}

function HEX3DHEX3D_3087008877(a_3087008879, b_3087008880) {
  var result_3087008881 = false;

    result_3087008881 = (((isSome_1191185117(a_3087008879) && isSome_1191185117(b_3087008880)) && (a_3087008879.val == b_3087008880.val)) || (isNone_1191185194(a_3087008879) && isNone_1191185194(b_3087008880)));

  return result_3087008881;

}

function HEX3DHEX3D_3087008772(a_3087008773, b_3087008774) {
  var result_3087008775 = false;

  BeforeRet: {
    if ((a_3087008773 == null)) {
    result_3087008775 = (b_3087008774 == null);
    break BeforeRet;
    }
    
    if ((b_3087008774 == null)) {
    result_3087008775 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008773.node == b_3087008774.node))) {
    result_3087008775 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008789(a_3087008773.arguments, b_3087008774.arguments))) {
    result_3087008775 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008877(a_3087008773.maxLoopIterations, b_3087008774.maxLoopIterations))) {
    result_3087008775 = false;
    break BeforeRet;
    }
    
    result_3087008775 = true;
    break BeforeRet;
  };

  return result_3087008775;

}

function getItem_3019907111(selfHEX60gensym84_3019907112) {
  var result_3019907113 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym84_3019907112.id, null_2046820646)) {
    selfHEX60gensym84_3019907112.id = nimCopy(selfHEX60gensym84_3019907112.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym84_3019907112.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,56,49,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,52,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567500 = nimCopy(null, selfHEX60gensym84_3019907112.id, NTI2046820355);
    var colontmp__2969567501 = 3;
    result_3019907113 = nimCopy(result_3019907113, {Field0: nimCopy(null, colontmp__2969567500, NTI2046820355), Field1: colontmp__2969567501}, NTI3036676199);
    break BeforeRet;
  };

  return result_3019907113;

}

function HEX5BHEX5DHEX3D_3019907291(t_3019907294, key_3019907295, val_3019907296) {
    t_3019907294.set(mapKeyJs_3019899557(key_3019907295), val_3019907296);

  
}

function getOrCreateFunctionExecutionContext_3019907120(ctxHEX60gensym85_3019907121, dataHEX60gensym85_3019907122) {
  var result_3019907123 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym85_3019907156 = null;
      var colontmp__2969567483 = [];
      colontmp__2969567483 = values_3019907124(ctxHEX60gensym85_3019907121.itemsFunctionExecutionContext);
      var i_2969567485 = 0;
      var L_2969567486 = (colontmp__2969567483).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567485 < L_2969567486)) break Label3;
            existingHEX60gensym85_3019907156 = colontmp__2969567483[chckIndx(i_2969567485, 0, (colontmp__2969567483).length - 1)];
            if (((hash_3087008728(existingHEX60gensym85_3019907156) == hash_3087008728(dataHEX60gensym85_3019907122)) && HEX3DHEX3D_3087008772(existingHEX60gensym85_3019907156, dataHEX60gensym85_3019907122))) {
            result_3019907123 = existingHEX60gensym85_3019907156;
            break BeforeRet;
            }
            
            i_2969567485 = addInt(i_2969567485, 1);
            if (!(((colontmp__2969567483).length == L_2969567486))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var itemHEX60gensym85_3019907157 = getItem_3019907111(dataHEX60gensym85_3019907122);
    var keyHEX60gensym85_3019907158 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym85_3019907157, NTI3036676199), Field1: -1}, NTI3036676202);
    HEX5BHEX5DHEX3D_3036679287(ctxHEX60gensym85_3019907121.depGraph.changed, keyHEX60gensym85_3019907158, ctxHEX60gensym85_3019907121.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907291(ctxHEX60gensym85_3019907121.itemsFunctionExecutionContext, itemHEX60gensym85_3019907157, dataHEX60gensym85_3019907122);
    result_3019907123 = dataHEX60gensym85_3019907122;
    break BeforeRet;
  };

  return result_3019907123;

}

function mapKeyJs_3019901899(key_3019901901) {
  var result_3019901902 = null;

    let temp = key_3019901901;
    if (temp._id === undefined) temp._id = getIdFunctionExecutionContextJs(key_3019901901);
    return temp._id;

  return result_3019901902;

}

function contains_3019930597(t_3019930600, key_3019930601) {
  var result_3019930602 = false;

    result_3019930602 = t_3019930600.has(mapKeyJs_3019901899(key_3019930601));

  return result_3019930602;

}

function addQuoted_3087008634(s_3087008636, s_3087008636_Idx, x_3087008637) {
    s_3087008636[s_3087008636_Idx].push.apply(s_3087008636[s_3087008636_Idx], HEX24_3087008494(x_3087008637));;

  
}

function collectionToString_3087008600(x_3087008602, prefix_3087008603, separator_3087008604, suffix_3087008605) {
  var result_3087008606 = [[]];

    result_3087008606[0] = nimCopy(null, prefix_3087008603, NTI33554449);
    var firstElement_3087008607 = true;
    Label1: {
      var value_3087008630 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567504 = 0;
      var L_2969567505 = (x_3087008602).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567504 < L_2969567505)) break Label3;
            value_3087008630 = x_3087008602[i_2969567504];
            if (firstElement_3087008607) {
            firstElement_3087008607 = false;
            }
            else {
            result_3087008606[0].push.apply(result_3087008606[0], separator_3087008604);;
            }
            
            addQuoted_3087008634(result_3087008606, 0, value_3087008630);
            i_2969567504 += 1;
            if (!(((x_3087008602).length == L_2969567505))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008606[0].push.apply(result_3087008606[0], suffix_3087008605);;

  return result_3087008606[0];

}

function HEX24_3087008596(x_3087008598) {
  var result_3087008599 = [];

    result_3087008599 = nimCopy(null, collectionToString_3087008600(x_3087008598, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008599;

}

function formatValue_3087008591(result_3087008593, result_3087008593_Idx, value_3087008594, specifier_3087008595) {
    formatValue_721420459(result_3087008593, result_3087008593_Idx, HEX24_3087008596(value_3087008594), specifier_3087008595);

  
}

function HEX24_3087008709(self_3087008711) {
  var result_3087008712 = [[]];

    if (isSome_1191185117(self_3087008711)) {
    result_3087008712[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_855639425(result_3087008712, 0, self_3087008711.val);
    result_3087008712[0].push.apply(result_3087008712[0], [41]);;
    }
    else {
      result_3087008712[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    

  return result_3087008712[0];

}

function formatValue_3087008658(result_3087008660, result_3087008660_Idx, value_3087008661, specifier_3087008662) {
    formatValue_721420459(result_3087008660, result_3087008660_Idx, HEX24_3087008709(value_3087008661), specifier_3087008662);

  
}

function HEX24_3087008578(fec_3087008579) {
  var result_3087008580 = [];

  BeforeRet: {
    var fmtRes_3087008585 = [mnewString(0)];
    fmtRes_3087008585[0].push.apply(fmtRes_3087008585[0], [67,97,108,108,32]);;
    formatValue_3087008586(fmtRes_3087008585, 0, fec_3087008579.node, []);
    fmtRes_3087008585[0].push.apply(fmtRes_3087008585[0], [40]);;
    formatValue_3087008591(fmtRes_3087008585, 0, fec_3087008579.arguments, []);
    fmtRes_3087008585[0].push.apply(fmtRes_3087008585[0], [44,32,109,97,120,76,111,111,112,73,116,101,114,97,116,105,111,110,115,61]);;
    formatValue_3087008658(fmtRes_3087008585, 0, fec_3087008579.maxLoopIterations, []);
    fmtRes_3087008585[0].push.apply(fmtRes_3087008585[0], [41]);;
    result_3087008580 = nimCopy(null, fmtRes_3087008585[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087008580;

}

function HEX5BHEX5D_3019930691(t_3019930694, key_3019930695) {
  var result_3019930696 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019930696 = nimCopy(result_3019930696, t_3019930694.get(mapKeyJs_3019901899(key_3019930695)), NTI3087007751);

  return result_3019930696;

}

function computeFunctionExecution_3019930710(ctxHEX60gensym116_3019930711, inputHEX60gensym116_3019930712) {
    var Temporary4;
    var Temporary6;

  var result_3019930713 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    var timerHEX60gensym116_3019930714 = startTimer_2080374869();
    ctxHEX60gensym116_3019930711.statsFunctionExecution.totalCalls = addInt(ctxHEX60gensym116_3019930711.statsFunctionExecution.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym116_3019930799 = getItem_3019907111(inputHEX60gensym116_3019930712);
    var keyHEX60gensym116_3019930800 = {Field0: nimCopy(null, itemHEX60gensym116_3019930799, NTI3036676199), Field1: 6};
    recordDependency_3019905701(ctxHEX60gensym116_3019930711, itemHEX60gensym116_3019930799, 6);
    if (ctxHEX60gensym116_3019930711.enableLogging) {
    Temporary4 = 1;
    }
    else {
    Temporary4 = 0;
    }
    
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], Temporary4);
    try {
    if (ctxHEX60gensym116_3019930711.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110], [44,32], HEX24_3036676332(itemHEX60gensym116_3019930799));
    }
    
    force_3019907603(ctxHEX60gensym116_3019930711, keyHEX60gensym116_3019930800);
    if (!(contains_3019930597(ctxHEX60gensym116_3019930711.queryCacheFunctionExecution, inputHEX60gensym116_3019930712))) {
    raiseException({message: ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3087008578(inputHEX60gensym116_3019930712) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019930713 = nimCopy(result_3019930713, HEX5BHEX5D_3019930691(ctxHEX60gensym116_3019930711.queryCacheFunctionExecution, inputHEX60gensym116_3019930712), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym116_3019930711.enableLogging) {
    Temporary6 = 1;
    }
    else {
    Temporary6 = 0;
    }
    
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], Temporary6);
    }
    } finally {
    if (((ctxHEX60gensym116_3019930711.dependencyStack).length == 0)) {
    clear_3019913072(ctxHEX60gensym116_3019930711.recursiveQueries);
    }
    
    }
    } finally {
    HEX2BHEX3D_855640304(ctxHEX60gensym116_3019930711.statsFunctionExecution, "time", elapsed_2080374866(timerHEX60gensym116_3019930714));
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym116_3019930711.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019930713;

}

function contains_3019927837(t_3019927840, key_3019927841) {
  var result_3019927842 = false;

    result_3019927842 = t_3019927840.has(mapKeyJs_3019901167(key_3019927841));

  return result_3019927842;

}

function HEX5BHEX5D_3019927931(t_3019927934, key_3019927935) {
  var result_3019927936 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019927936 = nimCopy(result_3019927936, t_3019927934.get(mapKeyJs_3019901167(key_3019927935)), NTI3087007751);

  return result_3019927936;

}

function computeSymbolValue_3019927950(ctxHEX60gensym112_3019927951, inputHEX60gensym112_3019927952, recordDependencyHEX60gensym112_3019927953) {
    var Temporary4;
    var Temporary6;

  var result_3019927954 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    var timerHEX60gensym112_3019927955 = startTimer_2080374869();
    ctxHEX60gensym112_3019927951.statsSymbolValue.totalCalls = addInt(ctxHEX60gensym112_3019927951.statsSymbolValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym112_3019928040 = getItem_3019906700(inputHEX60gensym112_3019927952);
    var keyHEX60gensym112_3019928041 = {Field0: nimCopy(null, itemHEX60gensym112_3019928040, NTI3036676199), Field1: 5};
    if (recordDependencyHEX60gensym112_3019927953) {
    recordDependency_3019905701(ctxHEX60gensym112_3019927951, itemHEX60gensym112_3019928040, 5);
    }
    
    var colorHEX60gensym112_3019928042 = nodeColor_3036678422(ctxHEX60gensym112_3019927951.depGraph, keyHEX60gensym112_3019928041, 0);
    if (ctxHEX60gensym112_3019927951.enableLogging) {
    Temporary4 = 1;
    }
    else {
    Temporary4 = 0;
    }
    
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], Temporary4);
    try {
    if (ctxHEX60gensym112_3019927951.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,86,97,108,117,101], [32], reprEnum(colorHEX60gensym112_3019928042, NTI3036676204), [44,32], HEX24_3036676332(itemHEX60gensym112_3019928040));
    }
    
    if ((colorHEX60gensym112_3019928042 == 2)) {
    if (!(contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    if (ctxHEX60gensym112_3019927951.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym112_3019927951, keyHEX60gensym112_3019928041);
    if (false) {
    markRed_3036679302(ctxHEX60gensym112_3019927951.depGraph, keyHEX60gensym112_3019928041, []);
    }
    
    if ((ctxHEX60gensym112_3019927951.enableLogging && contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952)));
    }
    
    }
    else {
      if ((ctxHEX60gensym112_3019927951.enableLogging && contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952)));
      }
      
    }
    
    if (!(contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008911(inputHEX60gensym112_3019927952) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019927954 = nimCopy(result_3019927954, HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym112_3019928042 == 0)) {
    if (!(contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    if (ctxHEX60gensym112_3019927951.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym112_3019927951, keyHEX60gensym112_3019928041);
    if (false) {
    markRed_3036679302(ctxHEX60gensym112_3019927951.depGraph, keyHEX60gensym112_3019928041, []);
    }
    
    if ((ctxHEX60gensym112_3019927951.enableLogging && contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952)));
    }
    
    if (!(contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008911(inputHEX60gensym112_3019927952) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019927954 = nimCopy(result_3019927954, HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym112_3019927951.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911122(ctxHEX60gensym112_3019927951, keyHEX60gensym112_3019928041, true) == 0)) {
    if ((ctxHEX60gensym112_3019927951.enableLogging && contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952)));
    }
    
    if (!(contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008911(inputHEX60gensym112_3019927952) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019927954 = nimCopy(result_3019927954, HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym112_3019927951.enableLogging) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019907603(ctxHEX60gensym112_3019927951, keyHEX60gensym112_3019928041);
      if (false) {
      markRed_3036679302(ctxHEX60gensym112_3019927951.depGraph, keyHEX60gensym112_3019928041, []);
      }
      
      if ((ctxHEX60gensym112_3019927951.enableLogging && contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952)));
      }
      
      if (!(contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008911(inputHEX60gensym112_3019927952) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019927954 = nimCopy(result_3019927954, HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym112_3019928042 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,52,50,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym112_3019927951.enableLogging && contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008494(HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952)));
    }
    
    if (!(contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    force_3019907603(ctxHEX60gensym112_3019927951, keyHEX60gensym112_3019928041);
    }
    
    if (!(contains_3019927837(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008911(inputHEX60gensym112_3019927952) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019927954 = nimCopy(result_3019927954, HEX5BHEX5D_3019927931(ctxHEX60gensym112_3019927951.queryCacheSymbolValue, inputHEX60gensym112_3019927952), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym112_3019927951.enableLogging) {
    Temporary6 = 1;
    }
    else {
    Temporary6 = 0;
    }
    
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], Temporary6);
    }
    } finally {
    if (((ctxHEX60gensym112_3019927951.dependencyStack).length == 0)) {
    clear_3019913072(ctxHEX60gensym112_3019927951.recursiveQueries);
    }
    
    }
    } finally {
    HEX2BHEX3D_855640304(ctxHEX60gensym112_3019927951.statsSymbolValue, "time", elapsed_2080374866(timerHEX60gensym112_3019927955));
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym112_3019927951.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019927954;

}

function voidValue_3087008467() {
  var result_3087008468 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008468 = nimCopy(result_3087008468, {kind: 1, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008468;

}

function some_3019916084(val_3019916086) {
  var result_3019916087 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3019916087.has = true;
    result_3019916087.val = nimCopy(result_3019916087.val, val_3019916086, NTI3087007751);

  return result_3019916087;

}

function none_3019916092() {
  var result_3019916099 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  return result_3019916099;

}

function none_3019916089() {
  var result_3019916091 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3019916091 = nimCopy(result_3019916091, none_3019916092(), NTI3019908968);

  return result_3019916091;

}

function getValue_3019915891(ctxHEX60gensym95_3019915892, inputHEX60gensym95_3019915893) {
  var result_3019915899 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  BeforeRet: {
    if (contains_3019915976(ctxHEX60gensym95_3019915892.queryCacheValue, inputHEX60gensym95_3019915893)) {
    result_3019915899 = nimCopy(result_3019915899, some_3019916084(HEX5BHEX5D_3019916070(ctxHEX60gensym95_3019915892.queryCacheValue, inputHEX60gensym95_3019915893)), NTI3019908968);
    break BeforeRet;
    }
    
    result_3019915899 = nimCopy(result_3019915899, none_3019916089(), NTI3019908968);
    break BeforeRet;
  };

  return result_3019915899;

}

function isSome_3137339424(self_3137339426) {
  var result_3137339427 = false;

    result_3137339427 = self_3137339426.has;

  return result_3137339427;

}

function isNone_3137339449(self_3137339451) {
  var result_3137339452 = false;

    result_3137339452 = !(self_3137339451.has);

  return result_3137339452;

}

function get_3137339441(self_3137339443) {
  var result_3137339444 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    if (isNone_3137339449(self_3137339443)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3137339444 = self_3137339443.val;

  return result_3137339444;

}

function newAstFunctionValue_3087008490(node_3087008491, rev_3087008492) {
  var result_3087008493 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008493 = nimCopy(result_3087008493, {kind: 5, node: node_3087008491, rev: rev_3087008492, stringValue: [], intValue: 0, impl: null, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008493;

}

function computeValueImpl_3019899434(ctx_3019899435, node_3019899436) {
      var Temporary4;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary17;
        var Temporary18;
        var Temporary19;
      var Temporary20;

  var result_3019947127 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym463_3019947129 = (ctx_3019899435.enableLogging || ctx_3019899435.enableQueryLogging);
    if (logQueryHEX60gensym463_3019947129) {
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym463_3019947129) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899436) || []));
    }
    
    try {
    Label3: {
      var expr_3019947140 = node_3019899436;
      var pos_3019947141 = 0;
      var _ = pos_3019947141;
      if ((expr_3019947140.kind == 2)) {
++excHandler;
      try {
      Temporary4 = nsuParseInt(node_3019899436.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3019947148 = Temporary4;
      result_3019947127 = nimCopy(result_3019947127, {kind: 3, intValue: value_3019947148, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019947140.kind == 3)) {
      result_3019947127 = nimCopy(result_3019947127, {kind: 2, stringValue: nimCopy(null, node_3019899436.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019947140.kind == 8)) {
      var function_3019947157 = HEX5BHEX5D_3003121748(node_3019899436, 0);
      var functionValue_3019947158 = computeValue_3019916118(ctx_3019899435, function_3019947157, true);
      if ((functionValue_3019947158.kind == 0)) {
      result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      
      var args_3019947167 = [];
      Label6: {
        var arg_3019947186 = null;
        var colontmp__2969567474 = [];
        colontmp__2969567474 = HEX5BHEX5D_3137341205(node_3019899436.children, HEX2EHEX2E_1040187488(1, 1));
        var i_2969567475 = 0;
        var L_2969567476 = (colontmp__2969567474).length;
        Label7: {
            Label8: while (true) {
            if (!(i_2969567475 < L_2969567476)) break Label8;
              arg_3019947186 = colontmp__2969567474[chckIndx(i_2969567475, 0, (colontmp__2969567474).length - 1)];
              var value_3019947187 = computeValue_3019916118(ctx_3019899435, arg_3019947186, true);
              if ((value_3019947187.kind == 0)) {
              result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
              break BeforeRet;
              }
              
              var Temporary9 = nimCopy(null, value_3019947187, NTI3087007751);
              args_3019947167.push(Temporary9);;
              i_2969567475 = addInt(i_2969567475, 1);
              if (!(((colontmp__2969567474).length == L_2969567476))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((functionValue_3019947158.kind == 4)) {
        var Temporary10 = functionValue_3019947158;
        if (ConstSet95[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007750)); }
      if ((Temporary10.impl == null)) {
      var fmtRes_3019947208 = [mnewString(0)];
      fmtRes_3019947208[0].push.apply(fmtRes_3019947208[0], [91,99,111,109,112,105,108,101,114,93,58,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,32,39]);;
      formatValue_3036676340(fmtRes_3019947208, 0, function_3019947157.id, []);
      fmtRes_3019947208[0].push.apply(fmtRes_3019947208[0], [39,32,97,116,32]);;
      formatValue_3087008586(fmtRes_3019947208, 0, node_3019899436, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019947208[0], NTI33554449)]);
      result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      
      var Temporary11 = functionValue_3019947158;
      if (ConstSet96[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI3087007750)); }
      result_3019947127 = nimCopy(result_3019947127, Temporary11.impl(args_3019947167), NTI3087007751);
      break BeforeRet;
      }
      
      if ((functionValue_3019947158.kind == 5)) {
      var Temporary12 = functionValue_3019947158;
      if (ConstSet114[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007750)); }
      var fec_3019947223 = getOrCreateFunctionExecutionContext_3019907120(ctx_3019899435, {node: Temporary12.node, arguments: nimCopy(null, args_3019947167, NTI3019927104), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
      result_3019947127 = nimCopy(result_3019947127, computeFunctionExecution_3019930710(ctx_3019899435, fec_3019947223), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019947140.kind == 7)) {
      if ((len_3003121752(node_3019899436) == 0)) {
      result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019947127 = nimCopy(result_3019947127, computeValue_3019916118(ctx_3019899435, last_3003121922(node_3019899436), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019947140.kind == 4)) {
      if ((len_3003121752(node_3019899436) == 0)) {
      result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019947127 = nimCopy(result_3019947127, computeValue_3019916118(ctx_3019899435, HEX5BHEX5D_3003121748(node_3019899436, 0), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019947140.kind == 1)) {
      var id_3019947236 = nimCopy(null, node_3019899436.reff, NTI2046820355);
      var symbols_3019947237 = computeSymbols_3019922062(ctx_3019899435, node_3019899436, true);
      if (contains_3019946113(symbols_3019947237, id_3019947236)) {
      var symbol_3019947404 = (Temporary13 = HEX5BHEX5D_3019946368(symbols_3019947237, id_3019947236), Temporary13)[0][Temporary13[1]];
      result_3019947127 = nimCopy(result_3019947127, computeSymbolValue_3019927950(ctx_3019899435, symbol_3019947404, true), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019947140.kind == 9)) {
      if ((len_3003121752(node_3019899436) < 2)) {
      result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3019947409 = 0;
      Label14: {
          Label15: while (true) {
          if (!(addInt(index_3019947409, 1) < len_3003121752(node_3019899436))) break Label15;
            try {
            var condition_3019947414 = HEX5BHEX5D_3003121748(node_3019899436, index_3019947409);
            var trueCase_3019947415 = HEX5BHEX5D_3003121748(node_3019899436, addInt(index_3019947409, 1));
            var conditionValue_3019947416 = computeValue_3019916118(ctx_3019899435, condition_3019947414, true);
            if ((conditionValue_3019947416.kind == 0)) {
            result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3019947416.kind == 3))) {
            var fmtRes_3019947429 = [mnewString(0)];
            fmtRes_3019947429[0].push.apply(fmtRes_3019947429[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3137340831(fmtRes_3019947429, 0, conditionValue_3019947416, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019947429[0], NTI33554449)]);
            result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3019947416.intValue == 0))) {
            var trueCaseValue_3019947435 = computeValue_3019916118(ctx_3019899435, trueCase_3019947415, true);
            result_3019947127 = nimCopy(result_3019947127, trueCaseValue_3019947435, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3019947409 = addInt(index_3019947409, 2);
            }
          }
      };
      if (!((modInt(len_3003121752(node_3019899436), 2) == 0))) {
      var falseCaseValue_3019947436 = computeValue_3019916118(ctx_3019899435, last_3003121922(node_3019899436), true);
      result_3019947127 = nimCopy(result_3019947127, falseCaseValue_3019947436, NTI3087007751);
      break BeforeRet;
      }
      
      result_3019947127 = nimCopy(result_3019947127, voidValue_3087008467(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019947140.kind == 11)) {
        var oHEX60gensym488_3019947443 = getValue_3019915891(ctx_3019899435, node_3019899436);
        if (!isSome_3137339424(oHEX60gensym488_3019947443)) Temporary19 = false; else {          var value_3019947489 = nimCopy(null, get_3137339441(oHEX60gensym488_3019947443), NTI3087007751);
          Temporary19 = true;        }        if (!Temporary19) Temporary18 = false; else {          Temporary18 = (value_3019947489.kind == 5);        }      if (Temporary18) {
      var Temporary20 = value_3019947489;
      if (ConstSet115[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI3087007750)); }
      Temporary17 = Temporary20.rev;
      }
      else {
      Temporary17 = 0;
      }
      
      var currentRev_3019947494 = Temporary17;
      result_3019947127 = nimCopy(result_3019947127, newAstFunctionValue_3087008490(node_3019899436, addInt(currentRev_3019947494, 1)), NTI3087007751);
      break BeforeRet;
      }
      else {
        result_3019947127 = nimCopy(result_3019947127, errorValue_3087008438(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}
    };
    } finally {
    if ((logQueryHEX60gensym463_3019947129 && true)) {
    rawEcho((repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008494(result_3019947127) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym463_3019947129) {
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], 1);
    }
    
    }
  };

  return result_3019947127;

}

function HEX5BHEX5DHEX3D_3019900093(t_3019900096, key_3019900097, val_3019900098) {
    t_3019900096.set(mapKeyJs_3019899747(key_3019900097), val_3019900098);

  
}

function fingerprint_3087008534(value_3087008535) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008536 = [];

  BeforeRet: {
    switch (value_3087008535.kind) {
    case 0:
      result_3087008536 = nimCopy(null, [value_3087008535.kind], NTI3087008193);
      break BeforeRet;
      break;
    case 1:
      result_3087008536 = nimCopy(null, [value_3087008535.kind], NTI3087008193);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008535;
      if (ConstSet116[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008536 = nimCopy(null, [value_3087008535.kind, Temporary1.intValue], NTI3036676326);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008535;
      if (ConstSet117[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008536 = nimCopy(null, [value_3087008535.kind, hash_1325400491(Temporary2.stringValue)], NTI3036676326);
      break BeforeRet;
      break;
    case 4:
      result_3087008536 = nimCopy(null, [], NTI2013268507);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008535;
      if (ConstSet118[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = value_3087008535;
      if (ConstSet119[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008536 = nimCopy(null, [value_3087008535.kind, hash_3003124022(Temporary3.node), Temporary4.rev], NTI3087008383);
      break BeforeRet;
      break;
    case 6:
      var Temporary5 = value_3087008535;
      if (ConstSet120[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      result_3087008536 = nimCopy(null, HEX26_3087008360([value_3087008535.kind], fingerprint_3087008353(Temporary5.typ)), NTI3087008199);
      break BeforeRet;
      break;
    }
  };

  return result_3087008536;

}

function init_3019900192(result_3019900195, result_3019900195_Idx, capacity_3019900196) {
    result_3019900195[result_3019900195_Idx] = (new Map());

  
}

function some_3019906677(val_3019906679) {
  var result_3019906680 = ({val: null});

    if (!(!((val_3019906679 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3019906680.val = val_3019906679;

  return result_3019906680;

}

function HEX5BHEX5DHEX3D_3019906880(t_3019906883, key_3019906884, val_3019906885) {
    t_3019906883.set(mapKeyJs_3019899557(key_3019906884), val_3019906885);

  
}

function newSymbol_3019907315(ctxHEX60gensym86_3019907316, dataHEX60gensym86_3019907317) {
  var result_3019907318 = null;

  BeforeRet: {
    var itemHEX60gensym86_3019907319 = getItem_3019906700(dataHEX60gensym86_3019907317);
    var keyHEX60gensym86_3019907320 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym86_3019907319, NTI3036676199), Field1: -1}, NTI3036676202);
    HEX5BHEX5DHEX3D_3036679287(ctxHEX60gensym86_3019907316.depGraph.changed, keyHEX60gensym86_3019907320, ctxHEX60gensym86_3019907316.depGraph.revision);
    HEX5BHEX5DHEX3D_3019906880(ctxHEX60gensym86_3019907316.itemsSymbol, itemHEX60gensym86_3019907319, dataHEX60gensym86_3019907317);
    result_3019907318 = dataHEX60gensym86_3019907317;
    break BeforeRet;
  };

  return result_3019907318;

}

function none_3019906693() {
  var result_3019906699 = ({val: null});

  return result_3019906699;

}

function none_3019906690() {
  var result_3019906692 = ({val: null});

    result_3019906692 = nimCopy(result_3019906692, none_3019906693(), NTI3087008908);

  return result_3019906692;

}

function computeSymbolImpl_3019899437(ctx_3019899438, node_3019899439) {
      var Temporary4;

  var result_3019947501 = ({val: null});

  BeforeRet: {
    var logQueryHEX60gensym489_3019947503 = (ctx_3019899438.enableLogging || ctx_3019899438.enableQueryLogging);
    if (logQueryHEX60gensym489_3019947503) {
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym489_3019947503) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899439) || []));
    }
    
    try {
    Label3: {
      var expr_3019947574 = node_3019899439;
      var pos_3019947575 = 0;
      var _ = pos_3019947575;
      if ((expr_3019947574.kind == 1)) {
      var symbols_3019947582 = computeSymbols_3019922062(ctx_3019899438, node_3019899439, true);
      if (contains_3019946113(symbols_3019947582, node_3019899439.reff)) {
      result_3019947501 = nimCopy(result_3019947501, some_3019906677((Temporary4 = HEX5BHEX5D_3019946368(symbols_3019947582, node_3019899439.reff), Temporary4)[0][Temporary4[1]]), NTI3087008908);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3019947574.kind == 4)) {
      result_3019947501 = nimCopy(result_3019947501, some_3019906677(newSymbol_3019907315(ctx_3019899438, {kind: 0, id: nimCopy(null, node_3019899439.id, NTI2046820355), node: node_3019899439, name: nimCopy(null, node_3019899439.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008908);
      break BeforeRet;
      }
      else {
      if ((expr_3019947574.kind == 5)) {
      result_3019947501 = nimCopy(result_3019947501, some_3019906677(newSymbol_3019907315(ctx_3019899438, {kind: 0, id: nimCopy(null, node_3019899439.id, NTI2046820355), node: node_3019899439, name: nimCopy(null, node_3019899439.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008908);
      break BeforeRet;
      }
      else {
      if ((expr_3019947574.kind == 6)) {
      result_3019947501 = nimCopy(result_3019947501, some_3019906677(newSymbol_3019907315(ctx_3019899438, {kind: 0, id: nimCopy(null, node_3019899439.id, NTI2046820355), node: node_3019899439, name: nimCopy(null, node_3019899439.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008908);
      break BeforeRet;
      }
      else {
        var fmtRes_3019947777 = [mnewString(0)];
        fmtRes_3019947777[0].push.apply(fmtRes_3019947777[0], [70,97,105,108,101,100,32,116,111,32,103,101,116,32,115,121,109,98,111,108,32,102,114,111,109,32,110,111,100,101,32]);;
        formatValue_3087008586(fmtRes_3019947777, 0, node_3019899439, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019947777[0], NTI33554449)]);
        result_3019947501 = nimCopy(result_3019947501, none_3019906690(), NTI3087008908);
        break BeforeRet;
      }
      }}}
    };
    } finally {
    if ((logQueryHEX60gensym489_3019947503 && true)) {
    rawEcho((repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3019905104(result_3019947501) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym489_3019947503) {
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], 1);
    }
    
    }
  };

  return result_3019947501;

}

function HEX5BHEX5DHEX3D_3019900441(t_3019900444, key_3019900445, val_3019900446) {
    t_3019900444.set(mapKeyJs_3019899747(key_3019900445), val_3019900446);

  
}

function fingerprint_3087008944(symbol_3087008945) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008946 = [];

    switch (symbol_3087008945.kind) {
    case 0:
      var Temporary1 = symbol_3087008945;
      if (ConstSet121[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008946 = nimCopy(null, [hash_2046820630(symbol_3087008945.id), hash_1325400491(symbol_3087008945.name), symbol_3087008945.kind, hash_2046820630(Temporary1.node.id)], NTI3087008653);
      break;
    case 1:
      var Temporary2 = symbol_3087008945;
      if (ConstSet122[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008945;
      if (ConstSet123[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      var Temporary4 = symbol_3087008945;
      if (ConstSet124[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      var Temporary5 = symbol_3087008945;
      if (ConstSet125[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
      result_3087008946 = nimCopy(null, HEX26_3087008360(HEX26_3087008360([hash_2046820630(symbol_3087008945.id), hash_1325400491(symbol_3087008945.name), symbol_3087008945.kind, Temporary2.precedence, Temporary3.operatorNotation], fingerprint_3087008353(Temporary4.typ)), fingerprint_3087008534(Temporary5.value)), NTI3087008199);
      break;
    }

  return result_3087008946;

}

function fingerprint_3087009338(symbol_3087009343) {
      var Temporary1;

  var result_3087009344 = [];

  BeforeRet: {
      var oHEX60gensym27_3087009347 = nimCopy(null, symbol_3087009343, NTI3087008908);
      if (!isSome_3087009352(oHEX60gensym27_3087009347)) Temporary1 = false; else {        var s_3087009398 = get_3087009372(oHEX60gensym27_3087009347);
        Temporary1 = true;      }    if (Temporary1) {
    result_3087009344 = nimCopy(null, fingerprint_3087008944(s_3087009398), NTI3036676198);
    break BeforeRet;
    }
    
    result_3087009344 = nimCopy(null, [], NTI2013268507);
    break BeforeRet;
  };

  return result_3087009344;

}

function init_3019900540(result_3019900543, result_3019900543_Idx, capacity_3019900544) {
    result_3019900543[result_3019900543_Idx] = (new Map());

  
}

function initTable_3019904710(initialSize_3019904713) {
  var result_3019904714 = ({data: [], counter: 0});

    var correctSizeHEX60gensym144_3019904716 = slotsNeeded_1308622891(chckRange(initialSize_3019904713, 0, 2147483647));
    result_3019904714.counter = 0;
    result_3019904714.data = new Array(chckRange(correctSizeHEX60gensym144_3019904716, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym144_3019904716, 0, 2147483647) ; ++i) { result_3019904714.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3019904714;

}

function newTable_3019934635(initialSize_3019934638) {
  var result_3019934639 = null;

    result_3019934639 = ({data: [], counter: 0});
    result_3019934639 = nimCopy(result_3019934639, initTable_3019904710(initialSize_3019934638), NTI3087008712);

  return result_3019934639;

}

function none_3003121871() {
  var result_3003121877 = ({val: null});

  return result_3003121877;

}

function none_3003121868() {
  var result_3003121870 = ({val: null});

    result_3003121870 = nimCopy(result_3003121870, none_3003121871(), NTI3003121783);

  return result_3003121870;

}

function some_3003121890(val_3003121892) {
  var result_3003121893 = ({val: null});

    if (!(!((val_3003121892 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3003121893.val = val_3003121892;

  return result_3003121893;

}

function findWithParentRec_3003123589(node_3003123590, kind_3003123591) {
  var result_3003123593 = ({val: null});

  BeforeRet: {
    if ((node_3003123590.parent == null)) {
    result_3003123593 = nimCopy(result_3003123593, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    if ((node_3003123590.parent.kind == kind_3003123591)) {
    result_3003123593 = nimCopy(result_3003123593, some_3003121890(node_3003123590), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003123593 = nimCopy(result_3003123593, findWithParentRec_3003123589(node_3003123590.parent, kind_3003123591), NTI3003121783);
    break BeforeRet;
  };

  return result_3003123593;

}

function isSome_3003123546(self_3003123548) {
  var result_3003123549 = false;

    result_3003123549 = !((self_3003123548.val == null));

  return result_3003123549;

}

function isNone_3003123574(self_3003123576) {
  var result_3003123577 = false;

    result_3003123577 = (self_3003123576.val == null);

  return result_3003123577;

}

function get_3003123566(self_3003123568) {
  var result_3003123569 = null;

    if (isNone_3003123574(self_3003123568)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3003123569 = self_3003123568["val"];

  return result_3003123569;

}

function mustRehash_3019935432(t_3019935434) {
  var result_3019935435 = false;

    if (!((t_3019935434.counter < (t_3019935434.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019935435 = ((mulInt((t_3019935434.data).length, 2) < mulInt(t_3019935434.counter, 3)) || (subInt((t_3019935434.data).length, t_3019935434.counter) < 4));

  return result_3019935435;

}

function rawInsert_3019936125(t_3019936129, data_3019936130, data_3019936130_Idx, key_3019936131, val_3019936132, hc_3019936133, h_3019936134) {
    data_3019936130[data_3019936130_Idx][chckIndx(h_3019936134, 0, (data_3019936130[data_3019936130_Idx]).length - 1)].Field1 = nimCopy(data_3019936130[data_3019936130_Idx][chckIndx(h_3019936134, 0, (data_3019936130[data_3019936130_Idx]).length - 1)].Field1, key_3019936131, NTI2046820355);
    data_3019936130[data_3019936130_Idx][chckIndx(h_3019936134, 0, (data_3019936130[data_3019936130_Idx]).length - 1)].Field2 = val_3019936132;
    data_3019936130[data_3019936130_Idx][chckIndx(h_3019936134, 0, (data_3019936130[data_3019936130_Idx]).length - 1)].Field0 = hc_3019936133;

  
}

function enlarge_3019935689(t_3019935692) {
    var n_3019935695 = [];
    n_3019935695 = new Array(chckRange(mulInt((t_3019935692.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019935692.data).length, 2), 0, 2147483647) ; ++i) { n_3019935695[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3019935692.data; t_3019935692.data = n_3019935695; n_3019935695 = Temporary1;    Label2: {
      var i_3019935793 = 0;
      var colontmp__2969567546 = 0;
      colontmp__2969567546 = (n_3019935695).length - 1;
      var res_2969567547 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567547 <= colontmp__2969567546)) break Label4;
            i_3019935793 = res_2969567547;
            var eh_3019935874 = n_3019935695[chckIndx(i_3019935793, 0, (n_3019935695).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019935874)) {
            var j_3019935878 = (eh_3019935874 & (t_3019935692.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019935692.data[chckIndx(j_3019935878, 0, (t_3019935692.data).length - 1)].Field0)) break Label6;
                  j_3019935878 = nextTry_1308622883(j_3019935878, (t_3019935692.data).length - 1);
                }
            };
            rawInsert_3019936125(t_3019935692, t_3019935692, "data", n_3019935695[chckIndx(i_3019935793, 0, (n_3019935695).length - 1)].Field1, n_3019935695[chckIndx(i_3019935793, 0, (n_3019935695).length - 1)].Field2, eh_3019935874, j_3019935878);
            }
            
            res_2969567547 = addInt(res_2969567547, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019936375(t_3019936378, key_3019936379, hc_3019936380) {
  var result_3019936381 = 0;

  BeforeRet: {
    if (((t_3019936378.data).length == 0)) {
    result_3019936381 = -1;
    break BeforeRet;
    }
    
    var h_3019936466 = (hc_3019936380 & (t_3019936378.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019936378.data[chckIndx(h_3019936466, 0, (t_3019936378.data).length - 1)].Field0)) break Label2;
          if (((t_3019936378.data[chckIndx(h_3019936466, 0, (t_3019936378.data).length - 1)].Field0 == hc_3019936380) && HEX3DHEX3D_2046820626(t_3019936378.data[chckIndx(h_3019936466, 0, (t_3019936378.data).length - 1)].Field1, key_3019936379))) {
          result_3019936381 = h_3019936466;
          break BeforeRet;
          }
          
          h_3019936466 = nextTry_1308622883(h_3019936466, (t_3019936378.data).length - 1);
        }
    };
    result_3019936381 = subInt(-1, h_3019936466);
  };

  return result_3019936381;

}

function HEX5BHEX5DHEX3D_3019934834(t_3019934837, key_3019934838, val_3019934839) {
    if (((t_3019934837.data).length == 0)) {
    var correctSizeHEX60gensym307_3019934923 = slotsNeeded_1308622891(32);
    t_3019934837.counter = 0;
    t_3019934837.data = new Array(chckRange(correctSizeHEX60gensym307_3019934923, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym307_3019934923, 0, 2147483647) ; ++i) { t_3019934837.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3019934928 = [0];
    var index_3019935264 = rawGet_3019934929(t_3019934837, key_3019934838, hc_3019934928, 0);
    if ((0 <= index_3019935264)) {
    t_3019934837.data[chckIndx(index_3019935264, 0, (t_3019934837.data).length - 1)].Field2 = val_3019934839;
    }
    else {
      if (((t_3019934837.data).length == 0)) {
      var correctSizeHEX60gensym312_3019935427 = slotsNeeded_1308622891(32);
      t_3019934837.counter = 0;
      t_3019934837.data = new Array(chckRange(correctSizeHEX60gensym312_3019935427, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym312_3019935427, 0, 2147483647) ; ++i) { t_3019934837.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3019935432(t_3019934837)) {
      enlarge_3019935689(t_3019934837);
      index_3019935264 = rawGetKnownHC_3019936375(t_3019934837, key_3019934838, hc_3019934928[0]);
      }
      
      index_3019935264 = subInt(-1, index_3019935264);
      rawInsert_3019936125(t_3019934837, t_3019934837, "data", key_3019934838, val_3019934839, hc_3019934928[0], index_3019935264);
      t_3019934837.counter = addInt(t_3019934837.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_3019948021(t_3019948024, key_3019948025, val_3019948026) {
    HEX5BHEX5DHEX3D_3019934834(t_3019948024, key_3019948025, val_3019948026);

  
}

function base_3003121758(node_3003121759) {
  var result_3003121760 = null;

  BeforeRet: {
    if ((node_3003121759.parent == null)) {
    result_3003121760 = node_3003121759;
    break BeforeRet;
    }
    
    result_3003121760 = base_3003121758(node_3003121759.parent);
    break BeforeRet;
  };

  return result_3003121760;

}

function len_3019948709(t_3019948712) {
  var result_3019948713 = 0;

    result_3019948713 = t_3019948712.counter;

  return result_3019948713;

}

function computeSymbolsImpl_3019899441(ctx_3019899442, node_3019899443) {
      var Temporary3;
      var Temporary4;
                var Temporary13;
      var Temporary14;
              var Temporary18;
                var Temporary23;

  var result_3019947816 = null;

    var logQueryHEX60gensym500_3019947818 = (ctx_3019899442.enableLogging || ctx_3019899442.enableQueryLogging);
    if (logQueryHEX60gensym500_3019947818) {
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym500_3019947818) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899443) || []));
    }
    
    try {
    result_3019947816 = newTable_3019934635(32);
      var oHEX60gensym501_3019947900 = findWithParentRec_3003123589(node_3019899443, 7);
      if (!isSome_3003123546(oHEX60gensym501_3019947900)) Temporary4 = false; else {        var parentInNodeList_3019947946 = get_3003123566(oHEX60gensym501_3019947900);
        Temporary4 = true;      }      if (!Temporary4) Temporary3 = false; else {        Temporary3 = !((parentInNodeList_3019947946.parent.parent == null));      }    if (Temporary3) {
    var parentSymbols_3019947951 = computeSymbols_3019922062(ctx_3019899442, parentInNodeList_3019947946.parent, true);
    Label5: {
      var id_3019947956 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var sym_3019947957 = null;
      var L_2969567509 = len_3087009061(parentSymbols_3019947951);
      Label6: {
        var h_2969567511 = 0;
        var colontmp__2969567512 = 0;
        colontmp__2969567512 = (parentSymbols_3019947951.data).length - 1;
        var res_2969567513 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_2969567513 <= colontmp__2969567512)) break Label8;
              h_2969567511 = res_2969567513;
              if (isFilled_1308622880(parentSymbols_3019947951.data[chckIndx(h_2969567511, 0, (parentSymbols_3019947951.data).length - 1)].Field0)) {
              var colontmp__2969567516 = nimCopy(null, {Field0: nimCopy(null, parentSymbols_3019947951.data[chckIndx(h_2969567511, 0, (parentSymbols_3019947951.data).length - 1)].Field1, NTI2046820355), Field1: parentSymbols_3019947951.data[chckIndx(h_2969567511, 0, (parentSymbols_3019947951.data).length - 1)].Field2}, NTI3087008731);
              id_3019947956 = nimCopy(id_3019947956, colontmp__2969567516["Field0"], NTI2046820355);
              sym_3019947957 = colontmp__2969567516["Field1"];
              HEX5BHEX5DHEX3D_3019948021(result_3019947816, id_3019947956, sym_3019947957);
              if (!((len_3087009061(parentSymbols_3019947951) == L_2969567509))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567513 = addInt(res_2969567513, 1);
            }
        };
      };
    };
    recordDependency_3019905701(ctx_3019899442, getItem_3019905914(parentInNodeList_3019947946.parent), -1);
    var bIsOrderDependent_3019948180 = !((parentInNodeList_3019947946.parent.parent == null));
    Label9: {
      var child_3019948184 = null;
      var i_2969567519 = 0;
      var L_2969567520 = (parentInNodeList_3019947946.parent.children).length;
      Label10: {
          Label11: while (true) {
          if (!(i_2969567519 < L_2969567520)) break Label11;
            child_3019948184 = parentInNodeList_3019947946.parent.children[chckIndx(i_2969567519, 0, (parentInNodeList_3019947946.parent.children).length - 1)];
            Label12: {
              if ((bIsOrderDependent_3019948180 && (child_3019948184 == parentInNodeList_3019947946))) {
              break Label9;
              }
              
              if (((!((child_3019948184.kind == 4)) && !((child_3019948184.kind == 5))) && !((child_3019948184.kind == 6)))) {
              break Label12;
              }
              
                var oHEX60gensym507_3019948203 = computeSymbol_3019918905(ctx_3019899442, child_3019948184, true);
                if (!isSome_3087009352(oHEX60gensym507_3019948203)) Temporary13 = false; else {                  var symbol_3019948249 = get_3087009372(oHEX60gensym507_3019948203);
                  Temporary13 = true;                }              if (Temporary13) {
              HEX5BHEX5DHEX3D_3019948021(result_3019947816, symbol_3019948249.id, symbol_3019948249);
              }
              
            };
            i_2969567519 = addInt(i_2969567519, 1);
            if (!(((parentInNodeList_3019947946.parent.children).length == L_2969567520))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      var oHEX60gensym508_3019948321 = findWithParentRec_3003123589(node_3019899443, 11);
      if (!isSome_3003123546(oHEX60gensym508_3019948321)) Temporary14 = false; else {        var parentInFunctionDef_3019948367 = get_3003123566(oHEX60gensym508_3019948321);
        Temporary14 = true;      }    if (Temporary14) {
    var functionDefinition_3019948368 = parentInFunctionDef_3019948367.parent;
    if ((0 < len_3003121752(functionDefinition_3019948368))) {
    var params_3019948369 = HEX5BHEX5D_3003121748(functionDefinition_3019948368, 0);
    recordDependency_3019905701(ctx_3019899442, getItem_3019905914(params_3019948369), -1);
    Label15: {
      var param_3019948373 = null;
      var i_2969567523 = 0;
      var L_2969567524 = (params_3019948369.children).length;
      Label16: {
          Label17: while (true) {
          if (!(i_2969567523 < L_2969567524)) break Label17;
            param_3019948373 = params_3019948369.children[chckIndx(i_2969567523, 0, (params_3019948369.children).length - 1)];
            recordDependency_3019905701(ctx_3019899442, getItem_3019905914(param_3019948373), -1);
              var oHEX60gensym510_3019948376 = computeSymbol_3019918905(ctx_3019899442, param_3019948373, true);
              if (!isSome_3087009352(oHEX60gensym510_3019948376)) Temporary18 = false; else {                var symbol_3019948422 = get_3087009372(oHEX60gensym510_3019948376);
                Temporary18 = true;              }            if (Temporary18) {
            HEX5BHEX5DHEX3D_3019948021(result_3019947816, param_3019948373.id, symbol_3019948422);
            }
            
            i_2969567523 = addInt(i_2969567523, 1);
            if (!(((params_3019948369.children).length == L_2969567524))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    }
    }
    var root_3019948492 = base_3003121758(node_3019899443);
    recordDependency_3019905701(ctx_3019899442, getItem_3019905914(root_3019948492), -1);
    Label19: {
      var child_3019948496 = null;
      var i_2969567528 = 0;
      var L_2969567529 = (root_3019948492.children).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2969567528 < L_2969567529)) break Label21;
            child_3019948496 = root_3019948492.children[chckIndx(i_2969567528, 0, (root_3019948492.children).length - 1)];
            Label22: {
              if (((!((child_3019948496.kind == 4)) && !((child_3019948496.kind == 5))) && !((child_3019948496.kind == 6)))) {
              break Label22;
              }
              
                var oHEX60gensym514_3019948511 = computeSymbol_3019918905(ctx_3019899442, child_3019948496, true);
                if (!isSome_3087009352(oHEX60gensym514_3019948511)) Temporary23 = false; else {                  var symbol_3019948557 = get_3087009372(oHEX60gensym514_3019948511);
                  Temporary23 = true;                }              if (Temporary23) {
              HEX5BHEX5DHEX3D_3019948021(result_3019947816, symbol_3019948557.id, symbol_3019948557);
              }
              
            };
            i_2969567528 = addInt(i_2969567528, 1);
            if (!(((root_3019948492.children).length == L_2969567529))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label24: {
      var key_3019949050 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3019949051 = null;
      var L_2969567536 = len_3019948709(ctx_3019899442.globalScope);
      Label25: {
        var h_2969567538 = 0;
        var colontmp__2969567539 = 0;
        colontmp__2969567539 = (ctx_3019899442.globalScope.data).length - 1;
        var res_2969567540 = 0;
        Label26: {
            Label27: while (true) {
            if (!(res_2969567540 <= colontmp__2969567539)) break Label27;
              h_2969567538 = res_2969567540;
              if (isFilled_1308622880(ctx_3019899442.globalScope.data[chckIndx(h_2969567538, 0, (ctx_3019899442.globalScope.data).length - 1)].Field0)) {
              var colontmp__2969567543 = nimCopy(null, {Field0: nimCopy(null, ctx_3019899442.globalScope.data[chckIndx(h_2969567538, 0, (ctx_3019899442.globalScope.data).length - 1)].Field1, NTI2046820355), Field1: ctx_3019899442.globalScope.data[chckIndx(h_2969567538, 0, (ctx_3019899442.globalScope.data).length - 1)].Field2}, NTI3019928015);
              key_3019949050 = nimCopy(key_3019949050, colontmp__2969567543["Field0"], NTI2046820355);
              symbol_3019949051 = colontmp__2969567543["Field1"];
              recordDependency_3019905701(ctx_3019899442, getItem_3019906700(symbol_3019949051), -1);
              HEX5BHEX5DHEX3D_3019948021(result_3019947816, symbol_3019949051.id, symbol_3019949051);
              if (!((len_3019948709(ctx_3019899442.globalScope) == L_2969567536))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567540 = addInt(res_2969567540, 1);
            }
        };
      };
    };
    } finally {
    if ((logQueryHEX60gensym500_3019947818 && false)) {
    rawEcho((repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3019905211(result_3019947816) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym500_3019947818) {
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], 1);
    }
    
    }

  return result_3019947816;

}

function HEX5BHEX5DHEX3D_3019900790(t_3019900793, key_3019900794, val_3019900795) {
    t_3019900793.set(mapKeyJs_3019899747(key_3019900794), val_3019900795);

  
}

function fingerprint_3087008999(symbols_3087009007) {
  var result_3087009008 = [[]];

    result_3087009008[0] = nimCopy(null, [], NTI2013268507);
    Label1: {
      var key_3087009323 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var value_3087009324 = null;
      var L_2969567551 = len_3087009061(symbols_3087009007);
      Label2: {
        var h_2969567553 = 0;
        var colontmp__2969567554 = 0;
        colontmp__2969567554 = (symbols_3087009007.data).length - 1;
        var res_2969567555 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969567555 <= colontmp__2969567554)) break Label4;
              h_2969567553 = res_2969567555;
              if (isFilled_1308622880(symbols_3087009007.data[chckIndx(h_2969567553, 0, (symbols_3087009007.data).length - 1)].Field0)) {
              var colontmp__2969567558 = nimCopy(null, {Field0: nimCopy(null, symbols_3087009007.data[chckIndx(h_2969567553, 0, (symbols_3087009007.data).length - 1)].Field1, NTI2046820355), Field1: symbols_3087009007.data[chckIndx(h_2969567553, 0, (symbols_3087009007.data).length - 1)].Field2}, NTI3087008731);
              key_3087009323 = nimCopy(key_3087009323, colontmp__2969567558["Field0"], NTI2046820355);
              value_3087009324 = colontmp__2969567558["Field1"];
              add_3087008398(result_3087009008, 0, fingerprint_3087008944(value_3087009324));
              if (!((len_3087009061(symbols_3087009007) == L_2969567551))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567555 = addInt(res_2969567555, 1);
            }
        };
      };
    };

  return result_3087009008[0];

}

function init_3019900889(result_3019900892, result_3019900892_Idx, capacity_3019900893) {
    result_3019900892[result_3019900892_Idx] = (new Map());

  
}

function contains_3019900977(t_3019900980, key_3019900981) {
  var result_3019900982 = false;

    result_3019900982 = t_3019900980.has(mapKeyJs_3019899557(key_3019900981));

  return result_3019900982;

}

function HEX5BHEX5D_3019901076(t_3019901079, key_3019901080) {
  var result_3019901081 = null;

    result_3019901081 = t_3019901079.get(mapKeyJs_3019899557(key_3019901080));

  return result_3019901081;

}

function computeSymbolTypeImpl_3019899446(ctx_3019899447, symbol_3019899448) {
      var Temporary3;
      var Temporary4;

  var result_3019936815 = null;

  BeforeRet: {
    var logQueryHEX60gensym320_3019936817 = (ctx_3019899447.enableLogging || ctx_3019899447.enableQueryLogging);
    if (logQueryHEX60gensym320_3019936817) {
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym320_3019936817) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3087008911(symbol_3019899448) || []));
    }
    
    try {
    switch (symbol_3019899448.kind) {
    case 0:
      var Temporary3 = symbol_3019899448;
      if (ConstSet126[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3019936815 = computeType_3019912985(ctx_3019899447, Temporary3.node, true);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3019899448;
      if (ConstSet127[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3019936815 = Temporary4.typ;
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym320_3019936817 && true)) {
    rawEcho((repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008187(result_3019936815) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym320_3019936817) {
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], 1);
    }
    
    }
  };

  return result_3019936815;

}

function HEX5BHEX5DHEX3D_3019901155(t_3019901158, key_3019901159, val_3019901160) {
    t_3019901158.set(mapKeyJs_3019901167(key_3019901159), val_3019901160);

  
}

function init_3019901265(result_3019901268, result_3019901268_Idx, capacity_3019901269) {
    result_3019901268[result_3019901268_Idx] = (new Map());

  
}

function computeSymbolValueImpl_3019899449(ctx_3019899450, symbol_3019899451) {
      var Temporary3;
      var Temporary4;

  var result_3019936831 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym321_3019936833 = (ctx_3019899450.enableLogging || ctx_3019899450.enableQueryLogging);
    if (logQueryHEX60gensym321_3019936833) {
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym321_3019936833) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3087008911(symbol_3019899451) || []));
    }
    
    try {
    switch (symbol_3019899451.kind) {
    case 0:
      var Temporary3 = symbol_3019899451;
      if (ConstSet128[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3019936831 = nimCopy(result_3019936831, computeValue_3019916118(ctx_3019899450, Temporary3.node, true), NTI3087007751);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3019899451;
      if (ConstSet129[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3019936831 = nimCopy(result_3019936831, Temporary4.value, NTI3087007751);
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym321_3019936833 && true)) {
    rawEcho((repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008494(result_3019936831) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym321_3019936833) {
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], 1);
    }
    
    }
  };

  return result_3019936831;

}

function HEX5BHEX5DHEX3D_3019901513(t_3019901516, key_3019901517, val_3019901518) {
    t_3019901516.set(mapKeyJs_3019901167(key_3019901517), val_3019901518);

  
}

function init_3019901612(result_3019901615, result_3019901615_Idx, capacity_3019901616) {
    result_3019901615[result_3019901615_Idx] = (new Map());

  
}

function contains_3019901700(t_3019901703, key_3019901704) {
  var result_3019901705 = false;

    result_3019901705 = t_3019901703.has(mapKeyJs_3019899557(key_3019901704));

  return result_3019901705;

}

function HEX5BHEX5D_3019901799(t_3019901802, key_3019901803) {
  var result_3019901804 = null;

    result_3019901804 = t_3019901802.get(mapKeyJs_3019899557(key_3019901803));

  return result_3019901804;

}

function initTable_3137341628(initialSize_3137341631) {
  var result_3137341632 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_3137341634 = slotsNeeded_1308622891(chckRange(initialSize_3137341631, 0, 2147483647));
    result_3137341632.counter = 0;
    result_3137341632.data = new Array(chckRange(correctSizeHEX60gensym58_3137341634, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_3137341634, 0, 2147483647) ; ++i) { result_3137341632.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }
  return result_3137341632;

}

function rawGet_3137339557(t_3137339560, key_3137339561, hc_3137339562, hc_3137339562_Idx) {
  var result_3137339563 = 0;

  BeforeRet: {
    hc_3137339562[hc_3137339562_Idx] = hash_2046820630(key_3137339561);
    if ((hc_3137339562[hc_3137339562_Idx] == 0)) {
    hc_3137339562[hc_3137339562_Idx] = 314159265;
    }
    
    if (((t_3137339560.data).length == 0)) {
    result_3137339563 = -1;
    break BeforeRet;
    }
    
    var h_3137339614 = (hc_3137339562[hc_3137339562_Idx] & (t_3137339560.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137339560.data[chckIndx(h_3137339614, 0, (t_3137339560.data).length - 1)].Field0)) break Label2;
          if (((t_3137339560.data[chckIndx(h_3137339614, 0, (t_3137339560.data).length - 1)].Field0 == hc_3137339562[hc_3137339562_Idx]) && HEX3DHEX3D_2046820626(t_3137339560.data[chckIndx(h_3137339614, 0, (t_3137339560.data).length - 1)].Field1, key_3137339561))) {
          result_3137339563 = h_3137339614;
          break BeforeRet;
          }
          
          h_3137339614 = nextTry_1308622883(h_3137339614, (t_3137339560.data).length - 1);
        }
    };
    result_3137339563 = subInt(-1, h_3137339614);
  };

  return result_3137339563;

}

function mustRehash_3137339902(t_3137339904) {
  var result_3137339905 = false;

    if (!((t_3137339904.counter < (t_3137339904.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3137339905 = ((mulInt((t_3137339904.data).length, 2) < mulInt(t_3137339904.counter, 3)) || (subInt((t_3137339904.data).length, t_3137339904.counter) < 4));

  return result_3137339905;

}

function rawInsert_3137340351(t_3137340355, data_3137340356, data_3137340356_Idx, key_3137340357, val_3137340358, hc_3137340359, h_3137340360) {
    data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field1 = nimCopy(data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field1, key_3137340357, NTI2046820355);
    data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field2 = nimCopy(data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field2, val_3137340358, NTI3087007751);
    data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field0 = hc_3137340359;

  
}

function enlarge_3137340057(t_3137340060) {
    var n_3137340063 = [];
    n_3137340063 = new Array(chckRange(mulInt((t_3137340060.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3137340060.data).length, 2), 0, 2147483647) ; ++i) { n_3137340063[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    var Temporary1 = t_3137340060.data; t_3137340060.data = n_3137340063; n_3137340063 = Temporary1;    Label2: {
      var i_3137340127 = 0;
      var colontmp__2969567567 = 0;
      colontmp__2969567567 = (n_3137340063).length - 1;
      var res_2969567568 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567568 <= colontmp__2969567567)) break Label4;
            i_3137340127 = res_2969567568;
            var eh_3137340181 = n_3137340063[chckIndx(i_3137340127, 0, (n_3137340063).length - 1)].Field0;
            if (isFilled_1308622880(eh_3137340181)) {
            var j_3137340185 = (eh_3137340181 & (t_3137340060.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3137340060.data[chckIndx(j_3137340185, 0, (t_3137340060.data).length - 1)].Field0)) break Label6;
                  j_3137340185 = nextTry_1308622883(j_3137340185, (t_3137340060.data).length - 1);
                }
            };
            rawInsert_3137340351(t_3137340060, t_3137340060, "data", n_3137340063[chckIndx(i_3137340127, 0, (n_3137340063).length - 1)].Field1, n_3137340063[chckIndx(i_3137340127, 0, (n_3137340063).length - 1)].Field2, eh_3137340181, j_3137340185);
            }
            
            res_2969567568 = addInt(res_2969567568, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3137340520(t_3137340523, key_3137340524, hc_3137340525) {
  var result_3137340526 = 0;

  BeforeRet: {
    if (((t_3137340523.data).length == 0)) {
    result_3137340526 = -1;
    break BeforeRet;
    }
    
    var h_3137340577 = (hc_3137340525 & (t_3137340523.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137340523.data[chckIndx(h_3137340577, 0, (t_3137340523.data).length - 1)].Field0)) break Label2;
          if (((t_3137340523.data[chckIndx(h_3137340577, 0, (t_3137340523.data).length - 1)].Field0 == hc_3137340525) && HEX3DHEX3D_2046820626(t_3137340523.data[chckIndx(h_3137340577, 0, (t_3137340523.data).length - 1)].Field1, key_3137340524))) {
          result_3137340526 = h_3137340577;
          break BeforeRet;
          }
          
          h_3137340577 = nextTry_1308622883(h_3137340577, (t_3137340523.data).length - 1);
        }
    };
    result_3137340526 = subInt(-1, h_3137340577);
  };

  return result_3137340526;

}

function HEX5BHEX5DHEX3D_3137339496(t_3137339499, key_3137339500, val_3137339501) {
    if (((t_3137339499.data).length == 0)) {
    var correctSizeHEX60gensym3_3137339551 = slotsNeeded_1308622891(32);
    t_3137339499.counter = 0;
    t_3137339499.data = new Array(chckRange(correctSizeHEX60gensym3_3137339551, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3137339551, 0, 2147483647) ; ++i) { t_3137339499.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    }
    
    var hc_3137339556 = [0];
    var index_3137339795 = rawGet_3137339557(t_3137339499, key_3137339500, hc_3137339556, 0);
    if ((0 <= index_3137339795)) {
    t_3137339499.data[chckIndx(index_3137339795, 0, (t_3137339499.data).length - 1)].Field2 = nimCopy(t_3137339499.data[chckIndx(index_3137339795, 0, (t_3137339499.data).length - 1)].Field2, val_3137339501, NTI3087007751);
    }
    else {
      if (((t_3137339499.data).length == 0)) {
      var correctSizeHEX60gensym8_3137339897 = slotsNeeded_1308622891(32);
      t_3137339499.counter = 0;
      t_3137339499.data = new Array(chckRange(correctSizeHEX60gensym8_3137339897, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3137339897, 0, 2147483647) ; ++i) { t_3137339499.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }      }
      
      if (mustRehash_3137339902(t_3137339499)) {
      enlarge_3137340057(t_3137339499);
      index_3137339795 = rawGetKnownHC_3137340520(t_3137339499, key_3137339500, hc_3137339556[0]);
      }
      
      index_3137339795 = subInt(-1, index_3137339795);
      rawInsert_3137340351(t_3137339499, t_3137339499, "data", key_3137339500, val_3137339501, hc_3137339556[0], index_3137339795);
      t_3137339499.counter = addInt(t_3137339499.counter, 1);
    }
    

  
}

function get_1191185108(self_1191185110, otherwise_1191185111) {
    var Temporary1;

  var result_1191185112 = 0;

    if (isSome_1191185117(self_1191185110)) {
    Temporary1 = self_1191185110.val;
    }
    else {
    Temporary1 = otherwise_1191185111;
    }
    
    result_1191185112 = Temporary1;

  return result_1191185112;

}

function hasKey_3137340958(t_3137340961, key_3137340962) {
  var result_3137340963 = false;

    var hc_3137340964 = [0];
    result_3137340963 = (0 <= rawGet_3137339557(t_3137340961, key_3137340962, hc_3137340964, 0));

  return result_3137340963;

}

function contains_3137340952(t_3137340955, key_3137340956) {
  var result_3137340957 = false;

  BeforeRet: {
    result_3137340957 = hasKey_3137340958(t_3137340955, key_3137340956);
    break BeforeRet;
  };

  return result_3137340957;

}

function HEX5BHEX5D_3137341024(t_3137341027, key_3137341028) {
  var result_3137341029 = null;

    var hcHEX60gensym22_3137341030 = [0];
    var indexHEX60gensym22_3137341037 = rawGet_3137339557(t_3137341027, key_3137341028, hcHEX60gensym22_3137341030, 0);
    if ((0 <= indexHEX60gensym22_3137341037)) {
    result_3137341029 = t_3137341027.data[chckIndx(indexHEX60gensym22_3137341037, 0, (t_3137341027.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3137341028);
    }
    

  return result_3137341029;

}

function newFunctionExecutionContext_3019907459(ctxHEX60gensym87_3019907460, dataHEX60gensym87_3019907461) {
  var result_3019907462 = null;

  BeforeRet: {
    var itemHEX60gensym87_3019907463 = getItem_3019907111(dataHEX60gensym87_3019907461);
    var keyHEX60gensym87_3019907464 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym87_3019907463, NTI3036676199), Field1: -1}, NTI3036676202);
    HEX5BHEX5DHEX3D_3036679287(ctxHEX60gensym87_3019907460.depGraph.changed, keyHEX60gensym87_3019907464, ctxHEX60gensym87_3019907460.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907291(ctxHEX60gensym87_3019907460.itemsFunctionExecutionContext, itemHEX60gensym87_3019907463, dataHEX60gensym87_3019907461);
    result_3019907462 = dataHEX60gensym87_3019907461;
    break BeforeRet;
  };

  return result_3019907462;

}

function executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, node_3137340765, variables_3137340768) {
      var Temporary7;
              var Temporary12;
              var Temporary16;
        var Temporary17;
        var Temporary22;
        var Temporary27;
        var Temporary28;

  var result_3137340769 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (ctx_3137340763.enableExecutionLogging) {
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], 1);
    }
    
    try {
    if (ctx_3137340763.enableExecutionLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32], HEX24_3003123671(node_3137340765));
    }
    
    try {
    Label3: {
      var expr_3137340780 = node_3137340765;
      var pos_3137340781 = 0;
      var _ = pos_3137340781;
      if ((expr_3137340780.kind == 0)) {
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008467(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 7)) {
      var lastValue_3137340792 = errorValue_3087008438();
      Label4: {
        var child_3137340796 = null;
        var i_2969567573 = 0;
        var L_2969567574 = (node_3137340765.children).length;
        Label5: {
            Label6: while (true) {
            if (!(i_2969567573 < L_2969567574)) break Label6;
              child_3137340796 = node_3137340765.children[chckIndx(i_2969567573, 0, (node_3137340765.children).length - 1)];
              lastValue_3137340792 = nimCopy(lastValue_3137340792, executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, child_3137340796, variables_3137340768), NTI3087007751);
              i_2969567573 = addInt(i_2969567573, 1);
              if (!(((node_3137340765.children).length == L_2969567574))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3137340769 = nimCopy(result_3137340769, lastValue_3137340792, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 3)) {
      result_3137340769 = nimCopy(result_3137340769, {kind: 2, stringValue: nimCopy(null, node_3137340765.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 2)) {
++excHandler;
      try {
      Temporary7 = nsuParseInt(node_3137340765.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3137340805 = Temporary7;
      result_3137340769 = nimCopy(result_3137340769, {kind: 3, intValue: value_3137340805, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 9)) {
      if ((len_3003121752(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3137340810 = 0;
      Label9: {
          Label10: while (true) {
          if (!(addInt(index_3137340810, 1) < len_3003121752(node_3137340765))) break Label10;
            try {
            var condition_3137340815 = HEX5BHEX5D_3003121748(node_3137340765, index_3137340810);
            var trueCase_3137340816 = HEX5BHEX5D_3003121748(node_3137340765, addInt(index_3137340810, 1));
            var conditionValue_3137340817 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, condition_3137340815, variables_3137340768);
            if ((conditionValue_3137340817.kind == 0)) {
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3137340817.kind == 3))) {
            var fmtRes_3137340830 = [mnewString(0)];
            fmtRes_3137340830[0].push.apply(fmtRes_3137340830[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3137340831(fmtRes_3137340830, 0, conditionValue_3137340817, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137340830[0], NTI33554449)]);
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary12 = conditionValue_3137340817;
              if (ConstSet130[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007750)); }
            if (!((Temporary12.intValue == 0))) {
            var trueCaseValue_3137340836 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, trueCase_3137340816, variables_3137340768);
            result_3137340769 = nimCopy(result_3137340769, trueCaseValue_3137340836, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3137340810 = addInt(index_3137340810, 2);
            }
          }
      };
      if (!((modInt(len_3003121752(node_3137340765), 2) == 0))) {
      var falseCaseValue_3137340837 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, last_3003121922(node_3137340765), variables_3137340768);
      result_3137340769 = nimCopy(result_3137340769, falseCaseValue_3137340837, NTI3087007751);
      break BeforeRet;
      }
      
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008467(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 10)) {
      if ((len_3003121752(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      
      var condition_3137340842 = HEX5BHEX5D_3003121748(node_3137340765, 0);
      var body_3137340843 = HEX5BHEX5D_3003121748(node_3137340765, 1);
      var index_3137340844 = 0;
      Label13: {
          Label14: while (true) {
          if (!true) break Label14;
            try {
            var maxLoopIterations_3137340865 = get_1191185108(fec_3137340764.maxLoopIterations, 1000);
            if ((maxLoopIterations_3137340865 < index_3137340844)) {
            var fmtRes_3137340870 = [mnewString(0)];
            fmtRes_3137340870[0].push.apply(fmtRes_3137340870[0], [91,99,111,109,112,105,108,101,114,93,32,77,97,120,32,108,111,111,112,32,105,116,101,114,97,116,105,111,110,115,32,40]);;
            formatValue_2701131945(fmtRes_3137340870, 0, maxLoopIterations_3137340865, []);
            fmtRes_3137340870[0].push.apply(fmtRes_3137340870[0], [41,32,114,101,97,99,104,101,100,32,102,111,114,32]);;
            formatValue_3087008586(fmtRes_3137340870, 0, node_3137340765, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137340870[0], NTI33554449)]);
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
            break BeforeRet;
            }
            
            var conditionValue_3137340881 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, condition_3137340842, variables_3137340768);
            if ((conditionValue_3137340881.kind == 0)) {
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3137340881.kind == 3))) {
            var fmtRes_3137340894 = [mnewString(0)];
            fmtRes_3137340894[0].push.apply(fmtRes_3137340894[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3137340831(fmtRes_3137340894, 0, conditionValue_3137340881, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137340894[0], NTI33554449)]);
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary16 = conditionValue_3137340881;
              if (ConstSet131[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
            if ((Temporary16.intValue == 0)) {
            break Label13;
            }
            
            var bodyValue_3137340900 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, body_3137340843, variables_3137340768);
            if ((bodyValue_3137340900.kind == 0)) {
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3137340844 = addInt(index_3137340844, 1);
            }
          }
      };
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008467(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 1)) {
      var id_3137340909 = nimCopy(null, node_3137340765.reff, NTI2046820355);
      if (contains_3137340952(variables_3137340768, id_3137340909)) {
      result_3137340769 = nimCopy(result_3137340769, HEX5BHEX5D_3137341024(variables_3137340768, id_3137340909), NTI3087007751);
      break BeforeRet;
      }
      
        var oHEX60gensym44_3137341105 = computeSymbol_3019918905(ctx_3137340763, node_3137340765, true);
        if (!isSome_3087009352(oHEX60gensym44_3137341105)) Temporary17 = false; else {          var sym_3137341128 = get_3087009372(oHEX60gensym44_3137341105);
          Temporary17 = true;        }      if (Temporary17) {
      var value_3137341129 = computeSymbolValue_3019927950(ctx_3137340763, sym_3137341128, true);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, id_3137340909, value_3137341129);
      result_3137340769 = nimCopy(result_3137340769, value_3137341129, NTI3087007751);
      break BeforeRet;
      }
      
      var fmtRes_3137341180 = [mnewString(0)];
      fmtRes_3137341180[0].push.apply(fmtRes_3137341180[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
      formatValue_3087008586(fmtRes_3137341180, 0, node_3137340765, []);
      fmtRes_3137341180[0].push.apply(fmtRes_3137341180[0], [58,32,70,97,105,108,101,100,32,116,111,32,108,111,111,107,32,117,112,32,118,97,108,117,101,32,102,111,114,32,105,100,101,110,116,105,102,105,101,114]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341180[0], NTI33554449)]);
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 8)) {
      var function_3137341190 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, HEX5BHEX5D_3003121748(node_3137340765, 0), variables_3137340768);
      switch (function_3137341190.kind) {
      case 0:
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
        break BeforeRet;
        break;
      case 4:
        var args_3137341195 = [];
        Label18: {
          var arg_3137341232 = null;
          var colontmp__2969567579 = [];
          colontmp__2969567579 = HEX5BHEX5D_3137341205(node_3137340765.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2969567580 = 0;
          var L_2969567581 = (colontmp__2969567579).length;
          Label19: {
              Label20: while (true) {
              if (!(i_2969567580 < L_2969567581)) break Label20;
                arg_3137341232 = colontmp__2969567579[chckIndx(i_2969567580, 0, (colontmp__2969567579).length - 1)];
                var value_3137341233 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, arg_3137341232, variables_3137340768);
                if ((value_3137341233.kind == 0)) {
                result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary21 = nimCopy(null, value_3137341233, NTI3087007751);
                args_3137341195.push(Temporary21);;
                i_2969567580 = addInt(i_2969567580, 1);
                if (!(((colontmp__2969567579).length == L_2969567581))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary22 = function_3137341190;
        if (ConstSet132[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007750)); }
        result_3137340769 = nimCopy(result_3137340769, Temporary22.impl(args_3137341195), NTI3087007751);
        break BeforeRet;
        break;
      case 5:
        var args_3137341246 = [];
        Label23: {
          var arg_3137341265 = null;
          var colontmp__2969567584 = [];
          colontmp__2969567584 = HEX5BHEX5D_3137341205(node_3137340765.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2969567585 = 0;
          var L_2969567586 = (colontmp__2969567584).length;
          Label24: {
              Label25: while (true) {
              if (!(i_2969567585 < L_2969567586)) break Label25;
                arg_3137341265 = colontmp__2969567584[chckIndx(i_2969567585, 0, (colontmp__2969567584).length - 1)];
                var value_3137341266 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, arg_3137341265, variables_3137340768);
                if ((value_3137341266.kind == 0)) {
                result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary26 = nimCopy(null, value_3137341266, NTI3087007751);
                args_3137341246.push(Temporary26);;
                i_2969567585 = addInt(i_2969567585, 1);
                if (!(((colontmp__2969567584).length == L_2969567586))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary27 = function_3137341190;
        if (ConstSet133[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007750)); }
        var fec_3137341275 = newFunctionExecutionContext_3019907459(ctx_3137340763, {node: Temporary27.node, arguments: nimCopy(null, args_3137341246, NTI3137340421), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
        result_3137340769 = nimCopy(result_3137340769, computeFunctionExecution_3019930710(ctx_3137340763, fec_3137341275), NTI3087007751);
        break BeforeRet;
        break;
      default: 
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
        break BeforeRet;
        break;
      }
      }
      else {
      if ((expr_3137340780.kind == 5)) {
      if ((len_3003121752(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3137341280 = HEX5BHEX5D_3003121748(node_3137340765, 1);
      var value_3137341281 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, valueNode_3137341280, variables_3137340768);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, node_3137340765.id, value_3137341281);
      result_3137340769 = nimCopy(result_3137340769, value_3137341281, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 6)) {
      if ((len_3003121752(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3137341332 = HEX5BHEX5D_3003121748(node_3137340765, 1);
      var value_3137341333 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, valueNode_3137341332, variables_3137340768);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, node_3137340765.id, value_3137341333);
      result_3137340769 = nimCopy(result_3137340769, value_3137341333, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 4)) {
      var id_3137341384 = nimCopy(null, node_3137340765.id, NTI2046820355);
      if (contains_3137340952(variables_3137340768, id_3137341384)) {
      result_3137340769 = nimCopy(result_3137340769, HEX5BHEX5D_3137341024(variables_3137340768, id_3137341384), NTI3087007751);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3137340780.kind == 13)) {
      if ((len_3003121752(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
      break BeforeRet;
      }
      
      var targetNode_3137341494 = HEX5BHEX5D_3003121748(node_3137340765, 0);
      var valueNode_3137341495 = HEX5BHEX5D_3003121748(node_3137340765, 1);
        var oHEX60gensym55_3137341498 = computeSymbol_3019918905(ctx_3137340763, targetNode_3137341494, true);
        if (!isSome_3087009352(oHEX60gensym55_3137341498)) Temporary28 = false; else {          var sym_3137341521 = get_3087009372(oHEX60gensym55_3137341498);
          Temporary28 = true;        }      if (Temporary28) {
      var value_3137341522 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, valueNode_3137341495, variables_3137340768);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, sym_3137341521.id, value_3137341522);
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008467(), NTI3087007751);
      break BeforeRet;
      }
      else {
        var fmtRes_3137341573 = [mnewString(0)];
        fmtRes_3137341573[0].push.apply(fmtRes_3137341573[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
        formatValue_3087008586(fmtRes_3137341573, 0, node_3137340765, []);
        fmtRes_3137341573[0].push.apply(fmtRes_3137341573[0], [58,32,70,97,105,108,101,100,32,116,111,32,97,115,115,105,103,110,32,116,111,32]);;
        formatValue_3087008586(fmtRes_3137341573, 0, targetNode_3137341494, []);
        fmtRes_3137341573[0].push.apply(fmtRes_3137341573[0], [58,32,110,111,32,115,121,109,98,111,108,32,102,111,117,110,100]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341573[0], NTI33554449)]);
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
        break BeforeRet;
      }
      
      }
      else {
        var fmtRes_3137341588 = [mnewString(0)];
        fmtRes_3137341588[0].push.apply(fmtRes_3137341588[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3087008586(fmtRes_3137341588, 0, node_3137340765, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341588[0], NTI33554449)]);
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008438(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}}}}}
    };
    } finally {
    if (ctx_3137340763.enableExecutionLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [45,62,32], HEX24_3087008494(result_3137340769));
    }
    
    }
    } finally {
    if (ctx_3137340763.enableExecutionLogging) {
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], 1);
    }
    
    }
  };

  return result_3137340769;

}

function computeFunctionExecutionImpl2_3137341623(ctx_3137341624, fec_3137341625) {
      var Temporary4;
        var Temporary5;

  var result_3137341626 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var body_3137341627 = HEX5BHEX5D_3003121748(fec_3137341625.node, 2);
    var variables_3137341639 = [initTable_3137341628(32)];
    var params_3137341640 = HEX5BHEX5D_3003121748(fec_3137341625.node, 0);
    Label1: {
      var i_3137341682 = 0;
      var arg_3137341683 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567561 = 0;
      var L_2969567562 = (fec_3137341625.arguments).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567561 < L_2969567562)) break Label3;
            i_3137341682 = i_2969567561;
            arg_3137341683 = nimCopy(arg_3137341683, fec_3137341625.arguments[chckIndx(i_2969567561, 0, (fec_3137341625.arguments).length - 1)], NTI3087007751);
            if ((len_3003121752(params_3137341640) <= i_3137341682)) {
            var fmtRes_3137341688 = [mnewString(0)];
            fmtRes_3137341688[0].push.apply(fmtRes_3137341688[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,44,32,101,120,112,101,99,116,101,100,32]);;
            formatValue_2701131945(fmtRes_3137341688, 0, len_3003121752(params_3137341640), []);
            fmtRes_3137341688[0].push.apply(fmtRes_3137341688[0], [44,32,103,111,116,32]);;
            formatValue_2701131945(fmtRes_3137341688, 0, (fec_3137341625.arguments).length, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341688[0], NTI33554449)]);
            result_3137341626 = nimCopy(result_3137341626, errorValue_3087008438(), NTI3087007751);
            break BeforeRet;
            }
            
            var param_3137341702 = HEX5BHEX5D_3003121748(params_3137341640, i_3137341682);
            HEX5BHEX5DHEX3D_3137339496(variables_3137341639[0], param_3137341702.id, arg_3137341683);
            i_2969567561 = addInt(i_2969567561, 1);
            if (!(((fec_3137341625.arguments).length == L_2969567562))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var bodyResult_3137341749 = executeNodeRec_3137340762(ctx_3137341624, fec_3137341625, body_3137341627, variables_3137341639[0]);
    if ((bodyResult_3137341749.kind == 0)) {
    result_3137341626 = nimCopy(result_3137341626, errorValue_3087008438(), NTI3087007751);
    break BeforeRet;
    }
    
    var functionType_3137341754 = computeType_3019912985(ctx_3137341624, fec_3137341625.node, true);
      if (!(functionType_3137341754.kind == 4)) Temporary4 = false; else {        var Temporary5 = functionType_3137341754;
        if (ConstSet134[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary4 = (Temporary5.returnType.kind == 1);      }    if (Temporary4) {
    result_3137341626 = nimCopy(result_3137341626, voidValue_3087008467(), NTI3087007751);
    break BeforeRet;
    }
    
    result_3137341626 = nimCopy(result_3137341626, bodyResult_3137341749, NTI3087007751);
    break BeforeRet;
  };

  return result_3137341626;

}

function computeFunctionExecutionImpl_3019899452(ctx_3019899453, fec_3019899454) {
  var result_3019934122 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym297_3019934124 = (ctx_3019899453.enableLogging || ctx_3019899453.enableQueryLogging);
    if (logQueryHEX60gensym297_3019934124) {
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym297_3019934124) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3087008578(fec_3019899454) || []));
    }
    
    try {
    result_3019934122 = nimCopy(result_3019934122, computeFunctionExecutionImpl2_3137341623(ctx_3019899453, fec_3019899454), NTI3087007751);
    break BeforeRet;
    } finally {
    if ((logQueryHEX60gensym297_3019934124 && true)) {
    rawEcho((repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008494(result_3019934122) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym297_3019934124) {
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], 1);
    }
    
    }
  };

  return result_3019934122;

}

function HEX5BHEX5DHEX3D_3019901887(t_3019901890, key_3019901891, val_3019901892) {
    t_3019901890.set(mapKeyJs_3019901899(key_3019901891), val_3019901892);

  
}

function init_3019902001(result_3019902004, result_3019902004_Idx, capacity_3019902005) {
    result_3019902004[result_3019902004_Idx] = (new Map());

  
}

function contains_3019902089(t_3019902092, key_3019902093) {
  var result_3019902094 = false;

    result_3019902094 = t_3019902092.has(mapKeyJs_3019899557(key_3019902093));

  return result_3019902094;

}

function HEX5BHEX5D_3019902188(t_3019902191, key_3019902192) {
  var result_3019902193 = null;

    result_3019902193 = t_3019902191.get(mapKeyJs_3019899557(key_3019902192));

  return result_3019902193;

}

function dependOnCurrentRevision_3019905725(ctxHEX60gensym73_3019905726) {
    if ((0 < (ctxHEX60gensym73_3019905726.dependencyStack).length)) {
    ctxHEX60gensym73_3019905726.dependencyStack[chckIndx((ctxHEX60gensym73_3019905726.dependencyStack).length - 1, 0, (ctxHEX60gensym73_3019905726.dependencyStack).length - 1)].push({Field0: {Field0: nimCopy(null, dependencyGlobalRevision_3036676213, NTI2046820355), Field1: -1}, Field1: -1});;
    }
    

  
}

function initTable_3120565646(initialSize_3120565649) {
  var result_3120565650 = ({data: [], counter: 0});

    var correctSizeHEX60gensym96_3120565652 = slotsNeeded_1308622891(chckRange(initialSize_3120565649, 0, 2147483647));
    result_3120565650.counter = 0;
    result_3120565650.data = new Array(chckRange(correctSizeHEX60gensym96_3120565652, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3120565652, 0, 2147483647) ; ++i) { result_3120565650.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }
  return result_3120565650;

}

function rawGet_3087010437(t_3087010440, key_3087010441, hc_3087010442, hc_3087010442_Idx) {
  var result_3087010443 = 0;

  BeforeRet: {
    hc_3087010442[hc_3087010442_Idx] = hash_2046820630(key_3087010441);
    if ((hc_3087010442[hc_3087010442_Idx] == 0)) {
    hc_3087010442[hc_3087010442_Idx] = 314159265;
    }
    
    if (((t_3087010440.data).length == 0)) {
    result_3087010443 = -1;
    break BeforeRet;
    }
    
    var h_3087010495 = (hc_3087010442[hc_3087010442_Idx] & (t_3087010440.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3087010440.data[chckIndx(h_3087010495, 0, (t_3087010440.data).length - 1)].Field0)) break Label2;
          if (((t_3087010440.data[chckIndx(h_3087010495, 0, (t_3087010440.data).length - 1)].Field0 == hc_3087010442[hc_3087010442_Idx]) && HEX3DHEX3D_2046820626(t_3087010440.data[chckIndx(h_3087010495, 0, (t_3087010440.data).length - 1)].Field1, key_3087010441))) {
          result_3087010443 = h_3087010495;
          break BeforeRet;
          }
          
          h_3087010495 = nextTry_1308622883(h_3087010495, (t_3087010440.data).length - 1);
        }
    };
    result_3087010443 = subInt(-1, h_3087010495);
  };

  return result_3087010443;

}

function hasKey_3087010430(t_3087010433, key_3087010434) {
  var result_3087010435 = false;

    var hc_3087010436 = [0];
    result_3087010435 = (0 <= rawGet_3087010437(t_3087010433, key_3087010434, hc_3087010436, 0));

  return result_3087010435;

}

function contains_3120562541(t_3120562544, key_3120562545) {
  var result_3120562546 = false;

  BeforeRet: {
    result_3120562546 = hasKey_3087010430(t_3120562544, key_3120562545);
    break BeforeRet;
  };

  return result_3120562546;

}

function rawGet_3120562785(t_3120562788, key_3120562789, hc_3120562790, hc_3120562790_Idx) {
  var result_3120562791 = 0;

  BeforeRet: {
    hc_3120562790[hc_3120562790_Idx] = hash_2046820630(key_3120562789);
    if ((hc_3120562790[hc_3120562790_Idx] == 0)) {
    hc_3120562790[hc_3120562790_Idx] = 314159265;
    }
    
    if (((t_3120562788.data).length == 0)) {
    result_3120562791 = -1;
    break BeforeRet;
    }
    
    var h_3120562842 = (hc_3120562790[hc_3120562790_Idx] & (t_3120562788.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3120562788.data[chckIndx(h_3120562842, 0, (t_3120562788.data).length - 1)].Field0)) break Label2;
          if (((t_3120562788.data[chckIndx(h_3120562842, 0, (t_3120562788.data).length - 1)].Field0 == hc_3120562790[hc_3120562790_Idx]) && HEX3DHEX3D_2046820626(t_3120562788.data[chckIndx(h_3120562842, 0, (t_3120562788.data).length - 1)].Field1, key_3120562789))) {
          result_3120562791 = h_3120562842;
          break BeforeRet;
          }
          
          h_3120562842 = nextTry_1308622883(h_3120562842, (t_3120562788.data).length - 1);
        }
    };
    result_3120562791 = subInt(-1, h_3120562842);
  };

  return result_3120562791;

}

function mustRehash_3120563130(t_3120563132) {
  var result_3120563133 = false;

    if (!((t_3120563132.counter < (t_3120563132.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3120563133 = ((mulInt((t_3120563132.data).length, 2) < mulInt(t_3120563132.counter, 3)) || (subInt((t_3120563132.data).length, t_3120563132.counter) < 4));

  return result_3120563133;

}

function rawInsert_3120563579(t_3120563583, data_3120563584, data_3120563584_Idx, key_3120563585, val_3120563586, hc_3120563587, h_3120563588) {
    data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field1 = nimCopy(data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field1, key_3120563585, NTI2046820355);
    data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field2 = nimCopy(data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field2, val_3120563586, NTI3087007774);
    data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field0 = hc_3120563587;

  
}

function enlarge_3120563285(t_3120563288) {
    var n_3120563291 = [];
    n_3120563291 = new Array(chckRange(mulInt((t_3120563288.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3120563288.data).length, 2), 0, 2147483647) ; ++i) { n_3120563291[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    var Temporary1 = t_3120563288.data; t_3120563288.data = n_3120563291; n_3120563291 = Temporary1;    Label2: {
      var i_3120563355 = 0;
      var colontmp__2969567608 = 0;
      colontmp__2969567608 = (n_3120563291).length - 1;
      var res_2969567609 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567609 <= colontmp__2969567608)) break Label4;
            i_3120563355 = res_2969567609;
            var eh_3120563409 = n_3120563291[chckIndx(i_3120563355, 0, (n_3120563291).length - 1)].Field0;
            if (isFilled_1308622880(eh_3120563409)) {
            var j_3120563413 = (eh_3120563409 & (t_3120563288.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3120563288.data[chckIndx(j_3120563413, 0, (t_3120563288.data).length - 1)].Field0)) break Label6;
                  j_3120563413 = nextTry_1308622883(j_3120563413, (t_3120563288.data).length - 1);
                }
            };
            rawInsert_3120563579(t_3120563288, t_3120563288, "data", n_3120563291[chckIndx(i_3120563355, 0, (n_3120563291).length - 1)].Field1, n_3120563291[chckIndx(i_3120563355, 0, (n_3120563291).length - 1)].Field2, eh_3120563409, j_3120563413);
            }
            
            res_2969567609 = addInt(res_2969567609, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3120563748(t_3120563751, key_3120563752, hc_3120563753) {
  var result_3120563754 = 0;

  BeforeRet: {
    if (((t_3120563751.data).length == 0)) {
    result_3120563754 = -1;
    break BeforeRet;
    }
    
    var h_3120563805 = (hc_3120563753 & (t_3120563751.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3120563751.data[chckIndx(h_3120563805, 0, (t_3120563751.data).length - 1)].Field0)) break Label2;
          if (((t_3120563751.data[chckIndx(h_3120563805, 0, (t_3120563751.data).length - 1)].Field0 == hc_3120563753) && HEX3DHEX3D_2046820626(t_3120563751.data[chckIndx(h_3120563805, 0, (t_3120563751.data).length - 1)].Field1, key_3120563752))) {
          result_3120563754 = h_3120563805;
          break BeforeRet;
          }
          
          h_3120563805 = nextTry_1308622883(h_3120563805, (t_3120563751.data).length - 1);
        }
    };
    result_3120563754 = subInt(-1, h_3120563805);
  };

  return result_3120563754;

}

function HEX5BHEX5DHEX3D_3120562724(t_3120562727, key_3120562728, val_3120562729) {
    if (((t_3120562727.data).length == 0)) {
    var correctSizeHEX60gensym21_3120562779 = slotsNeeded_1308622891(32);
    t_3120562727.counter = 0;
    t_3120562727.data = new Array(chckRange(correctSizeHEX60gensym21_3120562779, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_3120562779, 0, 2147483647) ; ++i) { t_3120562727.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    }
    
    var hc_3120562784 = [0];
    var index_3120563023 = rawGet_3120562785(t_3120562727, key_3120562728, hc_3120562784, 0);
    if ((0 <= index_3120563023)) {
    t_3120562727.data[chckIndx(index_3120563023, 0, (t_3120562727.data).length - 1)].Field2 = nimCopy(t_3120562727.data[chckIndx(index_3120563023, 0, (t_3120562727.data).length - 1)].Field2, val_3120562729, NTI3087007774);
    }
    else {
      if (((t_3120562727.data).length == 0)) {
      var correctSizeHEX60gensym26_3120563125 = slotsNeeded_1308622891(32);
      t_3120562727.counter = 0;
      t_3120562727.data = new Array(chckRange(correctSizeHEX60gensym26_3120563125, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_3120563125, 0, 2147483647) ; ++i) { t_3120562727.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }      }
      
      if (mustRehash_3120563130(t_3120562727)) {
      enlarge_3120563285(t_3120562727);
      index_3120563023 = rawGetKnownHC_3120563748(t_3120562727, key_3120562728, hc_3120562784[0]);
      }
      
      index_3120563023 = subInt(-1, index_3120563023);
      rawInsert_3120563579(t_3120562727, t_3120562727, "data", key_3120562728, val_3120562729, hc_3120562784[0], index_3120563023);
      t_3120562727.counter = addInt(t_3120562727.counter, 1);
    }
    

  
}

function min_33555609(x_33555610, y_33555611) {
    var Temporary1;

  var result_33555612 = 0.0;

    if (((x_33555610 <= y_33555611) || !((y_33555611 == y_33555611)))) {
    Temporary1 = x_33555610;
    }
    else {
    Temporary1 = y_33555611;
    }
    
    result_33555612 = Temporary1;

  return result_33555612;

}

function max_33555642(x_33555643, y_33555644) {
    var Temporary1;

  var result_33555645 = 0.0;

    if (((y_33555644 <= x_33555643) || !((y_33555644 == y_33555644)))) {
    Temporary1 = x_33555643;
    }
    else {
    Temporary1 = y_33555644;
    }
    
    result_33555645 = Temporary1;

  return result_33555645;

}

function or_2147483728(a_2147483729, b_2147483730) {
  var result_2147483731 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483731.x = min_33555609(a_2147483729.x, b_2147483730.x);
    result_2147483731.y = min_33555609(a_2147483729.y, b_2147483730.y);
    result_2147483731.w = (max_33555642((a_2147483729.x + a_2147483729.w), (b_2147483730.x + b_2147483730.w)) - result_2147483731.x);
    result_2147483731.h = (max_33555642((a_2147483729.y + a_2147483729.h), (b_2147483730.y + b_2147483730.h)) - result_2147483731.y);

  return result_2147483731;

}

function HEX2B_2130706587(a_2130706588, b_2130706589) {
  var result_2130706590 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2130706590.x = (a_2130706588.x + b_2130706589.x);
    result_2130706590.y = (a_2130706588.y + b_2130706589.y);
    result_2130706590.w = a_2130706588.w;
    result_2130706590.h = a_2130706588.h;

  return result_2130706590;

}

function vec2_2164261725(xHEX60gensym45_2164261726, yHEX60gensym45_2164261727) {
  var result_2164261728 = ({x: 0.0, y: 0.0});

    result_2164261728 = nimCopy(result_2164261728, {x: xHEX60gensym45_2164261726, y: yHEX60gensym45_2164261727}, NTI2164261152);

  return result_2164261728;

}

function xy_2147483680(rect_2147483681) {
  var result_2147483682 = ({x: 0.0, y: 0.0});

    result_2147483682 = nimCopy(result_2147483682, vec2_2164261725(rect_2147483681.x, rect_2147483681.y), NTI2164261152);

  return result_2147483682;

}

function add_3087009884(node_3087009885, node_3087009885_Idx, child_3087009886) {
  var result_3087009887 = ({parent: null, first: 0, last: 0});

  BeforeRet: {
    node_3087009885[node_3087009885_Idx].children.push(child_3087009886);;
    child_3087009886.depth = addInt(node_3087009885[node_3087009885_Idx].depth, 1);
    child_3087009886.parent = node_3087009885[node_3087009885_Idx];
    child_3087009886.bounds.x = node_3087009885[node_3087009885_Idx].bounds.w;
    node_3087009885[node_3087009885_Idx].bounds = nimCopy(node_3087009885[node_3087009885_Idx].bounds, or_2147483728(node_3087009885[node_3087009885_Idx].bounds, HEX2B_2130706587(child_3087009886.bounds, xy_2147483680(node_3087009885[node_3087009885_Idx].bounds))), NTI2147483653);
    result_3087009887 = nimCopy(result_3087009887, {parent: node_3087009885[node_3087009885_Idx], first: (node_3087009885[node_3087009885_Idx].children).length - 1, last: (node_3087009885[node_3087009885_Idx].children).length}, NTI3087007774);
    break BeforeRet;
  };

  return result_3087009887;

}

function map_3087009431(s_3087009434, op_3087009436) {
  var result_3087009437 = [];

    result_3087009437 = new Array(chckRange((s_3087009434).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3087009434).length, 0, 2147483647) ; ++i) { result_3087009437[i] = null; }    Label1: {
      var i_3087009453 = 0;
      var colontmp__2969567618 = 0;
      colontmp__2969567618 = (s_3087009434).length;
      var i_2969567619 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567619 < colontmp__2969567618)) break Label3;
            i_3087009453 = i_2969567619;
            result_3087009437[chckIndx(i_3087009453, 0, (result_3087009437).length - 1)] = op_3087009436(s_3087009434[chckIndx(i_3087009453, 0, (s_3087009434).length - 1)]);
            i_2969567619 = addInt(i_2969567619, 1);
          }
      };
    };

  return result_3087009437;

}

function clone_3087009412(node_3087009413) {
    
function HEX3Aanonymous_3087009418(c_3087009426) {
      var result_3087009429 = null;

        result_3087009429 = clone_3087009412(c_3087009426);

      return result_3087009429;

    }

  var result_3087009414 = null;

    result_3087009414 = ({mhash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, orientation: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0});
    result_3087009414.id = nimCopy(result_3087009414.id, newId_2046820597(), NTI2046820355);
    result_3087009414.parent = node_3087009413.parent;
    result_3087009414.node = node_3087009413.node;
    result_3087009414.text = nimCopy(null, node_3087009413.text, NTI33554449);
    result_3087009414.bounds = nimCopy(result_3087009414.bounds, node_3087009413.bounds, NTI2147483653);
    result_3087009414.indent = node_3087009413.indent;
    result_3087009414.font = nimCopy(null, node_3087009413.font, NTI33554449);
    result_3087009414.fontSize = node_3087009413.fontSize;
    result_3087009414.render = node_3087009413.render;
    result_3087009414.children = nimCopy(null, map_3087009431(node_3087009413.children, HEX3Aanonymous_3087009418), NTI3087009001);
    Label1: {
      var c_3087009457 = null;
      var i_2969567614 = 0;
      var L_2969567615 = (result_3087009414.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567614 < L_2969567615)) break Label3;
            c_3087009457 = result_3087009414.children[chckIndx(i_2969567614, 0, (result_3087009414.children).length - 1)];
            c_3087009457.parent = result_3087009414;
            i_2969567614 = addInt(i_2969567614, 1);
            if (!(((result_3087009414.children).length == L_2969567615))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3087009414;

}

function HEX5BHEX5D_3120562610(t_3120562613, key_3120562614) {
  var result_3120562615 = null;
  var result_3120562615_Idx = 0;

    var hcHEX60gensym22_3120562616 = [0];
    var indexHEX60gensym22_3120562623 = rawGet_3087010437(t_3120562613, key_3120562614, hcHEX60gensym22_3120562616, 0);
    if ((0 <= indexHEX60gensym22_3120562623)) {
    result_3120562615 = t_3120562613.data[chckIndx(indexHEX60gensym22_3120562623, 0, (t_3120562613.data).length - 1)]; result_3120562615_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3120562614);
    }
    

  return [result_3120562615, result_3120562615_Idx];

}

function createReplacement_3120562493(input_3120562494, node_3120562495, layout_3120562496, line_3120562497, line_3120562497_Idx) {
    var Temporary1;
    var Temporary2;

  var result_3120562498 = false;

  BeforeRet: {
    if (contains_3120562541(input_3120562494.replacements, node_3120562495.id)) {
    HEX5BHEX5DHEX3D_3120562724(layout_3120562496.nodeToVisualNode, node_3120562495.id, add_3087009884(line_3120562497, line_3120562497_Idx, clone_3087009412((Temporary1 = HEX5BHEX5D_3120562610(input_3120562494.replacements, node_3120562495.id), Temporary1)[0][Temporary1[1]])));
    result_3120562498 = true;
    break BeforeRet;
    }
    
    if (contains_3120562541(input_3120562494.replacements, node_3120562495.reff)) {
    HEX5BHEX5DHEX3D_3120562724(layout_3120562496.nodeToVisualNode, node_3120562495.id, add_3087009884(line_3120562497, line_3120562497_Idx, clone_3087009412((Temporary2 = HEX5BHEX5D_3120562610(input_3120562494.replacements, node_3120562495.reff), Temporary2)[0][Temporary2[1]])));
    result_3120562498 = true;
    break BeforeRet;
    }
    
    result_3120562498 = false;
    break BeforeRet;
  };

  return result_3120562498;

}

function rect_2147483672(pos_2147483673, size_2147483674) {
  var result_2147483675 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483675.x = pos_2147483673.x;
    result_2147483675.y = pos_2147483673.y;
    result_2147483675.w = size_2147483674.x;
    result_2147483675.h = size_2147483674.y;

  return result_2147483675;

}

function vec2_2164261686() {
  var result_2164261687 = ({x: 0.0, y: 0.0});

    result_2164261687 = nimCopy(result_2164261687, {x: 0.0, y: 0.0}, NTI2164261152);

  return result_2164261687;

}

function whHEX3D_2147483689(rect_2147483690, v_2147483691) {
    rect_2147483690.w = v_2147483691.x;
    rect_2147483690.h = v_2147483691.y;

  
}

function newTextNode_3120562420(text_3120562421, color_3120562422, font_3120562423, measureText_3120562426, node_3120562427) {
  var result_3120562428 = null;

    result_3120562428 = {id: newId_2046820597(), text: nimCopy(null, text_3120562421, NTI33554449), colors: [nimCopy(null, color_3120562422, NTI33554449)], font: nimCopy(null, font_3120562423, NTI33554449), fontSize: config_3120562389[0].fontSize, node: node_3120562427, mhash: 0, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0};
    whHEX3D_2147483689(result_3120562428.bounds, measureText_3120562426(text_3120562421));

  return result_3120562428;

}

function newTextNode_3120562433(text_3120562434, colors_3120562435, font_3120562436, measureText_3120562439, node_3120562440, styleOverride_3120562450) {
  var result_3120562451 = null;

    result_3120562451 = {id: newId_2046820597(), text: nimCopy(null, text_3120562434, NTI33554449), colors: nimCopy(null, colors_3120562435, NTI3120562359), font: nimCopy(null, font_3120562436, NTI33554449), fontSize: config_3120562389[0].fontSize, node: node_3120562440, styleOverride: nimCopy(null, styleOverride_3120562450, NTI3087007788), mhash: 0, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], background: ({val: [], has: false}), depth: 0};
    whHEX3D_2147483689(result_3120562451.bounds, measureText_3120562439(text_3120562434));

  return result_3120562451;

}

function none_3120562442() {
  var result_3120562449 = ({val: {}, has: false});

  return result_3120562449;

}

function getColorForSymbol_3120564137(ctx_3120564138, sym_3120564139) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
        var Temporary6;

  var result_3120564140 = [];

  BeforeRet: {
    var typ_3120564141 = computeSymbolType_3019925190(ctx_3120564138, sym_3120564139, false);
    switch (typ_3120564141.kind) {
    case 0:
      result_3120564140 = nimCopy(null, [[105,110,118,97,108,105,100]], NTI1560281203);
      break BeforeRet;
      break;
    case 6:
      result_3120564140 = nimCopy(null, [[115,116,111,114,97,103,101,46,116,121,112,101]], NTI1560281203);
      break BeforeRet;
      break;
    case 4:
      if ((sym_3120564139.kind == 1)) {
      var Temporary1 = sym_3120564139;
      if (ConstSet137[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      switch (Temporary1.operatorNotation) {
      case 1:
      case 3:
      case 2:
        result_3120564140 = nimCopy(null, [[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], NTI1560281203);
        break BeforeRet;
        break;
      default: 
        result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3120563270);
        break BeforeRet;
        break;
      }
      }
      
      result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3120563270);
      break BeforeRet;
      break;
    default: 
      if ((sym_3120564139.kind == 0)) {
        var Temporary2 = sym_3120564139;
        if (ConstSet138[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      if ((Temporary2.node.kind == 4)) {
      result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114,46,99,111,110,115,116,97,110,116], [118,97,114,105,97,98,108,101]], NTI3120563270);
      break BeforeRet;
      }
      else {
        var Temporary4 = sym_3120564139;
        if (ConstSet139[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
        if ((Temporary4.node.kind == 6)) Temporary3 = true; else {          var Temporary5 = sym_3120564139;
          if (ConstSet140[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
          Temporary3 = (Temporary5.node.kind == 5);        }      if (Temporary3) {
        var Temporary6 = sym_3120564139;
        if (ConstSet141[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007753)); }
      if ((Temporary6.node.parent.kind == 12)) {
      result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,112,97,114,97,109,101,116,101,114], [118,97,114,105,97,98,108,101]], NTI3120563270);
      break BeforeRet;
      }
      else {
        result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101]], NTI1560281203);
        break BeforeRet;
      }
      
      }
      else {
        result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3120563270);
        break BeforeRet;
      }
      }
      }
      
      break;
    }
    result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3120563270);
    break BeforeRet;
  };

  return result_3120564140;

}

function some_3120564257(val_3120564259) {
  var result_3120564260 = ({val: {}, has: false});

    result_3120564260.has = true;
    result_3120564260.val = nimCopy(result_3120564260.val, val_3120564259, NTI3087007783);

  return result_3120564260;

}

function getStyleForSymbol_3120564206(ctx_3120564207, sym_3120564208) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3120564210 = ({val: {}, has: false});

    var style_3120564211 = nimCopy(null, ConstSet142, NTI3120563334);
    if ((sym_3120564208.kind == 0)) {
      var Temporary1 = sym_3120564208;
      if (ConstSet143[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    if ((Temporary1.node.kind == 6)) {
    style_3120564211 = nimCopy(style_3120564211, SetPlus(style_3120564211, ConstSet144), NTI3120563334);
    }
    
      var Temporary2 = sym_3120564208;
      if (ConstSet145[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    if ((Temporary2.node.kind == 4)) {
    var typ_3120564230 = computeSymbolType_3019925190(ctx_3120564207, sym_3120564208, false);
    if (!((typ_3120564230.kind == 4))) {
    style_3120564211 = nimCopy(style_3120564211, SetPlus(style_3120564211, ConstSet146), NTI3120563334);
    }
    
    }
    
    }
    else {
    if ((sym_3120564208.kind == 1)) {
      var Temporary3 = sym_3120564208;
      if (ConstSet147[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    if ((Temporary3.operatorNotation == 0)) {
    style_3120564211[1] = true;
    }
    
    }
    }
    if (!(SetEq(style_3120564211, ConstSet148))) {
    result_3120564210 = nimCopy(result_3120564210, some_3120564257(style_3120564211), NTI3087007788);
    }
    

  return result_3120564210;

}

function len_3087007976(node_3087007977) {
  var result_3087007978 = 0;

  BeforeRet: {
    result_3087007978 = (node_3087007977.children).length;
    break BeforeRet;
  };

  return result_3087007978;

}

function addLine_3087009916(node_3087009917, node_3087009917_Idx, child_3087009918, child_3087009918_Idx) {
    node_3087009917[node_3087009917_Idx].children.push(child_3087009918[child_3087009918_Idx]);;
    child_3087009918[child_3087009918_Idx].depth = addInt(node_3087009917[node_3087009917_Idx].depth, 1);
    child_3087009918[child_3087009918_Idx].parent = node_3087009917[node_3087009917_Idx];
    child_3087009918[child_3087009918_Idx].bounds.y = node_3087009917[node_3087009917_Idx].bounds.h;
    node_3087009917[node_3087009917_Idx].bounds = nimCopy(node_3087009917[node_3087009917_Idx].bounds, or_2147483728(node_3087009917[node_3087009917_Idx].bounds, HEX2B_2130706587(child_3087009918[child_3087009918_Idx].bounds, xy_2147483680(node_3087009917[node_3087009917_Idx].bounds))), NTI2147483653);

  
}

function rect_2147483666(x_2147483667, y_2147483668, w_2147483669, h_2147483670) {
  var result_2147483671 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483671.x = x_2147483667;
    result_2147483671.y = y_2147483668;
    result_2147483671.w = w_2147483669;
    result_2147483671.h = h_2147483670;

  return result_2147483671;

}

function getPrecedenceForNode_3120562190(ctx_3120562191, node_3120562192) {
      var Temporary1;
      var Temporary2;

  var result_3120562193 = 0;

  BeforeRet: {
    if ((!((node_3120562192.kind == 8)) || (len_3003121752(node_3120562192) == 0))) {
    result_3120562193 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym1_3120562200 = computeSymbol_3019918905(ctx_3120562191, HEX5BHEX5D_3003121748(node_3120562192, 0), false);
      if (!isSome_3087009352(oHEX60gensym1_3120562200)) Temporary1 = false; else {        var symbol_3120562223 = get_3087009372(oHEX60gensym1_3120562200);
        Temporary1 = true;      }    if (Temporary1) {
    switch (symbol_3120562223.kind) {
    case 1:
      var Temporary2 = symbol_3120562223;
      if (ConstSet151[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      result_3120562193 = Temporary2.precedence;
      break BeforeRet;
      break;
    case 0:
      break;
    }
    }
    
    result_3120562193 = 0;
    break BeforeRet;
  };

  return result_3120562193;

}

function some_3120562475(val_3120562477) {
  var result_3120562478 = ({val: [], has: false});

    result_3120562478.has = true;
    result_3120562478.val = nimCopy(null, val_3120562477, NTI3120562388);

  return result_3120562478;

}

function newBlockNode_3120562461(colors_3120562462, size_3120562463, node_3120562464, styleOverride_3120562473) {
  var result_3120562474 = null;

    result_3120562474 = {id: newId_2046820597(), node: node_3120562464, styleOverride: nimCopy(null, styleOverride_3120562473, NTI3087007788), background: some_3120562475(colors_3120562462), mhash: 0, parent: null, orientation: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], depth: 0};
    whHEX3D_2147483689(result_3120562474.bounds, size_3120562463);

  return result_3120562474;

}

function HEX2BHEX3D_2147483761(x_2147483763, x_2147483763_Idx, y_2147483764) {
    x_2147483763[x_2147483763_Idx] = (x_2147483763[x_2147483763_Idx] + y_2147483764);

  
}

function formatValue_3120565598(result_3120565600, result_3120565600_Idx, value_3120565601, specifier_3120565602) {
    formatValue_721420459(result_3120565600, result_3120565600_Idx, reprEnum(value_3120565601, NTI3003121667), specifier_3120565602);

  
}

function createLayoutLineForRemainingChildren_3120564275(ctx_3120564276, input_3120564277, node_3120564278, firstChildIndex_3120564279, result_3120564280, line_3120564281, line_3120564281_Idx) {
  BeforeRet: {
    if ((len_3003121752(node_3120564278) <= firstChildIndex_3120564279)) {
    break BeforeRet;
    }
    
    var _ = add_3087009884(line_3120564281, line_3120564281_Idx, newTextNode_3120562433([60], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564277.measureText, null, none_3120562442()));
    Label1: {
      var i_3120564290 = 0;
      var colontmp__2969567624 = 0;
      colontmp__2969567624 = len_3003121752(node_3120564278);
      var i_2969567625 = firstChildIndex_3120564279;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567625 < colontmp__2969567624)) break Label3;
            i_3120564290 = i_2969567625;
            if ((firstChildIndex_3120564279 < i_3120564290)) {
            var _ = add_3087009884(line_3120564281, line_3120564281_Idx, newTextNode_3120562433([44,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564277.measureText, null, none_3120562442()));
            }
            
            createLayoutLineForNode_3120564269(ctx_3120564276, input_3120564277, HEX5BHEX5D_3003121748(node_3120564278, i_3120564290), result_3120564280, line_3120564281, line_3120564281_Idx);
            i_2969567625 = addInt(i_2969567625, 1);
          }
      };
    };
    var _ = add_3087009884(line_3120564281, line_3120564281_Idx, newTextNode_3120562433([62], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564277.measureText, null, none_3120562442()));
  };

  
}

function createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx) {
        var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;

  BeforeRet: {
    var renderInline_3120564314 = (((ConstSet135[node_3120564272.kind] != undefined) && (ConstSet136[node_3120564272.parent.kind] != undefined)) && input_3120564271.inlineBlocks);
    var prevLine_3120564315 = line_3120564274[line_3120564274_Idx];
    var first_3120564319 = (prevLine_3120564315.children).length;
    try {
    var oldLineHEX60gensym42_3120564374 = [line_3120564274[line_3120564274_Idx]];
    var containerLineHEX60gensym42_3120564375 = [{id: newId_2046820597(), node: node_3120564272, parent: line_3120564274[line_3120564274_Idx], orientation: 1, depth: addInt(line_3120564274[line_3120564274_Idx].depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    if (renderInline_3120564314) {
    line_3120564274[line_3120564274_Idx] = {id: newId_2046820597(), parent: containerLineHEX60gensym42_3120564375[0], orientation: 0, depth: addInt(containerLineHEX60gensym42_3120564375[0].depth, 1), mhash: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
    }
    
    try {
    var _ = computeType_3019912985(ctx_3120564270, node_3120564272, false);
    var lastUsedChild_3120564422 = -1;
    try {
    Label4: {
      var expr_3120564423 = node_3120564272;
      var pos_3120564424 = 0;
      var _ = pos_3120564424;
      if ((expr_3120564423.kind == 0)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009884(line_3120564274, line_3120564274_Idx, {id: newId_2046820597(), colors: [nimCopy(null, config_3120562389[0].colors.empty, NTI33554449)], node: node_3120564272, bounds: rect_2147483672(vec2_2164261686(), vec2_2164261725((config_3120562389[0].fontSize * 0.5), config_3120562389[0].fontSize)), mhash: 0, parent: null, orientation: 0, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}));
      }
      
      }
      else {
      if ((expr_3120564423.kind == 2)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(node_3120564272.text, [99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99], config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272)));
      }
      
      }
      else {
      if ((expr_3120564423.kind == 3)) {
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(node_3120564272.text, [115,116,114,105,110,103], config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272));
      }
      
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      }
      else {
      if ((expr_3120564423.kind == 1)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym61_3120564549 = computeSymbol_3019918905(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009352(oHEX60gensym61_3120564549)) Temporary5 = false; else {          var sym_3120564572 = get_3087009372(oHEX60gensym61_3120564549);
          Temporary5 = true;        }      if (Temporary5) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(sym_3120564572.name, getColorForSymbol_3120564137(ctx_3120564270, sym_3120564572), config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564572))));
      }
      else {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_2046820617(node_3120564272.reff), [118,97,114,105,97,98,108,101], config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272)));
      }
      
      }
      
      }
      else {
      if ((expr_3120564423.kind == 4)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym63_3120564671 = computeSymbol_3019918905(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009352(oHEX60gensym63_3120564671)) Temporary7 = false; else {          var sym_3120564694 = get_3087009372(oHEX60gensym63_3120564671);
          Temporary7 = true;        }      if (Temporary7) {
      Temporary6 = getColorForSymbol_3120564137(ctx_3120564270, sym_3120564694);
      }
      else {
      Temporary6 = [[101,110,116,105,116,121,46,110,97,109,101,46,99,111,110,115,116,97,110,116]];
      }
      
      var color_3120564699 = nimCopy(null, Temporary6, NTI3120563236);
        var oHEX60gensym64_3120564702 = computeSymbol_3019918905(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009352(oHEX60gensym64_3120564702)) Temporary8 = false; else {          var sym_3120564725 = get_3087009372(oHEX60gensym64_3120564702);
          Temporary8 = true;        }      if (Temporary8) {
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(sym_3120564725.name, color_3120564699, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564725)));
      }
      else {
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(HEX24_2046820617(node_3120564272.id), color_3120564699, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, none_3120562442()));
      }
      
      }
      
      var typ_3120564726 = computeType_3019912985(ctx_3120564270, node_3120564272, false);
      if ((typ_3120564726.kind == 4)) {
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      }
      else {
        var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
        var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008187(typ_3120564726), config_3120562389[0].colors.typ, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
        var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      }
      
      if ((0 < len_3003121752(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      var value_3120564743 = computeValue_3019916118(ctx_3120564270, node_3120564272, false);
      switch (value_3120564743.kind) {
      case 5:
      case 4:
      case 1:
        break;
      default: 
        switch (HEX5BHEX5D_3003121748(node_3120564272, 0).kind) {
        case 3:
        case 2:
          break;
        default: 
          var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
          var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008494(value_3120564743), [115,116,114,105,110,103], config_3120562389[0].fontRegular, input_3120564271.measureText, null));
          break;
        }
        break;
      }
      }
      
      lastUsedChild_3120564422 = 0;
      }
      else {
      if ((expr_3120564423.kind == 5)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym67_3120564754 = computeSymbol_3019918905(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009352(oHEX60gensym67_3120564754)) Temporary10 = false; else {          var sym_3120564777 = get_3087009372(oHEX60gensym67_3120564754);
          Temporary10 = true;        }      if (Temporary10) {
      Temporary9 = {Field0: getColorForSymbol_3120564137(ctx_3120564270, sym_3120564777), Field1: getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564777)};
      }
      else {
      Temporary9 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3120562442()};
      }
      
      var colontmp__2969567621 = nimCopy(null, Temporary9, NTI3120563706);
      var color_3120564789 = nimCopy(null, colontmp__2969567621["Field0"], NTI3120563236);
      var style_3120564790 = nimCopy(null, colontmp__2969567621["Field1"], NTI3087007788);
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(node_3120564272.text, color_3120564789, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, style_3120564790));
      }
      
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_3003121752(node_3120564272))) {
      if ((((HEX5BHEX5D_3003121748(node_3120564272, 0).kind == 0) && ((HEX5BHEX5D_3003121748(node_3120564272, 0).text).length == 0)) && !(contains_3120562541(input_3120564271.replacements, HEX5BHEX5D_3003121748(node_3120564272, 0).id)))) {
      var typ_3120564846 = computeType_3019912985(ctx_3120564270, node_3120564272, false);
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_3003121748(node_3120564272, 0).id, add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008187(typ_3120564846), config_3120562389[0].colors.typ, config_3120562389[0].fontRegular, input_3120564271.measureText, HEX5BHEX5D_3003121748(node_3120564272, 0))));
      }
      else {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      }
      
      if ((1 < len_3003121752(node_3120564272))) {
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 6)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym71_3120564903 = computeSymbol_3019918905(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009352(oHEX60gensym71_3120564903)) Temporary12 = false; else {          var sym_3120564926 = get_3087009372(oHEX60gensym71_3120564903);
          Temporary12 = true;        }      if (Temporary12) {
      Temporary11 = {Field0: getColorForSymbol_3120564137(ctx_3120564270, sym_3120564926), Field1: getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564926)};
      }
      else {
      Temporary11 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3120562442()};
      }
      
      var colontmp__2969567622 = nimCopy(null, Temporary11, NTI3120563809);
      var color_3120564938 = nimCopy(null, colontmp__2969567622["Field0"], NTI3120563236);
      var style_3120564939 = nimCopy(null, colontmp__2969567622["Field1"], NTI3087007788);
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(node_3120564272.text, color_3120564938, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, style_3120564939));
      }
      
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32,109,117,116,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_3003121752(node_3120564272))) {
      if ((((HEX5BHEX5D_3003121748(node_3120564272, 0).kind == 0) && ((HEX5BHEX5D_3003121748(node_3120564272, 0).text).length == 0)) && !(contains_3120562541(input_3120564271.replacements, HEX5BHEX5D_3003121748(node_3120564272, 0).id)))) {
      var typ_3120564995 = computeType_3019912985(ctx_3120564270, node_3120564272, false);
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_3003121748(node_3120564272, 0).id, add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008187(typ_3120564995), config_3120562389[0].colors.typ, config_3120562389[0].fontRegular, input_3120564271.measureText, HEX5BHEX5D_3003121748(node_3120564272, 0))));
      }
      else {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      }
      
      if ((1 < len_3003121752(node_3120564272))) {
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 11)) {
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([102,110], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([40], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_3003121752(node_3120564272))) {
      var parent_3120565050 = line_3120564274[line_3120564274_Idx];
      var first_3120565051 = len_3087007976(parent_3120565050);
      Label13: {
        var i_3120565075 = 0;
        var param_3120565076 = null;
        var colontmp__2969567590 = [];
        colontmp__2969567590 = HEX5BHEX5D_3003121748(node_3120564272, 0).children;
        var i_2969567592 = 0;
        var L_2969567593 = (colontmp__2969567590).length;
        Label14: {
            Label15: while (true) {
            if (!(i_2969567592 < L_2969567593)) break Label15;
              i_3120565075 = i_2969567592;
              param_3120565076 = colontmp__2969567590[chckIndx(i_2969567592, 0, (colontmp__2969567590).length - 1)];
              if ((0 < i_3120565075)) {
              var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([44,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
              }
              
              createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, param_3120565076, result_3120564273, line_3120564274, line_3120564274_Idx);
              i_2969567592 = addInt(i_2969567592, 1);
              if (!(((colontmp__2969567590).length == L_2969567593))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((len_3003121752(HEX5BHEX5D_3003121748(node_3120564272, 0)) == 0)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_3003121748(node_3120564272, 0).id, add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([32], config_3120562389[0].colors.empty, config_3120562389[0].fontRegular, input_3120564271.measureText, HEX5BHEX5D_3003121748(node_3120564272, 0))));
      }
      else {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_3003121748(node_3120564272, 0).id, {parent: parent_3120565050, first: first_3120565051, last: len_3087007976(parent_3120565050)});
      }
      
      }
      
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([41,32], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((1 < len_3003121752(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((2 < len_3003121752(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 2), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 2;
      }
      else {
      if ((expr_3120564423.kind == 9)) {
      var parent_3120565181 = [line_3120564274[line_3120564274_Idx].parent];
      var prevIndent_3120565182 = line_3120564274[line_3120564274_Idx].indent;
      var first_3120565186 = (parent_3120565181[0].children).length;
      try {
      var i_3120565239 = 0;
      Label17: {
          Label18: while (true) {
          if (!(addInt(i_3120565239, 1) < len_3003121752(node_3120564272))) break Label18;
            try {
            if ((i_3120565239 == 0)) {
            var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([105,102,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
            }
            else {
              addLine_3087009916(parent_3120565181, 0, line_3120564274, line_3120564274_Idx);
              line_3120564274[line_3120564274_Idx] = {id: newId_2046820597(), parent: parent_3120565181[0], bounds: rect_2147483666((prevIndent_3120565182 * input_3120564271.indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565182, depth: addInt(parent_3120565181[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([101,108,105,102,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
            }
            
            createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, i_3120565239), result_3120564273, line_3120564274, line_3120564274_Idx);
            var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
            createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, addInt(i_3120565239, 1)), result_3120564273, line_3120564274, line_3120564274_Idx);
            } finally {
            i_3120565239 = addInt(i_3120565239, 2);
            }
          }
      };
      if ((modInt(len_3003121752(node_3120564272), 2) == 1)) {
      addLine_3087009916(parent_3120565181, 0, line_3120564274, line_3120564274_Idx);
      line_3120564274[line_3120564274_Idx] = {id: newId_2046820597(), parent: parent_3120565181[0], bounds: rect_2147483666((prevIndent_3120565182 * input_3120564271.indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565182, depth: addInt(parent_3120565181[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([101,108,115,101,58,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, last_3003121922(node_3120564272), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      addLine_3087009916(parent_3120565181, 0, line_3120564274, line_3120564274_Idx);
      line_3120564274[line_3120564274_Idx] = {id: newId_2046820597(), parent: parent_3120565181[0], bounds: rect_2147483666((prevIndent_3120565182 * input_3120564271.indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565182, depth: addInt(parent_3120565181[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_3120564422 = subInt(len_3003121752(node_3120564272), 1);
      } finally {
      if ((first_3120565186 < (parent_3120565181[0].children).length)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: parent_3120565181[0], first: first_3120565186, last: (parent_3120565181[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3120564423.kind == 10)) {
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([119,104,105,108,101,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
      if ((1 <= len_3003121752(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((2 <= len_3003121752(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 7)) {
      var parent_3120565260 = [line_3120564274[line_3120564274_Idx].parent];
      var first_3120565264 = addInt((parent_3120565260[0].children).length, 1);
      try {
      var prevIndent_3120565317 = line_3120564274[line_3120564274_Idx].indent;
      Label21: {
        var child_3120565321 = null;
        var i_2969567597 = 0;
        var L_2969567598 = (node_3120564272.children).length;
        Label22: {
            Label23: while (true) {
            if (!(i_2969567597 < L_2969567598)) break Label23;
              child_3120565321 = node_3120564272.children[chckIndx(i_2969567597, 0, (node_3120564272.children).length - 1)];
              addLine_3087009916(parent_3120565260, 0, line_3120564274, line_3120564274_Idx);
              line_3120564274[line_3120564274_Idx] = {id: newId_2046820597(), parent: parent_3120565260[0], bounds: rect_2147483666((prevIndent_3120565317 * input_3120564271.indent), 0.0, input_3120564271.indent, 0.0), indent: addInt(prevIndent_3120565317, 1), node: child_3120565321, depth: addInt(parent_3120565260[0].depth, 1), mhash: 0, orientation: 0, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, child_3120565321, result_3120564273, line_3120564274, line_3120564274_Idx);
              i_2969567597 = addInt(i_2969567597, 1);
              if (!(((node_3120564272.children).length == L_2969567598))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      addLine_3087009916(parent_3120565260, 0, line_3120564274, line_3120564274_Idx);
      line_3120564274[line_3120564274_Idx] = {id: newId_2046820597(), parent: parent_3120565260[0], bounds: rect_2147483666((prevIndent_3120565317 * input_3120564271.indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565317, depth: addInt(parent_3120565260[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_3120564422 = subInt(len_3003121752(node_3120564272), 1);
      } finally {
      if ((first_3120565264 < (parent_3120565260[0].children).length)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: parent_3120565260[0], first: first_3120565264, last: (parent_3120565260[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3120564423.kind == 13)) {
      if ((0 < len_3003121752(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_3003121752(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 8)) {
      if ((len_3003121752(node_3120564272) == 0)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([60,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,99,97,108,108,62], config_3120562389[0].colors.empty, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272)));
      break BeforeRet;
      }
      
      var isDivision_3120565380 = false;
        var oHEX60gensym90_3120565383 = computeSymbol_3019918905(ctx_3120564270, HEX5BHEX5D_3003121748(node_3120564272, 0), false);
        if (!isSome_3087009352(oHEX60gensym90_3120565383)) Temporary26 = false; else {          var sym_3120565406 = get_3087009372(oHEX60gensym90_3120565383);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_3120565406.kind == 1);        }      if (Temporary25) {
      if (HEX3DHEX3D_2046820626(sym_3120565406.id, IdDiv_2986344454)) {
      isDivision_3120565380 = true;
      }
      
      var Temporary27 = sym_3120565406;
      if (ConstSet149[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      switch (Temporary27.operatorNotation) {
      case 3:
        Temporary28 = 2;
        break;
      case 1:
      case 2:
        Temporary28 = 1;
        break;
      default: 
        Temporary28 = -1;
        break;
      }
      var arity_3120565411 = Temporary28;
      if ((len_3003121752(node_3120564272) == addInt(arity_3120565411, 1))) {
      var Temporary30 = sym_3120565406;
      if (ConstSet150[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3087007753)); }
      Temporary29 = Temporary30.operatorNotation;
      }
      else {
      Temporary29 = 0;
      }
      
      Temporary24 = Temporary29;
      }
      else {
      Temporary24 = 0;
      }
      
      var operatorNotation_3120565412 = Temporary24;
      switch (operatorNotation_3120565412) {
      case 3:
        var parentPrecedence_3120565413 = getPrecedenceForNode_3120562190(ctx_3120564270, node_3120564272.parent);
        var precedence_3120565414 = getPrecedenceForNode_3120562190(ctx_3120564270, node_3120564272);
        var renderParens_3120565415 = (precedence_3120565414 < parentPrecedence_3120565413);
        if (((isDivision_3120565380 && input_3120564271.renderDivisionVertically) && input_3120564271.inlineBlocks)) {
        var oldLineHEX60gensym91_3120565418 = [line_3120564274[line_3120564274_Idx]];
        var containerLineHEX60gensym91_3120565419 = [{id: newId_2046820597(), node: node_3120564272, parent: line_3120564274[line_3120564274_Idx], orientation: 1, depth: addInt(line_3120564274[line_3120564274_Idx].depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
        if (true) {
        line_3120564274[line_3120564274_Idx] = {id: newId_2046820597(), parent: containerLineHEX60gensym91_3120565419[0], orientation: 0, depth: addInt(containerLineHEX60gensym91_3120565419[0].depth, 1), mhash: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        }
        
        try {
        var parent_3120565466 = [line_3120564274[line_3120564274_Idx].parent];
        var prevIndent_3120565467 = line_3120564274[line_3120564274_Idx].indent;
        var first_3120565471 = (parent_3120565466[0].children).length;
        try {
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
        addLine_3087009916(parent_3120565466, 0, line_3120564274, line_3120564274_Idx);
        var line1_3120565524 = line_3120564274[line_3120564274_Idx];
        line_3120564274[line_3120564274_Idx] = {id: newId_2046820597(), parent: parent_3120565466[0], bounds: rect_2147483666((prevIndent_3120565467 * input_3120564271.indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565467, depth: addInt(parent_3120565466[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        var divLine_3120565529 = newBlockNode_3120562461([[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], vec2_2164261725(0.0, (config_3120562389[0].fontSize * 0.1)), HEX5BHEX5D_3003121748(node_3120564272, 0), none_3120562442());
        var _ = add_3087009884(line_3120564274, line_3120564274_Idx, divLine_3120565529);
        HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_3003121748(node_3120564272, 0).id, {parent: line_3120564274[line_3120564274_Idx], first: 0, last: 1});
        addLine_3087009916(parent_3120565466, 0, line_3120564274, line_3120564274_Idx);
        line_3120564274[line_3120564274_Idx] = {id: newId_2046820597(), parent: parent_3120565466[0], bounds: rect_2147483666((prevIndent_3120565467 * input_3120564271.indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565467, depth: addInt(parent_3120565466[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 2), result_3120564273, line_3120564274, line_3120564274_Idx);
        addLine_3087009916(parent_3120565466, 0, line_3120564274, line_3120564274_Idx);
        var line2_3120565576 = line_3120564274[line_3120564274_Idx];
        line_3120564274[line_3120564274_Idx] = {id: newId_2046820597(), parent: parent_3120565466[0], bounds: rect_2147483666((prevIndent_3120565467 * input_3120564271.indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565467, depth: addInt(parent_3120565466[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        divLine_3120565529.bounds.w = max_33555642(line1_3120565524.bounds.w, line2_3120565576.bounds.w);
        divLine_3120565529.parent.bounds.w = divLine_3120565529.bounds.w;
        var shorterLine_3120565577 = line1_3120565524;
        var longerLine_3120565578 = line2_3120565576;
        if ((longerLine_3120565578.bounds.w < shorterLine_3120565577.bounds.w)) {
        shorterLine_3120565577 = line2_3120565576;
        longerLine_3120565578 = line1_3120565524;
        }
        
        var lengthDiff_3120565579 = (longerLine_3120565578.bounds.w - shorterLine_3120565577.bounds.w);
        HEX2BHEX3D_2147483761(shorterLine_3120565577.bounds, "x", (lengthDiff_3120565579 / 2.0));
        lastUsedChild_3120564422 = 2;
        } finally {
        if ((first_3120565471 < (parent_3120565466[0].children).length)) {
        HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: parent_3120565466[0], first: first_3120565471, last: (parent_3120565466[0].children).length});
        }
        
        }
        } finally {
        if (true) {
        addLine_3087009916(containerLineHEX60gensym91_3120565419, 0, line_3120564274, line_3120564274_Idx);
        HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009884(oldLineHEX60gensym91_3120565418, 0, containerLineHEX60gensym91_3120565419[0]));
        line_3120564274[line_3120564274_Idx] = oldLineHEX60gensym91_3120565418[0];
        }
        
        }
        }
        else {
          if (renderParens_3120565415) {
          var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([40], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
          }
          
          createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
          var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([32], config_3120562389[0].colors.separator, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
          createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
          var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([32], config_3120562389[0].colors.separator, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
          createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 2), result_3120564273, line_3120564274, line_3120564274_Idx);
          if (renderParens_3120565415) {
          var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([41], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
          }
          
          lastUsedChild_3120564422 = 2;
        }
        
        break;
      case 1:
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
        lastUsedChild_3120564422 = 1;
        break;
      case 2:
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
        lastUsedChild_3120564422 = 1;
        break;
      default: 
        if ((0 < len_3003121752(node_3120564272))) {
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
        }
        
        var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([40], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
        Label33: {
          var i_3120565588 = 0;
          var colontmp__2969567601 = 0;
          colontmp__2969567601 = len_3003121752(node_3120564272);
          var i_2969567602 = 1;
          Label34: {
              Label35: while (true) {
              if (!(i_2969567602 < colontmp__2969567601)) break Label35;
                i_3120565588 = i_2969567602;
                if ((1 < i_3120565588)) {
                var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([44,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
                }
                
                createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_3003121748(node_3120564272, i_3120565588), result_3120564273, line_3120564274, line_3120564274_Idx);
                i_2969567602 = addInt(i_2969567602, 1);
              }
          };
        };
        var _ = add_3087009884(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([41], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
        lastUsedChild_3120564422 = subInt(len_3003121752(node_3120564272), 1);
        break;
      }
      }
      else {
        var fmtRes_3120565597 = [mnewString(0)];
        fmtRes_3120565597[0].push.apply(fmtRes_3120565597[0], [99,114,101,97,116,101,76,97,121,111,117,116,76,105,110,101,70,111,114,78,111,100,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3120565598(fmtRes_3120565597, 0, node_3120564272.kind, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120565597[0], NTI33554449)]);
      }
      }}}}}}}}}}}}
    };
    } finally {
    createLayoutLineForRemainingChildren_3120564275(ctx_3120564270, input_3120564271, node_3120564272, addInt(lastUsedChild_3120564422, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
    }
    } finally {
    if (renderInline_3120564314) {
    addLine_3087009916(containerLineHEX60gensym42_3120564375, 0, line_3120564274, line_3120564274_Idx);
    HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009884(oldLineHEX60gensym42_3120564374, 0, containerLineHEX60gensym42_3120564375[0]));
    line_3120564274[line_3120564274_Idx] = oldLineHEX60gensym42_3120564374[0];
    }
    
    }
    } finally {
    if ((first_3120564319 < (prevLine_3120564315.children).length)) {
    HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: prevLine_3120564315, first: first_3120564319, last: (prevLine_3120564315.children).length});
    }
    
    }
  };

  
}

function centerChildrenVertically_3120565624(vnode_3120565625) {
    var height_3120565626 = vnode_3120565625.bounds.h;
    Label1: {
      var child_3120565630 = null;
      var i_2969567628 = 0;
      var L_2969567629 = (vnode_3120565625.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567628 < L_2969567629)) break Label3;
            child_3120565630 = vnode_3120565625.children[chckIndx(i_2969567628, 0, (vnode_3120565625.children).length - 1)];
            if ((vnode_3120565625.orientation == 0)) {
            var heightDiff_3120565636 = (height_3120565626 - child_3120565630.bounds.h);
            HEX2BHEX3D_2147483761(child_3120565630.bounds, "y", (heightDiff_3120565636 * 0.5));
            }
            
            centerChildrenVertically_3120565624(child_3120565630);
            i_2969567628 = addInt(i_2969567628, 1);
            if (!(((vnode_3120565625.children).length == L_2969567629))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function computeNodeLayoutImpl2_3120565641(ctx_3120565642, input_3120565643) {
  var result_3120565644 = [({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})];

    var node_3120565645 = input_3120565643.node;
    result_3120565644[0] = nimCopy(result_3120565644[0], {node: node_3120565645, root: {id: newId_2046820597(), orientation: 1, mhash: 0, parent: null, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}, nodeToVisualNode: initTable_3120565646(32)}, NTI3087007775);
    var line_3120565657 = [{id: newId_2046820597(), node: node_3120565645, parent: result_3120565644[0].root, orientation: 0, depth: addInt(result_3120565644[0].root.depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    createLayoutLineForNode_3120564269(ctx_3120565642, input_3120565643, node_3120565645, result_3120565644[0], line_3120565657, 0);
    addLine_3087009916(line_3120565657[0], "parent", line_3120565657, 0);
    centerChildrenVertically_3120565624(result_3120565644[0].root);

  return result_3120565644[0];

}

function computeNodeLayoutImpl_3019899455(ctx_3019899456, nodeLayoutInput_3019899457) {
  var result_3019934118 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    dependOnCurrentRevision_3019905725(ctx_3019899456);
    result_3019934118 = nimCopy(result_3019934118, computeNodeLayoutImpl2_3120565641(ctx_3019899456, nodeLayoutInput_3019899457), NTI3087007775);
    break BeforeRet;
  };

  return result_3019934118;

}

function mapKeyJs_3019902288(key_3019902290) {
  var result_3019902291 = null;

    let temp = key_3019902290;
    if (temp._id === undefined) temp._id = getIdNodeLayoutInputJs(key_3019902290);
    return temp._id;

  return result_3019902291;

}

function HEX5BHEX5DHEX3D_3019902276(t_3019902279, key_3019902280, val_3019902281) {
    t_3019902279.set(mapKeyJs_3019902288(key_3019902280), val_3019902281);

  
}

function init_3019902399(result_3019902402, result_3019902402_Idx, capacity_3019902403) {
    result_3019902402[result_3019902402_Idx] = (new Map());

  
}

function mustRehash_3019903097(t_3019903099) {
  var result_3019903100 = false;

    if (!((t_3019903099.counter < (t_3019903099.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019903100 = ((mulInt((t_3019903099.data).length, 2) < mulInt(t_3019903099.counter, 3)) || (subInt((t_3019903099.data).length, t_3019903099.counter) < 4));

  return result_3019903100;

}

function rawInsert_3019903790(t_3019903794, data_3019903795, data_3019903795_Idx, key_3019903796, val_3019903797, hc_3019903798, h_3019903799) {
    data_3019903795[data_3019903795_Idx][chckIndx(h_3019903799, 0, (data_3019903795[data_3019903795_Idx]).length - 1)].Field1 = key_3019903796;
    data_3019903795[data_3019903795_Idx][chckIndx(h_3019903799, 0, (data_3019903795[data_3019903795_Idx]).length - 1)].Field2 = val_3019903797;
    data_3019903795[data_3019903795_Idx][chckIndx(h_3019903799, 0, (data_3019903795[data_3019903795_Idx]).length - 1)].Field0 = hc_3019903798;

  
}

function enlarge_3019903354(t_3019903357) {
    var n_3019903360 = [];
    n_3019903360 = new Array(chckRange(mulInt((t_3019903357.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019903357.data).length, 2), 0, 2147483647) ; ++i) { n_3019903360[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3019903357.data; t_3019903357.data = n_3019903360; n_3019903360 = Temporary1;    Label2: {
      var i_3019903458 = 0;
      var colontmp__2969567633 = 0;
      colontmp__2969567633 = (n_3019903360).length - 1;
      var res_2969567634 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567634 <= colontmp__2969567633)) break Label4;
            i_3019903458 = res_2969567634;
            var eh_3019903539 = n_3019903360[chckIndx(i_3019903458, 0, (n_3019903360).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019903539)) {
            var j_3019903543 = (eh_3019903539 & (t_3019903357.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019903357.data[chckIndx(j_3019903543, 0, (t_3019903357.data).length - 1)].Field0)) break Label6;
                  j_3019903543 = nextTry_1308622883(j_3019903543, (t_3019903357.data).length - 1);
                }
            };
            rawInsert_3019903790(t_3019903357, t_3019903357, "data", n_3019903360[chckIndx(i_3019903458, 0, (n_3019903360).length - 1)].Field1, n_3019903360[chckIndx(i_3019903458, 0, (n_3019903360).length - 1)].Field2, eh_3019903539, j_3019903543);
            }
            
            res_2969567634 = addInt(res_2969567634, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019904049(t_3019904052, key_3019904053, hc_3019904054) {
  var result_3019904055 = 0;

  BeforeRet: {
    if (((t_3019904052.data).length == 0)) {
    result_3019904055 = -1;
    break BeforeRet;
    }
    
    var h_3019904140 = (hc_3019904054 & (t_3019904052.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019904052.data[chckIndx(h_3019904140, 0, (t_3019904052.data).length - 1)].Field0)) break Label2;
          if (((t_3019904052.data[chckIndx(h_3019904140, 0, (t_3019904052.data).length - 1)].Field0 == hc_3019904054) && (t_3019904052.data[chckIndx(h_3019904140, 0, (t_3019904052.data).length - 1)].Field1 == key_3019904053))) {
          result_3019904055 = h_3019904140;
          break BeforeRet;
          }
          
          h_3019904140 = nextTry_1308622883(h_3019904140, (t_3019904052.data).length - 1);
        }
    };
    result_3019904055 = subInt(-1, h_3019904140);
  };

  return result_3019904055;

}

function HEX5BHEX5DHEX3D_3019902478(t_3019902481, key_3019902482, val_3019902483) {
    if (((t_3019902481.data).length == 0)) {
    var correctSizeHEX60gensym131_3019902567 = slotsNeeded_1308622891(32);
    t_3019902481.counter = 0;
    t_3019902481.data = new Array(chckRange(correctSizeHEX60gensym131_3019902567, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym131_3019902567, 0, 2147483647) ; ++i) { t_3019902481.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3019902572 = [0];
    var index_3019902929 = rawGet_3019902573(t_3019902481, key_3019902482, hc_3019902572, 0);
    if ((0 <= index_3019902929)) {
    t_3019902481.data[chckIndx(index_3019902929, 0, (t_3019902481.data).length - 1)].Field2 = val_3019902483;
    }
    else {
      if (((t_3019902481.data).length == 0)) {
      var correctSizeHEX60gensym136_3019903092 = slotsNeeded_1308622891(32);
      t_3019902481.counter = 0;
      t_3019902481.data = new Array(chckRange(correctSizeHEX60gensym136_3019903092, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym136_3019903092, 0, 2147483647) ; ++i) { t_3019902481.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3019903097(t_3019902481)) {
      enlarge_3019903354(t_3019902481);
      index_3019902929 = rawGetKnownHC_3019904049(t_3019902481, key_3019902482, hc_3019902572[0]);
      }
      
      index_3019902929 = subInt(-1, index_3019902929);
      rawInsert_3019903790(t_3019902481, t_3019902481, "data", key_3019902482, val_3019902483, hc_3019902572[0], index_3019902929);
      t_3019902481.counter = addInt(t_3019902481.counter, 1);
    }
    

  
}

function formatValue_3019934143(result_3019934145, result_3019934145_Idx, value_3019934146, specifier_3019934147) {
    formatValue_721420459(result_3019934145, result_3019934145_Idx, HEX24_3019911361(value_3019934146), specifier_3019934147);

  
}

function getAstNode_3019905737(ctxHEX60gensym74_3019905738, idHEX60gensym74_3019905739) {
  var result_3019905741 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym74_3019905742 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym74_3019905739, NTI2046820355), Field1: 0}, NTI3036676199);
    if (contains_3019899546(ctxHEX60gensym74_3019905738.itemsAstNode, itemHEX60gensym74_3019905742)) {
    result_3019905741 = nimCopy(result_3019905741, some_3003121890(HEX5BHEX5D_3019899656(ctxHEX60gensym74_3019905738.itemsAstNode, itemHEX60gensym74_3019905742)), NTI3003121783);
    break BeforeRet;
    }
    
    result_3019905741 = nimCopy(result_3019905741, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_3019905741;

}

function recoverValue_3019899419(ctx_3019899420, key_3019899421) {
      var Temporary1;

    var fmtRes_3019934142 = [mnewString(0)];
    fmtRes_3019934142[0].push.apply(fmtRes_3019934142[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,118,97,108,117,101,32,102,111,114,32]);;
    formatValue_3019934143(fmtRes_3019934142, 0, key_3019899421, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019934142[0], NTI33554449)]);
      var oHEX60gensym299_3019934153 = getAstNode_3019905737(ctx_3019899420, key_3019899421.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym299_3019934153)) Temporary1 = false; else {        var node_3019934199 = get_3003123566(oHEX60gensym299_3019934153);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900093(ctx_3019899420.queryCacheValue, node_3019934199, errorValue_3087008438());
    }
    

  
}

function recoverType_3019899422(ctx_3019899423, key_3019899424) {
      var Temporary1;

    var fmtRes_3019934276 = [mnewString(0)];
    fmtRes_3019934276[0].push.apply(fmtRes_3019934276[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,116,121,112,101,32,102,111,114,32]);;
    formatValue_3019934143(fmtRes_3019934276, 0, key_3019899424, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019934276[0], NTI33554449)]);
      var oHEX60gensym301_3019934284 = getAstNode_3019905737(ctx_3019899423, key_3019899424.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym301_3019934284)) Temporary1 = false; else {        var node_3019934330 = get_3003123566(oHEX60gensym301_3019934284);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019899735(ctx_3019899423.queryCacheType, node_3019934330, errorType_3087008127());
    }
    

  
}

function recoverSymbol_3019899425(ctx_3019899426, key_3019899427) {
      var Temporary1;

    var fmtRes_3019934407 = [mnewString(0)];
    fmtRes_3019934407[0].push.apply(fmtRes_3019934407[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,32,102,111,114,32]);;
    formatValue_3019934143(fmtRes_3019934407, 0, key_3019899427, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019934407[0], NTI33554449)]);
      var oHEX60gensym303_3019934415 = getAstNode_3019905737(ctx_3019899426, key_3019899427.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym303_3019934415)) Temporary1 = false; else {        var node_3019934461 = get_3003123566(oHEX60gensym303_3019934415);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900441(ctx_3019899426.queryCacheSymbol, node_3019934461, none_3019906690());
    }
    

  
}

function recoverSymbols_3019899428(ctx_3019899429, key_3019899430) {
      var Temporary1;

    var fmtRes_3019934540 = [mnewString(0)];
    fmtRes_3019934540[0].push.apply(fmtRes_3019934540[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,115,32,102,111,114,32]);;
    formatValue_3019934143(fmtRes_3019934540, 0, key_3019899430, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019934540[0], NTI33554449)]);
      var oHEX60gensym305_3019934548 = getAstNode_3019905737(ctx_3019899429, key_3019899430.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym305_3019934548)) Temporary1 = false; else {        var node_3019934594 = get_3003123566(oHEX60gensym305_3019934548);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900790(ctx_3019899429.queryCacheSymbols, node_3019934594, newTable_3019934635(32));
    }
    

  
}

function init_3019904641(result_3019904644, result_3019904644_Idx, capacity_3019904645) {
    result_3019904644[result_3019904644_Idx] = (new Map());

  
}

function init_3019904661(result_3019904664, result_3019904664_Idx, capacity_3019904665) {
    result_3019904664[result_3019904664_Idx] = (new Map());

  
}

function init_3019904681(result_3019904684, result_3019904684_Idx, capacity_3019904685) {
    result_3019904684[result_3019904684_Idx] = (new Map());

  
}

function init_3019904701(result_3019904704, result_3019904704_Idx, capacity_3019904705) {
    result_3019904704[result_3019904704_Idx] = (new Map());

  
}

function initTable_3019904721(initialSize_3019904724) {
  var result_3019904725 = ({data: [], counter: 0});

    var correctSizeHEX60gensym146_3019904727 = slotsNeeded_1308622891(chckRange(initialSize_3019904724, 0, 2147483647));
    result_3019904725.counter = 0;
    result_3019904725.data = new Array(chckRange(correctSizeHEX60gensym146_3019904727, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym146_3019904727, 0, 2147483647) ; ++i) { result_3019904725.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }
  return result_3019904725;

}

function initTable_3019904741(initialSize_3019904744) {
  var result_3019904745 = ({data: [], counter: 0});

    var correctSizeHEX60gensym148_3019904747 = slotsNeeded_1308622891(chckRange(initialSize_3019904744, 0, 2147483647));
    result_3019904745.counter = 0;
    result_3019904745.data = new Array(chckRange(correctSizeHEX60gensym148_3019904747, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym148_3019904747, 0, 2147483647) ; ++i) { result_3019904745.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }
  return result_3019904745;

}

function newContext_3019899458() {
    
function HEX3Aanonymous_3019899467(itemHEX60gensym28_3019899468) {
      var result_3019899469 = [];

      BeforeRet: {
        if (!(contains_3019899546(ctx_3019899064.itemsAstNode, itemHEX60gensym28_3019899468))) {
        raiseException({message: ([117,112,100,97,116,101,84,121,112,101,40] || []).concat(HEX24_3036676332(itemHEX60gensym28_3019899468) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899064.statsType.forcedCalls = addInt(ctx_3019899064.statsType.forcedCalls, 1);
        var argHEX60gensym28_3019899670 = HEX5BHEX5D_3019899656(ctx_3019899064.itemsAstNode, itemHEX60gensym28_3019899468);
        var valueHEX60gensym28_3019899671 = computeTypeImpl_3019899431(ctx_3019899064, argHEX60gensym28_3019899670);
        HEX5BHEX5DHEX3D_3019899735(ctx_3019899064.queryCacheType, argHEX60gensym28_3019899670, valueHEX60gensym28_3019899671);
        result_3019899469 = nimCopy(null, fingerprint_3087008353(valueHEX60gensym28_3019899671), NTI3036676198);
        break BeforeRet;
      };

      return result_3019899469;

    }
    
function HEX3Aanonymous_3019899854(itemHEX60gensym29_3019899855) {
      var result_3019899856 = [];

      BeforeRet: {
        if (!(contains_3019899546(ctx_3019899064.itemsAstNode, itemHEX60gensym29_3019899855))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,117,101,40] || []).concat(HEX24_3036676332(itemHEX60gensym29_3019899855) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899064.statsValue.forcedCalls = addInt(ctx_3019899064.statsValue.forcedCalls, 1);
        var argHEX60gensym29_3019900028 = HEX5BHEX5D_3019899656(ctx_3019899064.itemsAstNode, itemHEX60gensym29_3019899855);
        var valueHEX60gensym29_3019900029 = computeValueImpl_3019899434(ctx_3019899064, argHEX60gensym29_3019900028);
        HEX5BHEX5DHEX3D_3019900093(ctx_3019899064.queryCacheValue, argHEX60gensym29_3019900028, valueHEX60gensym29_3019900029);
        result_3019899856 = nimCopy(null, fingerprint_3087008534(valueHEX60gensym29_3019900029), NTI3036676198);
        break BeforeRet;
      };

      return result_3019899856;

    }
    
function HEX3Aanonymous_3019900201(itemHEX60gensym30_3019900202) {
      var result_3019900203 = [];

      BeforeRet: {
        if (!(contains_3019899546(ctx_3019899064.itemsAstNode, itemHEX60gensym30_3019900202))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3036676332(itemHEX60gensym30_3019900202) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899064.statsSymbol.forcedCalls = addInt(ctx_3019899064.statsSymbol.forcedCalls, 1);
        var argHEX60gensym30_3019900375 = HEX5BHEX5D_3019899656(ctx_3019899064.itemsAstNode, itemHEX60gensym30_3019900202);
        var valueHEX60gensym30_3019900377 = computeSymbolImpl_3019899437(ctx_3019899064, argHEX60gensym30_3019900375);
        HEX5BHEX5DHEX3D_3019900441(ctx_3019899064.queryCacheSymbol, argHEX60gensym30_3019900375, valueHEX60gensym30_3019900377);
        result_3019900203 = nimCopy(null, fingerprint_3087009338(valueHEX60gensym30_3019900377), NTI3036676198);
        break BeforeRet;
      };

      return result_3019900203;

    }
    
function HEX3Aanonymous_3019900549(itemHEX60gensym31_3019900550) {
      var result_3019900551 = [];

      BeforeRet: {
        if (!(contains_3019899546(ctx_3019899064.itemsAstNode, itemHEX60gensym31_3019900550))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3036676332(itemHEX60gensym31_3019900550) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899064.statsSymbols.forcedCalls = addInt(ctx_3019899064.statsSymbols.forcedCalls, 1);
        var argHEX60gensym31_3019900723 = HEX5BHEX5D_3019899656(ctx_3019899064.itemsAstNode, itemHEX60gensym31_3019900550);
        var valueHEX60gensym31_3019900726 = computeSymbolsImpl_3019899441(ctx_3019899064, argHEX60gensym31_3019900723);
        HEX5BHEX5DHEX3D_3019900790(ctx_3019899064.queryCacheSymbols, argHEX60gensym31_3019900723, valueHEX60gensym31_3019900726);
        result_3019900551 = nimCopy(null, fingerprint_3087008999(valueHEX60gensym31_3019900726), NTI3036676198);
        break BeforeRet;
      };

      return result_3019900551;

    }
    
function HEX3Aanonymous_3019900898(itemHEX60gensym32_3019900899) {
      var result_3019900900 = [];

      BeforeRet: {
        if (!(contains_3019900977(ctx_3019899064.itemsSymbol, itemHEX60gensym32_3019900899))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3036676332(itemHEX60gensym32_3019900899) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899064.statsSymbolType.forcedCalls = addInt(ctx_3019899064.statsSymbolType.forcedCalls, 1);
        var argHEX60gensym32_3019901090 = HEX5BHEX5D_3019901076(ctx_3019899064.itemsSymbol, itemHEX60gensym32_3019900899);
        var valueHEX60gensym32_3019901091 = computeSymbolTypeImpl_3019899446(ctx_3019899064, argHEX60gensym32_3019901090);
        HEX5BHEX5DHEX3D_3019901155(ctx_3019899064.queryCacheSymbolType, argHEX60gensym32_3019901090, valueHEX60gensym32_3019901091);
        result_3019900900 = nimCopy(null, fingerprint_3087008353(valueHEX60gensym32_3019901091), NTI3036676198);
        break BeforeRet;
      };

      return result_3019900900;

    }
    
function HEX3Aanonymous_3019901274(itemHEX60gensym33_3019901275) {
      var result_3019901276 = [];

      BeforeRet: {
        if (!(contains_3019900977(ctx_3019899064.itemsSymbol, itemHEX60gensym33_3019901275))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3036676332(itemHEX60gensym33_3019901275) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899064.statsSymbolValue.forcedCalls = addInt(ctx_3019899064.statsSymbolValue.forcedCalls, 1);
        var argHEX60gensym33_3019901448 = HEX5BHEX5D_3019901076(ctx_3019899064.itemsSymbol, itemHEX60gensym33_3019901275);
        var valueHEX60gensym33_3019901449 = computeSymbolValueImpl_3019899449(ctx_3019899064, argHEX60gensym33_3019901448);
        HEX5BHEX5DHEX3D_3019901513(ctx_3019899064.queryCacheSymbolValue, argHEX60gensym33_3019901448, valueHEX60gensym33_3019901449);
        result_3019901276 = nimCopy(null, fingerprint_3087008534(valueHEX60gensym33_3019901449), NTI3036676198);
        break BeforeRet;
      };

      return result_3019901276;

    }
    
function HEX3Aanonymous_3019901621(itemHEX60gensym34_3019901622) {
      var result_3019901623 = [];

      BeforeRet: {
        if (!(contains_3019901700(ctx_3019899064.itemsFunctionExecutionContext, itemHEX60gensym34_3019901622))) {
        raiseException({message: ([117,112,100,97,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3036676332(itemHEX60gensym34_3019901622) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899064.statsFunctionExecution.forcedCalls = addInt(ctx_3019899064.statsFunctionExecution.forcedCalls, 1);
        var argHEX60gensym34_3019901822 = HEX5BHEX5D_3019901799(ctx_3019899064.itemsFunctionExecutionContext, itemHEX60gensym34_3019901622);
        var valueHEX60gensym34_3019901823 = computeFunctionExecutionImpl_3019899452(ctx_3019899064, argHEX60gensym34_3019901822);
        HEX5BHEX5DHEX3D_3019901887(ctx_3019899064.queryCacheFunctionExecution, argHEX60gensym34_3019901822, valueHEX60gensym34_3019901823);
        result_3019901623 = nimCopy(null, [], NTI3019900519);
        break BeforeRet;
      };

      return result_3019901623;

    }
    
function HEX3Aanonymous_3019902010(itemHEX60gensym35_3019902011) {
      var result_3019902012 = [];

      BeforeRet: {
        if (!(contains_3019902089(ctx_3019899064.itemsNodeLayoutInput, itemHEX60gensym35_3019902011))) {
        raiseException({message: ([117,112,100,97,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3036676332(itemHEX60gensym35_3019902011) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899064.statsNodeLayout.forcedCalls = addInt(ctx_3019899064.statsNodeLayout.forcedCalls, 1);
        var argHEX60gensym35_3019902211 = HEX5BHEX5D_3019902188(ctx_3019899064.itemsNodeLayoutInput, itemHEX60gensym35_3019902011);
        var valueHEX60gensym35_3019902212 = computeNodeLayoutImpl_3019899455(ctx_3019899064, argHEX60gensym35_3019902211);
        HEX5BHEX5DHEX3D_3019902276(ctx_3019899064.queryCacheNodeLayout, argHEX60gensym35_3019902211, valueHEX60gensym35_3019902212);
        result_3019902012 = nimCopy(null, [], NTI3019900758);
        break BeforeRet;
      };

      return result_3019902012;

    }
    
function HEX3Aanonymous_3019902413(keyHEX60gensym36_3019902414) {
        recoverValue_3019899419(ctx_3019899064, keyHEX60gensym36_3019902414);

      
    }
    
function HEX3Aanonymous_3019904407(keyHEX60gensym37_3019904408) {
        recoverType_3019899422(ctx_3019899064, keyHEX60gensym37_3019904408);

      
    }
    
function HEX3Aanonymous_3019904483(keyHEX60gensym38_3019904484) {
        recoverSymbol_3019899425(ctx_3019899064, keyHEX60gensym38_3019904484);

      
    }
    
function HEX3Aanonymous_3019904559(keyHEX60gensym39_3019904560) {
        recoverSymbols_3019899428(ctx_3019899064, keyHEX60gensym39_3019904560);

      
    }

  var result_3019899459 = null;

  BeforeRet: {
    var ctx_3019899064 = null;
    ctx_3019899064 = ({depGraph: null, dependencyStack: [], activeQuerySet: ({data: [], counter: 0}), activeQueryStack: [], recursiveQueries: ({data: [], counter: 0}), updateFunctions: [], recoveryFunctions: ({data: [], counter: 0}), enableLogging: false, itemsAstNode: null, itemsNodeLayoutInput: null, itemsSymbol: null, itemsFunctionExecutionContext: null, globalScope: ({data: [], counter: 0}), enableQueryLogging: false, enableExecutionLogging: false, diagnosticsPerNode: ({data: [], counter: 0}), diagnosticsPerQuery: ({data: [], counter: 0}), queryCacheType: null, updateType: null, statsType: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheValue: null, updateValue: null, statsValue: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbol: null, updateSymbol: null, statsSymbol: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbols: null, updateSymbols: null, statsSymbols: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolType: null, updateSymbolType: null, statsSymbolType: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolValue: null, updateSymbolValue: null, statsSymbolValue: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheFunctionExecution: null, updateFunctionExecution: null, statsFunctionExecution: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheNodeLayout: null, updateNodeLayout: null, statsNodeLayout: ({time: 0.0, totalCalls: 0, forcedCalls: 0})});
    ctx_3019899064.depGraph = newDependencyGraph_3036676396();
    ctx_3019899064.dependencyStack = nimCopy(null, [], NTI3019899109);
    ctx_3019899064.updateType = HEX3Aanonymous_3019899467;
    ctx_3019899064.updateFunctions.push(ctx_3019899064.updateType);;
    HEX5BHEX5DHEX3D_3036676464(ctx_3019899064.depGraph.queryNames, 0, [84,121,112,101]);
    init_3019899845(ctx_3019899064, "queryCacheType", 2000);
    ctx_3019899064.updateValue = HEX3Aanonymous_3019899854;
    ctx_3019899064.updateFunctions.push(ctx_3019899064.updateValue);;
    HEX5BHEX5DHEX3D_3036676464(ctx_3019899064.depGraph.queryNames, 1, [86,97,108,117,101]);
    init_3019900192(ctx_3019899064, "queryCacheValue", 2000);
    ctx_3019899064.updateSymbol = HEX3Aanonymous_3019900201;
    ctx_3019899064.updateFunctions.push(ctx_3019899064.updateSymbol);;
    HEX5BHEX5DHEX3D_3036676464(ctx_3019899064.depGraph.queryNames, 2, [83,121,109,98,111,108]);
    init_3019900540(ctx_3019899064, "queryCacheSymbol", 2000);
    ctx_3019899064.updateSymbols = HEX3Aanonymous_3019900549;
    ctx_3019899064.updateFunctions.push(ctx_3019899064.updateSymbols);;
    HEX5BHEX5DHEX3D_3036676464(ctx_3019899064.depGraph.queryNames, 3, [83,121,109,98,111,108,115]);
    init_3019900889(ctx_3019899064, "queryCacheSymbols", 2000);
    ctx_3019899064.updateSymbolType = HEX3Aanonymous_3019900898;
    ctx_3019899064.updateFunctions.push(ctx_3019899064.updateSymbolType);;
    HEX5BHEX5DHEX3D_3036676464(ctx_3019899064.depGraph.queryNames, 4, [83,121,109,98,111,108,84,121,112,101]);
    init_3019901265(ctx_3019899064, "queryCacheSymbolType", 2000);
    ctx_3019899064.updateSymbolValue = HEX3Aanonymous_3019901274;
    ctx_3019899064.updateFunctions.push(ctx_3019899064.updateSymbolValue);;
    HEX5BHEX5DHEX3D_3036676464(ctx_3019899064.depGraph.queryNames, 5, [83,121,109,98,111,108,86,97,108,117,101]);
    init_3019901612(ctx_3019899064, "queryCacheSymbolValue", 2000);
    ctx_3019899064.updateFunctionExecution = HEX3Aanonymous_3019901621;
    ctx_3019899064.updateFunctions.push(ctx_3019899064.updateFunctionExecution);;
    HEX5BHEX5DHEX3D_3036676464(ctx_3019899064.depGraph.queryNames, 6, [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110]);
    init_3019902001(ctx_3019899064, "queryCacheFunctionExecution", 2000);
    ctx_3019899064.updateNodeLayout = HEX3Aanonymous_3019902010;
    ctx_3019899064.updateFunctions.push(ctx_3019899064.updateNodeLayout);;
    HEX5BHEX5DHEX3D_3036676464(ctx_3019899064.depGraph.queryNames, 7, [78,111,100,101,76,97,121,111,117,116]);
    init_3019902399(ctx_3019899064, "queryCacheNodeLayout", 2000);
    HEX5BHEX5DHEX3D_3019902478(ctx_3019899064.recoveryFunctions, 1, HEX3Aanonymous_3019902413);
    HEX5BHEX5DHEX3D_3019902478(ctx_3019899064.recoveryFunctions, 0, HEX3Aanonymous_3019904407);
    HEX5BHEX5DHEX3D_3019902478(ctx_3019899064.recoveryFunctions, 2, HEX3Aanonymous_3019904483);
    HEX5BHEX5DHEX3D_3019902478(ctx_3019899064.recoveryFunctions, 3, HEX3Aanonymous_3019904559);
    init_3019904641(ctx_3019899064, "itemsAstNode", 2000);
    init_3019904661(ctx_3019899064, "itemsNodeLayoutInput", 2000);
    init_3019904681(ctx_3019899064, "itemsSymbol", 2000);
    init_3019904701(ctx_3019899064, "itemsFunctionExecutionContext", 2000);
    ctx_3019899064.globalScope = nimCopy(ctx_3019899064.globalScope, initTable_3019904710(32), NTI3087008712);
    ctx_3019899064.enableQueryLogging = false;
    ctx_3019899064.enableExecutionLogging = false;
    ctx_3019899064.diagnosticsPerNode = nimCopy(ctx_3019899064.diagnosticsPerNode, initTable_3019904721(32), NTI3019898974);
    ctx_3019899064.diagnosticsPerQuery = nimCopy(ctx_3019899064.diagnosticsPerQuery, initTable_3019904741(32), NTI3019898991);
    result_3019899459 = ctx_3019899064;
    break BeforeRet;
  };

  return result_3019899459;

}
var executionOutput_2969567286 = [{lines: [], scroll: 0}];
var ctx_2969567287 = newContext_3019899458();
ctx_2969567287.enableLogging = false;
ctx_2969567287.enableQueryLogging = false;

function newFunctionValue_3087008478(impl_3087008479) {
  var result_3087008480 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008480 = nimCopy(result_3087008480, {kind: 4, impl: impl_3087008479, stringValue: [], intValue: 0, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008480;

}

function createBinaryIntOperator_2969567637(operator_2969567641) {
    
function HEX3Aanonymous_2969567643(values_2969567644) {
        var Temporary1;
        var Temporary2;

      var result_2969567645 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2969567644).length < 2)) {
        result_2969567645 = nimCopy(result_2969567645, errorValue_3087008438(), NTI3087007751);
        break BeforeRet;
        }
        
        if ((!((values_2969567644[chckIndx(0, 0, (values_2969567644).length - 1)].kind == 3)) || !((values_2969567644[chckIndx(1, 0, (values_2969567644).length - 1)].kind == 3)))) {
        result_2969567645 = nimCopy(result_2969567645, errorValue_3087008438(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = values_2969567644[chckIndx(0, 0, (values_2969567644).length - 1)];
        if (ConstSet152[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        var Temporary2 = values_2969567644[chckIndx(1, 0, (values_2969567644).length - 1)];
        if (ConstSet153[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
        result_2969567645 = nimCopy(result_2969567645, {kind: 3, intValue: operator_2969567641(Temporary1.intValue, Temporary2.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2969567645;

    }

  var result_2969567642 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567642 = nimCopy(result_2969567642, newFunctionValue_3087008478(HEX3Aanonymous_2969567643), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567642;

}

function createUnityIntOperator_2969567657(operator_2969567660) {
    
function HEX3Aanonymous_2969567662(values_2969567663) {
        var Temporary1;

      var result_2969567664 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2969567663).length < 1)) {
        result_2969567664 = nimCopy(result_2969567664, errorValue_3087008438(), NTI3087007751);
        break BeforeRet;
        }
        
        var value_2969567668 = nimCopy(null, values_2969567663[chckIndx(0, 0, (values_2969567663).length - 1)], NTI3087007751);
        if (!((value_2969567668.kind == 3))) {
        result_2969567664 = nimCopy(result_2969567664, errorValue_3087008438(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = value_2969567668;
        if (ConstSet154[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        result_2969567664 = nimCopy(result_2969567664, {kind: 3, intValue: operator_2969567660(Temporary1.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2969567664;

    }

  var result_2969567661 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567661 = nimCopy(result_2969567661, newFunctionValue_3087008478(HEX3Aanonymous_2969567662), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567661;

}

function stringValue_3087008472(value_3087008473) {
  var result_3087008474 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008474 = nimCopy(result_3087008474, {kind: 2, stringValue: nimCopy(null, value_3087008473, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008474;

}

function join_2969567812(a_2969567814, sep_2969567815) {
  var result_2969567816 = [];

    result_2969567816 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2969567831 = 0;
      var x_2969567832 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969569567 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969569567 < (a_2969567814).length)) break Label3;
            i_2969567831 = i_2969569567;
            x_2969567832 = nimCopy(x_2969567832, a_2969567814[chckIndx(i_2969569567, 0, (a_2969567814).length - 1)], NTI3087007751);
            if ((0 < i_2969567831)) {
            result_2969567816.push.apply(result_2969567816, sep_2969567815);;
            }
            
            result_2969567816.push.apply(result_2969567816, HEX24_3087008494(x_2969567832));;
            i_2969569567 = addInt(i_2969569567, 1);
          }
      };
    };

  return result_2969567816;

}

function delete_2969567850(s_2969567852, s_2969567852_Idx, slice_2969567853) {
    if (!((((slice_2969567853.a < (s_2969567852[s_2969567852_Idx]).length) && (0 <= slice_2969567853.a)) && (slice_2969567853.b < (s_2969567852[s_2969567852_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2969567853, NTI805306392), Field1: (s_2969567852[s_2969567852_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2969567853.a <= slice_2969567853.b)) {
    var n_2969567900 = addInt(subInt(slice_2969567853.b, slice_2969567853.a), 1);
    var first_2969567901 = slice_2969567853.a;
    s_2969567852[s_2969567852_Idx].splice(first_2969567901, n_2969567900);
    }
    

  
}

function color_2634023294(c_2634023295) {
  var result_2634023296 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634023296 = nimCopy(result_2634023296, c_2634023295, NTI2550136835);

  return result_2634023296;

}

function addOutput_2969567833(self_2969567835, line_2969567836, color_2969567837) {
    if ((1500 <= (self_2969567835.lines).length)) {
    delete_2969567850(self_2969567835, "lines", HEX2EHEX2E_805306418(0, subInt((self_2969567835.lines).length, 1000)));
    }
    
    if ((0 < self_2969567835.scroll)) {
    self_2969567835.scroll = addInt(self_2969567835.scroll, 1);
    }
    
    self_2969567835.lines.push({Field0: nimCopy(null, line_2969567836, NTI33554449), Field1: color_2634023294(color_2969567837)});;

  
}

function typeType_3087008182() {
  var result_3087008183 = null;

    result_3087008183 = {kind: 6, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008183;

}

function typeValue_3087008475(typ_3087008476) {
  var result_3087008477 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008477 = nimCopy(result_3087008477, {kind: 6, typ: typ_3087008476, stringValue: [], intValue: 0, impl: null, node: null, rev: 0}, NTI3087007751);

  return result_3087008477;

}

function HEX3Aanonymous_2969567718(a_2969567719, b_2969567720) {
  var result_2969567721 = 0;

    result_2969567721 = addInt(a_2969567719, b_2969567720);

  return result_2969567721;

}

function HEX3Aanonymous_2969567723(a_2969567724, b_2969567725) {
  var result_2969567726 = 0;

    result_2969567726 = subInt(a_2969567724, b_2969567725);

  return result_2969567726;

}

function HEX3Aanonymous_2969567728(a_2969567729, b_2969567730) {
  var result_2969567731 = 0;

    result_2969567731 = mulInt(a_2969567729, b_2969567730);

  return result_2969567731;

}

function HEX3Aanonymous_2969567733(a_2969567734, b_2969567735) {
  var result_2969567736 = 0;

    result_2969567736 = divInt(a_2969567734, b_2969567735);

  return result_2969567736;

}

function HEX3Aanonymous_2969567738(a_2969567739, b_2969567740) {
  var result_2969567741 = 0;

    result_2969567741 = modInt(a_2969567739, b_2969567740);

  return result_2969567741;

}

function HEX3Aanonymous_2969567743(a_2969567744) {
  var result_2969567745 = 0;

    result_2969567745 = negInt(a_2969567744);

  return result_2969567745;

}

function HEX3Aanonymous_2969567747(a_2969567748) {
    var Temporary1;

  var result_2969567749 = 0;

    if (!((a_2969567748 == 0))) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_2969567749 = Temporary1;

  return result_2969567749;

}

function HEX3Aanonymous_2969567751(a_2969567752, b_2969567753) {
    var Temporary1;

  var result_2969567754 = 0;

    if ((a_2969567752 < b_2969567753)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567754 = Temporary1;

  return result_2969567754;

}

function HEX3Aanonymous_2969567756(a_2969567757, b_2969567758) {
    var Temporary1;

  var result_2969567759 = 0;

    if ((a_2969567757 <= b_2969567758)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567759 = Temporary1;

  return result_2969567759;

}

function HEX3Aanonymous_2969567761(a_2969567762, b_2969567763) {
    var Temporary1;

  var result_2969567764 = 0;

    if ((b_2969567763 < a_2969567762)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567764 = Temporary1;

  return result_2969567764;

}

function HEX3Aanonymous_2969567766(a_2969567767, b_2969567768) {
    var Temporary1;

  var result_2969567769 = 0;

    if ((b_2969567768 <= a_2969567767)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567769 = Temporary1;

  return result_2969567769;

}

function HEX3Aanonymous_2969567771(a_2969567772, b_2969567773) {
    var Temporary1;

  var result_2969567774 = 0;

    if ((a_2969567772 == b_2969567773)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567774 = Temporary1;

  return result_2969567774;

}

function HEX3Aanonymous_2969567776(a_2969567777, b_2969567778) {
    var Temporary1;

  var result_2969567779 = 0;

    if (!((a_2969567777 == b_2969567778))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567779 = Temporary1;

  return result_2969567779;

}

function HEX3Aanonymous_2969567781(a_2969567782, b_2969567783) {
    var Temporary1;

  var result_2969567784 = 0;

    if ((!((a_2969567782 == 0)) && !((b_2969567783 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567784 = Temporary1;

  return result_2969567784;

}

function HEX3Aanonymous_2969567786(a_2969567787, b_2969567788) {
    var Temporary1;

  var result_2969567789 = 0;

    if ((!((a_2969567787 == 0)) || !((b_2969567788 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567789 = Temporary1;

  return result_2969567789;

}

function HEX3Aanonymous_2969567791(a_2969567792, b_2969567793) {
    var Temporary1;

  var result_2969567794 = 0;

    if ((a_2969567792 < b_2969567793)) {
    Temporary1 = -1;
    }
    else {
    if ((b_2969567793 < a_2969567792)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    }
    result_2969567794 = Temporary1;

  return result_2969567794;

}

function HEX3Aanonymous_2969567796(values_2969567797) {
    var Temporary1;

  var result_2969567798 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (((values_2969567797).length < 2)) {
    result_2969567798 = nimCopy(result_2969567798, errorValue_3087008438(), NTI3087007751);
    break BeforeRet;
    }
    
    var leftValue_2969567802 = nimCopy(null, values_2969567797[chckIndx(0, 0, (values_2969567797).length - 1)], NTI3087007751);
    var rightValue_2969567803 = nimCopy(null, values_2969567797[chckIndx(1, 0, (values_2969567797).length - 1)], NTI3087007751);
    if (!((leftValue_2969567802.kind == 2))) {
    result_2969567798 = nimCopy(result_2969567798, errorValue_3087008438(), NTI3087007751);
    break BeforeRet;
    }
    
    var Temporary1 = leftValue_2969567802;
    if (ConstSet155[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
    result_2969567798 = nimCopy(result_2969567798, {kind: 2, stringValue: (Temporary1.stringValue || []).concat(HEX24_3087008494(rightValue_2969567803) || []), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_2969567798;

}

function HEX3Aanonymous_2969567809(values_2969567810) {
  var result_2969567811 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567811 = nimCopy(result_2969567811, stringValue_3087008472(join_2969567812(values_2969567810, [])), NTI3087007751);
    addOutput_2969567833(executionOutput_2969567286[0], HEX24_3087008494(result_2969567811), {r: 1.0, g: 1.0, b: 1.0, a: 1.0});
    log_1174405220(logger_704643272[0], 2, [HEX24_3087008494(result_2969567811)]);
    result_2969567811 = nimCopy(result_2969567811, voidValue_3087008467(), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567811;

}

function HEX3Aanonymous_2969567920(values_2969567923) {
  var result_2969567926 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2969567926 = nimCopy(result_2969567926, stringValue_3087008472(join_2969567812(values_2969567923, [])), NTI3087007751);

  return result_2969567926;

}
var typeAddIntInt_2969567677 = newFunctionType_3087008169([intType_3087008165(), intType_3087008165()], intType_3087008165());
var typeSubIntInt_2969567682 = newFunctionType_3087008169([intType_3087008165(), intType_3087008165()], intType_3087008165());
var typeMulIntInt_2969567687 = newFunctionType_3087008169([intType_3087008165(), intType_3087008165()], intType_3087008165());
var typeDivIntInt_2969567692 = newFunctionType_3087008169([intType_3087008165(), intType_3087008165()], intType_3087008165());
var typeModIntInt_2969567697 = newFunctionType_3087008169([intType_3087008165(), intType_3087008165()], intType_3087008165());
var typeAddStringInt_2969567702 = newFunctionType_3087008169([stringType_3087008167(), intType_3087008165()], stringType_3087008167());
var typeNegInt_2969567707 = newFunctionType_3087008169([intType_3087008165()], intType_3087008165());
var typeNotInt_2969567712 = newFunctionType_3087008169([intType_3087008165()], intType_3087008165());
var typeFnIntIntInt_2969567717 = newFunctionType_3087008169([intType_3087008165(), intType_3087008165()], intType_3087008165());
var funcAddIntInt_2969567722 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567718);
var funcSubIntInt_2969567727 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567723);
var funcMulIntInt_2969567732 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567728);
var funcDivIntInt_2969567737 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567733);
var funcModIntInt_2969567742 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567738);
var funcNegInt_2969567746 = createUnityIntOperator_2969567657(HEX3Aanonymous_2969567743);
var funcNotInt_2969567750 = createUnityIntOperator_2969567657(HEX3Aanonymous_2969567747);
var funcLessIntInt_2969567755 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567751);
var funcLessEqualIntInt_2969567760 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567756);
var funcGreaterIntInt_2969567765 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567761);
var funcGreaterEqualIntInt_2969567770 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567766);
var funcEqualIntInt_2969567775 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567771);
var funcNotEqualIntInt_2969567780 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567776);
var funcAndIntInt_2969567785 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567781);
var funcOrIntInt_2969567790 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567786);
var funcOrderIntInt_2969567795 = createBinaryIntOperator_2969567637(HEX3Aanonymous_2969567791);
var funcAddStringInt_2969567808 = newFunctionValue_3087008478(HEX3Aanonymous_2969567796);
var funcPrintAny_2969567919 = newFunctionValue_3087008478(HEX3Aanonymous_2969567809);
var funcBuildStringAny_2969567931 = newFunctionValue_3087008478(HEX3Aanonymous_2969567920);
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdAdd_2986344451, {id: nimCopy(null, IdAdd_2986344451, NTI2046820355), name: [43], kind: 1, typ: typeAddIntInt_2969567677, value: nimCopy(null, funcAddIntInt_2969567722, NTI3087007751), operatorNotation: 3, precedence: 10, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdSub_2986344452, {id: nimCopy(null, IdSub_2986344452, NTI2046820355), name: [45], kind: 1, typ: typeSubIntInt_2969567682, value: nimCopy(null, funcSubIntInt_2969567727, NTI3087007751), operatorNotation: 3, precedence: 10, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdMul_2986344453, {id: nimCopy(null, IdMul_2986344453, NTI2046820355), name: [42], kind: 1, typ: typeMulIntInt_2969567687, value: nimCopy(null, funcMulIntInt_2969567732, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdDiv_2986344454, {id: nimCopy(null, IdDiv_2986344454, NTI2046820355), name: [47], kind: 1, typ: typeDivIntInt_2969567692, value: nimCopy(null, funcDivIntInt_2969567737, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdMod_2986344455, {id: nimCopy(null, IdMod_2986344455, NTI2046820355), name: [37], kind: 1, typ: typeModIntInt_2969567697, value: nimCopy(null, funcModIntInt_2969567742, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdNegate_2986344456, {id: nimCopy(null, IdNegate_2986344456, NTI2046820355), name: [45], kind: 1, typ: typeNegInt_2969567707, value: nimCopy(null, funcNegInt_2969567746, NTI3087007751), operatorNotation: 1, mHash: 0, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdNot_2986344457, {id: nimCopy(null, IdNot_2986344457, NTI2046820355), name: [33], kind: 1, typ: typeNotInt_2969567712, value: nimCopy(null, funcNotInt_2969567750, NTI3087007751), operatorNotation: 1, mHash: 0, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdAppendString_2986344459, {id: nimCopy(null, IdAppendString_2986344459, NTI2046820355), name: [38], kind: 1, typ: typeAddStringInt_2969567702, value: nimCopy(null, funcAddStringInt_2969567808, NTI3087007751), operatorNotation: 3, precedence: 0, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdLess_2986344463, {id: nimCopy(null, IdLess_2986344463, NTI2046820355), name: [60], kind: 1, typ: typeFnIntIntInt_2969567717, value: nimCopy(null, funcLessIntInt_2969567755, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdLessEqual_2986344464, {id: nimCopy(null, IdLessEqual_2986344464, NTI2046820355), name: [60,61], kind: 1, typ: typeFnIntIntInt_2969567717, value: nimCopy(null, funcLessEqualIntInt_2969567760, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdGreater_2986344465, {id: nimCopy(null, IdGreater_2986344465, NTI2046820355), name: [62], kind: 1, typ: typeFnIntIntInt_2969567717, value: nimCopy(null, funcGreaterIntInt_2969567765, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdGreaterEqual_2986344466, {id: nimCopy(null, IdGreaterEqual_2986344466, NTI2046820355), name: [62,61], kind: 1, typ: typeFnIntIntInt_2969567717, value: nimCopy(null, funcGreaterEqualIntInt_2969567770, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdEqual_2986344467, {id: nimCopy(null, IdEqual_2986344467, NTI2046820355), name: [61,61], kind: 1, typ: typeFnIntIntInt_2969567717, value: nimCopy(null, funcEqualIntInt_2969567775, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdNotEqual_2986344468, {id: nimCopy(null, IdNotEqual_2986344468, NTI2046820355), name: [33,61], kind: 1, typ: typeFnIntIntInt_2969567717, value: nimCopy(null, funcNotEqualIntInt_2969567780, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdAnd_2986344469, {id: nimCopy(null, IdAnd_2986344469, NTI2046820355), name: [97,110,100], kind: 1, typ: typeFnIntIntInt_2969567717, value: nimCopy(null, funcAndIntInt_2969567785, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdOr_2986344470, {id: nimCopy(null, IdOr_2986344470, NTI2046820355), name: [111,114], kind: 1, typ: typeFnIntIntInt_2969567717, value: nimCopy(null, funcOrIntInt_2969567790, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdOrder_2986344471, {id: nimCopy(null, IdOrder_2986344471, NTI2046820355), name: [60,61,62], kind: 1, typ: typeFnIntIntInt_2969567717, value: nimCopy(null, funcOrderIntInt_2969567795, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdInt_2986344460, {id: nimCopy(null, IdInt_2986344460, NTI2046820355), name: [105,110,116], kind: 1, typ: typeType_3087008182(), value: typeValue_3087008475(intType_3087008165()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdString_2986344461, {id: nimCopy(null, IdString_2986344461, NTI2046820355), name: [115,116,114,105,110,103], kind: 1, typ: typeType_3087008182(), value: typeValue_3087008475(stringType_3087008167()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdVoid_2986344462, {id: nimCopy(null, IdVoid_2986344462, NTI2046820355), name: [118,111,105,100], kind: 1, typ: typeType_3087008182(), value: typeValue_3087008475(voidType_3087008163()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdPrint_2986344450, {id: nimCopy(null, IdPrint_2986344450, NTI2046820355), name: [112,114,105,110,116], kind: 1, typ: newFunctionType_3087008169([anyType_3087008184(true)], voidType_3087008163()), value: nimCopy(null, funcPrintAny_2969567919, NTI3087007751), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019934834(ctx_2969567287.globalScope, IdBuildString_2986344472, {id: nimCopy(null, IdBuildString_2986344472, NTI2046820355), name: [98,117,105,108,100], kind: 1, typ: newFunctionType_3087008169([anyType_3087008184(true)], stringType_3087008167()), value: nimCopy(null, funcBuildStringAny_2969567931, NTI3087007751), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
Label152: {
  var symbol_2969569472 = [null];
  var L_2969569559 = len_3019948709(ctx_2969567287.globalScope);
  Label153: {
    var h_2969569561 = 0;
    var colontmp__2969569562 = 0;
    colontmp__2969569562 = (ctx_2969567287.globalScope.data).length - 1;
    var res_2969569563 = 0;
    Label154: {
        Label155: while (true) {
        if (!(res_2969569563 <= colontmp__2969569562)) break Label155;
          h_2969569561 = res_2969569563;
          if (isFilled_1308622880(ctx_2969567287.globalScope.data[chckIndx(h_2969569561, 0, (ctx_2969567287.globalScope.data).length - 1)].Field0)) {
          symbol_2969569472[0] = ctx_2969567287.globalScope.data[chckIndx(h_2969569561, 0, (ctx_2969567287.globalScope.data).length - 1)]["Field2"];
          var _ = newSymbol_3019907315(ctx_2969567287, symbol_2969569472[0]);
          if (!((len_3019948709(ctx_2969567287.globalScope) == L_2969569559))) {
          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
          }
          
          }
          
          res_2969569563 = addInt(res_2969569563, 1);
        }
    };
  };
};

function isEditing_2969575204(self_2969575205) {
  var result_2969575206 = false;

    result_2969575206 = !((self_2969575205.textEditor == null));

  return result_2969575206;

}

function node_2969569717(editor_2969569718) {
  var result_2969569719 = null;

  BeforeRet: {
    result_2969569719 = editor_2969569718.selectedNode;
    break BeforeRet;
  };

  return result_2969569719;

}

function newSeq_2969570922(len_2969570924) {
  var result_2969570925 = [];

    result_2969570925 = new Array(len_2969570924); for (var i = 0 ; i < len_2969570924 ; ++i) { result_2969570925[i] = null; }
  return result_2969570925;

}

function expandIfNeeded_2969570912(deq_2969570914) {
              var Temporary5;
    var Temporary6;

    if ((deq_2969570914.mask == 0)) {
    var correctSizeHEX60gensym42_2969570916 = nextPowerOfTwo_872415437(4);
    deq_2969570914.mask = subInt(correctSizeHEX60gensym42_2969570916, 1);
    deq_2969570914.data = new Array(chckRange(correctSizeHEX60gensym42_2969570916, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2969570916, 0, 2147483647) ; ++i) { deq_2969570914.data[i] = null; }    }
    
    var cap_2969570921 = addInt(deq_2969570914.mask, 1);
    if ((cap_2969570921 <= deq_2969570914.count)) {
    var n_2969570930 = newSeq_2969570922(chckRange(mulInt(cap_2969570921, 2), 0, 2147483647));
    var i_2969570931 = 0;
    Label1: {
      var x_2969570941 = null;
      var x_2969570941_Idx = 0;
      var i_2969578981 = deq_2969570914.head;
      Label2: {
        var c_2969578983 = 0;
        var i_2969578984 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2969578984 < deq_2969570914.count)) break Label4;
              c_2969578983 = i_2969578984;
              x_2969570941 = deq_2969570914.data; x_2969570941_Idx = chckIndx(i_2969578981, 0, (deq_2969570914.data).length - 1);
              Temporary5 = x_2969570941[x_2969570941_Idx];
              x_2969570941[x_2969570941_Idx] = genericReset(x_2969570941[x_2969570941_Idx], NTI3003121668);
              n_2969570930[chckIndx(i_2969570931, 0, (n_2969570930).length - 1)] = Temporary5;
              i_2969570931 = addInt(i_2969570931, 1);
              i_2969578981 = (addInt(i_2969578981, 1) & deq_2969570914.mask);
              i_2969578984 = addInt(i_2969578984, 1);
            }
        };
      };
    };
    Temporary6 = n_2969570930;
    n_2969570930 = genericReset(n_2969570930, NTI2969569239);
    deq_2969570914.data = nimCopy(null, Temporary6, NTI2969569239);
    deq_2969570914.mask = subInt(mulInt(cap_2969570921, 2), 1);
    deq_2969570914.tail = deq_2969570914.count;
    deq_2969570914.head = 0;
    }
    

  
}

function addLast_2969570903(deq_2969570905, item_2969570906) {
    expandIfNeeded_2969570912(deq_2969570905);
    deq_2969570905.count = addInt(deq_2969570905.count, 1);
    deq_2969570905.data[chckIndx(deq_2969570905.tail, 0, (deq_2969570905.data).length - 1)] = item_2969570906;
    deq_2969570905.tail = (addInt(deq_2969570905.tail, 1) & deq_2969570905.mask);

  
}

function len_2969571044(deq_2969571046) {
  var result_2969571047 = 0;

    result_2969571047 = deq_2969571046.count;

  return result_2969571047;

}

function popFirst_2969571053(deq_2969571055) {
    var Temporary1;

  var result_2969571056 = null;

    if ((deq_2969571055.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2969571055.count = subInt(deq_2969571055.count, 1);
    Temporary1 = deq_2969571055.data[chckIndx(deq_2969571055.head, 0, (deq_2969571055.data).length - 1)];
    deq_2969571055.data[chckIndx(deq_2969571055.head, 0, (deq_2969571055.data).length - 1)] = genericReset(deq_2969571055.data[chckIndx(deq_2969571055.head, 0, (deq_2969571055.data).length - 1)], NTI3003121668);
    result_2969571056 = Temporary1;
    deq_2969571055.head = (addInt(deq_2969571055.head, 1) & deq_2969571055.mask);

  return result_2969571056;

}

function getBool_1627390147(n_1627390148, default_1627390149) {
      var Temporary1;

  var result_1627390150 = false;

  BeforeRet: {
    if (((n_1627390148 == null) || !((n_1627390148.kind == 1)))) {
    result_1627390150 = default_1627390149;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390148;
      if (ConstSet156[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390150 = Temporary1.bval;
      break BeforeRet;
    }
    
  };

  return result_1627390150;

}

function getOption_2818583613(editor_2818583615, path_2818583616, default_2818583617) {
  var result_2818583622 = false;

  BeforeRet: {
    Label1: {
      if ((editor_2818583615 == null)) {
      result_2818583622 = default_2818583617;
      break BeforeRet;
      }
      
      var nodeHEX60gensym165_2818583633 = HEX7BHEX7D_1627393316(editor_2818583615.options, nsuSplitString(path_2818583616, [46], -1));
      if ((nodeHEX60gensym165_2818583633 == null)) {
      result_2818583622 = default_2818583617;
      break BeforeRet;
      }
      
    };
    result_2818583622 = getBool_1627390147(nodeHEX60gensym165_2818583633, default_2818583617);
    break BeforeRet;
  };

  return result_2818583622;

}

function hasKey_2969569830(t_2969569833, key_2969569834) {
  var result_2969569835 = false;

    var hc_2969569836 = [0];
    result_2969569835 = (0 <= rawGet_3120562785(t_2969569833, key_2969569834, hc_2969569836, 0));

  return result_2969569835;

}

function contains_2969569824(t_2969569827, key_2969569828) {
  var result_2969569829 = false;

  BeforeRet: {
    result_2969569829 = hasKey_2969569830(t_2969569827, key_2969569828);
    break BeforeRet;
  };

  return result_2969569829;

}

function HEX5BHEX5D_2969569920(t_2969569923, key_2969569924) {
  var result_2969569925 = null;

    var hcHEX60gensym22_2969569926 = [0];
    var indexHEX60gensym22_2969569933 = rawGet_3120562785(t_2969569923, key_2969569924, hcHEX60gensym22_2969569926, 0);
    if ((0 <= indexHEX60gensym22_2969569933)) {
    result_2969569925 = t_2969569923.data[chckIndx(indexHEX60gensym22_2969569933, 0, (t_2969569923.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_2969569924);
    }
    

  return result_2969569925;

}

function xyHEX3D_2147483683(rect_2147483684, v_2147483685) {
    rect_2147483684.x = v_2147483685.x;
    rect_2147483684.y = v_2147483685.y;

  
}

function HEX2B_2147484403(aHEX60gensym72_2147484405, bHEX60gensym72_2147484406) {
  var result_2147484407 = ({x: 0.0, y: 0.0});

    result_2147484407 = nimCopy(result_2147484407, {x: (aHEX60gensym72_2147484405.x + bHEX60gensym72_2147484406.x), y: (aHEX60gensym72_2147484405.y + bHEX60gensym72_2147484406.y)}, NTI2164261152);

  return result_2147484407;

}

function wh_2147483686(rect_2147483687) {
  var result_2147483688 = ({x: 0.0, y: 0.0});

    result_2147483688 = nimCopy(result_2147483688, vec2_2164261725(rect_2147483687.w, rect_2147483687.h), NTI2164261152);

  return result_2147483688;

}

function absoluteBounds_3087009541(node_3087009542) {
  var result_3087009543 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    if ((node_3087009542.parent == null)) {
    result_3087009543 = nimCopy(result_3087009543, node_3087009542.bounds, NTI2147483653);
    }
    else {
      result_3087009543 = nimCopy(result_3087009543, rect_2147483672(HEX2B_2147484403(xy_2147483680(absoluteBounds_3087009541(node_3087009542.parent)), xy_2147483680(node_3087009542.bounds)), wh_2147483686(node_3087009542.bounds)), NTI2147483653);
    }
    

  return result_3087009543;

}

function absoluteBounds_3087009579(nodeRange_3087009580) {
  var result_3087009581 = [({x: 0.0, y: 0.0, w: 0.0, h: 0.0})];

    result_3087009581[0] = nimCopy(result_3087009581[0], nodeRange_3087009580.parent.children[chckIndx(nodeRange_3087009580.first, 0, (nodeRange_3087009580.parent.children).length - 1)].bounds, NTI2147483653);
    Label1: {
      var i_3087009586 = 0;
      var colontmp__2969579000 = 0;
      colontmp__2969579000 = addInt(nodeRange_3087009580.first, 1);
      var i_2969579001 = colontmp__2969579000;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579001 < nodeRange_3087009580.last)) break Label3;
            i_3087009586 = i_2969579001;
            result_3087009581[0] = nimCopy(result_3087009581[0], or_2147483728(result_3087009581[0], nodeRange_3087009580.parent.children[chckIndx(i_3087009586, 0, (nodeRange_3087009580.parent.children).length - 1)].bounds), NTI2147483653);
            i_2969579001 = addInt(i_2969579001, 1);
          }
      };
    };
    xyHEX3D_2147483683(result_3087009581[0], HEX2B_2147484403(xy_2147483680(result_3087009581[0]), xy_2147483680(absoluteBounds_3087009541(nodeRange_3087009580.parent))));

  return result_3087009581[0];

}

function and_2147483732(a_2147483733, b_2147483734) {
  var result_2147483735 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483735.x = max_33555642(a_2147483733.x, b_2147483734.x);
    result_2147483735.y = max_33555642(a_2147483733.y, b_2147483734.y);
    result_2147483735.w = (min_33555609((a_2147483733.x + a_2147483733.w), (b_2147483734.x + b_2147483734.w)) - result_2147483735.x);
    result_2147483735.h = (min_33555609((a_2147483733.y + a_2147483733.h), (b_2147483734.y + b_2147483734.h)) - result_2147483735.y);

  return result_2147483735;

}

function intersects_2130706609(a_2130706610, b_2130706611) {
  var result_2130706612 = false;

  BeforeRet: {
    var intersection_2130706613 = and_2147483732(a_2130706610, b_2130706611);
    result_2130706612 = ((0.0 < intersection_2130706613.w) && (0.0 < intersection_2130706613.h));
    break BeforeRet;
  };

  return result_2130706612;

}

function subbase_3003121765(node_3003121766) {
  var result_3003121767 = null;

  BeforeRet: {
    if ((node_3003121766.parent.parent == null)) {
    result_3003121767 = node_3003121766;
    break BeforeRet;
    }
    
    result_3003121767 = subbase_3003121765(node_3003121766.parent);
    break BeforeRet;
  };

  return result_3003121767;

}

function values_3019906314(t_3019906317) {
  var result_3019906318 = [];

    var iter_3019906323 = t_3019906317.values();
    for (var i in iter_3019906323) {result_3019906318.push(i);}

  return result_3019906318;

}

function hash_3087009997(input_3087009998) {
  var result_3087009999 = 0;

  BeforeRet: {
    if ((input_3087009998.mHash == 0)) {
    input_3087009998.mHash = HEX21HEX26_1325400067(hash_3003124022(input_3087009998.node), hash_2046820630(input_3087009998.selectedNode));
    input_3087009998.mHash = HEX21HEX24_1325400082(input_3087009998.mHash);
    }
    
    result_3087009999 = input_3087009998.mHash;
    break BeforeRet;
  };

  return result_3087009999;

}

function len_3087010135(t_3087010138) {
  var result_3087010139 = 0;

    result_3087010139 = t_3087010138.counter;

  return result_3087010139;

}

function HEX3DHEX3D_3087009824(x_3087009826, y_3087009827) {
  var result_3087009828 = false;

  BeforeRet: {
    var sameObject_3087009835 = false;
    sameObject_3087009835 = x_3087009826 === y_3087009827
    if (sameObject_3087009835) {
    result_3087009828 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009826).length == (y_3087009827).length))) {
    result_3087009828 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009849 = 0;
      var colontmp__2969579021 = 0;
      colontmp__2969579021 = subInt((x_3087009826).length, 1);
      var res_2969579022 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969579022 <= colontmp__2969579021)) break Label3;
            i_3087009849 = res_2969579022;
            if (!(eqStrings(x_3087009826[chckIndx(i_3087009849, 0, (x_3087009826).length - 1)], y_3087009827[chckIndx(i_3087009849, 0, (y_3087009827).length - 1)]))) {
            result_3087009828 = false;
            break BeforeRet;
            }
            
            res_2969579022 = addInt(res_2969579022, 1);
          }
      };
    };
    result_3087009828 = true;
    break BeforeRet;
  };

  return result_3087009828;

}

function HEX3DHEX3D_2785018366(x_2785018368, y_2785018369) {
  var result_2785018370 = false;

  BeforeRet: {
    if (!((x_2785018368.x == y_2785018369.x))) {
    result_2785018370 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018368.y == y_2785018369.y))) {
    result_2785018370 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018368.w == y_2785018369.w))) {
    result_2785018370 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018368.h == y_2785018369.h))) {
    result_2785018370 = false;
    break BeforeRet;
    }
    
    result_2785018370 = true;
    break BeforeRet;
  };

  return result_2785018370;

}

function HEX3DHEX3D_3087009858(x_3087009860, y_3087009861) {
  var result_3087009862 = false;

  BeforeRet: {
    var sameObject_3087009869 = false;
    sameObject_3087009869 = x_3087009860 === y_3087009861
    if (sameObject_3087009869) {
    result_3087009862 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009860).length == (y_3087009861).length))) {
    result_3087009862 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009883 = 0;
      var colontmp__2969579025 = 0;
      colontmp__2969579025 = subInt((x_3087009860).length, 1);
      var res_2969579026 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969579026 <= colontmp__2969579025)) break Label3;
            i_3087009883 = res_2969579026;
            if (!(HEX3DHEX3D_3087009807(x_3087009860[chckIndx(i_3087009883, 0, (x_3087009860).length - 1)], y_3087009861[chckIndx(i_3087009883, 0, (y_3087009861).length - 1)]))) {
            result_3087009862 = false;
            break BeforeRet;
            }
            
            res_2969579026 = addInt(res_2969579026, 1);
          }
      };
    };
    result_3087009862 = true;
    break BeforeRet;
  };

  return result_3087009862;

}

function HEX3DHEX3D_3087009807(a_3087009808, b_3087009809) {
  var result_3087009810 = false;

  BeforeRet: {
    if ((a_3087009808 == null)) {
    result_3087009810 = (b_3087009809 == null);
    break BeforeRet;
    }
    
    if ((b_3087009809 == null)) {
    result_3087009810 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3087009808.text, b_3087009809.text))) {
    result_3087009810 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009808.node == b_3087009809.node))) {
    result_3087009810 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087009824(a_3087009808.colors, b_3087009809.colors))) {
    result_3087009810 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2785018366(a_3087009808.bounds, b_3087009809.bounds))) {
    result_3087009810 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009808.render == b_3087009809.render))) {
    result_3087009810 = false;
    break BeforeRet;
    }
    
    result_3087009810 = HEX3DHEX3D_3087009858(a_3087009808.children, b_3087009809.children);
    break BeforeRet;
  };

  return result_3087009810;

}

function getOrDefault_3087010724(t_3087010727, key_3087010728) {
  var result_3087010729 = null;

    var hcHEX60gensym49_3087010732 = [0];
    var indexHEX60gensym49_3087010739 = rawGet_3087010437(t_3087010727, key_3087010728, hcHEX60gensym49_3087010732, 0);
    if ((0 <= indexHEX60gensym49_3087010739)) {
    result_3087010729 = t_3087010727.data[chckIndx(indexHEX60gensym49_3087010739, 0, (t_3087010727.data).length - 1)].Field2;
    }
    

  return result_3087010729;

}

function HEX3DHEX3D_3087010079(s_3087010082, t_3087010083) {
  var result_3087010084 = false;

  BeforeRet: {
    if ((s_3087010082.counter == t_3087010083.counter)) {
    Label1: {
      var keyHEX60gensym43_3087010388 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var valHEX60gensym43_3087010389 = null;
      var L_2969579014 = len_3087010135(s_3087010082);
      Label2: {
        var h_2969579016 = 0;
        var colontmp__2969579017 = 0;
        colontmp__2969579017 = (s_3087010082.data).length - 1;
        var res_2969579018 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969579018 <= colontmp__2969579017)) break Label4;
              h_2969579016 = res_2969579018;
              if (isFilled_1308622880(s_3087010082.data[chckIndx(h_2969579016, 0, (s_3087010082.data).length - 1)].Field0)) {
              keyHEX60gensym43_3087010388 = nimCopy(keyHEX60gensym43_3087010388, s_3087010082.data[chckIndx(h_2969579016, 0, (s_3087010082.data).length - 1)].Field1, NTI2046820355);
              valHEX60gensym43_3087010389 = s_3087010082.data[chckIndx(h_2969579016, 0, (s_3087010082.data).length - 1)].Field2;
              if (!(hasKey_3087010430(t_3087010083, keyHEX60gensym43_3087010388))) {
              result_3087010084 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D_3087009807(getOrDefault_3087010724(t_3087010083, keyHEX60gensym43_3087010388), valHEX60gensym43_3087010389))) {
              result_3087010084 = false;
              break BeforeRet;
              }
              
              if (!((len_3087010135(s_3087010082) == L_2969579014))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969579018 = addInt(res_2969579018, 1);
            }
        };
      };
    };
    result_3087010084 = true;
    break BeforeRet;
    }
    
  };

  return result_3087010084;

}

function HEX3DHEX3D_3087010000(a_3087010001, b_3087010002) {
  var result_3087010003 = false;

  BeforeRet: {
    if ((a_3087010001 == null)) {
    result_3087010003 = (b_3087010002 == null);
    break BeforeRet;
    }
    
    if ((b_3087010002 == null)) {
    result_3087010003 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010001.revision == b_3087010002.revision))) {
    result_3087010003 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010001.node == b_3087010002.node))) {
    result_3087010003 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2046820626(a_3087010001.selectedNode, b_3087010002.selectedNode))) {
    result_3087010003 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087010079(a_3087010001.replacements, b_3087010002.replacements))) {
    result_3087010003 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010001.renderDivisionVertically == b_3087010002.renderDivisionVertically))) {
    result_3087010003 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010001.inlineBlocks == b_3087010002.inlineBlocks))) {
    result_3087010003 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010001.indent == b_3087010002.indent))) {
    result_3087010003 = false;
    break BeforeRet;
    }
    
    result_3087010003 = true;
    break BeforeRet;
  };

  return result_3087010003;

}

function getItem_3019906301(selfHEX60gensym78_3019906302) {
  var result_3019906303 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym78_3019906302.id, null_2046820646)) {
    selfHEX60gensym78_3019906302.id = nimCopy(selfHEX60gensym78_3019906302.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym78_3019906302.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,56,49,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,56,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969579028 = nimCopy(null, selfHEX60gensym78_3019906302.id, NTI2046820355);
    var colontmp__2969579029 = 1;
    result_3019906303 = nimCopy(result_3019906303, {Field0: nimCopy(null, colontmp__2969579028, NTI2046820355), Field1: colontmp__2969579029}, NTI3036676199);
    break BeforeRet;
  };

  return result_3019906303;

}

function HEX5BHEX5DHEX3D_3019906481(t_3019906484, key_3019906485, val_3019906486) {
    t_3019906484.set(mapKeyJs_3019899557(key_3019906485), val_3019906486);

  
}

function getOrCreateNodeLayoutInput_3019906310(ctxHEX60gensym79_3019906311, dataHEX60gensym79_3019906312) {
  var result_3019906313 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym79_3019906346 = null;
      var colontmp__2969579004 = [];
      colontmp__2969579004 = values_3019906314(ctxHEX60gensym79_3019906311.itemsNodeLayoutInput);
      var i_2969579006 = 0;
      var L_2969579007 = (colontmp__2969579004).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579006 < L_2969579007)) break Label3;
            existingHEX60gensym79_3019906346 = colontmp__2969579004[chckIndx(i_2969579006, 0, (colontmp__2969579004).length - 1)];
            if (((hash_3087009997(existingHEX60gensym79_3019906346) == hash_3087009997(dataHEX60gensym79_3019906312)) && HEX3DHEX3D_3087010000(existingHEX60gensym79_3019906346, dataHEX60gensym79_3019906312))) {
            result_3019906313 = existingHEX60gensym79_3019906346;
            break BeforeRet;
            }
            
            i_2969579006 = addInt(i_2969579006, 1);
            if (!(((colontmp__2969579004).length == L_2969579007))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var itemHEX60gensym79_3019906347 = getItem_3019906301(dataHEX60gensym79_3019906312);
    var keyHEX60gensym79_3019906348 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym79_3019906347, NTI3036676199), Field1: -1}, NTI3036676202);
    HEX5BHEX5DHEX3D_3036679287(ctxHEX60gensym79_3019906311.depGraph.changed, keyHEX60gensym79_3019906348, ctxHEX60gensym79_3019906311.depGraph.revision);
    HEX5BHEX5DHEX3D_3019906481(ctxHEX60gensym79_3019906311.itemsNodeLayoutInput, itemHEX60gensym79_3019906347, dataHEX60gensym79_3019906312);
    result_3019906313 = dataHEX60gensym79_3019906312;
    break BeforeRet;
  };

  return result_3019906313;

}

function contains_3019931413(t_3019931416, key_3019931417) {
  var result_3019931418 = false;

    result_3019931418 = t_3019931416.has(mapKeyJs_3019902288(key_3019931417));

  return result_3019931418;

}

function nimFloatToString_385876087(a_385876088) {
  var result_385876089 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876088))
      result_385876089 = a_385876088 === 0 && 1 / a_385876088 < 0 ? "-0.0" : a_385876088+".0"
    else {
      result_385876089 = a_385876088+""
      if(nimOnlyDigitsOrMinus(result_385876089)){
        result_385876089 = a_385876088+".0"
      }
    }
  

  return result_385876089;

}

function addFloat_2164261798(result_2164261800, result_2164261800_Idx, x_2164261801) {
    add_33556386(result_2164261800, result_2164261800_Idx, nimFloatToString_385876087(x_2164261801));

  
}

function HEX24_2164261794(x_2164261796) {
  var result_2164261797 = [[]];

    addFloat_2164261798(result_2164261797, 0, x_2164261796);

  return result_2164261797[0];

}

function HEX24_2147483713(a_2147483714) {
  var result_2147483715 = [];

    result_2147483715 = nimCopy(null, ([40] || []).concat(HEX24_2164261794(a_2147483714.x) || [],[44,32] || [],HEX24_2164261794(a_2147483714.y) || [],[58,32] || [],HEX24_2164261794(a_2147483714.w) || [],[32,120,32] || [],HEX24_2164261794(a_2147483714.h) || [],[41] || []), NTI33554449);

  return result_2147483715;

}

function collectionToString_3087009629(x_3087009631, prefix_3087009632, separator_3087009633, suffix_3087009634) {
  var result_3087009635 = [[]];

    result_3087009635[0] = nimCopy(null, prefix_3087009632, NTI33554449);
    var firstElement_3087009636 = true;
    Label1: {
      var value_3087009640 = [];
      var i_2969579035 = 0;
      var L_2969579036 = (x_3087009631).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579035 < L_2969579036)) break Label3;
            value_3087009640 = x_3087009631[i_2969579035];
            if (firstElement_3087009636) {
            firstElement_3087009636 = false;
            }
            else {
            result_3087009635[0].push.apply(result_3087009635[0], separator_3087009633);;
            }
            
            addQuoted_1593835572(result_3087009635, 0, value_3087009640);
            i_2969579035 += 1;
            if (!(((x_3087009631).length == L_2969579036))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087009635[0].push.apply(result_3087009635[0], suffix_3087009634);;

  return result_3087009635[0];

}

function HEX24_3087009625(x_3087009627) {
  var result_3087009628 = [];

    result_3087009628 = nimCopy(null, collectionToString_3087009629(x_3087009627, [64,91], [44,32], [93]), NTI33554449);

  return result_3087009628;

}

function HEX24_3087009618(vnode_3087009619) {
  var result_3087009620 = [];

    result_3087009620 = nimCopy(null, [86,78,111,100,101,40,39], NTI33554449);
    result_3087009620.push.apply(result_3087009620, (vnode_3087009619.text || []).concat([39,44,32] || []));;
    result_3087009620.push.apply(result_3087009620, (HEX24_2147483713(vnode_3087009619.bounds) || []).concat([44,32] || []));;
    if (!((vnode_3087009619.node == null))) {
    result_3087009620.push.apply(result_3087009620, (HEX24_3003123671(vnode_3087009619.node) || []).concat([44,32] || []));;
    }
    
    result_3087009620.push.apply(result_3087009620, (HEX24_3087009625(vnode_3087009619.colors) || []).concat([44,32] || []));;
    result_3087009620.push.apply(result_3087009620, [41]);;

  return result_3087009620;

}

function join_3087009935(a_3087009937, sep_3087009938) {
  var result_3087009939 = [];

    result_3087009939 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3087009954 = 0;
      var x_3087009955 = null;
      var i_2969579032 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579032 < (a_3087009937).length)) break Label3;
            i_3087009954 = i_2969579032;
            x_3087009955 = a_3087009937[chckIndx(i_2969579032, 0, (a_3087009937).length - 1)];
            if ((0 < i_3087009954)) {
            result_3087009939.push.apply(result_3087009939, sep_3087009938);;
            }
            
            result_3087009939.push.apply(result_3087009939, HEX24_3087009618(x_3087009955));;
            i_2969579032 = addInt(i_2969579032, 1);
          }
      };
    };

  return result_3087009939;

}

function HEX24_3087009932(nodeLayout_3087009933) {
  var result_3087009934 = [];

    result_3087009934 = nimCopy(null, join_3087009935(nodeLayout_3087009933.root.children, [10]), NTI33554449);

  return result_3087009934;

}

function HEX5BHEX5D_3019931507(t_3019931510, key_3019931511) {
  var result_3019931512 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

    result_3019931512 = nimCopy(result_3019931512, t_3019931510.get(mapKeyJs_3019902288(key_3019931511)), NTI3087007775);

  return result_3019931512;

}

function HEX24_3087009969(input_3087009970) {
  var result_3087009971 = [];

  BeforeRet: {
    var fmtRes_3087009976 = [mnewString(0)];
    fmtRes_3087009976[0].push.apply(fmtRes_3087009976[0], [78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,40]);;
    formatValue_3036676340(fmtRes_3087009976, 0, input_3087009970.id, []);
    fmtRes_3087009976[0].push.apply(fmtRes_3087009976[0], [44,32,110,111,100,101,58,32]);;
    formatValue_3087008586(fmtRes_3087009976, 0, input_3087009970.node, []);
    fmtRes_3087009976[0].push.apply(fmtRes_3087009976[0], [44,32,115,101,108,101,99,116,101,100,58,32]);;
    formatValue_3036676340(fmtRes_3087009976, 0, input_3087009970.selectedNode, []);
    fmtRes_3087009976[0].push.apply(fmtRes_3087009976[0], [44,32,114,101,118,105,115,105,111,110,58,32]);;
    formatValue_2701131945(fmtRes_3087009976, 0, input_3087009970.revision, []);
    fmtRes_3087009976[0].push.apply(fmtRes_3087009976[0], [41]);;
    result_3087009971 = nimCopy(null, fmtRes_3087009976[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087009971;

}

function computeNodeLayout_3019931546(ctxHEX60gensym120_3019931547, inputHEX60gensym120_3019931548, recordDependencyHEX60gensym120_3019931549) {
    var Temporary4;
    var Temporary6;

  var result_3019931550 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
++excHandler;
    try {
    var timerHEX60gensym120_3019931551 = startTimer_2080374869();
    ctxHEX60gensym120_3019931547.statsNodeLayout.totalCalls = addInt(ctxHEX60gensym120_3019931547.statsNodeLayout.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym120_3019931636 = getItem_3019906301(inputHEX60gensym120_3019931548);
    var keyHEX60gensym120_3019931637 = {Field0: nimCopy(null, itemHEX60gensym120_3019931636, NTI3036676199), Field1: 7};
    if (recordDependencyHEX60gensym120_3019931549) {
    recordDependency_3019905701(ctxHEX60gensym120_3019931547, itemHEX60gensym120_3019931636, 7);
    }
    
    var colorHEX60gensym120_3019931638 = nodeColor_3036678422(ctxHEX60gensym120_3019931547.depGraph, keyHEX60gensym120_3019931637, 0);
    if (ctxHEX60gensym120_3019931547.enableLogging) {
    Temporary4 = 1;
    }
    else {
    Temporary4 = 0;
    }
    
    currentIndent_3036676111[0] = addInt(currentIndent_3036676111[0], Temporary4);
    try {
    if (ctxHEX60gensym120_3019931547.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(subInt(currentIndent_3036676111[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [78,111,100,101,76,97,121,111,117,116], [32], reprEnum(colorHEX60gensym120_3019931638, NTI3036676204), [44,32], HEX24_3036676332(itemHEX60gensym120_3019931636));
    }
    
    if ((colorHEX60gensym120_3019931638 == 2)) {
    if (!(contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    if (ctxHEX60gensym120_3019931547.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym120_3019931547, keyHEX60gensym120_3019931637);
    if (true) {
    markRed_3036679302(ctxHEX60gensym120_3019931547.depGraph, keyHEX60gensym120_3019931637, []);
    }
    
    if ((ctxHEX60gensym120_3019931547.enableLogging && contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009932(HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548)));
    }
    
    }
    else {
      if ((ctxHEX60gensym120_3019931547.enableLogging && contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009932(HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548)));
      }
      
    }
    
    if (!(contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009969(inputHEX60gensym120_3019931548) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931550 = nimCopy(result_3019931550, HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548), NTI3087007775);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym120_3019931638 == 0)) {
    if (!(contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    if (ctxHEX60gensym120_3019931547.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019907603(ctxHEX60gensym120_3019931547, keyHEX60gensym120_3019931637);
    if (true) {
    markRed_3036679302(ctxHEX60gensym120_3019931547.depGraph, keyHEX60gensym120_3019931637, []);
    }
    
    if ((ctxHEX60gensym120_3019931547.enableLogging && contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009932(HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548)));
    }
    
    if (!(contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009969(inputHEX60gensym120_3019931548) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931550 = nimCopy(result_3019931550, HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548), NTI3087007775);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym120_3019931547.enableLogging) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911122(ctxHEX60gensym120_3019931547, keyHEX60gensym120_3019931637, true) == 0)) {
    if ((ctxHEX60gensym120_3019931547.enableLogging && contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087009932(HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548)));
    }
    
    if (!(contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009969(inputHEX60gensym120_3019931548) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931550 = nimCopy(result_3019931550, HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548), NTI3087007775);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym120_3019931547.enableLogging) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019907603(ctxHEX60gensym120_3019931547, keyHEX60gensym120_3019931637);
      if (true) {
      markRed_3036679302(ctxHEX60gensym120_3019931547.depGraph, keyHEX60gensym120_3019931637, []);
      }
      
      if ((ctxHEX60gensym120_3019931547.enableLogging && contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
      rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009932(HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548)));
      }
      
      if (!(contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
      raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009969(inputHEX60gensym120_3019931548) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019931550 = nimCopy(result_3019931550, HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548), NTI3087007775);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym120_3019931638 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,52,50,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym120_3019931547.enableLogging && contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    rawEcho(repeat2_3036676112([124,32], chckRange(currentIndent_3036676111[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009932(HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548)));
    }
    
    if (!(contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    force_3019907603(ctxHEX60gensym120_3019931547, keyHEX60gensym120_3019931637);
    }
    
    if (!(contains_3019931413(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009969(inputHEX60gensym120_3019931548) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931550 = nimCopy(result_3019931550, HEX5BHEX5D_3019931507(ctxHEX60gensym120_3019931547.queryCacheNodeLayout, inputHEX60gensym120_3019931548), NTI3087007775);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym120_3019931547.enableLogging) {
    Temporary6 = 1;
    }
    else {
    Temporary6 = 0;
    }
    
    currentIndent_3036676111[0] = subInt(currentIndent_3036676111[0], Temporary6);
    }
    } finally {
    if (((ctxHEX60gensym120_3019931547.dependencyStack).length == 0)) {
    clear_3019913072(ctxHEX60gensym120_3019931547.recursiveQueries);
    }
    
    }
    } finally {
    HEX2BHEX3D_855640304(ctxHEX60gensym120_3019931547.statsNodeLayout, "time", elapsed_2080374866(timerHEX60gensym120_3019931551));
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym120_3019931547.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019931550;

}

function prev_3003121903(node_3003121904) {
  var result_3003121906 = ({val: null});

  BeforeRet: {
    if ((node_3003121904.parent == null)) {
    result_3003121906 = nimCopy(result_3003121906, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var i_3003121913 = index_3003121772(node_3003121904);
    if ((i_3003121913 <= 0)) {
    result_3003121906 = nimCopy(result_3003121906, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003121906 = nimCopy(result_3003121906, some_3003121890(HEX5BHEX5D_3003121748(node_3003121904.parent, subInt(i_3003121913, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_3003121906;

}

function HEX2BHEX3D_2969570245(aHEX60gensym79_2969570247, bHEX60gensym79_2969570248) {
    HEX2BHEX3D_2147483761(aHEX60gensym79_2969570247, "x", bHEX60gensym79_2969570248);
    HEX2BHEX3D_2147483761(aHEX60gensym79_2969570247, "y", bHEX60gensym79_2969570248);

  
}

function bounds_3087009966(nodeLayout_3087009967) {
  var result_3087009968 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

  BeforeRet: {
    result_3087009968 = nimCopy(result_3087009968, nodeLayout_3087009967.root.bounds, NTI2147483653);
    break BeforeRet;
  };

  return result_3087009968;

}

function insert_2969570257(x_2969570259, x_2969570259_Idx, item_2969570260, i_2969570261) {
    var it_2969570281 = {Field0: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null}), Field1: ({x: 0.0, y: 0.0})};
    x_2969570259[x_2969570259_Idx] = x_2969570259[x_2969570259_Idx] || []; x_2969570259[x_2969570259_Idx].splice(i_2969570261, 0, it_2969570281);
    x_2969570259[x_2969570259_Idx][chckIndx(i_2969570261, 0, (x_2969570259[x_2969570259_Idx]).length - 1)] = nimCopy(x_2969570259[x_2969570259_Idx][chckIndx(i_2969570261, 0, (x_2969570259[x_2969570259_Idx]).length - 1)], item_2969570260, NTI2969568639);

  
}

function next_3003121857(node_3003121858) {
  var result_3003121863 = ({val: null});

  BeforeRet: {
    if ((node_3003121858.parent == null)) {
    result_3003121863 = nimCopy(result_3003121863, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var i_3003121887 = index_3003121772(node_3003121858);
    if ((subInt(len_3003121752(node_3003121858.parent), 1) <= i_3003121887)) {
    result_3003121863 = nimCopy(result_3003121863, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003121863 = nimCopy(result_3003121863, some_3003121890(HEX5BHEX5D_3003121748(node_3003121858.parent, addInt(i_3003121887, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_3003121863;

}

function HEX5BHEX5D_2969570729(t_2969570732, key_2969570733) {
  var result_2969570734 = ({parent: null, first: 0, last: 0});

    var hcHEX60gensym20_2969570735 = [0];
    var indexHEX60gensym20_2969570742 = rawGet_3120562785(t_2969570732, key_2969570733, hcHEX60gensym20_2969570735, 0);
    if ((0 <= indexHEX60gensym20_2969570742)) {
    result_2969570734 = nimCopy(result_2969570734, t_2969570732.data[chckIndx(indexHEX60gensym20_2969570742, 0, (t_2969570732.data).length - 1)].Field2, NTI3087007774);
    }
    else {
    raiseKeyError_3003123480(key_2969570733);
    }
    

  return result_2969570734;

}

function handleSelectedNodeChanged_2969569720(editor_2969569721) {
          
function HEX3Aanonymous_2969570118(t_2969570121) {
            var result_2969570124 = ({x: 0.0, y: 0.0});

              result_2969570124 = nimCopy(result_2969570124, measureText_2768240805(gEditor.platform, t_2969570121), NTI2164261152);

            return result_2969570124;

          }
            var Temporary9;
            var Temporary10;
              var Temporary11;
          
function HEX3Aanonymous_2969570219(t_2969570222) {
            var result_2969570225 = ({x: 0.0, y: 0.0});

              result_2969570225 = nimCopy(result_2969570225, measureText_2768240805(gEditor.platform, t_2969570222), NTI2164261152);

            return result_2969570225;

          }
            var Temporary15;
            var Temporary16;
              var Temporary17;
          
function HEX3Aanonymous_2969570396(t_2969570399) {
            var result_2969570402 = ({x: 0.0, y: 0.0});

              result_2969570402 = nimCopy(result_2969570402, measureText_2768240805(gEditor.platform, t_2969570399), NTI2164261152);

            return result_2969570402;

          }
    
function HEX3Aanonymous_2969570580(t_2969570583) {
      var result_2969570586 = ({x: 0.0, y: 0.0});

        result_2969570586 = nimCopy(result_2969570586, measureText_2768240805(gEditor.platform, t_2969570583), NTI2164261152);

      return result_2969570586;

    }

  BeforeRet: {
    markDirty_2415919143(editor_2969569721);
    var indent_2969569731 = getOption_2818583574(editor_2969569721.editor, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_2969569741 = getOption_2818583613(editor_2969569721.editor, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_2969569751 = getOption_2818583613(editor_2969569721.editor, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    var node_2969569752 = node_2969569717(editor_2969569721);
    var foundNode_2969569753 = false;
    var i_2969569754 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_2969569754 < (editor_2969569721.lastLayouts).length)) break Label2;
          try {
          var layout_2969569764 = nimCopy(null, editor_2969569721.lastLayouts[chckIndx(i_2969569754, 0, (editor_2969569721.lastLayouts).length - 1)].Field0, NTI3087007775);
          var offset_2969569765 = nimCopy(null, editor_2969569721.lastLayouts[chckIndx(i_2969569754, 0, (editor_2969569721.lastLayouts).length - 1)].Field1, NTI2164261152);
          if (contains_2969569824(layout_2969569764.nodeToVisualNode, node_2969569752.id)) {
          var visualNode_2969570023 = nimCopy(null, HEX5BHEX5D_2969569920(layout_2969569764.nodeToVisualNode, node_2969569752.id), NTI3087007774);
          var bounds_2969570033 = HEX2B_2130706587(absoluteBounds_3087009579(visualNode_2969570023), vec2_2164261725(0.0, offset_2969569765.y));
          if (!(intersects_2130706609(bounds_2969570033, editor_2969569721.lastBounds))) {
          break Label1;
          }
          
          if (((bounds_2969570033.y + bounds_2969570033.h) < 100.0)) {
          var subbase_2969570034 = subbase_3003121765(node_2969569752);
          editor_2969569721.previousBaseIndex = index_3003121772(subbase_2969570034);
          editor_2969569721.scrollOffset = (100.0 - ((bounds_2969570033.y + bounds_2969570033.h) - offset_2969569765.y));
          }
          else {
          if (((editor_2969569721.lastBounds.h - 100.0) < bounds_2969570033.y)) {
          var subbase_2969570035 = subbase_3003121765(node_2969569752);
          editor_2969569721.previousBaseIndex = index_3003121772(subbase_2969570035);
          editor_2969569721.scrollOffset = ((-((bounds_2969570033.y - offset_2969569765.y)) + editor_2969569721.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2969569754 = addInt(i_2969569754, 1);
          }
        }
    };
    i_2969569754 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_2969569754 < (editor_2969569721.lastLayouts).length)) break Label5;
          try {
          var layout_2969570044 = nimCopy(null, editor_2969569721.lastLayouts[chckIndx(i_2969569754, 0, (editor_2969569721.lastLayouts).length - 1)].Field0, NTI3087007775);
          var offset_2969570045 = [nimCopy(null, editor_2969569721.lastLayouts[chckIndx(i_2969569754, 0, (editor_2969569721.lastLayouts).length - 1)].Field1, NTI2164261152)];
          var targetNode_2969570046 = node_2969569752;
          Label7: {
              Label8: while (true) {
              if (!(!((targetNode_2969570046 == null)) && !(contains_2969569824(layout_2969570044.nodeToVisualNode, targetNode_2969570046.id)))) break Label8;
                targetNode_2969570046 = targetNode_2969570046.parent;
              }
          };
          if (!((targetNode_2969570046 == null))) {
          var input_2969570125 = getOrCreateNodeLayoutInput_3019906310(ctx_2969567287, {node: subbase_3003121765(targetNode_2969570046), selectedNode: nimCopy(null, node_2969569752.id, NTI2046820355), measureText: HEX3Aanonymous_2969570118, indent: indent_2969569731, renderDivisionVertically: verticalDivision_2969569751, inlineBlocks: inlineBlocks_2969569741, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570044 = nimCopy(layout_2969570044, computeNodeLayout_3019931546(ctx_2969567287, input_2969570125, true), NTI3087007775);
          foundNode_2969569753 = true;
          }
          else {
            if (!(node_2969569752.parent == editor_2969569721.document.rootNode)) Temporary10 = false; else {              var oHEX60gensym31_2969570132 = prev_3003121903(node_2969569752);
              if (!isSome_3003123546(oHEX60gensym31_2969570132)) Temporary11 = false; else {                var prev_2969570155 = get_3003123566(oHEX60gensym31_2969570132);
                Temporary11 = true;              }              Temporary10 = Temporary11;            }            if (!Temporary10) Temporary9 = false; else {              Temporary9 = contains_2969569824(layout_2969570044.nodeToVisualNode, prev_2969570155.id);            }          if (Temporary9) {
          var input_2969570226 = getOrCreateNodeLayoutInput_3019906310(ctx_2969567287, {node: subbase_3003121765(node_2969569752), selectedNode: nimCopy(null, node_2969569752.id, NTI2046820355), measureText: HEX3Aanonymous_2969570219, indent: indent_2969569731, renderDivisionVertically: verticalDivision_2969569751, inlineBlocks: inlineBlocks_2969569741, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570044 = nimCopy(layout_2969570044, computeNodeLayout_3019931546(ctx_2969567287, input_2969570226, true), NTI3087007775);
          HEX2BHEX3D_2969570245(offset_2969570045[0], bounds_3087009966(layout_2969570044).h);
          insert_2969570257(editor_2969569721, "lastLayouts", {Field0: nimCopy(null, layout_2969570044, NTI3087007775), Field1: nimCopy(null, offset_2969570045[0], NTI2164261152)}, chckRange(addInt(i_2969569754, 1), 0, 2147483647));
          Label12: {
            var k_2969570298 = 0;
            var colontmp__2969578990 = 0;
            var colontmp__2969578991 = 0;
            colontmp__2969578990 = addInt(i_2969569754, 1);
            colontmp__2969578991 = (editor_2969569721.lastLayouts).length - 1;
            var res_2969578992 = colontmp__2969578990;
            Label13: {
                Label14: while (true) {
                if (!(res_2969578992 <= colontmp__2969578991)) break Label14;
                  k_2969570298 = res_2969578992;
                  HEX2BHEX3D_2147483761(editor_2969569721.lastLayouts[chckIndx(k_2969570298, 0, (editor_2969569721.lastLayouts).length - 1)].Field1, "y", bounds_3087009966(layout_2969570044).h);
                  res_2969578992 = addInt(res_2969578992, 1);
                }
            };
          };
          foundNode_2969569753 = true;
          }
          else {
            if (!(node_2969569752.parent == editor_2969569721.document.rootNode)) Temporary16 = false; else {              var oHEX60gensym34_2969570309 = next_3003121857(node_2969569752);
              if (!isSome_3003123546(oHEX60gensym34_2969570309)) Temporary17 = false; else {                var next_2969570332 = get_3003123566(oHEX60gensym34_2969570309);
                Temporary17 = true;              }              Temporary16 = Temporary17;            }            if (!Temporary16) Temporary15 = false; else {              Temporary15 = contains_2969569824(layout_2969570044.nodeToVisualNode, next_2969570332.id);            }          if (Temporary15) {
          var input_2969570403 = getOrCreateNodeLayoutInput_3019906310(ctx_2969567287, {node: subbase_3003121765(node_2969569752), selectedNode: nimCopy(null, node_2969569752.id, NTI2046820355), measureText: HEX3Aanonymous_2969570396, indent: indent_2969569731, renderDivisionVertically: verticalDivision_2969569751, inlineBlocks: inlineBlocks_2969569741, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570044 = nimCopy(layout_2969570044, computeNodeLayout_3019931546(ctx_2969567287, input_2969570403, true), NTI3087007775);
          insert_2969570257(editor_2969569721, "lastLayouts", {Field0: nimCopy(null, layout_2969570044, NTI3087007775), Field1: nimCopy(null, offset_2969570045[0], NTI2164261152)}, chckRange(i_2969569754, 0, 2147483647));
          Label18: {
            var k_2969570416 = 0;
            var colontmp__2969578995 = 0;
            colontmp__2969578995 = (editor_2969569721.lastLayouts).length - 1;
            var res_2969578996 = i_2969569754;
            Label19: {
                Label20: while (true) {
                if (!(res_2969578996 <= colontmp__2969578995)) break Label20;
                  k_2969570416 = res_2969578996;
                  HEX2BHEX3D_2147483761(editor_2969569721.lastLayouts[chckIndx(k_2969570416, 0, (editor_2969569721.lastLayouts).length - 1)].Field1, "y", bounds_3087009966(layout_2969570044).h);
                  res_2969578996 = addInt(res_2969578996, 1);
                }
            };
          };
          foundNode_2969569753 = true;
          }
          }}
          if ((foundNode_2969569753 && contains_2969569824(layout_2969570044.nodeToVisualNode, node_2969569752.id))) {
          var visualNode_2969570566 = nimCopy(null, HEX5BHEX5D_2969569920(layout_2969570044.nodeToVisualNode, node_2969569752.id), NTI3087007774);
          var bounds_2969570576 = HEX2B_2130706587(absoluteBounds_3087009579(visualNode_2969570566), vec2_2164261725(0.0, offset_2969570045[0].y));
          if (!(intersects_2130706609(bounds_2969570576, rect_2147483666(0.0, 0.0, editor_2969569721.lastBounds.w, editor_2969569721.lastBounds.h)))) {
          break Label4;
          }
          
          if (((bounds_2969570576.y + bounds_2969570576.h) < 100.0)) {
          var subbase_2969570577 = subbase_3003121765(node_2969569752);
          editor_2969569721.previousBaseIndex = index_3003121772(subbase_2969570577);
          editor_2969569721.scrollOffset = (100.0 - ((bounds_2969570576.y + bounds_2969570576.h) - offset_2969570045[0].y));
          }
          else {
          if (((editor_2969569721.lastBounds.h - 100.0) < bounds_2969570576.y)) {
          var subbase_2969570578 = subbase_3003121765(node_2969569752);
          editor_2969569721.previousBaseIndex = index_3003121772(subbase_2969570578);
          editor_2969569721.scrollOffset = ((-((bounds_2969570576.y - offset_2969570045[0].y)) + editor_2969569721.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2969569754 = addInt(i_2969569754, 1);
          }
        }
    };
    var subbase_2969570579 = subbase_3003121765(node_2969569752);
    var input_2969570587 = getOrCreateNodeLayoutInput_3019906310(ctx_2969567287, {node: subbase_2969570579, selectedNode: nimCopy(null, node_2969569752.id, NTI2046820355), measureText: HEX3Aanonymous_2969570580, indent: indent_2969569731, renderDivisionVertically: verticalDivision_2969569751, inlineBlocks: inlineBlocks_2969569741, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
    var layout_2969570588 = computeNodeLayout_3019931546(ctx_2969567287, input_2969570587, true);
    if (contains_2969569824(layout_2969570588.nodeToVisualNode, node_2969569752.id)) {
    var visualNode_2969570823 = HEX5BHEX5D_2969570729(layout_2969570588.nodeToVisualNode, node_2969569752.id);
    var bounds_2969570824 = absoluteBounds_3087009579(visualNode_2969570823);
    editor_2969569721.previousBaseIndex = index_3003121772(subbase_2969570579);
    editor_2969569721.scrollOffset = (-(bounds_2969570824.y) + (editor_2969569721.lastBounds.h * 0.5));
    }
    
  };

  
}

function nodeHEX3D_2969570879(editor_2969570880, node_2969570881) {
  BeforeRet: {
    if ((node_2969570881 == editor_2969570880.selectedNode)) {
    break BeforeRet;
    }
    
    if (((node_2969570881.parent == null) || !((base_3003121758(node_2969570881) == editor_2969570880.document.rootNode)))) {
    break BeforeRet;
    }
    
    if (!((editor_2969570880.selectedNode == null))) {
    addLast_2969570903(editor_2969570880.selectionHistory, editor_2969570880.selectedNode);
    }
    
    if ((100 < len_2969571044(editor_2969570880.selectionHistory))) {
    var _ = popFirst_2969571053(editor_2969570880.selectionHistory);
    }
    
    editor_2969570880.selectedNode = node_2969570881;
    handleSelectedNodeChanged_2969569720(editor_2969570880);
  };

  
}

function moveCursor_2969578879(self_2969578880, direction_2969578881) {
  BeforeRet: {
    if ((direction_2969578881 < 0)) {
    if (isEditing_2969575204(self_2969578880)) {
    break BeforeRet;
    }
    
    var index_2969578882 = index_3003121772(node_2969569717(self_2969578880));
    if ((0 < index_2969578882)) {
    nodeHEX3D_2969570879(self_2969578880, HEX5BHEX5D_3003121748(node_2969569717(self_2969578880).parent, subInt(index_2969578882, 1)));
    }
    
    }
    else {
      if (isEditing_2969575204(self_2969578880)) {
      break BeforeRet;
      }
      
      var index_2969578883 = index_3003121772(node_2969569717(self_2969578880));
      if (((0 <= index_2969578883) && (index_2969578883 < subInt(len_3003121752(node_2969569717(self_2969578880).parent), 1)))) {
      nodeHEX3D_2969570879(self_2969578880, HEX5BHEX5D_3003121748(node_2969569717(self_2969578880).parent, addInt(index_2969578883, 1)));
      }
      
    }
    
  };

  
}

function moveCursorJsWrapper_2969578875(self_2969578935, direction_2969578936) {
    moveCursor_2969578879(self_2969578935, direction_2969578936);

  
}
editor_ast_prototype.moveCursor = function(direction_ /* : int */) { return (moveCursorJsWrapper_2969578875(this, direction_));};

function moveCursorUp_2969579045(self_2969579046) {
  BeforeRet: {
    if (isEditing_2969575204(self_2969579046)) {
    break BeforeRet;
    }
    
    if (((!((node_2969569717(self_2969579046) == self_2969579046.document.rootNode)) && !((node_2969569717(self_2969579046).parent == self_2969579046.document.rootNode))) && !((node_2969569717(self_2969579046).parent == null)))) {
    nodeHEX3D_2969570879(self_2969579046, node_2969569717(self_2969579046).parent);
    }
    
  };

  
}

function moveCursorUpJsWrapper_2969579041(self_2969579086) {
    moveCursorUp_2969579045(self_2969579086);

  
}
editor_ast_prototype.moveCursorUp = function() { return (moveCursorUpJsWrapper_2969579041(this));};

function moveCursorDown_2969579107(self_2969579108) {
  BeforeRet: {
    if (isEditing_2969575204(self_2969579108)) {
    break BeforeRet;
    }
    
    if ((0 < len_3003121752(node_2969569717(self_2969579108)))) {
    nodeHEX3D_2969570879(self_2969579108, HEX5BHEX5D_3003121748(node_2969569717(self_2969579108), 0));
    }
    
  };

  
}

function moveCursorDownJsWrapper_2969579103(self_2969579136) {
    moveCursorDown_2969579107(self_2969579136);

  
}
editor_ast_prototype.moveCursorDown = function() { return (moveCursorDownJsWrapper_2969579103(this));};

function getNextChild_2969569712(document_2969569713, node_2969569714, min_2969569715) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2969575840 = ({val: null});

  BeforeRet: {
    if ((len_3003121752(node_2969569714) == 0)) {
    result_2969575840 = nimCopy(result_2969575840, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2969575843 = node_2969569714;
      var pos_2969575844 = 0;
      var _ = pos_2969575844;
      if ((expr_2969575843.kind == 8)) {
        var oHEX60gensym128_2969575853 = computeSymbol_3019918905(ctx_2969567287, HEX5BHEX5D_3003121748(node_2969569714, 0), true);
        if (!isSome_3087009352(oHEX60gensym128_2969575853)) Temporary3 = false; else {          var sym_2969575876 = get_3087009372(oHEX60gensym128_2969575853);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2969575876.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2969575876;
      if (ConstSet157[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_3003121752(node_2969569714) == 3)) {
        if ((min_2969569715 == 0)) {
        result_2969575840 = nimCopy(result_2969575840, some_3003121890(HEX5BHEX5D_3003121748(node_2969569714, 2)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569715 == 1)) {
        result_2969575840 = nimCopy(result_2969575840, some_3003121890(HEX5BHEX5D_3003121748(node_2969569714, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569715 == 2)) {
        result_2969575840 = nimCopy(result_2969575840, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575840 = nimCopy(result_2969575840, some_3003121890(HEX5BHEX5D_3003121748(node_2969569714, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_3003121752(node_2969569714) == 2)) {
        if ((min_2969569715 == 0)) {
        result_2969575840 = nimCopy(result_2969575840, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569715 == 1)) {
        result_2969575840 = nimCopy(result_2969575840, some_3003121890(HEX5BHEX5D_3003121748(node_2969569714, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575840 = nimCopy(result_2969575840, some_3003121890(HEX5BHEX5D_3003121748(node_2969569714, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((min_2969569715 < 0)) {
    result_2969575840 = nimCopy(result_2969575840, some_3003121890(HEX5BHEX5D_3003121748(node_2969569714, 0)), NTI3003121783);
    break BeforeRet;
    }
    
    if ((subInt(len_3003121752(node_2969569714), 1) <= min_2969569715)) {
    result_2969575840 = nimCopy(result_2969575840, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_2969575840 = nimCopy(result_2969575840, some_3003121890(HEX5BHEX5D_3003121748(node_2969569714, addInt(min_2969569715, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_2969575840;

}

function shouldSelectNode_2969575908(node_2969575909) {
  var result_2969575910 = false;

  BeforeRet: {
    switch (node_2969575909.kind) {
    case 8:
    case 7:
    case 12:
    case 13:
      result_2969575910 = (len_3003121752(node_2969575909) == 0);
      break BeforeRet;
      break;
    default: 
      result_2969575910 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2969575910;

}

function moveCursorNext_2969579157(self_2969579158) {
              var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (isEditing_2969575204(self_2969579158)) {
    break BeforeRet;
    }
    
    var node_2969579159 = node_2969569717(self_2969579158);
    Label1: {
      var __2969579160 = 0;
      var n_2969579161 = null;
      var colontmp__2969579210 = null;
      colontmp__2969579210 = node_2969569717(self_2969579158);
      var n_2969579212 = colontmp__2969579210;
      var i_2969579213 = 0;
      var gotoChild_2969579214 = true;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579212 == null))) break Label3;
            if ((gotoChild_2969579214 && (0 < len_3003121752(n_2969579212)))) {
            n_2969579212 = get_3003123566(getNextChild_2969569712(self_2969579158.document, n_2969579212, -1));
            __2969579160 = i_2969579213;
            n_2969579161 = n_2969579212;
            Label4: {
              if (!(shouldSelectNode_2969575908(n_2969579161))) {
              break Label4;
              }
              
              if (!((n_2969579161 == node_2969569717(self_2969579158)))) {
              nodeHEX3D_2969570879(self_2969579158, n_2969579161);
              break Label1;
              }
              
            };
            gotoChild_2969579214 = true;
            }
            else {
              if (!!((n_2969579212.parent == null))) Temporary5 = false; else {                var oHEX60gensym66_2969579216 = getNextChild_2969569712(self_2969579158.document, n_2969579212.parent, index_3003121772(n_2969579212));
                if (!isSome_3003123546(oHEX60gensym66_2969579216)) Temporary6 = false; else {                  var ne_2969579217 = get_3003123566(oHEX60gensym66_2969579216);
                  Temporary6 = true;                }                Temporary5 = Temporary6;              }            if (Temporary5) {
            n_2969579212 = ne_2969579217;
            __2969579160 = i_2969579213;
            n_2969579161 = n_2969579212;
            Label7: {
              if (!(shouldSelectNode_2969575908(n_2969579161))) {
              break Label7;
              }
              
              if (!((n_2969579161 == node_2969569717(self_2969579158)))) {
              nodeHEX3D_2969570879(self_2969579158, n_2969579161);
              break Label1;
              }
              
            };
            gotoChild_2969579214 = true;
            }
            else {
              gotoChild_2969579214 = false;
              n_2969579212 = n_2969579212.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorNextJsWrapper_2969579153(self_2969579193) {
    moveCursorNext_2969579157(self_2969579193);

  
}
editor_ast_prototype.moveCursorNext = function() { return (moveCursorNextJsWrapper_2969579153(this));};

function getPrevChild_2969569707(document_2969569708, node_2969569709, max_2969569710) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2969575990 = ({val: null});

  BeforeRet: {
    if ((len_3003121752(node_2969569709) == 0)) {
    result_2969575990 = nimCopy(result_2969575990, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2969575993 = node_2969569709;
      var pos_2969575994 = 0;
      var _ = pos_2969575994;
      if ((expr_2969575993.kind == 8)) {
        var oHEX60gensym137_2969576003 = computeSymbol_3019918905(ctx_2969567287, HEX5BHEX5D_3003121748(node_2969569709, 0), true);
        if (!isSome_3087009352(oHEX60gensym137_2969576003)) Temporary3 = false; else {          var sym_2969576026 = get_3087009372(oHEX60gensym137_2969576003);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2969576026.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2969576026;
      if (ConstSet158[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_3003121752(node_2969569709) == 3)) {
        if ((max_2969569710 == 0)) {
        result_2969575990 = nimCopy(result_2969575990, some_3003121890(HEX5BHEX5D_3003121748(node_2969569709, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569710 == 1)) {
        result_2969575990 = nimCopy(result_2969575990, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569710 == 2)) {
        result_2969575990 = nimCopy(result_2969575990, some_3003121890(HEX5BHEX5D_3003121748(node_2969569709, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575990 = nimCopy(result_2969575990, some_3003121890(HEX5BHEX5D_3003121748(node_2969569709, 2)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_3003121752(node_2969569709) == 2)) {
        if ((max_2969569710 == 0)) {
        result_2969575990 = nimCopy(result_2969575990, some_3003121890(HEX5BHEX5D_3003121748(node_2969569709, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569710 == 1)) {
        result_2969575990 = nimCopy(result_2969575990, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575990 = nimCopy(result_2969575990, some_3003121890(HEX5BHEX5D_3003121748(node_2969569709, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((max_2969569710 < 0)) {
    result_2969575990 = nimCopy(result_2969575990, some_3003121890(HEX5BHEX5D_3003121748(node_2969569709, subInt(len_3003121752(node_2969569709), 1))), NTI3003121783);
    break BeforeRet;
    }
    else {
    if ((max_2969569710 == 0)) {
    result_2969575990 = nimCopy(result_2969575990, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    }
    result_2969575990 = nimCopy(result_2969575990, some_3003121890(HEX5BHEX5D_3003121748(node_2969569709, subInt(max_2969569710, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_2969575990;

}

function moveCursorPrev_2969579225(self_2969579226) {
              var Temporary4;
                var Temporary5;

  BeforeRet: {
    if (isEditing_2969575204(self_2969579226)) {
    break BeforeRet;
    }
    
    var node_2969579227 = node_2969569717(self_2969579226);
    Label1: {
      var n_2969579228 = null;
      var colontmp__2969579277 = null;
      colontmp__2969579277 = node_2969569717(self_2969579226);
      var gotoChild_2969579279 = false;
      var n_2969579280 = colontmp__2969579277;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579280 == null))) break Label3;
            if ((gotoChild_2969579279 && (0 < len_3003121752(n_2969579280)))) {
            n_2969579280 = get_3003123566(getPrevChild_2969569707(self_2969579226.document, n_2969579280, -1));
            gotoChild_2969579279 = true;
            }
            else {
              if (!!((n_2969579280.parent == null))) Temporary4 = false; else {                var oHEX60gensym70_2969579282 = getPrevChild_2969569707(self_2969579226.document, n_2969579280.parent, index_3003121772(n_2969579280));
                if (!isSome_3003123546(oHEX60gensym70_2969579282)) Temporary5 = false; else {                  var ne_2969579283 = get_3003123566(oHEX60gensym70_2969579282);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            n_2969579228 = n_2969579280;
            Label6: {
              if (!(shouldSelectNode_2969575908(n_2969579228))) {
              break Label6;
              }
              
              if (!((n_2969579228 == node_2969569717(self_2969579226)))) {
              nodeHEX3D_2969570879(self_2969579226, n_2969579228);
              break Label1;
              }
              
            };
            n_2969579280 = ne_2969579283;
            gotoChild_2969579279 = true;
            }
            else {
              n_2969579228 = n_2969579280;
              Label7: {
                if (!(shouldSelectNode_2969575908(n_2969579228))) {
                break Label7;
                }
                
                if (!((n_2969579228 == node_2969569717(self_2969579226)))) {
                nodeHEX3D_2969570879(self_2969579226, n_2969579228);
                break Label1;
                }
                
              };
              gotoChild_2969579279 = false;
              n_2969579280 = n_2969579280.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorPrevJsWrapper_2969579221(self_2969579260) {
    moveCursorPrev_2969579225(self_2969579260);

  
}
editor_ast_prototype.moveCursorPrev = function() { return (moveCursorPrevJsWrapper_2969579221(this));};

function getNextLine_2969576074(document_2969576075, node_2969576076) {
              var Temporary6;
              var Temporary7;

  var result_2969576078 = ({val: null});

  BeforeRet: {
    Label1: {
      var __2969576079 = 0;
      var n_2969576080 = null;
      var n_2969579364 = node_2969576076;
      var idx_2969579365 = -1;
      var i_2969579366 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969579365 == -1)) {
            __2969576079 = i_2969579366;
            n_2969576080 = n_2969579364;
            Label5: {
              if (((n_2969576080 == node_2969576076) || (n_2969576080.parent == null))) {
              break Label5;
              }
              
              if ((n_2969576080.parent.kind == 7)) {
              if (((n_2969576080.kind == 7) && (len_3003121752(n_2969576080) == 0))) {
              result_2969576078 = nimCopy(result_2969576078, some_3003121890(n_2969576080), NTI3003121783);
              break BeforeRet;
              }
              else {
              if (!((n_2969576080.kind == 7))) {
              result_2969576078 = nimCopy(result_2969576078, some_3003121890(n_2969576080), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576080.parent.kind == 9)) {
              var isElse_2969576115 = ((n_2969576080 == last_3003121922(n_2969576080.parent)) && !((modInt(len_3003121752(n_2969576080.parent), 2) == 0)));
              var isCondition_2969576116 = (!(isElse_2969576115) && (modInt(index_3003121772(n_2969576080), 2) == 0));
              if (((n_2969576080.kind == 7) && (len_3003121752(n_2969576080) == 0))) {
              result_2969576078 = nimCopy(result_2969576078, some_3003121890(n_2969576080), NTI3003121783);
              break BeforeRet;
              }
              else {
              if ((!((n_2969576080.kind == 7)) && (!(isCondition_2969576116) || (0 < index_3003121772(n_2969576080))))) {
              result_2969576078 = nimCopy(result_2969576078, some_3003121890(n_2969576080), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
            };
            }
            
            if ((addInt(idx_2969579365, 1) < len_3003121752(n_2969579364))) {
            n_2969579364 = HEX5BHEX5D_3003121748(n_2969579364, addInt(idx_2969579365, 1));
            idx_2969579365 = -1;
            }
            else {
              var oHEX60gensym55_2969579368 = next_3003121857(n_2969579364);
              if (!isSome_3003123546(oHEX60gensym55_2969579368)) Temporary7 = false; else {                var ne_2969579369 = get_3003123566(oHEX60gensym55_2969579368);
                Temporary7 = true;              }              if (!Temporary7) Temporary6 = false; else {                Temporary6 = !((n_2969579364 == null));              }            if (Temporary6) {
            n_2969579364 = ne_2969579369;
            idx_2969579365 = -1;
            }
            else {
            if (((!((n_2969579364.parent == null)) && !((n_2969579364 == null))) && !((n_2969579364.parent == null)))) {
            idx_2969579365 = index_3003121772(n_2969579364);
            n_2969579364 = n_2969579364.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2969579366 = addInt(i_2969579366, 1);
            }
          }
      };
    };
    result_2969576078 = nimCopy(result_2969576078, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576078;

}

function moveCursorNextLine_2969579291(self_2969579292) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575204(self_2969579292)) {
    break BeforeRet;
    }
    
      var oHEX60gensym592_2969579295 = getNextLine_2969576074(self_2969579292.document, node_2969569717(self_2969579292));
      if (!isSome_3003123546(oHEX60gensym592_2969579295)) Temporary1 = false; else {        var next_2969579318 = get_3003123566(oHEX60gensym592_2969579295);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570879(self_2969579292, next_2969579318);
    }
    
  };

  
}

function moveCursorNextLineJsWrapper_2969579287(self_2969579346) {
    moveCursorNextLine_2969579291(self_2969579346);

  
}
editor_ast_prototype.moveCursorNextLine = function() { return (moveCursorNextLineJsWrapper_2969579287(this));};

function contains_1191183809(s_1191183813, value_1191183814) {
  var result_1191183815 = false;

    result_1191183815 = ((s_1191183813.a <= value_1191183814) && (value_1191183814 <= s_1191183813.b));

  return result_1191183815;

}

function getPrevLine_2969576133(document_2969576134, node_2969576135) {
              var Temporary4;

  var result_2969576137 = ({val: null});

  BeforeRet: {
    Label1: {
      var n_2969576138 = null;
      var idx_2969579449 = 0;
      var n_2969579450 = node_2969576135;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579450 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969579450), 1)), subInt(idx_2969579449, 1))) {
            n_2969579450 = HEX5BHEX5D_3003121748(n_2969579450, subInt(idx_2969579449, 1));
            idx_2969579449 = len_3003121752(n_2969579450);
            }
            else {
              var oHEX60gensym74_2969579452 = prev_3003121903(n_2969579450);
              if (!isSome_3003123546(oHEX60gensym74_2969579452)) Temporary4 = false; else {                var ne_2969579453 = get_3003123566(oHEX60gensym74_2969579452);
                Temporary4 = true;              }            if (Temporary4) {
            n_2969576138 = n_2969579450;
            Label5: {
              if (((n_2969576138 == node_2969576135) || (n_2969576138.parent == null))) {
              break Label5;
              }
              
              if ((n_2969576138.parent.kind == 7)) {
              if (((n_2969576138.kind == 7) && (len_3003121752(n_2969576138) == 0))) {
              result_2969576137 = nimCopy(result_2969576137, some_3003121890(n_2969576138), NTI3003121783);
              break BeforeRet;
              }
              else {
              if (!((n_2969576138.kind == 7))) {
              result_2969576137 = nimCopy(result_2969576137, some_3003121890(n_2969576138), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576138.parent.kind == 9)) {
              var isElse_2969576173 = ((n_2969576138 == last_3003121922(n_2969576138.parent)) && !((modInt(len_3003121752(n_2969576138.parent), 2) == 0)));
              var isCondition_2969576174 = (!(isElse_2969576173) && (modInt(index_3003121772(n_2969576138), 2) == 0));
              if (((n_2969576138.kind == 7) && (len_3003121752(n_2969576138) == 0))) {
              result_2969576137 = nimCopy(result_2969576137, some_3003121890(n_2969576138), NTI3003121783);
              break BeforeRet;
              }
              else {
              if ((!((n_2969576138.kind == 7)) && (!(isCondition_2969576174) || (0 < index_3003121772(n_2969576138))))) {
              result_2969576137 = nimCopy(result_2969576137, some_3003121890(n_2969576138), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576138.kind == 9)) {
              result_2969576137 = nimCopy(result_2969576137, some_3003121890(n_2969576138), NTI3003121783);
              break BeforeRet;
              }
              
            };
            n_2969579450 = ne_2969579453;
            idx_2969579449 = len_3003121752(n_2969579450);
            }
            else {
              n_2969576138 = n_2969579450;
              Label6: {
                if (((n_2969576138 == node_2969576135) || (n_2969576138.parent == null))) {
                break Label6;
                }
                
                if ((n_2969576138.parent.kind == 7)) {
                if (((n_2969576138.kind == 7) && (len_3003121752(n_2969576138) == 0))) {
                result_2969576137 = nimCopy(result_2969576137, some_3003121890(n_2969576138), NTI3003121783);
                break BeforeRet;
                }
                else {
                if (!((n_2969576138.kind == 7))) {
                result_2969576137 = nimCopy(result_2969576137, some_3003121890(n_2969576138), NTI3003121783);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2969576138.parent.kind == 9)) {
                var isElse_2969579454 = ((n_2969576138 == last_3003121922(n_2969576138.parent)) && !((modInt(len_3003121752(n_2969576138.parent), 2) == 0)));
                var isCondition_2969579455 = (!(isElse_2969579454) && (modInt(index_3003121772(n_2969576138), 2) == 0));
                if (((n_2969576138.kind == 7) && (len_3003121752(n_2969576138) == 0))) {
                result_2969576137 = nimCopy(result_2969576137, some_3003121890(n_2969576138), NTI3003121783);
                break BeforeRet;
                }
                else {
                if ((!((n_2969576138.kind == 7)) && (!(isCondition_2969579455) || (0 < index_3003121772(n_2969576138))))) {
                result_2969576137 = nimCopy(result_2969576137, some_3003121890(n_2969576138), NTI3003121783);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2969576138.kind == 9)) {
                result_2969576137 = nimCopy(result_2969576137, some_3003121890(n_2969576138), NTI3003121783);
                break BeforeRet;
                }
                
              };
              idx_2969579449 = index_3003121772(n_2969579450);
              n_2969579450 = n_2969579450.parent;
            }
            }
          }
      };
    };
    result_2969576137 = nimCopy(result_2969576137, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576137;

}

function moveCursorPrevLine_2969579376(self_2969579377) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575204(self_2969579377)) {
    break BeforeRet;
    }
    
      var oHEX60gensym601_2969579380 = getPrevLine_2969576133(self_2969579377.document, node_2969569717(self_2969579377));
      if (!isSome_3003123546(oHEX60gensym601_2969579380)) Temporary1 = false; else {        var prev_2969579403 = get_3003123566(oHEX60gensym601_2969579380);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570879(self_2969579377, prev_2969579403);
    }
    
  };

  
}

function moveCursorPrevLineJsWrapper_2969579372(self_2969579431) {
    moveCursorPrevLine_2969579376(self_2969579431);

  
}
editor_ast_prototype.moveCursorPrevLine = function() { return (moveCursorPrevLineJsWrapper_2969579372(this));};

function selectContaining_2969579462(self_2969579463, container_2969579464) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;

  BeforeRet: {
    if (isEditing_2969575204(self_2969579463)) {
    break BeforeRet;
    }
    
    switch (toJSStr(container_2969579464)) {
    case "function":
        var oHEX60gensym611_2969579467 = findWithParentRec_3003123589(node_2969569717(self_2969579463), 11);
        if (!isSome_3003123546(oHEX60gensym611_2969579467)) Temporary1 = false; else {          var child_2969579490 = get_3003123566(oHEX60gensym611_2969579467);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2969570879(self_2969579463, child_2969579490.parent);
      }
      
      break;
    case "const-decl":
        var oHEX60gensym612_2969579493 = findWithParentRec_3003123589(node_2969569717(self_2969579463), 4);
        if (!isSome_3003123546(oHEX60gensym612_2969579493)) Temporary2 = false; else {          var child_2969579516 = get_3003123566(oHEX60gensym612_2969579493);
          Temporary2 = true;        }      if (Temporary2) {
      nodeHEX3D_2969570879(self_2969579463, child_2969579516.parent);
      }
      
      break;
    case "line":
        var oHEX60gensym613_2969579519 = findWithParentRec_3003123589(node_2969569717(self_2969579463), 7);
        if (!isSome_3003123546(oHEX60gensym613_2969579519)) Temporary3 = false; else {          var child_2969579542 = get_3003123566(oHEX60gensym613_2969579519);
          Temporary3 = true;        }      if (Temporary3) {
      nodeHEX3D_2969570879(self_2969579463, child_2969579542);
      }
      
      break;
    case "node-list":
        var oHEX60gensym614_2969579545 = findWithParentRec_3003123589(node_2969569717(self_2969579463), 7);
        if (!isSome_3003123546(oHEX60gensym614_2969579545)) Temporary4 = false; else {          var child_2969579568 = get_3003123566(oHEX60gensym614_2969579545);
          Temporary4 = true;        }      if (Temporary4) {
      nodeHEX3D_2969570879(self_2969579463, child_2969579568.parent);
      }
      
      break;
    case "if":
        var oHEX60gensym615_2969579571 = findWithParentRec_3003123589(node_2969569717(self_2969579463), 9);
        if (!isSome_3003123546(oHEX60gensym615_2969579571)) Temporary5 = false; else {          var child_2969579594 = get_3003123566(oHEX60gensym615_2969579571);
          Temporary5 = true;        }      if (Temporary5) {
      nodeHEX3D_2969570879(self_2969579463, child_2969579594.parent);
      }
      
      break;
    case "while":
        var oHEX60gensym616_2969579597 = findWithParentRec_3003123589(node_2969569717(self_2969579463), 10);
        if (!isSome_3003123546(oHEX60gensym616_2969579597)) Temporary6 = false; else {          var child_2969579620 = get_3003123566(oHEX60gensym616_2969579597);
          Temporary6 = true;        }      if (Temporary6) {
      nodeHEX3D_2969570879(self_2969579463, child_2969579620.parent);
      }
      
      break;
    default: 
      break;
    }
  };

  
}

function selectContainingJsWrapper_2969579458(self_2969579649, container_2969579650) {
    selectContaining_2969579462(self_2969579649, container_2969579650);

  
}
editor_ast_prototype.selectContaining = function(container_ /* : string */) { return (selectContainingJsWrapper_2969579458(this, container_ == undefined ? undefined : cstrToNimstr(container_)));};

function del_3019949969(t_3019949972, key_3019949973) {
    t_3019949972.delete(mapKeyJs_3036678529(key_3019949973));

  
}

function deleteNode_3019949899(ctx_3019949900, node_3019949901) {
          var Temporary3;
            var Temporary4;

    ctx_3019949900.depGraph.revision = addInt(ctx_3019949900.depGraph.revision, 1);
    del_3019949969(ctx_3019949900.depGraph.changed, {Field0: getItem_3019905914(node_3019949901), Field1: -1});
    if (!((node_3019949901.parent == null))) {
    HEX5BHEX5DHEX3D_3036679287(ctx_3019949900.depGraph.changed, {Field0: getItem_3019905914(node_3019949901.parent), Field1: -1}, ctx_3019949900.depGraph.revision);
    }
    
    var parent_3019950055 = node_3019949901.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3019950055 == null))) Temporary3 = false; else {            var oHEX60gensym526_3019950062 = findWithParentRec_3003123589(parent_3019950055, 11);
            if (!isSome_3003123546(oHEX60gensym526_3019950062)) Temporary4 = false; else {              var child_3019950108 = get_3003123566(oHEX60gensym526_3019950062);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3019950109 = child_3019950108.parent;
          HEX5BHEX5DHEX3D_3036679287(ctx_3019949900.depGraph.changed, {Field0: getItem_3019905914(functionDefinition_3019950109), Field1: -1}, ctx_3019949900.depGraph.revision);
          parent_3019950055 = functionDefinition_3019950109.parent;
        }
    };

  
}

function rawGet_3187671114(t_3187671117, key_3187671118, hc_3187671119, hc_3187671119_Idx) {
  var result_3187671120 = 0;

  BeforeRet: {
    hc_3187671119[hc_3187671119_Idx] = hash_2046820630(key_3187671118);
    if ((hc_3187671119[hc_3187671119_Idx] == 0)) {
    hc_3187671119[hc_3187671119_Idx] = 314159265;
    }
    
    if (((t_3187671117.data).length == 0)) {
    result_3187671120 = -1;
    break BeforeRet;
    }
    
    var h_3187671172 = (hc_3187671119[hc_3187671119_Idx] & (t_3187671117.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3187671117.data[chckIndx(h_3187671172, 0, (t_3187671117.data).length - 1)].Field0)) break Label2;
          if (((t_3187671117.data[chckIndx(h_3187671172, 0, (t_3187671117.data).length - 1)].Field0 == hc_3187671119[hc_3187671119_Idx]) && HEX3DHEX3D_2046820626(t_3187671117.data[chckIndx(h_3187671172, 0, (t_3187671117.data).length - 1)].Field1, key_3187671118))) {
          result_3187671120 = h_3187671172;
          break BeforeRet;
          }
          
          h_3187671172 = nextTry_1308622883(h_3187671172, (t_3187671117.data).length - 1);
        }
    };
    result_3187671120 = subInt(-1, h_3187671172);
  };

  return result_3187671120;

}

function del_2969574341(t_2969574344, key_2969574345) {
    var hc_2969574346 = [0];
    var i_2969574353 = rawGet_3187671114(t_2969574344, key_2969574345, hc_2969574346, 0);
    var mskHEX60gensym36_2969574357 = (t_2969574344.data).length - 1;
    if ((0 <= i_2969574353)) {
    t_2969574344.counter = subInt(t_2969574344.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2969574364 = i_2969574353;
            var rHEX60gensym36_2969574365 = jHEX60gensym36_2969574364;
            t_2969574344.data[chckIndx(i_2969574353, 0, (t_2969574344.data).length - 1)].Field0 = 0;
            t_2969574344.data[chckIndx(i_2969574353, 0, (t_2969574344.data).length - 1)].Field1 = nimCopy(t_2969574344.data[chckIndx(i_2969574353, 0, (t_2969574344.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_2969574344.data[chckIndx(i_2969574353, 0, (t_2969574344.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2969574353 = (addInt(i_2969574353, 1) & mskHEX60gensym36_2969574357);
                  if (isEmpty_1308622877(t_2969574344.data[chckIndx(i_2969574353, 0, (t_2969574344.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2969574365 = (t_2969574344.data[chckIndx(i_2969574353, 0, (t_2969574344.data).length - 1)].Field0 & mskHEX60gensym36_2969574357);
                  if (!(((((rHEX60gensym36_2969574365 <= i_2969574353) && (jHEX60gensym36_2969574364 < rHEX60gensym36_2969574365)) || ((jHEX60gensym36_2969574364 < rHEX60gensym36_2969574365) && (i_2969574353 < jHEX60gensym36_2969574364))) || ((i_2969574353 < jHEX60gensym36_2969574364) && (rHEX60gensym36_2969574365 <= i_2969574353))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2969574344.data[chckIndx(jHEX60gensym36_2969574364, 0, (t_2969574344.data).length - 1)] = nimCopy(t_2969574344.data[chckIndx(jHEX60gensym36_2969574364, 0, (t_2969574344.data).length - 1)], t_2969574344.data[chckIndx(i_2969574353, 0, (t_2969574344.data).length - 1)], NTI2969568610);
          }
      };
    };
    }
    

  
}

function handleNodeDelete_2969573927(doc_2969573928, node_2969573929) {
              var Temporary8;

    var fmtRes_2969573934 = [mnewString(0)];
    fmtRes_2969573934[0].push.apply(fmtRes_2969573934[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,100,101,108,101,116,101,100,58,32]);;
    formatValue_3087008586(fmtRes_2969573934, 0, node_2969573929, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969573934[0], NTI33554449)]);
    Label1: {
      var child_2969573943 = null;
      var i_2969579724 = 0;
      var L_2969579725 = (node_2969573929.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579724 < L_2969579725)) break Label3;
            child_2969573943 = node_2969573929.children[chckIndx(i_2969579724, 0, (node_2969573929.children).length - 1)];
            handleNodeDelete_2969573927(doc_2969573928, child_2969573943);
            i_2969579724 = addInt(i_2969579724, 1);
            if (!(((node_2969573929.children).length == L_2969579725))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    deleteNode_3019949899(ctx_2969567287, node_2969573929);
    Label4: {
      var i_2969573977 = 0;
      var update_2969573978 = null;
      var i_2969579734 = 0;
      var L_2969579735 = (ctx_2969567287.updateFunctions).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969579734 < L_2969579735)) break Label6;
            i_2969573977 = i_2969579734;
            update_2969573978 = ctx_2969567287.updateFunctions[chckIndx(i_2969579734, 0, (ctx_2969567287.updateFunctions).length - 1)];
            var key_2969573979 = {Field0: getItem_3019905914(node_2969573929), Field1: i_2969573977};
            if (contains_3019936937(ctx_2969567287.diagnosticsPerQuery, key_2969573979)) {
            Label7: {
              var id_2969574128 = ({padding: 0, time: 0, fuzz: 0, count: 0});
              var colontmp__2969579729 = [];
              colontmp__2969579729 = (Temporary8 = HEX5BHEX5D_3019937382(ctx_2969567287.diagnosticsPerQuery, key_2969573979), Temporary8)[0][Temporary8[1]];
              var i_2969579730 = 0;
              var L_2969579731 = (colontmp__2969579729).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_2969579730 < L_2969579731)) break Label10;
                    id_2969574128 = colontmp__2969579729[chckIndx(i_2969579730, 0, (colontmp__2969579729).length - 1)];
                    del_3019938106(HEX5BHEX5D_3019937598(ctx_2969567287.diagnosticsPerNode, id_2969574128).queries, key_2969573979);
                    i_2969579730 = addInt(i_2969579730, 1);
                    if (!(((colontmp__2969579729).length == L_2969579731))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            del_3019944849(ctx_2969567287.diagnosticsPerQuery, key_2969573979);
            }
            
            i_2969579734 = addInt(i_2969579734, 1);
            if (!(((ctx_2969567287.updateFunctions).length == L_2969579735))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    del_2969574341(doc_2969573928.nodes, node_2969573929.id);

  
}

function HEX5BHEX5DHEX3D_3003121928(node_3003121929, index_3003121930, newNode_3003121931) {
    newNode_3003121931.parent = node_3003121929;
    node_3003121929.children[chckIndx(index_3003121930, 0, (node_3003121929.children).length - 1)].parent = null;
    node_3003121929.children[chckIndx(index_3003121930, 0, (node_3003121929.children).length - 1)] = newNode_3003121931;

  
}

function HEX5BHEX5DHEX3D_3019906079(t_3019906082, key_3019906083, val_3019906084) {
    t_3019906082.set(mapKeyJs_3019899557(key_3019906083), val_3019906084);

  
}

function insertNode_3019949207(ctx_3019949208, node_3019949209) {
              var Temporary5;
          var Temporary8;
            var Temporary9;

    ctx_3019949208.depGraph.revision = addInt(ctx_3019949208.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679287(ctx_3019949208.depGraph.changed, {Field0: getItem_3019905914(node_3019949209), Field1: -1}, ctx_3019949208.depGraph.revision);
    if (!((node_3019949209.parent == null))) {
    HEX5BHEX5DHEX3D_3036679287(ctx_3019949208.depGraph.changed, {Field0: getItem_3019905914(node_3019949209.parent), Field1: -1}, ctx_3019949208.depGraph.revision);
    }
    
    HEX5BHEX5DHEX3D_3019906079(ctx_3019949208.itemsAstNode, getItem_3019905914(node_3019949209), node_3019949209);
    Label1: {
      var key_3019949425 = 0;
      var child_3019949426 = null;
      var n_2969579757 = node_3019949209;
      var idx_2969579758 = -1;
      var i_2969579759 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969579758 == -1)) {
            var colontmp__2969579762 = nimCopy(null, {Field0: i_2969579759, Field1: n_2969579757}, NTI3003123002);
            key_3019949425 = colontmp__2969579762["Field0"];
            child_3019949426 = colontmp__2969579762["Field1"];
            HEX5BHEX5DHEX3D_3036679287(ctx_3019949208.depGraph.changed, {Field0: getItem_3019905914(child_3019949426), Field1: -1}, ctx_3019949208.depGraph.revision);
            HEX5BHEX5DHEX3D_3019906079(ctx_3019949208.itemsAstNode, getItem_3019905914(child_3019949426), child_3019949426);
            }
            
            if ((addInt(idx_2969579758, 1) < len_3003121752(n_2969579757))) {
            n_2969579757 = HEX5BHEX5D_3003121748(n_2969579757, addInt(idx_2969579758, 1));
            idx_2969579758 = -1;
            }
            else {
              var oHEX60gensym74_2969579763 = next_3003121857(n_2969579757);
              if (!isSome_3003123546(oHEX60gensym74_2969579763)) Temporary5 = false; else {                var ne_2969579764 = get_3003123566(oHEX60gensym74_2969579763);
                Temporary5 = true;              }            if (Temporary5) {
            n_2969579757 = ne_2969579764;
            idx_2969579758 = -1;
            }
            else {
            if ((!((n_2969579757.parent == null)) && !((n_2969579757.parent == node_3019949209)))) {
            idx_2969579758 = index_3003121772(n_2969579757);
            n_2969579757 = n_2969579757.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2969579759 = addInt(i_2969579759, 1);
            }
          }
      };
    };
    var parent_3019949565 = node_3019949209.parent;
    Label6: {
        Label7: while (true) {
          if (!!((parent_3019949565 == null))) Temporary8 = false; else {            var oHEX60gensym520_3019949572 = findWithParentRec_3003123589(parent_3019949565, 11);
            if (!isSome_3003123546(oHEX60gensym520_3019949572)) Temporary9 = false; else {              var child_3019949618 = get_3003123566(oHEX60gensym520_3019949572);
              Temporary9 = true;            }            Temporary8 = Temporary9;          }        if (!Temporary8) break Label7;
          var functionDefinition_3019949619 = child_3019949618.parent;
          HEX5BHEX5DHEX3D_3036679287(ctx_3019949208.depGraph.changed, {Field0: getItem_3019905914(functionDefinition_3019949619), Field1: -1}, ctx_3019949208.depGraph.revision);
          parent_3019949565 = functionDefinition_3019949619.parent;
        }
    };

  
}

function mustRehash_2969572667(t_2969572669) {
  var result_2969572670 = false;

    if (!((t_2969572669.counter < (t_2969572669.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2969572670 = ((mulInt((t_2969572669.data).length, 2) < mulInt(t_2969572669.counter, 3)) || (subInt((t_2969572669.data).length, t_2969572669.counter) < 4));

  return result_2969572670;

}

function rawInsert_2969573276(t_2969573280, data_2969573281, data_2969573281_Idx, key_2969573282, val_2969573283, hc_2969573284, h_2969573285) {
    data_2969573281[data_2969573281_Idx][chckIndx(h_2969573285, 0, (data_2969573281[data_2969573281_Idx]).length - 1)].Field1 = nimCopy(data_2969573281[data_2969573281_Idx][chckIndx(h_2969573285, 0, (data_2969573281[data_2969573281_Idx]).length - 1)].Field1, key_2969573282, NTI2046820355);
    data_2969573281[data_2969573281_Idx][chckIndx(h_2969573285, 0, (data_2969573281[data_2969573281_Idx]).length - 1)].Field2 = val_2969573283;
    data_2969573281[data_2969573281_Idx][chckIndx(h_2969573285, 0, (data_2969573281[data_2969573281_Idx]).length - 1)].Field0 = hc_2969573284;

  
}

function enlarge_2969572870(t_2969572873) {
    var n_2969572876 = [];
    n_2969572876 = new Array(chckRange(mulInt((t_2969572873.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2969572873.data).length, 2), 0, 2147483647) ; ++i) { n_2969572876[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2969572873.data; t_2969572873.data = n_2969572876; n_2969572876 = Temporary1;    Label2: {
      var i_2969572956 = 0;
      var colontmp__2969579768 = 0;
      colontmp__2969579768 = (n_2969572876).length - 1;
      var res_2969579769 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969579769 <= colontmp__2969579768)) break Label4;
            i_2969572956 = res_2969579769;
            var eh_2969573034 = n_2969572876[chckIndx(i_2969572956, 0, (n_2969572876).length - 1)].Field0;
            if (isFilled_1308622880(eh_2969573034)) {
            var j_2969573038 = (eh_2969573034 & (t_2969572873.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2969572873.data[chckIndx(j_2969573038, 0, (t_2969572873.data).length - 1)].Field0)) break Label6;
                  j_2969573038 = nextTry_1308622883(j_2969573038, (t_2969572873.data).length - 1);
                }
            };
            rawInsert_2969573276(t_2969572873, t_2969572873, "data", n_2969572876[chckIndx(i_2969572956, 0, (n_2969572876).length - 1)].Field1, n_2969572876[chckIndx(i_2969572956, 0, (n_2969572876).length - 1)].Field2, eh_2969573034, j_2969573038);
            }
            
            res_2969579769 = addInt(res_2969579769, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2969573517(t_2969573520, key_2969573521, hc_2969573522) {
  var result_2969573523 = 0;

  BeforeRet: {
    if (((t_2969573520.data).length == 0)) {
    result_2969573523 = -1;
    break BeforeRet;
    }
    
    var h_2969573590 = (hc_2969573522 & (t_2969573520.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2969573520.data[chckIndx(h_2969573590, 0, (t_2969573520.data).length - 1)].Field0)) break Label2;
          if (((t_2969573520.data[chckIndx(h_2969573590, 0, (t_2969573520.data).length - 1)].Field0 == hc_2969573522) && HEX3DHEX3D_2046820626(t_2969573520.data[chckIndx(h_2969573590, 0, (t_2969573520.data).length - 1)].Field1, key_2969573521))) {
          result_2969573523 = h_2969573590;
          break BeforeRet;
          }
          
          h_2969573590 = nextTry_1308622883(h_2969573590, (t_2969573520.data).length - 1);
        }
    };
    result_2969573523 = subInt(-1, h_2969573590);
  };

  return result_2969573523;

}

function HEX5BHEX5DHEX3D_2969572438(t_2969572441, key_2969572442, val_2969572443) {
    if (((t_2969572441.data).length == 0)) {
    var correctSizeHEX60gensym97_2969572508 = slotsNeeded_1308622891(32);
    t_2969572441.counter = 0;
    t_2969572441.data = new Array(chckRange(correctSizeHEX60gensym97_2969572508, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym97_2969572508, 0, 2147483647) ; ++i) { t_2969572441.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2969572513 = [0];
    var index_2969572520 = rawGet_3187671114(t_2969572441, key_2969572442, hc_2969572513, 0);
    if ((0 <= index_2969572520)) {
    t_2969572441.data[chckIndx(index_2969572520, 0, (t_2969572441.data).length - 1)].Field2 = val_2969572443;
    }
    else {
      if (((t_2969572441.data).length == 0)) {
      var correctSizeHEX60gensym100_2969572662 = slotsNeeded_1308622891(32);
      t_2969572441.counter = 0;
      t_2969572441.data = new Array(chckRange(correctSizeHEX60gensym100_2969572662, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym100_2969572662, 0, 2147483647) ; ++i) { t_2969572441.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2969572667(t_2969572441)) {
      enlarge_2969572870(t_2969572441);
      index_2969572520 = rawGetKnownHC_2969573517(t_2969572441, key_2969572442, hc_2969572513[0]);
      }
      
      index_2969572520 = subInt(-1, index_2969572520);
      rawInsert_2969573276(t_2969572441, t_2969572441, "data", key_2969572442, val_2969572443, hc_2969572513[0], index_2969572520);
      t_2969572441.counter = addInt(t_2969572441.counter, 1);
    }
    

  
}

function handleNodeInserted_2969571669(doc_2969571670, node_2969571671) {
              var Temporary8;

    var fmtRes_2969572359 = [mnewString(0)];
    fmtRes_2969572359[0].push.apply(fmtRes_2969572359[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008586(fmtRes_2969572359, 0, node_2969571671, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969572359[0], NTI33554449)]);
    insertNode_3019949207(ctx_2969567287, node_2969571671);
    Label1: {
      var handler_2969572387 = null;
      var i_2969579743 = 0;
      var L_2969579744 = (doc_2969571670.onNodeInserted).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579743 < L_2969579744)) break Label3;
            handler_2969572387 = doc_2969571670.onNodeInserted[chckIndx(i_2969579743, 0, (doc_2969571670.onNodeInserted).length - 1)];
            handler_2969572387(doc_2969571670, node_2969571671);
            i_2969579743 = addInt(i_2969579743, 1);
            if (!(((doc_2969571670.onNodeInserted).length == L_2969579744))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_2969572438(doc_2969571670.nodes, node_2969571671.id, node_2969571671);
    Label4: {
      var key_2969573843 = 0;
      var child_2969573844 = null;
      var n_2969579748 = node_2969571671;
      var idx_2969579749 = -1;
      var i_2969579750 = 0;
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            try {
            if ((idx_2969579749 == -1)) {
            var colontmp__2969579753 = nimCopy(null, {Field0: i_2969579750, Field1: n_2969579748}, NTI3003123002);
            key_2969573843 = colontmp__2969579753["Field0"];
            child_2969573844 = colontmp__2969579753["Field1"];
            HEX5BHEX5DHEX3D_2969572438(doc_2969571670.nodes, child_2969573844.id, child_2969573844);
            }
            
            if ((addInt(idx_2969579749, 1) < len_3003121752(n_2969579748))) {
            n_2969579748 = HEX5BHEX5D_3003121748(n_2969579748, addInt(idx_2969579749, 1));
            idx_2969579749 = -1;
            }
            else {
              var oHEX60gensym74_2969579754 = next_3003121857(n_2969579748);
              if (!isSome_3003123546(oHEX60gensym74_2969579754)) Temporary8 = false; else {                var ne_2969579755 = get_3003123566(oHEX60gensym74_2969579754);
                Temporary8 = true;              }            if (Temporary8) {
            n_2969579748 = ne_2969579755;
            idx_2969579749 = -1;
            }
            else {
            if ((!((n_2969579748.parent == null)) && !((n_2969579748.parent == node_2969571671)))) {
            idx_2969579749 = index_3003121772(n_2969579748);
            n_2969579748 = n_2969579748.parent;
            }
            else {
              break Label5;
            }
            }}
            } finally {
            i_2969579750 = addInt(i_2969579750, 1);
            }
          }
      };
    };

  
}

function replaceNode_2969576198(document_2969576199, node_2969576200, newNode_2969576201) {
  var result_2969576202 = null;

  BeforeRet: {
    if ((node_2969576200.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    var idx_2969576208 = index_3003121772(node_2969576200);
    document_2969576199.undoOps.push({kind: 1, parent: node_2969576200.parent, idx: idx_2969576208, node: node_2969576200, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969576199.redoOps = nimCopy(null, [], NTI2969572212);
    handleNodeDelete_2969573927(document_2969576199, node_2969576200);
    HEX5BHEX5DHEX3D_3003121928(node_2969576200.parent, idx_2969576208, newNode_2969576201);
    handleNodeInserted_2969571669(document_2969576199, newNode_2969576201);
    result_2969576202 = newNode_2969576201;
    break BeforeRet;
  };

  return result_2969576202;

}

function delete_3003121936(x_3003121938, x_3003121938_Idx, i_3003121939) {
    x_3003121938[x_3003121938_Idx].splice(i_3003121939, 1);

  
}

function delete_3003121932(node_3003121933, index_3003121934) {
  var result_3003121935 = null;

  BeforeRet: {
    if (((index_3003121934 < 0) || (len_3003121752(node_3003121933) <= index_3003121934))) {
    result_3003121935 = node_3003121933;
    break BeforeRet;
    }
    
    HEX5BHEX5D_3003121748(node_3003121933, index_3003121934).parent = null;
    delete_3003121936(node_3003121933, "children", chckRange(index_3003121934, 0, 2147483647));
    if ((index_3003121934 < len_3003121752(node_3003121933))) {
    result_3003121935 = HEX5BHEX5D_3003121748(node_3003121933, index_3003121934);
    break BeforeRet;
    }
    else {
    if ((0 < len_3003121752(node_3003121933))) {
    result_3003121935 = HEX5BHEX5D_3003121748(node_3003121933, subInt(index_3003121934, 1));
    break BeforeRet;
    }
    else {
      result_3003121935 = node_3003121933;
      break BeforeRet;
    }
    }
  };

  return result_3003121935;

}

function deleteNode_2969576262(document_2969576263, node_2969576264) {
  var result_2969576265 = null;

  BeforeRet: {
    if ((node_2969576264.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    if (((node_2969576264.parent == document_2969576263.rootNode) && (len_3003121752(document_2969576263.rootNode) == 1))) {
    result_2969576265 = replaceNode_2969576198(document_2969576263, node_2969576264, {kind: 0, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []});
    break BeforeRet;
    }
    
    document_2969576263.undoOps.push({kind: 0, parent: node_2969576264.parent, idx: index_3003121772(node_2969576264), node: node_2969576264, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969576263.redoOps = nimCopy(null, [], NTI2969572212);
    handleNodeDelete_2969573927(document_2969576263, node_2969576264);
    result_2969576265 = delete_3003121932(node_2969576264.parent, index_3003121772(node_2969576264));
    break BeforeRet;
  };

  return result_2969576265;

}

function deleteSelected_2969579676(self_2969579677) {
  BeforeRet: {
    if (isEditing_2969575204(self_2969579677)) {
    break BeforeRet;
    }
    
    self_2969579677.deletedNode = nimCopy(self_2969579677.deletedNode, some_3003121890(node_2969569717(self_2969579677)), NTI3003121783);
    nodeHEX3D_2969570879(self_2969579677, deleteNode_2969576262(self_2969579677.document, node_2969569717(self_2969579677)));
  };

  
}

function deleteSelectedJsWrapper_2969579672(self_2969579708) {
    deleteSelected_2969579676(self_2969579708);

  
}
editor_ast_prototype.deleteSelected = function() { return (deleteSelectedJsWrapper_2969579672(this));};

function initTable_3003123500(initialSize_3003123503) {
  var result_3003123504 = ({data: [], counter: 0});

    var correctSizeHEX60gensym29_3003123506 = slotsNeeded_1308622891(chckRange(initialSize_3003123503, 0, 2147483647));
    result_3003123504.counter = 0;
    result_3003123504.data = new Array(chckRange(correctSizeHEX60gensym29_3003123506, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym29_3003123506, 0, 2147483647) ; ++i) { result_3003123504.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }
  return result_3003123504;

}

function rawGet_3003122071(t_3003122074, key_3003122075, hc_3003122076, hc_3003122076_Idx) {
  var result_3003122077 = 0;

  BeforeRet: {
    hc_3003122076[hc_3003122076_Idx] = hash_2046820630(key_3003122075);
    if ((hc_3003122076[hc_3003122076_Idx] == 0)) {
    hc_3003122076[hc_3003122076_Idx] = 314159265;
    }
    
    if (((t_3003122074.data).length == 0)) {
    result_3003122077 = -1;
    break BeforeRet;
    }
    
    var h_3003122128 = (hc_3003122076[hc_3003122076_Idx] & (t_3003122074.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field0)) break Label2;
          if (((t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field0 == hc_3003122076[hc_3003122076_Idx]) && HEX3DHEX3D_2046820626(t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field1, key_3003122075))) {
          result_3003122077 = h_3003122128;
          break BeforeRet;
          }
          
          h_3003122128 = nextTry_1308622883(h_3003122128, (t_3003122074.data).length - 1);
        }
    };
    result_3003122077 = subInt(-1, h_3003122128);
  };

  return result_3003122077;

}

function mustRehash_3003122416(t_3003122418) {
  var result_3003122419 = false;

    if (!((t_3003122418.counter < (t_3003122418.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003122419 = ((mulInt((t_3003122418.data).length, 2) < mulInt(t_3003122418.counter, 3)) || (subInt((t_3003122418.data).length, t_3003122418.counter) < 4));

  return result_3003122419;

}

function rawInsert_3003122865(t_3003122869, data_3003122870, data_3003122870_Idx, key_3003122871, val_3003122872, hc_3003122873, h_3003122874) {
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field1 = nimCopy(data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field1, key_3003122871, NTI2046820355);
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field2 = nimCopy(data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field2, val_3003122872, NTI2046820355);
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field0 = hc_3003122873;

  
}

function enlarge_3003122571(t_3003122574) {
    var n_3003122577 = [];
    n_3003122577 = new Array(chckRange(mulInt((t_3003122574.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003122574.data).length, 2), 0, 2147483647) ; ++i) { n_3003122577[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    var Temporary1 = t_3003122574.data; t_3003122574.data = n_3003122577; n_3003122577 = Temporary1;    Label2: {
      var i_3003122641 = 0;
      var colontmp__2969579837 = 0;
      colontmp__2969579837 = (n_3003122577).length - 1;
      var res_2969579838 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969579838 <= colontmp__2969579837)) break Label4;
            i_3003122641 = res_2969579838;
            var eh_3003122695 = n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003122695)) {
            var j_3003122699 = (eh_3003122695 & (t_3003122574.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003122574.data[chckIndx(j_3003122699, 0, (t_3003122574.data).length - 1)].Field0)) break Label6;
                  j_3003122699 = nextTry_1308622883(j_3003122699, (t_3003122574.data).length - 1);
                }
            };
            rawInsert_3003122865(t_3003122574, t_3003122574, "data", n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field1, n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field2, eh_3003122695, j_3003122699);
            }
            
            res_2969579838 = addInt(res_2969579838, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003123034(t_3003123037, key_3003123038, hc_3003123039) {
  var result_3003123040 = 0;

  BeforeRet: {
    if (((t_3003123037.data).length == 0)) {
    result_3003123040 = -1;
    break BeforeRet;
    }
    
    var h_3003123091 = (hc_3003123039 & (t_3003123037.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field0)) break Label2;
          if (((t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field0 == hc_3003123039) && HEX3DHEX3D_2046820626(t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field1, key_3003123038))) {
          result_3003123040 = h_3003123091;
          break BeforeRet;
          }
          
          h_3003123091 = nextTry_1308622883(h_3003123091, (t_3003123037.data).length - 1);
        }
    };
    result_3003123040 = subInt(-1, h_3003123091);
  };

  return result_3003123040;

}

function HEX5BHEX5DHEX3D_3003122010(t_3003122013, key_3003122014, val_3003122015) {
    if (((t_3003122013.data).length == 0)) {
    var correctSizeHEX60gensym15_3003122065 = slotsNeeded_1308622891(32);
    t_3003122013.counter = 0;
    t_3003122013.data = new Array(chckRange(correctSizeHEX60gensym15_3003122065, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_3003122065, 0, 2147483647) ; ++i) { t_3003122013.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    }
    
    var hc_3003122070 = [0];
    var index_3003122309 = rawGet_3003122071(t_3003122013, key_3003122014, hc_3003122070, 0);
    if ((0 <= index_3003122309)) {
    t_3003122013.data[chckIndx(index_3003122309, 0, (t_3003122013.data).length - 1)].Field2 = nimCopy(t_3003122013.data[chckIndx(index_3003122309, 0, (t_3003122013.data).length - 1)].Field2, val_3003122015, NTI2046820355);
    }
    else {
      if (((t_3003122013.data).length == 0)) {
      var correctSizeHEX60gensym20_3003122411 = slotsNeeded_1308622891(32);
      t_3003122013.counter = 0;
      t_3003122013.data = new Array(chckRange(correctSizeHEX60gensym20_3003122411, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_3003122411, 0, 2147483647) ; ++i) { t_3003122013.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }      }
      
      if (mustRehash_3003122416(t_3003122013)) {
      enlarge_3003122571(t_3003122013);
      index_3003122309 = rawGetKnownHC_3003123034(t_3003122013, key_3003122014, hc_3003122070[0]);
      }
      
      index_3003122309 = subInt(-1, index_3003122309);
      rawInsert_3003122865(t_3003122013, t_3003122013, "data", key_3003122014, val_3003122015, hc_3003122070[0], index_3003122309);
      t_3003122013.counter = addInt(t_3003122013.counter, 1);
    }
    

  
}

function add_3003121702(node_3003121703, child_3003121704) {
    if (HEX3DHEX3D_2046820626(node_3003121703.id, null_2046820646)) {
    node_3003121703.id = nimCopy(node_3003121703.id, newId_2046820597(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820626(child_3003121704.id, null_2046820646)) {
    child_3003121704.id = nimCopy(child_3003121704.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3003121704.parent = node_3003121703;
    node_3003121703.children.push(child_3003121704);;

  
}

function clone_3003121958(node_3003121959, idMap_3003121967) {
  var result_3003121968 = null;

    var newNodeId_3003121969 = newId_2046820597();
    result_3003121968 = {kind: node_3003121959.kind, id: nimCopy(null, newNodeId_3003121969, NTI2046820355), reff: nimCopy(null, node_3003121959.reff, NTI2046820355), text: nimCopy(null, node_3003121959.text, NTI33554449), parent: null, children: []};
    HEX5BHEX5DHEX3D_3003122010(idMap_3003121967, node_3003121959.id, newNodeId_3003121969);
    Label1: {
      var child_3003123275 = null;
      var i_2969579831 = 0;
      var L_2969579832 = (node_3003121959.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579831 < L_2969579832)) break Label3;
            child_3003123275 = node_3003121959.children[chckIndx(i_2969579831, 0, (node_3003121959.children).length - 1)];
            add_3003121702(result_3003121968, clone_3003121958(child_3003123275, idMap_3003121967));
            i_2969579831 = addInt(i_2969579831, 1);
            if (!(((node_3003121959.children).length == L_2969579832))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3003121968;

}

function hasKey_3003123347(t_3003123350, key_3003123351) {
  var result_3003123352 = false;

    var hc_3003123353 = [0];
    result_3003123352 = (0 <= rawGet_3003122071(t_3003123350, key_3003123351, hc_3003123353, 0));

  return result_3003123352;

}

function contains_3003123341(t_3003123344, key_3003123345) {
  var result_3003123346 = false;

  BeforeRet: {
    result_3003123346 = hasKey_3003123347(t_3003123344, key_3003123345);
    break BeforeRet;
  };

  return result_3003123346;

}

function HEX5BHEX5D_3003123413(t_3003123416, key_3003123417) {
  var result_3003123418 = null;

    var hcHEX60gensym22_3003123419 = [0];
    var indexHEX60gensym22_3003123426 = rawGet_3003122071(t_3003123416, key_3003123417, hcHEX60gensym22_3003123419, 0);
    if ((0 <= indexHEX60gensym22_3003123426)) {
    result_3003123418 = t_3003123416.data[chckIndx(indexHEX60gensym22_3003123426, 0, (t_3003123416.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3003123417);
    }
    

  return result_3003123418;

}

function replaceReferences_3003123294(node_3003123295, idMap_3003123298) {
    if (contains_3003123341(idMap_3003123298, node_3003123295.reff)) {
    node_3003123295.reff = nimCopy(node_3003123295.reff, HEX5BHEX5D_3003123413(idMap_3003123298, node_3003123295.reff), NTI2046820355);
    }
    
    Label1: {
      var child_3003123496 = null;
      var i_2969579842 = 0;
      var L_2969579843 = (node_3003123295.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579842 < L_2969579843)) break Label3;
            child_3003123496 = node_3003123295.children[chckIndx(i_2969579842, 0, (node_3003123295.children).length - 1)];
            replaceReferences_3003123294(child_3003123496, idMap_3003123298);
            i_2969579842 = addInt(i_2969579842, 1);
            if (!(((node_3003123295.children).length == L_2969579843))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function cloneAndMapIds_3003123497(node_3003123498) {
  var result_3003123499 = null;

  BeforeRet: {
    var idMap_3003123511 = [initTable_3003123500(32)];
    var newNode_3003123512 = clone_3003121958(node_3003123498, idMap_3003123511[0]);
    replaceReferences_3003123294(newNode_3003123512, idMap_3003123511[0]);
    result_3003123499 = newNode_3003123512;
    break BeforeRet;
  };

  return result_3003123499;

}

function copySelected_2969579783(self_2969579784) {
  BeforeRet: {
    if (isEditing_2969575204(self_2969579784)) {
    break BeforeRet;
    }
    
    self_2969579784.deletedNode = nimCopy(self_2969579784.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969569717(self_2969579784))), NTI3003121783);
  };

  
}

function copySelectedJsWrapper_2969579779(self_2969579815) {
    copySelected_2969579783(self_2969579815);

  
}
editor_ast_prototype.copySelected = function() { return (copySelectedJsWrapper_2969579779(this));};

function getSymbol_3019906505(ctxHEX60gensym80_3019906506, idHEX60gensym80_3019906507) {
  var result_3019906509 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym80_3019906510 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym80_3019906507, NTI2046820355), Field1: 2}, NTI3036676199);
    if (contains_3019900977(ctxHEX60gensym80_3019906506.itemsSymbol, itemHEX60gensym80_3019906510)) {
    result_3019906509 = nimCopy(result_3019906509, some_3019906677(HEX5BHEX5D_3019901076(ctxHEX60gensym80_3019906506.itemsSymbol, itemHEX60gensym80_3019906510)), NTI3087008908);
    break BeforeRet;
    }
    
    result_3019906509 = nimCopy(result_3019906509, none_3019906690(), NTI3087008908);
    break BeforeRet;
  };

  return result_3019906509;

}

function content_2818574083(document_2818574084) {
  var result_2818574085 = [];

  BeforeRet: {
    result_2818574085 = nimCopy(null, document_2818574084.lines, NTI2818572428);
    break BeforeRet;
  };

  return result_2818574085;

}

function updateNode_3019949689(ctx_3019949690, node_3019949691) {
          var Temporary3;
            var Temporary4;

    ctx_3019949690.depGraph.revision = addInt(ctx_3019949690.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679287(ctx_3019949690.depGraph.changed, {Field0: getItem_3019905914(node_3019949691), Field1: -1}, ctx_3019949690.depGraph.revision);
    var parent_3019949765 = node_3019949691.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3019949765 == null))) Temporary3 = false; else {            var oHEX60gensym522_3019949772 = findWithParentRec_3003123589(parent_3019949765, 11);
            if (!isSome_3003123546(oHEX60gensym522_3019949772)) Temporary4 = false; else {              var child_3019949818 = get_3003123566(oHEX60gensym522_3019949772);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3019949819 = child_3019949818.parent;
          HEX5BHEX5DHEX3D_3036679287(ctx_3019949690.depGraph.changed, {Field0: getItem_3019905914(functionDefinition_3019949819), Field1: -1}, ctx_3019949690.depGraph.revision);
          parent_3019949765 = functionDefinition_3019949819.parent;
        }
    };
    var fmtRes_3019949893 = [mnewString(0)];
    fmtRes_3019949893[0].push.apply(fmtRes_3019949893[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008586(fmtRes_3019949893, 0, node_3019949691, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019949893[0], NTI33554449)]);

  
}

function notifySymbolChanged_3019949121(ctx_3019949122, sym_3019949123) {
    ctx_3019949122.depGraph.revision = addInt(ctx_3019949122.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679287(ctx_3019949122.depGraph.changed, {Field0: getItem_3019906700(sym_3019949123), Field1: -1}, ctx_3019949122.depGraph.revision);
    var fmtRes_3019949201 = [mnewString(0)];
    fmtRes_3019949201[0].push.apply(fmtRes_3019949201[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_3019949201, 0, sym_3019949123.name, []);
    fmtRes_3019949201[0].push.apply(fmtRes_3019949201[0], [32,40]);;
    formatValue_3036676340(fmtRes_3019949201, 0, sym_3019949123.id, []);
    fmtRes_3019949201[0].push.apply(fmtRes_3019949201[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019949201[0], NTI33554449)]);

  
}

function newSeq_1979711504(len_1979711506) {
  var result_1979711507 = [];

    result_1979711507 = new Array(len_1979711506); for (var i = 0 ; i < len_1979711506 ; ++i) { result_1979711507[i] = []; }
  return result_1979711507;

}

function newSeq_1979711539(len_1979711541) {
  var result_1979711542 = [];

    result_1979711542 = new Array(len_1979711541); for (var i = 0 ; i < len_1979711541 ; ++i) { result_1979711542[i] = 0; }
  return result_1979711542;

}

function levenshtein_ratio_and_distance_1979711491(s_1979711492, t_1979711493, ratio_calc_1979711494) {
                    var Temporary16;
                    var Temporary17;
    var Temporary18;

  var result_1979711495 = 0.0;

  BeforeRet: {
    var rows_1979711496 = addInt((s_1979711492).length, 1);
    var cols_1979711497 = addInt((t_1979711493).length, 1);
    var distance_1979711498 = [];
    var cost_1979711499 = 0;
    distance_1979711498 = nimCopy(null, newSeq_1979711504(chckRange(rows_1979711496, 0, 2147483647)), NTI1979711504);
    Label1: {
      var i_1979711534 = 0;
      var i_2969579956 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579956 < rows_1979711496)) break Label3;
            i_1979711534 = i_2969579956;
            distance_1979711498[chckIndx(i_1979711534, 0, (distance_1979711498).length - 1)] = nimCopy(null, newSeq_1979711539(chckRange(cols_1979711497, 0, 2147483647)), NTI1979711531);
            i_2969579956 = addInt(i_2969579956, 1);
          }
      };
    };
    Label4: {
      var i_1979711551 = 0;
      var i_2969579962 = 1;
      Label5: {
          Label6: while (true) {
          if (!(i_2969579962 < rows_1979711496)) break Label6;
            i_1979711551 = i_2969579962;
            Label7: {
              var k_1979711556 = 0;
              var i_2969579960 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(i_2969579960 < cols_1979711497)) break Label9;
                    k_1979711556 = i_2969579960;
                    distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)][chckIndx(0, 0, (distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)]).length - 1)] = i_1979711551;
                    distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)][chckIndx(k_1979711556, 0, (distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)]).length - 1)] = k_1979711556;
                    i_2969579960 = addInt(i_2969579960, 1);
                  }
              };
            };
            i_2969579962 = addInt(i_2969579962, 1);
          }
      };
    };
    Label10: {
      var col_1979711561 = 0;
      var i_2969579968 = 1;
      Label11: {
          Label12: while (true) {
          if (!(i_2969579968 < cols_1979711497)) break Label12;
            col_1979711561 = i_2969579968;
            Label13: {
              var row_1979711566 = 0;
              var i_2969579966 = 1;
              Label14: {
                  Label15: while (true) {
                  if (!(i_2969579966 < rows_1979711496)) break Label15;
                    row_1979711566 = i_2969579966;
                    if ((s_1979711492[chckIndx(subInt(row_1979711566, 1), 0, (s_1979711492).length - 1)] == t_1979711493[chckIndx(subInt(col_1979711561, 1), 0, (t_1979711493).length - 1)])) {
                    cost_1979711499 = 0;
                    }
                    else {
                      if (ratio_calc_1979711494) {
                      cost_1979711499 = 2;
                      }
                      else {
                        cost_1979711499 = 1;
                      }
                      
                    }
                    
                    distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(col_1979711561, 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)] = nimMin(nimMin(addInt((Temporary16 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary16)[chckIndx(col_1979711561, 0, (Temporary16).length - 1)], 1), addInt(distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(subInt(col_1979711561, 1), 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)], 1)), addInt((Temporary17 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary17)[chckIndx(subInt(col_1979711561, 1), 0, (Temporary17).length - 1)], cost_1979711499));
                    i_2969579966 = addInt(i_2969579966, 1);
                  }
              };
            };
            i_2969579968 = addInt(i_2969579968, 1);
          }
      };
    };
    var dst_1979711567 = (Temporary18 = distance_1979711498[chckIndx(subInt(rows_1979711496, 1), 0, (distance_1979711498).length - 1)], Temporary18)[chckIndx(subInt(cols_1979711497, 1), 0, (Temporary18).length - 1)];
    if (ratio_calc_1979711494) {
    result_1979711495 = (subInt(addInt((s_1979711492).length, (t_1979711493).length), dst_1979711567) / addInt((s_1979711492).length, (t_1979711493).length));
    break BeforeRet;
    }
    else {
      result_1979711495 = dst_1979711567;
      break BeforeRet;
    }
    
  };

  return result_1979711495;

}

function fuzzyMatch_1979711568(s1_1979711569, s2_1979711570) {
  var result_1979711571 = 0.0;

  BeforeRet: {
    if (((s2_1979711570).length < (s1_1979711569).length)) {
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s2_1979711570, s1_1979711569, true);
    break BeforeRet;
    }
    
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s1_1979711569, s2_1979711570, true);
    break BeforeRet;
  };

  return result_1979711571;

}

function parseFloatNative_33557211(a_33557212) {
  var result_33557213 = 0.0;

    var str_33557214 = [];
    Label1: {
      var x_33557228 = 0;
      var i_2969579978 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579978 < (a_33557212).length)) break Label3;
            x_33557228 = a_33557212[i_2969579978];
            addChar(str_33557214, x_33557228);;
            i_2969579978 += 1;
          }
      };
    };
    var cstr_33557229 = toJSStr(str_33557214);
      result_33557213 = Number(cstr_33557229);
  

  return result_33557213;

}

function npuParseFloat(s_771752466, number_771752467, number_771752467_Idx) {
  var result_771752468 = 0;

    var bf_771752469 = [0.0];
    result_771752468 = nimParseBiggestFloat(s_771752466, bf_771752469, 0);
    if (!((result_771752468 == 0))) {
    number_771752467[number_771752467_Idx] = bf_771752469[0];
    }
    

  return result_771752468;

}

function parseFloat_771752749(s_771752750, number_771752751, number_771752751_Idx, start_771752752) {
  var result_771752753 = 0;

    result_771752753 = npuParseFloat((s_771752750.slice(start_771752752, (s_771752750).length - 1 + 1)), number_771752751, number_771752751_Idx);

  return result_771752753;

}

function nsuParseFloat(s_855638889) {
  var result_855638890 = [0.0];

    result_855638890[0] = 0.0;
    var L_855638891 = parseFloat_771752749(s_855638889, result_855638890, 0, 0);
    if ((!((L_855638891 == (s_855638889).length)) || (L_855638891 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_855638889 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638890[0];

}

function newSeq_3170893928(len_3170893930) {
  var result_3170893931 = [];

    result_3170893931 = new Array(len_3170893930); for (var i = 0 ; i < len_3170893930 ; ++i) { result_3170893931[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }
  return result_3170893931;

}

function mergeAlt_3170893967(a_3170893969, b_3170893970, lo_3170893971, m_3170893972, hi_3170893973, cmp_3170893976, order_3170893977) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_3170893976(a_3170893969[chckIndx(m_3170893972, 0, (a_3170893969).length - 1)], a_3170893969[chckIndx(addInt(m_3170893972, 1), 0, (a_3170893969).length - 1)]), order_3170893977) <= 0)) {
    break BeforeRet;
    }
    
    var j_3170893978 = lo_3170893971;
    if (!((j_3170893978 <= m_3170893972))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_3170893984 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_3170893978 <= m_3170893972)) break Label2;
          b_3170893970[chckIndx(bb_3170893984, 0, (b_3170893970).length - 1)] = nimCopy(b_3170893970[chckIndx(bb_3170893984, 0, (b_3170893970).length - 1)], a_3170893969[chckIndx(j_3170893978, 0, (a_3170893969).length - 1)], NTI2969568617);
          bb_3170893984 = addInt(bb_3170893984, 1);
          j_3170893978 = addInt(j_3170893978, 1);
        }
    };
    var i_3170893995 = 0;
    var k_3170893996 = lo_3170893971;
    Label3: {
        Label4: while (true) {
        if (!((k_3170893996 < j_3170893978) && (j_3170893978 <= hi_3170893973))) break Label4;
          if ((HEX2A_1023410184(cmp_3170893976(b_3170893970[chckIndx(i_3170893995, 0, (b_3170893970).length - 1)], a_3170893969[chckIndx(j_3170893978, 0, (a_3170893969).length - 1)]), order_3170893977) <= 0)) {
          a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)] = nimCopy(a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)], b_3170893970[chckIndx(i_3170893995, 0, (b_3170893970).length - 1)], NTI2969568617);
          i_3170893995 = addInt(i_3170893995, 1);
          }
          else {
            a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)] = nimCopy(a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)], a_3170893969[chckIndx(j_3170893978, 0, (a_3170893969).length - 1)], NTI2969568617);
            j_3170893978 = addInt(j_3170893978, 1);
          }
          
          k_3170893996 = addInt(k_3170893996, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_3170893996 < j_3170893978)) break Label6;
          a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)] = nimCopy(a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)], b_3170893970[chckIndx(i_3170893995, 0, (b_3170893970).length - 1)], NTI2969568617);
          k_3170893996 = addInt(k_3170893996, 1);
          i_3170893995 = addInt(i_3170893995, 1);
        }
    };
  };

  
}

function sort_3170893916(a_3170893918, cmp_3170893921, order_3170893922) {
    var n_3170893927 = (a_3170893918).length;
    var b_3170893964 = newSeq_3170893928(chckRange(divInt(n_3170893927, 2), 0, 2147483647));
    var s_3170893965 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_3170893965 < n_3170893927)) break Label2;
          var m_3170893966 = subInt(subInt(n_3170893927, 1), s_3170893965);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_3170893966)) break Label4;
                mergeAlt_3170893967(a_3170893918, b_3170893964, nimMax(addInt(subInt(m_3170893966, s_3170893965), 1), 0), m_3170893966, addInt(m_3170893966, s_3170893965), cmp_3170893921, order_3170893922);
                m_3170893966 = subInt(m_3170893966, mulInt(s_3170893965, 2));
              }
          };
          s_3170893965 = mulInt(s_3170893965, 2);
        }
    };

  
}

function cmp_3170893896(x_3170893898, y_3170893899) {
  var result_3170893900 = 0;

  BeforeRet: {
    if ((x_3170893898 == y_3170893899)) {
    result_3170893900 = 0;
    break BeforeRet;
    }
    
    if ((x_3170893898 < y_3170893899)) {
    result_3170893900 = -1;
    break BeforeRet;
    }
    
    result_3170893900 = 1;
    break BeforeRet;
  };

  return result_3170893900;

}

function getCompletions_2969575417(editor_2969575418, text_2969575419, contextNode_2969575423) {
      var Temporary5;
      var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_2969575567(a_2969575585, b_2969575586) {
      var result_2969575591 = 0;

        result_2969575591 = cmp_3170893896(a_2969575585.score, b_2969575586.score);

      return result_2969575591;

    }

  var result_2969575424 = [];

  BeforeRet: {
    result_2969575424 = nimCopy(null, [], NTI3170893842);
    if (((isNone_3003123574(contextNode_2969575423) || (get_3003123566(contextNode_2969575423).kind == 1)) || (get_3003123566(contextNode_2969575423).kind == 0))) {
    var symbols_2969575489 = computeSymbols_3019922062(ctx_2969567287, get_3003123566(contextNode_2969575423), true);
    Label1: {
      var key_2969575494 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2969575495 = null;
      var L_2969579947 = len_3087009061(symbols_2969575489);
      Label2: {
        var h_2969579949 = 0;
        var colontmp__2969579950 = 0;
        colontmp__2969579950 = (symbols_2969575489.data).length - 1;
        var res_2969579951 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969579951 <= colontmp__2969579950)) break Label4;
              h_2969579949 = res_2969579951;
              if (isFilled_1308622880(symbols_2969575489.data[chckIndx(h_2969579949, 0, (symbols_2969575489.data).length - 1)].Field0)) {
              var colontmp__2969579954 = nimCopy(null, {Field0: nimCopy(null, symbols_2969575489.data[chckIndx(h_2969579949, 0, (symbols_2969575489.data).length - 1)].Field1, NTI2046820355), Field1: symbols_2969575489.data[chckIndx(h_2969579949, 0, (symbols_2969575489.data).length - 1)].Field2}, NTI3087008731);
              key_2969575494 = nimCopy(key_2969575494, colontmp__2969579954["Field0"], NTI2046820355);
              symbol_2969575495 = colontmp__2969579954["Field1"];
              var score_2969575496 = fuzzyMatch_1979711568(text_2969575419, symbol_2969575495.name);
              result_2969575424.push({kind: 0, score: score_2969575496, id: nimCopy(null, symbol_2969575495.id, NTI2046820355), nodeKind: 0, name: []});;
              if (!((len_3087009061(symbols_2969575489) == L_2969579947))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969579951 = addInt(res_2969579951, 1);
            }
        };
      };
    };
    }
    
      var oHEX60gensym121_2969575503 = nimCopy(null, contextNode_2969575423, NTI3003121783);
      if (!isSome_3003123546(oHEX60gensym121_2969575503)) Temporary6 = false; else {        var node_2969575526 = get_3003123566(oHEX60gensym121_2969575503);
        Temporary6 = true;      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (node_2969575526.kind == 0);      }    if (Temporary5) {
    result_2969575424.push({kind: 1, nodeKind: 9, name: [105,102], score: fuzzyMatch_1979711568(text_2969575419, [105,102]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575424.push({kind: 1, nodeKind: 10, name: [119,104,105,108,101], score: fuzzyMatch_1979711568(text_2969575419, [119,104,105,108,101]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575424.push({kind: 1, nodeKind: 4, name: [99,111,110,115,116], score: fuzzyMatch_1979711568(text_2969575419, [99,111,110,115,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575424.push({kind: 1, nodeKind: 5, name: [108,101,116], score: fuzzyMatch_1979711568(text_2969575419, [108,101,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575424.push({kind: 1, nodeKind: 6, name: [118,97,114], score: fuzzyMatch_1979711568(text_2969575419, [118,97,114]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    if (nsuStartsWith(text_2969575419, [34])) {
    Temporary7 = 1.1;
    }
    else {
    Temporary7 = 0.0;
    }
    
    result_2969575424.push({kind: 1, nodeKind: 3, name: [115,116,114,105,110,103,32,108,105,116,101,114,97,108], score: Temporary7, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575424.push({kind: 1, nodeKind: 7, name: [98,108,111,99,107], score: fuzzyMatch_1979711568(text_2969575419, [123]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575424.push({kind: 1, nodeKind: 11, name: [102,110], score: fuzzyMatch_1979711568(text_2969575419, [102,110]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
++excHandler;
    try {
    var _ = nsuParseFloat(text_2969575419);
    result_2969575424.push({kind: 1, nodeKind: 2, name: [110,117,109,98,101,114,32,108,105,116,101,114,97,108], score: 1.1, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    sort_3170893916(result_2969575424, HEX3Aanonymous_2969575567, 0);
    break BeforeRet;
  };

  return result_2969575424;

}

function updateCompletions_2969569705(editor_2969569706) {
  BeforeRet: {
    if ((editor_2969569706.textDocument == null)) {
    editor_2969569706.completions = nimCopy(null, [], NTI3170893842);
    editor_2969569706.selectedCompletion = 0;
    break BeforeRet;
    }
    
    var text_2969575615 = nsuJoinSep(content_2818574083(editor_2969569706.textDocument), []);
    editor_2969569706.completions = nimCopy(null, getCompletions_2969575417(editor_2969569706, text_2969575615, some_3003121890(node_2969569717(editor_2969569706))), NTI2969571604);
    editor_2969569706.completionText = nimCopy(null, text_2969575615, NTI33554449);
    if ((0 < (editor_2969569706.completions).length)) {
    editor_2969569706.selectedCompletion = clamp_1660945119(editor_2969569706.selectedCompletion, 0, subInt((editor_2969569706.completions).length, 1));
    }
    else {
      editor_2969569706.selectedCompletion = 0;
    }
    
    markDirty_2415919143(editor_2969569706);
  };

  
}

function finishEdit_2969575630(self_2969575631, apply_2969575632) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  BeforeRet: {
    if (!(isEditing_2969575204(self_2969575631))) {
    break BeforeRet;
    }
    
    if (apply_2969575632) {
    if (!(HEX3DHEX3D_2046820626(self_2969575631.currentlyEditedSymbol, null_2046820646))) {
      var oHEX60gensym643_2969579856 = getSymbol_3019906505(ctx_2969567287, self_2969575631.currentlyEditedSymbol);
      if (!isSome_3087009352(oHEX60gensym643_2969579856)) Temporary1 = false; else {        var sym_2969579879 = get_3087009372(oHEX60gensym643_2969579856);
        Temporary1 = true;      }    if (Temporary1) {
    self_2969575631.document.undoOps.push({kind: 4, id: nimCopy(null, self_2969575631.currentlyEditedSymbol, NTI2046820355), text: nimCopy(null, sym_2969579879.name, NTI33554449), parent: null, idx: 0, node: null});;
    sym_2969579879.name = nimCopy(null, nsuJoinSep(content_2818574083(self_2969575631.textDocument), []), NTI33554449);
    if ((sym_2969579879.kind == 0)) {
    var Temporary2 = sym_2969579879;
    if (ConstSet159[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    Temporary2.node.text = nimCopy(null, sym_2969579879.name, NTI33554449);
    var Temporary3 = sym_2969579879;
    if (ConstSet160[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    updateNode_3019949689(ctx_2969567287, Temporary3.node);
    }
    
    notifySymbolChanged_3019949121(ctx_2969567287, sym_2969579879);
    }
    
    }
    else {
    if (!((self_2969575631.currentlyEditedNode == null))) {
    self_2969575631.document.undoOps.push({kind: 3, node: self_2969575631.currentlyEditedNode, text: nimCopy(null, self_2969575631.currentlyEditedNode.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
    self_2969575631.currentlyEditedNode.text = nimCopy(null, nsuJoinSep(content_2818574083(self_2969575631.textDocument), [10]), NTI33554449);
    updateNode_3019949689(ctx_2969567287, self_2969575631.currentlyEditedNode);
    }
    }
    }
    
    unregister_2415919268(self_2969575631.textEditor);
    self_2969575631.textEditor = null;
    self_2969575631.textDocument = null;
    self_2969575631.currentlyEditedSymbol = nimCopy(self_2969575631.currentlyEditedSymbol, null_2046820646, NTI2046820355);
    self_2969575631.currentlyEditedNode = null;
    updateCompletions_2969569705(self_2969575631);
    markDirty_2415919143(self_2969575631);
  };

  
}

function finishEditJsWrapper_2969579847(self_2969579924, apply_2969579925) {
    finishEdit_2969575630(self_2969579924, apply_2969579925);

  
}
editor_ast_prototype.finishEdit = function(apply_ /* : bool */) { return (finishEditJsWrapper_2969579847(this, apply_));};

function pop_2969576335(s_2969576337, s_2969576337_Idx) {
  var result_2969576338 = null;

    var L_2969576342 = subInt((s_2969576337[s_2969576337_Idx]).length, 1);
    result_2969576338 = s_2969576337[s_2969576337_Idx][chckIndx(L_2969576342, 0, (s_2969576337[s_2969576337_Idx]).length - 1)];
    if (s_2969576337[s_2969576337_Idx].length < chckRange(L_2969576342, 0, 2147483647)) { for (var i = s_2969576337[s_2969576337_Idx].length ; i < chckRange(L_2969576342, 0, 2147483647) ; ++i) s_2969576337[s_2969576337_Idx].push(null); }
               else { s_2969576337[s_2969576337_Idx].length = chckRange(L_2969576342, 0, 2147483647); };

  return result_2969576338;

}

function formatValue_2969569578(result_2969569580, result_2969569580_Idx, value_2969569581, specifier_2969569582) {
    formatValue_721420459(result_2969569580, result_2969569580_Idx, reprEnum(value_2969569581, NTI2969568460), specifier_2969569582);

  
}

function HEX24_2969569570(op_2969569571) {
  var result_2969569572 = [];

    var fmtRes_2969569577 = [mnewString(0)];
    formatValue_2969569578(fmtRes_2969569577, 0, op_2969569571.kind, []);
    fmtRes_2969569577[0].push.apply(fmtRes_2969569577[0], [44,32,39]);;
    formatValue_721420459(fmtRes_2969569577, 0, op_2969569571.text, []);
    fmtRes_2969569577[0].push.apply(fmtRes_2969569577[0], [39]);;
    result_2969569572 = nimCopy(null, fmtRes_2969569577[0], NTI33554449);
    if (!(HEX3DHEX3D_2046820626(op_2969569571.id, null_2046820646))) {
    var fmtRes_2969569590 = [mnewString(0)];
    fmtRes_2969569590[0].push.apply(fmtRes_2969569590[0], [44,32,105,100,32,61,32]);;
    formatValue_3036676340(fmtRes_2969569590, 0, op_2969569571.id, []);
    result_2969569572.push.apply(result_2969569572, fmtRes_2969569590[0]);;
    }
    
    if (!((op_2969569571.node == null))) {
    var fmtRes_2969569604 = [mnewString(0)];
    fmtRes_2969569604[0].push.apply(fmtRes_2969569604[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_3087008586(fmtRes_2969569604, 0, op_2969569571.node, []);
    result_2969569572.push.apply(result_2969569572, fmtRes_2969569604[0]);;
    }
    
    if (!((op_2969569571.parent == null))) {
    var fmtRes_2969569618 = [mnewString(0)];
    fmtRes_2969569618[0].push.apply(fmtRes_2969569618[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_3087008586(fmtRes_2969569618, 0, op_2969569571.parent, []);
    fmtRes_2969569618[0].push.apply(fmtRes_2969569618[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2701131945(fmtRes_2969569618, 0, op_2969569571.idx, []);
    result_2969569572.push.apply(result_2969569572, fmtRes_2969569618[0]);;
    }
    

  return result_2969569572;

}

function formatValue_2969576353(result_2969576355, result_2969576355_Idx, value_2969576356, specifier_2969576357) {
    formatValue_721420459(result_2969576355, result_2969576355_Idx, HEX24_2969569570(value_2969576356), specifier_2969576357);

  
}

function insert_3003121722(x_3003121724, x_3003121724_Idx, item_3003121725, i_3003121726) {
    var it_3003121747 = null;
    x_3003121724[x_3003121724_Idx] = x_3003121724[x_3003121724_Idx] || []; x_3003121724[x_3003121724_Idx].splice(i_3003121726, 0, it_3003121747);
    x_3003121724[x_3003121724_Idx][chckIndx(i_3003121726, 0, (x_3003121724[x_3003121724_Idx]).length - 1)] = item_3003121725;

  
}

function insert_3003121718(node_3003121719, child_3003121720, idx_3003121721) {
    if (HEX3DHEX3D_2046820626(node_3003121719.id, null_2046820646)) {
    node_3003121719.id = nimCopy(node_3003121719.id, newId_2046820597(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820626(child_3003121720.id, null_2046820646)) {
    child_3003121720.id = nimCopy(child_3003121720.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3003121720.parent = node_3003121719;
    insert_3003121722(node_3003121719, "children", child_3003121720, chckRange(idx_3003121721, 0, 2147483647));

  
}

function undo_2969576325(document_2969576326) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2969576328 = ({val: null});

  BeforeRet: {
    if (((document_2969576326.undoOps).length == 0)) {
    result_2969576328 = nimCopy(result_2969576328, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var undoOp_2969576347 = pop_2969576335(document_2969576326, "undoOps");
    var fmtRes_2969576352 = [mnewString(0)];
    fmtRes_2969576352[0].push.apply(fmtRes_2969576352[0], [85,110,100,111,105,110,103,32]);;
    formatValue_2969576353(fmtRes_2969576352, 0, undoOp_2969576347, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969576352[0], NTI33554449)]);
    switch (undoOp_2969576347.kind) {
    case 0:
      insert_3003121718(undoOp_2969576347.parent, undoOp_2969576347.node, undoOp_2969576347.idx);
      handleNodeInserted_2969571669(document_2969576326, undoOp_2969576347.node);
      document_2969576326.redoOps.push(undoOp_2969576347);;
      result_2969576328 = nimCopy(result_2969576328, some_3003121890(undoOp_2969576347.node), NTI3003121783);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2969576365 = HEX5BHEX5D_3003121748(undoOp_2969576347.parent, undoOp_2969576347.idx);
      handleNodeDelete_2969573927(document_2969576326, HEX5BHEX5D_3003121748(undoOp_2969576347.parent, undoOp_2969576347.idx));
      HEX5BHEX5DHEX3D_3003121928(undoOp_2969576347.parent, undoOp_2969576347.idx, undoOp_2969576347.node);
      handleNodeInserted_2969571669(document_2969576326, undoOp_2969576347.node);
      document_2969576326.redoOps.push({kind: 1, parent: undoOp_2969576347.parent, idx: undoOp_2969576347.idx, node: oldNode_2969576365, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2969576328 = nimCopy(result_2969576328, some_3003121890(undoOp_2969576347.node), NTI3003121783);
      break BeforeRet;
      break;
    case 2:
      handleNodeDelete_2969573927(document_2969576326, HEX5BHEX5D_3003121748(undoOp_2969576347.parent, undoOp_2969576347.idx));
      var _ = delete_3003121932(undoOp_2969576347.parent, undoOp_2969576347.idx);
      document_2969576326.redoOps.push(undoOp_2969576347);;
      if ((undoOp_2969576347.idx < len_3003121752(undoOp_2969576347.parent))) {
      result_2969576328 = nimCopy(result_2969576328, some_3003121890(HEX5BHEX5D_3003121748(undoOp_2969576347.parent, undoOp_2969576347.idx)), NTI3003121783);
      break BeforeRet;
      }
      else {
      if ((0 < undoOp_2969576347.idx)) {
      result_2969576328 = nimCopy(result_2969576328, some_3003121890(HEX5BHEX5D_3003121748(undoOp_2969576347.parent, subInt(undoOp_2969576347.idx, 1))), NTI3003121783);
      break BeforeRet;
      }
      }
      result_2969576328 = nimCopy(result_2969576328, some_3003121890(undoOp_2969576347.parent), NTI3003121783);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym151_2969576388 = getSymbol_3019906505(ctx_2969567287, undoOp_2969576347.id);
        if (!isSome_3087009352(oHEX60gensym151_2969576388)) Temporary1 = false; else {          var symbol_2969576411 = get_3087009372(oHEX60gensym151_2969576388);
          Temporary1 = true;        }      if (Temporary1) {
      document_2969576326.redoOps.push({kind: 4, id: nimCopy(null, undoOp_2969576347.id, NTI2046820355), text: nimCopy(null, symbol_2969576411.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2969576411.name = nimCopy(null, undoOp_2969576347.text, NTI33554449);
      if ((symbol_2969576411.kind == 0)) {
      var Temporary2 = symbol_2969576411;
      if (ConstSet168[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2969576411.name, NTI33554449);
      var Temporary3 = symbol_2969576411;
      if (ConstSet169[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3019949689(ctx_2969567287, Temporary3.node);
      }
      
      notifySymbolChanged_3019949121(ctx_2969567287, symbol_2969576411);
      }
      
      break;
    case 3:
      document_2969576326.redoOps.push({kind: 3, node: undoOp_2969576347.node, text: nimCopy(null, undoOp_2969576347.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      undoOp_2969576347.node.text = nimCopy(null, undoOp_2969576347.text, NTI33554449);
      updateNode_3019949689(ctx_2969567287, undoOp_2969576347.node);
      break;
    }
    result_2969576328 = nimCopy(result_2969576328, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576328;

}

function undo_2969579991(self_2969579992) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575204(self_2969579992)) {
    break BeforeRet;
    }
    
    finishEdit_2969575630(self_2969579992, false);
      var oHEX60gensym653_2969579995 = undo_2969576325(self_2969579992.document);
      if (!isSome_3003123546(oHEX60gensym653_2969579995)) Temporary1 = false; else {        var node_2969580018 = get_3003123566(oHEX60gensym653_2969579995);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570879(self_2969579992, node_2969580018);
    }
    
    markDirty_2415919143(self_2969579992);
  };

  
}

function undoJsWrapper2_2969579987(self_2969580046) {
    undo_2969579991(self_2969580046);

  
}
editor_ast_prototype.undo2 = function() { return (undoJsWrapper2_2969579987(this));};

function redo_2969576426(document_2969576427) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2969576429 = ({val: null});

  BeforeRet: {
    if (((document_2969576427.redoOps).length == 0)) {
    result_2969576429 = nimCopy(result_2969576429, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var redoOp_2969576438 = pop_2969576335(document_2969576427, "redoOps");
    var fmtRes_2969576443 = [mnewString(0)];
    fmtRes_2969576443[0].push.apply(fmtRes_2969576443[0], [82,101,100,111,105,110,103,32]);;
    formatValue_2969576353(fmtRes_2969576443, 0, redoOp_2969576438, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969576443[0], NTI33554449)]);
    switch (redoOp_2969576438.kind) {
    case 0:
      document_2969576427.undoOps.push({kind: 0, parent: redoOp_2969576438.parent, idx: redoOp_2969576438.idx, node: redoOp_2969576438.node, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      handleNodeDelete_2969573927(document_2969576427, HEX5BHEX5D_3003121748(redoOp_2969576438.parent, redoOp_2969576438.idx));
      var _ = delete_3003121932(redoOp_2969576438.parent, redoOp_2969576438.idx);
      if ((redoOp_2969576438.idx < len_3003121752(redoOp_2969576438.parent))) {
      result_2969576429 = nimCopy(result_2969576429, some_3003121890(HEX5BHEX5D_3003121748(redoOp_2969576438.parent, redoOp_2969576438.idx)), NTI3003121783);
      break BeforeRet;
      }
      else {
      if ((0 < redoOp_2969576438.idx)) {
      result_2969576429 = nimCopy(result_2969576429, some_3003121890(HEX5BHEX5D_3003121748(redoOp_2969576438.parent, subInt(redoOp_2969576438.idx, 1))), NTI3003121783);
      break BeforeRet;
      }
      }
      result_2969576429 = nimCopy(result_2969576429, some_3003121890(redoOp_2969576438.parent), NTI3003121783);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2969576462 = HEX5BHEX5D_3003121748(redoOp_2969576438.parent, redoOp_2969576438.idx);
      handleNodeDelete_2969573927(document_2969576427, HEX5BHEX5D_3003121748(redoOp_2969576438.parent, redoOp_2969576438.idx));
      HEX5BHEX5DHEX3D_3003121928(redoOp_2969576438.parent, redoOp_2969576438.idx, redoOp_2969576438.node);
      handleNodeInserted_2969571669(document_2969576427, redoOp_2969576438.node);
      document_2969576427.undoOps.push({kind: 1, parent: redoOp_2969576438.parent, idx: redoOp_2969576438.idx, node: oldNode_2969576462, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2969576429 = nimCopy(result_2969576429, some_3003121890(redoOp_2969576438.node), NTI3003121783);
      break BeforeRet;
      break;
    case 2:
      insert_3003121718(redoOp_2969576438.parent, redoOp_2969576438.node, redoOp_2969576438.idx);
      handleNodeInserted_2969571669(document_2969576427, redoOp_2969576438.node);
      document_2969576427.undoOps.push(redoOp_2969576438);;
      result_2969576429 = nimCopy(result_2969576429, some_3003121890(redoOp_2969576438.node), NTI3003121783);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym154_2969576479 = getSymbol_3019906505(ctx_2969567287, redoOp_2969576438.id);
        if (!isSome_3087009352(oHEX60gensym154_2969576479)) Temporary1 = false; else {          var symbol_2969576502 = get_3087009372(oHEX60gensym154_2969576479);
          Temporary1 = true;        }      if (Temporary1) {
      document_2969576427.undoOps.push({kind: 4, id: nimCopy(null, redoOp_2969576438.id, NTI2046820355), text: nimCopy(null, symbol_2969576502.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2969576502.name = nimCopy(null, redoOp_2969576438.text, NTI33554449);
      if ((symbol_2969576502.kind == 0)) {
      var Temporary2 = symbol_2969576502;
      if (ConstSet170[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2969576502.name, NTI33554449);
      var Temporary3 = symbol_2969576502;
      if (ConstSet171[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3019949689(ctx_2969567287, Temporary3.node);
      }
      
      notifySymbolChanged_3019949121(ctx_2969567287, symbol_2969576502);
      }
      
      break;
    case 3:
      document_2969576427.undoOps.push({kind: 3, node: redoOp_2969576438.node, text: nimCopy(null, redoOp_2969576438.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      redoOp_2969576438.node.text = nimCopy(null, redoOp_2969576438.text, NTI33554449);
      updateNode_3019949689(ctx_2969567287, redoOp_2969576438.node);
      break;
    }
    result_2969576429 = nimCopy(result_2969576429, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576429;

}

function redo_2969580068(self_2969580069) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575204(self_2969580069)) {
    break BeforeRet;
    }
    
    finishEdit_2969575630(self_2969580069, false);
      var oHEX60gensym662_2969580072 = redo_2969576426(self_2969580069.document);
      if (!isSome_3003123546(oHEX60gensym662_2969580072)) Temporary1 = false; else {        var node_2969580095 = get_3003123566(oHEX60gensym662_2969580072);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570879(self_2969580069, node_2969580095);
    }
    
    markDirty_2415919143(self_2969580069);
  };

  
}

function redoJsWrapper2_2969580064(self_2969580123) {
    redo_2969580068(self_2969580123);

  
}
editor_ast_prototype.redo2 = function() { return (redoJsWrapper2_2969580064(this));};

function canInsertInto_2969578735(self_2969578736, parent_2969578737) {
        var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
      var Temporary8;

  var result_2969578738 = false;

  BeforeRet: {
    switch (parent_2969578737.kind) {
    case 0:
    case 1:
    case 2:
    case 3:
      result_2969578738 = false;
      break BeforeRet;
      break;
    case 4:
      result_2969578738 = (len_3003121752(parent_2969578737) < 1);
      break BeforeRet;
      break;
    case 5:
    case 6:
    case 10:
    case 13:
      result_2969578738 = (len_3003121752(parent_2969578737) < 2);
      break BeforeRet;
      break;
    case 11:
      result_2969578738 = (len_3003121752(parent_2969578737) < 3);
      break BeforeRet;
      break;
    case 7:
    case 9:
    case 12:
      result_2969578738 = true;
      break BeforeRet;
      break;
    case 8:
      if ((len_3003121752(parent_2969578737) == 0)) {
      result_2969578738 = true;
      break BeforeRet;
      }
      
        var oHEX60gensym529_2969578741 = computeSymbol_3019918905(ctx_2969567287, HEX5BHEX5D_3003121748(parent_2969578737, 0), true);
        if (!isSome_3087009352(oHEX60gensym529_2969578741)) Temporary1 = false; else {          var sym_2969578764 = get_3087009372(oHEX60gensym529_2969578741);
          Temporary1 = true;        }      if (Temporary1) {
      if ((sym_2969578764.kind == 1)) {
      var Temporary2 = sym_2969578764;
      if (ConstSet172[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      switch (Temporary2.operatorNotation) {
      case 1:
      case 2:
        result_2969578738 = (len_3003121752(parent_2969578737) < 2);
        break BeforeRet;
        break;
      case 3:
        result_2969578738 = (len_3003121752(parent_2969578737) < 3);
        break BeforeRet;
        break;
      default: 
        break;
      }
      }
      
      }
      
      var typ_2969578769 = computeType_3019912985(ctx_2969567287, HEX5BHEX5D_3003121748(parent_2969578737, 0), true);
      if ((typ_2969578769.kind == 4)) {
        var Temporary4 = typ_2969578769;
        if (ConstSet173[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        if (!(0 < (Temporary4.paramTypes).length)) Temporary3 = false; else {          var Temporary5 = typ_2969578769;
          if (ConstSet174[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
          var Temporary6 = typ_2969578769;
          if (ConstSet175[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
          Temporary3 = HEX3DHEX3D_3087008309((Temporary7 = Temporary5.paramTypes, Temporary7)[chckIndx((Temporary6.paramTypes).length - 1, 0, (Temporary7).length - 1)], anyType_3087008184(true));        }      if (Temporary3) {
      result_2969578738 = true;
      break BeforeRet;
      }
      
      var Temporary8 = typ_2969578769;
      if (ConstSet176[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007747)); }
      result_2969578738 = (len_3003121752(parent_2969578737) < addInt((Temporary8.paramTypes).length, 1));
      break BeforeRet;
      }
      
      result_2969578738 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2969578738;

}

function some_2969576557(val_2969576559) {
  var result_2969576560 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2969576560.has = true;
    result_2969576560.val = nimCopy(result_2969576560.val, val_2969576559, NTI2969572506);

  return result_2969576560;

}

function none_2969576571() {
  var result_2969576578 = ({val: {Field0: null, Field1: 0}, has: false});

  return result_2969576578;

}

function none_2969577058() {
  var result_2969577060 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2969577060 = nimCopy(result_2969577060, none_2969576571(), NTI2969572511);

  return result_2969577060;

}

function createNodeFromAction_2969576517(editor_2969576518, arg_2969576519, node_2969576520, typ_2969576521) {
        var Temporary1;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
        var Temporary47;
            var Temporary71;
      var Temporary85;

  var result_2969576527 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (toJSStr(arg_2969576519)) {
    case "deleted":
        var oHEX60gensym155_2969576530 = nimCopy(null, editor_2969576518.deletedNode, NTI3003121783);
        if (!isSome_3003123546(oHEX60gensym155_2969576530)) Temporary1 = false; else {          var node_2969576553 = get_3003123566(oHEX60gensym155_2969576530);
          Temporary1 = true;        }      if (Temporary1) {
      editor_2969576518.deletedNode = nimCopy(editor_2969576518.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969576553)), NTI3003121783);
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969576553, Field1: 0}), NTI2969572511);
      break BeforeRet;
      }
      
      result_2969576527 = nimCopy(result_2969576527, none_2969576571(), NTI2969572511);
      break BeforeRet;
      break;
    case "empty":
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: {kind: 0, id: newId_2046820597(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "identifier":
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: {kind: 1, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "number-literal":
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "const-decl":
      Label2: {
        var tmpHEX60gensym156_2969576592 = null;
        Label3: {
          var res_2969576662 = null;
          res_2969576662 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576662.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576662.id = nimCopy(res_2969576662.id, newId_2046820597(), NTI2046820355);
          Label5: {
            Label6: {
              var res_2969576665 = null;
              res_2969576665 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576665.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969576662, res_2969576665);
        };
      };
      var node_2969576684 = res_2969576662;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969576684, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "let-decl":
      Label8: {
        var tmpHEX60gensym163_2969576692 = null;
        Label9: {
          var res_2969576698 = null;
          res_2969576698 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576698.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576698.id = nimCopy(res_2969576698.id, newId_2046820597(), NTI2046820355);
          Label11: {
            Label12: {
              var res_2969576701 = null;
              res_2969576701 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576701.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576698, res_2969576701);
            Label14: {
              var res_2969576703 = null;
              res_2969576703 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576703.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576698, res_2969576703);
          };
        };
      };
      var node_2969576731 = res_2969576698;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969576731, Field1: 1}), NTI2969572511);
      break BeforeRet;
      break;
    case "var-decl":
      Label16: {
        var tmpHEX60gensym173_2969576739 = null;
        Label17: {
          var res_2969576745 = null;
          res_2969576745 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576745.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576745.id = nimCopy(res_2969576745.id, newId_2046820597(), NTI2046820355);
          Label19: {
            Label20: {
              var res_2969576748 = null;
              res_2969576748 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576748.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576745, res_2969576748);
            Label22: {
              var res_2969576750 = null;
              res_2969576750 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576750.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576745, res_2969576750);
          };
        };
      };
      var node_2969576778 = res_2969576745;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969576778, Field1: 1}), NTI2969572511);
      break BeforeRet;
      break;
    case "call-func":
      var sym_2969576782 = computeSymbol_3019918905(ctx_2969567287, node_2969576520, true);
        var oHEX60gensym183_2969576785 = nimCopy(null, sym_2969576782, NTI3087008908);
        if (!isSome_3087009352(oHEX60gensym183_2969576785)) Temporary26 = false; else {          var sym_2969576808 = get_3087009372(oHEX60gensym183_2969576785);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2969576808.kind == 1);        }      if (Temporary25) {
      var Temporary27 = sym_2969576808;
      if (ConstSet177[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      Temporary24 = Temporary27.operatorNotation;
      }
      else {
      Temporary24 = 0;
      }
      
      var kind_2969576813 = Temporary24;
      switch (kind_2969576813) {
      case 1:
      case 2:
        Label29: {
          var tmpHEX60gensym184_2969576818 = null;
          Label30: {
            var res_2969576824 = null;
            res_2969576824 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576824.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label32: {
              Label33: {
                var res_2969576826 = null;
                res_2969576826 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576826.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576824, res_2969576826);
              Label35: {
                var res_2969576828 = null;
                res_2969576828 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576828.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576824, res_2969576828);
            };
          };
        };
        Temporary28 = res_2969576824;
        break;
      case 3:
        Label37: {
          var tmpHEX60gensym194_2969576860 = null;
          Label38: {
            var res_2969576866 = null;
            res_2969576866 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576866.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label40: {
              Label41: {
                var res_2969576868 = null;
                res_2969576868 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576868.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576866, res_2969576868);
              Label43: {
                var res_2969576870 = null;
                res_2969576870 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576870.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576866, res_2969576870);
              Label45: {
                var res_2969576872 = null;
                res_2969576872 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576872.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576866, res_2969576872);
            };
          };
        };
        Temporary28 = res_2969576866;
        break;
      case 0:
        var typ_2969576909 = computeType_3019912985(ctx_2969567287, node_2969576520, true);
        if ((typ_2969576909.kind == 0)) {
        Label48: {
          var tmpHEX60gensym207_2969576918 = null;
          Label49: {
            var res_2969576924 = null;
            res_2969576924 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576924.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label51: {
              Label52: {
                var res_2969576926 = null;
                res_2969576926 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576926.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576924, res_2969576926);
              Label54: {
                var res_2969576928 = null;
                res_2969576928 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576928.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576924, res_2969576928);
              Label56: {
                var res_2969576930 = null;
                res_2969576930 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576930.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576924, res_2969576930);
            };
          };
        };
        Temporary47 = res_2969576924;
        }
        else {
        if (!((typ_2969576909.kind == 4))) {
        Label58: {
          var tmpHEX60gensym221_2969576975 = null;
          Label59: {
            var res_2969576981 = null;
            res_2969576981 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576981.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label61: {
              Label62: {
                var res_2969576983 = null;
                res_2969576983 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576983.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
            };
            add_3003121702(res_2969576981, res_2969576983);
          };
        };
        Temporary47 = res_2969576981;
        }
        else {
          Label64: {
            var tmpHEX60gensym228_2969577006 = null;
            Label65: {
              var res_2969577012 = null;
              res_2969577012 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577012.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label67: {
                Label68: {
                  var res_2969577014 = null;
                  res_2969577014 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2969577014.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_3003121702(res_2969577012, res_2969577014);
            };
          };
          var newNode_2969577033 = res_2969577012;
          Label70: {
            var __2969577037 = null;
            var colontmp__2969580378 = [];
            var Temporary71 = typ_2969576909;
            if (ConstSet178[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI3087007747)); }
            colontmp__2969580378 = Temporary71.paramTypes;
            var i_2969580379 = 0;
            var L_2969580380 = (colontmp__2969580378).length;
            Label72: {
                Label73: while (true) {
                if (!(i_2969580379 < L_2969580380)) break Label73;
                  __2969577037 = colontmp__2969580378[chckIndx(i_2969580379, 0, (colontmp__2969580378).length - 1)];
                  Label74: {
                    var tmpHEX60gensym235_2969577042 = null;
                    Label75: {
                      var res_2969577048 = null;
                      res_2969577048 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                      try {
                      res_2969577048.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                      if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                      raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                      }
                      else {
                      	reraiseException();
                      }
                      lastJSError = prevJSError;
                      } finally {
                      }
                    };
                  };
                  add_3003121702(newNode_2969577033, res_2969577048);
                  i_2969580379 = addInt(i_2969580379, 1);
                  if (!(((colontmp__2969580378).length == L_2969580380))) {
                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary47 = newNode_2969577033;
        }
        }
        Temporary28 = Temporary47;
        break;
      default: 
        result_2969576527 = nimCopy(result_2969576527, none_2969577058(), NTI2969572511);
        break BeforeRet;
        break;
      }
      var node_2969577077 = Temporary28;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577077, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "call-arg":
      Label77: {
        var tmpHEX60gensym239_2969577085 = null;
        Label78: {
          var res_2969577091 = null;
          res_2969577091 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577091.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label80: {
            Label81: {
              var res_2969577093 = null;
              res_2969577093 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577093.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577091, res_2969577093);
            Label83: {
              var res_2969577095 = null;
              res_2969577095 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577095.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577091, res_2969577095);
          };
        };
      };
      var node_2969577123 = res_2969577091;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577123, Field1: 1}), NTI2969572511);
      break BeforeRet;
      break;
    case "+":
      if ((typ_2969576521.kind == 2)) {
      Temporary85 = IdAppendString_2986344459;
      }
      else {
      Temporary85 = IdAdd_2986344451;
      }
      
      var operator_2969577131 = nimCopy(null, Temporary85, NTI2046820355);
      Label86: {
        var tmpHEX60gensym249_2969577136 = null;
        Label87: {
          var res_2969577142 = null;
          res_2969577142 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577142.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label89: {
            Label90: {
              var res_2969577144 = null;
              res_2969577144 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577144.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577144.reff = nimCopy(res_2969577144.reff, operator_2969577131, NTI2046820355);
            };
            add_3003121702(res_2969577142, res_2969577144);
            Label92: {
              var res_2969577147 = null;
              res_2969577147 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577147.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577142, res_2969577147);
            Label94: {
              var res_2969577149 = null;
              res_2969577149 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577149.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577142, res_2969577149);
          };
        };
      };
      var node_2969577186 = res_2969577142;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577186, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "-":
      Label96: {
        var tmpHEX60gensym262_2969577194 = null;
        Label97: {
          var res_2969577200 = null;
          res_2969577200 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577200.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label99: {
            Label100: {
              var res_2969577202 = null;
              res_2969577202 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577202.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577202.reff = nimCopy(res_2969577202.reff, IdSub_2986344452, NTI2046820355);
            };
            add_3003121702(res_2969577200, res_2969577202);
            Label102: {
              var res_2969577205 = null;
              res_2969577205 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577205.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577200, res_2969577205);
            Label104: {
              var res_2969577207 = null;
              res_2969577207 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577207.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577200, res_2969577207);
          };
        };
      };
      var node_2969577244 = res_2969577200;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577244, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "*":
      Label106: {
        var tmpHEX60gensym275_2969577252 = null;
        Label107: {
          var res_2969577258 = null;
          res_2969577258 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577258.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label109: {
            Label110: {
              var res_2969577260 = null;
              res_2969577260 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577260.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577260.reff = nimCopy(res_2969577260.reff, IdMul_2986344453, NTI2046820355);
            };
            add_3003121702(res_2969577258, res_2969577260);
            Label112: {
              var res_2969577263 = null;
              res_2969577263 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577263.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577258, res_2969577263);
            Label114: {
              var res_2969577265 = null;
              res_2969577265 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577265.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577258, res_2969577265);
          };
        };
      };
      var node_2969577302 = res_2969577258;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577302, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "/":
      Label116: {
        var tmpHEX60gensym288_2969577310 = null;
        Label117: {
          var res_2969577316 = null;
          res_2969577316 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577316.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label119: {
            Label120: {
              var res_2969577318 = null;
              res_2969577318 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577318.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577318.reff = nimCopy(res_2969577318.reff, IdDiv_2986344454, NTI2046820355);
            };
            add_3003121702(res_2969577316, res_2969577318);
            Label122: {
              var res_2969577321 = null;
              res_2969577321 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577321.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577316, res_2969577321);
            Label124: {
              var res_2969577323 = null;
              res_2969577323 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577323.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577316, res_2969577323);
          };
        };
      };
      var node_2969577360 = res_2969577316;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577360, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "%":
      Label126: {
        var tmpHEX60gensym301_2969577368 = null;
        Label127: {
          var res_2969577374 = null;
          res_2969577374 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577374.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label129: {
            Label130: {
              var res_2969577376 = null;
              res_2969577376 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577376.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577376.reff = nimCopy(res_2969577376.reff, IdMod_2986344455, NTI2046820355);
            };
            add_3003121702(res_2969577374, res_2969577376);
            Label132: {
              var res_2969577379 = null;
              res_2969577379 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577379.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577374, res_2969577379);
            Label134: {
              var res_2969577381 = null;
              res_2969577381 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577381.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577374, res_2969577381);
          };
        };
      };
      var node_2969577418 = res_2969577374;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577418, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "\"":
      Label136: {
        var tmpHEX60gensym314_2969577426 = null;
        Label137: {
          var res_2969577432 = null;
          res_2969577432 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577432.kind = 3;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969577432.text = nimCopy(null, [], NTI33554449);
        };
      };
      var node_2969577443 = res_2969577432;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577443, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "{":
      Label139: {
        var tmpHEX60gensym318_2969577451 = null;
        Label140: {
          var res_2969577457 = null;
          res_2969577457 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577457.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label142: {
            Label143: {
              var res_2969577459 = null;
              res_2969577459 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577459.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969577457, res_2969577459);
        };
      };
      var node_2969577478 = res_2969577457;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577478, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "=":
      Label145: {
        var tmpHEX60gensym325_2969577486 = null;
        Label146: {
          var res_2969577492 = null;
          res_2969577492 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577492.kind = 13;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label148: {
            Label149: {
              var res_2969577494 = null;
              res_2969577494 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577494.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577492, res_2969577494);
            Label151: {
              var res_2969577496 = null;
              res_2969577496 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577496.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577492, res_2969577496);
          };
        };
      };
      var node_2969577524 = res_2969577492;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577524, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "==":
      Label153: {
        var tmpHEX60gensym335_2969577532 = null;
        Label154: {
          var res_2969577538 = null;
          res_2969577538 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577538.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label156: {
            Label157: {
              var res_2969577540 = null;
              res_2969577540 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577540.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577540.reff = nimCopy(res_2969577540.reff, IdEqual_2986344467, NTI2046820355);
            };
            add_3003121702(res_2969577538, res_2969577540);
            Label159: {
              var res_2969577543 = null;
              res_2969577543 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577543.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577538, res_2969577543);
            Label161: {
              var res_2969577545 = null;
              res_2969577545 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577545.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577538, res_2969577545);
          };
        };
      };
      var node_2969577582 = res_2969577538;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577582, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "!=":
      Label163: {
        var tmpHEX60gensym348_2969577590 = null;
        Label164: {
          var res_2969577596 = null;
          res_2969577596 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577596.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label166: {
            Label167: {
              var res_2969577598 = null;
              res_2969577598 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577598.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577598.reff = nimCopy(res_2969577598.reff, IdNotEqual_2986344468, NTI2046820355);
            };
            add_3003121702(res_2969577596, res_2969577598);
            Label169: {
              var res_2969577601 = null;
              res_2969577601 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577601.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577596, res_2969577601);
            Label171: {
              var res_2969577603 = null;
              res_2969577603 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577603.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577596, res_2969577603);
          };
        };
      };
      var node_2969577640 = res_2969577596;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577640, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "<=":
      Label173: {
        var tmpHEX60gensym361_2969577648 = null;
        Label174: {
          var res_2969577654 = null;
          res_2969577654 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577654.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label176: {
            Label177: {
              var res_2969577656 = null;
              res_2969577656 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577656.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577656.reff = nimCopy(res_2969577656.reff, IdLessEqual_2986344464, NTI2046820355);
            };
            add_3003121702(res_2969577654, res_2969577656);
            Label179: {
              var res_2969577659 = null;
              res_2969577659 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577659.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577654, res_2969577659);
            Label181: {
              var res_2969577661 = null;
              res_2969577661 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577661.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577654, res_2969577661);
          };
        };
      };
      var node_2969577698 = res_2969577654;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577698, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case ">=":
      Label183: {
        var tmpHEX60gensym374_2969577706 = null;
        Label184: {
          var res_2969577712 = null;
          res_2969577712 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577712.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label186: {
            Label187: {
              var res_2969577714 = null;
              res_2969577714 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577714.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577714.reff = nimCopy(res_2969577714.reff, IdGreaterEqual_2986344466, NTI2046820355);
            };
            add_3003121702(res_2969577712, res_2969577714);
            Label189: {
              var res_2969577717 = null;
              res_2969577717 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577717.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577712, res_2969577717);
            Label191: {
              var res_2969577719 = null;
              res_2969577719 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577719.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577712, res_2969577719);
          };
        };
      };
      var node_2969577756 = res_2969577712;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577756, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "<":
      Label193: {
        var tmpHEX60gensym387_2969577764 = null;
        Label194: {
          var res_2969577770 = null;
          res_2969577770 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577770.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label196: {
            Label197: {
              var res_2969577772 = null;
              res_2969577772 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577772.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577772.reff = nimCopy(res_2969577772.reff, IdLess_2986344463, NTI2046820355);
            };
            add_3003121702(res_2969577770, res_2969577772);
            Label199: {
              var res_2969577775 = null;
              res_2969577775 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577775.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577770, res_2969577775);
            Label201: {
              var res_2969577777 = null;
              res_2969577777 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577777.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577770, res_2969577777);
          };
        };
      };
      var node_2969577814 = res_2969577770;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577814, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case ">":
      Label203: {
        var tmpHEX60gensym400_2969577822 = null;
        Label204: {
          var res_2969577828 = null;
          res_2969577828 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577828.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label206: {
            Label207: {
              var res_2969577830 = null;
              res_2969577830 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577830.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577830.reff = nimCopy(res_2969577830.reff, IdGreater_2986344465, NTI2046820355);
            };
            add_3003121702(res_2969577828, res_2969577830);
            Label209: {
              var res_2969577833 = null;
              res_2969577833 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577833.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577828, res_2969577833);
            Label211: {
              var res_2969577835 = null;
              res_2969577835 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577835.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577828, res_2969577835);
          };
        };
      };
      var node_2969577872 = res_2969577828;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577872, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "<>":
      Label213: {
        var tmpHEX60gensym413_2969577880 = null;
        Label214: {
          var res_2969577886 = null;
          res_2969577886 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577886.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label216: {
            Label217: {
              var res_2969577888 = null;
              res_2969577888 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577888.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577888.reff = nimCopy(res_2969577888.reff, IdOrder_2986344471, NTI2046820355);
            };
            add_3003121702(res_2969577886, res_2969577888);
            Label219: {
              var res_2969577891 = null;
              res_2969577891 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577891.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577886, res_2969577891);
            Label221: {
              var res_2969577893 = null;
              res_2969577893 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577893.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577886, res_2969577893);
          };
        };
      };
      var node_2969577930 = res_2969577886;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577930, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "and":
      Label223: {
        var tmpHEX60gensym426_2969577938 = null;
        Label224: {
          var res_2969577944 = null;
          res_2969577944 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577944.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label226: {
            Label227: {
              var res_2969577946 = null;
              res_2969577946 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577946.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577946.reff = nimCopy(res_2969577946.reff, IdAnd_2986344469, NTI2046820355);
            };
            add_3003121702(res_2969577944, res_2969577946);
            Label229: {
              var res_2969577949 = null;
              res_2969577949 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577949.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577944, res_2969577949);
            Label231: {
              var res_2969577951 = null;
              res_2969577951 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577951.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577944, res_2969577951);
          };
        };
      };
      var node_2969577988 = res_2969577944;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969577988, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case "or":
      Label233: {
        var tmpHEX60gensym439_2969577996 = null;
        Label234: {
          var res_2969578002 = null;
          res_2969578002 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578002.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label236: {
            Label237: {
              var res_2969578004 = null;
              res_2969578004 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578004.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969578004.reff = nimCopy(res_2969578004.reff, IdOr_2986344470, NTI2046820355);
            };
            add_3003121702(res_2969578002, res_2969578004);
            Label239: {
              var res_2969578007 = null;
              res_2969578007 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578007.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578002, res_2969578007);
            Label241: {
              var res_2969578009 = null;
              res_2969578009 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578009.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578002, res_2969578009);
          };
        };
      };
      var node_2969578046 = res_2969578002;
      result_2969576527 = nimCopy(result_2969576527, some_2969576557({Field0: node_2969578046, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    default: 
      result_2969576527 = nimCopy(result_2969576527, none_2969577058(), NTI2969572511);
      break BeforeRet;
      break;
    }
  };

  return result_2969576527;

}

function isSome_2969580157(self_2969580159) {
  var result_2969580160 = false;

    result_2969580160 = self_2969580159.has;

  return result_2969580160;

}

function isNone_2969580182(self_2969580184) {
  var result_2969580185 = false;

    result_2969580185 = !(self_2969580184.has);

  return result_2969580185;

}

function get_2969580174(self_2969580176) {
  var result_2969580177 = {Field0: null, Field1: 0};

    if (isNone_2969580182(self_2969580176)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969580177 = self_2969580176.val;

  return result_2969580177;

}

function insertNode_2969573921(document_2969573922, node_2969573923, index_2969573924, newNode_2969573925) {
  var result_2969576289 = ({val: null});

  BeforeRet: {
    var node_2969576290 = node_2969573923;
    var index_2969576291 = index_2969573924;
    if ((node_2969576290 == null)) {
    node_2969576290 = document_2969573922.rootNode;
    index_2969576291 = 0;
    }
    
    document_2969573922.undoOps.push({kind: 2, parent: node_2969576290, idx: index_2969576291, node: newNode_2969573925, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969573922.redoOps = nimCopy(null, [], NTI2969572212);
    insert_3003121718(node_2969576290, newNode_2969573925, index_2969576291);
    handleNodeInserted_2969571669(document_2969573922, newNode_2969573925);
    result_2969576289 = nimCopy(result_2969576289, some_3003121890(newNode_2969573925), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576289;

}

function shouldEditNode_2969578396(doc_2969578397, node_2969578398) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2969578399 = false;

  BeforeRet: {
    if (((node_2969578398.kind == 0) && eqStrings(node_2969578398.text, []))) {
    result_2969578399 = true;
    break BeforeRet;
    }
    
    if (((node_2969578398.kind == 2) && eqStrings(node_2969578398.text, []))) {
    result_2969578399 = true;
    break BeforeRet;
    }
    
    if ((node_2969578398.kind == 4)) {
    var oHEX60gensym522_2969578414 = computeSymbol_3019918905(ctx_2969567287, node_2969578398, true);
    if (!isSome_3087009352(oHEX60gensym522_2969578414)) Temporary2 = false; else {      var symbol_2969578437 = get_3087009372(oHEX60gensym522_2969578414);
      Temporary2 = true;    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = eqStrings(symbol_2969578437.name, []);    }    result_2969578399 = Temporary1;
    break BeforeRet;
    }
    
    if ((node_2969578398.kind == 5)) {
    var oHEX60gensym523_2969578444 = computeSymbol_3019918905(ctx_2969567287, node_2969578398, true);
    if (!isSome_3087009352(oHEX60gensym523_2969578444)) Temporary4 = false; else {      var symbol_2969578467 = get_3087009372(oHEX60gensym523_2969578444);
      Temporary4 = true;    }    if (!Temporary4) Temporary3 = false; else {      Temporary3 = eqStrings(symbol_2969578467.name, []);    }    result_2969578399 = Temporary3;
    break BeforeRet;
    }
    
    if ((node_2969578398.kind == 6)) {
    var oHEX60gensym524_2969578474 = computeSymbol_3019918905(ctx_2969567287, node_2969578398, true);
    if (!isSome_3087009352(oHEX60gensym524_2969578474)) Temporary6 = false; else {      var symbol_2969578497 = get_3087009372(oHEX60gensym524_2969578474);
      Temporary6 = true;    }    if (!Temporary6) Temporary5 = false; else {      Temporary5 = eqStrings(symbol_2969578497.name, []);    }    result_2969578399 = Temporary5;
    break BeforeRet;
    }
    
    result_2969578399 = false;
    break BeforeRet;
  };

  return result_2969578399;

}

function formatValue_2969575219(result_2969575221, result_2969575221_Idx, value_2969575222, specifier_2969575223) {
    formatValue_721420459(result_2969575221, result_2969575221_Idx, reprEnum(value_2969575222, NTI3087007753), specifier_2969575223);

  
}

function nsuSplitLines(s_855638695, keepEol_855638696) {
            var Temporary6;

  var result_855638697 = [];

    result_855638697 = nimCopy(null, [], NTI855638541);
    Label1: {
      var xHEX60gensym75_855638703 = [];
      var first_2969580483 = 0;
      var last_2969580484 = 0;
      var eolpos_2969580485 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2969580484 < (s_855638695).length) && !((ConstSet180[s_855638695[chckIndx(last_2969580484, 0, (s_855638695).length - 1)]] != undefined)))) break Label5;
                  last_2969580484 = addInt(last_2969580484, 1);
                }
            };
            eolpos_2969580485 = last_2969580484;
            if ((last_2969580484 < (s_855638695).length)) {
            if ((s_855638695[chckIndx(last_2969580484, 0, (s_855638695).length - 1)] == 10)) {
            last_2969580484 = addInt(last_2969580484, 1);
            }
            else {
            if ((s_855638695[chckIndx(last_2969580484, 0, (s_855638695).length - 1)] == 13)) {
            last_2969580484 = addInt(last_2969580484, 1);
            if (((last_2969580484 < (s_855638695).length) && (s_855638695[chckIndx(last_2969580484, 0, (s_855638695).length - 1)] == 10))) {
            last_2969580484 = addInt(last_2969580484, 1);
            }
            
            }
            }
            }
            
            if (keepEol_855638696) {
            Temporary6 = subInt(last_2969580484, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2969580485, 1);
            }
            
            xHEX60gensym75_855638703 = substr_33557821(s_855638695, first_2969580483, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym75_855638703, NTI33554449);
            result_855638697.push(Temporary7);;
            if ((eolpos_2969580485 == last_2969580484)) {
            break Label2;
            }
            
            first_2969580483 = last_2969580484;
          }
      };
    };

  return result_855638697;

}

function contentHEX3D_2818573946(self_2818573947, value_2818573948) {
    if (self_2818573947.singleLine) {
    self_2818573947.lines = nimCopy(null, [nsuReplaceStr(value_2818573948, [10], [])], NTI1560281203);
    if (((self_2818573947.lines).length == 0)) {
    self_2818573947.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    if (!((self_2818573947.tsParser == null))) {
    self_2818573947.currentTree = parseString_2885681211(self_2818573947.tsParser, self_2818573947.lines[chckIndx(0, 0, (self_2818573947.lines).length - 1)], none_2885681218());
    }
    
    }
    else {
      self_2818573947.lines = nimCopy(null, nsuSplitLines(value_2818573948, false), NTI855638530);
      if (((self_2818573947.lines).length == 0)) {
      self_2818573947.lines = nimCopy(null, [[]], NTI1560281203);
      }
      
      if (!((self_2818573947.tsParser == null))) {
      self_2818573947.currentTree = parseString_2885681211(self_2818573947.tsParser, value_2818573948, none_2885681218());
      }
      
    }
    
    self_2818573947.version = addInt(self_2818573947.version, 1);
    notifyTextChanged_2818573266(self_2818573947);

  
}

function newTextDocument_2818579086(filename_2818579088, content_2818579089, app_2818579090) {
  var result_2818579091 = null;

    result_2818579091 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_2818579095 = result_2818579091;
    self_2818579095.filename = nimCopy(null, filename_2818579088, NTI33554449);
    self_2818579095.currentTree = null;
    self_2818579095.appFile = app_2818579090;
    var _ = initTreesitter_2818578868(self_2818579095);
    var language_2818579096 = getLanguageForFile_2902458372(filename_2818579088);
    if (isSome_2348810304(language_2818579096)) {
    self_2818579095.languageId = nimCopy(null, get_2818578905(language_2818579096), NTI33554449);
    }
    
    contentHEX3D_2818573946(self_2818579095, content_2818579089);

  return result_2818579091;

}

function newSeq_503316959(len_503316961) {
  var result_503316962 = [];

    result_503316962 = new Array(len_503316961); for (var i = 0 ; i < len_503316961 ; ++i) { result_503316962[i] = []; }
  return result_503316962;

}

function contentHEX3D_2818573987(self_2818573988, value_2818573989) {
    if (self_2818573988.singleLine) {
    self_2818573988.lines = nimCopy(null, [nsuJoinSep(value_2818573989, [])], NTI1560281203);
    }
    else {
      Label1: {
        var iHEX60gensym22_2818574051 = 0;
        var resultHEX60gensym22_2818574058 = newSeq_503316959(chckRange((value_2818573989).length, 0, 2147483647));
        Label2: {
          var itHEX60gensym22_2818574062 = [];
          var i_2969580490 = 0;
          var L_2969580491 = (value_2818573989).length;
          Label3: {
              Label4: while (true) {
              if (!(i_2969580490 < L_2969580491)) break Label4;
                itHEX60gensym22_2818574062 = value_2818573989[chckIndx(i_2969580490, 0, (value_2818573989).length - 1)];
                resultHEX60gensym22_2818574058[chckIndx(iHEX60gensym22_2818574051, 0, (resultHEX60gensym22_2818574058).length - 1)] = nimCopy(null, itHEX60gensym22_2818574062, NTI33554449);
                iHEX60gensym22_2818574051 = addInt(iHEX60gensym22_2818574051, 1);
                i_2969580490 = addInt(i_2969580490, 1);
                if (!(((value_2818573989).length == L_2969580491))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      self_2818573988.lines = nimCopy(null, resultHEX60gensym22_2818574058, NTI503316776);
    }
    
    if (((self_2818573988.lines).length == 0)) {
    self_2818573988.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var strValue_2818574074 = nsuJoinSep(value_2818573989, [10]);
    if (!((self_2818573988.tsParser == null))) {
    self_2818573988.currentTree = parseString_2885681211(self_2818573988.tsParser, strValue_2818574074, none_2885681218());
    }
    
    self_2818573988.version = addInt(self_2818573988.version, 1);
    notifyTextChanged_2818573266(self_2818573988);

  
}

function createTextEditorInstance_2818593991() {
  var result_2818593992 = null;

  BeforeRet: {
    var editor_2818593997 = {eventHandler: null, selectionsInternal: [nimCopy(null, toSelection_2449474029({Field0: 0, Field1: 0}), NTI2449473547)], m_type: NTI2818572510, editor: null, document: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, completionsBaseIndex: 0, completionsScrollOffset: 0.0, lastItems: [], lastCompletionsWidget: null, lastCompletionWidgets: [], showCompletions: false, scrollToCompletion: ({val: 0, has: false}), id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2818593997 = createWithPrototype(editor_text_prototype, editor_2818593997);
    result_2818593992 = editor_2818593997;
    break BeforeRet;
  };

  return result_2818593992;

}

function newEditorId_2449473851() {
  var result_2449473852 = 0;

    result_2449473852 = nextEditorId_2449473850[0];
    nextEditorId_2449473850[0] = addInt(nextEditorId_2449473850[0], 1);

  return result_2449473852;

}

function init_2415919138(self_2415919139) {
    self_2415919139.id = newEditorId_2449473851();
    self_2415919139.renderHeader = true;
    self_2415919139.fillAvailableSpace = true;

  
}

function subscribe_2818594055(event_2818594057, callback_2818594059) {
  var result_2818594060 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_2818594060 = nimCopy(result_2818594060, newId_2046820597(), NTI2046820355);
    event_2818594057.handlers.push({Field0: nimCopy(null, result_2818594060, NTI2046820355), Field1: callback_2818594059});;

  return result_2818594060;

}

function clampSelection_2818573264(self_2818573265) {
    selectionsHEX3D_2818573081(self_2818573265, clampAndMergeSelections_2818572796(self_2818573265, self_2818573265.selectionsInternal));
    markDirty_2415919143(self_2818573265);

  
}

function handleTextDocumentTextChanged_2818593989(self_2818593990) {
    clampSelection_2818573264(self_2818593990);
    updateSearchResults_2818580292(self_2818593990);
    markDirty_2415919143(self_2818593990);

  
}

function newTextEditor_2818594007(document_2818594008, ed_2818594009) {
    
function HEX3Aanonymous_2818594030(__2818594031) {
        handleTextDocumentTextChanged_2818593989(editor_2818594011);

      
    }

  var result_2818594010 = null;

  BeforeRet: {
    var editor_2818594011 = createTextEditorInstance_2818593991();
    editor_2818594011.document = document_2818594008;
    init_2415919138(editor_2818594011);
    if (((editor_2818594011.document.lines).length == 0)) {
    editor_2818594011.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    injectDependencies_1291847761(editor_2818594011, ed_2818594009);
    var _ = subscribe_2818594055(document_2818594008.textChanged, HEX3Aanonymous_2818594030);
    result_2818594010 = editor_2818594011;
    break BeforeRet;
  };

  return result_2818594010;

}

function some_3170894358(val_3170894360) {
  var result_3170894361 = ({val: 0, has: false});

    result_3170894361.has = true;
    result_3170894361.val = val_3170894360;

  return result_3170894361;

}

function handleTextDocumentChanged_2969575202(self_2969575203) {
    updateCompletions_2969569705(self_2969575203);
    markDirty_2415919143(self_2969575203);

  
}

function editSymbol_2969575211(self_2969575212, symbol_2969575213) {
    var Temporary1;
    
function HEX3Aanonymous_2969575269(doc_2969575270) {
        handleTextDocumentChanged_2969575202(self_2969575212);

      
    }

    var fmtRes_2969575218 = [mnewString(0)];
    fmtRes_2969575218[0].push.apply(fmtRes_2969575218[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2969575218, 0, symbol_2969575213.name, []);
    fmtRes_2969575218[0].push.apply(fmtRes_2969575218[0], [32,40]);;
    formatValue_2969575219(fmtRes_2969575218, 0, symbol_2969575213.kind, []);
    fmtRes_2969575218[0].push.apply(fmtRes_2969575218[0], [44,32]);;
    formatValue_3036676340(fmtRes_2969575218, 0, symbol_2969575213.id, []);
    fmtRes_2969575218[0].push.apply(fmtRes_2969575218[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575218[0], NTI33554449)]);
    if ((symbol_2969575213.kind == 0)) {
    var fmtRes_2969575240 = [mnewString(0)];
    fmtRes_2969575240[0].push.apply(fmtRes_2969575240[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32,110,111,100,101,32]);;
    var Temporary1 = symbol_2969575213;
    if (ConstSet179[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    formatValue_3087008586(fmtRes_2969575240, 0, Temporary1.node, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575240[0], NTI33554449)]);
    }
    
    self_2969575212.currentlyEditedNode = null;
    self_2969575212.currentlyEditedSymbol = nimCopy(self_2969575212.currentlyEditedSymbol, symbol_2969575213.id, NTI2046820355);
    self_2969575212.textDocument = newTextDocument_2818579086([], [], false);
    contentHEX3D_2818573987(self_2969575212.textDocument, [nimCopy(null, symbol_2969575213.name, NTI33554449)]);
    self_2969575212.textEditor = newTextEditor_2818594007(self_2969575212.textDocument, self_2969575212.editor);
    setMode_2818584221(self_2969575212.textEditor, [105,110,115,101,114,116]);
    self_2969575212.textEditor.renderHeader = false;
    self_2969575212.textEditor.fillAvailableSpace = false;
    self_2969575212.textEditor.lineNumbers = nimCopy(self_2969575212.textEditor.lineNumbers, some_3170894358(0), NTI2818572554);
    var _ = subscribe_2818594055(self_2969575212.textDocument.textChanged, HEX3Aanonymous_2969575269);
    updateCompletions_2969569705(self_2969575212);
    markDirty_2415919143(self_2969575212);

  
}

function editNode_2969575299(self_2969575300, node_2969575301) {
    
function HEX3Aanonymous_2969575331(doc_2969575332) {
        handleTextDocumentChanged_2969575202(self_2969575300);

      
    }

    var fmtRes_2969575306 = [mnewString(0)];
    fmtRes_2969575306[0].push.apply(fmtRes_2969575306[0], [69,100,105,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008586(fmtRes_2969575306, 0, node_2969575301, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575306[0], NTI33554449)]);
    self_2969575300.currentlyEditedNode = node_2969575301;
    self_2969575300.currentlyEditedSymbol = nimCopy(self_2969575300.currentlyEditedSymbol, null_2046820646, NTI2046820355);
    self_2969575300.textDocument = newTextDocument_2818579086([], [], false);
    contentHEX3D_2818573987(self_2969575300.textDocument, nsuSplitLines(node_2969575301.text, false));
    self_2969575300.textEditor = newTextEditor_2818594007(self_2969575300.textDocument, self_2969575300.editor);
    setMode_2818584221(self_2969575300.textEditor, [105,110,115,101,114,116]);
    self_2969575300.textEditor.renderHeader = false;
    self_2969575300.textEditor.fillAvailableSpace = false;
    self_2969575300.textEditor.lineNumbers = nimCopy(self_2969575300.textEditor.lineNumbers, some_3170894358(0), NTI2818572554);
    var _ = subscribe_2818594055(self_2969575300.textDocument.textChanged, HEX3Aanonymous_2969575331);
    updateCompletions_2969569705(self_2969575300);
    markDirty_2415919143(self_2969575300);

  
}

function tryEdit_2969575361(self_2969575362, node_2969575363) {
      var Temporary1;
      var Temporary2;

  var result_2969575364 = false;

  BeforeRet: {
      var oHEX60gensym119_2969575367 = getSymbol_3019906505(ctx_2969567287, node_2969575363.id);
      if (!isSome_3087009352(oHEX60gensym119_2969575367)) Temporary1 = false; else {        var sym_2969575390 = get_3087009372(oHEX60gensym119_2969575367);
        Temporary1 = true;      }    if (Temporary1) {
    editSymbol_2969575211(self_2969575362, sym_2969575390);
    result_2969575364 = true;
    break BeforeRet;
    }
    else {
      var oHEX60gensym120_2969575393 = getSymbol_3019906505(ctx_2969567287, node_2969575363.reff);
      if (!isSome_3087009352(oHEX60gensym120_2969575393)) Temporary2 = false; else {        var sym_2969575416 = get_3087009372(oHEX60gensym120_2969575393);
        Temporary2 = true;      }    if (Temporary2) {
    editSymbol_2969575211(self_2969575362, sym_2969575416);
    result_2969575364 = true;
    break BeforeRet;
    }
    else {
      switch (node_2969575363.kind) {
      case 0:
      case 2:
      case 3:
        editNode_2969575299(self_2969575362, node_2969575363);
        result_2969575364 = true;
        break BeforeRet;
        break;
      default: 
        result_2969575364 = false;
        break BeforeRet;
        break;
      }
    }
    }
  };

  return result_2969575364;

}

function insertAfterSmart_2969580144(self_2969580145, nodeTemplate_2969580146) {
      var Temporary2;
      var Temporary5;
      var Temporary6;
      
function HEX3Aanonymous_2969580226(n_2969580229) {
        var result_2969580232 = false;

          result_2969580232 = shouldEditNode_2969578396(self_2969580145.document, n_2969580229);

        return result_2969580232;

      }
                var Temporary12;
                var Temporary13;

  BeforeRet: {
    if (isEditing_2969575204(self_2969580145)) {
    break BeforeRet;
    }
    
    var node_2969580147 = node_2969569717(self_2969580145);
    Label1: {
      var next_2969580148 = null;
      if (true) {
      Temporary2 = node_2969580147;
      }
      else {
      Temporary2 = node_2969580147.parent;
      }
      
      var node_2969580315 = Temporary2;
      Label3: {
          Label4: while (true) {
          if (!!((node_2969580315 == null))) break Label4;
            next_2969580148 = node_2969580315;
            if (canInsertInto_2969578735(self_2969580145, next_2969580148.parent)) {
            node_2969580147 = next_2969580148;
            break Label1;
            }
            
            node_2969580315 = node_2969580315.parent;
          }
      };
    };
    var index_2969580149 = index_3003121772(node_2969580147);
      var oHEX60gensym672_2969580152 = createNodeFromAction_2969576517(self_2969580145, nodeTemplate_2969580146, node_2969580147, errorType_3087008127());
      if (!isSome_2969580157(oHEX60gensym672_2969580152)) Temporary5 = false; else {        var newNodeIndex_2969580197 = nimCopy(null, get_2969580174(oHEX60gensym672_2969580152), NTI2969572506);
        Temporary5 = true;      }    if (Temporary5) {
    var newNode_2969580198 = newNodeIndex_2969580197["Field0"];
    var __2969580199 = newNodeIndex_2969580197["Field1"];
      var oHEX60gensym674_2969580202 = insertNode_2969573921(self_2969580145.document, node_2969580147.parent, addInt(index_2969580149, 1), newNode_2969580198);
      if (!isSome_3003123546(oHEX60gensym674_2969580202)) Temporary6 = false; else {        var node_2969580225 = get_3003123566(oHEX60gensym674_2969580202);
        Temporary6 = true;      }    if (Temporary6) {
    nodeHEX3D_2969570879(self_2969580145, node_2969580225);
    Label7: {
      var __2969580233 = 0;
      var emptyNode_2969580234 = null;
      var colontmp__2969580318 = null;
      colontmp__2969580318 = HEX3Aanonymous_2969580226;
      var i_2969580326 = 0;
      Label8: {
        var __2969580328 = 0;
        var child_2969580329 = null;
        var n_2969580330 = newNode_2969580198;
        var idx_2969580331 = -1;
        var i_2969580332 = 0;
        Label9: {
            Label10: while (true) {
            if (!true) break Label10;
              try {
              if ((idx_2969580331 == -1)) {
              __2969580328 = i_2969580332;
              child_2969580329 = n_2969580330;
              if (colontmp__2969580318(child_2969580329)) {
              __2969580233 = i_2969580326;
              emptyNode_2969580234 = child_2969580329;
              nodeHEX3D_2969570879(self_2969580145, emptyNode_2969580234);
              var _ = tryEdit_2969575361(self_2969580145, node_2969569717(self_2969580145));
              break Label7;
              i_2969580326 = addInt(i_2969580326, 1);
              }
              
              }
              
              if ((addInt(idx_2969580331, 1) < len_3003121752(n_2969580330))) {
              n_2969580330 = HEX5BHEX5D_3003121748(n_2969580330, addInt(idx_2969580331, 1));
              idx_2969580331 = -1;
              }
              else {
                var oHEX60gensym55_2969580334 = next_3003121857(n_2969580330);
                if (!isSome_3003123546(oHEX60gensym55_2969580334)) Temporary13 = false; else {                  var ne_2969580335 = get_3003123566(oHEX60gensym55_2969580334);
                  Temporary13 = true;                }                if (!Temporary13) Temporary12 = false; else {                  Temporary12 = !((n_2969580330 == newNode_2969580198));                }              if (Temporary12) {
              n_2969580330 = ne_2969580335;
              idx_2969580331 = -1;
              }
              else {
              if (((!((n_2969580330.parent == null)) && !((n_2969580330 == newNode_2969580198))) && !((n_2969580330.parent == newNode_2969580198)))) {
              idx_2969580331 = index_3003121772(n_2969580330);
              n_2969580330 = n_2969580330.parent;
              }
              else {
                break Label9;
              }
              }}
              } finally {
              i_2969580332 = addInt(i_2969580332, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580239 = [mnewString(0)];
      fmtRes_2969580239[0].push.apply(fmtRes_2969580239[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008586(fmtRes_2969580239, 0, newNode_2969580198, []);
      fmtRes_2969580239[0].push.apply(fmtRes_2969580239[0], [32,105,110,116,111,32]);;
      formatValue_3087008586(fmtRes_2969580239, 0, node_2969569717(self_2969580145).parent, []);
      fmtRes_2969580239[0].push.apply(fmtRes_2969580239[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580239, 0, addInt(index_2969580149, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580239[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterSmartJsWrapper_2969580140(self_2969580292, nodeTemplate_2969580293) {
    insertAfterSmart_2969580144(self_2969580292, nodeTemplate_2969580293);

  
}
editor_ast_prototype.insertAfterSmart = function(nodeTemplate_ /* : string */) { return (insertAfterSmartJsWrapper_2969580140(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertAfter_2969580499(self_2969580500, nodeTemplate_2969580501) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580558(n_2969580561) {
        var result_2969580564 = false;

          result_2969580564 = shouldEditNode_2969578396(self_2969580500.document, n_2969580561);

        return result_2969580564;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575204(self_2969580500)) {
    break BeforeRet;
    }
    
    var node_2969580502 = node_2969569717(self_2969580500);
    var index_2969580503 = index_3003121772(node_2969580502);
      var oHEX60gensym685_2969580506 = createNodeFromAction_2969576517(self_2969580500, nodeTemplate_2969580501, node_2969580502, errorType_3087008127());
      if (!isSome_2969580157(oHEX60gensym685_2969580506)) Temporary1 = false; else {        var newNodeIndex_2969580529 = nimCopy(null, get_2969580174(oHEX60gensym685_2969580506), NTI2969572506);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580530 = newNodeIndex_2969580529["Field0"];
    var __2969580531 = newNodeIndex_2969580529["Field1"];
      var oHEX60gensym686_2969580534 = insertNode_2969573921(self_2969580500.document, node_2969580502.parent, addInt(index_2969580503, 1), newNode_2969580530);
      if (!isSome_3003123546(oHEX60gensym686_2969580534)) Temporary2 = false; else {        var node_2969580557 = get_3003123566(oHEX60gensym686_2969580534);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570879(self_2969580500, node_2969580557);
    Label3: {
      var __2969580565 = 0;
      var emptyNode_2969580566 = null;
      var colontmp__2969580637 = null;
      colontmp__2969580637 = HEX3Aanonymous_2969580558;
      var i_2969580638 = 0;
      Label4: {
        var __2969580640 = 0;
        var child_2969580641 = null;
        var n_2969580642 = newNode_2969580530;
        var idx_2969580643 = -1;
        var i_2969580644 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580643 == -1)) {
              __2969580640 = i_2969580644;
              child_2969580641 = n_2969580642;
              if (colontmp__2969580637(child_2969580641)) {
              __2969580565 = i_2969580638;
              emptyNode_2969580566 = child_2969580641;
              nodeHEX3D_2969570879(self_2969580500, emptyNode_2969580566);
              var _ = tryEdit_2969575361(self_2969580500, node_2969569717(self_2969580500));
              break Label3;
              i_2969580638 = addInt(i_2969580638, 1);
              }
              
              }
              
              if ((addInt(idx_2969580643, 1) < len_3003121752(n_2969580642))) {
              n_2969580642 = HEX5BHEX5D_3003121748(n_2969580642, addInt(idx_2969580643, 1));
              idx_2969580643 = -1;
              }
              else {
                var oHEX60gensym55_2969580646 = next_3003121857(n_2969580642);
                if (!isSome_3003123546(oHEX60gensym55_2969580646)) Temporary9 = false; else {                  var ne_2969580647 = get_3003123566(oHEX60gensym55_2969580646);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580642 == newNode_2969580530));                }              if (Temporary8) {
              n_2969580642 = ne_2969580647;
              idx_2969580643 = -1;
              }
              else {
              if (((!((n_2969580642.parent == null)) && !((n_2969580642 == newNode_2969580530))) && !((n_2969580642.parent == newNode_2969580530)))) {
              idx_2969580643 = index_3003121772(n_2969580642);
              n_2969580642 = n_2969580642.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580644 = addInt(i_2969580644, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580571 = [mnewString(0)];
      fmtRes_2969580571[0].push.apply(fmtRes_2969580571[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008586(fmtRes_2969580571, 0, newNode_2969580530, []);
      fmtRes_2969580571[0].push.apply(fmtRes_2969580571[0], [32,105,110,116,111,32]);;
      formatValue_3087008586(fmtRes_2969580571, 0, node_2969569717(self_2969580500).parent, []);
      fmtRes_2969580571[0].push.apply(fmtRes_2969580571[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580571, 0, addInt(index_2969580503, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580571[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterJsWrapper_2969580495(self_2969580615, nodeTemplate_2969580616) {
    insertAfter_2969580499(self_2969580615, nodeTemplate_2969580616);

  
}
editor_ast_prototype.insertAfter = function(nodeTemplate_ /* : string */) { return (insertAfterJsWrapper_2969580495(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertBefore_2969580654(self_2969580655, nodeTemplate_2969580656) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580712(n_2969580715) {
        var result_2969580718 = false;

          result_2969580718 = shouldEditNode_2969578396(self_2969580655.document, n_2969580715);

        return result_2969580718;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575204(self_2969580655)) {
    break BeforeRet;
    }
    
    var index_2969580657 = index_3003121772(node_2969569717(self_2969580655));
      var oHEX60gensym697_2969580660 = createNodeFromAction_2969576517(self_2969580655, nodeTemplate_2969580656, node_2969569717(self_2969580655), errorType_3087008127());
      if (!isSome_2969580157(oHEX60gensym697_2969580660)) Temporary1 = false; else {        var newNodeIndex_2969580683 = nimCopy(null, get_2969580174(oHEX60gensym697_2969580660), NTI2969572506);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580684 = newNodeIndex_2969580683["Field0"];
    var __2969580685 = newNodeIndex_2969580683["Field1"];
      var oHEX60gensym698_2969580688 = insertNode_2969573921(self_2969580655.document, node_2969569717(self_2969580655).parent, index_2969580657, newNode_2969580684);
      if (!isSome_3003123546(oHEX60gensym698_2969580688)) Temporary2 = false; else {        var node_2969580711 = get_3003123566(oHEX60gensym698_2969580688);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570879(self_2969580655, node_2969580711);
    Label3: {
      var __2969580719 = 0;
      var emptyNode_2969580720 = null;
      var colontmp__2969580791 = null;
      colontmp__2969580791 = HEX3Aanonymous_2969580712;
      var i_2969580792 = 0;
      Label4: {
        var __2969580794 = 0;
        var child_2969580795 = null;
        var n_2969580796 = newNode_2969580684;
        var idx_2969580797 = -1;
        var i_2969580798 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580797 == -1)) {
              __2969580794 = i_2969580798;
              child_2969580795 = n_2969580796;
              if (colontmp__2969580791(child_2969580795)) {
              __2969580719 = i_2969580792;
              emptyNode_2969580720 = child_2969580795;
              nodeHEX3D_2969570879(self_2969580655, emptyNode_2969580720);
              var _ = tryEdit_2969575361(self_2969580655, node_2969569717(self_2969580655));
              break Label3;
              i_2969580792 = addInt(i_2969580792, 1);
              }
              
              }
              
              if ((addInt(idx_2969580797, 1) < len_3003121752(n_2969580796))) {
              n_2969580796 = HEX5BHEX5D_3003121748(n_2969580796, addInt(idx_2969580797, 1));
              idx_2969580797 = -1;
              }
              else {
                var oHEX60gensym55_2969580800 = next_3003121857(n_2969580796);
                if (!isSome_3003123546(oHEX60gensym55_2969580800)) Temporary9 = false; else {                  var ne_2969580801 = get_3003123566(oHEX60gensym55_2969580800);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580796 == newNode_2969580684));                }              if (Temporary8) {
              n_2969580796 = ne_2969580801;
              idx_2969580797 = -1;
              }
              else {
              if (((!((n_2969580796.parent == null)) && !((n_2969580796 == newNode_2969580684))) && !((n_2969580796.parent == newNode_2969580684)))) {
              idx_2969580797 = index_3003121772(n_2969580796);
              n_2969580796 = n_2969580796.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580798 = addInt(i_2969580798, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580725 = [mnewString(0)];
      fmtRes_2969580725[0].push.apply(fmtRes_2969580725[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008586(fmtRes_2969580725, 0, newNode_2969580684, []);
      fmtRes_2969580725[0].push.apply(fmtRes_2969580725[0], [32,105,110,116,111,32]);;
      formatValue_3087008586(fmtRes_2969580725, 0, node_2969569717(self_2969580655).parent, []);
      fmtRes_2969580725[0].push.apply(fmtRes_2969580725[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580725, 0, index_2969580657, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580725[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertBeforeJsWrapper_2969580650(self_2969580769, nodeTemplate_2969580770) {
    insertBefore_2969580654(self_2969580769, nodeTemplate_2969580770);

  
}
editor_ast_prototype.insertBefore = function(nodeTemplate_ /* : string */) { return (insertBeforeJsWrapper_2969580650(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertChild_2969580808(self_2969580809, nodeTemplate_2969580810) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580865(n_2969580868) {
        var result_2969580871 = false;

          result_2969580871 = shouldEditNode_2969578396(self_2969580809.document, n_2969580868);

        return result_2969580871;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575204(self_2969580809)) {
    break BeforeRet;
    }
    
      var oHEX60gensym709_2969580813 = createNodeFromAction_2969576517(self_2969580809, nodeTemplate_2969580810, node_2969569717(self_2969580809), errorType_3087008127());
      if (!isSome_2969580157(oHEX60gensym709_2969580813)) Temporary1 = false; else {        var newNodeIndex_2969580836 = nimCopy(null, get_2969580174(oHEX60gensym709_2969580813), NTI2969572506);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580837 = newNodeIndex_2969580836["Field0"];
    var __2969580838 = newNodeIndex_2969580836["Field1"];
      var oHEX60gensym710_2969580841 = insertNode_2969573921(self_2969580809.document, node_2969569717(self_2969580809), len_3003121752(node_2969569717(self_2969580809)), newNode_2969580837);
      if (!isSome_3003123546(oHEX60gensym710_2969580841)) Temporary2 = false; else {        var node_2969580864 = get_3003123566(oHEX60gensym710_2969580841);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570879(self_2969580809, node_2969580864);
    Label3: {
      var __2969580872 = 0;
      var emptyNode_2969580873 = null;
      var colontmp__2969580944 = null;
      colontmp__2969580944 = HEX3Aanonymous_2969580865;
      var i_2969580945 = 0;
      Label4: {
        var __2969580947 = 0;
        var child_2969580948 = null;
        var n_2969580949 = newNode_2969580837;
        var idx_2969580950 = -1;
        var i_2969580951 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580950 == -1)) {
              __2969580947 = i_2969580951;
              child_2969580948 = n_2969580949;
              if (colontmp__2969580944(child_2969580948)) {
              __2969580872 = i_2969580945;
              emptyNode_2969580873 = child_2969580948;
              nodeHEX3D_2969570879(self_2969580809, emptyNode_2969580873);
              var _ = tryEdit_2969575361(self_2969580809, node_2969569717(self_2969580809));
              break Label3;
              i_2969580945 = addInt(i_2969580945, 1);
              }
              
              }
              
              if ((addInt(idx_2969580950, 1) < len_3003121752(n_2969580949))) {
              n_2969580949 = HEX5BHEX5D_3003121748(n_2969580949, addInt(idx_2969580950, 1));
              idx_2969580950 = -1;
              }
              else {
                var oHEX60gensym55_2969580953 = next_3003121857(n_2969580949);
                if (!isSome_3003123546(oHEX60gensym55_2969580953)) Temporary9 = false; else {                  var ne_2969580954 = get_3003123566(oHEX60gensym55_2969580953);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580949 == newNode_2969580837));                }              if (Temporary8) {
              n_2969580949 = ne_2969580954;
              idx_2969580950 = -1;
              }
              else {
              if (((!((n_2969580949.parent == null)) && !((n_2969580949 == newNode_2969580837))) && !((n_2969580949.parent == newNode_2969580837)))) {
              idx_2969580950 = index_3003121772(n_2969580949);
              n_2969580949 = n_2969580949.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580951 = addInt(i_2969580951, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580878 = [mnewString(0)];
      fmtRes_2969580878[0].push.apply(fmtRes_2969580878[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008586(fmtRes_2969580878, 0, newNode_2969580837, []);
      fmtRes_2969580878[0].push.apply(fmtRes_2969580878[0], [32,105,110,116,111,32]);;
      formatValue_3087008586(fmtRes_2969580878, 0, node_2969569717(self_2969580809), []);
      fmtRes_2969580878[0].push.apply(fmtRes_2969580878[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580878, 0, len_3003121752(node_2969569717(self_2969580809)), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580878[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertChildJsWrapper_2969580804(self_2969580922, nodeTemplate_2969580923) {
    insertChild_2969580808(self_2969580922, nodeTemplate_2969580923);

  
}
editor_ast_prototype.insertChild = function(nodeTemplate_ /* : string */) { return (insertChildJsWrapper_2969580804(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replace_2969580961(self_2969580962, nodeTemplate_2969580963) {
      var Temporary1;
      
function HEX3Aanonymous_2969580992(n_2969580995) {
        var result_2969580998 = false;

          result_2969580998 = shouldEditNode_2969578396(self_2969580962.document, n_2969580995);

        return result_2969580998;

      }
                var Temporary7;
                var Temporary8;

  BeforeRet: {
    if (isEditing_2969575204(self_2969580962)) {
    break BeforeRet;
    }
    
      var oHEX60gensym721_2969580966 = createNodeFromAction_2969576517(self_2969580962, nodeTemplate_2969580963, node_2969569717(self_2969580962), errorType_3087008127());
      if (!isSome_2969580157(oHEX60gensym721_2969580966)) Temporary1 = false; else {        var newNodeIndex_2969580989 = nimCopy(null, get_2969580174(oHEX60gensym721_2969580966), NTI2969572506);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580990 = newNodeIndex_2969580989["Field0"];
    var __2969580991 = newNodeIndex_2969580989["Field1"];
    nodeHEX3D_2969570879(self_2969580962, replaceNode_2969576198(self_2969580962.document, node_2969569717(self_2969580962), newNode_2969580990));
    Label2: {
      var __2969580999 = 0;
      var emptyNode_2969581000 = null;
      var colontmp__2969581051 = null;
      colontmp__2969581051 = HEX3Aanonymous_2969580992;
      var i_2969581052 = 0;
      Label3: {
        var __2969581054 = 0;
        var child_2969581055 = null;
        var n_2969581056 = newNode_2969580990;
        var idx_2969581057 = -1;
        var i_2969581058 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2969581057 == -1)) {
              __2969581054 = i_2969581058;
              child_2969581055 = n_2969581056;
              if (colontmp__2969581051(child_2969581055)) {
              __2969580999 = i_2969581052;
              emptyNode_2969581000 = child_2969581055;
              nodeHEX3D_2969570879(self_2969580962, emptyNode_2969581000);
              var _ = tryEdit_2969575361(self_2969580962, node_2969569717(self_2969580962));
              break Label2;
              i_2969581052 = addInt(i_2969581052, 1);
              }
              
              }
              
              if ((addInt(idx_2969581057, 1) < len_3003121752(n_2969581056))) {
              n_2969581056 = HEX5BHEX5D_3003121748(n_2969581056, addInt(idx_2969581057, 1));
              idx_2969581057 = -1;
              }
              else {
                var oHEX60gensym55_2969581060 = next_3003121857(n_2969581056);
                if (!isSome_3003123546(oHEX60gensym55_2969581060)) Temporary8 = false; else {                  var ne_2969581061 = get_3003123566(oHEX60gensym55_2969581060);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2969581056 == newNode_2969580990));                }              if (Temporary7) {
              n_2969581056 = ne_2969581061;
              idx_2969581057 = -1;
              }
              else {
              if (((!((n_2969581056.parent == null)) && !((n_2969581056 == newNode_2969580990))) && !((n_2969581056.parent == newNode_2969580990)))) {
              idx_2969581057 = index_3003121772(n_2969581056);
              n_2969581056 = n_2969581056.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2969581058 = addInt(i_2969581058, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceJsWrapper_2969580957(self_2969581029, nodeTemplate_2969581030) {
    replace_2969580961(self_2969581029, nodeTemplate_2969581030);

  
}
editor_ast_prototype.replace = function(nodeTemplate_ /* : string */) { return (replaceJsWrapper_2969580957(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceEmpty_2969581068(self_2969581069, nodeTemplate_2969581070) {
      var Temporary1;
        var Temporary2;
      
function HEX3Aanonymous_2969581103(n_2969581106) {
        var result_2969581109 = false;

          result_2969581109 = shouldEditNode_2969578396(self_2969581069.document, n_2969581106);

        return result_2969581109;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575204(self_2969581069)) {
    break BeforeRet;
    }
    
      if (!(node_2969569717(self_2969581069).kind == 0)) Temporary1 = false; else {        var oHEX60gensym731_2969581077 = createNodeFromAction_2969576517(self_2969581069, nodeTemplate_2969581070, node_2969569717(self_2969581069), errorType_3087008127());
        if (!isSome_2969580157(oHEX60gensym731_2969581077)) Temporary2 = false; else {          var newNodeIndex_2969581100 = nimCopy(null, get_2969580174(oHEX60gensym731_2969581077), NTI2969572506);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    var newNode_2969581101 = newNodeIndex_2969581100["Field0"];
    var __2969581102 = newNodeIndex_2969581100["Field1"];
    nodeHEX3D_2969570879(self_2969581069, replaceNode_2969576198(self_2969581069.document, node_2969569717(self_2969581069), newNode_2969581101));
    Label3: {
      var __2969581110 = 0;
      var emptyNode_2969581111 = null;
      var colontmp__2969581162 = null;
      colontmp__2969581162 = HEX3Aanonymous_2969581103;
      var i_2969581163 = 0;
      Label4: {
        var __2969581165 = 0;
        var child_2969581166 = null;
        var n_2969581167 = newNode_2969581101;
        var idx_2969581168 = -1;
        var i_2969581169 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969581168 == -1)) {
              __2969581165 = i_2969581169;
              child_2969581166 = n_2969581167;
              if (colontmp__2969581162(child_2969581166)) {
              __2969581110 = i_2969581163;
              emptyNode_2969581111 = child_2969581166;
              nodeHEX3D_2969570879(self_2969581069, emptyNode_2969581111);
              var _ = tryEdit_2969575361(self_2969581069, node_2969569717(self_2969581069));
              break Label3;
              i_2969581163 = addInt(i_2969581163, 1);
              }
              
              }
              
              if ((addInt(idx_2969581168, 1) < len_3003121752(n_2969581167))) {
              n_2969581167 = HEX5BHEX5D_3003121748(n_2969581167, addInt(idx_2969581168, 1));
              idx_2969581168 = -1;
              }
              else {
                var oHEX60gensym55_2969581171 = next_3003121857(n_2969581167);
                if (!isSome_3003123546(oHEX60gensym55_2969581171)) Temporary9 = false; else {                  var ne_2969581172 = get_3003123566(oHEX60gensym55_2969581171);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969581167 == newNode_2969581101));                }              if (Temporary8) {
              n_2969581167 = ne_2969581172;
              idx_2969581168 = -1;
              }
              else {
              if (((!((n_2969581167.parent == null)) && !((n_2969581167 == newNode_2969581101))) && !((n_2969581167.parent == newNode_2969581101)))) {
              idx_2969581168 = index_3003121772(n_2969581167);
              n_2969581167 = n_2969581167.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969581169 = addInt(i_2969581169, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceEmptyJsWrapper_2969581064(self_2969581140, nodeTemplate_2969581141) {
    replaceEmpty_2969581068(self_2969581140, nodeTemplate_2969581141);

  
}
editor_ast_prototype.replaceEmpty = function(nodeTemplate_ /* : string */) { return (replaceEmptyJsWrapper_2969581064(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceParent_2969581179(self_2969581180) {
  BeforeRet: {
    if (isEditing_2969575204(self_2969581180)) {
    break BeforeRet;
    }
    
    var node_2969581181 = node_2969569717(self_2969581180);
    if (((node_2969581181.parent == null) || (node_2969581181.parent == self_2969581180.document.rootNode))) {
    break BeforeRet;
    }
    
    var parent_2969581190 = node_2969581181.parent;
    var _ = deleteNode_2969576262(self_2969581180.document, node_2969569717(self_2969581180));
    nodeHEX3D_2969570879(self_2969581180, replaceNode_2969576198(self_2969581180.document, parent_2969581190, node_2969581181));
  };

  
}

function replaceParentJsWrapper_2969581175(self_2969581218) {
    replaceParent_2969581179(self_2969581218);

  
}
editor_ast_prototype.replaceParent = function() { return (replaceParentJsWrapper_2969581175(this));};

function wrap_2969581239(self_2969581240, nodeTemplate_2969581241) {
      var Temporary1;
      
function HEX3Aanonymous_2969581272(n_2969581275) {
        var result_2969581278 = false;

          result_2969581278 = (n_2969581275.kind == 0);

        return result_2969581278;

      }
                var Temporary7;
                var Temporary8;
      
function HEX3Aanonymous_2969581285(n_2969581288) {
        var result_2969581291 = false;

          result_2969581291 = shouldEditNode_2969578396(self_2969581240.document, n_2969581288);

        return result_2969581291;

      }
                var Temporary14;
                var Temporary15;

  BeforeRet: {
    if (isEditing_2969575204(self_2969581240)) {
    break BeforeRet;
    }
    
    var typ_2969581242 = computeType_3019912985(ctx_2969567287, node_2969569717(self_2969581240), true);
      var oHEX60gensym749_2969581245 = createNodeFromAction_2969576517(self_2969581240, nodeTemplate_2969581241, node_2969569717(self_2969581240), typ_2969581242);
      if (!isSome_2969580157(oHEX60gensym749_2969581245)) Temporary1 = false; else {        var newNodeIndex_2969581268 = nimCopy(null, get_2969580174(oHEX60gensym749_2969581245), NTI2969572506);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969581269 = newNodeIndex_2969581268["Field0"];
    var index_2969581270 = newNodeIndex_2969581268["Field1"];
    var oldNode_2969581271 = node_2969569717(self_2969581240);
    nodeHEX3D_2969570879(self_2969581240, replaceNode_2969576198(self_2969581240.document, node_2969569717(self_2969581240), newNode_2969581269));
    Label2: {
      var i_2969581283 = 0;
      var emptyNode_2969581284 = null;
      var colontmp__2969581353 = null;
      colontmp__2969581353 = HEX3Aanonymous_2969581272;
      var i_2969581354 = 0;
      Label3: {
        var __2969581356 = 0;
        var child_2969581357 = null;
        var n_2969581358 = newNode_2969581269;
        var idx_2969581359 = -1;
        var i_2969581360 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2969581359 == -1)) {
              __2969581356 = i_2969581360;
              child_2969581357 = n_2969581358;
              if (colontmp__2969581353(child_2969581357)) {
              i_2969581283 = i_2969581354;
              emptyNode_2969581284 = child_2969581357;
              if ((i_2969581283 == index_2969581270)) {
              nodeHEX3D_2969570879(self_2969581240, replaceNode_2969576198(self_2969581240.document, emptyNode_2969581284, oldNode_2969581271));
              break Label2;
              }
              
              i_2969581354 = addInt(i_2969581354, 1);
              }
              
              }
              
              if ((addInt(idx_2969581359, 1) < len_3003121752(n_2969581358))) {
              n_2969581358 = HEX5BHEX5D_3003121748(n_2969581358, addInt(idx_2969581359, 1));
              idx_2969581359 = -1;
              }
              else {
                var oHEX60gensym55_2969581362 = next_3003121857(n_2969581358);
                if (!isSome_3003123546(oHEX60gensym55_2969581362)) Temporary8 = false; else {                  var ne_2969581363 = get_3003123566(oHEX60gensym55_2969581362);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2969581358 == newNode_2969581269));                }              if (Temporary7) {
              n_2969581358 = ne_2969581363;
              idx_2969581359 = -1;
              }
              else {
              if (((!((n_2969581358.parent == null)) && !((n_2969581358 == newNode_2969581269))) && !((n_2969581358.parent == newNode_2969581269)))) {
              idx_2969581359 = index_3003121772(n_2969581358);
              n_2969581358 = n_2969581358.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2969581360 = addInt(i_2969581360, 1);
              }
            }
        };
      };
    };
    Label9: {
      var __2969581292 = 0;
      var emptyNode_2969581293 = null;
      var colontmp__2969581365 = null;
      colontmp__2969581365 = HEX3Aanonymous_2969581285;
      var i_2969581366 = 0;
      Label10: {
        var __2969581368 = 0;
        var child_2969581369 = null;
        var n_2969581370 = newNode_2969581269;
        var idx_2969581371 = -1;
        var i_2969581372 = 0;
        Label11: {
            Label12: while (true) {
            if (!true) break Label12;
              try {
              if ((idx_2969581371 == -1)) {
              __2969581368 = i_2969581372;
              child_2969581369 = n_2969581370;
              if (colontmp__2969581365(child_2969581369)) {
              __2969581292 = i_2969581366;
              emptyNode_2969581293 = child_2969581369;
              nodeHEX3D_2969570879(self_2969581240, emptyNode_2969581293);
              var _ = tryEdit_2969575361(self_2969581240, node_2969569717(self_2969581240));
              break Label9;
              i_2969581366 = addInt(i_2969581366, 1);
              }
              
              }
              
              if ((addInt(idx_2969581371, 1) < len_3003121752(n_2969581370))) {
              n_2969581370 = HEX5BHEX5D_3003121748(n_2969581370, addInt(idx_2969581371, 1));
              idx_2969581371 = -1;
              }
              else {
                var oHEX60gensym55_2969581374 = next_3003121857(n_2969581370);
                if (!isSome_3003123546(oHEX60gensym55_2969581374)) Temporary15 = false; else {                  var ne_2969581375 = get_3003123566(oHEX60gensym55_2969581374);
                  Temporary15 = true;                }                if (!Temporary15) Temporary14 = false; else {                  Temporary14 = !((n_2969581370 == newNode_2969581269));                }              if (Temporary14) {
              n_2969581370 = ne_2969581375;
              idx_2969581371 = -1;
              }
              else {
              if (((!((n_2969581370.parent == null)) && !((n_2969581370 == newNode_2969581269))) && !((n_2969581370.parent == newNode_2969581269)))) {
              idx_2969581371 = index_3003121772(n_2969581370);
              n_2969581370 = n_2969581370.parent;
              }
              else {
                break Label11;
              }
              }}
              } finally {
              i_2969581372 = addInt(i_2969581372, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function wrapJsWrapper_2969581235(self_2969581331, nodeTemplate_2969581332) {
    wrap_2969581239(self_2969581331, nodeTemplate_2969581332);

  
}
editor_ast_prototype.wrap = function(nodeTemplate_ /* : string */) { return (wrapJsWrapper_2969581235(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function editPrevEmpty_2969581382(self_2969581383) {
              var Temporary4;

  BeforeRet: {
    if (isEditing_2969575204(self_2969581383)) {
    break BeforeRet;
    }
    
    var current_2969581384 = node_2969569717(self_2969581383);
    Label1: {
      var emptyNode_2969581385 = null;
      var colontmp__2969581433 = null;
      colontmp__2969581433 = node_2969569717(self_2969581383);
      var idx_2969581434 = 0;
      var n_2969581435 = colontmp__2969581433;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969581435 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969581435), 1)), subInt(idx_2969581434, 1))) {
            n_2969581435 = HEX5BHEX5D_3003121748(n_2969581435, subInt(idx_2969581434, 1));
            idx_2969581434 = len_3003121752(n_2969581435);
            }
            else {
              var oHEX60gensym74_2969581437 = prev_3003121903(n_2969581435);
              if (!isSome_3003123546(oHEX60gensym74_2969581437)) Temporary4 = false; else {                var ne_2969581438 = get_3003123566(oHEX60gensym74_2969581437);
                Temporary4 = true;              }            if (Temporary4) {
            emptyNode_2969581385 = n_2969581435;
            if ((!((emptyNode_2969581385 == current_2969581384)) && shouldEditNode_2969578396(self_2969581383.document, emptyNode_2969581385))) {
            nodeHEX3D_2969570879(self_2969581383, emptyNode_2969581385);
            var _ = tryEdit_2969575361(self_2969581383, node_2969569717(self_2969581383));
            break Label1;
            }
            
            n_2969581435 = ne_2969581438;
            idx_2969581434 = len_3003121752(n_2969581435);
            }
            else {
              emptyNode_2969581385 = n_2969581435;
              if ((!((emptyNode_2969581385 == current_2969581384)) && shouldEditNode_2969578396(self_2969581383.document, emptyNode_2969581385))) {
              nodeHEX3D_2969570879(self_2969581383, emptyNode_2969581385);
              var _ = tryEdit_2969575361(self_2969581383, node_2969569717(self_2969581383));
              break Label1;
              }
              
              idx_2969581434 = index_3003121772(n_2969581435);
              n_2969581435 = n_2969581435.parent;
            }
            }
          }
      };
    };
  };

  
}

function editPrevEmptyJsWrapper_2969581378(self_2969581417) {
    editPrevEmpty_2969581382(self_2969581417);

  
}
editor_ast_prototype.editPrevEmpty = function() { return (editPrevEmptyJsWrapper_2969581378(this));};

function editNextEmpty_2969581445(self_2969581446) {
      
function HEX3Aanonymous_2969581448(n_2969581451) {
        var result_2969581454 = false;

          result_2969581454 = (!((n_2969581451 == current_2969581447)) && shouldEditNode_2969578396(self_2969581446.document, n_2969581451));

        return result_2969581454;

      }
                var Temporary6;
                var Temporary7;

  BeforeRet: {
    if (isEditing_2969575204(self_2969581446)) {
    break BeforeRet;
    }
    
    var current_2969581447 = node_2969569717(self_2969581446);
    Label1: {
      var __2969581459 = 0;
      var emptyNode_2969581460 = null;
      var colontmp__2969581504 = null;
      var colontmp__2969581505 = null;
      colontmp__2969581504 = node_2969569717(self_2969581446);
      colontmp__2969581505 = HEX3Aanonymous_2969581448;
      var i_2969581506 = 0;
      Label2: {
        var __2969581508 = 0;
        var child_2969581509 = null;
        var n_2969581510 = colontmp__2969581504;
        var idx_2969581511 = -1;
        var i_2969581512 = 0;
        Label3: {
            Label4: while (true) {
            if (!true) break Label4;
              try {
              if ((idx_2969581511 == -1)) {
              __2969581508 = i_2969581512;
              child_2969581509 = n_2969581510;
              if (colontmp__2969581505(child_2969581509)) {
              __2969581459 = i_2969581506;
              emptyNode_2969581460 = child_2969581509;
              nodeHEX3D_2969570879(self_2969581446, emptyNode_2969581460);
              var _ = tryEdit_2969575361(self_2969581446, node_2969569717(self_2969581446));
              break Label1;
              i_2969581506 = addInt(i_2969581506, 1);
              }
              
              }
              
              if ((addInt(idx_2969581511, 1) < len_3003121752(n_2969581510))) {
              n_2969581510 = HEX5BHEX5D_3003121748(n_2969581510, addInt(idx_2969581511, 1));
              idx_2969581511 = -1;
              }
              else {
                var oHEX60gensym55_2969581514 = next_3003121857(n_2969581510);
                if (!isSome_3003123546(oHEX60gensym55_2969581514)) Temporary7 = false; else {                  var ne_2969581515 = get_3003123566(oHEX60gensym55_2969581514);
                  Temporary7 = true;                }                if (!Temporary7) Temporary6 = false; else {                  Temporary6 = !((n_2969581510 == null));                }              if (Temporary6) {
              n_2969581510 = ne_2969581515;
              idx_2969581511 = -1;
              }
              else {
              if (((!((n_2969581510.parent == null)) && !((n_2969581510 == null))) && !((n_2969581510.parent == null)))) {
              idx_2969581511 = index_3003121772(n_2969581510);
              n_2969581510 = n_2969581510.parent;
              }
              else {
                break Label3;
              }
              }}
              } finally {
              i_2969581512 = addInt(i_2969581512, 1);
              }
            }
        };
      };
    };
  };

  
}

function editNextEmptyJsWrapper_2969581441(self_2969581488) {
    editNextEmpty_2969581445(self_2969581488);

  
}
editor_ast_prototype.editNextEmpty = function() { return (editNextEmptyJsWrapper_2969581441(this));};

function rename_2969581522(self_2969581523) {
  BeforeRet: {
    if (isEditing_2969575204(self_2969581523)) {
    break BeforeRet;
    }
    
    var _ = tryEdit_2969575361(self_2969581523, node_2969569717(self_2969581523));
  };

  
}

function renameJsWrapper_2969581518(self_2969581551) {
    rename_2969581522(self_2969581551);

  
}
editor_ast_prototype.rename = function() { return (renameJsWrapper_2969581518(this));};

function selectPrevCompletion_2969581572(self_2969581573) {
    if ((0 < (self_2969581573.completions).length)) {
    self_2969581573.selectedCompletion = clamp_1660945119(subInt(self_2969581573.selectedCompletion, 1), 0, subInt((self_2969581573.completions).length, 1));
    }
    else {
      self_2969581573.selectedCompletion = 0;
    }
    

  
}

function selectPrevCompletionJsWrapper2_2969581568(self_2969581612) {
    selectPrevCompletion_2969581572(self_2969581612);

  
}
editor_ast_prototype.selectPrevCompletion2 = function() { return (selectPrevCompletionJsWrapper2_2969581568(this));};

function selectNextCompletion_2969581633(editor_2969581634) {
    if ((0 < (editor_2969581634.completions).length)) {
    editor_2969581634.selectedCompletion = clamp_1660945119(addInt(editor_2969581634.selectedCompletion, 1), 0, subInt((editor_2969581634.completions).length, 1));
    }
    else {
      editor_2969581634.selectedCompletion = 0;
    }
    

  
}

function selectNextCompletionJsWrapper2_2969581629(editor_2969581673) {
    selectNextCompletion_2969581633(editor_2969581673);

  
}
editor_ast_prototype.selectNextCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (selectNextCompletionJsWrapper2_2969581629(editor_));};

function createDefaultNode_2969578052(editor_2969578053, kind_2969578054) {
  var result_2969578056 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (kind_2969578054) {
    case 0:
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: {kind: 0, id: newId_2046820597(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case 1:
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: {kind: 1, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case 2:
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case 3:
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: {kind: 3, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case 4:
      Label1: {
        var tmpHEX60gensym452_2969578073 = null;
        Label2: {
          var res_2969578079 = null;
          res_2969578079 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578079.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578079.id = nimCopy(res_2969578079.id, newId_2046820597(), NTI2046820355);
          Label4: {
            Label5: {
              var res_2969578082 = null;
              res_2969578082 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578082.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969578079, res_2969578082);
        };
      };
      var node_2969578101 = res_2969578079;
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: node_2969578101, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case 5:
      Label7: {
        var tmpHEX60gensym459_2969578109 = null;
        Label8: {
          var res_2969578115 = null;
          res_2969578115 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578115.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578115.id = nimCopy(res_2969578115.id, newId_2046820597(), NTI2046820355);
          Label10: {
            Label11: {
              var res_2969578118 = null;
              res_2969578118 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578118.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578115, res_2969578118);
            Label13: {
              var res_2969578120 = null;
              res_2969578120 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578120.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578115, res_2969578120);
          };
        };
      };
      var node_2969578148 = res_2969578115;
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: node_2969578148, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case 6:
      Label15: {
        var tmpHEX60gensym469_2969578156 = null;
        Label16: {
          var res_2969578162 = null;
          res_2969578162 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578162.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578162.id = nimCopy(res_2969578162.id, newId_2046820597(), NTI2046820355);
          Label18: {
            Label19: {
              var res_2969578165 = null;
              res_2969578165 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578165.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578162, res_2969578165);
            Label21: {
              var res_2969578167 = null;
              res_2969578167 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578167.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578162, res_2969578167);
          };
        };
      };
      var node_2969578195 = res_2969578162;
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: node_2969578195, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case 11:
      Label23: {
        var tmpHEX60gensym479_2969578203 = null;
        Label24: {
          var res_2969578209 = null;
          res_2969578209 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578209.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label26: {
            Label27: {
              var res_2969578211 = null;
              res_2969578211 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578211.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578209, res_2969578211);
            Label29: {
              var res_2969578213 = null;
              res_2969578213 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578213.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578209, res_2969578213);
            Label31: {
              var res_2969578215 = null;
              res_2969578215 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578215.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label33: {
                Label34: {
                  var res_2969578217 = null;
                  res_2969578217 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2969578217.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_3003121702(res_2969578215, res_2969578217);
            };
            add_3003121702(res_2969578209, res_2969578215);
          };
        };
      };
      var node_2969578263 = res_2969578209;
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: node_2969578263, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case 9:
      Label36: {
        var tmpHEX60gensym495_2969578271 = null;
        Label37: {
          var res_2969578277 = null;
          res_2969578277 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578277.kind = 9;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label39: {
            Label40: {
              var res_2969578279 = null;
              res_2969578279 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578279.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578277, res_2969578279);
            Label42: {
              var res_2969578281 = null;
              res_2969578281 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578281.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578277, res_2969578281);
          };
        };
      };
      var node_2969578309 = res_2969578277;
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: node_2969578309, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case 10:
      Label44: {
        var tmpHEX60gensym505_2969578317 = null;
        Label45: {
          var res_2969578323 = null;
          res_2969578323 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578323.kind = 10;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label47: {
            Label48: {
              var res_2969578325 = null;
              res_2969578325 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578325.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578323, res_2969578325);
            Label50: {
              var res_2969578327 = null;
              res_2969578327 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578327.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578323, res_2969578327);
          };
        };
      };
      var node_2969578355 = res_2969578323;
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: node_2969578355, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    case 7:
      Label52: {
        var tmpHEX60gensym515_2969578363 = null;
        Label53: {
          var res_2969578369 = null;
          res_2969578369 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578369.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label55: {
            Label56: {
              var res_2969578371 = null;
              res_2969578371 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578371.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969578369, res_2969578371);
        };
      };
      var node_2969578390 = res_2969578369;
      result_2969578056 = nimCopy(result_2969578056, some_2969576557({Field0: node_2969578390, Field1: 0}), NTI2969572511);
      break BeforeRet;
      break;
    default: 
      result_2969578056 = nimCopy(result_2969578056, none_2969577058(), NTI2969572511);
      break BeforeRet;
      break;
    }
  };

  return result_2969578056;

}

function applySelectedCompletion_2969581694(editor_2969581695) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        
function HEX3Aanonymous_2969581800(n_2969581803) {
          var result_2969581806 = false;

            result_2969581806 = shouldEditNode_2969578396(editor_2969581695.document, n_2969581803);

          return result_2969581806;

        }
                  var Temporary10;
                  var Temporary11;

  BeforeRet: {
    if ((editor_2969581695.textDocument == null)) {
    break BeforeRet;
    }
    
    if (((editor_2969581695.completions).length == 0)) {
    break BeforeRet;
    }
    
    var com_2969581703 = nimCopy(null, editor_2969581695.completions[chckIndx(editor_2969581695.selectedCompletion, 0, (editor_2969581695.completions).length - 1)], NTI2969568617);
    var completionText_2969581704 = nimCopy(null, editor_2969581695.completionText, NTI33554449);
    var fmtRes_2969581709 = [mnewString(0)];
    fmtRes_2969581709[0].push.apply(fmtRes_2969581709[0], [91,97,115,116,101,100,105,116,93,32,65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2701131945(fmtRes_2969581709, 0, editor_2969581695.selectedCompletion, []);
    fmtRes_2969581709[0].push.apply(fmtRes_2969581709[0], [32,40]);;
    formatValue_721420459(fmtRes_2969581709, 0, completionText_2969581704, []);
    fmtRes_2969581709[0].push.apply(fmtRes_2969581709[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969581709[0], NTI33554449)]);
    finishEdit_2969575630(editor_2969581695, false);
    switch (com_2969581703.kind) {
    case 0:
        var Temporary2 = com_2969581703;
        if (ConstSet181[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568616)); }
        var oHEX60gensym803_2969581717 = getSymbol_3019906505(ctx_2969567287, Temporary2.id);
        if (!isSome_3087009352(oHEX60gensym803_2969581717)) Temporary1 = false; else {          var symbol_2969581740 = get_3087009372(oHEX60gensym803_2969581717);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2969570879(editor_2969581695, replaceNode_2969576198(editor_2969581695.document, node_2969569717(editor_2969581695), {kind: 1, reff: nimCopy(null, symbol_2969581740.id, NTI2046820355), parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}));
      }
      
      break;
    case 1:
        var Temporary4 = com_2969581703;
        if (ConstSet182[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2969568616)); }
        var oHEX60gensym804_2969581743 = createDefaultNode_2969578052(editor_2969581695, Temporary4.nodeKind);
        if (!isSome_2969580157(oHEX60gensym804_2969581743)) Temporary3 = false; else {          var nodeIndex_2969581766 = nimCopy(null, get_2969580174(oHEX60gensym804_2969581743), NTI2969572506);
          Temporary3 = true;        }      if (Temporary3) {
      var newNode_2969581767 = nodeIndex_2969581766["Field0"];
      var __2969581768 = nodeIndex_2969581766["Field1"];
      var _ = replaceNode_2969576198(editor_2969581695.document, node_2969569717(editor_2969581695), newNode_2969581767);
      if ((newNode_2969581767.kind == 2)) {
      newNode_2969581767.text = nimCopy(null, completionText_2969581704, NTI33554449);
      updateNode_3019949689(ctx_2969567287, newNode_2969581767);
      }
      else {
      if ((newNode_2969581767.kind == 3)) {
      if (!((completionText_2969581704[chckIndx(0, 0, (completionText_2969581704).length - 1)] == 34))) {
      failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,46,110,105,109,40,49,54,52,49,44,32,57,41,32,96,99,111,109,112,108,101,116,105,111,110,84,101,120,116,91,48,93,32,61,61,32,39,92,34,39,96,32]);
      }
      
      newNode_2969581767.text = nimCopy(null, HEX5BHEX5D_855639319(completionText_2969581704, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
      updateNode_3019949689(ctx_2969567287, newNode_2969581767);
      }
      }
      nodeHEX3D_2969570879(editor_2969581695, newNode_2969581767);
      Label5: {
        var __2969581807 = 0;
        var emptyNode_2969581808 = null;
        var colontmp__2969581852 = null;
        colontmp__2969581852 = HEX3Aanonymous_2969581800;
        var i_2969581853 = 0;
        Label6: {
          var __2969581855 = 0;
          var child_2969581856 = null;
          var n_2969581857 = newNode_2969581767;
          var idx_2969581858 = -1;
          var i_2969581859 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2969581858 == -1)) {
                __2969581855 = i_2969581859;
                child_2969581856 = n_2969581857;
                if (colontmp__2969581852(child_2969581856)) {
                __2969581807 = i_2969581853;
                emptyNode_2969581808 = child_2969581856;
                nodeHEX3D_2969570879(editor_2969581695, emptyNode_2969581808);
                var _ = tryEdit_2969575361(editor_2969581695, node_2969569717(editor_2969581695));
                break Label5;
                i_2969581853 = addInt(i_2969581853, 1);
                }
                
                }
                
                if ((addInt(idx_2969581858, 1) < len_3003121752(n_2969581857))) {
                n_2969581857 = HEX5BHEX5D_3003121748(n_2969581857, addInt(idx_2969581858, 1));
                idx_2969581858 = -1;
                }
                else {
                  var oHEX60gensym55_2969581861 = next_3003121857(n_2969581857);
                  if (!isSome_3003123546(oHEX60gensym55_2969581861)) Temporary11 = false; else {                    var ne_2969581862 = get_3003123566(oHEX60gensym55_2969581861);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2969581857 == newNode_2969581767));                  }                if (Temporary10) {
                n_2969581857 = ne_2969581862;
                idx_2969581858 = -1;
                }
                else {
                if (((!((n_2969581857.parent == null)) && !((n_2969581857 == newNode_2969581767))) && !((n_2969581857.parent == newNode_2969581767)))) {
                idx_2969581858 = index_3003121772(n_2969581857);
                n_2969581857 = n_2969581857.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2969581859 = addInt(i_2969581859, 1);
                }
              }
          };
        };
      };
      }
      
      break;
    }
  };

  
}

function applySelectedCompletionJsWrapper2_2969581690(editor_2969581836) {
    applySelectedCompletion_2969581694(editor_2969581836);

  
}
editor_ast_prototype.applySelectedCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (applySelectedCompletionJsWrapper2_2969581690(editor_));};

function cancelAndNextCompletion_2969581905(self_2969581906) {
    finishEdit_2969575630(self_2969581906, false);
    editNextEmpty_2969581445(self_2969581906);

  
}

function cancelAndNextCompletionJsWrapper_2969581901(self_2969581934) {
    cancelAndNextCompletion_2969581905(self_2969581934);

  
}
editor_ast_prototype.cancelAndNextCompletion = function() { return (cancelAndNextCompletionJsWrapper_2969581901(this));};

function cancelAndPrevCompletion_2969581955(self_2969581956) {
    finishEdit_2969575630(self_2969581956, false);
    editPrevEmpty_2969581382(self_2969581956);

  
}

function cancelAndPrevCompletionJsWrapper_2969581951(self_2969581984) {
    cancelAndPrevCompletion_2969581955(self_2969581984);

  
}
editor_ast_prototype.cancelAndPrevCompletion = function() { return (cancelAndPrevCompletionJsWrapper_2969581951(this));};

function cancelAndDelete_2969582005(self_2969582006) {
    finishEdit_2969575630(self_2969582006, false);
    self_2969582006.deletedNode = nimCopy(self_2969582006.deletedNode, some_3003121890(node_2969569717(self_2969582006)), NTI3003121783);
    nodeHEX3D_2969570879(self_2969582006, deleteNode_2969576262(self_2969582006.document, node_2969569717(self_2969582006)));

  
}

function cancelAndDeleteJsWrapper_2969582001(self_2969582037) {
    cancelAndDelete_2969582005(self_2969582037);

  
}
editor_ast_prototype.cancelAndDelete = function() { return (cancelAndDeleteJsWrapper_2969582001(this));};

function none_3003121842() {
  var result_3003121849 = ({val: 0, has: false});

  return result_3003121849;

}

function index_3003121834(node_3003121835, parent_3003121836) {
  var result_3003121838 = ({val: 0, has: false});

  BeforeRet: {
    if ((node_3003121835.parent == null)) {
    result_3003121838 = nimCopy(result_3003121838, none_3003121842(), NTI1191183280);
    break BeforeRet;
    }
    
    if ((node_3003121835.parent == parent_3003121836)) {
    result_3003121838 = nimCopy(result_3003121838, some_1191184367(index_3003121772(node_3003121835)), NTI1191183280);
    break BeforeRet;
    }
    
    result_3003121838 = nimCopy(result_3003121838, index_3003121834(node_3003121835.parent, parent_3003121836), NTI1191183280);
    break BeforeRet;
  };

  return result_3003121838;

}

function get_1191185211(self_1191185213) {
  var result_1191185214 = 0;

    if (isNone_1191185194(self_1191185213)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1191185214 = self_1191185213["val"];

  return result_1191185214;

}

function moveNodeToPrevSpace_2969582058(self_2969582059) {
              var Temporary4;
      var Temporary7;
    var Temporary8;
      var Temporary9;
      var Temporary10;

    var wasEditing_2969582060 = isEditing_2969575204(self_2969582059);
    finishEdit_2969575630(self_2969582059, false);
    var targetNode_2969582067 = none_3003121871();
    Label1: {
      var next_2969582068 = null;
      var colontmp__2969582208 = null;
      colontmp__2969582208 = node_2969569717(self_2969582059);
      var idx_2969582209 = 0;
      var n_2969582210 = colontmp__2969582208;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969582210 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969582210), 1)), subInt(idx_2969582209, 1))) {
            n_2969582210 = HEX5BHEX5D_3003121748(n_2969582210, subInt(idx_2969582209, 1));
            idx_2969582209 = len_3003121752(n_2969582210);
            }
            else {
              var oHEX60gensym74_2969582212 = prev_3003121903(n_2969582210);
              if (!isSome_3003123546(oHEX60gensym74_2969582212)) Temporary4 = false; else {                var ne_2969582213 = get_3003123566(oHEX60gensym74_2969582212);
                Temporary4 = true;              }            if (Temporary4) {
            next_2969582068 = n_2969582210;
            Label5: {
              if ((next_2969582068 == node_2969569717(self_2969582059))) {
              break Label5;
              }
              
              if ((canInsertInto_2969578735(self_2969582059, next_2969582068) && (!((next_2969582068 == node_2969569717(self_2969582059).parent)) || (0 < index_3003121772(node_2969569717(self_2969582059)))))) {
              targetNode_2969582067 = nimCopy(targetNode_2969582067, some_3003121890(next_2969582068), NTI3003121804);
              break Label1;
              }
              
            };
            n_2969582210 = ne_2969582213;
            idx_2969582209 = len_3003121752(n_2969582210);
            }
            else {
              next_2969582068 = n_2969582210;
              Label6: {
                if ((next_2969582068 == node_2969569717(self_2969582059))) {
                break Label6;
                }
                
                if ((canInsertInto_2969578735(self_2969582059, next_2969582068) && (!((next_2969582068 == node_2969569717(self_2969582059).parent)) || (0 < index_3003121772(node_2969569717(self_2969582059)))))) {
                targetNode_2969582067 = nimCopy(targetNode_2969582067, some_3003121890(next_2969582068), NTI3003121804);
                break Label1;
                }
                
              };
              idx_2969582209 = index_3003121772(n_2969582210);
              n_2969582210 = n_2969582210.parent;
            }
            }
          }
      };
    };
      var oHEX60gensym843_2969582082 = nimCopy(null, targetNode_2969582067, NTI3003121804);
      if (!isSome_3003123546(oHEX60gensym843_2969582082)) Temporary7 = false; else {        var newParent_2969582105 = get_3003123566(oHEX60gensym843_2969582082);
        Temporary7 = true;      }    if (Temporary7) {
    var nodeToMove_2969582106 = node_2969569717(self_2969582059);
    if ((nodeToMove_2969582106.parent == newParent_2969582105)) {
    Temporary8 = subInt(index_3003121772(nodeToMove_2969582106), 1);
    }
    else {
      var oHEX60gensym844_2969582113 = index_3003121834(nodeToMove_2969582106, newParent_2969582105);
      if (!isSome_1191185117(oHEX60gensym844_2969582113)) Temporary9 = false; else {        var index_2969582136 = get_1191185211(oHEX60gensym844_2969582113);
        Temporary9 = true;      }    if (Temporary9) {
    Temporary8 = index_2969582136;
    }
    else {
    Temporary8 = len_3003121752(newParent_2969582105);
    }
    }
    var index_2969582137 = Temporary8;
    nodeHEX3D_2969570879(self_2969582059, deleteNode_2969576262(self_2969582059.document, nodeToMove_2969582106));
      var oHEX60gensym845_2969582140 = insertNode_2969573921(self_2969582059.document, newParent_2969582105, index_2969582137, nodeToMove_2969582106);
      if (!isSome_3003123546(oHEX60gensym845_2969582140)) Temporary10 = false; else {        var newNode_2969582163 = get_3003123566(oHEX60gensym845_2969582140);
        Temporary10 = true;      }    if (Temporary10) {
    nodeHEX3D_2969570879(self_2969582059, newNode_2969582163);
    if (wasEditing_2969582060) {
    var _ = tryEdit_2969575361(self_2969582059, node_2969569717(self_2969582059));
    }
    
    }
    
    }
    

  
}

function moveNodeToPrevSpaceJsWrapper_2969582054(self_2969582191) {
    moveNodeToPrevSpace_2969582058(self_2969582191);

  
}
editor_ast_prototype.moveNodeToPrevSpace = function() { return (moveNodeToPrevSpaceJsWrapper_2969582054(this));};

function moveNodeToNextSpace_2969582220(self_2969582221) {
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

    var wasEditing_2969582222 = isEditing_2969575204(self_2969582221);
    finishEdit_2969575630(self_2969582221, false);
    var targetNode_2969582229 = none_3003121871();
    Label1: {
      var __2969582230 = 0;
      var next_2969582231 = null;
      var colontmp__2969582371 = null;
      var colontmp__2969582372 = 0;
      colontmp__2969582371 = node_2969569717(self_2969582221).parent;
      colontmp__2969582372 = index_3003121772(node_2969569717(self_2969582221));
      var n_2969582374 = colontmp__2969582371;
      var idx_2969582375 = colontmp__2969582372;
      var i_2969582376 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969582375 == subInt(len_3003121752(n_2969582374), 1))) {
            var colontmp__2969582379 = nimCopy(null, {Field0: i_2969582376, Field1: n_2969582374}, NTI2969569488);
            __2969582230 = colontmp__2969582379["Field0"];
            next_2969582231 = colontmp__2969582379["Field1"];
            Label5: {
              if ((next_2969582231 == node_2969569717(self_2969582221))) {
              break Label5;
              }
              
              if ((canInsertInto_2969578735(self_2969582221, next_2969582231) && (!((next_2969582231 == node_2969569717(self_2969582221).parent)) || (addInt(index_3003121772(node_2969569717(self_2969582221)), 1) < len_3003121752(node_2969569717(self_2969582221).parent))))) {
              targetNode_2969582229 = nimCopy(targetNode_2969582229, some_3003121890(next_2969582231), NTI3003121804);
              break Label1;
              }
              
            };
            if (((!((n_2969582374.parent == null)) && !((n_2969582374 == null))) && !((n_2969582374.parent == null)))) {
            idx_2969582375 = index_3003121772(n_2969582374);
            n_2969582374 = n_2969582374.parent;
            }
            else {
              break Label2;
            }
            
            }
            else {
            if ((addInt(idx_2969582375, 1) < len_3003121752(colontmp__2969582371))) {
            n_2969582374 = HEX5BHEX5D_3003121748(n_2969582374, addInt(idx_2969582375, 1));
            idx_2969582375 = -1;
            }
            else {
              break Label2;
            }
            }
            } finally {
            i_2969582376 = addInt(i_2969582376, 1);
            }
          }
      };
    };
      var oHEX60gensym855_2969582245 = nimCopy(null, targetNode_2969582229, NTI3003121804);
      if (!isSome_3003123546(oHEX60gensym855_2969582245)) Temporary6 = false; else {        var newParent_2969582268 = get_3003123566(oHEX60gensym855_2969582245);
        Temporary6 = true;      }    if (Temporary6) {
    var nodeToMove_2969582269 = node_2969569717(self_2969582221);
    if ((nodeToMove_2969582269.parent == newParent_2969582268)) {
    Temporary7 = addInt(index_3003121772(nodeToMove_2969582269), 1);
    }
    else {
      var oHEX60gensym856_2969582276 = index_3003121834(nodeToMove_2969582269, newParent_2969582268);
      if (!isSome_1191185117(oHEX60gensym856_2969582276)) Temporary8 = false; else {        var index_2969582299 = get_1191185211(oHEX60gensym856_2969582276);
        Temporary8 = true;      }    if (Temporary8) {
    Temporary7 = addInt(index_2969582299, 1);
    }
    else {
    Temporary7 = 0;
    }
    }
    var index_2969582300 = Temporary7;
    nodeHEX3D_2969570879(self_2969582221, deleteNode_2969576262(self_2969582221.document, nodeToMove_2969582269));
      var oHEX60gensym857_2969582303 = insertNode_2969573921(self_2969582221.document, newParent_2969582268, index_2969582300, nodeToMove_2969582269);
      if (!isSome_3003123546(oHEX60gensym857_2969582303)) Temporary9 = false; else {        var newNode_2969582326 = get_3003123566(oHEX60gensym857_2969582303);
        Temporary9 = true;      }    if (Temporary9) {
    nodeHEX3D_2969570879(self_2969582221, newNode_2969582326);
    if (wasEditing_2969582222) {
    var _ = tryEdit_2969575361(self_2969582221, node_2969569717(self_2969582221));
    }
    
    }
    
    }
    

  
}

function moveNodeToNextSpaceJsWrapper_2969582216(self_2969582354) {
    moveNodeToNextSpace_2969582220(self_2969582354);

  
}
editor_ast_prototype.moveNodeToNextSpace = function() { return (moveNodeToNextSpaceJsWrapper_2969582216(this));};

function popLast_2969571136(deq_2969571138) {
    var Temporary1;

  var result_2969571139 = null;

    if ((deq_2969571138.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2969571138.count = subInt(deq_2969571138.count, 1);
    deq_2969571138.tail = (subInt(deq_2969571138.tail, 1) & deq_2969571138.mask);
    Temporary1 = deq_2969571138.data[chckIndx(deq_2969571138.tail, 0, (deq_2969571138.data).length - 1)];
    deq_2969571138.data[chckIndx(deq_2969571138.tail, 0, (deq_2969571138.data).length - 1)] = genericReset(deq_2969571138.data[chckIndx(deq_2969571138.tail, 0, (deq_2969571138.data).length - 1)], NTI3003121668);
    result_2969571139 = Temporary1;

  return result_2969571139;

}

function addFirst_2969571167(deq_2969571169, item_2969571170) {
    expandIfNeeded_2969570912(deq_2969571169);
    deq_2969571169.count = addInt(deq_2969571169.count, 1);
    deq_2969571169.head = (subInt(deq_2969571169.head, 1) & deq_2969571169.mask);
    deq_2969571169.data[chckIndx(deq_2969571169.head, 0, (deq_2969571169.data).length - 1)] = item_2969571170;

  
}

function selectPrevNode_2969571066(editor_2969571067) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2969571044(editor_2969571067.selectionHistory))) break Label2;
          var node_2969571149 = popLast_2969571136(editor_2969571067.selectionHistory);
          if (((!((node_2969571149 == null)) && !((node_2969571149.parent == null))) && (base_3003121758(node_2969571149) == editor_2969571067.document.rootNode))) {
          addFirst_2969571167(editor_2969571067.selectionHistory, editor_2969571067.selectedNode);
          editor_2969571067.selectedNode = node_2969571149;
          handleSelectedNodeChanged_2969569720(editor_2969571067);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectPrev_2969582386(self_2969582387) {
  BeforeRet: {
    if (isEditing_2969575204(self_2969582387)) {
    break BeforeRet;
    }
    
    selectPrevNode_2969571066(self_2969582387);
  };

  
}

function selectPrevJsWrapper2_2969582382(self_2969582415) {
    selectPrev_2969582386(self_2969582415);

  
}
editor_ast_prototype.selectPrev2 = function() { return (selectPrevJsWrapper2_2969582382(this));};

function selectNextNode_2969571184(editor_2969571185) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2969571044(editor_2969571185.selectionHistory))) break Label2;
          var node_2969571257 = popFirst_2969571053(editor_2969571185.selectionHistory);
          if (((!((node_2969571257 == null)) && !((node_2969571257.parent == null))) && (base_3003121758(node_2969571257) == editor_2969571185.document.rootNode))) {
          addLast_2969570903(editor_2969571185.selectionHistory, editor_2969571185.selectedNode);
          editor_2969571185.selectedNode = node_2969571257;
          handleSelectedNodeChanged_2969569720(editor_2969571185);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectNext_2969582437(self_2969582438) {
  BeforeRet: {
    if (isEditing_2969575204(self_2969582438)) {
    break BeforeRet;
    }
    
    selectNextNode_2969571184(self_2969582438);
  };

  
}

function selectNextJsWrapper2_2969582433(self_2969582466) {
    selectNext_2969582437(self_2969582466);

  
}
editor_ast_prototype.selectNext2 = function() { return (selectNextJsWrapper2_2969582433(this));};

function len_2969582810(t_2969582813) {
  var result_2969582814 = 0;

    result_2969582814 = t_2969582813.counter;

  return result_2969582814;

}

function nuctoLowerStr(s_788531346) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_788531347 = [];

    result_788531347 = nimCopy(null, mnewString(chckRange((s_788531346).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_788531354 = 0;
    var resultIndexHEX60gensym252_788531355 = 0;
    var runeHEX60gensym252_788531356 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_788531354 < (s_788531346).length)) break Label2;
          if ((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] <= 127)) {
          runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 2))) {
          runeHEX60gensym252_788531356 = chckRange((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 31) << 6) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 2);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 3))) {
          runeHEX60gensym252_788531356 = chckRange(((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 15) << 12) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 3);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 4))) {
          runeHEX60gensym252_788531356 = chckRange((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 7) << 18) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 4);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 5))) {
          runeHEX60gensym252_788531356 = chckRange(((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 3) << 24) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 5);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 6))) {
          runeHEX60gensym252_788531356 = chckRange((((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 1) << 30) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 24)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 5), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 6);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
            runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          }}}}}
          runeHEX60gensym252_788531356 = nuctoLower(runeHEX60gensym252_788531356);
          var iHEX60gensym274_788531597 = runeHEX60gensym252_788531356;
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 127)) {
          if (result_788531347.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 1), 0, 2147483647), Temporary3)) { for (var i = result_788531347.length; i < Temporary3; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary3; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(iHEX60gensym274_788531597, 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2047)) {
          if (result_788531347.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 2), 0, 2147483647), Temporary4)) { for (var i = result_788531347.length; i < Temporary4; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary4; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 6) | 192), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 65535)) {
          if (result_788531347.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 3), 0, 2147483647), Temporary5)) { for (var i = result_788531347.length; i < Temporary5; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary5; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 12) | 224), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2097151)) {
          if (result_788531347.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 4), 0, 2147483647), Temporary6)) { for (var i = result_788531347.length; i < Temporary6; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary6; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 18) | 240), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 67108863)) {
          if (result_788531347.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 5), 0, 2147483647), Temporary7)) { for (var i = result_788531347.length; i < Temporary7; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary7; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 24) | 248), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2147483647)) {
          if (result_788531347.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 6), 0, 2147483647), Temporary8)) { for (var i = result_788531347.length; i < Temporary8; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary8; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 30) | 252), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 24) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 5), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_788531347;

}

function toLower_788536559(s_788536560) {
  var result_788536561 = [];

    result_788536561 = nimCopy(null, nuctoLowerStr((s_788536560.slice(0, (s_788536560).length - 1 + 1))), NTI33554449);

  return result_788536561;

}

function mergeAlt_1979711630(a_1979711632, b_1979711633, lo_1979711634, m_1979711635, hi_1979711636, cmp_1979711639, order_1979711640) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1979711639(a_1979711632[chckIndx(m_1979711635, 0, (a_1979711632).length - 1)], a_1979711632[chckIndx(addInt(m_1979711635, 1), 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
    break BeforeRet;
    }
    
    var j_1979711641 = lo_1979711634;
    if (!((j_1979711641 <= m_1979711635))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1979711647 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1979711641 <= m_1979711635)) break Label2;
          b_1979711633[chckIndx(bb_1979711647, 0, (b_1979711633).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
          bb_1979711647 = addInt(bb_1979711647, 1);
          j_1979711641 = addInt(j_1979711641, 1);
        }
    };
    var i_1979711658 = 0;
    var k_1979711659 = lo_1979711634;
    Label3: {
        Label4: while (true) {
        if (!((k_1979711659 < j_1979711641) && (j_1979711641 <= hi_1979711636))) break Label4;
          if ((HEX2A_1023410184(cmp_1979711639(b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)], a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          i_1979711658 = addInt(i_1979711658, 1);
          }
          else {
            a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
            j_1979711641 = addInt(j_1979711641, 1);
          }
          
          k_1979711659 = addInt(k_1979711659, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1979711659 < j_1979711641)) break Label6;
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          k_1979711659 = addInt(k_1979711659, 1);
          i_1979711658 = addInt(i_1979711658, 1);
        }
    };
  };

  
}

function sort_1979711613(a_1979711615, cmp_1979711618, order_1979711619) {
    var n_1979711623 = (a_1979711615).length;
    var b_1979711627 = newSeq_503316959(chckRange(divInt(n_1979711623, 2), 0, 2147483647));
    var s_1979711628 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1979711628 < n_1979711623)) break Label2;
          var m_1979711629 = subInt(subInt(n_1979711623, 1), s_1979711628);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1979711629)) break Label4;
                mergeAlt_1979711630(a_1979711615, b_1979711627, nimMax(addInt(subInt(m_1979711629, s_1979711628), 1), 0), m_1979711629, addInt(m_1979711629, s_1979711628), cmp_1979711618, order_1979711619);
                m_1979711629 = subInt(m_1979711629, mulInt(s_1979711628, 2));
              }
          };
          s_1979711628 = mulInt(s_1979711628, 2);
        }
    };

  
}

function sorted_1979711591(a_1979711593, cmp_1979711596, order_1979711597) {
  var result_1979711598 = [];

    result_1979711598 = nimCopy(null, newSeq_503316959(chckRange((a_1979711593).length, 0, 2147483647)), NTI503316776);
    Label1: {
      var i_1979711612 = 0;
      var colontmp__2684355198 = 0;
      colontmp__2684355198 = (a_1979711593).length - 1;
      var res_2684355199 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2684355199 <= colontmp__2684355198)) break Label3;
            i_1979711612 = res_2684355199;
            result_1979711598[chckIndx(i_1979711612, 0, (result_1979711598).length - 1)] = nimCopy(null, a_1979711593[chckIndx(i_1979711612, 0, (a_1979711593).length - 1)], NTI33554449);
            res_2684355199 = addInt(res_2684355199, 1);
          }
      };
    };
    sort_1979711613(result_1979711598, cmp_1979711596, order_1979711597);

  return result_1979711598;

}

function cmp_1979711584(x_1979711586, y_1979711587) {
  var result_1979711588 = 0;

  BeforeRet: {
    if (eqStrings(x_1979711586, y_1979711587)) {
    result_1979711588 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_1979711586, y_1979711587) < 0)) {
    result_1979711588 = -1;
    break BeforeRet;
    }
    
    result_1979711588 = 1;
    break BeforeRet;
  };

  return result_1979711588;

}

function sorted_1979711579(a_1979711581, order_1979711582) {
  var result_1979711583 = [];

    result_1979711583 = nimCopy(null, sorted_1979711591(a_1979711581, cmp_1979711584, order_1979711582), NTI1979711564);

  return result_1979711583;

}

function max_33555646(x_33555647, y_33555648) {
    var Temporary1;

  var result_33555649 = 0.0;

    if (((y_33555648 <= x_33555647) || !((y_33555648 == y_33555648)))) {
    Temporary1 = x_33555647;
    }
    else {
    Temporary1 = y_33555648;
    }
    
    result_33555649 = Temporary1;

  return result_33555649;

}

function fuzzyMatchSmart_1979711572(s1_1979711573, s2_1979711574, withSubstring_1979711575) {
  var result_1979711576 = 0.0;

  BeforeRet: {
    var str1_1979711577 = [];
    var str2_1979711578 = [];
    str1_1979711577 = nimCopy(null, toLower_788536559(s1_1979711573), NTI33554449);
    str2_1979711578 = nimCopy(null, toLower_788536559(s2_1979711574), NTI33554449);
    str1_1979711577 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str1_1979711577, [32], -1), 1), [32]), NTI33554449);
    str2_1979711578 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str2_1979711578, [32], -1), 1), [32]), NTI33554449);
    if (eqStrings(str1_1979711577, str2_1979711578)) {
    result_1979711576 = 1.0;
    break BeforeRet;
    }
    
    if (((str1_1979711577).length == (str2_1979711578).length)) {
    result_1979711576 = fuzzyMatch_1979711568(str1_1979711577, str2_1979711578);
    break BeforeRet;
    }
    
    var shorter_1979711712 = [];
    var longer_1979711713 = [];
    if (((str1_1979711577).length < (str2_1979711578).length)) {
    shorter_1979711712 = nimCopy(null, str1_1979711577, NTI33554449);
    longer_1979711713 = nimCopy(null, str2_1979711578, NTI33554449);
    }
    else {
      shorter_1979711712 = nimCopy(null, str2_1979711578, NTI33554449);
      longer_1979711713 = nimCopy(null, str1_1979711577, NTI33554449);
    }
    
    var tmpRes_1979711714 = fuzzyMatch_1979711568(shorter_1979711712, longer_1979711713);
    if (withSubstring_1979711575) {
    var lengthDiff_1979711715 = subInt((longer_1979711713).length, (shorter_1979711712).length);
    var subMatch_1979711716 = 0.0;
    Label1: {
      var i_1979711721 = 0;
      var res_2969583421 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969583421 <= lengthDiff_1979711715)) break Label3;
            i_1979711721 = res_2969583421;
            subMatch_1979711716 = fuzzyMatch_1979711568(shorter_1979711712, HEX5BHEX5D_855639291(longer_1979711713, HEX2EHEX2E_805306418(i_1979711721, subInt(addInt(i_1979711721, (shorter_1979711712).length), 1))));
            tmpRes_1979711714 = max_33555646(tmpRes_1979711714, subMatch_1979711716);
            res_2969583421 = addInt(res_2969583421, 1);
          }
      };
    };
    }
    
    result_1979711576 = tmpRes_1979711714;
    break BeforeRet;
  };

  return result_1979711576;

}

function getCompletions_3170893860(self_3170893861, text_3170893862) {
    
function HEX3Aanonymous_3170893884(a_3170893903, b_3170893904) {
      var result_3170893909 = 0;

        result_3170893909 = cmp_3170893896(a_3170893903.score, b_3170893904.score);

      return result_3170893909;

    }

  var result_3170893863 = [];

  BeforeRet: {
    result_3170893863 = nimCopy(null, [], NTI3170893842);
    var symbols_3170893868 = computeSymbols_3019922062(ctx_2969567287, self_3170893861.document.rootNode, true);
    Label1: {
      var key_3170893873 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3170893874 = null;
      var L_2969583412 = len_3087009061(symbols_3170893868);
      Label2: {
        var h_2969583414 = 0;
        var colontmp__2969583415 = 0;
        colontmp__2969583415 = (symbols_3170893868.data).length - 1;
        var res_2969583416 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969583416 <= colontmp__2969583415)) break Label4;
              h_2969583414 = res_2969583416;
              if (isFilled_1308622880(symbols_3170893868.data[chckIndx(h_2969583414, 0, (symbols_3170893868.data).length - 1)].Field0)) {
              var colontmp__2969583419 = nimCopy(null, {Field0: nimCopy(null, symbols_3170893868.data[chckIndx(h_2969583414, 0, (symbols_3170893868.data).length - 1)].Field1, NTI2046820355), Field1: symbols_3170893868.data[chckIndx(h_2969583414, 0, (symbols_3170893868.data).length - 1)].Field2}, NTI3087008731);
              key_3170893873 = nimCopy(key_3170893873, colontmp__2969583419["Field0"], NTI2046820355);
              symbol_3170893874 = colontmp__2969583419["Field1"];
              Label5: {
                if (!((symbol_3170893874.kind == 0))) {
                break Label5;
                }
                
                var score_3170893879 = fuzzyMatchSmart_1979711572(text_3170893862, symbol_3170893874.name, true);
                result_3170893863.push({kind: 0, score: score_3170893879, id: nimCopy(null, symbol_3170893874.id, NTI2046820355), nodeKind: 0, name: []});;
              };
              if (!((len_3087009061(symbols_3170893868) == L_2969583412))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969583416 = addInt(res_2969583416, 1);
            }
        };
      };
    };
    sort_3170893916(result_3170893863, HEX3Aanonymous_3170893884, 0);
    break BeforeRet;
  };

  return result_3170893863;

}

function updateCompletions_3170894072(self_3170894073) {
    var text_3170894074 = nsuJoinSep(content_2818574083(self_3170894073.textEditor.document), []);
    self_3170894073.completions = nimCopy(null, getCompletions_3170893860(self_3170894073, text_3170894074), NTI3170893834);
    if ((0 < (self_3170894073.completions).length)) {
    self_3170894073.selected = clamp_1660945119(self_3170894073.selected, 0, subInt((self_3170894073.completions).length, 1));
    }
    else {
      self_3170894073.selected = 0;
    }
    

  
}

function handleTextChanged_3170894266(self_3170894267) {
    updateCompletions_3170894072(self_3170894267);
    self_3170894267.selected = 0;

  
}

function pop_1291849132(s_1291849134, s_1291849134_Idx) {
  var result_1291849135 = null;

    var L_1291849139 = subInt((s_1291849134[s_1291849134_Idx]).length, 1);
    result_1291849135 = s_1291849134[s_1291849134_Idx][chckIndx(L_1291849139, 0, (s_1291849134[s_1291849134_Idx]).length - 1)];
    if (s_1291849134[s_1291849134_Idx].length < chckRange(L_1291849139, 0, 2147483647)) { for (var i = s_1291849134[s_1291849134_Idx].length ; i < chckRange(L_1291849139, 0, 2147483647) ; ++i) s_1291849134[s_1291849134_Idx].push(null); }
               else { s_1291849134[s_1291849134_Idx].length = chckRange(L_1291849139, 0, 2147483647); };

  return result_1291849135;

}

function popPopup_1291849115(self_1291849116, popup_1291849117) {
    if (((0 < (self_1291849116.popups).length) && (self_1291849116.popups[chckIndx((self_1291849116.popups).length - 1, 0, (self_1291849116.popups).length - 1)] == popup_1291849117))) {
    var _ = pop_1291849132(self_1291849116, "popups");
    }
    
    requestRender_2768240746(self_1291849116.platform, false);

  
}

function newJArray_1627390082() {
  var result_1627390083 = null;

    result_1627390083 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1627390083;

}

function ssClose_1660945414(s_1660945415) {
    var s_1660945416 = s_1660945415;
    s_1660945416.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1660945093(s_1660945094) {
  var result_1660945095 = false;

  BeforeRet: {
    var s_1660945096 = s_1660945094;
    result_1660945095 = ((s_1660945096.data).length <= s_1660945096.pos);
    break BeforeRet;
  };

  return result_1660945095;

}

function ssSetPosition_1660945115(s_1660945116, pos_1660945117) {
    var s_1660945118 = s_1660945116;
    s_1660945118.pos = clamp_1660945119(pos_1660945117, 0, (s_1660945118.data).length);

  
}

function ssGetPosition_1660945125(s_1660945126) {
  var result_1660945127 = 0;

  BeforeRet: {
    var s_1660945128 = s_1660945126;
    result_1660945127 = s_1660945128.pos;
    break BeforeRet;
  };

  return result_1660945127;

}

function HEX5BHEX5DHEX3D_855639183(s_855639186, s_855639186_Idx, x_855639187, b_855639188) {
    var a_855639190 = x_855639187.a;
    var L_855639192 = addInt(subInt(x_855639187.b, a_855639190), 1);
    if ((L_855639192 == (b_855639188).length)) {
    Label1: {
      var i_855639197 = 0;
      var i_2969583432 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969583432 < L_855639192)) break Label3;
            i_855639197 = i_2969583432;
            s_855639186[s_855639186_Idx][chckIndx(addInt(i_855639197, a_855639190), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(i_855639197, 0, (b_855639188).length - 1)];
            i_2969583432 = addInt(i_2969583432, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_855639203 = subInt((b_855639188).length, nimMax(0, L_855639192));
      var newLenHEX60gensym109_855639204 = addInt((s_855639186[s_855639186_Idx]).length, shiftHEX60gensym109_855639203);
      if ((0 < shiftHEX60gensym109_855639203)) {
      if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_855639210 = 0;
        var colontmp__2969583435 = 0;
        var colontmp__2969583436 = 0;
        colontmp__2969583435 = subInt(newLenHEX60gensym109_855639204, 1);
        colontmp__2969583436 = addInt(a_855639190, (b_855639188).length);
        var res_2969583437 = colontmp__2969583435;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__2969583436 <= res_2969583437)) break Label6;
              iHEX60gensym109_855639210 = res_2969583437;
              s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639210, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639210, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
              res_2969583437 = subInt(res_2969583437, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_855639216 = 0;
          var colontmp__2969583440 = 0;
          var colontmp__2969583441 = 0;
          colontmp__2969583440 = addInt(a_855639190, (b_855639188).length);
          colontmp__2969583441 = subInt(newLenHEX60gensym109_855639204, 1);
          var res_2969583442 = colontmp__2969583440;
          Label8: {
              Label9: while (true) {
              if (!(res_2969583442 <= colontmp__2969583441)) break Label9;
                iHEX60gensym109_855639216 = res_2969583442;
                s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639216, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639216, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
                res_2969583442 = addInt(res_2969583442, 1);
              }
          };
        };
        if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_855639221 = 0;
        var colontmp__2969583445 = 0;
        colontmp__2969583445 = (b_855639188).length;
        var i_2969583446 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_2969583446 < colontmp__2969583445)) break Label12;
              iHEX60gensym109_855639221 = i_2969583446;
              s_855639186[s_855639186_Idx][chckIndx(addInt(a_855639190, iHEX60gensym109_855639221), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(iHEX60gensym109_855639221, 0, (b_855639188).length - 1)];
              i_2969583446 = addInt(i_2969583446, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1660945129(s_1660945130, buffer_1660945131, buffer_1660945131_Idx, slice_1660945133) {
  var result_1660945134 = 0;

    var s_1660945135 = s_1660945130;
    result_1660945134 = nimMin(subInt(addInt(slice_1660945133.b, 1), slice_1660945133.a), subInt((s_1660945135.data).length, s_1660945135.pos));
    if ((0 < result_1660945134)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_855639183(buffer_1660945131, buffer_1660945131_Idx, HEX2EHEX2E_805306418(slice_1660945133.a, subInt(addInt(slice_1660945133.a, result_1660945134), 1)), HEX5BHEX5D_855639291(s_1660945135.data, HEX2EHEX2E_805306418(s_1660945135.pos, subInt(addInt(s_1660945135.pos, result_1660945134), 1))));
    s_1660945135.pos = addInt(s_1660945135.pos, result_1660945134);
    }
    else {
      result_1660945134 = 0;
    }
    

  return result_1660945134;

}

function ssReadData_1660945231(s_1660945232, buffer_1660945233, buffer_1660945233_Idx, bufLen_1660945234) {
  var result_1660945235 = 0;

    var s_1660945236 = s_1660945232;
    result_1660945235 = nimMin(bufLen_1660945234, subInt((s_1660945236.data).length, s_1660945236.pos));
    if ((0 < result_1660945235)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945233, buffer_1660945233_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945235, 1)), HEX5BHEX5D_855639291(s_1660945236.data, HEX2EHEX2E_805306418(s_1660945236.pos, subInt(addInt(s_1660945236.pos, result_1660945235), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945236.pos = addInt(s_1660945236.pos, result_1660945235);
    }
    else {
      result_1660945235 = 0;
    }
    

  return result_1660945235;

}

function ssPeekData_1660945306(s_1660945307, buffer_1660945308, buffer_1660945308_Idx, bufLen_1660945309) {
  var result_1660945310 = 0;

    var s_1660945311 = s_1660945307;
    result_1660945310 = nimMin(bufLen_1660945309, subInt((s_1660945311.data).length, s_1660945311.pos));
    if ((0 < result_1660945310)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945308, buffer_1660945308_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945310, 1)), HEX5BHEX5D_855639291(s_1660945311.data, HEX2EHEX2E_805306418(s_1660945311.pos, subInt(addInt(s_1660945311.pos, result_1660945310), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1660945310 = 0;
    }
    

  return result_1660945310;

}

function ssWriteData_1660945358(s_1660945359, buffer_1660945360, buffer_1660945360_Idx, bufLen_1660945361) {
    var Temporary1;

  BeforeRet: {
    var s_1660945362 = s_1660945359;
    if ((bufLen_1660945361 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1660945362.data).length < addInt(s_1660945362.pos, bufLen_1660945361))) {
    if (s_1660945362.data.length < (Temporary1 = chckRange(addInt(s_1660945362.pos, bufLen_1660945361), 0, 2147483647), Temporary1)) { for (var i = s_1660945362.data.length; i < Temporary1; ++i) s_1660945362.data.push(0); }
         else {s_1660945362.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(s_1660945362, "data", HEX2EHEX2E_805306418(s_1660945362.pos, subInt(addInt(s_1660945362.pos, bufLen_1660945361), 1)), HEX5BHEX5D_855639291(buffer_1660945360[buffer_1660945360_Idx], HEX2EHEX2E_805306418(0, subInt(bufLen_1660945361, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945362.pos = addInt(s_1660945362.pos, bufLen_1660945361);
  };

  
}

function newStringStream_1660945417(s_1660945418) {
  var result_1660945419 = null;

    result_1660945419 = ({m_type: NTI1660944862, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1660945419.data = nimCopy(null, s_1660945418, NTI33554449);
    result_1660945419.pos = 0;
    result_1660945419.closeImpl = ssClose_1660945414;
    result_1660945419.atEndImpl = ssAtEnd_1660945093;
    result_1660945419.setPositionImpl = ssSetPosition_1660945115;
    result_1660945419.getPositionImpl = ssGetPosition_1660945125;
    result_1660945419.readDataStrImpl = ssReadDataStr_1660945129;
    result_1660945419.readDataImpl = ssReadData_1660945231;
    result_1660945419.peekDataImpl = ssPeekData_1660945306;
    result_1660945419.writeDataImpl = ssWriteData_1660945358;

  return result_1660945419;

}

function readData_1660944462(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465) {
  var result_1660944466 = 0;

    result_1660944466 = s_1660944463.readDataImpl(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465);

  return result_1660944466;

}

function readDataStr_1660944468(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472) {
  var result_1660944473 = 0;

    if (!((s_1660944469.readDataStrImpl == null))) {
    result_1660944473 = s_1660944469.readDataStrImpl(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472);
    }
    else {
      result_1660944473 = readData_1660944462(s_1660944469, buffer_1660944470[buffer_1660944470_Idx], chckIndx(slice_1660944472.a, 0, (buffer_1660944470[buffer_1660944470_Idx]).length - 1), subInt(addInt(slice_1660944472.b, 1), slice_1660944472.a));
    }
    

  return result_1660944473;

}

function fillBuffer_1644167184(L_1644167185) {
              var Temporary8;

    var charsRead_1644167186 = 0;
    var toCopy_1644167187 = 0;
    var s_1644167188 = 0;
    var oldBufLen_1644167189 = 0;
    if (!((addInt(L_1644167185.sentinel, 1) <= (L_1644167185.buf).length))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1644167187 = subInt((L_1644167185.buf).length, addInt(L_1644167185.sentinel, 1));
    if (!((0 <= toCopy_1644167187))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1644167187)) {
    Label1: {
      var i_1644167204 = 0;
      var i_2969583449 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969583449 < toCopy_1644167187)) break Label3;
            i_1644167204 = i_2969583449;
            L_1644167185.buf[chckIndx(i_1644167204, 0, (L_1644167185.buf).length - 1)] = L_1644167185.buf[chckIndx(addInt(addInt(L_1644167185.sentinel, 1), i_1644167204), 0, (L_1644167185.buf).length - 1)];
            i_2969583449 = addInt(i_2969583449, 1);
          }
      };
    };
    }
    
    charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(toCopy_1644167187, subInt(addInt(addInt(toCopy_1644167187, L_1644167185.sentinel), 1), 1)));
    s_1644167188 = addInt(toCopy_1644167187, charsRead_1644167186);
    if ((charsRead_1644167186 < addInt(L_1644167185.sentinel, 1))) {
    L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)] = 0;
    L_1644167185.sentinel = s_1644167188;
    }
    else {
      s_1644167188 = subInt(s_1644167188, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1644167188 < (L_1644167185.buf).length))) {
            failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1644167188) && !((L_1644167185.refillChars[L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)]] != undefined)))) break Label7;
                  s_1644167188 = subInt(s_1644167188, 1);
                }
            };
            if ((0 <= s_1644167188)) {
            L_1644167185.sentinel = s_1644167188;
            break Label4;
            }
            else {
              oldBufLen_1644167189 = (L_1644167185.buf).length;
              if (L_1644167185.buf.length < (Temporary8 = chckRange(mulInt((L_1644167185.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1644167185.buf.length; i < Temporary8; ++i) L_1644167185.buf.push(0); }
         else {L_1644167185.buf.length = Temporary8; };
              charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(oldBufLen_1644167189, subInt((L_1644167185.buf).length, 1)));
              if ((charsRead_1644167186 < oldBufLen_1644167189)) {
              L_1644167185.buf[chckIndx(addInt(oldBufLen_1644167189, charsRead_1644167186), 0, (L_1644167185.buf).length - 1)] = 0;
              L_1644167185.sentinel = addInt(oldBufLen_1644167189, charsRead_1644167186);
              break Label4;
              }
              
              s_1644167188 = subInt((L_1644167185.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1644167300(L_1644167301) {
    if ((((L_1644167301.buf[chckIndx(0, 0, (L_1644167301.buf).length - 1)] == 239) && (L_1644167301.buf[chckIndx(1, 0, (L_1644167301.buf).length - 1)] == 187)) && (L_1644167301.buf[chckIndx(2, 0, (L_1644167301.buf).length - 1)] == 191))) {
    L_1644167301.bufpos = addInt(L_1644167301.bufpos, 3);
    L_1644167301.lineStart = addInt(L_1644167301.lineStart, 3);
    }
    

  
}

function open_1644167312(L_1644167313, input_1644167314, bufLen_1644167315, refillChars_1644167316) {
    if (!((0 < bufLen_1644167315))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1644167314 == null)))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1644167313.input = input_1644167314;
    L_1644167313.bufpos = 0;
    L_1644167313.offsetBase = 0;
    L_1644167313.refillChars = nimCopy(L_1644167313.refillChars, refillChars_1644167316, NTI1644167173);
    L_1644167313.buf = nimCopy(null, mnewString(chckRange(bufLen_1644167315, 0, 2147483647)), NTI33554449);
    L_1644167313.sentinel = subInt(bufLen_1644167315, 1);
    L_1644167313.lineStart = 0;
    L_1644167313.lineNumber = 1;
    fillBuffer_1644167184(L_1644167313);
    skipUtf8Bom_1644167300(L_1644167313);

  
}

function open_1694498913(my_1694498914, input_1694498915, filename_1694498916, rawStringLiterals_1694498917) {
    open_1644167312(my_1694498914, input_1694498915, 8192, ConstSet185);
    my_1694498914.filename = nimCopy(null, filename_1694498916, NTI33554449);
    my_1694498914.state = nimCopy(null, [1], NTI1694498863);
    my_1694498914.kind = 0;
    my_1694498914.a = nimCopy(null, [], NTI33554449);
    my_1694498914.rawStringLiterals = rawStringLiterals_1694498917;

  
}

function fillBaseLexer_1644167246(L_1644167247, pos_1644167248) {
  var result_1644167249 = 0;

    if (!((pos_1644167248 <= L_1644167247.sentinel))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1644167248 < L_1644167247.sentinel)) {
    result_1644167249 = addInt(pos_1644167248, 1);
    }
    else {
      fillBuffer_1644167184(L_1644167247);
      L_1644167247.offsetBase = addInt(L_1644167247.offsetBase, pos_1644167248);
      L_1644167247.bufpos = 0;
      result_1644167249 = 0;
    }
    

  return result_1644167249;

}

function handleCR_1644167259(L_1644167260, pos_1644167261) {
  var result_1644167262 = 0;

    if (!((L_1644167260.buf[chckIndx(pos_1644167261, 0, (L_1644167260.buf).length - 1)] == 13))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1644167260.lineNumber = addInt(L_1644167260.lineNumber, 1);
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, pos_1644167261);
    if ((L_1644167260.buf[chckIndx(result_1644167262, 0, (L_1644167260.buf).length - 1)] == 10)) {
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, result_1644167262);
    }
    
    L_1644167260.lineStart = result_1644167262;

  return result_1644167262;

}

function handleLF_1644167273(L_1644167274, pos_1644167275) {
  var result_1644167276 = 0;

    if (!((L_1644167274.buf[chckIndx(pos_1644167275, 0, (L_1644167274.buf).length - 1)] == 10))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1644167274.lineNumber = addInt(L_1644167274.lineNumber, 1);
    result_1644167276 = fillBaseLexer_1644167246(L_1644167274, pos_1644167275);
    L_1644167274.lineStart = result_1644167276;

  return result_1644167276;

}

function skip_1694499153(my_1694499154) {
    var pos_1694499155 = my_1694499154.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
          case 47:
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 47)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    break Label3;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 42)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label5: {
                Label6: while (true) {
                if (!true) break Label6;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    my_1694499154.err = 8;
                    break Label5;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break;
                  case 42:
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    if ((my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)] == 47)) {
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break Label5;
                    }
                    
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
              break Label1;
            }
            }
            break;
          case 32:
          case 9:
            pos_1694499155 = addInt(pos_1694499155, 1);
            break;
          case 13:
            pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
            break;
          case 10:
            pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1694499154.bufpos = pos_1694499155;

  
}

function parseNumber_1694499191(my_1694499192) {
    var pos_1694499193 = my_1694499192.bufpos;
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 45)) {
    addChar(my_1694499192.a, 45);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
    my_1694499192.a.push.apply(my_1694499192.a, [48,46]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!(ConstSet186[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label2;
            addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
            pos_1694499193 = addInt(pos_1694499193, 1);
          }
      };
      if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
      addChar(my_1694499192.a, 46);;
      pos_1694499193 = addInt(pos_1694499193, 1);
      }
      
    }
    
    Label3: {
        Label4: while (true) {
        if (!(ConstSet187[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label4;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    if ((ConstSet188[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    if ((ConstSet189[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    Label5: {
        Label6: while (true) {
        if (!(ConstSet190[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label6;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    }
    
    my_1694499192.bufpos = pos_1694499193;

  
}

function nsuFindCharSet(s_855639719, chars_855639720, start_855639721, last_855639722) {
    var Temporary1;

  var result_855639723 = 0;

  BeforeRet: {
    result_855639723 = -1;
    if ((last_855639722 < 0)) {
    Temporary1 = (s_855639719).length - 1;
    }
    else {
    Temporary1 = last_855639722;
    }
    
    var last_855639724 = Temporary1;
    Label2: {
      var i_855639729 = 0;
      var colontmp__2969583460 = 0;
      colontmp__2969583460 = start_855639721;
      var res_2969583461 = colontmp__2969583460;
      Label3: {
          Label4: while (true) {
          if (!(res_2969583461 <= last_855639724)) break Label4;
            i_855639729 = res_2969583461;
            if ((chars_855639720[s_855639719[chckIndx(i_855639729, 0, (s_855639719).length - 1)]] != undefined)) {
            result_855639723 = i_855639729;
            break BeforeRet;
            }
            
            res_2969583461 = addInt(res_2969583461, 1);
          }
      };
    };
  };

  return result_855639723;

}

function contains_855639881(s_855639882, chars_855639883) {
  var result_855639884 = false;

  BeforeRet: {
    result_855639884 = (0 <= nsuFindCharSet(s_855639882, chars_855639883, 0, -1));
    break BeforeRet;
  };

  return result_855639884;

}

function handleHexChar_1711276033(c_1711276034, x_1711276035, x_1711276035_Idx) {
  var result_1711276036 = false;

    result_1711276036 = true;
    switch (c_1711276034) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | subInt(c_1711276034, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 65), 10));
      break;
    default: 
      result_1711276036 = false;
      break;
    }

  return result_1711276036;

}

function parseEscapedUTF16_1694499035(buf_1694499036, pos_1694499037, pos_1694499037_Idx) {
  var result_1694499038 = [0];

  BeforeRet: {
    result_1694499038[0] = 0;
    Label1: {
      var __1694499043 = 0;
      var res_2969583468 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969583468 <= 3)) break Label3;
            __1694499043 = res_2969583468;
            if (handleHexChar_1711276033(buf_1694499036.charCodeAt(chckIndx(pos_1694499037[pos_1694499037_Idx], 0, (buf_1694499036).length - 1)), result_1694499038, 0)) {
            pos_1694499037[pos_1694499037_Idx] = addInt(pos_1694499037[pos_1694499037_Idx], 1);
            }
            else {
              result_1694499038[0] = -1;
              break BeforeRet;
            }
            
            res_2969583468 = addInt(res_2969583468, 1);
          }
      };
    };
  };

  return result_1694499038[0];

}

function nuctoUTF8(c_788529546) {
  var result_788529547 = [];

    result_788529547 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_788529549 = c_788529546;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 127)) {
    if (result_788529547.length < 1) { for (var i = result_788529547.length; i < 1; ++i) result_788529547.push(0); }
         else {result_788529547.length = 1; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(iHEX60gensym21_788529549, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2047)) {
    if (result_788529547.length < 2) { for (var i = result_788529547.length; i < 2; ++i) result_788529547.push(0); }
         else {result_788529547.length = 2; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 6) | 192), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 65535)) {
    if (result_788529547.length < 3) { for (var i = result_788529547.length; i < 3; ++i) result_788529547.push(0); }
         else {result_788529547.length = 3; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 12) | 224), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2097151)) {
    if (result_788529547.length < 4) { for (var i = result_788529547.length; i < 4; ++i) result_788529547.push(0); }
         else {result_788529547.length = 4; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 18) | 240), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 67108863)) {
    if (result_788529547.length < 5) { for (var i = result_788529547.length; i < 5; ++i) result_788529547.push(0); }
         else {result_788529547.length = 5; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 24) | 248), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2147483647)) {
    if (result_788529547.length < 6) { for (var i = result_788529547.length; i < 6; ++i) result_788529547.push(0); }
         else {result_788529547.length = 6; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 30) | 252), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 24) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(5, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_788529547;

}

function parseString_1694499049(my_1694499050) {
  var result_1694499051 = 0;

    result_1694499051 = 2;
    var pos_1694499052 = [addInt(my_1694499050.bufpos, 1)];
    if (my_1694499050.rawStringLiterals) {
    addChar(my_1694499050.a, 34);;
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]) {
          case 0:
            my_1694499050.err = 7;
            result_1694499051 = 0;
            break Label1;
            break;
          case 34:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 34);;
            }
            
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break Label1;
            break;
          case 92:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 92);;
            }
            
            switch (my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]) {
            case 92:
            case 34:
            case 39:
            case 47:
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 98:
              addChar(my_1694499050.a, 8);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 102:
              addChar(my_1694499050.a, 12);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 110:
              addChar(my_1694499050.a, 10);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 114:
              addChar(my_1694499050.a, 13);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 116:
              addChar(my_1694499050.a, 9);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 118:
              addChar(my_1694499050.a, 11);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 117:
              if (my_1694499050.rawStringLiterals) {
              addChar(my_1694499050.a, 117);;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var pos2_1694499098 = pos_1694499052[0];
              var r_1694499099 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((r_1694499099 < 0)) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              if (((r_1694499099 & 64512) == 55296)) {
              if ((!((my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)] == 92)) || !((my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)] == 117)))) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var s_1694499105 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((((s_1694499105 & 64512) == 56320) && (0 < s_1694499105))) {
              r_1694499099 = addInt(65536, ((subInt(r_1694499099, 55296) << 10) | subInt(s_1694499105, 56320)));
              }
              else {
                my_1694499050.err = 1;
                break Label1;
              }
              
              }
              
              if (my_1694499050.rawStringLiterals) {
              var length_1694499110 = subInt(pos_1694499052[0], pos2_1694499098);
              Label3: {
                var i_1694499115 = 0;
                var res_2969583465 = 1;
                Label4: {
                    Label5: while (true) {
                    if (!(res_2969583465 <= length_1694499110)) break Label5;
                      i_1694499115 = res_2969583465;
                      if ((ConstSet192[my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]] != undefined)) {
                      addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]);;
                      pos2_1694499098 = addInt(pos2_1694499098, 1);
                      }
                      else {
                        break Label3;
                      }
                      
                      res_2969583465 = addInt(res_2969583465, 1);
                    }
                };
              };
              }
              else {
              my_1694499050.a.push.apply(my_1694499050.a, nuctoUTF8(((r_1694499099) | 0)));;
              }
              
              break;
            default: 
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 1);
              break;
            }
            break;
          case 13:
            pos_1694499052[0] = handleCR_1644167259(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 13);;
            break;
          case 10:
            pos_1694499052[0] = handleLF_1644167273(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 10);;
            break;
          default: 
            addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break;
          }
        }
    };
    my_1694499050.bufpos = pos_1694499052[0];

  return result_1694499051;

}

function parseName_1694499254(my_1694499255) {
    var pos_1694499256 = my_1694499255.bufpos;
    if ((ConstSet193[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet194[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) break Label2;
          addChar(my_1694499255.a, my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]);;
          pos_1694499256 = addInt(pos_1694499256, 1);
        }
    };
    }
    
    my_1694499255.bufpos = pos_1694499256;

  
}

function getTok_1694499270(my_1694499271) {
  var result_1694499272 = 0;

    if (my_1694499271.a.length < 0) { for (var i = my_1694499271.a.length; i < 0; ++i) my_1694499271.a.push(0); }
         else {my_1694499271.a.length = 0; };
    skip_1694499153(my_1694499271);
    switch (my_1694499271.buf[chckIndx(my_1694499271.bufpos, 0, (my_1694499271.buf).length - 1)]) {
    case 45:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      parseNumber_1694499191(my_1694499271);
      if (contains_855639881(my_1694499271.a, ConstSet191)) {
      result_1694499272 = 4;
      }
      else {
        result_1694499272 = 3;
      }
      
      break;
    case 34:
      result_1694499272 = parseString_1694499049(my_1694499271);
      break;
    case 91:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 10;
      break;
    case 123:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 8;
      break;
    case 93:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 11;
      break;
    case 125:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 9;
      break;
    case 44:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 13;
      break;
    case 58:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 12;
      break;
    case 0:
      result_1694499272 = 1;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 95:
      parseName_1694499254(my_1694499271);
      switch (toJSStr(my_1694499271.a)) {
      case "null":
        result_1694499272 = 7;
        break;
      case "true":
        result_1694499272 = 5;
        break;
      case "false":
        result_1694499272 = 6;
        break;
      default: 
        result_1694499272 = 0;
        break;
      }
      break;
    default: 
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 0;
      break;
    }
    my_1694499271.tok = result_1694499272;

  return result_1694499272;

}

function newJRawNumber_1627390037(s_1627390038) {
  var result_1627390039 = null;

    result_1627390039 = {kind: 4, str: nimCopy(null, s_1627390038, NTI33554449), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390039;

}

function parseBiggestInt_771752719(s_771752720, number_771752721, number_771752721_Idx, start_771752722) {
  var result_771752723 = 0;

    result_771752723 = npuParseBiggestInt((s_771752720.slice(start_771752722, (s_771752720).length - 1 + 1)), number_771752721, number_771752721_Idx);

  return result_771752723;

}

function nsuParseBiggestInt(s_855638874) {
  var result_855638875 = [0];

    result_855638875[0] = 0;
    var L_855638876 = parseBiggestInt_771752719(s_855638874, result_855638875, 0, 0);
    if ((!((L_855638876 == (s_855638874).length)) || (L_855638876 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638874 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638875[0];

}

function newJFloat_1627390043(n_1627390044) {
  var result_1627390045 = null;

    result_1627390045 = {kind: 3, fnum: n_1627390044, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390045;

}

function newJBool_1627390046(b_1627390047) {
  var result_1627390048 = null;

    result_1627390048 = {kind: 1, bval: b_1627390047, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390048;

}

function newJNull_1627390049() {
  var result_1627390050 = null;

    result_1627390050 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390050;

}

function invalidFormatString_855640335(formatstr_855640336) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_855640336 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1107296257(c_1107296258) {
  var result_1107296259 = 0;

    if ((ConstSet199[c_1107296258] != undefined)) {
    result_1107296259 = chckRange(addInt(c_1107296258, 32), 0, 255);
    }
    else {
      result_1107296259 = c_1107296258;
    }
    

  return result_1107296259;

}

function nsuCmpIgnoreStyle(a_855638227, b_855638228) {
          var Temporary7;
          var Temporary8;

  var result_855638229 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_855638238 = (a_855638227).length;
    var bLenHEX60gensym24_855638239 = (b_855638228).length;
    var iHEX60gensym24_855638240 = 0;
    var jHEX60gensym24_855638241 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238) && (a_855638227[iHEX60gensym24_855638240] == 95))) break Label4;
                iHEX60gensym24_855638240 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239) && (b_855638228[jHEX60gensym24_855638241] == 95))) break Label6;
                jHEX60gensym24_855638241 += 1;
              }
          };
          if ((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238)) {
          Temporary7 = toLowerAscii_1107296257(a_855638227[iHEX60gensym24_855638240]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_855638252 = Temporary7;
          if ((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239)) {
          Temporary8 = toLowerAscii_1107296257(b_855638228[jHEX60gensym24_855638241]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_855638253 = Temporary8;
          result_855638229 = (aaHEX60gensym24_855638252 - bbHEX60gensym24_855638253);
          if (!((result_855638229 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_855638238 <= iHEX60gensym24_855638240)) {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 0;
          break BeforeRet;
          }
          
          result_855638229 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_855638240 += 1;
          jHEX60gensym24_855638241 += 1;
        }
    };
  };

  return result_855638229;

}

function findNormalized_855640322(x_855640323, inArray_855640324) {
  var result_855640325 = 0;

  BeforeRet: {
    var i_855640326 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640326 < (inArray_855640324).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_855640323, inArray_855640324[chckIndx(i_855640326, 0, (inArray_855640324).length - 1)]) == 0)) {
          result_855640325 = i_855640326;
          break BeforeRet;
          }
          
          i_855640326 = addInt(i_855640326, 2);
        }
    };
    result_855640325 = -1;
    break BeforeRet;
  };

  return result_855640325;

}

function nsuAddf(s_855640339, s_855640339_Idx, formatstr_855640340, a_855640341) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_855640343 = 0;
    var num_855640344 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640343 < (formatstr_855640340).length)) break Label2;
          if (((formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 36) && (addInt(i_855640343, 1) < (formatstr_855640340).length))) {
          switch (formatstr_855640340[chckIndx(addInt(i_855640343, 1), 0, (formatstr_855640340).length - 1)]) {
          case 35:
            if (((a_855640341).length - 1 < num_855640344)) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(num_855640344, 0, (a_855640341).length - 1)]);;
            i_855640343 = addInt(i_855640343, 2);
            num_855640344 = addInt(num_855640344, 1);
            break;
          case 36:
            addChar(s_855640339[s_855640339_Idx], 36);;
            i_855640343 = addInt(i_855640343, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_855640363 = 0;
            i_855640343 = addInt(i_855640343, 1);
            var negative_855640369 = (formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640369) {
            i_855640343 = addInt(i_855640343, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_855640343 < (formatstr_855640340).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet196[formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_855640363 = subInt(addInt(mulInt(j_855640363, 10), formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]), 48);
                  i_855640343 = addInt(i_855640343, 1);
                }
            };
            if (!(negative_855640369)) {
            Temporary6 = subInt(j_855640363, 1);
            }
            else {
            Temporary6 = subInt((a_855640341).length, j_855640363);
            }
            
            var idx_855640394 = Temporary6;
            if (((idx_855640394 < 0) || ((a_855640341).length - 1 < idx_855640394))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640394, 0, (a_855640341).length - 1)]);;
            break;
          case 123:
            var j_855640398 = addInt(i_855640343, 2);
            var k_855640399 = 0;
            var negative_855640400 = (formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640400) {
            j_855640398 = addInt(j_855640398, 1);
            }
            
            var isNumber_855640406 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_855640398 < (formatstr_855640340).length) && !((ConstSet197[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet198[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)) {
                  k_855640399 = subInt(addInt(mulInt(k_855640399, 10), formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]), 48);
                  if ((isNumber_855640406 == 0)) {
                  isNumber_855640406 = 1;
                  }
                  
                  }
                  else {
                    isNumber_855640406 = -1;
                  }
                  
                  j_855640398 = addInt(j_855640398, 1);
                }
            };
            if ((isNumber_855640406 == 1)) {
            if (!(negative_855640400)) {
            Temporary9 = subInt(k_855640399, 1);
            }
            else {
            Temporary9 = subInt((a_855640341).length, k_855640399);
            }
            
            var idx_855640429 = Temporary9;
            if (((idx_855640429 < 0) || ((a_855640341).length - 1 < idx_855640429))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640429, 0, (a_855640341).length - 1)]);;
            }
            else {
              var x_855640433 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 2), subInt(j_855640398, 1)), a_855640341);
              if (((0 <= x_855640433) && (x_855640433 < (a_855640341).length - 1))) {
              s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640433, 1), 0, (a_855640341).length - 1)]);;
              }
              else {
              invalidFormatString_855640335(formatstr_855640340);
              }
              
            }
            
            i_855640343 = addInt(j_855640398, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_855640437 = addInt(i_855640343, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_855640437 < (formatstr_855640340).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet200[formatstr_855640340[chckIndx(j_855640437, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_855640437 = addInt(j_855640437, 1);
                }
            };
            var x_855640447 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 1), subInt(j_855640437, 1)), a_855640341);
            if (((0 <= x_855640447) && (x_855640447 < (a_855640341).length - 1))) {
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640447, 1), 0, (a_855640341).length - 1)]);;
            }
            else {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            i_855640343 = j_855640437;
            break;
          default: 
            invalidFormatString_855640335(formatstr_855640340);
            break;
          }
          }
          else {
            addChar(s_855640339[s_855640339_Idx], formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]);;
            i_855640343 = addInt(i_855640343, 1);
          }
          
        }
    };

  
}

function nsuFormatOpenArray(formatstr_855640457, a_855640458) {
  var result_855640459 = [[]];

    result_855640459[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_855640459, 0, formatstr_855640457, a_855640458);

  return result_855640459[0];

}

function getLine_1694499013(my_1694499014) {
  var result_1694499015 = 0;

    result_1694499015 = my_1694499014.lineNumber;

  return result_1694499015;

}

function getColNumber_1644167331(L_1644167332, pos_1644167333) {
  var result_1644167334 = 0;

    result_1644167334 = absInt(subInt(pos_1644167333, L_1644167332.lineStart));

  return result_1644167334;

}

function getColumn_1694499010(my_1694499011) {
  var result_1694499012 = 0;

    result_1694499012 = getColNumber_1644167331(my_1694499011, my_1694499011.bufpos);

  return result_1694499012;

}

function errorMsgExpected_1694499031(my_1694499032, e_1694499033) {
  var result_1694499034 = [];

    result_1694499034 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1694499032.filename, NTI33554449), HEX24_369098760(getLine_1694499013(my_1694499032)), HEX24_369098760(getColumn_1694499010(my_1694499032)), (e_1694499033 || []).concat([32,101,120,112,101,99,116,101,100] || [])]), NTI33554449);

  return result_1694499034;

}

function raiseParseErr_1694499432(p_1694499433, msg_1694499434) {
    raiseException({message: errorMsgExpected_1694499031(p_1694499433, msg_1694499434), parent: null, m_type: NTI1694498825, name: null, trace: [], up: null}, "JsonParsingError");

  
}

function eat_1694499454(p_1694499455, tok_1694499456) {
    if ((p_1694499455.tok == tok_1694499456)) {
    var _ = getTok_1694499270(p_1694499455);
    }
    else {
    raiseParseErr_1694499432(p_1694499455, tokToStr_1694498894[chckIndx(tok_1694499456, 0, (tokToStr_1694498894).length - 1)]);
    }
    

  
}

function add_1627390190(father_1627390191, child_1627390192) {
    var Temporary1;

    if (!((father_1627390191.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,48,49,44,32,51,41,32,96,102,97,116,104,101,114,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = father_1627390191;
    if (ConstSet201[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    Temporary1.elems.push(child_1627390192);;

  
}

function parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, depth_1627395215) {
      var Temporary1;

  var result_1627395216 = null;

    switch (p_1627395212.tok) {
    case 2:
      result_1627395216 = {kind: 4, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
      var Temporary1 = result_1627395216;
      if (ConstSet195[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      Temporary1.str = p_1627395212.a;
      p_1627395212.a = nimCopy(null, [], NTI33554449);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 3:
      if (rawIntegers_1627395213) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJInt_1627390040(nsuParseBiggestInt(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 4:
      if (rawFloats_1627395214) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJFloat_1627390043(nsuParseFloat(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 5:
      result_1627395216 = newJBool_1627390046(true);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 6:
      result_1627395216 = newJBool_1627390046(false);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 7:
      result_1627395216 = newJNull_1627390049();
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 8:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [125]);
      }
      
      result_1627395216 = newJObject_1627390051();
      var _ = getTok_1694499270(p_1627395212);
      Label4: {
          Label5: while (true) {
          if (!!((p_1627395212.tok == 9))) break Label5;
            if (!((p_1627395212.tok == 2))) {
            raiseParseErr_1694499432(p_1627395212, [115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,97,115,32,107,101,121]);
            }
            
            var key_1627395225 = nimCopy(null, p_1627395212.a, NTI33554449);
            var _ = getTok_1694499270(p_1627395212);
            eat_1694499454(p_1627395212, 12);
            var val_1627395226 = parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1));
            HEX5BHEX5DHEX3D_1627391903(result_1627395216, key_1627395225, val_1627395226);
            if (!((p_1627395212.tok == 13))) {
            break Label4;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 9);
      break;
    case 10:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [93]);
      }
      
      result_1627395216 = newJArray_1627390082();
      var _ = getTok_1694499270(p_1627395212);
      Label6: {
          Label7: while (true) {
          if (!!((p_1627395212.tok == 11))) break Label7;
            add_1627390190(result_1627395216, parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1)));
            if (!((p_1627395212.tok == 13))) {
            break Label6;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 11);
      break;
    case 0:
    case 9:
    case 11:
    case 12:
    case 13:
    case 1:
      raiseParseErr_1694499432(p_1627395212, [123]);
      break;
    }

  return result_1627395216;

}

function close_1660944441(s_1660944442) {
    if ((!((s_1660944442 == null)) && !((s_1660944442.closeImpl == null)))) {
    s_1660944442.closeImpl(s_1660944442);
    }
    

  
}

function close_1644167182(L_1644167183) {
    close_1660944441(L_1644167183.input);

  
}

function close_1694498967(my_1694498968) {
    close_1644167182(my_1694498968);

  
}

function handleUnknownPopupAction_1291848841(self_1291848842, popup_1291848843, action_1291848844, arg_1291848845) {
  var result_1291848846 = 0;

  BeforeRet: {
++excHandler;
    try {
    var args_1291848847 = newJArray_1627390082();
    Label2: {
      var a_1291848848 = null;
      var colontmp__2969583425 = null;
      colontmp__2969583425 = newStringStream_1660945417(arg_1291848845);
      var p_2969583427 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_2969583427[0], colontmp__2969583425, [], false);
      try {
      var _ = getTok_1694499270(p_2969583427[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_2969583427[0].tok == 1))) break Label5;
            a_1291848848 = parseJson_1627395211(p_2969583427[0], false, false, 0);
            add_1627390190(args_1291848847, a_1291848848);
          }
      };
      } finally {
      close_1694498967(p_2969583427[0]);
      }
    };
    if (handleUnknownPopupAction_2751463448(self_1291848842.scriptContext, popup_1291848843, action_1291848844, args_1291848847)) {
    result_1291848846 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848853 = [mnewString(0)];
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,80,111,112,117,112,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848853, 0, action_1291848844, []);
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [32]);;
    formatValue_721420459(fmtRes_1291848853, 0, arg_1291848845, []);
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848853, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848853[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848846 = 0;
    break BeforeRet;
  };

  return result_1291848846;

}

function handleAction_3170894232(self_3170894233, action_3170894234, arg_3170894235) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3170894236 = 0;

  BeforeRet: {
    switch (toJSStr(action_3170894234)) {
    case "accept":
      if ((self_3170894233.selected < (self_3170894233.completions).length)) {
      var Temporary1 = self_3170894233.completions[chckIndx(self_3170894233.selected, 0, (self_3170894233.completions).length - 1)];
      if (ConstSet184[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2969568616)); }
      self_3170894233.handleSymbolSelected(Temporary1.id);
      }
      
      popPopup_1291849115(self_3170894233.editor, self_3170894233);
      break;
    case "cancel":
      popPopup_1291849115(self_3170894233.editor, self_3170894233);
      break;
    case "prev":
      if (((self_3170894233.completions).length == 0)) {
      Temporary2 = 0;
      }
      else {
      Temporary2 = modInt(subInt(addInt(self_3170894233.selected, (self_3170894233.completions).length), 1), (self_3170894233.completions).length);
      }
      
      self_3170894233.selected = Temporary2;
      break;
    case "next":
      if (((self_3170894233.completions).length == 0)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = modInt(addInt(self_3170894233.selected, 1), (self_3170894233.completions).length);
      }
      
      self_3170894233.selected = Temporary3;
      break;
    default: 
      result_3170894236 = handleUnknownPopupAction_1291848841(self_3170894233.editor, self_3170894233, action_3170894234, arg_3170894235);
      break BeforeRet;
      break;
    }
    result_3170894236 = 3;
    break BeforeRet;
  };

  return result_3170894236;

}

function newGotoPopup_3170894348(editor_3170894349, document_3170894350) {
    
function HEX3Aanonymous_3170894383(doc_3170894384) {
        handleTextChanged_3170894266(popup_3170894352);

      
    }
      
function HEX3Aanonymous_3170894432(actionHEX60gensym9HEX60gensym10_3170894433, argHEX60gensym9HEX60gensym10_3170894434) {
        var result_3170894435 = 0;

        BeforeRet: {
          if (handlerHEX60gensym9_3170894420.config.handleActions) {
          var action_3170894436 = nimCopy(null, actionHEX60gensym9HEX60gensym10_3170894433, NTI33554449);
          var arg_3170894437 = nimCopy(null, argHEX60gensym9HEX60gensym10_3170894434, NTI33554449);
          var responseHEX60gensym9HEX60gensym10_3170894438 = handleAction_3170894232(popup_3170894352, action_3170894436, arg_3170894437);
          if (handlerHEX60gensym9_3170894420.config.consumeAllActions) {
          result_3170894435 = 3;
          break BeforeRet;
          }
          
          result_3170894435 = responseHEX60gensym9HEX60gensym10_3170894438;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym9_3170894420.config.consumeAllActions) {
          result_3170894435 = 3;
          break BeforeRet;
          }
          else {
            result_3170894435 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3170894435;

      }
      
function HEX3Aanonymous_3170894440(inputHEX60gensym9HEX60gensym11_3170894441) {
        var result_3170894442 = 0;

        BeforeRet: {
          if (handlerHEX60gensym9_3170894420.config.handleInputs) {
          var input_3170894443 = nimCopy(null, inputHEX60gensym9HEX60gensym11_3170894441, NTI33554449);
          result_3170894442 = 1;
          break BeforeRet;
          }
          else {
            result_3170894442 = 1;
            break BeforeRet;
          }
          
        };

        return result_3170894442;

      }

  var result_3170894351 = null;

  BeforeRet: {
    var popup_3170894352 = {editor: editor_3170894349, document: document_3170894350, m_type: NTI3170893828, textEditor: null, selected: 0, completions: [], handleSymbolSelected: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3170894352.textEditor = newTextEditor_2818594007(newTextDocument_2818579086([], [], false), editor_3170894349);
    setMode_2818584221(popup_3170894352.textEditor, [105,110,115,101,114,116]);
    popup_3170894352.textEditor.renderHeader = false;
    popup_3170894352.textEditor.lineNumbers = nimCopy(popup_3170894352.textEditor.lineNumbers, some_3170894358(0), NTI2818572554);
    popup_3170894352.textEditor.document.singleLine = true;
    var _ = subscribe_2818594055(popup_3170894352.textEditor.document.textChanged, HEX3Aanonymous_3170894383);
    Label1: {
      var handlerHEX60gensym9_3170894420 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym9_3170894420.config = getEventHandlerConfig_1291849162(editor_3170894349, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]);
      handlerHEX60gensym9_3170894420.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(editor_3170894349, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]));
      handlerHEX60gensym9_3170894420.handleAction = HEX3Aanonymous_3170894432;
      handlerHEX60gensym9_3170894420.handleInput = HEX3Aanonymous_3170894440;
    };
    popup_3170894352.eventHandler = handlerHEX60gensym9_3170894420;
    updateCompletions_3170894072(popup_3170894352);
    result_3170894351 = popup_3170894352;
    break BeforeRet;
  };

  return result_3170894351;

}

function init_2483028018(self_2483028019) {
    self_2483028019.id = newEditorId_2449473851();

  
}

function subscribe_1291848997(event_1291848999, callback_1291849000) {
  var result_1291849001 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291849001 = nimCopy(result_1291849001, newId_2046820597(), NTI2046820355);
    event_1291848999.handlers.push({Field0: nimCopy(null, result_1291849001, NTI2046820355), Field1: callback_1291849000});;

  return result_1291849001;

}

function pushPopup_1291849060(self_1291849061, popup_1291849062) {
    
function HEX3Aanonymous_1291849078() {
        requestRender_2768240746(self_1291849061.platform, false);

      
    }

    init_2483028018(popup_1291849062);
    self_1291849061.popups.push(popup_1291849062);;
    var _ = subscribe_1291848997(popup_1291849062.onMarkedDirty, HEX3Aanonymous_1291849078);
    requestRender_2768240746(self_1291849061.platform, false);

  
}

function goto_2969582488(self_2969582489, where_2969582490) {
        var Temporary1;
      var Temporary2;
        var Temporary4;
        
function HEX3Aanonymous_2969582534(n_2969582537) {
          var result_2969582540 = false;

            result_2969582540 = (!((n_2969582537 == node_2969569717(self_2969582489))) && (HEX3DHEX3D_2046820626(n_2969582537.id, id_2969582533) || HEX3DHEX3D_2046820626(n_2969582537.reff, id_2969582533)));

          return result_2969582540;

        }
                  var Temporary10;
                  var Temporary11;
        var Temporary13;
                var Temporary17;
        
function HEX3Aanonymous_2969582561(n_2969582564) {
          var result_2969582567 = false;

            result_2969582567 = (!((n_2969582564 == node_2969569717(self_2969582489))) && (computeType_3019912985(ctx_2969567287, n_2969582564, true).kind == 0));

          return result_2969582567;

        }
                  var Temporary23;
                  var Temporary24;
                var Temporary28;
        
function HEX3Aanonymous_2969582587(n_2969582590) {
          var result_2969582593 = false;

            result_2969582593 = !((n_2969582590 == node_2969569717(self_2969582489)));

          return result_2969582593;

        }
                  var Temporary38;
                  var Temporary39;
                var Temporary43;
      
function HEX3Aanonymous_2969583211(id_2969583212) {
            var Temporary1;
            var Temporary2;

            var oHEX60gensym900_2969583215 = getAstNode_3019905737(ctx_2969567287, id_2969583212);
            if (!isSome_3003123546(oHEX60gensym900_2969583215)) Temporary2 = false; else {              var node_2969583238 = get_3003123566(oHEX60gensym900_2969583215);
              Temporary2 = true;            }            if (!Temporary2) Temporary1 = false; else {              Temporary1 = (base_3003121758(node_2969583238) == self_2969582489.document.rootNode);            }          if (Temporary1) {
          nodeHEX3D_2969570879(self_2969582489, node_2969583238);
          }
          

        
      }

  BeforeRet: {
    if (isEditing_2969575204(self_2969582489)) {
    break BeforeRet;
    }
    
    switch (toJSStr(where_2969582490)) {
    case "definition":
        var oHEX60gensym883_2969582493 = computeSymbol_3019918905(ctx_2969567287, node_2969569717(self_2969582489), true);
        if (!isSome_3087009352(oHEX60gensym883_2969582493)) Temporary1 = false; else {          var sym_2969582516 = get_3087009372(oHEX60gensym883_2969582493);
          Temporary1 = true;        }      if (Temporary1) {
      if (((sym_2969582516.kind == 0) && !((sym_2969582516.node == self_2969582489.document.rootNode)))) {
      var Temporary2 = sym_2969582516;
      if (ConstSet183[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      nodeHEX3D_2969570879(self_2969582489, Temporary2.node);
      }
      
      }
      
      break;
    case "next-usage":
      Label3: {
        var expr_2969582525 = node_2969569717(self_2969582489);
        var pos_2969582526 = 0;
        var _ = pos_2969582526;
        if ((expr_2969582525.kind == 1)) {
        Temporary4 = node_2969569717(self_2969582489).reff;
        }
        else {
        Temporary4 = node_2969569717(self_2969582489).id;
        }
        
      };
      var id_2969582533 = nimCopy(null, Temporary4, NTI2046820355);
      Label5: {
        var __2969582545 = 0;
        var n_2969582546 = null;
        var colontmp__2969583321 = null;
        var colontmp__2969583322 = null;
        colontmp__2969583321 = node_2969569717(self_2969582489);
        colontmp__2969583322 = HEX3Aanonymous_2969582534;
        var i_2969583323 = 0;
        Label6: {
          var __2969583325 = 0;
          var child_2969583326 = null;
          var n_2969583327 = colontmp__2969583321;
          var idx_2969583328 = -1;
          var i_2969583329 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2969583328 == -1)) {
                __2969583325 = i_2969583329;
                child_2969583326 = n_2969583327;
                if (colontmp__2969583322(child_2969583326)) {
                __2969582545 = i_2969583323;
                n_2969582546 = child_2969583326;
                nodeHEX3D_2969570879(self_2969582489, n_2969582546);
                break Label5;
                i_2969583323 = addInt(i_2969583323, 1);
                }
                
                }
                
                if ((addInt(idx_2969583328, 1) < len_3003121752(n_2969583327))) {
                n_2969583327 = HEX5BHEX5D_3003121748(n_2969583327, addInt(idx_2969583328, 1));
                idx_2969583328 = -1;
                }
                else {
                  var oHEX60gensym55_2969583331 = next_3003121857(n_2969583327);
                  if (!isSome_3003123546(oHEX60gensym55_2969583331)) Temporary11 = false; else {                    var ne_2969583332 = get_3003123566(oHEX60gensym55_2969583331);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2969583327 == null));                  }                if (Temporary10) {
                n_2969583327 = ne_2969583332;
                idx_2969583328 = -1;
                }
                else {
                if (((!((n_2969583327.parent == null)) && !((n_2969583327 == null))) && !((n_2969583327.parent == null)))) {
                idx_2969583328 = index_3003121772(n_2969583327);
                n_2969583327 = n_2969583327.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2969583329 = addInt(i_2969583329, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-usage":
      Label12: {
        var expr_2969582547 = node_2969569717(self_2969582489);
        var pos_2969582548 = 0;
        var _ = pos_2969582548;
        if ((expr_2969582547.kind == 1)) {
        Temporary13 = node_2969569717(self_2969582489).reff;
        }
        else {
        Temporary13 = node_2969569717(self_2969582489).id;
        }
        
      };
      var id_2969582555 = nimCopy(null, Temporary13, NTI2046820355);
      Label14: {
        var n_2969582556 = null;
        var colontmp__2969583335 = null;
        colontmp__2969583335 = node_2969569717(self_2969582489);
        var idx_2969583336 = 0;
        var n_2969583337 = colontmp__2969583335;
        Label15: {
            Label16: while (true) {
            if (!!((n_2969583337 == null))) break Label16;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583337), 1)), subInt(idx_2969583336, 1))) {
              n_2969583337 = HEX5BHEX5D_3003121748(n_2969583337, subInt(idx_2969583336, 1));
              idx_2969583336 = len_3003121752(n_2969583337);
              }
              else {
                var oHEX60gensym74_2969583339 = prev_3003121903(n_2969583337);
                if (!isSome_3003123546(oHEX60gensym74_2969583339)) Temporary17 = false; else {                  var ne_2969583340 = get_3003123566(oHEX60gensym74_2969583339);
                  Temporary17 = true;                }              if (Temporary17) {
              n_2969582556 = n_2969583337;
              if ((!((n_2969582556 == node_2969569717(self_2969582489))) && (HEX3DHEX3D_2046820626(n_2969582556.id, id_2969582555) || HEX3DHEX3D_2046820626(n_2969582556.reff, id_2969582555)))) {
              nodeHEX3D_2969570879(self_2969582489, n_2969582556);
              break Label14;
              }
              
              n_2969583337 = ne_2969583340;
              idx_2969583336 = len_3003121752(n_2969583337);
              }
              else {
                n_2969582556 = n_2969583337;
                if ((!((n_2969582556 == node_2969569717(self_2969582489))) && (HEX3DHEX3D_2046820626(n_2969582556.id, id_2969582555) || HEX3DHEX3D_2046820626(n_2969582556.reff, id_2969582555)))) {
                nodeHEX3D_2969570879(self_2969582489, n_2969582556);
                break Label14;
                }
                
                idx_2969583336 = index_3003121772(n_2969583337);
                n_2969583337 = n_2969583337.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error":
      Label18: {
        var __2969582576 = 0;
        var n_2969582577 = null;
        var colontmp__2969583342 = null;
        var colontmp__2969583343 = null;
        colontmp__2969583342 = node_2969569717(self_2969582489);
        colontmp__2969583343 = HEX3Aanonymous_2969582561;
        var i_2969583344 = 0;
        Label19: {
          var __2969583346 = 0;
          var child_2969583347 = null;
          var n_2969583348 = colontmp__2969583342;
          var idx_2969583349 = -1;
          var i_2969583350 = 0;
          Label20: {
              Label21: while (true) {
              if (!true) break Label21;
                try {
                if ((idx_2969583349 == -1)) {
                __2969583346 = i_2969583350;
                child_2969583347 = n_2969583348;
                if (colontmp__2969583343(child_2969583347)) {
                __2969582576 = i_2969583344;
                n_2969582577 = child_2969583347;
                nodeHEX3D_2969570879(self_2969582489, n_2969582577);
                break Label18;
                i_2969583344 = addInt(i_2969583344, 1);
                }
                
                }
                
                if ((addInt(idx_2969583349, 1) < len_3003121752(n_2969583348))) {
                n_2969583348 = HEX5BHEX5D_3003121748(n_2969583348, addInt(idx_2969583349, 1));
                idx_2969583349 = -1;
                }
                else {
                  var oHEX60gensym55_2969583352 = next_3003121857(n_2969583348);
                  if (!isSome_3003123546(oHEX60gensym55_2969583352)) Temporary24 = false; else {                    var ne_2969583353 = get_3003123566(oHEX60gensym55_2969583352);
                    Temporary24 = true;                  }                  if (!Temporary24) Temporary23 = false; else {                    Temporary23 = !((n_2969583348 == null));                  }                if (Temporary23) {
                n_2969583348 = ne_2969583353;
                idx_2969583349 = -1;
                }
                else {
                if (((!((n_2969583348.parent == null)) && !((n_2969583348 == null))) && !((n_2969583348.parent == null)))) {
                idx_2969583349 = index_3003121772(n_2969583348);
                n_2969583348 = n_2969583348.parent;
                }
                else {
                  break Label20;
                }
                }}
                } finally {
                i_2969583350 = addInt(i_2969583350, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error":
      Label25: {
        var n_2969582578 = null;
        var colontmp__2969583355 = null;
        colontmp__2969583355 = node_2969569717(self_2969582489);
        var idx_2969583356 = 0;
        var n_2969583357 = colontmp__2969583355;
        Label26: {
            Label27: while (true) {
            if (!!((n_2969583357 == null))) break Label27;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583357), 1)), subInt(idx_2969583356, 1))) {
              n_2969583357 = HEX5BHEX5D_3003121748(n_2969583357, subInt(idx_2969583356, 1));
              idx_2969583356 = len_3003121752(n_2969583357);
              }
              else {
                var oHEX60gensym74_2969583359 = prev_3003121903(n_2969583357);
                if (!isSome_3003123546(oHEX60gensym74_2969583359)) Temporary28 = false; else {                  var ne_2969583360 = get_3003123566(oHEX60gensym74_2969583359);
                  Temporary28 = true;                }              if (Temporary28) {
              n_2969582578 = n_2969583357;
              if ((!((n_2969582578 == node_2969569717(self_2969582489))) && (computeType_3019912985(ctx_2969567287, n_2969582578, true).kind == 0))) {
              nodeHEX3D_2969570879(self_2969582489, n_2969582578);
              break Label25;
              }
              
              n_2969583357 = ne_2969583360;
              idx_2969583356 = len_3003121752(n_2969583357);
              }
              else {
                n_2969582578 = n_2969583357;
                if ((!((n_2969582578 == node_2969569717(self_2969582489))) && (computeType_3019912985(ctx_2969567287, n_2969582578, true).kind == 0))) {
                nodeHEX3D_2969570879(self_2969582489, n_2969582578);
                break Label25;
                }
                
                idx_2969583356 = index_3003121772(n_2969583357);
                n_2969583357 = n_2969583357.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error-diagnostic":
      Label29: {
        var __2969582598 = 0;
        var n_2969582599 = null;
        var colontmp__2969583374 = null;
        var colontmp__2969583375 = null;
        colontmp__2969583374 = node_2969569717(self_2969582489);
        colontmp__2969583375 = HEX3Aanonymous_2969582587;
        var i_2969583376 = 0;
        Label30: {
          var __2969583378 = 0;
          var child_2969583379 = null;
          var n_2969583380 = colontmp__2969583374;
          var idx_2969583381 = -1;
          var i_2969583382 = 0;
          Label31: {
              Label32: while (true) {
              if (!true) break Label32;
                try {
                if ((idx_2969583381 == -1)) {
                __2969583378 = i_2969583382;
                child_2969583379 = n_2969583380;
                if (colontmp__2969583375(child_2969583379)) {
                __2969582598 = i_2969583376;
                n_2969582599 = child_2969583379;
                if (contains_3019940956(ctx_2969567287.diagnosticsPerNode, n_2969582599.id)) {
                var found_2969582663 = false;
                Label34: {
                  var diags_2969583047 = [];
                  var colontmp__2969583363 = ({data: [], counter: 0});
                  colontmp__2969583363 = nimCopy(colontmp__2969583363, HEX5BHEX5D_3019937598(ctx_2969567287.diagnosticsPerNode, n_2969582599.id).queries, NTI3019898894);
                  var L_2969583368 = len_2969582810(colontmp__2969583363);
                  Label35: {
                    var h_2969583370 = 0;
                    var colontmp__2969583371 = 0;
                    colontmp__2969583371 = (colontmp__2969583363.data).length - 1;
                    var res_2969583372 = 0;
                    Label36: {
                        Label37: while (true) {
                        if (!(res_2969583372 <= colontmp__2969583371)) break Label37;
                          h_2969583370 = res_2969583372;
                          if (isFilled_1308622880(colontmp__2969583363.data[chckIndx(h_2969583370, 0, (colontmp__2969583363.data).length - 1)].Field0)) {
                          diags_2969583047 = colontmp__2969583363.data[chckIndx(h_2969583370, 0, (colontmp__2969583363.data).length - 1)]["Field2"];
                          if ((0 < (diags_2969583047).length)) {
                          found_2969582663 = true;
                          }
                          
                          if (!((len_2969582810(colontmp__2969583363) == L_2969583368))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2969583372 = addInt(res_2969583372, 1);
                        }
                    };
                  };
                };
                if (found_2969582663) {
                nodeHEX3D_2969570879(self_2969582489, n_2969582599);
                }
                
                break Label29;
                }
                
                i_2969583376 = addInt(i_2969583376, 1);
                }
                
                }
                
                if ((addInt(idx_2969583381, 1) < len_3003121752(n_2969583380))) {
                n_2969583380 = HEX5BHEX5D_3003121748(n_2969583380, addInt(idx_2969583381, 1));
                idx_2969583381 = -1;
                }
                else {
                  var oHEX60gensym55_2969583384 = next_3003121857(n_2969583380);
                  if (!isSome_3003123546(oHEX60gensym55_2969583384)) Temporary39 = false; else {                    var ne_2969583385 = get_3003123566(oHEX60gensym55_2969583384);
                    Temporary39 = true;                  }                  if (!Temporary39) Temporary38 = false; else {                    Temporary38 = !((n_2969583380 == null));                  }                if (Temporary38) {
                n_2969583380 = ne_2969583385;
                idx_2969583381 = -1;
                }
                else {
                if (((!((n_2969583380.parent == null)) && !((n_2969583380 == null))) && !((n_2969583380.parent == null)))) {
                idx_2969583381 = index_3003121772(n_2969583380);
                n_2969583380 = n_2969583380.parent;
                }
                else {
                  break Label31;
                }
                }}
                } finally {
                i_2969583382 = addInt(i_2969583382, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error-diagnostic":
      Label40: {
        var n_2969583051 = null;
        var colontmp__2969583396 = null;
        colontmp__2969583396 = node_2969569717(self_2969582489);
        var idx_2969583397 = 0;
        var n_2969583398 = colontmp__2969583396;
        Label41: {
            Label42: while (true) {
            if (!!((n_2969583398 == null))) break Label42;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583398), 1)), subInt(idx_2969583397, 1))) {
              n_2969583398 = HEX5BHEX5D_3003121748(n_2969583398, subInt(idx_2969583397, 1));
              idx_2969583397 = len_3003121752(n_2969583398);
              }
              else {
                var oHEX60gensym74_2969583400 = prev_3003121903(n_2969583398);
                if (!isSome_3003123546(oHEX60gensym74_2969583400)) Temporary43 = false; else {                  var ne_2969583401 = get_3003123566(oHEX60gensym74_2969583400);
                  Temporary43 = true;                }              if (Temporary43) {
              n_2969583051 = n_2969583398;
              Label44: {
                if ((n_2969583051 == node_2969569717(self_2969582489))) {
                break Label44;
                }
                
                if (contains_3019940956(ctx_2969567287.diagnosticsPerNode, n_2969583051.id)) {
                var found_2969583119 = false;
                Label45: {
                  var diags_2969583206 = [];
                  var colontmp__2969583389 = ({data: [], counter: 0});
                  colontmp__2969583389 = nimCopy(colontmp__2969583389, HEX5BHEX5D_3019937598(ctx_2969567287.diagnosticsPerNode, n_2969583051.id).queries, NTI3019898894);
                  var L_2969583390 = len_2969582810(colontmp__2969583389);
                  Label46: {
                    var h_2969583392 = 0;
                    var colontmp__2969583393 = 0;
                    colontmp__2969583393 = (colontmp__2969583389.data).length - 1;
                    var res_2969583394 = 0;
                    Label47: {
                        Label48: while (true) {
                        if (!(res_2969583394 <= colontmp__2969583393)) break Label48;
                          h_2969583392 = res_2969583394;
                          if (isFilled_1308622880(colontmp__2969583389.data[chckIndx(h_2969583392, 0, (colontmp__2969583389.data).length - 1)].Field0)) {
                          diags_2969583206 = colontmp__2969583389.data[chckIndx(h_2969583392, 0, (colontmp__2969583389.data).length - 1)]["Field2"];
                          if ((0 < (diags_2969583206).length)) {
                          found_2969583119 = true;
                          }
                          
                          if (!((len_2969582810(colontmp__2969583389) == L_2969583390))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2969583394 = addInt(res_2969583394, 1);
                        }
                    };
                  };
                };
                if (found_2969583119) {
                nodeHEX3D_2969570879(self_2969582489, n_2969583051);
                break Label40;
                }
                
                }
                
              };
              n_2969583398 = ne_2969583401;
              idx_2969583397 = len_3003121752(n_2969583398);
              }
              else {
                n_2969583051 = n_2969583398;
                Label49: {
                  if ((n_2969583051 == node_2969569717(self_2969582489))) {
                  break Label49;
                  }
                  
                  if (contains_3019940956(ctx_2969567287.diagnosticsPerNode, n_2969583051.id)) {
                  var found_2969583402 = false;
                  Label50: {
                    var diags_2969583403 = [];
                    var colontmp__2969583404 = ({data: [], counter: 0});
                    colontmp__2969583404 = nimCopy(colontmp__2969583404, HEX5BHEX5D_3019937598(ctx_2969567287.diagnosticsPerNode, n_2969583051.id).queries, NTI3019898894);
                    var L_2969583405 = len_2969582810(colontmp__2969583404);
                    Label51: {
                      var h_2969583406 = 0;
                      var colontmp__2969583407 = 0;
                      colontmp__2969583407 = (colontmp__2969583404.data).length - 1;
                      var res_2969583408 = 0;
                      Label52: {
                          Label53: while (true) {
                          if (!(res_2969583408 <= colontmp__2969583407)) break Label53;
                            h_2969583406 = res_2969583408;
                            if (isFilled_1308622880(colontmp__2969583404.data[chckIndx(h_2969583406, 0, (colontmp__2969583404.data).length - 1)].Field0)) {
                            diags_2969583403 = colontmp__2969583404.data[chckIndx(h_2969583406, 0, (colontmp__2969583404.data).length - 1)]["Field2"];
                            if ((0 < (diags_2969583403).length)) {
                            found_2969583402 = true;
                            }
                            
                            if (!((len_2969582810(colontmp__2969583404) == L_2969583405))) {
                            failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                            }
                            
                            }
                            
                            res_2969583408 = addInt(res_2969583408, 1);
                          }
                      };
                    };
                  };
                  if (found_2969583402) {
                  nodeHEX3D_2969570879(self_2969582489, n_2969583051);
                  break Label40;
                  }
                  
                  }
                  
                };
                idx_2969583397 = index_3003121772(n_2969583398);
                n_2969583398 = n_2969583398.parent;
              }
              }
            }
        };
      };
      break;
    case "symbol":
      var popup_2969583210 = newGotoPopup_3170894348(self_2969582489.editor, self_2969582489.document);
      popup_2969583210.handleSymbolSelected = HEX3Aanonymous_2969583211;
      pushPopup_1291849060(self_2969582489.editor, popup_2969583210);
      break;
    default: 
      break;
    }
  };

  
}

function gotoJsWrapper_2969582484(self_2969583298, where_2969583299) {
    goto_2969582488(self_2969583298, where_2969583299);

  
}
editor_ast_prototype.goto = function(where_ /* : string */) { return (gotoJsWrapper_2969582484(this, where_ == undefined ? undefined : cstrToNimstr(where_)));};

function color_2634022945(c_2634022946) {
  var result_2634022947 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022947.r = (c_2634022946.r / 255.0);
    result_2634022947.g = (c_2634022946.g / 255.0);
    result_2634022947.b = (c_2634022946.b / 255.0);
    result_2634022947.a = 1.0;

  return result_2634022947;

}

function addOutput_2969583522(self_2969583524, line_2969583525, color_2969583526) {
    if ((1500 <= (self_2969583524.lines).length)) {
    delete_2969567850(self_2969583524, "lines", HEX2EHEX2E_805306418(0, subInt((self_2969583524.lines).length, 1000)));
    }
    
    if ((0 < self_2969583524.scroll)) {
    self_2969583524.scroll = addInt(self_2969583524.scroll, 1);
    }
    
    self_2969583524.lines.push({Field0: nimCopy(null, line_2969583525, NTI33554449), Field1: color_2634022945(color_2969583526)});;

  
}

function rgb_2550136919(r_2550136920, g_2550136921, b_2550136922) {
  var result_2550136923 = ({r: 0, g: 0, b: 0});

    result_2550136923 = nimCopy(result_2550136923, {r: r_2550136920, g: g_2550136921, b: b_2550136922}, NTI2550136836);

  return result_2550136923;

}

function addFloat_33557340(result_33557342, result_33557342_Idx, x_33557343) {
    add_33556386(result_33557342, result_33557342_Idx, nimFloatToString_385876087(x_33557343));

  
}

function HEX24_33557336(x_33557338) {
  var result_33557339 = [[]];

    addFloat_33557340(result_33557339, 0, x_33557338);

  return result_33557339[0];

}

function nsuformatBiggestFloat(f_855640114, format_855640115, precision_855640116, decimalSep_855640117) {
  var result_855640118 = [];

    var precision_855640119 = precision_855640116;
    if ((precision_855640119 == -1)) {
    precision_855640119 = 6;
    }
    
    var res_855640120 = null;
    switch (format_855640115) {
    case 0:
      res_855640120 = f_855640114.toString();
      break;
    case 1:
      res_855640120 = f_855640114.toFixed(precision_855640119);
      break;
    case 2:
      res_855640120 = f_855640114.toExponential(precision_855640119);
      break;
    }
    result_855640118 = nimCopy(null, cstrToNimstr(res_855640120), NTI33554449);
    if (((1.0 / f_855640114) == -Infinity)) {
    result_855640118 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_855640120) || []), NTI33554449);
    }
    
    Label1: {
      var i_855640125 = 0;
      var colontmp__2969583752 = 0;
      colontmp__2969583752 = (result_855640118).length;
      var i_2969583753 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969583753 < colontmp__2969583752)) break Label3;
            i_855640125 = i_2969583753;
            if ((ConstSet202[result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)]] != undefined)) {
            result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)] = decimalSep_855640117;
            }
            
            i_2969583753 = addInt(i_2969583753, 1);
          }
      };
    };

  return result_855640118;

}

function nsuToUpperAsciiChar(c_855638119) {
  var result_855638120 = 0;

    if ((ConstSet204[c_855638119] != undefined)) {
    result_855638120 = (c_855638119 ^ 32);
    }
    else {
      result_855638120 = c_855638119;
    }
    

  return result_855638120;

}

function nsuToUpperAsciiStr(s_855638126) {
  var result_855638127 = [];

    result_855638127 = nimCopy(null, mnewString(chckRange((s_855638126).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_855638133 = 0;
      var colontmp__2969583756 = 0;
      colontmp__2969583756 = subInt((s_855638126).length, 1);
      var res_2969583757 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969583757 <= colontmp__2969583756)) break Label3;
            iHEX60gensym11_855638133 = res_2969583757;
            result_855638127[chckIndx(iHEX60gensym11_855638133, 0, (result_855638127).length - 1)] = nsuToUpperAsciiChar(s_855638126[chckIndx(iHEX60gensym11_855638133, 0, (s_855638126).length - 1)]);
            res_2969583757 = addInt(res_2969583757, 1);
          }
      };
    };

  return result_855638127;

}

function formatValue_2785018295(result_2785018297, result_2785018297_Idx, value_2785018298, specifier_2785018299) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2785018299).length == 0)) {
    result_2785018297[result_2785018297_Idx].push.apply(result_2785018297[result_2785018297_Idx], HEX24_33557336(value_2785018298));;
    break BeforeRet;
    }
    
    var spec_2785018303 = parseStandardFormatSpecifier_721420346(specifier_2785018299, 0, false);
    var fmode_2785018304 = 0;
    switch (spec_2785018303.typ) {
    case 101:
    case 69:
      fmode_2785018304 = 2;
      break;
    case 102:
    case 70:
      fmode_2785018304 = 1;
      break;
    case 103:
    case 71:
      fmode_2785018304 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2785018303.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2785018306 = [nsuformatBiggestFloat(value_2785018298, fmode_2785018304, chckRange(spec_2785018303.precision, -1, 32), 46)];
    var sign_2785018307 = false;
    if ((0.0 <= value_2785018298)) {
    if (!((spec_2785018303.sign == 45))) {
    sign_2785018307 = true;
    if ((value_2785018298 == 0.0)) {
    if (((1.0 / value_2785018298) == Infinity)) {
    insert_33557745(f_2785018306, 0, nimCharToStr(spec_2785018303.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2785018306, 0, nimCharToStr(spec_2785018303.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2785018307 = true;
    }
    
    if (spec_2785018303.padWithZero) {
    var signStr_2785018308 = [];
    if (sign_2785018307) {
    signStr_2785018308 = nimCopy(null, nimCharToStr(f_2785018306[0][chckIndx(0, 0, (f_2785018306[0]).length - 1)]), NTI33554449);
    f_2785018306[0] = nimCopy(null, HEX5BHEX5D_855639319(f_2785018306[0], HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    var toFill_2785018330 = subInt(subInt(spec_2785018303.minimumWidth, (f_2785018306[0]).length), (sign_2785018307 ? 1 : 0));
    if ((0 < toFill_2785018330)) {
    f_2785018306[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2785018330, 0, 2147483647)) || []).concat(f_2785018306[0] || []), NTI33554449);
    }
    
    if (sign_2785018307) {
    f_2785018306[0] = nimCopy(null, (signStr_2785018308 || []).concat(f_2785018306[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2785018303.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2785018303.align;
    }
    
    var align_2785018331 = Temporary1;
    var res_2785018332 = alignString_721420308(f_2785018306[0], spec_2785018303.minimumWidth, align_2785018331, spec_2785018303.fill);
    if ((ConstSet203[spec_2785018303.typ] != undefined)) {
    result_2785018297[result_2785018297_Idx].push.apply(result_2785018297[result_2785018297_Idx], nsuToUpperAsciiStr(res_2785018332));;
    }
    else {
    result_2785018297[result_2785018297_Idx].push.apply(result_2785018297[result_2785018297_Idx], res_2785018332);;
    }
    
  };

  
}

function ms_2080374842(seconds_2080374843) {
  var result_2080374844 = 0.0;

    result_2080374844 = (seconds_2080374843 * 1000.0);

  return result_2080374844;

}

function runSelectedFunction_2969583487(self_2969583488) {
          var Temporary3;
            var Temporary4;
          var Temporary5;

  BeforeRet: {
    if (isEditing_2969575204(self_2969583488)) {
    break BeforeRet;
    }
    
    var node_2969583489 = node_2969569717(self_2969583488);
    Label1: {
        Label2: while (true) {
        if (!!((node_2969583489.parent == null))) break Label2;
          if (((node_2969583489.parent == self_2969583488.document.rootNode) && (node_2969583489.kind == 8))) {
          var timer_2969583502 = startTimer_2080374869();
          var fmtRes_2969583507 = [mnewString(0)];
          fmtRes_2969583507[0].push.apply(fmtRes_2969583507[0], [91,97,115,116,101,100,105,116,111,114,93,32,69,120,101,99,117,116,105,110,103,32,99,97,108,108,32]);;
          formatValue_3087008586(fmtRes_2969583507, 0, node_2969583489, []);
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583507[0], NTI33554449)]);
          updateNode_3019949689(ctx_2969567287, node_2969583489);
          var result_2969583513 = computeValue_3019916118(ctx_2969567287, node_2969583489, true);
          if (!((result_2969583513.kind == 1))) {
          if ((result_2969583513.kind == 0)) {
          Temporary3 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary3 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2969583522(executionOutput_2969567286[0], HEX24_3087008494(result_2969583513), Temporary3);
          }
          
          var fmtRes_2969583554 = [mnewString(0)];
          fmtRes_2969583554[0].push.apply(fmtRes_2969583554[0], [91,97,115,116,101,100,105,116,111,114,93,32]);;
          formatValue_3087008586(fmtRes_2969583554, 0, node_2969583489, []);
          fmtRes_2969583554[0].push.apply(fmtRes_2969583554[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3137340831(fmtRes_2969583554, 0, result_2969583513, []);
          fmtRes_2969583554[0].push.apply(fmtRes_2969583554[0], [32,40,84,111,111,107,32]);;
          formatValue_2785018295(fmtRes_2969583554, 0, ms_2080374842(elapsed_2080374866(timer_2969583502)), []);
          fmtRes_2969583554[0].push.apply(fmtRes_2969583554[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583554[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if ((((node_2969583489.kind == 4) && (0 < len_3003121752(node_2969583489))) && (HEX5BHEX5D_3003121748(node_2969583489, 0).kind == 11))) {
          var functionType_2969583578 = computeType_3019912985(ctx_2969567287, node_2969583489, true);
          if ((functionType_2969583578.kind == 0)) {
          var fmtRes_2969583587 = [mnewString(0)];
          fmtRes_2969583587[0].push.apply(fmtRes_2969583587[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,58,32]);;
          formatValue_3087008586(fmtRes_2969583587, 0, node_2969583489, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583587[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if (!((functionType_2969583578.kind == 4))) {
          var fmtRes_2969583601 = [mnewString(0)];
          fmtRes_2969583601[0].push.apply(fmtRes_2969583601[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,104,97,115,32,119,114,111,110,103,32,116,121,112,101,58,32]);;
          formatValue_3087008586(fmtRes_2969583601, 0, node_2969583489, []);
          fmtRes_2969583601[0].push.apply(fmtRes_2969583601[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3019945661(fmtRes_2969583601, 0, functionType_2969583578, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583601[0], NTI33554449)]);
          break BeforeRet;
          }
          
            var Temporary4 = functionType_2969583578;
            if (ConstSet205[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
          if ((0 < (Temporary4.paramTypes).length)) {
          var fmtRes_2969583619 = [mnewString(0)];
          fmtRes_2969583619[0].push.apply(fmtRes_2969583619[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,32,100,105,114,101,99,116,108,121,32]);;
          formatValue_3087008586(fmtRes_2969583619, 0, node_2969583489, []);
          fmtRes_2969583619[0].push.apply(fmtRes_2969583619[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3019945661(fmtRes_2969583619, 0, functionType_2969583578, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583619[0], NTI33554449)]);
          break BeforeRet;
          }
          
          var fmtRes_2969583634 = [mnewString(0)];
          fmtRes_2969583634[0].push.apply(fmtRes_2969583634[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,108,108,105,110,103,32,102,117,110,99,116,105,111,110,32]);;
          formatValue_3087008586(fmtRes_2969583634, 0, node_2969583489, []);
          fmtRes_2969583634[0].push.apply(fmtRes_2969583634[0], [32,40]);;
          formatValue_3019945661(fmtRes_2969583634, 0, functionType_2969583578, []);
          fmtRes_2969583634[0].push.apply(fmtRes_2969583634[0], [41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583634[0], NTI33554449)]);
          var timer_2969583645 = startTimer_2080374869();
          var maxLoopIterations_2969583655 = getOption_2818589679(self_2969583488.editor, [97,115,116,46,109,97,120,45,108,111,111,112,45,105,116,101,114,97,116,105,111,110,115], 1000);
          var fec_2969583663 = newFunctionExecutionContext_3019907459(ctx_2969567287, {node: HEX5BHEX5D_3003121748(node_2969583489, 0), arguments: [], maxLoopIterations: some_1191184367(maxLoopIterations_2969583655), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var result_2969583664 = computeFunctionExecution_3019930710(ctx_2969567287, fec_2969583663);
          if (!((result_2969583664.kind == 1))) {
          if ((result_2969583664.kind == 0)) {
          Temporary5 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary5 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2969583522(executionOutput_2969567286[0], HEX24_3087008494(result_2969583664), Temporary5);
          }
          
          var fmtRes_2969583682 = [mnewString(0)];
          fmtRes_2969583682[0].push.apply(fmtRes_2969583682[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32]);;
          formatValue_3087008586(fmtRes_2969583682, 0, node_2969583489, []);
          fmtRes_2969583682[0].push.apply(fmtRes_2969583682[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3137340831(fmtRes_2969583682, 0, result_2969583664, []);
          fmtRes_2969583682[0].push.apply(fmtRes_2969583682[0], [32,40,84,111,111,107,32]);;
          formatValue_2785018295(fmtRes_2969583682, 0, ms_2080374842(elapsed_2080374866(timer_2969583645)), []);
          fmtRes_2969583682[0].push.apply(fmtRes_2969583682[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583682[0], NTI33554449)]);
          break BeforeRet;
          }
          
          node_2969583489 = node_2969583489.parent;
        }
    };
    var fmtRes_2969583702 = [mnewString(0)];
    fmtRes_2969583702[0].push.apply(fmtRes_2969583702[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,32,102,117,110,99,116,105,111,110,32,111,114,32,99,97,108,108,32,102,111,117,110,100,32,116,111,32,101,120,101,99,117,116,101,32,102,111,114,32]);;
    formatValue_3087008586(fmtRes_2969583702, 0, node_2969569717(self_2969583488), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583702[0], NTI33554449)]);
  };

  
}

function runSelectedFunctionJsWrapper_2969583483(self_2969583735) {
    runSelectedFunction_2969583487(self_2969583735);

  
}
editor_ast_prototype.runSelectedFunction = function() { return (runSelectedFunctionJsWrapper_2969583483(this));};

function toggleOption_2969583765(self_2969583766, name_2969583767) {
    switch (toJSStr(name_2969583767)) {
    case "logging":
      ctx_2969567287.enableLogging = !(ctx_2969567287.enableLogging);
      break;
    default: 
      break;
    }

  
}

function toggleOptionJsWrapper_2969583761(self_2969583796, name_2969583797) {
    toggleOption_2969583765(self_2969583796, name_2969583797);

  
}
editor_ast_prototype.toggleOption = function(name_ /* : string */) { return (toggleOptionJsWrapper_2969583761(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runLastCommand_2969583827(self_2969583828, which_2969583829) {
    switch (toJSStr(which_2969583829)) {
    case "":
      var _ = handleAction_2969583817(self_2969583828, self_2969583828.lastCommand["Field0"], self_2969583828.lastCommand["Field1"]);
      break;
    case "move":
      var _ = handleAction_2969583817(self_2969583828, self_2969583828.lastMoveCommand["Field0"], self_2969583828.lastMoveCommand["Field1"]);
      break;
    case "edit":
      var _ = handleAction_2969583817(self_2969583828, self_2969583828.lastEditCommand["Field0"], self_2969583828.lastEditCommand["Field1"]);
      break;
    case "other":
      var _ = handleAction_2969583817(self_2969583828, self_2969583828.lastOtherCommand["Field0"], self_2969583828.lastOtherCommand["Field1"]);
      break;
    default: 
      break;
    }

  
}

function runLastCommandJsWrapper_2969583823(self_2969583858, which_2969583859) {
    runLastCommand_2969583827(self_2969583858, which_2969583859);

  
}
editor_ast_prototype.runLastCommand = function(which_ /* : string */) { return (runLastCommandJsWrapper_2969583823(this, which_ == undefined ? undefined : cstrToNimstr(which_)));};

function HEX5BHEX5D_3087007963(node_3087007964, index_3087007965) {
  var result_3087007966 = null;

  BeforeRet: {
    result_3087007966 = node_3087007964.children[chckIndx(index_3087007965, 0, (node_3087007964.children).length - 1)];
    break BeforeRet;
  };

  return result_3087007966;

}

function none_3087007996() {
  var result_3087008002 = ({val: null});

  return result_3087008002;

}

function none_3087007993() {
  var result_3087007995 = ({val: null});

    result_3087007995 = nimCopy(result_3087007995, none_3087007996(), NTI3087007896);

  return result_3087007995;

}

function index_3087007910(node_3087007911) {
  var result_3087007912 = 0;

  BeforeRet: {
    if ((node_3087007911.parent == null)) {
    result_3087007912 = -1;
    break BeforeRet;
    }
    
    result_3087007912 = 0;
    Label1: {
      var i_3087007939 = null;
      var i_2969584207 = 0;
      var L_2969584208 = (node_3087007911.parent.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969584207 < L_2969584208)) break Label3;
            i_3087007939 = node_3087007911.parent.children[chckIndx(i_2969584207, 0, (node_3087007911.parent.children).length - 1)];
            if (HEX3DHEX3D_2046820626(i_3087007939.id, node_3087007911.id)) {
            break BeforeRet;
            }
            
            result_3087007912 = addInt(result_3087007912, 1);
            i_2969584207 = addInt(i_2969584207, 1);
            if (!(((node_3087007911.parent.children).length == L_2969584208))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3087007912;

}

function some_3087008015(val_3087008017) {
  var result_3087008018 = ({val: null});

    if (!(!((val_3087008017 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3087008018.val = val_3087008017;

  return result_3087008018;

}

function next_3087007982(node_3087007983) {
  var result_3087007988 = ({val: null});

  BeforeRet: {
    if ((node_3087007983.parent == null)) {
    result_3087007988 = nimCopy(result_3087007988, none_3087007993(), NTI3087007896);
    break BeforeRet;
    }
    
    var i_3087008012 = index_3087007910(node_3087007983);
    if ((subInt(len_3087007976(node_3087007983.parent), 1) <= i_3087008012)) {
    result_3087007988 = nimCopy(result_3087007988, none_3087007993(), NTI3087007896);
    break BeforeRet;
    }
    
    result_3087007988 = nimCopy(result_3087007988, some_3087008015(HEX5BHEX5D_3087007963(node_3087007983.parent, addInt(i_3087008012, 1))), NTI3087007896);
    break BeforeRet;
  };

  return result_3087007988;

}

function isSome_3087008064(self_3087008066) {
  var result_3087008067 = false;

    result_3087008067 = !((self_3087008066.val == null));

  return result_3087008067;

}

function isNone_3087008092(self_3087008094) {
  var result_3087008095 = false;

    result_3087008095 = (self_3087008094.val == null);

  return result_3087008095;

}

function get_3087008084(self_3087008086) {
  var result_3087008087 = null;

    if (isNone_3087008092(self_3087008086)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087008087 = self_3087008086["val"];

  return result_3087008087;

}

function newSeq_2969583962(len_2969583964) {
  var result_2969583965 = [];

    result_2969583965 = new Array(len_2969583964); for (var i = 0 ; i < len_2969583964 ; ++i) { result_2969583965[i] = {Field0: 0.0, Field1: null}; }
  return result_2969583965;

}

function mergeAlt_2969583991(a_2969583993, b_2969583994, lo_2969583995, m_2969583996, hi_2969583997, cmp_2969584000, order_2969584001) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2969584000(a_2969583993[chckIndx(m_2969583996, 0, (a_2969583993).length - 1)], a_2969583993[chckIndx(addInt(m_2969583996, 1), 0, (a_2969583993).length - 1)]), order_2969584001) <= 0)) {
    break BeforeRet;
    }
    
    var j_2969584002 = lo_2969583995;
    if (!((j_2969584002 <= m_2969583996))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2969584008 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2969584002 <= m_2969583996)) break Label2;
          b_2969583994[chckIndx(bb_2969584008, 0, (b_2969583994).length - 1)] = nimCopy(b_2969583994[chckIndx(bb_2969584008, 0, (b_2969583994).length - 1)], a_2969583993[chckIndx(j_2969584002, 0, (a_2969583993).length - 1)], NTI2969578215);
          bb_2969584008 = addInt(bb_2969584008, 1);
          j_2969584002 = addInt(j_2969584002, 1);
        }
    };
    var i_2969584019 = 0;
    var k_2969584020 = lo_2969583995;
    Label3: {
        Label4: while (true) {
        if (!((k_2969584020 < j_2969584002) && (j_2969584002 <= hi_2969583997))) break Label4;
          if ((HEX2A_1023410184(cmp_2969584000(b_2969583994[chckIndx(i_2969584019, 0, (b_2969583994).length - 1)], a_2969583993[chckIndx(j_2969584002, 0, (a_2969583993).length - 1)]), order_2969584001) <= 0)) {
          a_2969583993[chckIndx(k_2969584020, 0, (a_2969583993).length - 1)] = nimCopy(a_2969583993[chckIndx(k_2969584020, 0, (a_2969583993).length - 1)], b_2969583994[chckIndx(i_2969584019, 0, (b_2969583994).length - 1)], NTI2969578215);
          i_2969584019 = addInt(i_2969584019, 1);
          }
          else {
            a_2969583993[chckIndx(k_2969584020, 0, (a_2969583993).length - 1)] = nimCopy(a_2969583993[chckIndx(k_2969584020, 0, (a_2969583993).length - 1)], a_2969583993[chckIndx(j_2969584002, 0, (a_2969583993).length - 1)], NTI2969578215);
            j_2969584002 = addInt(j_2969584002, 1);
          }
          
          k_2969584020 = addInt(k_2969584020, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2969584020 < j_2969584002)) break Label6;
          a_2969583993[chckIndx(k_2969584020, 0, (a_2969583993).length - 1)] = nimCopy(a_2969583993[chckIndx(k_2969584020, 0, (a_2969583993).length - 1)], b_2969583994[chckIndx(i_2969584019, 0, (b_2969583994).length - 1)], NTI2969578215);
          k_2969584020 = addInt(k_2969584020, 1);
          i_2969584019 = addInt(i_2969584019, 1);
        }
    };
  };

  
}

function sort_2969583950(a_2969583952, cmp_2969583955, order_2969583956) {
    var n_2969583961 = (a_2969583952).length;
    var b_2969583988 = newSeq_2969583962(chckRange(divInt(n_2969583961, 2), 0, 2147483647));
    var s_2969583989 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2969583989 < n_2969583961)) break Label2;
          var m_2969583990 = subInt(subInt(n_2969583961, 1), s_2969583989);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2969583990)) break Label4;
                mergeAlt_2969583991(a_2969583952, b_2969583988, nimMax(addInt(subInt(m_2969583990, s_2969583989), 1), 0), m_2969583990, addInt(m_2969583990, s_2969583989), cmp_2969583955, order_2969583956);
                m_2969583990 = subInt(m_2969583990, mulInt(s_2969583989, 2));
              }
          };
          s_2969583989 = mulInt(s_2969583989, 2);
        }
    };

  
}

function cmp_2969583930(x_2969583932, y_2969583933) {
  var result_2969583934 = 0;

  BeforeRet: {
    if ((x_2969583932 == y_2969583933)) {
    result_2969583934 = 0;
    break BeforeRet;
    }
    
    if ((x_2969583932 < y_2969583933)) {
    result_2969583934 = -1;
    break BeforeRet;
    }
    
    result_2969583934 = 1;
    break BeforeRet;
  };

  return result_2969583934;

}

function selectCenterNode_2969583885(self_2969583886) {
                      var Temporary8;
                      var Temporary9;
    
function HEX3Aanonymous_2969583918(a_2969583937, b_2969583938) {
      var result_2969583943 = 0;

        result_2969583943 = cmp_2969583930(a_2969583937.Field0, b_2969583938.Field0);

      return result_2969583943;

    }

    var nodes_2969583893 = [];
    Label1: {
      var layout_2969583897 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2969583898 = ({x: 0.0, y: 0.0});
      var i_2969584198 = 0;
      var L_2969584199 = (self_2969583886.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969584198 < L_2969584199)) break Label3;
            layout_2969583897 = self_2969583886.lastLayouts[chckIndx(i_2969584198, 0, (self_2969583886.lastLayouts).length - 1)]["Field0"];
            offset_2969583898 = self_2969583886.lastLayouts[chckIndx(i_2969584198, 0, (self_2969583886.lastLayouts).length - 1)]["Field1"];
            Label4: {
              var i_2969583899 = 0;
              var node_2969583900 = null;
              var n_2969584189 = layout_2969583897.root;
              var idx_2969584190 = -1;
              var i_2969584191 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_2969584190 == -1)) {
                    var colontmp__2969584194 = nimCopy(null, {Field0: i_2969584191, Field1: n_2969584189}, NTI3087007967);
                    i_2969583899 = colontmp__2969584194["Field0"];
                    node_2969583900 = colontmp__2969584194["Field1"];
                    if ((!((node_2969583900.node == null)) && (0 < len_3087007976(node_2969583900)))) {
                    var bounds_2969583904 = absoluteBounds_3087009541(node_2969583900);
                    if (intersects_2130706609(rect_2147483666(0.0, 0.0, self_2969583886.lastBounds.w, self_2969583886.lastBounds.h), HEX2B_2130706587(bounds_2969583904, vec2_2164261725(0.0, offset_2969583898.y)))) {
                    nodes_2969583893.push({Field0: (bounds_2969583904.y + offset_2969583898.y), Field1: node_2969583900});;
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_2969584190, 1) < len_3087007976(n_2969584189))) {
                    n_2969584189 = HEX5BHEX5D_3087007963(n_2969584189, addInt(idx_2969584190, 1));
                    idx_2969584190 = -1;
                    }
                    else {
                      var oHEX60gensym5_2969584195 = next_3087007982(n_2969584189);
                      if (!isSome_3087008064(oHEX60gensym5_2969584195)) Temporary9 = false; else {                        var ne_2969584196 = get_3087008084(oHEX60gensym5_2969584195);
                        Temporary9 = true;                      }                      if (!Temporary9) Temporary8 = false; else {                        Temporary8 = !((n_2969584189 == null));                      }                    if (Temporary8) {
                    n_2969584189 = ne_2969584196;
                    idx_2969584190 = -1;
                    }
                    else {
                    if (((!((n_2969584189.parent == null)) && !((n_2969584189 == null))) && !((n_2969584189.parent == null)))) {
                    idx_2969584190 = index_3087007910(n_2969584189);
                    n_2969584189 = n_2969584189.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_2969584191 = addInt(i_2969584191, 1);
                    }
                  }
              };
            };
            i_2969584198 = addInt(i_2969584198, 1);
            if (!(((self_2969583886.lastLayouts).length == L_2969584199))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sort_2969583950(nodes_2969583893, HEX3Aanonymous_2969583918, 1);
    if ((0 < (nodes_2969583893).length)) {
    var firstY_2969584064 = nodes_2969583893[chckIndx(0, 0, (nodes_2969583893).length - 1)].Field0;
    var lastY_2969584068 = nodes_2969583893[chckIndx((nodes_2969583893).length - 1, 0, (nodes_2969583893).length - 1)].Field0;
    var middleY_2969584069 = ((firstY_2969584064 + lastY_2969584068) * 0.5);
    Label10: {
      var i_2969584102 = 0;
      var y_2969584103 = 0.0;
      var node_2969584104 = null;
      var i_2969584203 = 0;
      var L_2969584204 = (nodes_2969583893).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2969584203 < L_2969584204)) break Label12;
            i_2969584102 = i_2969584203;
            y_2969584103 = nodes_2969583893[chckIndx(i_2969584203, 0, (nodes_2969583893).length - 1)]["Field0"];
            node_2969584104 = nodes_2969583893[chckIndx(i_2969584203, 0, (nodes_2969583893).length - 1)]["Field1"];
            if (((i_2969584102 == (nodes_2969583893).length - 1) || (middleY_2969584069 < nodes_2969583893[chckIndx(addInt(i_2969584102, 1), 0, (nodes_2969583893).length - 1)].Field0))) {
            nodeHEX3D_2969570879(self_2969583886, node_2969584104.node);
            break Label10;
            }
            
            i_2969584203 = addInt(i_2969584203, 1);
            if (!(((nodes_2969583893).length == L_2969584204))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function selectCenterNodeJsWrapper_2969583881(self_2969584171) {
    selectCenterNode_2969583885(self_2969584171);

  
}
editor_ast_prototype.selectCenterNode = function() { return (selectCenterNodeJsWrapper_2969583881(this));};

function scroll_2969584221(self_2969584222, amount_2969584223) {
    HEX2BHEX3D_855640304(self_2969584222, "scrollOffset", amount_2969584223);
    markDirty_2415919143(self_2969584222);

  
}

function scrollJsWrapper_2969584217(self_2969584256, amount_2969584257) {
    scroll_2969584221(self_2969584256, amount_2969584257);

  
}
editor_ast_prototype.scroll = function(amount_ /* : float32 */) { return (scrollJsWrapper_2969584217(this, amount_));};

function scrollOutput_2969584283(self_2969584284, arg_2969584285) {
    switch (toJSStr(arg_2969584285)) {
    case "home":
      executionOutput_2969567286[0].scroll = (executionOutput_2969567286[0].lines).length;
      break;
    case "end":
      executionOutput_2969567286[0].scroll = 0;
      break;
    default: 
      executionOutput_2969567286[0].scroll = clamp_1660945119(addInt(executionOutput_2969567286[0].scroll, nsuParseInt(arg_2969584285)), 0, (executionOutput_2969567286[0].lines).length);
      break;
    }

  
}

function scrollOutputJsWrapper_2969584279(self_2969584325, arg_2969584326) {
    scrollOutput_2969584283(self_2969584325, arg_2969584326);

  
}
editor_ast_prototype.scrollOutput = function(arg_ /* : string */) { return (scrollOutputJsWrapper_2969584279(this, arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function pairs_3019904844(t_3019904847) {
  var result_3019904848 = [];

    for (var [k, v] in t_3019904847.entries()) {result_3019904848.push({Field0: k, Field1: v});}

  return result_3019904848;

}

function pairs_3019904873(t_3019904876) {
  var result_3019904877 = [];

    for (var [k, v] in t_3019904876.entries()) {result_3019904877.push({Field0: k, Field1: v});}

  return result_3019904877;

}

function pairs_3019904902(t_3019904905) {
  var result_3019904906 = [];

    for (var [k, v] in t_3019904905.entries()) {result_3019904906.push({Field0: k, Field1: v});}

  return result_3019904906;

}

function pairs_3019904931(t_3019904934) {
  var result_3019904935 = [];

    for (var [k, v] in t_3019904934.entries()) {result_3019904935.push({Field0: k, Field1: v});}

  return result_3019904935;

}

function pairs_3019904960(t_3019904963) {
  var result_3019904964 = [];

    for (var [k, v] in t_3019904963.entries()) {result_3019904964.push({Field0: k, Field1: v});}

  return result_3019904964;

}

function pairs_3019904989(t_3019904992) {
  var result_3019904993 = [];

    for (var [k, v] in t_3019904992.entries()) {result_3019904993.push({Field0: k, Field1: v});}

  return result_3019904993;

}

function pairs_3019905018(t_3019905021) {
  var result_3019905022 = [];

    for (var [k, v] in t_3019905021.entries()) {result_3019905022.push({Field0: k, Field1: v});}

  return result_3019905022;

}

function pairs_3019905125(t_3019905128) {
  var result_3019905129 = [];

    for (var [k, v] in t_3019905128.entries()) {result_3019905129.push({Field0: k, Field1: v});}

  return result_3019905129;

}

function pairs_3019905314(t_3019905317) {
  var result_3019905318 = [];

    for (var [k, v] in t_3019905317.entries()) {result_3019905318.push({Field0: k, Field1: v});}

  return result_3019905318;

}

function pairs_3019905343(t_3019905346) {
  var result_3019905347 = [];

    for (var [k, v] in t_3019905346.entries()) {result_3019905347.push({Field0: k, Field1: v});}

  return result_3019905347;

}

function pairs_3019905372(t_3019905375) {
  var result_3019905376 = [];

    for (var [k, v] in t_3019905375.entries()) {result_3019905376.push({Field0: k, Field1: v});}

  return result_3019905376;

}

function pairs_3019905401(t_3019905404) {
  var result_3019905405 = [];

    for (var [k, v] in t_3019905404.entries()) {result_3019905405.push({Field0: k, Field1: v});}

  return result_3019905405;

}

function nsuIndent(s_855639240, count_855639241, padding_855639242) {
            var Temporary6;

  var result_855639243 = [];

    result_855639243 = nimCopy(null, [], NTI33554449);
    var i_855639244 = 0;
    Label1: {
      var line_855639245 = [];
      var first_2969584473 = 0;
      var last_2969584474 = 0;
      var eolpos_2969584475 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2969584474 < (s_855639240).length) && !((ConstSet206[s_855639240[chckIndx(last_2969584474, 0, (s_855639240).length - 1)]] != undefined)))) break Label5;
                  last_2969584474 = addInt(last_2969584474, 1);
                }
            };
            eolpos_2969584475 = last_2969584474;
            if ((last_2969584474 < (s_855639240).length)) {
            if ((s_855639240[chckIndx(last_2969584474, 0, (s_855639240).length - 1)] == 10)) {
            last_2969584474 = addInt(last_2969584474, 1);
            }
            else {
            if ((s_855639240[chckIndx(last_2969584474, 0, (s_855639240).length - 1)] == 13)) {
            last_2969584474 = addInt(last_2969584474, 1);
            if (((last_2969584474 < (s_855639240).length) && (s_855639240[chckIndx(last_2969584474, 0, (s_855639240).length - 1)] == 10))) {
            last_2969584474 = addInt(last_2969584474, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_2969584474, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2969584475, 1);
            }
            
            line_855639245 = substr_33557821(s_855639240, first_2969584473, Temporary6);
            if (!((i_855639244 == 0))) {
            result_855639243.push.apply(result_855639243, [10]);;
            }
            
            Label7: {
              var j_855639250 = 0;
              var colontmp__2969584470 = 0;
              colontmp__2969584470 = count_855639241;
              var res_2969584471 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(res_2969584471 <= colontmp__2969584470)) break Label9;
                    j_855639250 = res_2969584471;
                    result_855639243.push.apply(result_855639243, padding_855639242);;
                    res_2969584471 = addInt(res_2969584471, 1);
                  }
              };
            };
            result_855639243.push.apply(result_855639243, line_855639245);;
            i_855639244 = addInt(i_855639244, 1);
            if ((eolpos_2969584475 == last_2969584474)) {
            break Label2;
            }
            
            first_2969584473 = last_2969584474;
          }
      };
    };

  return result_855639243;

}

function HEX24_3036679522(graph_3036679523) {
  var result_3036679524 = [];

    result_3036679524 = nimCopy(null, [68,101,112,101,110,100,101,110,99,121,32,71,114,97,112,104,10], NTI33554449);
    result_3036679524.push.apply(result_3036679524, (nsuIndent(([114,101,118,105,115,105,111,110,58,32] || []).concat(HEX24_369098760(graph_3036679523.revision) || []), 1, [124,32]) || []).concat([10] || []));;
    result_3036679524.push.apply(result_3036679524, (nsuIndent([99,111,108,111,114,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679524.push.apply(result_3036679524, (nsuIndent([118,101,114,105,102,105,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679524.push.apply(result_3036679524, (nsuIndent([99,104,97,110,103,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679524.push.apply(result_3036679524, (nsuIndent([102,105,110,103,101,114,112,114,105,110,116,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679524.push.apply(result_3036679524, (nsuIndent([100,101,112,101,110,100,101,110,99,105,101,115,58], 1, [124,32]) || []).concat([10] || []));;

  return result_3036679524;

}

function toString_3019904842(HEX3Atmp_3019899093) {
  var result_3019904843 = [];

  BeforeRet: {
    var HEX3Atmp_3019899094 = [67,111,110,116,101,120,116,10];
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([73,116,101,109,115,58,32,65,115,116,78,111,100,101,10] || []));;
    Label1: {
      var keyHEX60gensym50_3019904871 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym50_3019904872 = null;
      var colontmp__2969584397 = [];
      colontmp__2969584397 = pairs_3019904844(HEX3Atmp_3019899093.itemsAstNode);
      var i_2969584399 = 0;
      var L_2969584400 = (colontmp__2969584397).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969584399 < L_2969584400)) break Label3;
            keyHEX60gensym50_3019904871 = colontmp__2969584397[chckIndx(i_2969584399, 0, (colontmp__2969584397).length - 1)]["Field0"];
            valueHEX60gensym50_3019904872 = colontmp__2969584397[chckIndx(i_2969584399, 0, (colontmp__2969584397).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3036676332(keyHEX60gensym50_3019904871) || [],[32,45,62,32] || [],HEX24_3003123671(valueHEX60gensym50_3019904872) || [],[10] || []));;
            i_2969584399 = addInt(i_2969584399, 1);
            if (!(((colontmp__2969584397).length == L_2969584400))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([73,116,101,109,115,58,32,78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,10] || []));;
    Label4: {
      var keyHEX60gensym51_3019904900 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym51_3019904901 = null;
      var colontmp__2969584403 = [];
      colontmp__2969584403 = pairs_3019904873(HEX3Atmp_3019899093.itemsNodeLayoutInput);
      var i_2969584405 = 0;
      var L_2969584406 = (colontmp__2969584403).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969584405 < L_2969584406)) break Label6;
            keyHEX60gensym51_3019904900 = colontmp__2969584403[chckIndx(i_2969584405, 0, (colontmp__2969584403).length - 1)]["Field0"];
            valueHEX60gensym51_3019904901 = colontmp__2969584403[chckIndx(i_2969584405, 0, (colontmp__2969584403).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3036676332(keyHEX60gensym51_3019904900) || [],[32,45,62,32] || [],HEX24_3087009969(valueHEX60gensym51_3019904901) || [],[10] || []));;
            i_2969584405 = addInt(i_2969584405, 1);
            if (!(((colontmp__2969584403).length == L_2969584406))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([73,116,101,109,115,58,32,83,121,109,98,111,108,10] || []));;
    Label7: {
      var keyHEX60gensym52_3019904929 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym52_3019904930 = null;
      var colontmp__2969584409 = [];
      colontmp__2969584409 = pairs_3019904902(HEX3Atmp_3019899093.itemsSymbol);
      var i_2969584411 = 0;
      var L_2969584412 = (colontmp__2969584409).length;
      Label8: {
          Label9: while (true) {
          if (!(i_2969584411 < L_2969584412)) break Label9;
            keyHEX60gensym52_3019904929 = colontmp__2969584409[chckIndx(i_2969584411, 0, (colontmp__2969584409).length - 1)]["Field0"];
            valueHEX60gensym52_3019904930 = colontmp__2969584409[chckIndx(i_2969584411, 0, (colontmp__2969584409).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3036676332(keyHEX60gensym52_3019904929) || [],[32,45,62,32] || [],HEX24_3087008911(valueHEX60gensym52_3019904930) || [],[10] || []));;
            i_2969584411 = addInt(i_2969584411, 1);
            if (!(((colontmp__2969584409).length == L_2969584412))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([73,116,101,109,115,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,67,111,110,116,101,120,116,10] || []));;
    Label10: {
      var keyHEX60gensym53_3019904958 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym53_3019904959 = null;
      var colontmp__2969584415 = [];
      colontmp__2969584415 = pairs_3019904931(HEX3Atmp_3019899093.itemsFunctionExecutionContext);
      var i_2969584417 = 0;
      var L_2969584418 = (colontmp__2969584415).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2969584417 < L_2969584418)) break Label12;
            keyHEX60gensym53_3019904958 = colontmp__2969584415[chckIndx(i_2969584417, 0, (colontmp__2969584415).length - 1)]["Field0"];
            valueHEX60gensym53_3019904959 = colontmp__2969584415[chckIndx(i_2969584417, 0, (colontmp__2969584415).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3036676332(keyHEX60gensym53_3019904958) || [],[32,45,62,32] || [],HEX24_3087008578(valueHEX60gensym53_3019904959) || [],[10] || []));;
            i_2969584417 = addInt(i_2969584417, 1);
            if (!(((colontmp__2969584415).length == L_2969584418))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([67,97,99,104,101,58,32,84,121,112,101,10] || []));;
    Label13: {
      var keyHEX60gensym54_3019904987 = null;
      var valueHEX60gensym54_3019904988 = null;
      var colontmp__2969584421 = [];
      colontmp__2969584421 = pairs_3019904960(HEX3Atmp_3019899093.queryCacheType);
      var i_2969584423 = 0;
      var L_2969584424 = (colontmp__2969584421).length;
      Label14: {
          Label15: while (true) {
          if (!(i_2969584423 < L_2969584424)) break Label15;
            keyHEX60gensym54_3019904987 = colontmp__2969584421[chckIndx(i_2969584423, 0, (colontmp__2969584421).length - 1)]["Field0"];
            valueHEX60gensym54_3019904988 = colontmp__2969584421[chckIndx(i_2969584423, 0, (colontmp__2969584421).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym54_3019904987) || [],[32,45,62,32] || [],HEX24_3087008187(valueHEX60gensym54_3019904988) || [],[10] || []));;
            i_2969584423 = addInt(i_2969584423, 1);
            if (!(((colontmp__2969584421).length == L_2969584424))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,117,101,10] || []));;
    Label16: {
      var keyHEX60gensym55_3019905016 = null;
      var valueHEX60gensym55_3019905017 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584427 = [];
      colontmp__2969584427 = pairs_3019904989(HEX3Atmp_3019899093.queryCacheValue);
      var i_2969584429 = 0;
      var L_2969584430 = (colontmp__2969584427).length;
      Label17: {
          Label18: while (true) {
          if (!(i_2969584429 < L_2969584430)) break Label18;
            keyHEX60gensym55_3019905016 = colontmp__2969584427[chckIndx(i_2969584429, 0, (colontmp__2969584427).length - 1)]["Field0"];
            valueHEX60gensym55_3019905017 = colontmp__2969584427[chckIndx(i_2969584429, 0, (colontmp__2969584427).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym55_3019905016) || [],[32,45,62,32] || [],HEX24_3087008494(valueHEX60gensym55_3019905017) || [],[10] || []));;
            i_2969584429 = addInt(i_2969584429, 1);
            if (!(((colontmp__2969584427).length == L_2969584430))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,10] || []));;
    Label19: {
      var keyHEX60gensym56_3019905045 = null;
      var valueHEX60gensym56_3019905046 = ({val: null});
      var colontmp__2969584433 = [];
      colontmp__2969584433 = pairs_3019905018(HEX3Atmp_3019899093.queryCacheSymbol);
      var i_2969584435 = 0;
      var L_2969584436 = (colontmp__2969584433).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2969584435 < L_2969584436)) break Label21;
            keyHEX60gensym56_3019905045 = colontmp__2969584433[chckIndx(i_2969584435, 0, (colontmp__2969584433).length - 1)]["Field0"];
            valueHEX60gensym56_3019905046 = colontmp__2969584433[chckIndx(i_2969584435, 0, (colontmp__2969584433).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym56_3019905045) || [],[32,45,62,32] || [],HEX24_3019905104(valueHEX60gensym56_3019905046) || [],[10] || []));;
            i_2969584435 = addInt(i_2969584435, 1);
            if (!(((colontmp__2969584433).length == L_2969584436))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,115,10] || []));;
    Label22: {
      var keyHEX60gensym57_3019905152 = null;
      var valueHEX60gensym57_3019905153 = null;
      var colontmp__2969584439 = [];
      colontmp__2969584439 = pairs_3019905125(HEX3Atmp_3019899093.queryCacheSymbols);
      var i_2969584441 = 0;
      var L_2969584442 = (colontmp__2969584439).length;
      Label23: {
          Label24: while (true) {
          if (!(i_2969584441 < L_2969584442)) break Label24;
            keyHEX60gensym57_3019905152 = colontmp__2969584439[chckIndx(i_2969584441, 0, (colontmp__2969584439).length - 1)]["Field0"];
            valueHEX60gensym57_3019905153 = colontmp__2969584439[chckIndx(i_2969584441, 0, (colontmp__2969584439).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym57_3019905152) || [],[32,45,62,32] || [],HEX24_3019905211(valueHEX60gensym57_3019905153) || [],[10] || []));;
            i_2969584441 = addInt(i_2969584441, 1);
            if (!(((colontmp__2969584439).length == L_2969584442))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,84,121,112,101,10] || []));;
    Label25: {
      var keyHEX60gensym58_3019905341 = null;
      var valueHEX60gensym58_3019905342 = null;
      var colontmp__2969584445 = [];
      colontmp__2969584445 = pairs_3019905314(HEX3Atmp_3019899093.queryCacheSymbolType);
      var i_2969584447 = 0;
      var L_2969584448 = (colontmp__2969584445).length;
      Label26: {
          Label27: while (true) {
          if (!(i_2969584447 < L_2969584448)) break Label27;
            keyHEX60gensym58_3019905341 = colontmp__2969584445[chckIndx(i_2969584447, 0, (colontmp__2969584445).length - 1)]["Field0"];
            valueHEX60gensym58_3019905342 = colontmp__2969584445[chckIndx(i_2969584447, 0, (colontmp__2969584445).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3087008911(keyHEX60gensym58_3019905341) || [],[32,45,62,32] || [],HEX24_3087008187(valueHEX60gensym58_3019905342) || [],[10] || []));;
            i_2969584447 = addInt(i_2969584447, 1);
            if (!(((colontmp__2969584445).length == L_2969584448))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,86,97,108,117,101,10] || []));;
    Label28: {
      var keyHEX60gensym59_3019905370 = null;
      var valueHEX60gensym59_3019905371 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584451 = [];
      colontmp__2969584451 = pairs_3019905343(HEX3Atmp_3019899093.queryCacheSymbolValue);
      var i_2969584453 = 0;
      var L_2969584454 = (colontmp__2969584451).length;
      Label29: {
          Label30: while (true) {
          if (!(i_2969584453 < L_2969584454)) break Label30;
            keyHEX60gensym59_3019905370 = colontmp__2969584451[chckIndx(i_2969584453, 0, (colontmp__2969584451).length - 1)]["Field0"];
            valueHEX60gensym59_3019905371 = colontmp__2969584451[chckIndx(i_2969584453, 0, (colontmp__2969584451).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3087008911(keyHEX60gensym59_3019905370) || [],[32,45,62,32] || [],HEX24_3087008494(valueHEX60gensym59_3019905371) || [],[10] || []));;
            i_2969584453 = addInt(i_2969584453, 1);
            if (!(((colontmp__2969584451).length == L_2969584454))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([67,97,99,104,101,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,10] || []));;
    Label31: {
      var keyHEX60gensym60_3019905399 = null;
      var valueHEX60gensym60_3019905400 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584457 = [];
      colontmp__2969584457 = pairs_3019905372(HEX3Atmp_3019899093.queryCacheFunctionExecution);
      var i_2969584459 = 0;
      var L_2969584460 = (colontmp__2969584457).length;
      Label32: {
          Label33: while (true) {
          if (!(i_2969584459 < L_2969584460)) break Label33;
            keyHEX60gensym60_3019905399 = colontmp__2969584457[chckIndx(i_2969584459, 0, (colontmp__2969584457).length - 1)]["Field0"];
            valueHEX60gensym60_3019905400 = colontmp__2969584457[chckIndx(i_2969584459, 0, (colontmp__2969584457).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3087008578(keyHEX60gensym60_3019905399) || [],[32,45,62,32] || [],HEX24_3087008494(valueHEX60gensym60_3019905400) || [],[10] || []));;
            i_2969584459 = addInt(i_2969584459, 1);
            if (!(((colontmp__2969584457).length == L_2969584460))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 1) || []).concat([67,97,99,104,101,58,32,78,111,100,101,76,97,121,111,117,116,10] || []));;
    Label34: {
      var keyHEX60gensym61_3019905428 = null;
      var valueHEX60gensym61_3019905429 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var colontmp__2969584463 = [];
      colontmp__2969584463 = pairs_3019905401(HEX3Atmp_3019899093.queryCacheNodeLayout);
      var i_2969584465 = 0;
      var L_2969584466 = (colontmp__2969584463).length;
      Label35: {
          Label36: while (true) {
          if (!(i_2969584465 < L_2969584466)) break Label36;
            keyHEX60gensym61_3019905428 = colontmp__2969584463[chckIndx(i_2969584465, 0, (colontmp__2969584463).length - 1)]["Field0"];
            valueHEX60gensym61_3019905429 = colontmp__2969584463[chckIndx(i_2969584465, 0, (colontmp__2969584463).length - 1)]["Field1"];
            HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, (repeat2_3036676112([124,32], 2) || []).concat(HEX24_3087009969(keyHEX60gensym61_3019905428) || [],[32,45,62,32] || [],HEX24_3087009932(valueHEX60gensym61_3019905429) || [],[10] || []));;
            i_2969584465 = addInt(i_2969584465, 1);
            if (!(((colontmp__2969584463).length == L_2969584466))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899094.push.apply(HEX3Atmp_3019899094, nsuIndent(HEX24_3036679522(HEX3Atmp_3019899093.depGraph), 1, [124,32]));;
    result_3019904843 = nimCopy(null, HEX3Atmp_3019899094, NTI33554449);
    break BeforeRet;
  };

  return result_3019904843;

}

function dumpContext_2969584352(self_2969584353) {
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);
    log_1174405220(logger_704643272[0], 2, [toString_3019904842(ctx_2969567287)]);
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);

  
}

function dumpContextJsWrapper_2969584348(self_2969584381) {
    dumpContext_2969584352(self_2969584381);

  
}
editor_ast_prototype.dumpContext = function() { return (dumpContextJsWrapper_2969584348(this));};

function getModeConfig_2969584478(self_2969584479, mode_2969584480) {
  var result_2969584481 = null;

  BeforeRet: {
    result_2969584481 = getEventHandlerConfig_1291849162(self_2969584479.editor, ([101,100,105,116,111,114,46,97,115,116,46] || []).concat(mode_2969584480 || []));
    break BeforeRet;
  };

  return result_2969584481;

}

function setMode_2969584488(self_2969584489, mode_2969584490) {
        
function HEX3Aanonymous_2969584511(actionHEX60gensym992HEX60gensym993_2969584512, argHEX60gensym992HEX60gensym993_2969584513) {
          var result_2969584514 = 0;

          BeforeRet: {
            if (handlerHEX60gensym992_2969584499.config.handleActions) {
            var action_2969584515 = nimCopy(null, actionHEX60gensym992HEX60gensym993_2969584512, NTI33554449);
            var arg_2969584516 = nimCopy(null, argHEX60gensym992HEX60gensym993_2969584513, NTI33554449);
            var responseHEX60gensym992HEX60gensym993_2969584517 = handleAction_2969583817(self_2969584489, action_2969584515, arg_2969584516);
            if (handlerHEX60gensym992_2969584499.config.consumeAllActions) {
            result_2969584514 = 3;
            break BeforeRet;
            }
            
            result_2969584514 = responseHEX60gensym992HEX60gensym993_2969584517;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym992_2969584499.config.consumeAllActions) {
            result_2969584514 = 3;
            break BeforeRet;
            }
            else {
              result_2969584514 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2969584514;

        }
        
function HEX3Aanonymous_2969584519(inputHEX60gensym992HEX60gensym994_2969584520) {
          var result_2969584521 = 0;

          BeforeRet: {
            if (handlerHEX60gensym992_2969584499.config.handleInputs) {
            var input_2969584522 = nimCopy(null, inputHEX60gensym992HEX60gensym994_2969584520, NTI33554449);
            result_2969584521 = 1;
            break BeforeRet;
            }
            else {
              result_2969584521 = 1;
              break BeforeRet;
            }
            
          };

          return result_2969584521;

        }

    if (((mode_2969584490).length == 0)) {
    self_2969584489.modeEventHandler = null;
    }
    else {
      var config_2969584491 = getModeConfig_2969584478(self_2969584489, mode_2969584490);
      Label1: {
        var handlerHEX60gensym992_2969584499 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym992_2969584499.config = config_2969584491;
        handlerHEX60gensym992_2969584499.dfaInternal = buildDFA_2113929279(config_2969584491);
        handlerHEX60gensym992_2969584499.handleAction = HEX3Aanonymous_2969584511;
        handlerHEX60gensym992_2969584499.handleInput = HEX3Aanonymous_2969584519;
      };
      self_2969584489.modeEventHandler = handlerHEX60gensym992_2969584499;
    }
    
    self_2969584489.currentMode = nimCopy(null, mode_2969584490, NTI33554449);

  
}

function setModeJsWrapper2_2969584484(self_2969584551, mode_2969584552) {
    setMode_2969584488(self_2969584551, mode_2969584552);

  
}
editor_ast_prototype.setMode2 = function(mode_ /* : string */) { return (setModeJsWrapper2_2969584484(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2969584579(self_2969584580) {
  var result_2969584581 = [];

  BeforeRet: {
    result_2969584581 = nimCopy(null, self_2969584580.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2969584581;

}

function modeJsWrapper2_2969584575(self_2969584610) {
  var result_2969584611 = [];

    result_2969584611 = nimCopy(null, mode_2969584579(self_2969584610), NTI33554449);

  return result_2969584611;

}
editor_ast_prototype.mode2 = function() { return toJSStr(modeJsWrapper2_2969584575(this));};

function getContextWithMode_2969584636(self_2969584637, context_2969584638) {
  var result_2969584639 = [];

  BeforeRet: {
    result_2969584639 = nimCopy(null, (context_2969584638 || []).concat([46] || [],self_2969584637.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2969584639;

}

function getContextWithModeJsWrapper2_2969584632(self_2969584669, context_2969584670) {
  var result_2969584671 = [];

    result_2969584671 = nimCopy(null, getContextWithMode_2969584636(self_2969584669, context_2969584670), NTI33554449);

  return result_2969584671;

}
editor_ast_prototype.getContextWithMode2 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper2_2969584632(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function markDirty_2483027989(self_2483027990) {
    if (!(self_2483027990.mDirty)) {
    invoke_2415919167(self_2483027990.onMarkedDirty);
    }
    
    self_2483027990.mDirty = true;

  
}

function accept_3221225858(self_3221225859) {
    if ((self_3221225859.selected < (self_3221225859.completions).length)) {
    self_3221225859.handleItemConfirmed(self_3221225859.completions[chckIndx(self_3221225859.selected, 0, (self_3221225859.completions).length - 1)]);
    }
    
    popPopup_1291849115(self_3221225859.editor, self_3221225859);
    markDirty_2483027989(self_3221225859);

  
}

function acceptJsWrapper_3221225854(self_3221225915) {
    accept_3221225858(self_3221225915);

  
}
popup_selector_prototype.accept = function() { return (acceptJsWrapper_3221225854(this));};

function cancel_3221225957(self_3221225958) {
    if (!((self_3221225958.handleCanceled == null))) {
    self_3221225958.handleCanceled();
    }
    
    popPopup_1291849115(self_3221225958.editor, self_3221225958);
    markDirty_2483027989(self_3221225958);

  
}

function cancelJsWrapper_3221225953(self_3221225992) {
    cancel_3221225957(self_3221225992);

  
}
popup_selector_prototype.cancel = function() { return (cancelJsWrapper_3221225953(this));};

function prev_3221226013(self_3221226014) {
    var Temporary1;

    if (((self_3221226014.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_3221226014.selected, (self_3221226014.completions).length), 1), (self_3221226014.completions).length);
    }
    
    self_3221226014.selected = Temporary1;
    if (((0 < (self_3221226014.completions).length) && !((self_3221226014.handleItemSelected == null)))) {
    self_3221226014.handleItemSelected(self_3221226014.completions[chckIndx(self_3221226014.selected, 0, (self_3221226014.completions).length - 1)]);
    }
    
    markDirty_2483027989(self_3221226014);

  
}

function prevJsWrapper_3221226009(self_3221226060) {
    prev_3221226013(self_3221226060);

  
}
popup_selector_prototype.prev = function() { return (prevJsWrapper_3221226009(this));};

function next_3221226081(self_3221226082) {
    var Temporary1;

    if (((self_3221226082.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_3221226082.selected, 1), (self_3221226082.completions).length);
    }
    
    self_3221226082.selected = Temporary1;
    if (((0 < (self_3221226082.completions).length) && !((self_3221226082.handleItemSelected == null)))) {
    self_3221226082.handleItemSelected(self_3221226082.completions[chckIndx(self_3221226082.selected, 0, (self_3221226082.completions).length - 1)]);
    }
    
    markDirty_2483027989(self_3221226082);

  
}

function nextJsWrapper_3221226077(self_3221226125) {
    next_3221226081(self_3221226125);

  
}
popup_selector_prototype.next = function() { return (nextJsWrapper_3221226077(this));};

function getBackend_1291854145(self_1291854146) {
  var result_1291854147 = 0;

  BeforeRet: {
    result_1291854147 = self_1291854146.backend;
    break BeforeRet;
  };

  return result_1291854147;

}

function getBackendJsWrapper_1291854141(self_1291854198) {
  var result_1291854199 = 0;

    result_1291854199 = getBackend_1291854145(self_1291854198);

  return result_1291854199;

}
editor_prototype.getBackend = function() { return (getBackendJsWrapper_1291854141(this));};

function get_2348810295(self_2348810297, otherwise_2348810298) {
    var Temporary1;

  var result_2348810299 = [];

    if (isSome_2348810304(self_2348810297)) {
    Temporary1 = self_2348810297.val;
    }
    else {
    Temporary1 = otherwise_2348810298;
    }
    
    result_2348810299 = nimCopy(null, Temporary1, NTI33554449);

  return result_2348810299;

}

function isSome_2818579239(self_2818579241) {
  var result_2818579242 = false;

    result_2818579242 = !((self_2818579241.val == null));

  return result_2818579242;

}

function map_1291854418(self_1291854421, callback_1291854423) {
    var Temporary1;

  var result_1291854424 = ({val: [], has: false});

    if (isSome_2818579239(self_1291854421)) {
    Temporary1 = some_2281701410(callback_1291854423(self_1291854421.val));
    }
    else {
    Temporary1 = none_2348810263();
    }
    
    result_1291854424 = nimCopy(result_1291854424, Temporary1, NTI2348810261);

  return result_1291854424;

}

function HEX25_1627391769(s_1627391770) {
  var result_1627391771 = null;

    result_1627391771 = {kind: 4, str: nimCopy(null, s_1627391770, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391771;

}

function toJson_1811939932(a_1811939934, opt_1811939935) {
  var result_1811939936 = null;

    result_1811939936 = HEX25_1627391769(a_1811939934);

  return result_1811939936;

}

function HEX25_1627391792(n_1627391793) {
    var Temporary1;

  var result_1627391794 = null;

    if (!((n_1627391793 == n_1627391793))) {
    Temporary1 = newJString_1627389994([110,97,110]);
    }
    else {
    if ((n_1627391793 == Infinity)) {
    Temporary1 = newJString_1627389994([105,110,102]);
    }
    else {
    if ((n_1627391793 == -Infinity)) {
    Temporary1 = newJString_1627389994([45,105,110,102]);
    }
    else {
    Temporary1 = {kind: 3, fnum: n_1627391793, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
    }
    }}
    result_1627391794 = Temporary1;

  return result_1627391794;

}

function toJson_1291854532(a_1291854534, opt_1291854535) {
  var result_1291854536 = null;

    result_1291854536 = HEX25_1627391792(a_1291854534);

  return result_1291854536;

}

function HEX25_1627391779(n_1627391780) {
  var result_1627391781 = null;

    result_1627391781 = {kind: 2, num: n_1627391780, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391781;

}

function symbolName_1291854599(a_1291854601) {
  var result_1291854602 = [];

    result_1291854602 = nimCopy(null, names_1291854604[chckIndx(subInt(a_1291854601, 0), 0, (names_1291854604).length - 1)], NTI33554449);

  return result_1291854602;

}

function toJson_1291854584(a_1291854586, opt_1291854587) {
    var Temporary1;

  var result_1291854588 = null;

    switch (opt_1291854587.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854586);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854599(a_1291854586), opt_1291854587);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854586, NTI1291845663), opt_1291854587);
      break;
    }
    result_1291854588 = Temporary1;

  return result_1291854588;

}

function len_1627392114(t_1627392117) {
  var result_1627392118 = 0;

    result_1627392118 = t_1627392117.counter;

  return result_1627392118;

}

function copy_1627394272(p_1627394273) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
        var Temporary6;
              var Temporary9;
        var Temporary11;
              var Temporary14;

  var result_1627394274 = null;

    switch (p_1627394273.kind) {
    case 4:
      var Temporary1 = p_1627394273;
      if (ConstSet207[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627394274 = newJString_1627389994(Temporary1.str);
      result_1627394274.isUnquoted = p_1627394273.isUnquoted;
      break;
    case 2:
      var Temporary2 = p_1627394273;
      if (ConstSet208[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627394274 = newJInt_1627390040(Temporary2.num);
      break;
    case 3:
      var Temporary3 = p_1627394273;
      if (ConstSet209[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      result_1627394274 = newJFloat_1627390043(Temporary3.fnum);
      break;
    case 1:
      var Temporary4 = p_1627394273;
      if (ConstSet210[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      result_1627394274 = newJBool_1627390046(Temporary4.bval);
      break;
    case 0:
      result_1627394274 = newJNull_1627390049();
      break;
    case 5:
      result_1627394274 = newJObject_1627390051();
      Label5: {
        var key_1627394279 = [];
        var val_1627394280 = null;
        var colontmp__1291855116 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = p_1627394273;
        if (ConstSet211[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291855116 = nimCopy(colontmp__1291855116, Temporary6.fields, NTI1627389966);
        var L_1291855118 = len_1627392114(colontmp__1291855116);
        if ((0 < colontmp__1291855116.counter)) {
        var h_1291855119 = colontmp__1291855116.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291855119)) break Label8;
              var nxt_1291855121 = colontmp__1291855116.data[chckIndx(h_1291855119, 0, (colontmp__1291855116.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855116.data[chckIndx(h_1291855119, 0, (colontmp__1291855116.data).length - 1)].Field0)) {
              key_1627394279 = colontmp__1291855116.data[chckIndx(h_1291855119, 0, (colontmp__1291855116.data).length - 1)].Field2;
              val_1627394280 = colontmp__1291855116.data[chckIndx(h_1291855119, 0, (colontmp__1291855116.data).length - 1)].Field3;
              var Temporary9 = result_1627394274;
              if (ConstSet212[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
              HEX5BHEX5DHEX3D_1627390259(Temporary9.fields, key_1627394279, copy_1627394272(val_1627394280));
              if (!((len_1627392114(colontmp__1291855116) == L_1291855118))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855119 = nxt_1291855121;
            }
        };
        }
        
      };
      break;
    case 6:
      result_1627394274 = newJArray_1627390082();
      Label10: {
        var i_1627394330 = null;
        var colontmp__1291855123 = [];
        var Temporary11 = p_1627394273;
        if (ConstSet213[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
        colontmp__1291855123 = Temporary11.elems;
        var i_1291855125 = 0;
        var L_1291855126 = (colontmp__1291855123).length;
        Label12: {
            Label13: while (true) {
            if (!(i_1291855125 < L_1291855126)) break Label13;
              i_1627394330 = colontmp__1291855123[chckIndx(i_1291855125, 0, (colontmp__1291855123).length - 1)];
              var Temporary14 = result_1627394274;
              if (ConstSet214[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
              Temporary14.elems.push(copy_1627394272(i_1627394330));;
              i_1291855125 = addInt(i_1291855125, 1);
              if (!(((colontmp__1291855123).length == L_1291855126))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    }

  return result_1627394274;

}

function HEX25_1627391795(b_1627391796) {
  var result_1627391797 = null;

    result_1627391797 = {kind: 1, bval: b_1627391796, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391797;

}

function toJson_2818589142(a_2818589144, opt_2818589145) {
  var result_2818589146 = null;

    result_2818589146 = HEX25_1627391795(a_2818589144);

  return result_2818589146;

}

function symbolName_1291854733(a_1291854735) {
  var result_1291854736 = [];

    result_1291854736 = nimCopy(null, names_1291854738[chckIndx(subInt(a_1291854735, 0), 0, (names_1291854738).length - 1)], NTI33554449);

  return result_1291854736;

}

function toJson_1291854717(a_1291854719, opt_1291854720) {
    var Temporary1;

  var result_1291854721 = null;

    switch (opt_1291854720.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854719);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854733(a_1291854719), opt_1291854720);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854719, NTI1627389955), opt_1291854720);
      break;
    }
    result_1291854721 = Temporary1;

  return result_1291854721;

}

function HEX25_1627391789(n_1627391790) {
  var result_1627391791 = null;

    result_1627391791 = {kind: 2, num: n_1627391790, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391791;

}

function toJson_1291854827(a_1291854829, opt_1291854830) {
  var result_1291854831 = null;

    result_1291854831 = HEX25_1627391789(a_1291854829);

  return result_1291854831;

}

function toJson_1291854837(a_1291854839, opt_1291854840) {
  var result_1291854841 = null;

    result_1291854841 = HEX25_1627391792(a_1291854839);

  return result_1291854841;

}

function toJsonHook_1291854930(t_1291854934, opt_1291854935) {
  var result_1291854936 = null;

    result_1291854936 = newJObject_1627390051();
    Label1: {
      var k_1291854941 = [];
      var v_1291854942 = null;
      var L_1291855129 = len_1627392114(t_1291854934);
      if ((0 < t_1291854934.counter)) {
      var h_1291855130 = t_1291854934.first;
      Label2: {
          Label3: while (true) {
          if (!(0 <= h_1291855130)) break Label3;
            var nxt_1291855132 = t_1291854934.data[chckIndx(h_1291855130, 0, (t_1291854934.data).length - 1)].Field1;
            if (isFilled_1308622880(t_1291854934.data[chckIndx(h_1291855130, 0, (t_1291854934.data).length - 1)].Field0)) {
            k_1291854941 = t_1291854934.data[chckIndx(h_1291855130, 0, (t_1291854934.data).length - 1)].Field2;
            v_1291854942 = t_1291854934.data[chckIndx(h_1291855130, 0, (t_1291854934.data).length - 1)].Field3;
            HEX5BHEX5DHEX3D_1627391903(result_1291854936, k_1291854941, toJson_1291854688(v_1291854942, opt_1291854935));
            if (!((len_1627392114(t_1291854934) == L_1291855129))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_1291855130 = nxt_1291855132;
          }
      };
      }
      
    };

  return result_1291854936;

}

function toJson_1291854852(a_1291854854, opt_1291854855) {
  var result_1291854856 = null;

    result_1291854856 = toJsonHook_1291854930(a_1291854854, opt_1291854855);

  return result_1291854856;

}

function toJson_1291854947(a_1291854949, opt_1291854950) {
  var result_1291854951 = null;

    result_1291854951 = newJArray_1627390082();
    Label1: {
      var ai_1291854958 = null;
      var i_1291855134 = 0;
      var L_1291855135 = (a_1291854949).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855134 < L_1291855135)) break Label3;
            ai_1291854958 = a_1291854949[chckIndx(i_1291855134, 0, (a_1291854949).length - 1)];
            add_1627390190(result_1291854951, toJson_1291854688(ai_1291854958, opt_1291854950));
            i_1291855134 = addInt(i_1291855134, 1);
            if (!(((a_1291854949).length == L_1291855135))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854951;

}

function toJson_1291854700(a_1291854702, opt_1291854703) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var result_1291854704 = null;

    result_1291854704 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854704, [105,115,85,110,113,117,111,116,101,100], toJson_2818589142(a_1291854702.isUnquoted, opt_1291854703));
    HEX5BHEX5DHEX3D_1627391903(result_1291854704, [107,105,110,100], toJson_1291854717(a_1291854702.kind, opt_1291854703));
    switch (a_1291854702.kind) {
    case 4:
      var Temporary1 = a_1291854702;
      if (ConstSet215[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [115,116,114], toJson_1811939932(Temporary1.str, opt_1291854703));
      break;
    case 2:
      var Temporary2 = a_1291854702;
      if (ConstSet216[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [110,117,109], toJson_1291854827(Temporary2.num, opt_1291854703));
      break;
    case 3:
      var Temporary3 = a_1291854702;
      if (ConstSet217[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [102,110,117,109], toJson_1291854837(Temporary3.fnum, opt_1291854703));
      break;
    case 1:
      var Temporary4 = a_1291854702;
      if (ConstSet218[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [98,118,97,108], toJson_2818589142(Temporary4.bval, opt_1291854703));
      break;
    case 0:
      break;
    case 5:
      var Temporary5 = a_1291854702;
      if (ConstSet219[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [102,105,101,108,100,115], toJson_1291854852(Temporary5.fields, opt_1291854703));
      break;
    case 6:
      var Temporary6 = a_1291854702;
      if (ConstSet220[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [101,108,101,109,115], toJson_1291854947(Temporary6.elems, opt_1291854703));
      break;
    }

  return result_1291854704;

}

function toJson_1291854688(a_1291854690, opt_1291854691) {
  var result_1291854692 = null;

    switch (opt_1291854691.jsonNodeMode) {
    case 0:
      result_1291854692 = a_1291854690;
      break;
    case 1:
      result_1291854692 = copy_1627394272(a_1291854690);
      break;
    case 2:
      if ((a_1291854690 == null)) {
      result_1291854692 = newJNull_1627390049();
      }
      else {
        result_1291854692 = toJson_1291854700(a_1291854690, opt_1291854691);
      }
      
      break;
    }

  return result_1291854692;

}

function toJson_1291854571(a_1291854573, opt_1291854574) {
  var result_1291854575 = null;

    result_1291854575 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [107,105,110,100], toJson_1291854584(a_1291854573.kind, opt_1291854574));
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [105,100], toJson_1811939932(a_1291854573.id, opt_1291854574));
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [110,97,109,101], toJson_1811939932(a_1291854573.name, opt_1291854574));
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [115,101,116,116,105,110,103,115], toJson_1291854688(a_1291854573.settings, opt_1291854574));

  return result_1291854575;

}

function toJson_1291854559(a_1291854561, opt_1291854562) {
  var result_1291854563 = null;

    result_1291854563 = newJArray_1627390082();
    Label1: {
      var ai_1291854570 = ({kind: 0, id: [], name: [], settings: null});
      var i_1291855112 = 0;
      var L_1291855113 = (a_1291854561).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855112 < L_1291855113)) break Label3;
            ai_1291854570 = a_1291854561[chckIndx(i_1291855112, 0, (a_1291854561).length - 1)];
            add_1627390190(result_1291854563, toJson_1291854571(ai_1291854570, opt_1291854562));
            i_1291855112 = addInt(i_1291855112, 1);
            if (!(((a_1291854561).length == L_1291855113))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854563;

}

function toJson_1291854975(a_1291854977, opt_1291854978) {
  var result_1291854979 = null;

    result_1291854979 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [102,105,108,101,110,97,109,101], toJson_1811939932(a_1291854977.filename, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [97,115,116], toJson_2818589142(a_1291854977.ast, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [108,97,110,103,117,97,103,101,73,68], toJson_1811939932(a_1291854977.languageID, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [97,112,112,70,105,108,101], toJson_2818589142(a_1291854977.appFile, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [119,111,114,107,115,112,97,99,101,73,100], toJson_1811939932(a_1291854977.workspaceId, opt_1291854978));

  return result_1291854979;

}

function toJson_1291854963(a_1291854965, opt_1291854966) {
  var result_1291854967 = null;

    result_1291854967 = newJArray_1627390082();
    Label1: {
      var ai_1291854974 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_1291855139 = 0;
      var L_1291855140 = (a_1291854965).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855139 < L_1291855140)) break Label3;
            ai_1291854974 = a_1291854965[chckIndx(i_1291855139, 0, (a_1291854965).length - 1)];
            add_1627390190(result_1291854967, toJson_1291854975(ai_1291854974, opt_1291854966));
            i_1291855139 = addInt(i_1291855139, 1);
            if (!(((a_1291854965).length == L_1291855140))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854967;

}

function toJson_1291854515(a_1291854517, opt_1291854518) {
  var result_1291854519 = null;

    result_1291854519 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [116,104,101,109,101], toJson_1811939932(a_1291854517.theme, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,83,105,122,101], toJson_1291854532(a_1291854517.fontSize, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,82,101,103,117,108,97,114], toJson_1811939932(a_1291854517.fontRegular, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,66,111,108,100], toJson_1811939932(a_1291854517.fontBold, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,73,116,97,108,105,99], toJson_1811939932(a_1291854517.fontItalic, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,66,111,108,100,73,116,97,108,105,99], toJson_1811939932(a_1291854517.fontBoldItalic, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], toJson_1291854559(a_1291854517.workspaceFolders, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [111,112,101,110,69,100,105,116,111,114,115], toJson_1291854963(a_1291854517.openEditors, opt_1291854518));

  return result_1291854519;

}

function initToJsonOptions_1811939362() {
  var result_1811939363 = ({enumMode: 0, jsonNodeMode: 0});

    result_1811939363 = nimCopy(result_1811939363, {enumMode: 0, jsonNodeMode: 0}, NTI1811939336);

  return result_1811939363;

}

function spaces_855639150(n_855639151) {
  var result_855639152 = [];

    result_855639152 = nimCopy(null, nsuRepeatChar(32, n_855639151), NTI33554449);

  return result_855639152;

}

function indent_1627394335(s_1627394336, s_1627394336_Idx, i_1627394337) {
    s_1627394336[s_1627394336_Idx].push.apply(s_1627394336[s_1627394336_Idx], spaces_855639150(chckRange(i_1627394337, 0, 2147483647)));;

  
}

function nl_1627394343(s_1627394344, s_1627394344_Idx, ml_1627394345) {
    var Temporary1;

    if (ml_1627394345) {
    Temporary1 = [10];
    }
    else {
    Temporary1 = [32];
    }
    
    s_1627394344[s_1627394344_Idx].push.apply(s_1627394344[s_1627394344_Idx], Temporary1);;

  
}

function newIndent_1627394338(curr_1627394339, indent_1627394340, ml_1627394341) {
  var result_1627394342 = 0;

  BeforeRet: {
    if (ml_1627394341) {
    result_1627394342 = addInt(curr_1627394339, indent_1627394340);
    break BeforeRet;
    }
    else {
      result_1627394342 = indent_1627394340;
      break BeforeRet;
    }
    
  };

  return result_1627394342;

}

function toHexImpl_855638788(x_855638789, len_855638790, handleNegative_855638791) {
  var result_855638792 = [];

    var n_855638794 = x_855638789;
    result_855638792 = nimCopy(null, mnewString(len_855638790), NTI33554449);
    Label1: {
      var j_855638800 = 0;
      var colontmp__1291855157 = 0;
      colontmp__1291855157 = subInt(len_855638790, 1);
      var res_1291855158 = colontmp__1291855157;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_1291855158)) break Label3;
            j_855638800 = res_1291855158;
            result_855638792[chckIndx(j_855638800, 0, (result_855638792).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_855638794 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            n_855638794 = (n_855638794 >>> 4);
            if (((n_855638794 == 0) && handleNegative_855638791)) {
            n_855638794 = 4294967295;
            }
            
            res_1291855158 = subInt(res_1291855158, 1);
          }
      };
    };

  return result_855638792;

}

function toHex_855640046(x_855640048, len_855640049) {
  var result_855640050 = [];

    result_855640050 = nimCopy(null, toHexImpl_855638788((x_855640048 >>> 0), len_855640049, (x_855640048 < 0)), NTI33554449);

  return result_855640050;

}

function escapeJsonUnquoted_1627394346(s_1627394347, result_1627394348, result_1627394348_Idx) {
    Label1: {
      var c_1627394349 = 0;
      var i_1291855153 = 0;
      var L_1291855154 = (s_1627394347).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855153 < L_1291855154)) break Label3;
            c_1627394349 = s_1627394347[chckIndx(i_1291855153, 0, (s_1627394347).length - 1)];
            switch (c_1627394349) {
            case 10:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,110]);;
              break;
            case 8:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,98]);;
              break;
            case 12:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,102]);;
              break;
            case 9:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,116]);;
              break;
            case 11:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,114]);;
              break;
            case 34:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1627394349) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48] || []).concat(toHex_855640046(c_1627394349, 2) || []));;
              break;
            case 92:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1627394348[result_1627394348_Idx], c_1627394349);;
              break;
            }
            i_1291855153 = addInt(i_1291855153, 1);
            if (!(((s_1627394347).length == L_1291855154))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function escapeJson_1627394367(s_1627394368, result_1627394369, result_1627394369_Idx) {
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;
    escapeJsonUnquoted_1627394346(s_1627394368, result_1627394369, result_1627394369_Idx);
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;

  
}

function toUgly_1627394377(result_1627394378, result_1627394378_Idx, node_1627394379) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1627394380 = false;
    switch (node_1627394379.kind) {
    case 6:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [91]);;
      Label1: {
        var child_1627394384 = null;
        var colontmp__1291855161 = [];
        var Temporary2 = node_1627394379;
        if (ConstSet223[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        colontmp__1291855161 = Temporary2.elems;
        var i_1291855162 = 0;
        var L_1291855163 = (colontmp__1291855161).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291855162 < L_1291855163)) break Label4;
              child_1627394384 = colontmp__1291855161[chckIndx(i_1291855162, 0, (colontmp__1291855161).length - 1)];
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, child_1627394384);
              i_1291855162 = addInt(i_1291855162, 1);
              if (!(((colontmp__1291855161).length == L_1291855163))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [93]);;
      break;
    case 5:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [123]);;
      Label5: {
        var key_1627394389 = [];
        var value_1627394390 = null;
        var colontmp__1291855166 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1627394379;
        if (ConstSet224[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291855166 = nimCopy(colontmp__1291855166, Temporary6.fields, NTI1627389966);
        var L_1291855167 = len_1627392114(colontmp__1291855166);
        if ((0 < colontmp__1291855166.counter)) {
        var h_1291855168 = colontmp__1291855166.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291855168)) break Label8;
              var nxt_1291855170 = colontmp__1291855166.data[chckIndx(h_1291855168, 0, (colontmp__1291855166.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855166.data[chckIndx(h_1291855168, 0, (colontmp__1291855166.data).length - 1)].Field0)) {
              key_1627394389 = colontmp__1291855166.data[chckIndx(h_1291855168, 0, (colontmp__1291855166.data).length - 1)].Field2;
              value_1627394390 = colontmp__1291855166.data[chckIndx(h_1291855168, 0, (colontmp__1291855166.data).length - 1)].Field3;
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              escapeJson_1627394367(key_1627394389, result_1627394378, result_1627394378_Idx);
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [58]);;
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, value_1627394390);
              if (!((len_1627392114(colontmp__1291855166) == L_1291855167))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855168 = nxt_1291855170;
            }
        };
        }
        
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [125]);;
      break;
    case 4:
      if (node_1627394379.isUnquoted) {
      var Temporary9 = node_1627394379;
      if (ConstSet225[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1627394379;
        if (ConstSet226[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      escapeJson_1627394367(Temporary10.str, result_1627394378, result_1627394378_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1627394379;
      if (ConstSet227[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
      addInt_301990087(result_1627394378, result_1627394378_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1627394379;
      if (ConstSet228[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394378, result_1627394378_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1627394379;
        if (ConstSet229[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary13);;
      break;
    case 0:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [110,117,108,108]);;
      break;
    }

  
}

function toPretty_1627394395(result_1627394396, result_1627394396_Idx, node_1627394397, indent_1627394398, ml_1627394399, lstArr_1627394400, currIndent_1627394401) {
        var Temporary1;
        var Temporary3;
      var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary12;
              var Temporary15;
              var Temporary16;

    switch (node_1627394397.kind) {
    case 5:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary1 = node_1627394397;
        if (ConstSet221[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      if ((0 < len_1627392114(Temporary1.fields))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      var i_1627394450 = 0;
      Label2: {
        var key_1627394455 = [];
        var val_1627394456 = null;
        var colontmp__1291855143 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary3 = node_1627394397;
        if (ConstSet222[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291855143 = nimCopy(colontmp__1291855143, Temporary3.fields, NTI1627389966);
        var L_1291855144 = len_1627392114(colontmp__1291855143);
        if ((0 < colontmp__1291855143.counter)) {
        var h_1291855145 = colontmp__1291855143.first;
        Label4: {
            Label5: while (true) {
            if (!(0 <= h_1291855145)) break Label5;
              var nxt_1291855147 = colontmp__1291855143.data[chckIndx(h_1291855145, 0, (colontmp__1291855143.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855143.data[chckIndx(h_1291855145, 0, (colontmp__1291855143.data).length - 1)].Field0)) {
              key_1627394455 = colontmp__1291855143.data[chckIndx(h_1291855145, 0, (colontmp__1291855143.data).length - 1)].Field2;
              val_1627394456 = colontmp__1291855143.data[chckIndx(h_1291855145, 0, (colontmp__1291855143.data).length - 1)].Field3;
              if ((0 < i_1627394450)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              i_1627394450 = addInt(i_1627394450, 1);
              indent_1627394335(result_1627394396, result_1627394396_Idx, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              escapeJson_1627394367(key_1627394455, result_1627394396, result_1627394396_Idx);
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [58,32]);;
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, val_1627394456, indent_1627394398, ml_1627394399, false, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              if (!((len_1627392114(colontmp__1291855143) == L_1291855144))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855145 = nxt_1291855147;
            }
        };
        }
        
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [125]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123,125]);;
      }
      
      break;
    case 4:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      toUgly_1627394377(result_1627394396, result_1627394396_Idx, node_1627394397);
      break;
    case 2:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary6 = node_1627394397;
      if (ConstSet230[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      addInt_301990087(result_1627394396, result_1627394396_Idx, Temporary6.num);
      break;
    case 3:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary7 = node_1627394397;
      if (ConstSet231[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394396, result_1627394396_Idx, Temporary7.fnum);
      break;
    case 1:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary9 = node_1627394397;
        if (ConstSet232[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      if (Temporary9.bval) {
      Temporary8 = [116,114,117,101];
      }
      else {
      Temporary8 = [102,97,108,115,101];
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], Temporary8);;
      break;
    case 6:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary10 = node_1627394397;
        if (ConstSet233[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      if (!(((Temporary10.elems).length == 0))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      Label11: {
        var i_1627394476 = 0;
        var colontmp__1291855149 = 0;
        var Temporary12 = node_1627394397;
        if (ConstSet234[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__1291855149 = subInt((Temporary12.elems).length, 1);
        var res_1291855150 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_1291855150 <= colontmp__1291855149)) break Label14;
              i_1627394476 = res_1291855150;
              if ((0 < i_1627394476)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              var Temporary15 = node_1627394397;
              if (ConstSet235[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, (Temporary16 = Temporary15.elems, Temporary16)[chckIndx(i_1627394476, 0, (Temporary16).length - 1)], indent_1627394398, ml_1627394399, true, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              res_1291855150 = addInt(res_1291855150, 1);
            }
        };
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [93]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91,93]);;
      }
      
      break;
    case 0:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [110,117,108,108]);;
      break;
    }

  
}

function pretty_1627394477(node_1627394478, indent_1627394479) {
  var result_1627394480 = [[]];

    result_1627394480[0] = nimCopy(null, [], NTI33554449);
    toPretty_1627394395(result_1627394480, 0, node_1627394478, indent_1627394479, true, false, 0);

  return result_1627394480[0];

}

function saveAppState_1291853866(self_1291853867) {
              var Temporary5;
            
function HEX3Aanonymous_1291854402(wf_1291854413) {
              var result_1291854416 = [];

                result_1291854416 = nimCopy(null, HEX24_2046820617(wf_1291854413.id), NTI33554449);

              return result_1291854416;

            }
            
function HEX3Aanonymous_1291854473(wf_1291854484) {
              var result_1291854487 = [];

                result_1291854487 = nimCopy(null, HEX24_2046820617(wf_1291854484.id), NTI33554449);

              return result_1291854487;

            }

    var state_1291854314 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
    state_1291854314.theme = nimCopy(null, self_1291853867.theme.path, NTI33554449);
    if ((self_1291853867.backend == 1)) {
    state_1291854314.fontSize = self_1291853867.loadedFontSize;
    }
    else {
      state_1291854314.fontSize = fontSize_2768240784(self_1291853867.platform);
    }
    
    state_1291854314.fontRegular = nimCopy(null, self_1291853867.fontRegular, NTI33554449);
    state_1291854314.fontBold = nimCopy(null, self_1291853867.fontBold, NTI33554449);
    state_1291854314.fontItalic = nimCopy(null, self_1291853867.fontItalic, NTI33554449);
    state_1291854314.fontBoldItalic = nimCopy(null, self_1291853867.fontBoldItalic, NTI33554449);
    Label1: {
      var workspaceFolder_1291854342 = null;
      var i_1291855102 = 0;
      var L_1291855103 = (self_1291853867.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855102 < L_1291855103)) break Label3;
            workspaceFolder_1291854342 = self_1291853867.workspace.folders[chckIndx(i_1291855102, 0, (self_1291853867.workspace.folders).length - 1)];
            Label4: {
              if (isObj(workspaceFolder_1291854342.m_type, NTI2264924164)) {
              Temporary5 = 0;
              }
              else {
              if (isObj(workspaceFolder_1291854342.m_type, NTI2399141893)) {
              Temporary5 = 1;
              }
              else {
              if (isObj(workspaceFolder_1291854342.m_type, NTI2281701380)) {
              Temporary5 = 2;
              }
              else {
                break Label4;
              }
              }}
              var kind_1291854364 = Temporary5;
              state_1291854314.workspaceFolders.push({kind: kind_1291854364, id: HEX24_2046820617(workspaceFolder_1291854342.id), name: nimCopy(null, workspaceFolder_1291854342.name, NTI33554449), settings: settings_2214592534(workspaceFolder_1291854342)});;
            };
            i_1291855102 = addInt(i_1291855102, 1);
            if (!(((self_1291853867.workspace.folders).length == L_1291855103))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label6: {
      var view_1291854390 = null;
      var i_1291855107 = 0;
      var L_1291855108 = (self_1291853867.views).length;
      Label7: {
          Label8: while (true) {
          if (!(i_1291855107 < L_1291855108)) break Label8;
            view_1291854390 = self_1291853867.views[chckIndx(i_1291855107, 0, (self_1291853867.views).length - 1)];
            if (isObj(view_1291854390.document.m_type, NTI2818572427)) {
            var textDocument_1291854397 = view_1291854390.document;
            state_1291854314.openEditors.push({filename: nimCopy(null, textDocument_1291854397.filename, NTI33554449), ast: false, languageID: nimCopy(null, textDocument_1291854397.languageId, NTI33554449), appFile: textDocument_1291854397.appFile, workspaceId: get_2348810295(map_1291854418(textDocument_1291854397.workspace, HEX3Aanonymous_1291854402), [])});;
            }
            else {
            if (isObj(view_1291854390.document.m_type, NTI2969568591)) {
            var astDocument_1291854468 = view_1291854390.document;
            state_1291854314.openEditors.push({filename: nimCopy(null, astDocument_1291854468.filename, NTI33554449), ast: true, languageID: [97,115,116], appFile: astDocument_1291854468.appFile, workspaceId: get_2348810295(map_1291854418(astDocument_1291854468.workspace, HEX3Aanonymous_1291854473), [])});;
            }
            }
            i_1291855107 = addInt(i_1291855107, 1);
            if (!(((self_1291853867.views).length == L_1291855108))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var serialized_1291855008 = toJson_1291854515(state_1291854314, initToJsonOptions_1811939362());
    saveApplicationFile_2365587480(fs_2365587509, [99,111,110,102,105,103,46,106,115,111,110], pretty_1627394477(serialized_1291855008, 2));
    saveApplicationFile_2365587480(fs_2365587509, [111,112,116,105,111,110,115,46,106,115,111,110], pretty_1627394477(self_1291853867.options, 2));

  
}

function saveAppStateJsWrapper_1291854308(self_1291855089) {
    saveAppState_1291853866(self_1291855089);

  
}
editor_prototype.saveAppState = function() { return (saveAppStateJsWrapper_1291854308(this));};

function requestRender_1291855177(self_1291855178, redrawEverything_1291855179) {
    requestRender_2768240746(self_1291855178.platform, redrawEverything_1291855179);

  
}

function requestRenderJsWrapper_1291855173(self_1291855207, redrawEverything_1291855208) {
    requestRender_1291855177(self_1291855207, redrawEverything_1291855208);

  
}
editor_prototype.requestRender = function(redrawEverything_ /* : bool */) { return (requestRenderJsWrapper_1291855173(this, redrawEverything_));};

function setHandleInputs_2113929570(config_2113929571, value_2113929572) {
    config_2113929571.handleInputs = value_2113929572;
    config_2113929571.revision = addInt(config_2113929571.revision, 1);

  
}

function setHandleInputs_1291855229(self_1291855230, context_1291855231, value_1291855232) {
    setHandleInputs_2113929570(getEventHandlerConfig_1291849162(self_1291855230, context_1291855231), value_1291855232);

  
}

function setHandleInputsJsWrapper_1291855225(self_1291855261, context_1291855262, value_1291855263) {
    setHandleInputs_1291855229(self_1291855261, context_1291855262, value_1291855263);

  
}
editor_prototype.setHandleInputs = function(context_ /* : string */, value_ /* : bool */) { return (setHandleInputsJsWrapper_1291855225(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setHandleActions_2113929577(config_2113929578, value_2113929579) {
    config_2113929578.handleActions = value_2113929579;
    config_2113929578.revision = addInt(config_2113929578.revision, 1);

  
}

function setHandleActions_1291855289(self_1291855290, context_1291855291, value_1291855292) {
    setHandleActions_2113929577(getEventHandlerConfig_1291849162(self_1291855290, context_1291855291), value_1291855292);

  
}

function setHandleActionsJsWrapper_1291855285(self_1291855321, context_1291855322, value_1291855323) {
    setHandleActions_1291855289(self_1291855321, context_1291855322, value_1291855323);

  
}
editor_prototype.setHandleActions = function(context_ /* : string */, value_ /* : bool */) { return (setHandleActionsJsWrapper_1291855285(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllActions_2113929584(config_2113929585, value_2113929586) {
    config_2113929585.consumeAllActions = value_2113929586;
    config_2113929585.revision = addInt(config_2113929585.revision, 1);

  
}

function setConsumeAllActions_1291855349(self_1291855350, context_1291855351, value_1291855352) {
    setConsumeAllActions_2113929584(getEventHandlerConfig_1291849162(self_1291855350, context_1291855351), value_1291855352);

  
}

function setConsumeAllActionsJsWrapper_1291855345(self_1291855381, context_1291855382, value_1291855383) {
    setConsumeAllActions_1291855349(self_1291855381, context_1291855382, value_1291855383);

  
}
editor_prototype.setConsumeAllActions = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllActionsJsWrapper_1291855345(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllInput_2113929591(config_2113929592, value_2113929593) {
    config_2113929592.consumeAllInput = value_2113929593;
    config_2113929592.revision = addInt(config_2113929592.revision, 1);

  
}

function setConsumeAllInput_1291855409(self_1291855410, context_1291855411, value_1291855412) {
    setConsumeAllInput_2113929591(getEventHandlerConfig_1291849162(self_1291855410, context_1291855411), value_1291855412);

  
}

function setConsumeAllInputJsWrapper_1291855405(self_1291855441, context_1291855442, value_1291855443) {
    setConsumeAllInput_1291855409(self_1291855441, context_1291855442, value_1291855443);

  
}
editor_prototype.setConsumeAllInput = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllInputJsWrapper_1291855405(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function clearWorkspaceCaches_1291855546(self_1291855547) {
    Label1: {
      var wf_1291855551 = null;
      var i_1291855589 = 0;
      var L_1291855590 = (self_1291855547.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855589 < L_1291855590)) break Label3;
            wf_1291855551 = self_1291855547.workspace.folders[chckIndx(i_1291855589, 0, (self_1291855547.workspace.folders).length - 1)];
            clearDirectoryCache_2214592538(wf_1291855551);
            i_1291855589 = addInt(i_1291855589, 1);
            if (!(((self_1291855547.workspace.folders).length == L_1291855590))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clearWorkspaceCachesJsWrapper_1291855542(self_1291855578) {
    clearWorkspaceCaches_1291855546(self_1291855578);

  
}
editor_prototype.clearWorkspaceCaches = function() { return (clearWorkspaceCachesJsWrapper_1291855542(this));};

function openWorkspaceKind_1291851100(workspaceFolder_1291851101) {
  var result_1291855465 = 0;

  BeforeRet: {
    if (isObj(workspaceFolder_1291851101.m_type, NTI2264924164)) {
    result_1291855465 = 0;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851101.m_type, NTI2399141893)) {
    result_1291855465 = 1;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851101.m_type, NTI2281701380)) {
    result_1291855465 = 2;
    break BeforeRet;
    }
    
    if (true) {
    failedAssertImpl_268435515([101,100,105,116,111,114,46,110,105,109,40,53,57,52,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
  };

  return result_1291855465;

}

function HEX3DHEX3D_1627392043(x_1627392045, y_1627392046) {
  var result_1627392047 = false;

  BeforeRet: {
    var sameObject_1627392055 = false;
    sameObject_1627392055 = x_1627392045 === y_1627392046
    if (sameObject_1627392055) {
    result_1627392047 = true;
    break BeforeRet;
    }
    
    if (!(((x_1627392045).length == (y_1627392046).length))) {
    result_1627392047 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1627392069 = 0;
      var colontmp__1291855671 = 0;
      colontmp__1291855671 = subInt((x_1627392045).length, 1);
      var res_1291855672 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1291855672 <= colontmp__1291855671)) break Label3;
            i_1627392069 = res_1291855672;
            if (!(HEX3DHEX3D_1627392026(x_1627392045[chckIndx(i_1627392069, 0, (x_1627392045).length - 1)], y_1627392046[chckIndx(i_1627392069, 0, (y_1627392046).length - 1)]))) {
            result_1627392047 = false;
            break BeforeRet;
            }
            
            res_1291855672 = addInt(res_1291855672, 1);
          }
      };
    };
    result_1627392047 = true;
    break BeforeRet;
  };

  return result_1627392047;

}

function HEX3DHEX3D_1627392026(a_1627392027, b_1627392028) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
          var Temporary11;
          var Temporary12;
          var Temporary14;
                  var Temporary17;
                  var Temporary18;
                  var Temporary19;

  var result_1627392029 = false;

  BeforeRet: {
    if ((a_1627392027 == null)) {
    if ((b_1627392028 == null)) {
    result_1627392029 = true;
    break BeforeRet;
    }
    
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
    if (((b_1627392028 == null) || !((a_1627392027.kind == b_1627392028.kind)))) {
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
      switch (a_1627392027.kind) {
      case 4:
        var Temporary1 = a_1627392027;
        if (ConstSet236[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
        var Temporary2 = b_1627392028;
        if (ConstSet237[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        result_1627392029 = eqStrings(Temporary1.str, Temporary2.str);
        break;
      case 2:
        var Temporary3 = a_1627392027;
        if (ConstSet238[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        var Temporary4 = b_1627392028;
        if (ConstSet239[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        result_1627392029 = (Temporary3.num == Temporary4.num);
        break;
      case 3:
        var Temporary5 = a_1627392027;
        if (ConstSet240[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
        var Temporary6 = b_1627392028;
        if (ConstSet241[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        result_1627392029 = (Temporary5.fnum == Temporary6.fnum);
        break;
      case 1:
        var Temporary7 = a_1627392027;
        if (ConstSet242[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        var Temporary8 = b_1627392028;
        if (ConstSet243[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        result_1627392029 = (Temporary7.bval == Temporary8.bval);
        break;
      case 0:
        result_1627392029 = true;
        break;
      case 6:
        var Temporary9 = a_1627392027;
        if (ConstSet244[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
        var Temporary10 = b_1627392028;
        if (ConstSet245[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
        result_1627392029 = HEX3DHEX3D_1627392043(Temporary9.elems, Temporary10.elems);
        break;
      case 5:
          var Temporary11 = a_1627392027;
          if (ConstSet246[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
          var Temporary12 = b_1627392028;
          if (ConstSet247[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        if (!((len_1627392114(Temporary11.fields) == len_1627392114(Temporary12.fields)))) {
        result_1627392029 = false;
        break BeforeRet;
        }
        
        Label13: {
          var key_1627392496 = [];
          var val_1627392497 = null;
          var colontmp__1291855665 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary14 = a_1627392027;
          if (ConstSet248[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
          colontmp__1291855665 = nimCopy(colontmp__1291855665, Temporary14.fields, NTI1627389966);
          var L_1291855666 = len_1627392114(colontmp__1291855665);
          if ((0 < colontmp__1291855665.counter)) {
          var h_1291855667 = colontmp__1291855665.first;
          Label15: {
              Label16: while (true) {
              if (!(0 <= h_1291855667)) break Label16;
                var nxt_1291855669 = colontmp__1291855665.data[chckIndx(h_1291855667, 0, (colontmp__1291855665.data).length - 1)].Field1;
                if (isFilled_1308622880(colontmp__1291855665.data[chckIndx(h_1291855667, 0, (colontmp__1291855665.data).length - 1)].Field0)) {
                key_1627392496 = colontmp__1291855665.data[chckIndx(h_1291855667, 0, (colontmp__1291855665.data).length - 1)].Field2;
                val_1627392497 = colontmp__1291855665.data[chckIndx(h_1291855667, 0, (colontmp__1291855665.data).length - 1)].Field3;
                  var Temporary17 = b_1627392028;
                  if (ConstSet249[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1627389955)); }
                if (!(hasKey_1627392538(Temporary17.fields, key_1627392496))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                  var Temporary18 = b_1627392028;
                  if (ConstSet250[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1627389955)); }
                if (!(HEX3DHEX3D_1627392026((Temporary19 = HEX5BHEX5D_1627392612(Temporary18.fields, key_1627392496), Temporary19)[0][Temporary19[1]], val_1627392497))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                if (!((len_1627392114(colontmp__1291855665) == L_1291855666))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_1291855667 = nxt_1291855669;
              }
          };
          }
          
        };
        result_1627392029 = true;
        break;
      }
    }
    }
  };

  return result_1627392029;

}

function addWorkspaceFolder_1291851102(self_1291851103, workspaceFolder_1291851104) {
  var result_1291855492 = false;

  BeforeRet: {
    Label1: {
      var wf_1291855496 = null;
      var i_1291855661 = 0;
      var L_1291855662 = (self_1291851103.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855661 < L_1291855662)) break Label3;
            wf_1291855496 = self_1291851103.workspace.folders[chckIndx(i_1291855661, 0, (self_1291851103.workspace.folders).length - 1)];
            if (((openWorkspaceKind_1291851100(wf_1291855496) == openWorkspaceKind_1291851100(workspaceFolder_1291851104)) && HEX3DHEX3D_1627392026(settings_2214592534(wf_1291855496), settings_2214592534(workspaceFolder_1291851104)))) {
            result_1291855492 = false;
            break BeforeRet;
            }
            
            i_1291855661 = addInt(i_1291855661, 1);
            if (!(((self_1291851103.workspace.folders).length == L_1291855662))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (HEX3DHEX3D_2046820626(workspaceFolder_1291851104.id, idNone_2046820633())) {
    workspaceFolder_1291851104.id = nimCopy(workspaceFolder_1291851104.id, newId_2046820597(), NTI2046820355);
    }
    
    var fmtRes_1291855506 = [mnewString(0)];
    fmtRes_1291855506[0].push.apply(fmtRes_1291855506[0], [79,112,101,110,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
    formatValue_721420459(fmtRes_1291855506, 0, workspaceFolder_1291851104.name, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291855506[0], NTI33554449)]);
    self_1291851103.workspace.folders.push(workspaceFolder_1291851104);;
    result_1291855492 = true;
    break BeforeRet;
  };

  return result_1291855492;

}

function initTable_2281703693(initialSize_2281703696) {
  var result_2281703697 = ({data: [], counter: 0});

    var correctSizeHEX60gensym35_2281703699 = slotsNeeded_1308622891(chckRange(initialSize_2281703696, 0, 2147483647));
    result_2281703697.counter = 0;
    result_2281703697.data = new Array(chckRange(correctSizeHEX60gensym35_2281703699, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2281703699, 0, 2147483647) ; ++i) { result_2281703697.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }
  return result_2281703697;

}

function newWorkspaceFolderGithub_2281703680(user_2281703681, repository_2281703682, branchOrHash_2281703683) {
  var result_2281703684 = null;

    result_2281703684 = ({m_type: NTI2281701380, baseUrl: [], user: [], repository: [], branchOrHash: [], cachedDirectoryListings: ({data: [], counter: 0}), pathToSha: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    var fmtRes_2281703692 = [mnewString(0)];
    fmtRes_2281703692[0].push.apply(fmtRes_2281703692[0], [104,116,116,112,115,58,47,47,97,112,105,46,103,105,116,104,117,98,46,99,111,109,47,114,101,112,111,115,47]);;
    formatValue_721420459(fmtRes_2281703692, 0, user_2281703681, []);
    fmtRes_2281703692[0].push.apply(fmtRes_2281703692[0], [47]);;
    formatValue_721420459(fmtRes_2281703692, 0, repository_2281703682, []);
    result_2281703684.baseUrl = nimCopy(null, fmtRes_2281703692[0], NTI33554449);
    result_2281703684.user = nimCopy(null, user_2281703681, NTI33554449);
    result_2281703684.repository = nimCopy(null, repository_2281703682, NTI33554449);
    result_2281703684.branchOrHash = nimCopy(null, branchOrHash_2281703683, NTI33554449);
    result_2281703684.cachedDirectoryListings = nimCopy(result_2281703684.cachedDirectoryListings, initTable_2281703693(32), NTI2281701388);
    result_2281703684.pathToSha = nimCopy(result_2281703684.pathToSha, initTable_1795162117(32), NTI1795162120);
    var fmtRes_2281703712 = [mnewString(0)];
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [71,105,116,72,117,98,58]);;
    formatValue_721420459(fmtRes_2281703712, 0, user_2281703681, []);
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [47]);;
    formatValue_721420459(fmtRes_2281703712, 0, repository_2281703682, []);
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [47]);;
    formatValue_721420459(fmtRes_2281703712, 0, branchOrHash_2281703683, []);
    result_2281703684.name = nimCopy(null, fmtRes_2281703712[0], NTI33554449);

  return result_2281703684;

}

function openGithubWorkspace_1291855598(self_1291855599, user_1291855600, repository_1291855601, branchOrHash_1291855602) {
    var _ = addWorkspaceFolder_1291851102(self_1291855599, newWorkspaceFolderGithub_2281703680(user_1291855600, repository_1291855601, branchOrHash_1291855602));

  
}

function openGithubWorkspaceJsWrapper_1291855594(self_1291855632, user_1291855633, repository_1291855634, branchOrHash_1291855635) {
    openGithubWorkspace_1291855598(self_1291855632, user_1291855633, repository_1291855634, branchOrHash_1291855635);

  
}
editor_prototype.openGithubWorkspace = function(user_ /* : string */, repository_ /* : string */, branchOrHash_ /* : string */) { return (openGithubWorkspaceJsWrapper_1291855594(this, user_ == undefined ? undefined : cstrToNimstr(user_), repository_ == undefined ? undefined : cstrToNimstr(repository_), branchOrHash_ == undefined ? undefined : cstrToNimstr(branchOrHash_)));};

function newWorkspaceFolderAbsytreeServer_2399144348(url_2399144349) {
  var result_2399144350 = null;

    result_2399144350 = ({m_type: NTI2399141893, baseUrl: [], cachedDirectoryListings: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2399144350.baseUrl = nimCopy(null, url_2399144349, NTI33554449);
    var _ = updateWorkspaceName_2399142377(result_2399144350);

  return result_2399144350;

}

function openAbsytreeServerWorkspace_1291855680(self_1291855681, url_1291855682) {
    var _ = addWorkspaceFolder_1291851102(self_1291855681, newWorkspaceFolderAbsytreeServer_2399144348(url_1291855682));

  
}

function openAbsytreeServerWorkspaceJsWrapper_1291855676(self_1291855710, url_1291855711) {
    openAbsytreeServerWorkspace_1291855680(self_1291855710, url_1291855711);

  
}
editor_prototype.openAbsytreeServerWorkspace = function(url_ /* : string */) { return (openAbsytreeServerWorkspaceJsWrapper_1291855676(this, url_ == undefined ? undefined : cstrToNimstr(url_)));};

function getFlag_1291848874(self_1291848875, flag_1291848876, default_1291848877) {
  var result_1291855736 = false;

  BeforeRet: {
    result_1291855736 = getOption_2818583613(self_1291848875, flag_1291848876, default_1291848877);
    break BeforeRet;
  };

  return result_1291855736;

}

function getFlagJsWrapper2_1291855728(self_1291855775, flag_1291855776, default_1291855777) {
  var result_1291855778 = false;

    result_1291855778 = getFlag_1291848874(self_1291855775, flag_1291855776, default_1291855777);

  return result_1291855778;

}
editor_prototype.getFlag2 = function(flag_ /* : string */, default_ /* : bool */) { return (getFlagJsWrapper2_1291855728(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), default_));};

function setOption_1291855812(editor_1291855814, path_1291855815, value_1291855816) {
  BeforeRet: {
    Label1: {
      if ((editor_1291855814 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym273_1291855831 = nsuSplitString(path_1291855815, [46], -1);
      var nodeHEX60gensym273_1291855832 = editor_1291855814.options;
      Label2: {
        var keyHEX60gensym273_1291855851 = [];
        var colontmp__1291855919 = [];
        colontmp__1291855919 = HEX5BHEX5D_2818589611(pathItemsHEX60gensym273_1291855831, HEX2EHEX2E_1040187488(0, 2));
        var i_1291855920 = 0;
        var L_1291855921 = (colontmp__1291855919).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291855920 < L_1291855921)) break Label4;
              keyHEX60gensym273_1291855851 = colontmp__1291855919[chckIndx(i_1291855920, 0, (colontmp__1291855919).length - 1)];
              if (!((nodeHEX60gensym273_1291855832.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym273_1291855832, keyHEX60gensym273_1291855851))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym273_1291855832, keyHEX60gensym273_1291855851, newJObject_1627390051());
              }
              
              nodeHEX60gensym273_1291855832 = HEX5BHEX5D_1627393037(nodeHEX60gensym273_1291855832, keyHEX60gensym273_1291855851);
              i_1291855920 = addInt(i_1291855920, 1);
              if (!(((colontmp__1291855919).length == L_1291855921))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym273_1291855832 == null) || !((nodeHEX60gensym273_1291855832.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym273_1291855832, HEX5BHEX5D_2701132581(pathItemsHEX60gensym273_1291855831, 1), newJBool_1627390046(value_1291855816));
    };
    requestRender_2768240746(editor_1291855814.platform, true);
  };

  
}

function setFlag_1291848951(self_1291848952, flag_1291848953, value_1291848954) {
    setOption_1291855812(self_1291848952, flag_1291848953, value_1291848954);

  
}

function setFlagJsWrapper2_1291855804(self_1291855895, flag_1291855896, value_1291855897) {
    setFlag_1291848951(self_1291855895, flag_1291855896, value_1291855897);

  
}
editor_prototype.setFlag2 = function(flag_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper2_1291855804(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), value_));};

function toggleFlag_1291848955(self_1291848956, flag_1291848957) {
    setFlag_1291848951(self_1291848956, flag_1291848957, !(getFlag_1291848874(self_1291848956, flag_1291848957, false)));
    requestRender_2768240746(self_1291848956.platform, true);

  
}

function toggleFlagJsWrapper_1291855925(self_1291855959, flag_1291855960) {
    toggleFlag_1291848955(self_1291855959, flag_1291855960);

  
}
editor_prototype.toggleFlag = function(flag_ /* : string */) { return (toggleFlagJsWrapper_1291855925(this, flag_ == undefined ? undefined : cstrToNimstr(flag_)));};

function setOption_1291855981(self_1291855982, option_1291855983, value_1291855984) {
  BeforeRet: {
    if ((self_1291855982 == null)) {
    break BeforeRet;
    }
    
    requestRender_2768240746(self_1291855982.platform, true);
    var pathItems_1291855988 = nsuSplitString(option_1291855983, [46], -1);
    var node_1291855989 = self_1291855982.options;
    Label1: {
      var key_1291856008 = [];
      var colontmp__1291856070 = [];
      colontmp__1291856070 = HEX5BHEX5D_2818589611(pathItems_1291855988, HEX2EHEX2E_1040187488(0, 2));
      var i_1291856071 = 0;
      var L_1291856072 = (colontmp__1291856070).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856071 < L_1291856072)) break Label3;
            key_1291856008 = colontmp__1291856070[chckIndx(i_1291856071, 0, (colontmp__1291856070).length - 1)];
            if (!((node_1291855989.kind == 5))) {
            break BeforeRet;
            }
            
            if (!(contains_1627393212(node_1291855989, key_1291856008))) {
            HEX5BHEX5DHEX3D_1627391903(node_1291855989, key_1291856008, newJObject_1627390051());
            }
            
            node_1291855989 = HEX5BHEX5D_1627393037(node_1291855989, key_1291856008);
            i_1291856071 = addInt(i_1291856071, 1);
            if (!(((colontmp__1291856070).length == L_1291856072))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((node_1291855989 == null) || !((node_1291855989.kind == 5)))) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_1627391903(node_1291855989, HEX5BHEX5D_2701132581(pathItems_1291855988, 1), value_1291855984);
  };

  
}

function setOptionJsWrapper_1291855977(self_1291856052, option_1291856053, value_1291856054) {
    setOption_1291855981(self_1291856052, option_1291856053, value_1291856054);

  
}
editor_prototype.setOption = function(option_ /* : string */, value_ /* : JsonNode */) { return (setOptionJsWrapper_1291855977(this, option_ == undefined ? undefined : cstrToNimstr(option_), value_));};

function quit_1291856080(self_1291856081) {
    self_1291856081.closeRequested = true;

  
}

function quitJsWrapper_1291856076(self_1291856108) {
    quit_1291856080(self_1291856108);

  
}
editor_prototype.quit = function() { return (quitJsWrapper_1291856076(this));};

function changeFontSize_1291856124(self_1291856125, amount_1291856126) {
    fontSizeHEX3D_2768240776(self_1291856125.platform, (fontSize_2768240784(self_1291856125.platform) + amount_1291856126));
    requestRender_2768240746(self_1291856125.platform, true);

  
}

function changeFontSizeJsWrapper_1291856120(self_1291856154, amount_1291856155) {
    changeFontSize_1291856124(self_1291856154, amount_1291856155);

  
}
editor_prototype.changeFontSize = function(amount_ /* : float32 */) { return (changeFontSizeJsWrapper_1291856120(this, amount_));};

function rawGet_1291848320(t_1291848323, key_1291848324, hc_1291848325, hc_1291848325_Idx) {
  var result_1291848326 = 0;

  BeforeRet: {
    hc_1291848325[hc_1291848325_Idx] = hash_1325400491(key_1291848324);
    if ((hc_1291848325[hc_1291848325_Idx] == 0)) {
    hc_1291848325[hc_1291848325_Idx] = 314159265;
    }
    
    if (((t_1291848323.data).length == 0)) {
    result_1291848326 = -1;
    break BeforeRet;
    }
    
    var h_1291848378 = (hc_1291848325[hc_1291848325_Idx] & (t_1291848323.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field0)) break Label2;
          if (((t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field0 == hc_1291848325[hc_1291848325_Idx]) && eqStrings(t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field1, key_1291848324))) {
          result_1291848326 = h_1291848378;
          break BeforeRet;
          }
          
          h_1291848378 = nextTry_1308622883(h_1291848378, (t_1291848323.data).length - 1);
        }
    };
    result_1291848326 = subInt(-1, h_1291848378);
  };

  return result_1291848326;

}

function mustRehash_1291851922(t_1291851924) {
  var result_1291851925 = false;

    if (!((t_1291851924.counter < (t_1291851924.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291851925 = ((mulInt((t_1291851924.data).length, 2) < mulInt(t_1291851924.counter, 3)) || (subInt((t_1291851924.data).length, t_1291851924.counter) < 4));

  return result_1291851925;

}

function rawInsert_1291852371(t_1291852375, data_1291852376, data_1291852376_Idx, key_1291852377, val_1291852378, hc_1291852379, h_1291852380) {
    data_1291852376[data_1291852376_Idx][chckIndx(h_1291852380, 0, (data_1291852376[data_1291852376_Idx]).length - 1)].Field1 = nimCopy(null, key_1291852377, NTI33554449);
    data_1291852376[data_1291852376_Idx][chckIndx(h_1291852380, 0, (data_1291852376[data_1291852376_Idx]).length - 1)].Field2 = val_1291852378;
    data_1291852376[data_1291852376_Idx][chckIndx(h_1291852380, 0, (data_1291852376[data_1291852376_Idx]).length - 1)].Field0 = hc_1291852379;

  
}

function enlarge_1291852077(t_1291852080) {
    var n_1291852083 = [];
    n_1291852083 = new Array(chckRange(mulInt((t_1291852080.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291852080.data).length, 2), 0, 2147483647) ; ++i) { n_1291852083[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    var Temporary1 = t_1291852080.data; t_1291852080.data = n_1291852083; n_1291852083 = Temporary1;    Label2: {
      var i_1291852147 = 0;
      var colontmp__1291856482 = 0;
      colontmp__1291856482 = (n_1291852083).length - 1;
      var res_1291856483 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291856483 <= colontmp__1291856482)) break Label4;
            i_1291852147 = res_1291856483;
            var eh_1291852201 = n_1291852083[chckIndx(i_1291852147, 0, (n_1291852083).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291852201)) {
            var j_1291852205 = (eh_1291852201 & (t_1291852080.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291852080.data[chckIndx(j_1291852205, 0, (t_1291852080.data).length - 1)].Field0)) break Label6;
                  j_1291852205 = nextTry_1308622883(j_1291852205, (t_1291852080.data).length - 1);
                }
            };
            rawInsert_1291852371(t_1291852080, t_1291852080, "data", n_1291852083[chckIndx(i_1291852147, 0, (n_1291852083).length - 1)].Field1, n_1291852083[chckIndx(i_1291852147, 0, (n_1291852083).length - 1)].Field2, eh_1291852201, j_1291852205);
            }
            
            res_1291856483 = addInt(res_1291856483, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291852549(t_1291852552, key_1291852553, hc_1291852554) {
  var result_1291852555 = 0;

  BeforeRet: {
    if (((t_1291852552.data).length == 0)) {
    result_1291852555 = -1;
    break BeforeRet;
    }
    
    var h_1291852606 = (hc_1291852554 & (t_1291852552.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291852552.data[chckIndx(h_1291852606, 0, (t_1291852552.data).length - 1)].Field0)) break Label2;
          if (((t_1291852552.data[chckIndx(h_1291852606, 0, (t_1291852552.data).length - 1)].Field0 == hc_1291852554) && eqStrings(t_1291852552.data[chckIndx(h_1291852606, 0, (t_1291852552.data).length - 1)].Field1, key_1291852553))) {
          result_1291852555 = h_1291852606;
          break BeforeRet;
          }
          
          h_1291852606 = nextTry_1308622883(h_1291852606, (t_1291852552.data).length - 1);
        }
    };
    result_1291852555 = subInt(-1, h_1291852606);
  };

  return result_1291852555;

}

function mgetOrPut_1291856206(t_1291856209, key_1291856210, val_1291856211) {
  var result_1291856212 = null;
  var result_1291856212_Idx = 0;

    if (((t_1291856209.data).length == 0)) {
    var correctSizeHEX60gensym330_1291856261 = slotsNeeded_1308622891(32);
    t_1291856209.counter = 0;
    t_1291856209.data = new Array(chckRange(correctSizeHEX60gensym330_1291856261, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym330_1291856261, 0, 2147483647) ; ++i) { t_1291856209.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291856266 = [0];
    var index_1291856273 = rawGet_1291848320(t_1291856209, key_1291856210, hc_1291856266, 0);
    if ((index_1291856273 < 0)) {
    if (((t_1291856209.data).length == 0)) {
    var correctSizeHEX60gensym333_1291856322 = slotsNeeded_1308622891(32);
    t_1291856209.counter = 0;
    t_1291856209.data = new Array(chckRange(correctSizeHEX60gensym333_1291856322, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym333_1291856322, 0, 2147483647) ; ++i) { t_1291856209.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    if (mustRehash_1291851922(t_1291856209)) {
    enlarge_1291852077(t_1291856209);
    index_1291856273 = rawGetKnownHC_1291852549(t_1291856209, key_1291856210, hc_1291856266[0]);
    }
    
    index_1291856273 = subInt(-1, index_1291856273);
    rawInsert_1291852371(t_1291856209, t_1291856209, "data", key_1291856210, val_1291856211, hc_1291856266[0], index_1291856273);
    t_1291856209.counter = addInt(t_1291856209.counter, 1);
    }
    
    result_1291856212 = t_1291856209.data[chckIndx(index_1291856273, 0, (t_1291856209.data).length - 1)]; result_1291856212_Idx = "Field2";

  return [result_1291856212, result_1291856212_Idx];

}

function changeLayoutProp_1291856176(self_1291856177, prop_1291856178, change_1291856179) {
    var Temporary1;

    HEX2BHEX3D_2147483761((Temporary1 = mgetOrPut_1291856206(self_1291856177.layout_props.props, prop_1291856178, 0.0), Temporary1)[0], Temporary1[1], change_1291856179);
    requestRender_2768240746(self_1291856177.platform, true);

  
}

function changeLayoutPropJsWrapper_1291856172(self_1291856457, prop_1291856458, change_1291856459) {
    changeLayoutProp_1291856176(self_1291856457, prop_1291856458, change_1291856459);

  
}
editor_prototype.changeLayoutProp = function(prop_ /* : string */, change_ /* : float32 */) { return (changeLayoutPropJsWrapper_1291856172(this, prop_ == undefined ? undefined : cstrToNimstr(prop_), change_));};

function toggleStatusBarLocation_1291856492(self_1291856493) {
    self_1291856493.statusBarOnTop = !(self_1291856493.statusBarOnTop);
    requestRender_2768240746(self_1291856493.platform, true);

  
}

function toggleStatusBarLocationJsWrapper_1291856488(self_1291856520) {
    toggleStatusBarLocation_1291856492(self_1291856520);

  
}
editor_prototype.toggleStatusBarLocation = function() { return (toggleStatusBarLocationJsWrapper_1291856488(this));};

function createEditorForDocument_1291848878(self_1291848879, document_1291848880) {
  var result_1291848881 = null;

  BeforeRet: {
    Label1: {
      var editor_1291848904 = null;
      var i_1291856581 = 0;
      var L_1291856582 = (self_1291848879.editor_defaults).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856581 < L_1291856582)) break Label3;
            editor_1291848904 = self_1291848879.editor_defaults[chckIndx(i_1291856581, 0, (self_1291848879.editor_defaults).length - 1)];
            if (canEdit_2415919228(editor_1291848904, document_1291848880)) {
            result_1291848881 = createWithDocument_2415919243(editor_1291848904, document_1291848880);
            break BeforeRet;
            }
            
            i_1291856581 = addInt(i_1291856581, 1);
            if (!(((self_1291848879.editor_defaults).length == L_1291856582))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    log_1174405220(logger_704643272[0], 5, [([78,111,32,101,100,105,116,111,114,32,102,111,117,110,100,32,119,104,105,99,104,32,99,97,110,32,101,100,105,116,32] || []).concat(HEX24_2197815310(document_1291848880) || [])]);
    result_1291848881 = null;
    break BeforeRet;
  };

  return result_1291848881;

}

function createView_1291848958(self_1291848959, document_1291848960) {
    
function HEX3Aanonymous_1291848973() {
        requestRender_2768240746(self_1291848959.platform, false);

      
    }

    var editor_1291848961 = createEditorForDocument_1291848878(self_1291848959, document_1291848960);
    injectDependencies_1291847761(editor_1291848961, self_1291848959);
    var _ = subscribe_1291848997(editor_1291848961.onMarkedDirty, HEX3Aanonymous_1291848973);
    var view_1291849024 = {document: document_1291848960, editor: editor_1291848961};
    self_1291848959.views.push(view_1291849024);;
    self_1291848959.currentView = subInt((self_1291848959.views).length, 1);
    requestRender_2768240746(self_1291848959.platform, false);

  
}

function createView_1291856536(self_1291856537) {
    createView_1291848958(self_1291856537, newTextDocument_2818579086([], [], false));

  
}

function createViewJsWrapper_1291856532(self_1291856569) {
    createView_1291856536(self_1291856569);

  
}
editor_prototype.createView = function() { return (createViewJsWrapper_1291856532(this));};

function delete_1291856592(x_1291856594, x_1291856594_Idx, i_1291856595) {
    x_1291856594[x_1291856594_Idx].splice(i_1291856595, 1);

  
}

function closeCurrentView_1291856590(self_1291856591) {
    unregister_2415919268(self_1291856591.views[chckIndx(self_1291856591.currentView, 0, (self_1291856591.views).length - 1)].editor);
    delete_1291856592(self_1291856591, "views", chckRange(self_1291856591.currentView, 0, 2147483647));
    self_1291856591.currentView = clamp_1660945119(self_1291856591.currentView, 0, subInt((self_1291856591.views).length, 1));
    requestRender_2768240746(self_1291856591.platform, false);

  
}

function closeCurrentViewJsWrapper_1291856586(self_1291856648) {
    closeCurrentView_1291856590(self_1291856648);

  
}
editor_prototype.closeCurrentView = function() { return (closeCurrentViewJsWrapper_1291856586(this));};

function insert_1291856682(x_1291856684, x_1291856684_Idx, item_1291856685, i_1291856686) {
    var it_1291856706 = null;
    x_1291856684[x_1291856684_Idx] = x_1291856684[x_1291856684_Idx] || []; x_1291856684[x_1291856684_Idx].splice(i_1291856686, 0, it_1291856706);
    x_1291856684[x_1291856684_Idx][chckIndx(i_1291856686, 0, (x_1291856684[x_1291856684_Idx]).length - 1)] = item_1291856685;

  
}

function moveCurrentViewToTop_1291856669(self_1291856670) {
    if ((0 < (self_1291856670.views).length)) {
    var view_1291856677 = self_1291856670.views[chckIndx(self_1291856670.currentView, 0, (self_1291856670.views).length - 1)];
    delete_1291856592(self_1291856670, "views", chckRange(self_1291856670.currentView, 0, 2147483647));
    insert_1291856682(self_1291856670, "views", view_1291856677, 0);
    }
    
    self_1291856670.currentView = 0;
    requestRender_2768240746(self_1291856670.platform, false);

  
}

function moveCurrentViewToTopJsWrapper_1291856665(self_1291856733) {
    moveCurrentViewToTop_1291856669(self_1291856733);

  
}
editor_prototype.moveCurrentViewToTop = function() { return (moveCurrentViewToTopJsWrapper_1291856665(this));};

function nextView_1291856750(self_1291856751) {
    var Temporary1;

    if (((self_1291856751.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_1291856751.currentView, 1), (self_1291856751.views).length);
    }
    
    self_1291856751.currentView = Temporary1;
    requestRender_2768240746(self_1291856751.platform, false);

  
}

function nextViewJsWrapper_1291856746(self_1291856784) {
    nextView_1291856750(self_1291856784);

  
}
editor_prototype.nextView = function() { return (nextViewJsWrapper_1291856746(this));};

function prevView_1291856800(self_1291856801) {
    var Temporary1;

    if (((self_1291856801.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_1291856801.currentView, (self_1291856801.views).length), 1), (self_1291856801.views).length);
    }
    
    self_1291856801.currentView = Temporary1;
    requestRender_2768240746(self_1291856801.platform, false);

  
}

function prevViewJsWrapper_1291856796(self_1291856837) {
    prevView_1291856800(self_1291856837);

  
}
editor_prototype.prevView = function() { return (prevViewJsWrapper_1291856796(this));};

function moveCurrentViewPrev_1291856853(self_1291856854) {
    if ((0 < (self_1291856854.views).length)) {
    var view_1291856861 = self_1291856854.views[chckIndx(self_1291856854.currentView, 0, (self_1291856854.views).length - 1)];
    var index_1291856868 = modInt(subInt(addInt(self_1291856854.currentView, (self_1291856854.views).length), 1), (self_1291856854.views).length);
    delete_1291856592(self_1291856854, "views", chckRange(self_1291856854.currentView, 0, 2147483647));
    insert_1291856682(self_1291856854, "views", view_1291856861, chckRange(index_1291856868, 0, 2147483647));
    self_1291856854.currentView = index_1291856868;
    }
    
    requestRender_2768240746(self_1291856854.platform, false);

  
}

function moveCurrentViewPrevJsWrapper_1291856849(self_1291856904) {
    moveCurrentViewPrev_1291856853(self_1291856904);

  
}
editor_prototype.moveCurrentViewPrev = function() { return (moveCurrentViewPrevJsWrapper_1291856849(this));};

function moveCurrentViewNext_1291856920(self_1291856921) {
    if ((0 < (self_1291856921.views).length)) {
    var view_1291856928 = self_1291856921.views[chckIndx(self_1291856921.currentView, 0, (self_1291856921.views).length - 1)];
    var index_1291856932 = modInt(addInt(self_1291856921.currentView, 1), (self_1291856921.views).length);
    delete_1291856592(self_1291856921, "views", chckRange(self_1291856921.currentView, 0, 2147483647));
    insert_1291856682(self_1291856921, "views", view_1291856928, chckRange(index_1291856932, 0, 2147483647));
    self_1291856921.currentView = index_1291856932;
    }
    
    requestRender_2768240746(self_1291856921.platform, false);

  
}

function moveCurrentViewNextJsWrapper_1291856916(self_1291856968) {
    moveCurrentViewNext_1291856920(self_1291856968);

  
}
editor_prototype.moveCurrentViewNext = function() { return (moveCurrentViewNextJsWrapper_1291856916(this));};

function setLayout_1291856984(self_1291856985, layout_1291856986) {
    var Temporary1;

    switch (toJSStr(layout_1291856986)) {
    case "horizontal":
      Temporary1 = {m_type: NTI1291845643};
      break;
    case "vertical":
      Temporary1 = {m_type: NTI1291845644};
      break;
    case "fibonacci":
      Temporary1 = {m_type: NTI1291845645};
      break;
    default: 
      Temporary1 = {m_type: NTI1291845643};
      break;
    }
    self_1291856985.layout = Temporary1;
    requestRender_2768240746(self_1291856985.platform, false);

  
}

function setLayoutJsWrapper_1291856980(self_1291857050, layout_1291857051) {
    setLayout_1291856984(self_1291857050, layout_1291857051);

  
}
editor_prototype.setLayout = function(layout_ /* : string */) { return (setLayoutJsWrapper_1291856980(this, layout_ == undefined ? undefined : cstrToNimstr(layout_)));};

function getCommandLineTextEditor_1291851060(self_1291851061) {
  var result_1291851062 = null;

    result_1291851062 = self_1291851061.commandLineTextEditor;

  return result_1291851062;

}

function commandLine_1291857072(self_1291857073, initialValue_1291857074) {
    contentHEX3D_2818573987(getCommandLineTextEditor_1291851060(self_1291857073).document, [nimCopy(null, initialValue_1291857074, NTI33554449)]);
    self_1291857073.commandLineMode = true;
    requestRender_2768240746(self_1291857073.platform, false);

  
}

function commandLineJsWrapper_1291857068(self_1291857106, initialValue_1291857107) {
    commandLine_1291857072(self_1291857106, initialValue_1291857107);

  
}
editor_prototype.commandLine = function(initialValue_ /* : string */) { return (commandLineJsWrapper_1291857068(this, initialValue_ == undefined ? undefined : cstrToNimstr(initialValue_)));};

function exitCommandLine_1291857128(self_1291857129) {
    contentHEX3D_2818573987(getCommandLineTextEditor_1291851060(self_1291857129).document, [[]]);
    self_1291857129.commandLineMode = false;
    requestRender_2768240746(self_1291857129.platform, false);

  
}

function exitCommandLineJsWrapper_1291857124(self_1291857160) {
    exitCommandLine_1291857128(self_1291857160);

  
}
editor_prototype.exitCommandLine = function() { return (exitCommandLineJsWrapper_1291857124(this));};

function find_1593835603(a_1593835606, item_1593835607) {
  var result_1593835608 = 0;

  BeforeRet: {
    result_1593835608 = 0;
    Label1: {
      var i_1593835609 = 0;
      var i_1291857251 = 0;
      var L_1291857252 = (a_1593835606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857251 < L_1291857252)) break Label3;
            i_1593835609 = a_1593835606[chckIndx(i_1291857251, 0, (a_1593835606).length - 1)];
            if ((i_1593835609 == item_1593835607)) {
            break BeforeRet;
            }
            
            result_1593835608 = addInt(result_1593835608, 1);
            i_1291857251 = addInt(i_1291857251, 1);
            if (!(((a_1593835606).length == L_1291857252))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1593835608 = -1;
  };

  return result_1593835608;

}

function parseAction_2113930650(action_2113930651) {
  var result_2113930654 = {Field0: [], Field1: []};

  BeforeRet: {
    var spaceIndex_2113930660 = find_1593835603(action_2113930651, 32);
    if ((spaceIndex_2113930660 == -1)) {
    var colontmp__1291857246 = nimCopy(null, action_2113930651, NTI33554449);
    var colontmp__1291857247 = [];
    result_2113930654 = nimCopy(result_2113930654, {Field0: nimCopy(null, colontmp__1291857246, NTI33554449), Field1: nimCopy(null, colontmp__1291857247, NTI33554449)}, NTI2113929938);
    break BeforeRet;
    }
    else {
      var colontmp__1291857248 = HEX5BHEX5D_855639291(action_2113930651, HEX2EHEX2E_805306418(0, subInt(spaceIndex_2113930660, 1)));
      var colontmp__1291857249 = HEX5BHEX5D_855639319(action_2113930651, HEX2EHEX2E_1040187488(addInt(spaceIndex_2113930660, 1), 1));
      result_2113930654 = nimCopy(result_2113930654, {Field0: nimCopy(null, colontmp__1291857248, NTI33554449), Field1: nimCopy(null, colontmp__1291857249, NTI33554449)}, NTI2113929938);
      break BeforeRet;
    }
    
  };

  return result_2113930654;

}

function len_1627392983(n_1627392984) {
      var Temporary1;
      var Temporary2;

  var result_1627392985 = 0;

    switch (n_1627392984.kind) {
    case 6:
      var Temporary1 = n_1627392984;
      if (ConstSet251[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627392985 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1627392984;
      if (ConstSet252[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627392985 = len_1627392114(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1627392985;

}

function HEX24_1627394481(node_1627394482) {
  var result_1627394483 = [[]];

    result_1627394483[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1627394377(result_1627394483, 0, node_1627394482);

  return result_1627394483[0];

}

function executeCommandLine_1291857176(self_1291857177) {
  var result_1291857178 = false;

  BeforeRet: {
    try {
    self_1291857177.commandLineMode = false;
    var colontmp__1291857245 = parseAction_2113930650(nsuJoinSep(content_2818574083(getCommandLineTextEditor_1291851060(self_1291857177).document), []));
    var action_1291857179 = nimCopy(null, colontmp__1291857245["Field0"], NTI33554449);
    var arg_1291857180 = nimCopy(null, colontmp__1291857245["Field1"], NTI33554449);
    contentHEX3D_2818573987(getCommandLineTextEditor_1291851060(self_1291857177).document, [[]]);
    if (nsuStartsWith(arg_1291857180, [92])) {
    arg_1291857180 = nimCopy(null, HEX24_1627394481(newJString_1627389994(HEX5BHEX5D_855639319(arg_1291857180, HEX2EHEX2E_1040187488(1, 1)))), NTI33554449);
    }
    
    result_1291857178 = handleAction_1291848870(self_1291857177, action_1291857179, arg_1291857180);
    break BeforeRet;
    } finally {
    requestRender_2768240746(self_1291857177.platform, false);
    }
  };

  return result_1291857178;

}

function executeCommandLineJsWrapper_1291857172(self_1291857230) {
  var result_1291857231 = false;

    result_1291857231 = executeCommandLine_1291857176(self_1291857230);

  return result_1291857231;

}
editor_prototype.executeCommandLine = function() { return (executeCommandLineJsWrapper_1291857172(this));};

function writeFile_1291857284(self_1291857285, path_1291857286, app_1291857287) {
    try {
    if ((((0 <= self_1291857285.currentView) && (self_1291857285.currentView < (self_1291857285.views).length)) && !((self_1291857285.views[chckIndx(self_1291857285.currentView, 0, (self_1291857285.views).length - 1)].document == null)))) {
++excHandler;
    try {
    save_2197815316(self_1291857285.views[chckIndx(self_1291857285.currentView, 0, (self_1291857285.views).length - 1)].document, path_1291857286, app_1291857287);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857299 = [mnewString(0)];
    fmtRes_1291857299[0].push.apply(fmtRes_1291857299[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857299, 0, path_1291857286, []);
    fmtRes_1291857299[0].push.apply(fmtRes_1291857299[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857299, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857299[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857285.platform, false);
    }

  
}

function writeFileJsWrapper_1291857280(self_1291857328, path_1291857329, app_1291857330) {
    writeFile_1291857284(self_1291857328, path_1291857329, app_1291857330);

  
}
editor_prototype.writeFile = function(path_ /* : string */, app_ /* : bool */) { return (writeFileJsWrapper_1291857280(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function loadFile_1291857356(self_1291857357, path_1291857358) {
    try {
    if ((((0 <= self_1291857357.currentView) && (self_1291857357.currentView < (self_1291857357.views).length)) && !((self_1291857357.views[chckIndx(self_1291857357.currentView, 0, (self_1291857357.views).length - 1)].document == null)))) {
++excHandler;
    try {
    load_2197815320(self_1291857357.views[chckIndx(self_1291857357.currentView, 0, (self_1291857357.views).length - 1)].document, path_1291857358);
    handleDocumentChanged_2415919265(self_1291857357.views[chckIndx(self_1291857357.currentView, 0, (self_1291857357.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857370 = [mnewString(0)];
    fmtRes_1291857370[0].push.apply(fmtRes_1291857370[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857370, 0, path_1291857358, []);
    fmtRes_1291857370[0].push.apply(fmtRes_1291857370[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857370, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857370[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857357.platform, false);
    }

  
}

function loadFileJsWrapper_1291857352(self_1291857398, path_1291857399) {
    loadFile_1291857356(self_1291857398, path_1291857399);

  
}
editor_prototype.loadFile = function(path_ /* : string */) { return (loadFileJsWrapper_1291857352(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function nsuEndsWith(s_855639486, suffix_855639487) {
  var result_855639488 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_855639494 = (suffix_855639487).length;
    var sLenHEX60gensym153_855639495 = (s_855639486).length;
    var iHEX60gensym153_855639496 = 0;
    var jHEX60gensym153_855639497 = subInt(sLenHEX60gensym153_855639495, suffixLenHEX60gensym153_855639494);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497)) && (addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497) < sLenHEX60gensym153_855639495))) break Label2;
          if (!((s_855639486[chckIndx(addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497), 0, (s_855639486).length - 1)] == suffix_855639487[chckIndx(iHEX60gensym153_855639496, 0, (suffix_855639487).length - 1)]))) {
          result_855639488 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_855639496 = addInt(iHEX60gensym153_855639496, 1);
        }
    };
    if ((suffixLenHEX60gensym153_855639494 <= iHEX60gensym153_855639496)) {
    result_855639488 = true;
    break BeforeRet;
    }
    
  };

  return result_855639488;

}

function newAstDocument_2969571604(filename_2969571605, app_2969571606, workspaceFolder_2969571608) {
  var result_2969571609 = null;

    result_2969571609 = ({m_type: NTI2969568591, filename: [], symbols: ({data: [], counter: 0}), rootNode: null, nodes: ({data: [], counter: 0}), onNodeInserted: [], undoOps: [], redoOps: [], appFile: false, workspace: ({val: null})});
    result_2969571609.filename = nimCopy(null, filename_2969571605, NTI33554449);
    result_2969571609.rootNode = {kind: 7, parent: null, id: newId_2046820597(), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []};
    result_2969571609.symbols = nimCopy(result_2969571609.symbols, initTable_3019904710(32), NTI3087008712);
    result_2969571609.appFile = app_2969571606;
    result_2969571609.workspace = nimCopy(result_2969571609.workspace, workspaceFolder_2969571608, NTI2197815306);
    if ((0 < (filename_2969571605).length)) {
    load_2197815320(result_2969571609, []);
    }
    

  return result_2969571609;

}

function none_1291855533() {
  var result_1291855539 = ({val: null});

  return result_1291855539;

}

function newTextDocument_1291857450(filename_1291857452, content_1291857453, app_1291857454) {
  var result_1291857455 = null;

    result_1291857455 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857459 = result_1291857455;
    self_1291857459.filename = nimCopy(null, filename_1291857452, NTI33554449);
    self_1291857459.currentTree = null;
    self_1291857459.appFile = app_1291857454;
    var _ = initTreesitter_2818578868(self_1291857459);
    var language_1291857460 = getLanguageForFile_2902458372(filename_1291857452);
    if (isSome_2348810304(language_1291857460)) {
    self_1291857459.languageId = nimCopy(null, get_2818578905(language_1291857460), NTI33554449);
    }
    
    contentHEX3D_2818573987(self_1291857459, content_1291857453);

  return result_1291857455;

}

function openFile_1291857439(self_1291857440, path_1291857441, app_1291857442) {
      var Temporary3;

    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857441, [46,97,115,116])) {
    createView_1291848958(self_1291857440, newAstDocument_2969571604(path_1291857441, app_1291857442, none_1291855533()));
    }
    else {
      if (app_1291857442) {
      Temporary3 = loadApplicationFile_2365587474(fs_2365587509, path_1291857441);
      }
      else {
      Temporary3 = loadFile_2365587463(fs_2365587509, path_1291857441);
      }
      
      var file_1291857449 = nimCopy(null, Temporary3, NTI33554449);
      createView_1291848958(self_1291857440, newTextDocument_1291857450(path_1291857441, nsuSplitLines(file_1291857449, false), app_1291857442));
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857487 = [mnewString(0)];
    fmtRes_1291857487[0].push.apply(fmtRes_1291857487[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857487, 0, path_1291857441, []);
    fmtRes_1291857487[0].push.apply(fmtRes_1291857487[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857487, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857487[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2768240746(self_1291857440.platform, false);
    }

  
}

function openFileJsWrapper_1291857435(self_1291857516, path_1291857517, app_1291857518) {
    openFile_1291857439(self_1291857516, path_1291857517, app_1291857518);

  
}
editor_prototype.openFile = function(path_ /* : string */, app_ /* : bool */) { return (openFileJsWrapper_1291857435(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function removeFromLocalStorage_1291857598(self_1291857599) {
    var Temporary1;

    if ((((0 <= self_1291857599.currentView) && (self_1291857599.currentView < (self_1291857599.views).length)) && !((self_1291857599.views[chckIndx(self_1291857599.currentView, 0, (self_1291857599.views).length - 1)].document == null)))) {
    if (isObj(self_1291857599.views[chckIndx(self_1291857599.currentView, 0, (self_1291857599.views).length - 1)].document.m_type, NTI2818572427)) {
    Temporary1 = self_1291857599.views[chckIndx(self_1291857599.currentView, 0, (self_1291857599.views).length - 1)].document.filename;
    }
    else {
    Temporary1 = self_1291857599.views[chckIndx(self_1291857599.currentView, 0, (self_1291857599.views).length - 1)].document.filename;
    }
    
    var filename_1291857615 = nimCopy(null, Temporary1, NTI33554449);
    window.localStorage.removeItem(toJSStr(filename_1291857615));;
    }
    

  
}

function removeFromLocalStorageJsWrapper_1291857594(self_1291857642) {
    removeFromLocalStorage_1291857598(self_1291857642);

  
}
editor_prototype.removeFromLocalStorage = function() { return (removeFromLocalStorageJsWrapper_1291857594(this));};

function loadFromFile_2516586059(path_2516586060) {
  var result_2516586062 = ({val: null});

  return result_2516586062;

}

function isSome_1291851013(self_1291851015) {
  var result_1291851016 = false;

    result_1291851016 = !((self_1291851015.val == null));

  return result_1291851016;

}

function isNone_1291851041(self_1291851043) {
  var result_1291851044 = false;

    result_1291851044 = (self_1291851043.val == null);

  return result_1291851044;

}

function get_1291851033(self_1291851035) {
  var result_1291851036 = null;

    if (isNone_1291851041(self_1291851035)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291851036 = self_1291851035["val"];

  return result_1291851036;

}

function loadTheme_1291857658(self_1291857659, name_1291857660) {
      var Temporary2;

    try {
      var fmtRes_1291857665 = [mnewString(0)];
      fmtRes_1291857665[0].push.apply(fmtRes_1291857665[0], [46,47,116,104,101,109,101,115,47]);;
      formatValue_721420459(fmtRes_1291857665, 0, name_1291857660, []);
      fmtRes_1291857665[0].push.apply(fmtRes_1291857665[0], [46,106,115,111,110]);;
      var oHEX60gensym513_1291857668 = loadFromFile_2516586059(fmtRes_1291857665[0]);
      if (!isSome_1291851013(oHEX60gensym513_1291857668)) Temporary2 = false; else {        var theme_1291857691 = get_1291851033(oHEX60gensym513_1291857668);
        Temporary2 = true;      }    if (Temporary2) {
    self_1291857659.theme = theme_1291857691;
    }
    else {
      var fmtRes_1291857696 = [mnewString(0)];
      fmtRes_1291857696[0].push.apply(fmtRes_1291857696[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32]);;
      formatValue_721420459(fmtRes_1291857696, 0, name_1291857660, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857696[0], NTI33554449)]);
    }
    
    } finally {
    requestRender_2768240746(self_1291857659.platform, false);
    }

  
}

function loadThemeJsWrapper_1291857654(self_1291857724, name_1291857725) {
    loadTheme_1291857658(self_1291857724, name_1291857725);

  
}
editor_prototype.loadTheme = function(name_ /* : string */) { return (loadThemeJsWrapper_1291857654(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function setCompletions_3221225546(self_3221225547, newCompletions_3221225548) {
    if (!(((newCompletions_3221225548).length == (self_3221225547.completions).length))) {
    markDirty_2483027989(self_3221225547);
    }
    else {
      Label1: {
        var i_3221225566 = 0;
        var colontmp__1291858064 = 0;
        colontmp__1291858064 = (newCompletions_3221225548).length - 1;
        var res_1291858065 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_1291858065 <= colontmp__1291858064)) break Label3;
              i_3221225566 = res_1291858065;
              if (changed_3221225544(self_3221225547.completions[chckIndx(i_3221225566, 0, (self_3221225547.completions).length - 1)], newCompletions_3221225548[chckIndx(i_3221225566, 0, (newCompletions_3221225548).length - 1)])) {
              markDirty_2483027989(self_3221225547);
              break Label1;
              }
              
              res_1291858065 = addInt(res_1291858065, 1);
            }
        };
      };
    }
    
    self_3221225547.completions = nimCopy(null, newCompletions_3221225548, NTI3221225512);
    if ((0 < (self_3221225547.completions).length)) {
    self_3221225547.selected = clamp_1660945119(self_3221225547.selected, 0, subInt((self_3221225547.completions).length, 1));
    }
    else {
      self_3221225547.selected = 0;
    }
    

  
}
async function updateCompletionsAsync_3221225606(self_3221225607) {
  var result_3221225609 = null;

  BeforeRet: {
    var text_3221225615 = nsuJoinSep(content_2818574083(self_3221225607.textEditor.document), []);
    var newCompletions_3221225620 = (await self_3221225607.getCompletionsAsync(self_3221225607, text_3221225615));
    setCompletions_3221225546(self_3221225607, newCompletions_3221225620);
    result_3221225609 = undefined;
    break BeforeRet;
  };

  return result_3221225609;

}
async function updateCompletionsAsyncIter_3221225633(self_3221225634) {
  var result_3221225636 = null;

  BeforeRet: {
    var text_3221225642 = nsuJoinSep(content_2818574083(self_3221225634.textEditor.document), []);
    setCompletions_3221225546(self_3221225634, []);
    (await self_3221225634.getCompletionsAsyncIter(self_3221225634, text_3221225642));
    result_3221225636 = undefined;
    break BeforeRet;
  };

  return result_3221225636;

}

function updateCompletions_3221225653(self_3221225654) {
    var text_3221225655 = nsuJoinSep(content_2818574083(self_3221225654.textEditor.document), []);
    if (!((self_3221225654.getCompletions == null))) {
    var newCompletions_3221225659 = self_3221225654.getCompletions(self_3221225654, text_3221225655);
    setCompletions_3221225546(self_3221225654, newCompletions_3221225659);
    }
    else {
    if (!((self_3221225654.getCompletionsAsync == null))) {
    var _ = updateCompletionsAsync_3221225606(self_3221225654);
    }
    else {
    if (!((self_3221225654.getCompletionsAsyncIter == null))) {
    var _ = updateCompletionsAsyncIter_3221225633(self_3221225654);
    }
    else {
      var fmtRes_3221225670 = [mnewString(0)];
      fmtRes_3221225670[0].push.apply(fmtRes_3221225670[0], [78,111,32,99,111,109,112,108,101,116,105,111,110,32,112,114,111,118,105,100,101,114,32,115,101,116,32,111,110,32,112,111,112,117,112,32]);;
      formatValue_2701131945(fmtRes_3221225670, 0, self_3221225654.id, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3221225670[0], NTI33554449)]);
    }
    }}

  
}

function handleTextChanged_3221226182(self_3221226183) {
    updateCompletions_3221225653(self_3221226183);
    self_3221226183.selected = 0;

  
}

function toJson_3221225840(self_3221225841, opt_3221225842) {
  var result_3221225843 = null;

    result_3221225843 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3221225843, [116,121,112,101], newJString_1627389994([112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
    HEX5BHEX5DHEX3D_1627391903(result_3221225843, [105,100], newJInt_1627390040(self_3221225841.id));

  return result_3221225843;

}

function isSome_2818593877(self_2818593879) {
  var result_2818593880 = false;

    result_2818593880 = !((self_2818593879.val == null));

  return result_2818593880;

}

function some_2818593610(val_2818593612) {
  var result_2818593613 = ({val: null});

    if (!(!((val_2818593612 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818593613.val = val_2818593612;

  return result_2818593613;

}

function none_3221225753() {
  var result_3221225759 = ({val: null});

  return result_3221225759;

}

function some_1291850925(val_1291850927) {
  var result_1291850928 = ({val: null});

    if (!(!((val_1291850927 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850928.val = val_1291850927;

  return result_1291850928;

}

function none_1291850938() {
  var result_1291850944 = ({val: null});

  return result_1291850944;

}

function getPopupForId_1291850895(self_1291850896, id_1291850897) {
  var result_1291850902 = ({val: null});

  BeforeRet: {
    Label1: {
      var popup_1291850924 = null;
      var i_1291858075 = 0;
      var L_1291858076 = (self_1291850896.popups).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858075 < L_1291858076)) break Label3;
            popup_1291850924 = self_1291850896.popups[chckIndx(i_1291858075, 0, (self_1291850896.popups).length - 1)];
            if ((popup_1291850924.id == id_1291850897)) {
            result_1291850902 = nimCopy(result_1291850902, some_1291850925(popup_1291850924), NTI1291848451);
            break BeforeRet;
            }
            
            i_1291858075 = addInt(i_1291858075, 1);
            if (!(((self_1291850896.popups).length == L_1291858076))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291850902 = nimCopy(result_1291850902, none_1291850938(), NTI1291848451);
    break BeforeRet;
  };

  return result_1291850902;

}

function isSome_3221225767(self_3221225769) {
  var result_3221225770 = false;

    result_3221225770 = !((self_3221225769.val == null));

  return result_3221225770;

}

function isNone_3221225795(self_3221225797) {
  var result_3221225798 = false;

    result_3221225798 = (self_3221225797.val == null);

  return result_3221225798;

}

function get_3221225787(self_3221225789) {
  var result_3221225790 = null;

    if (isNone_3221225795(self_3221225789)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221225790 = self_3221225789["val"];

  return result_3221225790;

}

function some_3221225812(val_3221225814) {
  var result_3221225815 = ({val: null});

    if (!(!((val_3221225814 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3221225815.val = val_3221225814;

  return result_3221225815;

}

function getSelectorPopup_3221225743(wrapper_3221225744) {
      var Temporary1;

  var result_3221225749 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3221225749 = nimCopy(result_3221225749, none_3221225753(), NTI3221225686);
    break BeforeRet;
    }
    
      var oHEX60gensym16_3221225762 = getPopupForId_1291850895(gEditor, wrapper_3221225744.id);
      if (!isSome_3221225767(oHEX60gensym16_3221225762)) Temporary1 = false; else {        var editor_3221225804 = get_3221225787(oHEX60gensym16_3221225762);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3221225804.m_type, NTI3221225494)) {
    result_3221225749 = nimCopy(result_3221225749, some_3221225812(editor_3221225804), NTI3221225686);
    break BeforeRet;
    }
    
    }
    
    result_3221225749 = nimCopy(result_3221225749, none_3221225753(), NTI3221225686);
    break BeforeRet;
  };

  return result_3221225749;

}

function isNone_3221225872(self_3221225874) {
  var result_3221225875 = false;

    result_3221225875 = (self_3221225874.val == null);

  return result_3221225875;

}

function get_3221225892(self_3221225894) {
  var result_3221225895 = null;

    if (isNone_3221225872(self_3221225894)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221225895 = self_3221225894["val"];

  return result_3221225895;

}

function acceptScript_3221225853_3221225865(self_3221225866) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym21_3221225867 = getSelectorPopup_3221225743(self_3221225866);
      if (isNone_3221225872(rHEX60gensym21_3221225867)) {
      break BeforeRet;
      }
      
    };
    accept_3221225858(get_3221225892(rHEX60gensym21_3221225867));
  };

  
}

function raiseJsonException_1811939497(condStr_1811939498, msg_1811939499) {
    raiseException({message: (condStr_1811939498 || []).concat([32,102,97,105,108,101,100,58,32] || [],msg_1811939499 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function addQuoted_1811939807(s_1811939809, s_1811939809_Idx, x_1811939810) {
    s_1811939809[s_1811939809_Idx].push.apply(s_1811939809[s_1811939809_Idx], HEX24_1627394481(x_1811939810));;

  
}

function HEX24_1811939763(x_1811939765) {
  var result_1811939766 = [[]];

    result_1811939766[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym29_1811939777 = 0;
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    addQuoted_1593835572(result_1811939766, 0, x_1811939765["Field0"]);
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    if ((x_1811939765["Field1"] == null)) {
    result_1811939766[0].push.apply(result_1811939766[0], [110,105,108]);;
    }
    else {
    addQuoted_1811939807(result_1811939766, 0, x_1811939765["Field1"]);
    }
    
    if ((countHEX60gensym29_1811939777 == 1)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44]);;
    }
    
    result_1811939766[0].push.apply(result_1811939766[0], [41]);;

  return result_1811939766[0];

}

function addQuoted_1627395455(s_1627395457, s_1627395457_Idx, x_1627395458) {
    s_1627395457[s_1627395457_Idx].push.apply(s_1627395457[s_1627395457_Idx], reprEnum(x_1627395458, NTI1627389955));;

  
}

function collectionToString_1627395422(x_1627395424, prefix_1627395425, separator_1627395426, suffix_1627395427) {
  var result_1627395428 = [[]];

    result_1627395428[0] = nimCopy(null, prefix_1627395425, NTI33554449);
    var firstElement_1627395429 = true;
    Label1: {
      var value_1627395451 = 0;
      var i_1291858080 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858080 <= 6)) break Label3;
            if ((x_1627395424[i_1291858080] != undefined)) {
            value_1627395451 = i_1291858080;
            if (firstElement_1627395429) {
            firstElement_1627395429 = false;
            }
            else {
            result_1627395428[0].push.apply(result_1627395428[0], separator_1627395426);;
            }
            
            addQuoted_1627395455(result_1627395428, 0, value_1627395451);
            }
            
            i_1291858080 += 1;
          }
      };
    };
    result_1627395428[0].push.apply(result_1627395428[0], suffix_1627395427);;

  return result_1627395428[0];

}

function HEX24_1627395418(x_1627395420) {
  var result_1627395421 = [];

    result_1627395421 = nimCopy(null, collectionToString_1627395422(x_1627395420, [123], [44,32], [125]), NTI33554449);

  return result_1627395421;

}

function initFromJson_2818584076(dst_2818584078, dst_2818584078_Idx, jsonNode_2818584079, jsonPath_2818584080, jsonPath_2818584080_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_2818584079, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818584080[jsonPath_2818584080_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet253[jsonNode_2818584079.kind] != undefined))) {
    var msgHEX60gensym176_2818584097 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet254), nimCopy(null, jsonPath_2818584080[jsonPath_2818584080_Idx], NTI33554449), reprEnum(jsonNode_2818584079.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym176_2818584097, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_2818584079;
    if (ConstSet255[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_2818584078[dst_2818584078_Idx] = Temporary1.num;

  
}

function to_2818584065(node_2818584068) {
  var result_2818584070 = [0];

    var jsonPath_2818584071 = [[]];
    result_2818584070[0] = 0;
    initFromJson_2818584076(result_2818584070, 0, node_2818584068, jsonPath_2818584071, 0);

  return result_2818584070[0];

}

function fromJson_2818584052(a_2818584054, a_2818584054_Idx, b_2818584055, opt_2818584056) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584055, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [105,110,116], Field1: b_2818584055}));
    }
    
    a_2818584054[a_2818584054_Idx] = to_2818584065(b_2818584055);

  
}

function jsonTo_2818584046(b_2818584048, opt_2818584050) {
  var result_2818584051 = [0];

    fromJson_2818584052(result_2818584051, 0, b_2818584048, opt_2818584050);

  return result_2818584051[0];

}

function fromJsonHook_3221225844(t_3221225845, jsonNode_3221225846) {
    t_3221225845.id = jsonTo_2818584046(HEX5BHEX5D_1627393037(jsonNode_3221225846, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3221225924(a_3221225926, b_3221225927, opt_3221225928) {
    if (!(!(HEX3DHEX3D_1627392026(b_3221225927, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,111,114,80,111,112,117,112], Field1: b_3221225927}));
    }
    
    fromJsonHook_3221225844(a_3221225926, b_3221225927);

  
}

function jsonTo_3221225918(b_3221225920, opt_3221225922) {
  var result_3221225923 = [({id: 0})];

    fromJson_3221225924(result_3221225923[0], b_3221225920, opt_3221225922);

  return result_3221225923[0];

}

function HEX5BHEX5D_1627393116(node_1627393117, index_1627393118) {
    var Temporary1;
    var Temporary2;

  var result_1627393119 = null;

  BeforeRet: {
    if (!(!((node_1627393117 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393117.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = node_1627393117;
    if (ConstSet256[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393119 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1627393118, 0, (Temporary2).length - 1)];
    break BeforeRet;
  };

  return result_1627393119;

}

function acceptApi_3221225916(HEX3Atmp_3221225855) {
  var result_3221225917 = null;

    result_3221225917 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    acceptScript_3221225853_3221225865(jsonTo_3221225918(HEX5BHEX5D_1627393116(HEX3Atmp_3221225855, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym26_3221225935 = [97,99,99,101,112,116];
    var fmtRes_3221225940 = [mnewString(0)];
    fmtRes_3221225940[0].push.apply(fmtRes_3221225940[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221225940, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym26_3221225935 || [],fmtRes_3221225940[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221225917;

}

function cancelScript_3221225952_3221225965(self_3221225966) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym31_3221225967 = getSelectorPopup_3221225743(self_3221225966);
      if (isNone_3221225872(rHEX60gensym31_3221225967)) {
      break BeforeRet;
      }
      
    };
    cancel_3221225957(get_3221225892(rHEX60gensym31_3221225967));
  };

  
}

function cancelApi_3221225993(HEX3Atmp_3221225954) {
  var result_3221225994 = null;

    result_3221225994 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelScript_3221225952_3221225965(jsonTo_3221225918(HEX5BHEX5D_1627393116(HEX3Atmp_3221225954, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym36_3221226000 = [99,97,110,99,101,108];
    var fmtRes_3221226005 = [mnewString(0)];
    fmtRes_3221226005[0].push.apply(fmtRes_3221226005[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221226005, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym36_3221226000 || [],fmtRes_3221226005[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221225994;

}

function prevScript_3221226008_3221226033(self_3221226034) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym40_3221226035 = getSelectorPopup_3221225743(self_3221226034);
      if (isNone_3221225872(rHEX60gensym40_3221226035)) {
      break BeforeRet;
      }
      
    };
    prev_3221226013(get_3221225892(rHEX60gensym40_3221226035));
  };

  
}

function prevApi_3221226061(HEX3Atmp_3221226010) {
  var result_3221226062 = null;

    result_3221226062 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    prevScript_3221226008_3221226033(jsonTo_3221225918(HEX5BHEX5D_1627393116(HEX3Atmp_3221226010, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym45_3221226068 = [112,114,101,118];
    var fmtRes_3221226073 = [mnewString(0)];
    fmtRes_3221226073[0].push.apply(fmtRes_3221226073[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221226073, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym45_3221226068 || [],fmtRes_3221226073[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221226062;

}

function nextScript_3221226076_3221226098(self_3221226099) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym50_3221226100 = getSelectorPopup_3221225743(self_3221226099);
      if (isNone_3221225872(rHEX60gensym50_3221226100)) {
      break BeforeRet;
      }
      
    };
    next_3221226081(get_3221225892(rHEX60gensym50_3221226100));
  };

  
}

function nextApi_3221226126(HEX3Atmp_3221226078) {
  var result_3221226127 = null;

    result_3221226127 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    nextScript_3221226076_3221226098(jsonTo_3221225918(HEX5BHEX5D_1627393116(HEX3Atmp_3221226078, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym55_3221226133 = [110,101,120,116];
    var fmtRes_3221226138 = [mnewString(0)];
    fmtRes_3221226138[0].push.apply(fmtRes_3221226138[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221226138, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym55_3221226133 || [],fmtRes_3221226138[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221226127;

}

function none_2818593809() {
  var result_2818593815 = ({val: null});

  return result_2818593815;

}

function dispatch_3221226143(command_3221226142, arg_3221226141) {
    var Temporary1;

  var result_3221226145 = ({val: null});

    switch (toJSStr(command_3221226142)) {
    case "accept":
      Temporary1 = some_2818593610(acceptApi_3221225916(arg_3221226141));
      break;
    case "cancel":
      Temporary1 = some_2818593610(cancelApi_3221225993(arg_3221226141));
      break;
    case "prev":
      Temporary1 = some_2818593610(prevApi_3221226061(arg_3221226141));
      break;
    case "next":
      Temporary1 = some_2818593610(nextApi_3221226126(arg_3221226141));
      break;
    default: 
      Temporary1 = none_2818593809();
      break;
    }
    result_3221226145 = nimCopy(result_3221226145, Temporary1, NTI2818585760);

  return result_3221226145;

}

function handleAction_3221226164(self_3221226165, action_3221226166, arg_3221226167) {
  var result_3221226168 = 0;

  BeforeRet: {
    if ((handleUnknownPopupAction_1291848841(self_3221226165.editor, self_3221226165, action_3221226166, arg_3221226167) == 3)) {
    result_3221226168 = 3;
    break BeforeRet;
    }
    
    var args_3221226173 = newJArray_1627390082();
    add_1627390190(args_3221226173, toJson_3221225840({id: self_3221226165.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_3221226174 = null;
      var colontmp__1291858068 = null;
      colontmp__1291858068 = newStringStream_1660945417(arg_3221226167);
      var p_1291858069 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_1291858069[0], colontmp__1291858068, [], false);
      try {
      var _ = getTok_1694499270(p_1291858069[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_1291858069[0].tok == 1))) break Label4;
            a_3221226174 = parseJson_1627395211(p_1291858069[0], false, false, 0);
            add_1627390190(args_3221226173, a_3221226174);
          }
      };
      } finally {
      close_1694498967(p_1291858069[0]);
      }
    };
    if (isSome_2818593877(dispatch_3221226143(action_3221226166, args_3221226173))) {
    result_3221226168 = 3;
    break BeforeRet;
    }
    
    result_3221226168 = 1;
    break BeforeRet;
  };

  return result_3221226168;

}

function newSelectorPopup_3221226270(editor_3221226271) {
    
function HEX3Aanonymous_3221226293(doc_3221226294) {
        handleTextChanged_3221226182(popup_3221226273);

      
    }
      
function HEX3Aanonymous_3221226342(actionHEX60gensym67HEX60gensym68_3221226343, argHEX60gensym67HEX60gensym68_3221226344) {
        var result_3221226345 = 0;

        BeforeRet: {
          if (handlerHEX60gensym67_3221226330.config.handleActions) {
          var action_3221226346 = nimCopy(null, actionHEX60gensym67HEX60gensym68_3221226343, NTI33554449);
          var arg_3221226347 = nimCopy(null, argHEX60gensym67HEX60gensym68_3221226344, NTI33554449);
          var responseHEX60gensym67HEX60gensym68_3221226348 = handleAction_3221226164(popup_3221226273, action_3221226346, arg_3221226347);
          if (handlerHEX60gensym67_3221226330.config.consumeAllActions) {
          result_3221226345 = 3;
          break BeforeRet;
          }
          
          result_3221226345 = responseHEX60gensym67HEX60gensym68_3221226348;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym67_3221226330.config.consumeAllActions) {
          result_3221226345 = 3;
          break BeforeRet;
          }
          else {
            result_3221226345 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3221226345;

      }
      
function HEX3Aanonymous_3221226350(inputHEX60gensym67HEX60gensym69_3221226351) {
        var result_3221226352 = 0;

        BeforeRet: {
          if (handlerHEX60gensym67_3221226330.config.handleInputs) {
          var input_3221226353 = nimCopy(null, inputHEX60gensym67HEX60gensym69_3221226351, NTI33554449);
          result_3221226352 = 1;
          break BeforeRet;
          }
          else {
            result_3221226352 = 1;
            break BeforeRet;
          }
          
        };

        return result_3221226352;

      }

  var result_3221226272 = null;

  BeforeRet: {
    var popup_3221226273 = {editor: editor_3221226271, m_type: NTI3221225494, textEditor: null, selected: 0, scrollOffset: 0, completions: [], handleItemConfirmed: null, handleItemSelected: null, handleCanceled: null, getCompletions: null, getCompletionsAsync: null, getCompletionsAsyncIter: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], cancellationToken: null, id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3221226273.textEditor = newTextEditor_2818594007(newTextDocument_2818579086([], [], false), editor_3221226271);
    setMode_2818584221(popup_3221226273.textEditor, [105,110,115,101,114,116]);
    popup_3221226273.textEditor.renderHeader = false;
    popup_3221226273.textEditor.lineNumbers = nimCopy(popup_3221226273.textEditor.lineNumbers, some_3170894358(0), NTI2818572554);
    popup_3221226273.textEditor.document.singleLine = true;
    var _ = subscribe_2818594055(popup_3221226273.textEditor.document.textChanged, HEX3Aanonymous_3221226293);
    Label1: {
      var handlerHEX60gensym67_3221226330 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym67_3221226330.config = getEventHandlerConfig_1291849162(editor_3221226271, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]);
      handlerHEX60gensym67_3221226330.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(editor_3221226271, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
      handlerHEX60gensym67_3221226330.handleAction = HEX3Aanonymous_3221226342;
      handlerHEX60gensym67_3221226330.handleInput = HEX3Aanonymous_3221226350;
    };
    popup_3221226273.eventHandler = handlerHEX60gensym67_3221226330;
    result_3221226272 = popup_3221226273;
    break BeforeRet;
  };

  return result_3221226272;

}

function pop_1560281227(s_1560281229, s_1560281229_Idx) {
  var result_1560281230 = [];

    var L_1560281234 = subInt((s_1560281229[s_1560281229_Idx]).length, 1);
    result_1560281230 = nimCopy(null, s_1560281229[s_1560281229_Idx][chckIndx(L_1560281234, 0, (s_1560281229[s_1560281229_Idx]).length - 1)], NTI33554449);
    if (s_1560281229[s_1560281229_Idx].length < chckRange(L_1560281234, 0, 2147483647)) { for (var i = s_1560281229[s_1560281229_Idx].length ; i < chckRange(L_1560281234, 0, 2147483647) ; ++i) s_1560281229[s_1560281229_Idx].push([]); }
               else { s_1560281229[s_1560281229_Idx].length = chckRange(L_1560281234, 0, 2147483647); };

  return result_1560281230;

}

function HEX5BHEX5D_33557562(s_33557563, i_33557564) {
  var result_33557565 = 0;

    result_33557565 = s_33557563[chckIndx(subInt((s_33557563).length, i_33557564), 0, (s_33557563).length - 1)];

  return result_33557565;

}

function HEX5BHEX5D_33557595(s_33557596, s_33557596_Idx, i_33557597) {
  var result_33557598 = null;
  var result_33557598_Idx = 0;

    result_33557598 = s_33557596[s_33557596_Idx]; result_33557598_Idx = chckIndx(subInt((s_33557596[s_33557596_Idx]).length, i_33557597), 0, (s_33557596[s_33557596_Idx]).length - 1);

  return [result_33557598, result_33557598_Idx];

}

function normalizePathEnd_1426063378(path_1426063379, path_1426063379_Idx, trailingSep_1426063380) {
  BeforeRet: {
    if (((path_1426063379[path_1426063379_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1426063381 = (path_1426063379[path_1426063379_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1426063381)) break Label2;
          if ((ConstSet259[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined)) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
          if ((((path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)] == 46) && (2 <= i_1426063381)) && (ConstSet260[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 2), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined))) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1426063380) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    addChar(path_1426063379[path_1426063379_Idx], 47);;
    }
    else {
    if ((0 < i_1426063381)) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    }
    else {
      path_1426063379[path_1426063379_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1442840582(it_1442840583, x_1442840584) {
  var result_1442840585 = false;

    result_1442840585 = (it_1442840583.i < (x_1442840584).length);

  return result_1442840585;

}

function next_1442840586(it_1442840587, x_1442840588) {
  var result_1442840589 = {Field0: 0, Field1: 0};

    it_1442840587.prev = it_1442840587.i;
    if ((!(it_1442840587.notFirst) && (ConstSet262[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) {
    it_1442840587.i = addInt(it_1442840587.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1442840587.i < (x_1442840588).length) && !((ConstSet263[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined)))) break Label2;
            it_1442840587.i = addInt(it_1442840587.i, 1);
          }
      };
    }
    
    if ((it_1442840587.prev < it_1442840587.i)) {
    var colontmp__1291858150 = it_1442840587.prev;
    var colontmp__1291858151 = subInt(it_1442840587.i, 1);
    result_1442840589 = nimCopy(result_1442840589, {Field0: colontmp__1291858150, Field1: colontmp__1291858151}, NTI1442840583);
    }
    else {
    if (hasNext_1442840582(it_1442840587, x_1442840588)) {
    result_1442840589 = nimCopy(result_1442840589, next_1442840586(it_1442840587, x_1442840588), NTI1442840583);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1442840587.i < (x_1442840588).length) && (ConstSet264[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) break Label4;
          it_1442840587.i = addInt(it_1442840587.i, 1);
        }
    };
    it_1442840587.notFirst = true;

  return result_1442840589;

}

function isSlash_1442840642(x_1442840643, bounds_1442840644) {
  var result_1442840645 = false;

    result_1442840645 = ((bounds_1442840644["Field1"] == bounds_1442840644["Field0"]) && (ConstSet265[x_1442840643[chckIndx(bounds_1442840644["Field0"], 0, (x_1442840643).length - 1)]] != undefined));

  return result_1442840645;

}

function isDotDot_1442840638(x_1442840639, bounds_1442840640) {
  var result_1442840641 = false;

    result_1442840641 = (((bounds_1442840640["Field1"] == addInt(bounds_1442840640["Field0"], 1)) && (x_1442840639[chckIndx(bounds_1442840640["Field0"], 0, (x_1442840639).length - 1)] == 46)) && (x_1442840639[chckIndx(addInt(bounds_1442840640["Field0"], 1), 0, (x_1442840639).length - 1)] == 46));

  return result_1442840641;

}

function isDot_1442840634(x_1442840635, bounds_1442840636) {
  var result_1442840637 = false;

    result_1442840637 = ((bounds_1442840636["Field1"] == bounds_1442840636["Field0"]) && (x_1442840635[chckIndx(bounds_1442840636["Field0"], 0, (x_1442840635).length - 1)] == 46));

  return result_1442840637;

}

function addNormalizePath_1442840650(x_1442840651, result_1442840652, result_1442840652_Idx, state_1442840653, state_1442840653_Idx, dirSep_1442840654) {
          var Temporary7;

    var it_1442840655 = [({i: 0, prev: 0, notFirst: false})];
    it_1442840655[0].notFirst = (0 < (state_1442840653[state_1442840653_Idx] >> 1));
    if (it_1442840655[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1442840655[0].i < (x_1442840651).length) && (ConstSet261[x_1442840651[chckIndx(it_1442840655[0].i, 0, (x_1442840651).length - 1)]] != undefined))) break Label2;
          it_1442840655[0].i = addInt(it_1442840655[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1442840582(it_1442840655[0], x_1442840651)) break Label4;
          var b_1442840669 = next_1442840586(it_1442840655[0], x_1442840651);
          if ((((state_1442840653[state_1442840653_Idx] >> 1) == 0) && isSlash_1442840642(x_1442840651, b_1442840669))) {
          if ((((result_1442840652[result_1442840652_Idx]).length == 0) || !((ConstSet266[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          state_1442840653[state_1442840653_Idx] = (state_1442840653[state_1442840653_Idx] | 1);
          }
          else {
          if (isDotDot_1442840638(x_1442840651, b_1442840669)) {
          if ((1 <= (state_1442840653[state_1442840653_Idx] >> 1))) {
          var d_1442840682 = (result_1442840652[result_1442840652_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1442840653[state_1442840653_Idx] & 1) < subInt(d_1442840682, 1)) && !((ConstSet267[result_1442840652[result_1442840652_Idx][chckIndx(subInt(d_1442840682, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1442840682 = subInt(d_1442840682, 1);
              }
          };
          if ((0 < d_1442840682)) {
          if (result_1442840652[result_1442840652_Idx].length < (Temporary7 = chckRange(subInt(d_1442840682, 1), 0, 2147483647), Temporary7)) { for (var i = result_1442840652[result_1442840652_Idx].length; i < Temporary7; ++i) result_1442840652[result_1442840652_Idx].push(0); }
         else {result_1442840652[result_1442840652_Idx].length = Temporary7; };
          state_1442840653[state_1442840653_Idx] = subInt(state_1442840653[state_1442840653_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet268[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
            }
            
            result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          }
          
          }
          else {
          if (isDot_1442840634(x_1442840651, b_1442840669)) {
          }
          else {
          if ((b_1442840669["Field0"] <= b_1442840669["Field1"])) {
          if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet269[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          state_1442840653[state_1442840653_Idx] = addInt(state_1442840653[state_1442840653_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1442840652[result_1442840652_Idx], []) && !(eqStrings(x_1442840651, [])))) {
    result_1442840652[result_1442840652_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1426063407(result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, tail_1426063410) {
    var Temporary1;

    var trailingSep_1426063419 = (((0 < (tail_1426063410).length) && (ConstSet257[HEX5BHEX5D_33557562(tail_1426063410, 1)] != undefined)) || (((tail_1426063410).length == 0) && ((0 < (result_1426063408[result_1426063408_Idx]).length) && (ConstSet258[(Temporary1 = HEX5BHEX5D_33557595(result_1426063408, result_1426063408_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, false);
    addNormalizePath_1442840650(tail_1426063410, result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, 47);
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, trailingSep_1426063419);

  
}

function nosjoinPath(head_1426063421, tail_1426063422) {
  var result_1426063423 = [[]];

    result_1426063423[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1426063424 = [0];
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, head_1426063421);
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, tail_1426063422);

  return result_1426063423[0];

}

function HEX2F_1426063446(head_1426063447, tail_1426063448) {
  var result_1426063449 = [];

    result_1426063449 = nimCopy(null, nosjoinPath(head_1426063447, tail_1426063448), NTI33554449);

  return result_1426063449;

}

function staticWalkDir_1560281124(dir_1560281125, relative_1560281126) {
  var result_1560281129 = [];

  return result_1560281129;

}

function newSeq_1291857809(len_1291857811) {
  var result_1291857812 = [];

    result_1291857812 = new Array(len_1291857811); for (var i = 0 ; i < len_1291857811 ; ++i) { result_1291857812[i] = null; }
  return result_1291857812;

}

function mergeAlt_1291857820(a_1291857822, b_1291857823, lo_1291857824, m_1291857825, hi_1291857826, cmp_1291857829, order_1291857830) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1291857829(a_1291857822[chckIndx(m_1291857825, 0, (a_1291857822).length - 1)], a_1291857822[chckIndx(addInt(m_1291857825, 1), 0, (a_1291857822).length - 1)]), order_1291857830) <= 0)) {
    break BeforeRet;
    }
    
    var j_1291857831 = lo_1291857824;
    if (!((j_1291857831 <= m_1291857825))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1291857837 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1291857831 <= m_1291857825)) break Label2;
          b_1291857823[chckIndx(bb_1291857837, 0, (b_1291857823).length - 1)] = a_1291857822[chckIndx(j_1291857831, 0, (a_1291857822).length - 1)];
          bb_1291857837 = addInt(bb_1291857837, 1);
          j_1291857831 = addInt(j_1291857831, 1);
        }
    };
    var i_1291857848 = 0;
    var k_1291857849 = lo_1291857824;
    Label3: {
        Label4: while (true) {
        if (!((k_1291857849 < j_1291857831) && (j_1291857831 <= hi_1291857826))) break Label4;
          if ((HEX2A_1023410184(cmp_1291857829(b_1291857823[chckIndx(i_1291857848, 0, (b_1291857823).length - 1)], a_1291857822[chckIndx(j_1291857831, 0, (a_1291857822).length - 1)]), order_1291857830) <= 0)) {
          a_1291857822[chckIndx(k_1291857849, 0, (a_1291857822).length - 1)] = b_1291857823[chckIndx(i_1291857848, 0, (b_1291857823).length - 1)];
          i_1291857848 = addInt(i_1291857848, 1);
          }
          else {
            a_1291857822[chckIndx(k_1291857849, 0, (a_1291857822).length - 1)] = a_1291857822[chckIndx(j_1291857831, 0, (a_1291857822).length - 1)];
            j_1291857831 = addInt(j_1291857831, 1);
          }
          
          k_1291857849 = addInt(k_1291857849, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1291857849 < j_1291857831)) break Label6;
          a_1291857822[chckIndx(k_1291857849, 0, (a_1291857822).length - 1)] = b_1291857823[chckIndx(i_1291857848, 0, (b_1291857823).length - 1)];
          k_1291857849 = addInt(k_1291857849, 1);
          i_1291857848 = addInt(i_1291857848, 1);
        }
    };
  };

  
}

function sort_1291857797(a_1291857799, cmp_1291857802, order_1291857803) {
    var n_1291857808 = (a_1291857799).length;
    var b_1291857817 = newSeq_1291857809(chckRange(divInt(n_1291857808, 2), 0, 2147483647));
    var s_1291857818 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1291857818 < n_1291857808)) break Label2;
          var m_1291857819 = subInt(subInt(n_1291857808, 1), s_1291857818);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1291857819)) break Label4;
                mergeAlt_1291857820(a_1291857799, b_1291857817, nimMax(addInt(subInt(m_1291857819, s_1291857818), 1), 0), m_1291857819, addInt(m_1291857819, s_1291857818), cmp_1291857802, order_1291857803);
                m_1291857819 = subInt(m_1291857819, mulInt(s_1291857818, 2));
              }
          };
          s_1291857818 = mulInt(s_1291857818, 2);
        }
    };

  
}

function chooseTheme_1291857746(self_1291857747) {
    
function HEX3Aanonymous_1291857750(popup_1291857751, text_1291857752) {
                          var Temporary9;
        
function HEX3Aanonymous_1291857766(a_1291857784, b_1291857785) {
          var result_1291857790 = 0;

            result_1291857790 = cmp_2969583930(a_1291857784.score, b_1291857785.score);

          return result_1291857790;

        }

      var result_1291857753 = [];

        Label1: {
          var file_1291857754 = [];
          var stack_1291858118 = [[[]]];
          var checkDir_1291858119 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_1291858118[0]).length)) break Label3;
                var d_1291858121 = pop_1560281227(stack_1291858118, 0);
                Label4: {
                  var k_1291858123 = 0;
                  var p_1291858124 = [];
                  var colontmp__1291858125 = [];
                  colontmp__1291858125 = HEX2F_1426063446([46,47,116,104,101,109,101,115], d_1291858121);
                  Label5: {
                    var k_1291858135 = 0;
                    var v_1291858136 = [];
                    var colontmp__1291858137 = [];
                    colontmp__1291858137 = staticWalkDir_1560281124(colontmp__1291858125, true);
                    var i_1291858138 = 0;
                    var L_1291858139 = (colontmp__1291858137).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_1291858138 < L_1291858139)) break Label7;
                          k_1291858135 = colontmp__1291858137[chckIndx(i_1291858138, 0, (colontmp__1291858137).length - 1)]["Field0"];
                          v_1291858136 = colontmp__1291858137[chckIndx(i_1291858138, 0, (colontmp__1291858137).length - 1)]["Field1"];
                          k_1291858123 = k_1291858135;
                          p_1291858124 = v_1291858136;
                          var rel_1291858141 = HEX2F_1426063446(d_1291858121, p_1291858124);
                          if (((ConstSet270[k_1291858123] != undefined) && (ConstSet271[k_1291858123] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_1291858141, NTI33554449);
                          stack_1291858118[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet272[k_1291858123] != undefined)) {
                          if (true) {
                          Temporary9 = rel_1291858141;
                          }
                          else {
                          Temporary9 = HEX2F_1426063446([46,47,116,104,101,109,101,115], rel_1291858141);
                          }
                          
                          file_1291857754 = Temporary9;
                          if (nsuEndsWith(file_1291857754, [46,106,115,111,110])) {
                          var name_1291858142 = nimCopy(null, nossplitFile(file_1291857754).Field1, NTI33554449);
                          var score_1291858143 = fuzzyMatchSmart_1979711572(text_1291857752, name_1291858142, true);
                          var fmtRes_1291858144 = [mnewString(0)];
                          fmtRes_1291858144[0].push.apply(fmtRes_1291858144[0], [46,47,116,104,101,109,101,115,47]);;
                          formatValue_721420459(fmtRes_1291858144, 0, file_1291857754, []);
                          result_1291857753.push({name: nimCopy(null, name_1291858142, NTI33554449), path: nimCopy(null, fmtRes_1291858144[0], NTI33554449), score: score_1291858143, m_type: NTI1291848506});;
                          }
                          
                          }
                          
                          i_1291858138 = addInt(i_1291858138, 1);
                          if (!(((colontmp__1291858137).length == L_1291858139))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_1291858119 = false;
              }
          };
        };
        sort_1291857797(result_1291857753, HEX3Aanonymous_1291857766, 0);

      return result_1291857753;

    }
    
function HEX3Aanonymous_1291857916(item_1291857917) {
          var Temporary1;

          var oHEX60gensym526_1291857920 = loadFromFile_2516586059(item_1291857917.path);
          if (!isSome_1291851013(oHEX60gensym526_1291857920)) Temporary1 = false; else {            var theme_1291857943 = get_1291851033(oHEX60gensym526_1291857920);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857747.theme = theme_1291857943;
        }
        

      
    }
    
function HEX3Aanonymous_1291857944(item_1291857945) {
          var Temporary1;

          var oHEX60gensym527_1291857948 = loadFromFile_2516586059(item_1291857945.path);
          if (!isSome_1291851013(oHEX60gensym527_1291857948)) Temporary1 = false; else {            var theme_1291857971 = get_1291851033(oHEX60gensym527_1291857948);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857747.theme = theme_1291857971;
        }
        

      
    }
    
function HEX3Aanonymous_1291857972() {
          var Temporary1;

          var oHEX60gensym528_1291857975 = loadFromFile_2516586059(originalTheme_1291857748);
          if (!isSome_1291851013(oHEX60gensym528_1291857975)) Temporary1 = false; else {            var theme_1291857998 = get_1291851033(oHEX60gensym528_1291857975);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857747.theme = theme_1291857998;
        }
        

      
    }

    try {
    var originalTheme_1291857748 = nimCopy(null, self_1291857747.theme.path, NTI33554449);
    var popup_1291857749 = newSelectorPopup_3221226270(self_1291857747);
    popup_1291857749.getCompletions = HEX3Aanonymous_1291857750;
    popup_1291857749.handleItemSelected = HEX3Aanonymous_1291857916;
    popup_1291857749.handleItemConfirmed = HEX3Aanonymous_1291857944;
    popup_1291857749.handleCanceled = HEX3Aanonymous_1291857972;
    updateCompletions_3221225653(popup_1291857749);
    pushPopup_1291849060(self_1291857747, popup_1291857749);
    } finally {
    requestRender_2768240746(self_1291857747.platform, false);
    }

  
}

function chooseThemeJsWrapper_1291857742(self_1291858052) {
    chooseTheme_1291857746(self_1291858052);

  
}
editor_prototype.chooseTheme = function() { return (chooseThemeJsWrapper_1291857742(this));};

function cancel_2499805208(token_2499805209) {
    token_2499805209.canceled = true;

  
}

function newCancellationToken_2499805188() {
  var result_2499805189 = null;

    result_2499805189 = {canceled: false};

  return result_2499805189;

}

function canceled_2499805210(token_2499805211) {
  var result_2499805212 = false;

    result_2499805212 = token_2499805211.canceled;

  return result_2499805212;

}
async function iterateDirectoryRec_1291858264(self_1291858265, folder_1291858266, path_1291858267, cancellationToken_1291858268, callback_1291858271) {
  var result_1291858273 = null;

  BeforeRet: {
    var path_1291858279 = nimCopy(null, path_1291858267, NTI33554449);
    var resultItems_1291858280 = [];
    var folders_1291858281 = [];
    if (canceled_2499805210(cancellationToken_1291858268)) {
    result_1291858273 = undefined;
    break BeforeRet;
    }
    
    var items_1291858286 = (await getDirectoryListing_2214592561(folder_1291858266, path_1291858279));
    if (canceled_2499805210(cancellationToken_1291858268)) {
    result_1291858273 = undefined;
    break BeforeRet;
    }
    
    Label1: {
      var file_1291858290 = [];
      var i_1291858590 = 0;
      var L_1291858591 = (items_1291858286.files).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858590 < L_1291858591)) break Label3;
            file_1291858290 = items_1291858286.files[chckIndx(i_1291858590, 0, (items_1291858286.files).length - 1)];
            resultItems_1291858280.push(HEX2F_1426063446(path_1291858279, file_1291858290));;
            i_1291858590 = addInt(i_1291858590, 1);
            if (!(((items_1291858286.files).length == L_1291858591))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      var dir_1291858298 = [];
      var i_1291858594 = 0;
      var L_1291858595 = (items_1291858286.folders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_1291858594 < L_1291858595)) break Label6;
            dir_1291858298 = items_1291858286.folders[chckIndx(i_1291858594, 0, (items_1291858286.folders).length - 1)];
            folders_1291858281.push(HEX2F_1426063446(path_1291858279, dir_1291858298));;
            i_1291858594 = addInt(i_1291858594, 1);
            if (!(((items_1291858286.folders).length == L_1291858595))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    callback_1291858271(resultItems_1291858280);
    if (canceled_2499805210(cancellationToken_1291858268)) {
    result_1291858273 = undefined;
    break BeforeRet;
    }
    
    var futs_1291858304 = [];
    Label7: {
      var dir_1291858308 = [];
      var i_1291858598 = 0;
      var L_1291858599 = (folders_1291858281).length;
      Label8: {
          Label9: while (true) {
          if (!(i_1291858598 < L_1291858599)) break Label9;
            dir_1291858308 = folders_1291858281[chckIndx(i_1291858598, 0, (folders_1291858281).length - 1)];
            futs_1291858304.push(iterateDirectoryRec_1291858264(self_1291858265, folder_1291858266, dir_1291858308, cancellationToken_1291858268, callback_1291858271));;
            i_1291858598 = addInt(i_1291858598, 1);
            if (!(((folders_1291858281).length == L_1291858599))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label10: {
      var fut_1291858335 = null;
      var i_1291858603 = 0;
      var L_1291858604 = (futs_1291858304).length;
      Label11: {
          Label12: while (true) {
          if (!(i_1291858603 < L_1291858604)) break Label12;
            fut_1291858335 = futs_1291858304[chckIndx(i_1291858603, 0, (futs_1291858304).length - 1)];
            (await fut_1291858335);
            i_1291858603 = addInt(i_1291858603, 1);
            if (!(((futs_1291858304).length == L_1291858604))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291858273 = undefined;
    break BeforeRet;
  };

  return result_1291858273;

}

function some_1291855520(val_1291855522) {
  var result_1291855523 = ({val: null});

    if (!(!((val_1291855522 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291855523.val = val_1291855522;

  return result_1291855523;

}

function loadWorkspaceFile_1291857414(self_1291857415, path_1291857416, folder_1291857417) {
    try {
    if ((((0 <= self_1291857415.currentView) && (self_1291857415.currentView < (self_1291857415.views).length)) && !((self_1291857415.views[chckIndx(self_1291857415.currentView, 0, (self_1291857415.views).length - 1)].document == null)))) {
++excHandler;
    try {
    self_1291857415.views[chckIndx(self_1291857415.currentView, 0, (self_1291857415.views).length - 1)].document.workspace = nimCopy(self_1291857415.views[chckIndx(self_1291857415.currentView, 0, (self_1291857415.views).length - 1)].document.workspace, some_1291855520(folder_1291857417), NTI2197815306);
    load_2197815320(self_1291857415.views[chckIndx(self_1291857415.currentView, 0, (self_1291857415.views).length - 1)].document, path_1291857416);
    handleDocumentChanged_2415919265(self_1291857415.views[chckIndx(self_1291857415.currentView, 0, (self_1291857415.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857432 = [mnewString(0)];
    fmtRes_1291857432[0].push.apply(fmtRes_1291857432[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857432, 0, path_1291857416, []);
    fmtRes_1291857432[0].push.apply(fmtRes_1291857432[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857432, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857432[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857415.platform, false);
    }

  
}

function isNone_2818579267(self_2818579269) {
  var result_2818579270 = false;

    result_2818579270 = (self_2818579269.val == null);

  return result_2818579270;

}

function get_1291858481(self_1291858483) {
  var result_1291858484 = null;
  var result_1291858484_Idx = 0;

  BeforeRet: {
    if (isNone_2818579267(self_1291858483)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291858484 = self_1291858483; result_1291858484_Idx = "val";
    break BeforeRet;
  };

  return [result_1291858484, result_1291858484_Idx];

}

function newTextDocument_1291857550(filename_1291857552, content_1291857553, app_1291857554) {
  var result_1291857555 = null;

    result_1291857555 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857559 = result_1291857555;
    self_1291857559.filename = nimCopy(null, filename_1291857552, NTI33554449);
    self_1291857559.currentTree = null;
    self_1291857559.appFile = app_1291857554;
    var _ = initTreesitter_2818578868(self_1291857559);
    var language_1291857560 = getLanguageForFile_2902458372(filename_1291857552);
    if (isSome_2348810304(language_1291857560)) {
    self_1291857559.languageId = nimCopy(null, get_2818578905(language_1291857560), NTI33554449);
    }
    
    contentHEX3D_2818573987(self_1291857559, content_1291857553);

  return result_1291857555;

}
async function updateDocumentContent_1291857255(self_1291857256, document_1291857257, path_1291857258, folder_1291857259) {
  var result_1291857261 = null;

  BeforeRet: {
    var content_1291857271 = (await loadFile_2214592545(folder_1291857259, path_1291857258));
    if (isObj(document_1291857257.m_type, NTI2818572427)) {
    contentHEX3D_2818573946(document_1291857257, content_1291857271);
    }
    
    result_1291857261 = undefined;
    break BeforeRet;
  };

  return result_1291857261;

}

function openWorkspaceFile_1291857539(self_1291857540, path_1291857541, folder_1291857542) {
    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857541, [46,97,115,116])) {
    createView_1291848958(self_1291857540, newAstDocument_2969571604(path_1291857541, false, some_1291855520(folder_1291857542)));
    }
    else {
      var document_1291857583 = newTextDocument_1291857550(path_1291857541, [], false);
      document_1291857583.workspace = nimCopy(document_1291857583.workspace, some_1291855520(folder_1291857542), NTI2197815306);
      var _ = updateDocumentContent_1291857255(self_1291857540, document_1291857583, path_1291857541, folder_1291857542);
      createView_1291848958(self_1291857540, document_1291857583);
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857591 = [mnewString(0)];
    fmtRes_1291857591[0].push.apply(fmtRes_1291857591[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857591, 0, path_1291857541, []);
    fmtRes_1291857591[0].push.apply(fmtRes_1291857591[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857591, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857591[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2768240746(self_1291857540.platform, false);
    }

  
}

function chooseFile_1291858364(self_1291858365, view_1291858366) {
    async function HEX3Aanonymous_1291858369(popup_1291858370, text_1291858371) {
                text_1291858371 = nimCopy(null, text_1291858371, NTI33554449);
                
function HEX3Aanonymous_1291858388(files_1291858389) {
                    
function HEX3Aanonymous_1291858409(a_1291858427, b_1291858428) {
                      var result_1291858433 = 0;

                        result_1291858433 = cmp_2969583930(a_1291858427.score, b_1291858428.score);

                      return result_1291858433;

                    }

                    var folder_1291858390 = folder_1291858387;
                    Label1: {
                      var file_1291858394 = [];
                      var i_1291858583 = 0;
                      var L_1291858584 = (files_1291858389).length;
                      Label2: {
                          Label3: while (true) {
                          if (!(i_1291858583 < L_1291858584)) break Label3;
                            file_1291858394 = files_1291858389[chckIndx(i_1291858583, 0, (files_1291858389).length - 1)];
                            var name_1291858395 = nimCopy(null, nossplitFile(file_1291858394).Field1, NTI33554449);
                            var score_1291858396 = fuzzyMatchSmart_1979711572(text_1291858371, name_1291858395, true);
                            var fmtRes_1291858401 = [mnewString(0)];
                            formatValue_721420459(fmtRes_1291858401, 0, file_1291858394, []);
                            popup_1291858370.completions.push({path: nimCopy(null, fmtRes_1291858401[0], NTI33554449), score: score_1291858396, workspaceFolder: some_1291855520(folder_1291858390), m_type: NTI1291848508});;
                            i_1291858583 = addInt(i_1291858583, 1);
                            if (!(((files_1291858389).length == L_1291858584))) {
                            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    sort_1291857797(popup_1291858370.completions, HEX3Aanonymous_1291858409, 0);
                    markDirty_2483027989(popup_1291858370);

                  
                }

      var result_1291858373 = null;

      BeforeRet: {
        if (!((popup_1291858370.cancellationToken == null))) {
        cancel_2499805208(popup_1291858370.cancellationToken);
        }
        
        var cancellationToken_1291858382 = newCancellationToken_2499805188();
        popup_1291858370.cancellationToken = cancellationToken_1291858382;
        Label1: {
          var folder_1291858386 = null;
          var i_1291858586 = 0;
          var L_1291858587 = (self_1291858365.workspace.folders).length;
          Label2: {
              Label3: while (true) {
              if (!(i_1291858586 < L_1291858587)) break Label3;
                folder_1291858386 = self_1291858365.workspace.folders[chckIndx(i_1291858586, 0, (self_1291858365.workspace.folders).length - 1)];
                var folder_1291858387 = folder_1291858386;
                (await iterateDirectoryRec_1291858264(self_1291858365, folder_1291858387, [], cancellationToken_1291858382, HEX3Aanonymous_1291858388));
                i_1291858586 = addInt(i_1291858586, 1);
                if (!(((self_1291858365.workspace.folders).length == L_1291858587))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_1291858373 = undefined;
        break BeforeRet;
      };

      return result_1291858373;

    }
    view_1291858366 = nimCopy(null, view_1291858366, NTI33554449);
    
function HEX3Aanonymous_1291858460(item_1291858461) {
          var Temporary1;
          var Temporary2;

        switch (toJSStr(view_1291858366)) {
        case "current":
          if (isSome_2818579239(item_1291858461.workspaceFolder)) {
          loadWorkspaceFile_1291857414(self_1291858365, item_1291858461.path, (Temporary1 = get_1291858481(item_1291858461.workspaceFolder), Temporary1)[0][Temporary1[1]]);
          }
          else {
          loadFile_1291857356(self_1291858365, item_1291858461.path);
          }
          
          break;
        case "new":
          if (isSome_2818579239(item_1291858461.workspaceFolder)) {
          openWorkspaceFile_1291857539(self_1291858365, item_1291858461.path, (Temporary2 = get_1291858481(item_1291858461.workspaceFolder), Temporary2)[0][Temporary2[1]]);
          }
          else {
          openFile_1291857439(self_1291858365, item_1291858461.path, false);
          }
          
          break;
        default: 
          var fmtRes_1291858528 = [mnewString(0)];
          fmtRes_1291858528[0].push.apply(fmtRes_1291858528[0], [85,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32]);;
          formatValue_721420459(fmtRes_1291858528, 0, view_1291858366, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858528[0], NTI33554449)]);
          break;
        }

      
    }

    try {
    var popup_1291858367 = newSelectorPopup_3221226270(self_1291858365);
    popup_1291858367.getCompletionsAsyncIter = HEX3Aanonymous_1291858369;
    popup_1291858367.handleItemConfirmed = HEX3Aanonymous_1291858460;
    updateCompletions_3221225653(popup_1291858367);
    pushPopup_1291849060(self_1291858365, popup_1291858367);
    } finally {
    requestRender_2768240746(self_1291858365.platform, false);
    }

  
}

function chooseFileJsWrapper_1291858360(self_1291858565, view_1291858566) {
    chooseFile_1291858364(self_1291858565, view_1291858566);

  
}
editor_prototype.chooseFile = function(view_ /* : string */) { return (chooseFileJsWrapper_1291858360(this, view_ == undefined ? undefined : cstrToNimstr(view_)));};

function setGithubAccessToken_1291858612(self_1291858613, token_1291858614) {
    saveApplicationFile_2365587480(fs_2365587509, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110], token_1291858614);

  
}

function setGithubAccessTokenJsWrapper_1291858608(self_1291858642, token_1291858643) {
    setGithubAccessToken_1291858612(self_1291858642, token_1291858643);

  
}
editor_prototype.setGithubAccessToken = function(token_ /* : string */) { return (setGithubAccessTokenJsWrapper_1291858608(this, token_ == undefined ? undefined : cstrToNimstr(token_)));};

function reloadConfig_1291858664(self_1291858665) {
    try {
    if (!((self_1291858665.scriptContext == null))) {
++excHandler;
    try {
    reload_2751463441(self_1291858665.scriptContext);
    if (!(self_1291858665.initializeCalled)) {
    var _ = false;
    self_1291858665.initializeCalled = true;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291858678 = mnewString(0);
    fmtRes_1291858678.push.apply(fmtRes_1291858678, [70,97,105,108,101,100,32,116,111,32,114,101,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858678, NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291858665.platform, false);
    }

  
}

function reloadConfigJsWrapper_1291858660(self_1291858705) {
    reloadConfig_1291858664(self_1291858705);

  
}
editor_prototype.reloadConfig = function() { return (reloadConfigJsWrapper_1291858660(this));};

function logOptions_1291858721(self_1291858722) {
    log_1174405220(logger_704643272[0], 2, [pretty_1627394477(self_1291858722.options, 2)]);

  
}

function logOptionsJsWrapper_1291858717(self_1291858749) {
    logOptions_1291858721(self_1291858749);

  
}
editor_prototype.logOptions = function() { return (logOptionsJsWrapper_1291858717(this));};

function clear_2113930247(t_2113930250) {
    Label1: {
      var i_2113930302 = 0;
      var colontmp__1291858812 = 0;
      colontmp__1291858812 = (t_2113930250.data).length;
      var i_1291858813 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858813 < colontmp__1291858812)) break Label3;
            i_2113930302 = i_1291858813;
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field0 = 0;
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            i_1291858813 = addInt(i_1291858813, 1);
          }
      };
    };
    t_2113930250.counter = 0;

  
}

function clearCommands_2113930205(config_2113930206) {
    clear_2113930247(config_2113930206.commands);
    config_2113930206.revision = addInt(config_2113930206.revision, 1);

  
}

function clearCommands_1291858765(self_1291858766, context_1291858767) {
    clearCommands_2113930205(getEventHandlerConfig_1291849162(self_1291858766, context_1291858767));

  
}

function clearCommandsJsWrapper_1291858761(self_1291858795, context_1291858796) {
    clearCommands_1291858765(self_1291858795, context_1291858796);

  
}
editor_prototype.clearCommands = function(context_ /* : string */) { return (clearCommandsJsWrapper_1291858761(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function len_1291853918(t_1291853921) {
  var result_1291853922 = 0;

    result_1291853922 = t_1291853921.counter;

  return result_1291853922;

}

function getAllEditors_1291858821(self_1291858822) {
  var result_1291858823 = [];

    Label1: {
      var id_1291859044 = 0;
      var L_1291859108 = len_1291853918(self_1291858822.editors);
      Label2: {
        var h_1291859110 = 0;
        var colontmp__1291859111 = 0;
        colontmp__1291859111 = (self_1291858822.editors.data).length - 1;
        var res_1291859112 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291859112 <= colontmp__1291859111)) break Label4;
              h_1291859110 = res_1291859112;
              if (isFilled_1308622880(self_1291858822.editors.data[chckIndx(h_1291859110, 0, (self_1291858822.editors.data).length - 1)].Field0)) {
              id_1291859044 = self_1291858822.editors.data[chckIndx(h_1291859110, 0, (self_1291858822.editors.data).length - 1)]["Field1"];
              result_1291858823.push(id_1291859044);;
              if (!((len_1291853918(self_1291858822.editors) == L_1291859108))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291859112 = addInt(res_1291859112, 1);
            }
        };
      };
    };

  return result_1291858823;

}

function getAllEditorsJsWrapper_1291858817(self_1291859076) {
  var result_1291859077 = [];

    result_1291859077 = nimCopy(null, getAllEditors_1291858821(self_1291859076), NTI1291854649);

  return result_1291859077;

}
editor_prototype.getAllEditors = function() { return (getAllEditorsJsWrapper_1291858817(this));};

function getModeConfig_1291859114(self_1291859115, mode_1291859116) {
  var result_1291859117 = null;

  BeforeRet: {
    result_1291859117 = getEventHandlerConfig_1291849162(self_1291859115, ([101,100,105,116,111,114,46] || []).concat(mode_1291859116 || []));
    break BeforeRet;
  };

  return result_1291859117;

}

function setMode_1291859124(self_1291859125, mode_1291859126) {
        
function HEX3Aanonymous_1291859147(actionHEX60gensym613HEX60gensym614_1291859148, argHEX60gensym613HEX60gensym614_1291859149) {
            var Temporary1;

          var result_1291859150 = 0;

          BeforeRet: {
            if (handlerHEX60gensym613_1291859135.config.handleActions) {
            var action_1291859151 = nimCopy(null, actionHEX60gensym613HEX60gensym614_1291859148, NTI33554449);
            var arg_1291859152 = nimCopy(null, argHEX60gensym613HEX60gensym614_1291859149, NTI33554449);
            if (handleAction_1291848870(self_1291859125, action_1291859151, arg_1291859152)) {
            Temporary1 = 3;
            }
            else {
            Temporary1 = 1;
            }
            
            var responseHEX60gensym613HEX60gensym614_1291859153 = Temporary1;
            if (handlerHEX60gensym613_1291859135.config.consumeAllActions) {
            result_1291859150 = 3;
            break BeforeRet;
            }
            
            result_1291859150 = responseHEX60gensym613HEX60gensym614_1291859153;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym613_1291859135.config.consumeAllActions) {
            result_1291859150 = 3;
            break BeforeRet;
            }
            else {
              result_1291859150 = 1;
              break BeforeRet;
            }
            }
          };

          return result_1291859150;

        }
        
function HEX3Aanonymous_1291859155(inputHEX60gensym613HEX60gensym615_1291859156) {
          var result_1291859157 = 0;

          BeforeRet: {
            if (handlerHEX60gensym613_1291859135.config.handleInputs) {
            var input_1291859158 = nimCopy(null, inputHEX60gensym613HEX60gensym615_1291859156, NTI33554449);
            result_1291859157 = 1;
            break BeforeRet;
            }
            else {
              result_1291859157 = 1;
              break BeforeRet;
            }
            
          };

          return result_1291859157;

        }

    try {
    if (((mode_1291859126).length == 0)) {
    self_1291859125.modeEventHandler = null;
    }
    else {
      var config_1291859127 = getModeConfig_1291859114(self_1291859125, mode_1291859126);
      Label2: {
        var handlerHEX60gensym613_1291859135 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym613_1291859135.config = config_1291859127;
        handlerHEX60gensym613_1291859135.dfaInternal = buildDFA_2113929279(config_1291859127);
        handlerHEX60gensym613_1291859135.handleAction = HEX3Aanonymous_1291859147;
        handlerHEX60gensym613_1291859135.handleInput = HEX3Aanonymous_1291859155;
      };
      self_1291859125.modeEventHandler = handlerHEX60gensym613_1291859135;
    }
    
    self_1291859125.currentMode = nimCopy(null, mode_1291859126, NTI33554449);
    } finally {
    requestRender_2768240746(self_1291859125.platform, false);
    }

  
}

function setModeJsWrapper22_1291859120(self_1291859186, mode_1291859187) {
    setMode_1291859124(self_1291859186, mode_1291859187);

  
}
editor_prototype.setMode22 = function(mode_ /* : string */) { return (setModeJsWrapper22_1291859120(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_1291859209(self_1291859210) {
  var result_1291859211 = [];

  BeforeRet: {
    result_1291859211 = nimCopy(null, self_1291859210.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_1291859211;

}

function modeJsWrapper22_1291859205(self_1291859239) {
  var result_1291859240 = [];

    result_1291859240 = nimCopy(null, mode_1291859209(self_1291859239), NTI33554449);

  return result_1291859240;

}
editor_prototype.mode22 = function() { return toJSStr(modeJsWrapper22_1291859205(this));};

function getContextWithMode_1291859260(self_1291859261, context_1291859262) {
  var result_1291859263 = [];

  BeforeRet: {
    result_1291859263 = nimCopy(null, (context_1291859262 || []).concat([46] || [],self_1291859261.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_1291859263;

}

function getContextWithModeJsWrapper22_1291859256(self_1291859292, context_1291859293) {
  var result_1291859294 = [];

    result_1291859294 = nimCopy(null, getContextWithMode_1291859260(self_1291859292, context_1291859293), NTI33554449);

  return result_1291859294;

}
editor_prototype.getContextWithMode22 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper22_1291859256(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function scriptRunAction_1291859545(action_1291859546, arg_1291859547) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    var _ = handleAction_1291848870(gEditor, action_1291859546, arg_1291859547);
  };

  
}

function scriptRunActionJsWrapper_1291859542(action_1291859556, arg_1291859557) {
    scriptRunAction_1291859545(action_1291859556, arg_1291859557);

  
}
editor_prototype.scriptRunAction = function(action_ /* : string */, arg_ /* : string */) { return (scriptRunActionJsWrapper_1291859542(action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptLog_1291859582(message_1291859583) {
    var fmtRes_1291859588 = [mnewString(0)];
    fmtRes_1291859588[0].push.apply(fmtRes_1291859588[0], [91,115,99,114,105,112,116,93,32]);;
    formatValue_721420459(fmtRes_1291859588, 0, message_1291859583, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291859588[0], NTI33554449)]);

  
}

function scriptLogJsWrapper_1291859579(message_1291859593) {
    scriptLog_1291859582(message_1291859593);

  
}
editor_prototype.scriptLog = function(message_ /* : string */) { return (scriptLogJsWrapper_1291859579(message_ == undefined ? undefined : cstrToNimstr(message_)));};

function rawGet_1795162457(t_1795162460, key_1795162461, hc_1795162462, hc_1795162462_Idx) {
  var result_1795162463 = 0;

  BeforeRet: {
    hc_1795162462[hc_1795162462_Idx] = hash_1325400491(key_1795162461);
    if ((hc_1795162462[hc_1795162462_Idx] == 0)) {
    hc_1795162462[hc_1795162462_Idx] = 314159265;
    }
    
    if (((t_1795162460.data).length == 0)) {
    result_1795162463 = -1;
    break BeforeRet;
    }
    
    var h_1795162515 = (hc_1795162462[hc_1795162462_Idx] & (t_1795162460.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0)) break Label2;
          if (((t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0 == hc_1795162462[hc_1795162462_Idx]) && eqStrings(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field1, key_1795162461))) {
          result_1795162463 = h_1795162515;
          break BeforeRet;
          }
          
          h_1795162515 = nextTry_1308622883(h_1795162515, (t_1795162460.data).length - 1);
        }
    };
    result_1795162463 = subInt(-1, h_1795162515);
  };

  return result_1795162463;

}

function mustRehash_1795162905(t_1795162907) {
  var result_1795162908 = false;

    if (!((t_1795162907.counter < (t_1795162907.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1795162908 = ((mulInt((t_1795162907.data).length, 2) < mulInt(t_1795162907.counter, 3)) || (subInt((t_1795162907.data).length, t_1795162907.counter) < 4));

  return result_1795162908;

}

function rawInsert_1795163354(t_1795163358, data_1795163359, data_1795163359_Idx, key_1795163360, val_1795163361, hc_1795163362, h_1795163363) {
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field1 = nimCopy(null, key_1795163360, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field2 = nimCopy(null, val_1795163361, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field0 = hc_1795163362;

  
}

function enlarge_1795163060(t_1795163063) {
    var n_1795163066 = [];
    n_1795163066 = new Array(chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647) ; ++i) { n_1795163066[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1795163063.data; t_1795163063.data = n_1795163066; n_1795163066 = Temporary1;    Label2: {
      var i_1795163130 = 0;
      var colontmp__1291859687 = 0;
      colontmp__1291859687 = (n_1795163066).length - 1;
      var res_1291859688 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291859688 <= colontmp__1291859687)) break Label4;
            i_1795163130 = res_1291859688;
            var eh_1795163184 = n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field0;
            if (isFilled_1308622880(eh_1795163184)) {
            var j_1795163188 = (eh_1795163184 & (t_1795163063.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1795163063.data[chckIndx(j_1795163188, 0, (t_1795163063.data).length - 1)].Field0)) break Label6;
                  j_1795163188 = nextTry_1308622883(j_1795163188, (t_1795163063.data).length - 1);
                }
            };
            rawInsert_1795163354(t_1795163063, t_1795163063, "data", n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field1, n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field2, eh_1795163184, j_1795163188);
            }
            
            res_1291859688 = addInt(res_1291859688, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1795163523(t_1795163526, key_1795163527, hc_1795163528) {
  var result_1795163529 = 0;

  BeforeRet: {
    if (((t_1795163526.data).length == 0)) {
    result_1795163529 = -1;
    break BeforeRet;
    }
    
    var h_1795163580 = (hc_1795163528 & (t_1795163526.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0)) break Label2;
          if (((t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0 == hc_1795163528) && eqStrings(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field1, key_1795163527))) {
          result_1795163529 = h_1795163580;
          break BeforeRet;
          }
          
          h_1795163580 = nextTry_1308622883(h_1795163580, (t_1795163526.data).length - 1);
        }
    };
    result_1795163529 = subInt(-1, h_1795163580);
  };

  return result_1795163529;

}

function HEX5BHEX5DHEX3D_1795162732(t_1795162735, key_1795162736, val_1795162737) {
    if (((t_1795162735.data).length == 0)) {
    var correctSizeHEX60gensym8_1795162786 = slotsNeeded_1308622891(32);
    t_1795162735.counter = 0;
    t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1795162791 = [0];
    var index_1795162798 = rawGet_1795162457(t_1795162735, key_1795162736, hc_1795162791, 0);
    if ((0 <= index_1795162798)) {
    t_1795162735.data[chckIndx(index_1795162798, 0, (t_1795162735.data).length - 1)].Field2 = nimCopy(null, val_1795162737, NTI33554449);
    }
    else {
      if (((t_1795162735.data).length == 0)) {
      var correctSizeHEX60gensym11_1795162900 = slotsNeeded_1308622891(32);
      t_1795162735.counter = 0;
      t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1795162905(t_1795162735)) {
      enlarge_1795163060(t_1795162735);
      index_1795162798 = rawGetKnownHC_1795163523(t_1795162735, key_1795162736, hc_1795162791[0]);
      }
      
      index_1795162798 = subInt(-1, index_1795162798);
      rawInsert_1795163354(t_1795162735, t_1795162735, "data", key_1795162736, val_1795162737, hc_1795162791[0], index_1795162798);
      t_1795162735.counter = addInt(t_1795162735.counter, 1);
    }
    

  
}

function addCommand_2113929598(config_2113929599, keys_2113929600, action_2113929601) {
    HEX5BHEX5DHEX3D_1795162732(config_2113929599.commands, keys_2113929600, action_2113929601);
    config_2113929599.revision = addInt(config_2113929599.revision, 1);

  
}

function addCommandScript_1291859614(self_1291859615, context_1291859616, keys_1291859617, action_1291859618, arg_1291859619) {
    var Temporary1;

    if (((arg_1291859619).length == 0)) {
    Temporary1 = action_1291859618;
    }
    else {
    Temporary1 = (action_1291859618 || []).concat([32] || [],arg_1291859619 || []);
    }
    
    var command_1291859620 = nimCopy(null, Temporary1, NTI33554449);
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291859615, context_1291859616), keys_1291859617, command_1291859620);

  
}

function addCommandScriptJsWrapper_1291859610(self_1291859651, context_1291859652, keys_1291859653, action_1291859654, arg_1291859655) {
    addCommandScript_1291859614(self_1291859651, context_1291859652, keys_1291859653, action_1291859654, arg_1291859655);

  
}
editor_prototype.addCommandScript = function(context_ /* : string */, keys_ /* : string */, action_ /* : string */, arg_ /* : string */) { return (addCommandScriptJsWrapper_1291859610(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_), action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function del_2113929695(t_2113929698, key_2113929699) {
    var hc_2113929700 = [0];
    var i_2113929707 = rawGet_1795162457(t_2113929698, key_2113929699, hc_2113929700, 0);
    var mskHEX60gensym36_2113929711 = (t_2113929698.data).length - 1;
    if ((0 <= i_2113929707)) {
    t_2113929698.counter = subInt(t_2113929698.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2113929718 = i_2113929707;
            var rHEX60gensym36_2113929719 = jHEX60gensym36_2113929718;
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0 = 0;
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2113929707 = (addInt(i_2113929707, 1) & mskHEX60gensym36_2113929711);
                  if (isEmpty_1308622877(t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2113929719 = (t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0 & mskHEX60gensym36_2113929711);
                  if (!(((((rHEX60gensym36_2113929719 <= i_2113929707) && (jHEX60gensym36_2113929718 < rHEX60gensym36_2113929719)) || ((jHEX60gensym36_2113929718 < rHEX60gensym36_2113929719) && (i_2113929707 < jHEX60gensym36_2113929718))) || ((i_2113929707 < jHEX60gensym36_2113929718) && (rHEX60gensym36_2113929719 <= i_2113929707))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2113929698.data[chckIndx(jHEX60gensym36_2113929718, 0, (t_2113929698.data).length - 1)] = nimCopy(t_2113929698.data[chckIndx(jHEX60gensym36_2113929718, 0, (t_2113929698.data).length - 1)], t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)], NTI1795162126);
          }
      };
    };
    }
    

  
}

function removeCommand_2113929652(config_2113929653, keys_2113929654) {
    del_2113929695(config_2113929653.commands, keys_2113929654);
    config_2113929653.revision = addInt(config_2113929653.revision, 1);

  
}

function removeCommand_1291859697(self_1291859698, context_1291859699, keys_1291859700) {
    removeCommand_2113929652(getEventHandlerConfig_1291849162(self_1291859698, context_1291859699), keys_1291859700);

  
}

function removeCommandJsWrapper_1291859693(self_1291859729, context_1291859730, keys_1291859731) {
    removeCommand_1291859697(self_1291859729, context_1291859730, keys_1291859731);

  
}
editor_prototype.removeCommand = function(context_ /* : string */, keys_ /* : string */) { return (removeCommandJsWrapper_1291859693(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_)));};

function getActivePopup_1291859758() {
  var result_1291859759 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859759 = -1;
    break BeforeRet;
    }
    
    if ((0 < (gEditor.popups).length)) {
    result_1291859759 = gEditor.popups[chckIndx((gEditor.popups).length - 1, 0, (gEditor.popups).length - 1)].id;
    break BeforeRet;
    }
    
    result_1291859759 = -1;
    break BeforeRet;
  };

  return result_1291859759;

}

function getActivePopupJsWrapper_1291859755() {
  var result_1291859776 = 0;

    result_1291859776 = getActivePopup_1291859758();

  return result_1291859776;

}
editor_prototype.getActivePopup = function() { return (getActivePopupJsWrapper_1291859755());};

function getActiveEditor_1291859795() {
  var result_1291859796 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859796 = -1;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859796 = gEditor.commandLineTextEditor.id;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859796 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291859796 = -1;
    break BeforeRet;
  };

  return result_1291859796;

}

function getActiveEditorJsWrapper_1291859792() {
  var result_1291859807 = 0;

    result_1291859807 = getActiveEditor_1291859795();

  return result_1291859807;

}
editor_prototype.getActiveEditor = function() { return (getActiveEditorJsWrapper_1291859792());};

function getActiveEditor2_1291859826(self_1291859827) {
  var result_1291859828 = null;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859828 = null;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859828 = gEditor.commandLineTextEditor;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859828 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor;
    break BeforeRet;
    }
    
    result_1291859828 = null;
    break BeforeRet;
  };

  return result_1291859828;

}

function getActiveEditor2JsWrapper_1291859823(self_1291859862) {
  var result_1291859863 = null;

    result_1291859863 = getActiveEditor2_1291859826(self_1291859862);

  return result_1291859863;

}
editor_prototype.getActiveEditor2 = function() { return (getActiveEditor2JsWrapper_1291859823(this));};

function loadCurrentConfig_1291859870(self_1291859871) {
    createView_1291848958(self_1291859871, newTextDocument_2818579086([99,111,110,102,105,103,46,106,115], loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115]), true));

  
}

function loadCurrentConfigJsWrapper_1291859866(self_1291859903) {
    loadCurrentConfig_1291859870(self_1291859903);

  
}
editor_prototype.loadCurrentConfig = function() { return (loadCurrentConfigJsWrapper_1291859866(this));};

function sourceCurrentDocument_1291859919(self_1291859920) {
    var editor_1291859925 = getActiveEditor2_1291859826(self_1291859920);
    if (isObj(editor_1291859925.m_type, NTI2818572510)) {
    var document_1291859932 = editor_1291859925.document;
    var contentStrict_1291859933 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(contentString_2818574086(document_1291859932) || []);
    rawEcho(contentStrict_1291859933);
      var fmtRes_1291859938 = [mnewString(0)];
      fmtRes_1291859938[0].push.apply(fmtRes_1291859938[0], [89,111,117,32,97,114,101,32,97,98,111,117,116,32,116,111,32,101,118,97,108,40,41,32,115,111,109,101,32,106,97,118,97,115,99,114,105,112,116,32,40]);;
      formatValue_721420459(fmtRes_1291859938, 0, document_1291859932.filename, []);
      fmtRes_1291859938[0].push.apply(fmtRes_1291859938[0], [41,46,32,76,111,111,107,32,105,110,32,116,104,101,32,99,111,110,115,111,108,101,32,116,111,32,115,101,101,32,119,104,97,116,39,115,32,105,110,32,116,104,101,114,101,46]);;
    if (confirm(toJSStr(fmtRes_1291859938[0]))) {
    eval(toJSStr(contentStrict_1291859933));
    }
    else {
      var fmtRes_1291859943 = mnewString(0);
      fmtRes_1291859943.push.apply(fmtRes_1291859943, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_1291859943, NTI33554449)]);
    }
    
    }
    

  
}

function sourceCurrentDocumentJsWrapper_1291859915(self_1291859970) {
    sourceCurrentDocument_1291859919(self_1291859970);

  
}
editor_prototype.sourceCurrentDocument = function() { return (sourceCurrentDocumentJsWrapper_1291859915(this));};

function getEditor_1291859985(index_1291859986) {
  var result_1291859987 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859987 = -1;
    break BeforeRet;
    }
    
    if (((0 <= index_1291859986) && (index_1291859986 < (gEditor.views).length))) {
    result_1291859987 = gEditor.views[chckIndx(index_1291859986, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291859987 = -1;
    break BeforeRet;
  };

  return result_1291859987;

}

function getEditorJsWrapper_1291859982(index_1291859999) {
  var result_1291860000 = 0;

    result_1291860000 = getEditor_1291859985(index_1291859999);

  return result_1291860000;

}
editor_prototype.getEditor = function(index_ /* : int */) { return (getEditorJsWrapper_1291859982(index_));};

function rawGet_1291845908(t_1291845911, key_1291845912, hc_1291845913, hc_1291845913_Idx) {
  var result_1291845914 = 0;

  BeforeRet: {
    hc_1291845913[hc_1291845913_Idx] = hash_1325400236(key_1291845912);
    if ((hc_1291845913[hc_1291845913_Idx] == 0)) {
    hc_1291845913[hc_1291845913_Idx] = 314159265;
    }
    
    if (((t_1291845911.data).length == 0)) {
    result_1291845914 = -1;
    break BeforeRet;
    }
    
    var h_1291845968 = (hc_1291845913[hc_1291845913_Idx] & (t_1291845911.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field0)) break Label2;
          if (((t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field0 == hc_1291845913[hc_1291845913_Idx]) && (t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field1 == key_1291845912))) {
          result_1291845914 = h_1291845968;
          break BeforeRet;
          }
          
          h_1291845968 = nextTry_1308622883(h_1291845968, (t_1291845911.data).length - 1);
        }
    };
    result_1291845914 = subInt(-1, h_1291845968);
  };

  return result_1291845914;

}

function hasKey_1291850717(t_1291850720, key_1291850721) {
  var result_1291850722 = false;

    var hc_1291850723 = [0];
    result_1291850722 = (0 <= rawGet_1291845908(t_1291850720, key_1291850721, hc_1291850723, 0));

  return result_1291850722;

}

function contains_1291850711(t_1291850714, key_1291850715) {
  var result_1291850716 = false;

  BeforeRet: {
    result_1291850716 = hasKey_1291850717(t_1291850714, key_1291850715);
    break BeforeRet;
  };

  return result_1291850716;

}

function some_1291850863(val_1291850865) {
  var result_1291850866 = ({val: null});

    if (!(!((val_1291850865 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850866.val = val_1291850865;

  return result_1291850866;

}

function HEX5BHEX5D_1291850783(t_1291850786, key_1291850787) {
  var result_1291850788 = null;
  var result_1291850788_Idx = 0;

    var hcHEX60gensym22_1291850789 = [0];
    var indexHEX60gensym22_1291850796 = rawGet_1291845908(t_1291850786, key_1291850787, hcHEX60gensym22_1291850789, 0);
    if ((0 <= indexHEX60gensym22_1291850796)) {
    result_1291850788 = t_1291850786.data[chckIndx(indexHEX60gensym22_1291850796, 0, (t_1291850786.data).length - 1)]; result_1291850788_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_1291850787);
    }
    

  return [result_1291850788, result_1291850788_Idx];

}

function none_1291850879() {
  var result_1291850885 = ({val: null});

  return result_1291850885;

}

function getEditorForId_1291850661(self_1291850662, id_1291850663) {
    var Temporary1;

  var result_1291850668 = ({val: null});

  BeforeRet: {
    if (contains_1291850711(self_1291850662.editors, id_1291850663)) {
    result_1291850668 = nimCopy(result_1291850668, some_1291850863((Temporary1 = HEX5BHEX5D_1291850783(self_1291850662.editors, id_1291850663), Temporary1)[0][Temporary1[1]]), NTI1291848319);
    break BeforeRet;
    }
    
    if ((self_1291850662.commandLineTextEditor.id == id_1291850663)) {
    result_1291850668 = nimCopy(result_1291850668, some_1291850863(self_1291850662.commandLineTextEditor), NTI1291848319);
    break BeforeRet;
    }
    
    result_1291850668 = nimCopy(result_1291850668, none_1291850879(), NTI1291848319);
    break BeforeRet;
  };

  return result_1291850668;

}

function isSome_2818583959(self_2818583961) {
  var result_2818583962 = false;

    result_2818583962 = !((self_2818583961.val == null));

  return result_2818583962;

}

function isNone_2818583987(self_2818583989) {
  var result_2818583990 = false;

    result_2818583990 = (self_2818583989.val == null);

  return result_2818583990;

}

function get_2818583979(self_2818583981) {
  var result_2818583982 = null;

    if (isNone_2818583987(self_2818583981)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818583982 = self_2818583981["val"];

  return result_2818583982;

}

function scriptIsTextEditor_1291860024(editorId_1291860025) {
      var Temporary1;

  var result_1291860026 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860026 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym740_1291860032 = getEditorForId_1291850661(gEditor, editorId_1291860025);
      if (!isSome_2818583959(oHEX60gensym740_1291860032)) Temporary1 = false; else {        var editor_1291860055 = get_2818583979(oHEX60gensym740_1291860032);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291860026 = isObj(editor_1291860055.m_type, NTI2818572510);
    break BeforeRet;
    }
    
    result_1291860026 = false;
    break BeforeRet;
  };

  return result_1291860026;

}

function scriptIsTextEditorJsWrapper_1291860021(editorId_1291860067) {
  var result_1291860068 = false;

    result_1291860068 = scriptIsTextEditor_1291860024(editorId_1291860067);

  return result_1291860068;

}
editor_prototype.scriptIsTextEditor = function(editorId_ /* : EditorId */) { return (scriptIsTextEditorJsWrapper_1291860021(editorId_));};

function scriptIsAstEditor_1291860093(editorId_1291860094) {
      var Temporary1;

  var result_1291860095 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860095 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym749_1291860101 = getEditorForId_1291850661(gEditor, editorId_1291860094);
      if (!isSome_2818583959(oHEX60gensym749_1291860101)) Temporary1 = false; else {        var editor_1291860124 = get_2818583979(oHEX60gensym749_1291860101);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291860095 = isObj(editor_1291860124.m_type, NTI2969568620);
    break BeforeRet;
    }
    
    result_1291860095 = false;
    break BeforeRet;
  };

  return result_1291860095;

}

function scriptIsAstEditorJsWrapper_1291860090(editorId_1291860136) {
  var result_1291860137 = false;

    result_1291860137 = scriptIsAstEditor_1291860093(editorId_1291860136);

  return result_1291860137;

}
editor_prototype.scriptIsAstEditor = function(editorId_ /* : EditorId */) { return (scriptIsAstEditorJsWrapper_1291860090(editorId_));};

function scriptRunActionFor_1291860161(editorId_1291860162, action_1291860163, arg_1291860164) {
      var Temporary2;
      var Temporary3;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym759_1291860170 = getEditorForId_1291850661(gEditor, editorId_1291860162);
      if (!isSome_2818583959(oHEX60gensym759_1291860170)) Temporary2 = false; else {        var editor_1291860193 = get_2818583979(oHEX60gensym759_1291860170);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291860193.eventHandler.handleAction(action_1291860163, arg_1291860164);
    }
    else {
      var oHEX60gensym760_1291860196 = getPopupForId_1291850895(gEditor, editorId_1291860162);
      if (!isSome_3221225767(oHEX60gensym760_1291860196)) Temporary3 = false; else {        var popup_1291860219 = get_3221225787(oHEX60gensym760_1291860196);
        Temporary3 = true;      }    if (Temporary3) {
    var _ = popup_1291860219.eventHandler.handleAction(action_1291860163, arg_1291860164);
    }
    }
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptRunActionForJsWrapper_1291860158(editorId_1291860230, action_1291860231, arg_1291860232) {
    scriptRunActionFor_1291860161(editorId_1291860230, action_1291860231, arg_1291860232);

  
}
editor_prototype.scriptRunActionFor = function(editorId_ /* : EditorId */, action_ /* : string */, arg_ /* : string */) { return (scriptRunActionForJsWrapper_1291860158(editorId_, action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptInsertTextInto_1291860262(editorId_1291860263, text_1291860264) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym769_1291860270 = getEditorForId_1291850661(gEditor, editorId_1291860263);
      if (!isSome_2818583959(oHEX60gensym769_1291860270)) Temporary2 = false; else {        var editor_1291860293 = get_2818583979(oHEX60gensym769_1291860270);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291860293.eventHandler.handleInput(text_1291860264);
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptInsertTextIntoJsWrapper_1291860259(editorId_1291860301, text_1291860302) {
    scriptInsertTextInto_1291860262(editorId_1291860301, text_1291860302);

  
}
editor_prototype.scriptInsertTextInto = function(editorId_ /* : EditorId */, text_ /* : string */) { return (scriptInsertTextIntoJsWrapper_1291860259(editorId_, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function scriptTextEditorSelection_1291860327(editorId_1291860328) {
      var Temporary2;

  var result_1291860329 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if ((gEditor == null)) {
    var colontmp__1291860391 = {Field0: 0, Field1: 0};
    var colontmp__1291860392 = {Field0: 0, Field1: 0};
    result_1291860329 = nimCopy(result_1291860329, {Field0: nimCopy(null, colontmp__1291860391, NTI2449473545), Field1: nimCopy(null, colontmp__1291860392, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym778_1291860335 = getEditorForId_1291850661(gEditor, editorId_1291860328);
      if (!isSome_2818583959(oHEX60gensym778_1291860335)) Temporary2 = false; else {        var editor_1291860358 = get_2818583979(oHEX60gensym778_1291860335);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860358.m_type, NTI2818572510)) {
    var editor_1291860365 = editor_1291860358;
    result_1291860329 = nimCopy(result_1291860329, selection_2818572803(editor_1291860365), NTI2449473547);
    break BeforeRet;
    }
    
    }
    
    var colontmp__1291860393 = {Field0: 0, Field1: 0};
    var colontmp__1291860394 = {Field0: 0, Field1: 0};
    result_1291860329 = nimCopy(result_1291860329, {Field0: nimCopy(null, colontmp__1291860393, NTI2449473545), Field1: nimCopy(null, colontmp__1291860394, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  return result_1291860329;

}

function scriptTextEditorSelectionJsWrapper_1291860324(editorId_1291860371) {
  var result_1291860372 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291860372 = nimCopy(result_1291860372, scriptTextEditorSelection_1291860327(editorId_1291860371), NTI2449473547);

  return result_1291860372;

}
editor_prototype.scriptTextEditorSelection = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionJsWrapper_1291860324(editorId_));};

function scriptSetTextEditorSelection_1291860400(editorId_1291860401, selection_1291860402) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym787_1291860408 = getEditorForId_1291850661(gEditor, editorId_1291860401);
      if (!isSome_2818583959(oHEX60gensym787_1291860408)) Temporary2 = false; else {        var editor_1291860431 = get_2818583979(oHEX60gensym787_1291860408);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860431.m_type, NTI2818572510)) {
    selectionHEX3D_2818572809(editor_1291860431, selection_1291860402);
    }
    
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionJsWrapper_1291860397(editorId_1291860443, selection_1291860444) {
    scriptSetTextEditorSelection_1291860400(editorId_1291860443, selection_1291860444);

  
}
editor_prototype.scriptSetTextEditorSelection = function(editorId_ /* : EditorId */, selection_ /* : Selection */) { return (scriptSetTextEditorSelectionJsWrapper_1291860397(editorId_, selection_));};

function scriptTextEditorSelections_1291860469(editorId_1291860470) {
      var Temporary1;

  var result_1291860471 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860471 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291855979);
    break BeforeRet;
    }
    
      var oHEX60gensym796_1291860481 = getEditorForId_1291850661(gEditor, editorId_1291860470);
      if (!isSome_2818583959(oHEX60gensym796_1291860481)) Temporary1 = false; else {        var editor_1291860504 = get_2818583979(oHEX60gensym796_1291860481);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860504.m_type, NTI2818572510)) {
    var editor_1291860511 = editor_1291860504;
    result_1291860471 = nimCopy(null, selections_2818572800(editor_1291860511), NTI2449473555);
    break BeforeRet;
    }
    
    }
    
    result_1291860471 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291855979);
    break BeforeRet;
  };

  return result_1291860471;

}

function scriptTextEditorSelectionsJsWrapper_1291860466(editorId_1291860521) {
  var result_1291860522 = [];

    result_1291860522 = nimCopy(null, scriptTextEditorSelections_1291860469(editorId_1291860521), NTI1291855966);

  return result_1291860522;

}
editor_prototype.scriptTextEditorSelections = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionsJsWrapper_1291860466(editorId_));};

function scriptSetTextEditorSelections_1291860546(editorId_1291860547, selections_1291860548) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym805_1291860554 = getEditorForId_1291850661(gEditor, editorId_1291860547);
      if (!isSome_2818583959(oHEX60gensym805_1291860554)) Temporary2 = false; else {        var editor_1291860577 = get_2818583979(oHEX60gensym805_1291860554);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860577.m_type, NTI2818572510)) {
    selectionsHEX3D_2818573081(editor_1291860577, selections_1291860548);
    }
    
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionsJsWrapper_1291860543(editorId_1291860589, selections_1291860590) {
    scriptSetTextEditorSelections_1291860546(editorId_1291860589, selections_1291860590);

  
}
editor_prototype.scriptSetTextEditorSelections = function(editorId_ /* : EditorId */, selections_ /* : seq[Selection] */) { return (scriptSetTextEditorSelectionsJsWrapper_1291860543(editorId_, selections_));};

function scriptGetTextEditorLine_1291860615(editorId_1291860616, line_1291860617) {
      var Temporary1;
    var Temporary2;

  var result_1291860618 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860618 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
      var oHEX60gensym815_1291860624 = getEditorForId_1291850661(gEditor, editorId_1291860616);
      if (!isSome_2818583959(oHEX60gensym815_1291860624)) Temporary1 = false; else {        var editor_1291860647 = get_2818583979(oHEX60gensym815_1291860624);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860647.m_type, NTI2818572510)) {
    var editor_1291860654 = editor_1291860647;
    if (((0 <= line_1291860617) && (line_1291860617 < (content_2818574083(editor_1291860654.document)).length))) {
    result_1291860618 = nimCopy(null, (Temporary2 = content_2818574083(editor_1291860654.document), Temporary2)[chckIndx(line_1291860617, 0, (Temporary2).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_1291860618 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_1291860618;

}

function scriptGetTextEditorLineJsWrapper_1291860612(editorId_1291860664, line_1291860665) {
  var result_1291860666 = [];

    result_1291860666 = nimCopy(null, scriptGetTextEditorLine_1291860615(editorId_1291860664, line_1291860665), NTI33554449);

  return result_1291860666;

}
editor_prototype.scriptGetTextEditorLine = function(editorId_ /* : EditorId */, line_ /* : int */) { return toJSStr(scriptGetTextEditorLineJsWrapper_1291860612(editorId_, line_));};

function scriptGetTextEditorLineCount_1291860695(editorId_1291860696) {
      var Temporary1;

  var result_1291860697 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860697 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym825_1291860703 = getEditorForId_1291850661(gEditor, editorId_1291860696);
      if (!isSome_2818583959(oHEX60gensym825_1291860703)) Temporary1 = false; else {        var editor_1291860726 = get_2818583979(oHEX60gensym825_1291860703);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860726.m_type, NTI2818572510)) {
    var editor_1291860733 = editor_1291860726;
    result_1291860697 = (content_2818574083(editor_1291860733.document)).length;
    break BeforeRet;
    }
    
    }
    
    result_1291860697 = 0;
    break BeforeRet;
  };

  return result_1291860697;

}

function scriptGetTextEditorLineCountJsWrapper_1291860692(editorId_1291860742) {
  var result_1291860743 = 0;

    result_1291860743 = scriptGetTextEditorLineCount_1291860695(editorId_1291860742);

  return result_1291860743;

}
editor_prototype.scriptGetTextEditorLineCount = function(editorId_ /* : EditorId */) { return (scriptGetTextEditorLineCountJsWrapper_1291860692(editorId_));};

function scriptGetOptionInt_1291860778(path_1291860779, default_1291860780) {
  var result_1291860781 = 0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860781 = default_1291860780;
      break BeforeRet;
      }
      
      var nodeHEX60gensym835_1291860786 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860779, [46], -1));
      if ((nodeHEX60gensym835_1291860786 == null)) {
      result_1291860781 = default_1291860780;
      break BeforeRet;
      }
      
    };
    result_1291860781 = getInt_1627390118(nodeHEX60gensym835_1291860786, default_1291860780);
  };

  return result_1291860781;

}

function scriptGetOptionIntJsWrapper_1291860775(path_1291860796, default_1291860797) {
  var result_1291860798 = 0;

    result_1291860798 = scriptGetOptionInt_1291860778(path_1291860796, default_1291860797);

  return result_1291860798;

}
editor_prototype.scriptGetOptionInt = function(path_ /* : string */, default_ /* : int */) { return (scriptGetOptionIntJsWrapper_1291860775(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionFloat_1291860828(path_1291860829, default_1291860830) {
  var result_1291860831 = 0.0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860831 = default_1291860830;
      break BeforeRet;
      }
      
      var nodeHEX60gensym845_1291860836 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860829, [46], -1));
      if ((nodeHEX60gensym845_1291860836 == null)) {
      result_1291860831 = default_1291860830;
      break BeforeRet;
      }
      
    };
    result_1291860831 = getFloat_1627390140(nodeHEX60gensym845_1291860836, default_1291860830);
  };

  return result_1291860831;

}

function scriptGetOptionFloatJsWrapper_1291860825(path_1291860846, default_1291860847) {
  var result_1291860848 = 0.0;

    result_1291860848 = scriptGetOptionFloat_1291860828(path_1291860846, default_1291860847);

  return result_1291860848;

}
editor_prototype.scriptGetOptionFloat = function(path_ /* : string */, default_ /* : float */) { return (scriptGetOptionFloatJsWrapper_1291860825(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionBool_1291860936(path_1291860937, default_1291860938) {
  var result_1291860939 = false;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860939 = default_1291860938;
      break BeforeRet;
      }
      
      var nodeHEX60gensym861_1291860944 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860937, [46], -1));
      if ((nodeHEX60gensym861_1291860944 == null)) {
      result_1291860939 = default_1291860938;
      break BeforeRet;
      }
      
    };
    result_1291860939 = getBool_1627390147(nodeHEX60gensym861_1291860944, default_1291860938);
  };

  return result_1291860939;

}

function scriptGetOptionBoolJsWrapper_1291860933(path_1291860954, default_1291860955) {
  var result_1291860956 = false;

    result_1291860956 = scriptGetOptionBool_1291860936(path_1291860954, default_1291860955);

  return result_1291860956;

}
editor_prototype.scriptGetOptionBool = function(path_ /* : string */, default_ /* : bool */) { return (scriptGetOptionBoolJsWrapper_1291860933(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionString_1291860986(path_1291860987, default_1291860988) {
  var result_1291860989 = [];

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860989 = nimCopy(null, default_1291860988, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym871_1291860994 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860987, [46], -1));
      if ((nodeHEX60gensym871_1291860994 == null)) {
      result_1291860989 = nimCopy(null, default_1291860988, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_1291860989 = nimCopy(null, getStr_1627390106(nodeHEX60gensym871_1291860994, default_1291860988), NTI33554449);
  };

  return result_1291860989;

}

function scriptGetOptionStringJsWrapper_1291860983(path_1291861004, default_1291861005) {
  var result_1291861006 = [];

    result_1291861006 = nimCopy(null, scriptGetOptionString_1291860986(path_1291861004, default_1291861005), NTI33554449);

  return result_1291861006;

}
editor_prototype.scriptGetOptionString = function(path_ /* : string */, default_ /* : string */) { return toJSStr(scriptGetOptionStringJsWrapper_1291860983(path_ == undefined ? undefined : cstrToNimstr(path_), default_ == undefined ? undefined : cstrToNimstr(default_)));};

function scriptSetOptionInt_1291861036(path_1291861037, value_1291861038) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym880_1291861045 = nsuSplitString(path_1291861037, [46], -1);
      var nodeHEX60gensym880_1291861046 = gEditor.options;
      Label3: {
        var keyHEX60gensym880_1291861065 = [];
        var colontmp__1291861109 = [];
        colontmp__1291861109 = HEX5BHEX5D_2818589611(pathItemsHEX60gensym880_1291861045, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861110 = 0;
        var L_1291861111 = (colontmp__1291861109).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861110 < L_1291861111)) break Label5;
              keyHEX60gensym880_1291861065 = colontmp__1291861109[chckIndx(i_1291861110, 0, (colontmp__1291861109).length - 1)];
              if (!((nodeHEX60gensym880_1291861046.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym880_1291861046, keyHEX60gensym880_1291861065))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym880_1291861046, keyHEX60gensym880_1291861065, newJObject_1627390051());
              }
              
              nodeHEX60gensym880_1291861046 = HEX5BHEX5D_1627393037(nodeHEX60gensym880_1291861046, keyHEX60gensym880_1291861065);
              i_1291861110 = addInt(i_1291861110, 1);
              if (!(((colontmp__1291861109).length == L_1291861111))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym880_1291861046 == null) || !((nodeHEX60gensym880_1291861046.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym880_1291861046, HEX5BHEX5D_2701132581(pathItemsHEX60gensym880_1291861045, 1), newJInt_1627390040(value_1291861038));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionIntJsWrapper_1291861033(path_1291861086, value_1291861087) {
    scriptSetOptionInt_1291861036(path_1291861086, value_1291861087);

  
}
editor_prototype.scriptSetOptionInt = function(path_ /* : string */, value_ /* : int */) { return (scriptSetOptionIntJsWrapper_1291861033(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionFloat_1291861118(path_1291861119, value_1291861120) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym894_1291861127 = nsuSplitString(path_1291861119, [46], -1);
      var nodeHEX60gensym894_1291861128 = gEditor.options;
      Label3: {
        var keyHEX60gensym894_1291861147 = [];
        var colontmp__1291861191 = [];
        colontmp__1291861191 = HEX5BHEX5D_2818589611(pathItemsHEX60gensym894_1291861127, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861192 = 0;
        var L_1291861193 = (colontmp__1291861191).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861192 < L_1291861193)) break Label5;
              keyHEX60gensym894_1291861147 = colontmp__1291861191[chckIndx(i_1291861192, 0, (colontmp__1291861191).length - 1)];
              if (!((nodeHEX60gensym894_1291861128.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym894_1291861128, keyHEX60gensym894_1291861147))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym894_1291861128, keyHEX60gensym894_1291861147, newJObject_1627390051());
              }
              
              nodeHEX60gensym894_1291861128 = HEX5BHEX5D_1627393037(nodeHEX60gensym894_1291861128, keyHEX60gensym894_1291861147);
              i_1291861192 = addInt(i_1291861192, 1);
              if (!(((colontmp__1291861191).length == L_1291861193))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym894_1291861128 == null) || !((nodeHEX60gensym894_1291861128.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym894_1291861128, HEX5BHEX5D_2701132581(pathItemsHEX60gensym894_1291861127, 1), newJFloat_1627390043(value_1291861120));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionFloatJsWrapper_1291861115(path_1291861168, value_1291861169) {
    scriptSetOptionFloat_1291861118(path_1291861168, value_1291861169);

  
}
editor_prototype.scriptSetOptionFloat = function(path_ /* : string */, value_ /* : float */) { return (scriptSetOptionFloatJsWrapper_1291861115(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionBool_1291861200(path_1291861201, value_1291861202) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym908_1291861209 = nsuSplitString(path_1291861201, [46], -1);
      var nodeHEX60gensym908_1291861210 = gEditor.options;
      Label3: {
        var keyHEX60gensym908_1291861229 = [];
        var colontmp__1291861273 = [];
        colontmp__1291861273 = HEX5BHEX5D_2818589611(pathItemsHEX60gensym908_1291861209, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861274 = 0;
        var L_1291861275 = (colontmp__1291861273).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861274 < L_1291861275)) break Label5;
              keyHEX60gensym908_1291861229 = colontmp__1291861273[chckIndx(i_1291861274, 0, (colontmp__1291861273).length - 1)];
              if (!((nodeHEX60gensym908_1291861210.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym908_1291861210, keyHEX60gensym908_1291861229))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym908_1291861210, keyHEX60gensym908_1291861229, newJObject_1627390051());
              }
              
              nodeHEX60gensym908_1291861210 = HEX5BHEX5D_1627393037(nodeHEX60gensym908_1291861210, keyHEX60gensym908_1291861229);
              i_1291861274 = addInt(i_1291861274, 1);
              if (!(((colontmp__1291861273).length == L_1291861275))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym908_1291861210 == null) || !((nodeHEX60gensym908_1291861210.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym908_1291861210, HEX5BHEX5D_2701132581(pathItemsHEX60gensym908_1291861209, 1), newJBool_1627390046(value_1291861202));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionBoolJsWrapper_1291861197(path_1291861250, value_1291861251) {
    scriptSetOptionBool_1291861200(path_1291861250, value_1291861251);

  
}
editor_prototype.scriptSetOptionBool = function(path_ /* : string */, value_ /* : bool */) { return (scriptSetOptionBoolJsWrapper_1291861197(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionString_1291861282(path_1291861283, value_1291861284) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym922_1291861291 = nsuSplitString(path_1291861283, [46], -1);
      var nodeHEX60gensym922_1291861292 = gEditor.options;
      Label3: {
        var keyHEX60gensym922_1291861311 = [];
        var colontmp__1291861355 = [];
        colontmp__1291861355 = HEX5BHEX5D_2818589611(pathItemsHEX60gensym922_1291861291, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861356 = 0;
        var L_1291861357 = (colontmp__1291861355).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861356 < L_1291861357)) break Label5;
              keyHEX60gensym922_1291861311 = colontmp__1291861355[chckIndx(i_1291861356, 0, (colontmp__1291861355).length - 1)];
              if (!((nodeHEX60gensym922_1291861292.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym922_1291861292, keyHEX60gensym922_1291861311))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym922_1291861292, keyHEX60gensym922_1291861311, newJObject_1627390051());
              }
              
              nodeHEX60gensym922_1291861292 = HEX5BHEX5D_1627393037(nodeHEX60gensym922_1291861292, keyHEX60gensym922_1291861311);
              i_1291861356 = addInt(i_1291861356, 1);
              if (!(((colontmp__1291861355).length == L_1291861357))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym922_1291861292 == null) || !((nodeHEX60gensym922_1291861292.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym922_1291861292, HEX5BHEX5D_2701132581(pathItemsHEX60gensym922_1291861291, 1), newJString_1627389994(value_1291861284));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionStringJsWrapper_1291861279(path_1291861332, value_1291861333) {
    scriptSetOptionString_1291861282(path_1291861332, value_1291861333);

  
}
editor_prototype.scriptSetOptionString = function(path_ /* : string */, value_ /* : string */) { return (scriptSetOptionStringJsWrapper_1291861279(path_ == undefined ? undefined : cstrToNimstr(path_), value_ == undefined ? undefined : cstrToNimstr(value_)));};

function rawGet_1291847822(t_1291847825, key_1291847826, hc_1291847827, hc_1291847827_Idx) {
  var result_1291847828 = 0;

  BeforeRet: {
    hc_1291847827[hc_1291847827_Idx] = hash_1325400491(key_1291847826);
    if ((hc_1291847827[hc_1291847827_Idx] == 0)) {
    hc_1291847827[hc_1291847827_Idx] = 314159265;
    }
    
    if (((t_1291847825.data).length == 0)) {
    result_1291847828 = -1;
    break BeforeRet;
    }
    
    var h_1291847880 = (hc_1291847827[hc_1291847827_Idx] & (t_1291847825.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field0)) break Label2;
          if (((t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field0 == hc_1291847827[hc_1291847827_Idx]) && eqStrings(t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field1, key_1291847826))) {
          result_1291847828 = h_1291847880;
          break BeforeRet;
          }
          
          h_1291847880 = nextTry_1308622883(h_1291847880, (t_1291847825.data).length - 1);
        }
    };
    result_1291847828 = subInt(-1, h_1291847880);
  };

  return result_1291847828;

}

function mustRehash_3036680171(t_3036680173) {
  var result_3036680174 = false;

    if (!((t_3036680173.counter < (t_3036680173.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3036680174 = ((mulInt((t_3036680173.data).length, 2) < mulInt(t_3036680173.counter, 3)) || (subInt((t_3036680173.data).length, t_3036680173.counter) < 4));

  return result_3036680174;

}

function rawInsert_3036680864(t_3036680868, data_3036680869, data_3036680869_Idx, key_3036680870, val_3036680871, hc_3036680872, h_3036680873) {
    data_3036680869[data_3036680869_Idx][chckIndx(h_3036680873, 0, (data_3036680869[data_3036680869_Idx]).length - 1)].Field1 = nimCopy(null, key_3036680870, NTI33554449);
    data_3036680869[data_3036680869_Idx][chckIndx(h_3036680873, 0, (data_3036680869[data_3036680869_Idx]).length - 1)].Field2 = val_3036680871;
    data_3036680869[data_3036680869_Idx][chckIndx(h_3036680873, 0, (data_3036680869[data_3036680869_Idx]).length - 1)].Field0 = hc_3036680872;

  
}

function enlarge_3036680428(t_3036680431) {
    var n_3036680434 = [];
    n_3036680434 = new Array(chckRange(mulInt((t_3036680431.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3036680431.data).length, 2), 0, 2147483647) ; ++i) { n_3036680434[i] = {Field0: 0, Field1: [], Field2: 0}; }    var Temporary1 = t_3036680431.data; t_3036680431.data = n_3036680434; n_3036680434 = Temporary1;    Label2: {
      var i_3036680532 = 0;
      var colontmp__1291861444 = 0;
      colontmp__1291861444 = (n_3036680434).length - 1;
      var res_1291861445 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291861445 <= colontmp__1291861444)) break Label4;
            i_3036680532 = res_1291861445;
            var eh_3036680613 = n_3036680434[chckIndx(i_3036680532, 0, (n_3036680434).length - 1)].Field0;
            if (isFilled_1308622880(eh_3036680613)) {
            var j_3036680617 = (eh_3036680613 & (t_3036680431.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3036680431.data[chckIndx(j_3036680617, 0, (t_3036680431.data).length - 1)].Field0)) break Label6;
                  j_3036680617 = nextTry_1308622883(j_3036680617, (t_3036680431.data).length - 1);
                }
            };
            rawInsert_3036680864(t_3036680431, t_3036680431, "data", n_3036680434[chckIndx(i_3036680532, 0, (n_3036680434).length - 1)].Field1, n_3036680434[chckIndx(i_3036680532, 0, (n_3036680434).length - 1)].Field2, eh_3036680613, j_3036680617);
            }
            
            res_1291861445 = addInt(res_1291861445, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3036681114(t_3036681117, key_3036681118, hc_3036681119) {
  var result_3036681120 = 0;

  BeforeRet: {
    if (((t_3036681117.data).length == 0)) {
    result_3036681120 = -1;
    break BeforeRet;
    }
    
    var h_3036681205 = (hc_3036681119 & (t_3036681117.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036681117.data[chckIndx(h_3036681205, 0, (t_3036681117.data).length - 1)].Field0)) break Label2;
          if (((t_3036681117.data[chckIndx(h_3036681205, 0, (t_3036681117.data).length - 1)].Field0 == hc_3036681119) && eqStrings(t_3036681117.data[chckIndx(h_3036681205, 0, (t_3036681117.data).length - 1)].Field1, key_3036681118))) {
          result_3036681120 = h_3036681205;
          break BeforeRet;
          }
          
          h_3036681205 = nextTry_1308622883(h_3036681205, (t_3036681117.data).length - 1);
        }
    };
    result_3036681120 = subInt(-1, h_3036681205);
  };

  return result_3036681120;

}

function HEX5BHEX5DHEX3D_3036679903(t_3036679906, key_3036679907, val_3036679908) {
    if (((t_3036679906.data).length == 0)) {
    var correctSizeHEX60gensym30_3036679991 = slotsNeeded_1308622891(32);
    t_3036679906.counter = 0;
    t_3036679906.data = new Array(chckRange(correctSizeHEX60gensym30_3036679991, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym30_3036679991, 0, 2147483647) ; ++i) { t_3036679906.data[i] = {Field0: 0, Field1: [], Field2: 0}; }    }
    
    var hc_3036679996 = [0];
    var index_3036680003 = rawGet_1291847822(t_3036679906, key_3036679907, hc_3036679996, 0);
    if ((0 <= index_3036680003)) {
    t_3036679906.data[chckIndx(index_3036680003, 0, (t_3036679906.data).length - 1)].Field2 = val_3036679908;
    }
    else {
      if (((t_3036679906.data).length == 0)) {
      var correctSizeHEX60gensym33_3036680166 = slotsNeeded_1308622891(32);
      t_3036679906.counter = 0;
      t_3036679906.data = new Array(chckRange(correctSizeHEX60gensym33_3036680166, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym33_3036680166, 0, 2147483647) ; ++i) { t_3036679906.data[i] = {Field0: 0, Field1: [], Field2: 0}; }      }
      
      if (mustRehash_3036680171(t_3036679906)) {
      enlarge_3036680428(t_3036679906);
      index_3036680003 = rawGetKnownHC_3036681114(t_3036679906, key_3036679907, hc_3036679996[0]);
      }
      
      index_3036680003 = subInt(-1, index_3036680003);
      rawInsert_3036680864(t_3036679906, t_3036679906, "data", key_3036679907, val_3036679908, hc_3036679996[0], index_3036680003);
      t_3036679906.counter = addInt(t_3036679906.counter, 1);
    }
    

  
}

function scriptSetCallback_1291861364(path_1291861365, id_1291861366) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_3036679903(gEditor.callbacks, path_1291861365, id_1291861366);
  };

  
}

function scriptSetCallbackJsWrapper_1291861361(path_1291861421, id_1291861422) {
    scriptSetCallback_1291861364(path_1291861421, id_1291861422);

  
}
editor_prototype.scriptSetCallback = function(path_ /* : string */, id_ /* : int */) { return (scriptSetCallbackJsWrapper_1291861361(path_ == undefined ? undefined : cstrToNimstr(path_), id_));};

function initTable_3254779948(initialSize_3254779951) {
  var result_3254779957 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3254779959 = slotsNeeded_1308622891(chckRange(initialSize_3254779951, 0, 2147483647));
    result_3254779957.counter = 0;
    result_3254779957.data = new Array(chckRange(correctSizeHEX60gensym0_3254779959, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3254779959, 0, 2147483647) ; ++i) { result_3254779957.data[i] = {Field0: 0, Field1: 0, Field2: null}; }
  return result_3254779957;

}
var commandLineWidget_3254779944 = [null];
var mainStack_3254779945 = [null];
var viewPanel_3254779946 = [null];
var mainPanel_3254779947 = [null];
var widgetsPerEditor_3254779973 = [initTable_3254779948(32)];

function new_536870929() {
  var result_536870932 = null;

  BeforeRet: {
    var r_536870934 = null;
    r_536870934 = ({m_type: NTI3338665995, content: null, boundsStack: [], onResized: ({handlers: []}), mFontSize: 0.0, mLineHeight: 0.0, mLineDistance: 0.0, mCharWidth: 0.0, escapedText: null, domUpdates: [], currentEvent: null, redrawEverything: false, onKeyPress: ({handlers: []}), onKeyRelease: ({handlers: []}), onRune: ({handlers: []}), onMousePress: ({handlers: []}), onMouseRelease: ({handlers: []}), onMouseMove: ({handlers: []}), onScroll: ({handlers: []}), onCloseRequested: ({handlers: []}), onDropFile: ({handlers: []}), layoutOptions: ({getTextBounds: null})});
    result_536870932 = r_536870934;
    break BeforeRet;
  };

  return result_536870932;

}

function subscribe_1291851158(event_1291851160, callback_1291851162) {
  var result_1291851163 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851163 = nimCopy(result_1291851163, newId_2046820597(), NTI2046820355);
    event_1291851160.handlers.push({Field0: nimCopy(null, result_1291851163, NTI2046820355), Field1: callback_1291851162});;

  return result_1291851163;

}

function anyInProgress_2113930737(handlers_2113930738) {
  var result_2113930739 = false;

  BeforeRet: {
    Label1: {
      var h_2113930753 = null;
      var i_536871016 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871016 < (handlers_2113930738).length)) break Label3;
            h_2113930753 = handlers_2113930738[chckIndx(i_536871016, 0, (handlers_2113930738).length - 1)];
            if (!((h_2113930753.state.current == 0))) {
            result_2113930739 = true;
            break BeforeRet;
            }
            
            i_536871016 = addInt(i_536871016, 1);
          }
      };
    };
    result_2113930739 = false;
    break BeforeRet;
  };

  return result_2113930739;

}

function step_2013266020(dfa_2013266021, state_2013266022, currentInput_2013266023, mods_2013266024) {
    var Temporary1;

  var result_2013266025 = ({current: 0, persistent: 0});

  BeforeRet: {
    if ((currentInput_2013266023 == 0)) {
    log_1174405220(logger_704643272[0], 5, [[73,110,112,117,116,32,48,32,105,115,32,105,110,118,97,108,105,100]]);
    break BeforeRet;
    }
    
    if (!(contains_2013266068(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    if (!(contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    result_2013266025.current = (Temporary1 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024), Temporary1)[0][Temporary1[1]];
    if (dfa_2013266021.states[chckIndx(result_2013266025.current, 0, (dfa_2013266021.states).length - 1)].persistent) {
    result_2013266025.persistent = result_2013266025.current;
    }
    else {
      result_2013266025.persistent = state_2013266022.persistent;
    }
    
  };

  return result_2013266025;

}

function dfa_2113929567(handler_2113929568) {
  var result_2113929569 = null;

  BeforeRet: {
    if ((handler_2113929568.revision < handler_2113929568.config.revision)) {
    handler_2113929568.dfaInternal = buildDFA_2113929279(handler_2113929568.config);
    handler_2113929568.revision = handler_2113929568.config.revision;
    }
    
    result_2113929569 = handler_2113929568.dfaInternal;
    break BeforeRet;
  };

  return result_2113929569;

}

function HEX24_788529796(rune_788529797) {
  var result_788529798 = [];

    result_788529798 = nimCopy(null, nuctoUTF8(rune_788529797), NTI33554449);

  return result_788529798;

}

function inputAsString_2013267079(input_2013267080) {
    var Temporary1;

  var result_2013267081 = [];

    if (    input_2013267080 == -1    ){      Temporary1 = [69,78,84,69,82];
      }
    else if (    input_2013267080 == -2    ){      Temporary1 = [69,83,67,65,80,69];
      }
    else if (    input_2013267080 == -3    ){      Temporary1 = [66,65,67,75,83,80,65,67,69];
      }
    else if (    input_2013267080 == -4    ){      Temporary1 = [83,80,65,67,69];
      }
    else if (    input_2013267080 == -5    ){      Temporary1 = [68,69,76,69,84,69];
      }
    else if (    input_2013267080 == -6    ){      Temporary1 = [84,65,66];
      }
    else if (    input_2013267080 == -7    ){      Temporary1 = [76,69,70,84];
      }
    else if (    input_2013267080 == -8    ){      Temporary1 = [82,73,71,72,84];
      }
    else if (    input_2013267080 == -9    ){      Temporary1 = [85,80];
      }
    else if (    input_2013267080 == -10    ){      Temporary1 = [68,79,87,78];
      }
    else if (    input_2013267080 == -11    ){      Temporary1 = [72,79,77,69];
      }
    else if (    input_2013267080 == -12    ){      Temporary1 = [69,78,68];
      }
    else if (    input_2013267080 == -13    ){      Temporary1 = [80,65,71,69,95,85,80];
      }
    else if (    input_2013267080 == -14    ){      Temporary1 = [80,65,71,69,95,68,79,87,78];
      }
    else if (    input_2013267080 == -20    ){      Temporary1 = [70,49];
      }
    else if (    input_2013267080 == -21    ){      Temporary1 = [70,50];
      }
    else if (    input_2013267080 == -22    ){      Temporary1 = [70,51];
      }
    else if (    input_2013267080 == -23    ){      Temporary1 = [70,52];
      }
    else if (    input_2013267080 == -24    ){      Temporary1 = [70,53];
      }
    else if (    input_2013267080 == -25    ){      Temporary1 = [70,54];
      }
    else if (    input_2013267080 == -26    ){      Temporary1 = [70,55];
      }
    else if (    input_2013267080 == -27    ){      Temporary1 = [70,56];
      }
    else if (    input_2013267080 == -28    ){      Temporary1 = [70,57];
      }
    else if (    input_2013267080 == -29    ){      Temporary1 = [70,49,48];
      }
    else if (    input_2013267080 == -30    ){      Temporary1 = [70,49,49];
      }
    else if (    input_2013267080 == -31    ){      Temporary1 = [70,49,50];
      }
    else{
      Temporary1 = ([60] || []).concat(HEX24_369098763(input_2013267080) || [],[62] || []);
      }
    result_2013267081 = nimCopy(null, Temporary1, NTI33554449);

  return result_2013267081;

}

function inputToString_2013267082(input_2013267083, modifiers_2013267084) {
  var result_2013267085 = [];

    if ((!(SetEq(modifiers_2013267084, ConstSet275)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [60]);;
    }
    
    if ((modifiers_2013267084[0] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [67]);;
    }
    
    if ((modifiers_2013267084[1] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [83]);;
    }
    
    if ((modifiers_2013267084[2] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [65]);;
    }
    
    if ((modifiers_2013267084[3] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [77]);;
    }
    
    if (!(SetEq(modifiers_2013267084, ConstSet276))) {
    result_2013267085.push.apply(result_2013267085, [45]);;
    }
    
    if (((0 < input_2013267083) && (input_2013267083 <= 2147483647))) {
    var ch_2013267114 = chckRange(input_2013267083, -2147483648, 2147483647);
    result_2013267085.push.apply(result_2013267085, HEX24_788529796(ch_2013267114));;
    }
    else {
    result_2013267085.push.apply(result_2013267085, inputAsString_2013267079(input_2013267083));;
    }
    
    if ((!(SetEq(modifiers_2013267084, ConstSet277)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [62]);;
    }
    

  return result_2013267085;

}

function isTerminal_2013267067(dfa_2013267068, state_2013267069) {
  var result_2013267070 = false;

  BeforeRet: {
    result_2013267070 = dfa_2013267068.states[chckIndx(state_2013267069, 0, (dfa_2013267068.states).length - 1)].isTerminal;
    break BeforeRet;
  };

  return result_2013267070;

}

function getAction_2013267075(dfa_2013267076, state_2013267077) {
  var result_2013267078 = [];

  BeforeRet: {
    result_2013267078 = nimCopy(null, dfa_2013267076.states[chckIndx(state_2013267077, 0, (dfa_2013267076.states).length - 1)].function, NTI33554449);
    break BeforeRet;
  };

  return result_2013267078;

}

function getDefaultState_2013267071(dfa_2013267072, state_2013267073) {
  var result_2013267074 = 0;

  BeforeRet: {
    result_2013267074 = dfa_2013267072.states[chckIndx(state_2013267073, 0, (dfa_2013267072.states).length - 1)].nextState;
    break BeforeRet;
  };

  return result_2013267074;

}

function handleEvent_2113930703(handler_2113930704, handler_2113930704_Idx, input_2113930705, modifiers_2113930706, handleUnknownAsInput_2113930707) {
  var result_2113930708 = 0;

  BeforeRet: {
    if (!((input_2113930705 == 0))) {
    var prevState_2113930709 = nimCopy(null, handler_2113930704[handler_2113930704_Idx].state, NTI2013265955);
    handler_2113930704[handler_2113930704_Idx].state = nimCopy(handler_2113930704[handler_2113930704_Idx].state, step_2013266020(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state, input_2113930705, modifiers_2113930706), NTI2013265955);
    if ((handler_2113930704[handler_2113930704_Idx].state.current == 0)) {
    if ((prevState_2113930709.current == 0)) {
    if ((((handleUnknownAsInput_2113930707 && (0 < input_2113930705)) && SetEq(SetPlus(modifiers_2113930706, ConstSet273), ConstSet274)) && !((handler_2113930704[handler_2113930704_Idx].handleInput == null)))) {
    result_2113930708 = handler_2113930704[handler_2113930704_Idx].handleInput(inputToString_2013267082(input_2113930705, ConstSet278));
    break BeforeRet;
    }
    
    result_2113930708 = 1;
    break BeforeRet;
    }
    else {
      result_2113930708 = 2;
      break BeforeRet;
    }
    
    }
    else {
    if (isTerminal_2013267067(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current)) {
    var colontmp__536871018 = parseAction_2113930650(getAction_2013267075(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current));
    var action_2113930722 = nimCopy(null, colontmp__536871018["Field0"], NTI33554449);
    var arg_2113930723 = nimCopy(null, colontmp__536871018["Field1"], NTI33554449);
    handler_2113930704[handler_2113930704_Idx].state.current = getDefaultState_2013267071(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current);
    result_2113930708 = handler_2113930704[handler_2113930704_Idx].handleAction(action_2113930722, arg_2113930723);
    break BeforeRet;
    }
    else {
      result_2113930708 = 4;
      break BeforeRet;
    }
    }
    }
    else {
      result_2113930708 = 0;
      break BeforeRet;
    }
    
  };

  return result_2113930708;

}

function reset_2113930643(handler_2113930644, handler_2113930644_Idx) {
    handler_2113930644[handler_2113930644_Idx].state = nimCopy(handler_2113930644[handler_2113930644_Idx].state, ({current: 0, persistent: 0}), NTI2013265955);

  
}

function handleEvent_2113930763(handlers_2113930764, input_2113930765, modifiers_2113930766) {
            var Temporary4;

  var result_2113930767 = false;

    var anyInProgress_2113930768 = anyInProgress_2113930737(handlers_2113930764);
    var allowHandlingUnknownAsInput_2113930769 = true;
    Label1: {
      var i_2113930778 = 0;
      var colontmp__536871011 = 0;
      colontmp__536871011 = (handlers_2113930764).length;
      var i_536871012 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871012 < colontmp__536871011)) break Label3;
            i_2113930778 = i_536871012;
            var handlerIndex_2113930782 = subInt(subInt((handlers_2113930764).length, i_2113930778), 1);
            var handler_2113930783 = [handlers_2113930764[chckIndx(handlerIndex_2113930782, 0, (handlers_2113930764).length - 1)]];
            if (((anyInProgress_2113930768 && !((handler_2113930783[0].state.current == 0))) || (!(anyInProgress_2113930768) && (handler_2113930783[0].state.current == 0)))) {
            Temporary4 = handleEvent_2113930703(handler_2113930783, 0, input_2113930765, modifiers_2113930766, allowHandlingUnknownAsInput_2113930769);
            }
            else {
            Temporary4 = 1;
            }
            
            var response_2113930784 = Temporary4;
            if (!((response_2113930784 == 1))) {
            result_2113930767 = true;
            }
            
            switch (response_2113930784) {
            case 3:
              allowHandlingUnknownAsInput_2113930769 = false;
              Label5: {
                var k_2113930831 = 0;
                var h_2113930832 = null;
                var i_536871008 = 0;
                var L_536871009 = (handlers_2113930764).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536871008 < L_536871009)) break Label7;
                      k_2113930831 = i_536871008;
                      h_2113930832 = handlers_2113930764[chckIndx(i_536871008, 0, (handlers_2113930764).length - 1)];
                      if (!((k_2113930831 == handlerIndex_2113930782))) {
                      var h_2113930833 = [h_2113930832];
                      reset_2113930643(h_2113930833, 0);
                      }
                      
                      i_536871008 = addInt(i_536871008, 1);
                      if (!(((handlers_2113930764).length == L_536871009))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              break Label1;
              break;
            case 4:
              allowHandlingUnknownAsInput_2113930769 = false;
              break;
            case 0:
            case 2:
            case 1:
              break;
            }
            if (handler_2113930783[0].config.consumeAllInput) {
            break Label1;
            }
            
            i_536871012 = addInt(i_536871012, 1);
          }
      };
    };

  return result_2113930767;

}

function add_2969575667(x_2969575669, x_2969575669_Idx, y_2969575670) {
    var Temporary1;

    var xl_2969575674 = (x_2969575669[x_2969575669_Idx]).length;
    if (x_2969575669[x_2969575669_Idx].length < (Temporary1 = chckRange(addInt(xl_2969575674, (y_2969575670).length), 0, 2147483647), Temporary1)) { for (var i = x_2969575669[x_2969575669_Idx].length ; i < Temporary1 ; ++i) x_2969575669[x_2969575669_Idx].push(null); }
               else { x_2969575669[x_2969575669_Idx].length = Temporary1; };
    Label2: {
      var i_2969575689 = 0;
      var colontmp__536871020 = 0;
      colontmp__536871020 = (y_2969575670).length - 1;
      var res_536871021 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871021 <= colontmp__536871020)) break Label4;
            i_2969575689 = res_536871021;
            x_2969575669[x_2969575669_Idx][chckIndx(addInt(xl_2969575674, i_2969575689), 0, (x_2969575669[x_2969575669_Idx]).length - 1)] = y_2969575670[chckIndx(i_2969575689, 0, (y_2969575670).length - 1)];
            res_536871021 = addInt(res_536871021, 1);
          }
      };
    };

  
}

function currentEventHandlers_1291859313(self_1291859314) {
  var result_1291859315 = [[]];

    result_1291859315[0] = nimCopy(null, [self_1291859314.eventHandler], NTI2466250766);
    var modeOnTop_1291859329 = getOption_2818583613(self_1291859314, getContextWithMode_1291859260(self_1291859314, [101,100,105,116,111,114,46,99,117,115,116,111,109,45,109,111,100,101,45,111,110,45,116,111,112]), true);
    if ((!((self_1291859314.modeEventHandler == null)) && !(modeOnTop_1291859329))) {
    result_1291859315[0].push(self_1291859314.modeEventHandler);;
    }
    
    if (self_1291859314.commandLineMode) {
    add_2969575667(result_1291859315, 0, getEventHandlers_2415919261(getCommandLineTextEditor_1291851060(self_1291859314)));
    result_1291859315[0].push(self_1291859314.commandLineEventHandler);;
    }
    else {
    if ((0 < (self_1291859314.popups).length)) {
    add_2969575667(result_1291859315, 0, getEventHandlers_2483028027(self_1291859314.popups[chckIndx((self_1291859314.popups).length - 1, 0, (self_1291859314.popups).length - 1)]));
    }
    else {
    if (((0 <= self_1291859314.currentView) && (self_1291859314.currentView < (self_1291859314.views).length))) {
    add_2969575667(result_1291859315, 0, getEventHandlers_2415919261(self_1291859314.views[chckIndx(self_1291859314.currentView, 0, (self_1291859314.views).length - 1)].editor));
    }
    }}
    if ((!((self_1291859314.modeEventHandler == null)) && modeOnTop_1291859329)) {
    result_1291859315[0].push(self_1291859314.modeEventHandler);;
    }
    

  return result_1291859315[0];

}

function handleKeyPress_1291851063(self_1291851064, input_1291851065, modifiers_1291851066) {
    if (handleEvent_2113930763(currentEventHandlers_1291859313(self_1291851064), input_1291851065, modifiers_1291851066)) {
    preventDefault_2768240809(self_1291851064.platform);
    }
    

  
}

function handleKeyRelease_1291851067(self_1291851068, input_1291851069, modifiers_1291851070) {
  
}

function handleRune_1291851071(self_1291851072, input_1291851073, modifiers_1291851074) {
    var Temporary1;
      var Temporary2;

      if (!isAscii_2013266003(input_1291851073)) Temporary2 = false; else {        Temporary2 = nsuIsAlphaNumericChar(chckRange(input_1291851073, 0, 255));      }    if (Temporary2) {
    Temporary1 = modifiers_1291851074;
    }
    else {
    Temporary1 = ConstSet279;
    }
    
    var modifiers_1291859530 = nimCopy(null, Temporary1, NTI2013265950);
    if (handleEvent_2113930763(currentEventHandlers_1291859313(self_1291851072), input_1291851073, modifiers_1291859530)) {
    preventDefault_2768240809(self_1291851072.platform);
    }
    

  
}

function subscribe_1291851328(event_1291851330, callback_1291851332) {
  var result_1291851333 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851333 = nimCopy(result_1291851333, newId_2046820597(), NTI2046820355);
    event_1291851330.handlers.push({Field0: nimCopy(null, result_1291851333, NTI2046820355), Field1: callback_1291851332});;

  return result_1291851333;

}

function contains_2130706614(a_2130706615, b_2130706616) {
  var result_2130706617 = false;

  BeforeRet: {
    result_2130706617 = ((((a_2130706615.x <= b_2130706616.x) && (b_2130706616.x <= (a_2130706615.x + a_2130706615.w))) && (a_2130706615.y <= b_2130706616.y)) && (b_2130706616.y <= (a_2130706615.y + a_2130706615.h)));
    break BeforeRet;
  };

  return result_2130706617;

}

function handleMousePress_1291851075(self_1291851076, button_1291851077, modifiers_1291851078, mousePosWindow_1291851079) {
  BeforeRet: {
    Label1: {
      var i_1291859384 = 0;
      var colontmp__536871024 = 0;
      colontmp__536871024 = (self_1291851076.popups).length - 1;
      var res_536871025 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871025 <= colontmp__536871024)) break Label3;
            i_1291859384 = res_536871025;
            var popup_1291859388 = self_1291851076.popups[chckIndx(subInt((self_1291851076.popups).length - 1, i_1291859384), 0, (self_1291851076.popups).length - 1)];
            if (contains_2130706614(popup_1291859388.lastBounds, mousePosWindow_1291851079)) {
            handleMousePress_2483028038(popup_1291859388, button_1291851077, mousePosWindow_1291851079);
            break BeforeRet;
            }
            
            res_536871025 = addInt(res_536871025, 1);
          }
      };
    };
    var rects_1291859392 = layoutViews_1291848236(self_1291851076.layout, self_1291851076.layout_props, self_1291851076.lastBounds, (self_1291851076.views).length);
    Label4: {
      var i_1291859425 = 0;
      var view_1291859426 = null;
      var i_536871029 = 0;
      var L_536871030 = (self_1291851076.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871029 < L_536871030)) break Label6;
            i_1291859425 = i_536871029;
            view_1291859426 = self_1291851076.views[chckIndx(i_536871029, 0, (self_1291851076.views).length - 1)];
            if (((rects_1291859392).length <= i_1291859425)) {
            break BeforeRet;
            }
            
            if (contains_2130706614(rects_1291859392[chckIndx(i_1291859425, 0, (rects_1291859392).length - 1)], mousePosWindow_1291851079)) {
            self_1291851076.currentView = i_1291859425;
            handleMousePress_2415919278(view_1291859426.editor, button_1291851077, mousePosWindow_1291851079);
            break BeforeRet;
            }
            
            i_536871029 = addInt(i_536871029, 1);
            if (!(((self_1291851076.views).length == L_536871030))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function handleMouseRelease_1291851080(self_1291851081, button_1291851082, modifiers_1291851083, mousePosWindow_1291851084) {
  BeforeRet: {
    Label1: {
      var i_1291859443 = 0;
      var colontmp__536871033 = 0;
      colontmp__536871033 = (self_1291851081.popups).length - 1;
      var res_536871034 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871034 <= colontmp__536871033)) break Label3;
            i_1291859443 = res_536871034;
            var popup_1291859447 = self_1291851081.popups[chckIndx(subInt((self_1291851081.popups).length - 1, i_1291859443), 0, (self_1291851081.popups).length - 1)];
            if (contains_2130706614(popup_1291859447.lastBounds, mousePosWindow_1291851084)) {
            handleMouseRelease_2483028043(popup_1291859447, button_1291851082, mousePosWindow_1291851084);
            break BeforeRet;
            }
            
            res_536871034 = addInt(res_536871034, 1);
          }
      };
    };
    var rects_1291859451 = layoutViews_1291848236(self_1291851081.layout, self_1291851081.layout_props, self_1291851081.lastBounds, (self_1291851081.views).length);
    Label4: {
      var i_1291859457 = 0;
      var view_1291859458 = null;
      var i_536871037 = 0;
      var L_536871038 = (self_1291851081.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871037 < L_536871038)) break Label6;
            i_1291859457 = i_536871037;
            view_1291859458 = self_1291851081.views[chckIndx(i_536871037, 0, (self_1291851081.views).length - 1)];
            if (((rects_1291859451).length <= i_1291859457)) {
            break BeforeRet;
            }
            
            if (((self_1291851081.currentView == i_1291859457) && contains_2130706614(rects_1291859451[chckIndx(i_1291859457, 0, (rects_1291859451).length - 1)], mousePosWindow_1291851084))) {
            handleMouseRelease_2415919283(view_1291859458.editor, button_1291851082, mousePosWindow_1291851084);
            break BeforeRet;
            }
            
            i_536871037 = addInt(i_536871037, 1);
            if (!(((self_1291851081.views).length == L_536871038))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851449(event_1291851451, callback_1291851453) {
  var result_1291851454 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851454 = nimCopy(result_1291851454, newId_2046820597(), NTI2046820355);
    event_1291851451.handlers.push({Field0: nimCopy(null, result_1291851454, NTI2046820355), Field1: callback_1291851453});;

  return result_1291851454;

}

function handleMouseMove_1291851085(self_1291851086, mousePosWindow_1291851087, mousePosDelta_1291851088, modifiers_1291851089, buttons_1291851090) {
  BeforeRet: {
    Label1: {
      var i_1291859475 = 0;
      var colontmp__536871041 = 0;
      colontmp__536871041 = (self_1291851086.popups).length - 1;
      var res_536871042 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871042 <= colontmp__536871041)) break Label3;
            i_1291859475 = res_536871042;
            var popup_1291859479 = self_1291851086.popups[chckIndx(subInt((self_1291851086.popups).length - 1, i_1291859475), 0, (self_1291851086.popups).length - 1)];
            if (contains_2130706614(popup_1291859479.lastBounds, mousePosWindow_1291851087)) {
            handleMouseMove_2483028050(popup_1291859479, mousePosWindow_1291851087, mousePosDelta_1291851088, modifiers_1291851089, buttons_1291851090);
            break BeforeRet;
            }
            
            res_536871042 = addInt(res_536871042, 1);
          }
      };
    };
    var rects_1291859483 = layoutViews_1291848236(self_1291851086.layout, self_1291851086.layout_props, self_1291851086.lastBounds, (self_1291851086.views).length);
    Label4: {
      var i_1291859489 = 0;
      var view_1291859490 = null;
      var i_536871045 = 0;
      var L_536871046 = (self_1291851086.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871045 < L_536871046)) break Label6;
            i_1291859489 = i_536871045;
            view_1291859490 = self_1291851086.views[chckIndx(i_536871045, 0, (self_1291851086.views).length - 1)];
            if (((rects_1291859483).length <= i_1291859489)) {
            break BeforeRet;
            }
            
            if (((self_1291851086.currentView == i_1291859489) && contains_2130706614(rects_1291859483[chckIndx(i_1291859489, 0, (rects_1291859483).length - 1)], mousePosWindow_1291851087))) {
            handleMouseMove_2415919290(view_1291859490.editor, mousePosWindow_1291851087, mousePosDelta_1291851088, modifiers_1291851089, buttons_1291851090);
            break BeforeRet;
            }
            
            i_536871045 = addInt(i_536871045, 1);
            if (!(((self_1291851086.views).length == L_536871046))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851521(event_1291851523, callback_1291851525) {
  var result_1291851526 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851526 = nimCopy(result_1291851526, newId_2046820597(), NTI2046820355);
    event_1291851523.handlers.push({Field0: nimCopy(null, result_1291851526, NTI2046820355), Field1: callback_1291851525});;

  return result_1291851526;

}

function handleScroll_1291851091(self_1291851092, scroll_1291851093, mousePosWindow_1291851094, modifiers_1291851095) {
  BeforeRet: {
    Label1: {
      var i_1291859506 = 0;
      var colontmp__536871049 = 0;
      colontmp__536871049 = (self_1291851092.popups).length - 1;
      var res_536871050 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871050 <= colontmp__536871049)) break Label3;
            i_1291859506 = res_536871050;
            var popup_1291859510 = self_1291851092.popups[chckIndx(subInt((self_1291851092.popups).length - 1, i_1291859506), 0, (self_1291851092.popups).length - 1)];
            if (contains_2130706614(popup_1291859510.lastBounds, mousePosWindow_1291851094)) {
            handleScroll_2483028033(popup_1291859510, scroll_1291851093, mousePosWindow_1291851094);
            break BeforeRet;
            }
            
            res_536871050 = addInt(res_536871050, 1);
          }
      };
    };
    Label4: {
      var i_1291859516 = 0;
      var view_1291859517 = null;
      var i_536871053 = 0;
      var L_536871054 = (self_1291851092.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871053 < L_536871054)) break Label6;
            i_1291859516 = i_536871053;
            view_1291859517 = self_1291851092.views[chckIndx(i_536871053, 0, (self_1291851092.views).length - 1)];
            if (contains_2130706614(view_1291859517.editor.lastContentBounds, mousePosWindow_1291851094)) {
            handleScroll_2415919273(view_1291859517.editor, scroll_1291851093, mousePosWindow_1291851094);
            break BeforeRet;
            }
            
            i_536871053 = addInt(i_536871053, 1);
            if (!(((self_1291851092.views).length == L_536871054))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851593(event_1291851595, callback_1291851597) {
  var result_1291851598 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851598 = nimCopy(result_1291851598, newId_2046820597(), NTI2046820355);
    event_1291851595.handlers.push({Field0: nimCopy(null, result_1291851598, NTI2046820355), Field1: callback_1291851597});;

  return result_1291851598;

}

function handleDropFile_1291851096(self_1291851097, path_1291851098, content_1291851099) {
    createView_1291848958(self_1291851097, newTextDocument_2818579086(path_1291851098, content_1291851099, false));

  
}

function subscribe_1291851665(event_1291851667, callback_1291851669) {
  var result_1291851670 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851670 = nimCopy(result_1291851670, newId_2046820597(), NTI2046820355);
    event_1291851667.handlers.push({Field0: nimCopy(null, result_1291851670, NTI2046820355), Field1: callback_1291851669});;

  return result_1291851670;

}

function initTable_1291851680(initialSize_1291851683) {
  var result_1291851684 = ({data: [], counter: 0});

    var correctSizeHEX60gensym59_1291851686 = slotsNeeded_1308622891(chckRange(initialSize_1291851683, 0, 2147483647));
    result_1291851684.counter = 0;
    result_1291851684.data = new Array(chckRange(correctSizeHEX60gensym59_1291851686, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_1291851686, 0, 2147483647) ; ++i) { result_1291851684.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }
  return result_1291851684;

}

function HEX5BHEX5DHEX3D_1291851749(t_1291851752, key_1291851753, val_1291851754) {
    if (((t_1291851752.data).length == 0)) {
    var correctSizeHEX60gensym62_1291851803 = slotsNeeded_1308622891(32);
    t_1291851752.counter = 0;
    t_1291851752.data = new Array(chckRange(correctSizeHEX60gensym62_1291851803, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym62_1291851803, 0, 2147483647) ; ++i) { t_1291851752.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291851808 = [0];
    var index_1291851815 = rawGet_1291848320(t_1291851752, key_1291851753, hc_1291851808, 0);
    if ((0 <= index_1291851815)) {
    t_1291851752.data[chckIndx(index_1291851815, 0, (t_1291851752.data).length - 1)].Field2 = val_1291851754;
    }
    else {
      if (((t_1291851752.data).length == 0)) {
      var correctSizeHEX60gensym65_1291851917 = slotsNeeded_1308622891(32);
      t_1291851752.counter = 0;
      t_1291851752.data = new Array(chckRange(correctSizeHEX60gensym65_1291851917, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym65_1291851917, 0, 2147483647) ; ++i) { t_1291851752.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }      }
      
      if (mustRehash_1291851922(t_1291851752)) {
      enlarge_1291852077(t_1291851752);
      index_1291851815 = rawGetKnownHC_1291852549(t_1291851752, key_1291851753, hc_1291851808[0]);
      }
      
      index_1291851815 = subInt(-1, index_1291851815);
      rawInsert_1291852371(t_1291851752, t_1291851752, "data", key_1291851753, val_1291851754, hc_1291851808[0], index_1291851815);
      t_1291851752.counter = addInt(t_1291851752.counter, 1);
    }
    

  
}

function toTable_1291851675(pairs_1291851678) {
  var result_1291851679 = [({data: [], counter: 0})];

    result_1291851679[0] = nimCopy(result_1291851679[0], initTable_1291851680((pairs_1291851678).length), NTI1291845654);
    Label1: {
      var key_1291851707 = [];
      var val_1291851708 = 0.0;
      var i_536871058 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871058 < (pairs_1291851678).length)) break Label3;
            key_1291851707 = pairs_1291851678[chckIndx(i_536871058, 0, (pairs_1291851678).length - 1)]["Field0"];
            val_1291851708 = pairs_1291851678[chckIndx(i_536871058, 0, (pairs_1291851678).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1291851749(result_1291851679[0], key_1291851707, val_1291851708);
            i_536871058 = addInt(i_536871058, 1);
          }
      };
    };

  return result_1291851679[0];

}

function rawGet_2516583429(t_2516583432, key_2516583433, hc_2516583434, hc_2516583434_Idx) {
  var result_2516583435 = 0;

  BeforeRet: {
    hc_2516583434[hc_2516583434_Idx] = hash_1325400491(key_2516583433);
    if ((hc_2516583434[hc_2516583434_Idx] == 0)) {
    hc_2516583434[hc_2516583434_Idx] = 314159265;
    }
    
    if (((t_2516583432.data).length == 0)) {
    result_2516583435 = -1;
    break BeforeRet;
    }
    
    var h_2516583486 = (hc_2516583434[hc_2516583434_Idx] & (t_2516583432.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field0)) break Label2;
          if (((t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field0 == hc_2516583434[hc_2516583434_Idx]) && eqStrings(t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field1, key_2516583433))) {
          result_2516583435 = h_2516583486;
          break BeforeRet;
          }
          
          h_2516583486 = nextTry_1308622883(h_2516583486, (t_2516583432.data).length - 1);
        }
    };
    result_2516583435 = subInt(-1, h_2516583486);
  };

  return result_2516583435;

}

function mustRehash_2516583774(t_2516583776) {
  var result_2516583777 = false;

    if (!((t_2516583776.counter < (t_2516583776.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2516583777 = ((mulInt((t_2516583776.data).length, 2) < mulInt(t_2516583776.counter, 3)) || (subInt((t_2516583776.data).length, t_2516583776.counter) < 4));

  return result_2516583777;

}

function rawInsert_2516584223(t_2516584227, data_2516584228, data_2516584228_Idx, key_2516584229, val_2516584230, hc_2516584231, h_2516584232) {
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field1 = nimCopy(null, key_2516584229, NTI33554449);
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field2 = nimCopy(data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field2, val_2516584230, NTI2550136835);
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field0 = hc_2516584231;

  
}

function enlarge_2516583929(t_2516583932) {
    var n_2516583935 = [];
    n_2516583935 = new Array(chckRange(mulInt((t_2516583932.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2516583932.data).length, 2), 0, 2147483647) ; ++i) { n_2516583935[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    var Temporary1 = t_2516583932.data; t_2516583932.data = n_2516583935; n_2516583935 = Temporary1;    Label2: {
      var i_2516583999 = 0;
      var colontmp__536871063 = 0;
      colontmp__536871063 = (n_2516583935).length - 1;
      var res_536871064 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871064 <= colontmp__536871063)) break Label4;
            i_2516583999 = res_536871064;
            var eh_2516584053 = n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field0;
            if (isFilled_1308622880(eh_2516584053)) {
            var j_2516584057 = (eh_2516584053 & (t_2516583932.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2516583932.data[chckIndx(j_2516584057, 0, (t_2516583932.data).length - 1)].Field0)) break Label6;
                  j_2516584057 = nextTry_1308622883(j_2516584057, (t_2516583932.data).length - 1);
                }
            };
            rawInsert_2516584223(t_2516583932, t_2516583932, "data", n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field1, n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field2, eh_2516584053, j_2516584057);
            }
            
            res_536871064 = addInt(res_536871064, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2516584392(t_2516584395, key_2516584396, hc_2516584397) {
  var result_2516584398 = 0;

  BeforeRet: {
    if (((t_2516584395.data).length == 0)) {
    result_2516584398 = -1;
    break BeforeRet;
    }
    
    var h_2516584449 = (hc_2516584397 & (t_2516584395.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field0)) break Label2;
          if (((t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field0 == hc_2516584397) && eqStrings(t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field1, key_2516584396))) {
          result_2516584398 = h_2516584449;
          break BeforeRet;
          }
          
          h_2516584449 = nextTry_1308622883(h_2516584449, (t_2516584395.data).length - 1);
        }
    };
    result_2516584398 = subInt(-1, h_2516584449);
  };

  return result_2516584398;

}

function HEX5BHEX5DHEX3D_2516583368(t_2516583371, key_2516583372, val_2516583373) {
    if (((t_2516583371.data).length == 0)) {
    var correctSizeHEX60gensym23_2516583423 = slotsNeeded_1308622891(32);
    t_2516583371.counter = 0;
    t_2516583371.data = new Array(chckRange(correctSizeHEX60gensym23_2516583423, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2516583423, 0, 2147483647) ; ++i) { t_2516583371.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    }
    
    var hc_2516583428 = [0];
    var index_2516583667 = rawGet_2516583429(t_2516583371, key_2516583372, hc_2516583428, 0);
    if ((0 <= index_2516583667)) {
    t_2516583371.data[chckIndx(index_2516583667, 0, (t_2516583371.data).length - 1)].Field2 = nimCopy(t_2516583371.data[chckIndx(index_2516583667, 0, (t_2516583371.data).length - 1)].Field2, val_2516583373, NTI2550136835);
    }
    else {
      if (((t_2516583371.data).length == 0)) {
      var correctSizeHEX60gensym28_2516583769 = slotsNeeded_1308622891(32);
      t_2516583371.counter = 0;
      t_2516583371.data = new Array(chckRange(correctSizeHEX60gensym28_2516583769, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2516583769, 0, 2147483647) ; ++i) { t_2516583371.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }      }
      
      if (mustRehash_2516583774(t_2516583371)) {
      enlarge_2516583929(t_2516583371);
      index_2516583667 = rawGetKnownHC_2516584392(t_2516583371, key_2516583372, hc_2516583428[0]);
      }
      
      index_2516583667 = subInt(-1, index_2516583667);
      rawInsert_2516584223(t_2516583371, t_2516583371, "data", key_2516583372, val_2516583373, hc_2516583428[0], index_2516583667);
      t_2516583371.counter = addInt(t_2516583371.counter, 1);
    }
    

  
}

function c2n_2533359804(hex_2533359805, i_2533359806) {
  var result_2533359807 = 0;

  BeforeRet: {
    var c_2533359811 = hex_2533359805[chckIndx(i_2533359806, 0, (hex_2533359805).length - 1)];
    if (    c_2533359811 >= 48 && c_2533359811 <= 57    ){      result_2533359807 = subInt(c_2533359811, 48);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 97 && c_2533359811 <= 102    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 97);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 65 && c_2533359811 <= 70    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 65);
      break BeforeRet;
      }
    else{
      raiseException({message: [102,111,114,109,97,116,32,105,115,32,110,111,116,32,104,101,120], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
      }
  };

  return result_2533359807;

}

function parseHex_2533359858(hex_2533359859) {
  var result_2533359860 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359859).length == 6))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,57,57,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,54,96,32]);
    }
    
    result_2533359860.r = (addInt(mulInt(c2n_2533359804(hex_2533359859, 0), 16), c2n_2533359804(hex_2533359859, 1)) / 255.0);
    result_2533359860.g = (addInt(mulInt(c2n_2533359804(hex_2533359859, 2), 16), c2n_2533359804(hex_2533359859, 3)) / 255.0);
    result_2533359860.b = (addInt(mulInt(c2n_2533359804(hex_2533359859, 4), 16), c2n_2533359804(hex_2533359859, 5)) / 255.0);
    result_2533359860.a = 1.0;

  return result_2533359860;

}

function parseHexAlpha_2533359949(hex_2533359950) {
  var result_2533359951 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359950).length == 8))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,50,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,56,96,32]);
    }
    
    result_2533359951.r = (addInt(mulInt(c2n_2533359804(hex_2533359950, 0), 16), c2n_2533359804(hex_2533359950, 1)) / 255.0);
    result_2533359951.g = (addInt(mulInt(c2n_2533359804(hex_2533359950, 2), 16), c2n_2533359804(hex_2533359950, 3)) / 255.0);
    result_2533359951.b = (addInt(mulInt(c2n_2533359804(hex_2533359950, 4), 16), c2n_2533359804(hex_2533359950, 5)) / 255.0);
    result_2533359951.a = (addInt(mulInt(c2n_2533359804(hex_2533359950, 6), 16), c2n_2533359804(hex_2533359950, 7)) / 255.0);

  return result_2533359951;

}

function parseHtmlHexTiny_2533360059(hex_2533360060) {
  var result_2533360061 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!((hex_2533360060[chckIndx(0, 0, (hex_2533360060).length - 1)] == 35))) {
    raiseException({message: [69,120,112,101,99,116,101,100,32,39,35,39], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
    }
    
    if (!(((hex_2533360060).length == 4))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,54,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,52,96,32]);
    }
    
    result_2533360061.r = (c2n_2533359804(hex_2533360060, 1) / 15.0);
    result_2533360061.g = (c2n_2533359804(hex_2533360060, 2) / 15.0);
    result_2533360061.b = (c2n_2533359804(hex_2533360060, 3) / 15.0);
    result_2533360061.a = 1.0;

  return result_2533360061;

}

function parseHex_855639007(s_855639009, number_855639010, number_855639010_Idx, maxLen_855639011) {
    var Temporary1;

  var result_855639012 = 0;

    var i_855639013 = 0;
    var output_855639014 = 0;
    var foundDigit_855639015 = false;
    if ((maxLen_855639011 == 0)) {
    Temporary1 = (s_855639009).length;
    }
    else {
    Temporary1 = addInt(i_855639013, maxLen_855639011);
    }
    
    var last_855639022 = nimMin((s_855639009).length, Temporary1);
    if ((((addInt(i_855639013, 1) < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 48)) && (ConstSet280[s_855639009[chckIndx(addInt(i_855639013, 1), 0, (s_855639009).length - 1)]] != undefined))) {
    i_855639013 = addInt(i_855639013, 2);
    }
    else {
    if (((i_855639013 < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 35))) {
    i_855639013 = addInt(i_855639013, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_855639013 < last_855639022)) break Label3;
          switch (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_855639014 = ((output_855639014 << 4) | subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 48));
            foundDigit_855639015 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 97), 10));
            foundDigit_855639015 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 65), 10));
            foundDigit_855639015 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_855639013 = addInt(i_855639013, 1);
        }
    };
    if (foundDigit_855639015) {
    number_855639010[number_855639010_Idx] = output_855639014;
    result_855639012 = i_855639013;
    }
    

  return result_855639012;

}

function parseHex_855639000(s_855639002, number_855639003, number_855639003_Idx, start_855639004, maxLen_855639005) {
  var result_855639006 = 0;

    result_855639006 = parseHex_855639007((s_855639002.slice(start_855639004, (s_855639002).length - 1 + 1)), number_855639003, number_855639003_Idx, maxLen_855639005);

  return result_855639006;

}

function nsuParseHexInt(s_855638998) {
  var result_855638999 = [0];

    result_855638999[0] = 0;
    var L_855639072 = parseHex_855639000(s_855638998, result_855638999, 0, 0, 0);
    if ((!((L_855639072 == (s_855638998).length)) || (L_855639072 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638998 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638999[0];

}

function HEX5BHEX5D_2533359898(s_2533359901, x_2533359902) {
  var result_2533359903 = [];

    var a_2533359905 = subInt((s_2533359901).length, x_2533359902.a);
    var L_2533359907 = addInt(subInt(subInt((s_2533359901).length, x_2533359902.b), a_2533359905), 1);
    result_2533359903 = nimCopy(null, mnewString(chckRange(L_2533359907, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_2533359912 = 0;
      var i_536871069 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871069 < L_2533359907)) break Label3;
            i_2533359912 = i_536871069;
            result_2533359903[chckIndx(i_2533359912, 0, (result_2533359903).length - 1)] = s_2533359901[chckIndx(addInt(i_2533359912, a_2533359905), 0, (s_2533359901).length - 1)];
            i_536871069 = addInt(i_536871069, 1);
          }
      };
    };

  return result_2533359903;

}

function HEX2EHEX2E_2533359871(a_2533359874, b_2533359875) {
  var result_2533359878 = ({a: 0, b: 0});

    result_2533359878 = nimCopy(result_2533359878, {a: a_2533359874, b: b_2533359875}, NTI2533359773);

  return result_2533359878;

}

function parseHexVar_2516582448(text_2516582449) {
    var Temporary1;

  var result_2516582450 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (nsuStartsWith(text_2516582449, [35])) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var offset_2516582451 = Temporary1;
    if (((text_2516582449).length == addInt(6, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHex_2533359858(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(8, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHexAlpha_2533359949(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(3, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1)) || [])), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(4, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 2)) || [])), NTI2550136835);
    result_2516582450.a = (nsuParseHexInt(HEX5BHEX5D_2533359898(text_2516582449, HEX2EHEX2E_2533359871(1, 1))) / 255.0);
    break BeforeRet;
    }
    }}}
    rawEcho([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,104,101,120,32,99,111,108,111,114,32,39], text_2516582449, [39]);
    if (true) {
    failedAssertImpl_268435515([116,104,101,109,101,46,110,105,109,40,51,51,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
    result_2516582450 = nimCopy(result_2516582450, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI2550136835);
    break BeforeRet;
  };

  return result_2516582450;

}

function rawGet_2516582665(t_2516582668, key_2516582669, hc_2516582670, hc_2516582670_Idx) {
  var result_2516582671 = 0;

  BeforeRet: {
    hc_2516582670[hc_2516582670_Idx] = hash_1325400491(key_2516582669);
    if ((hc_2516582670[hc_2516582670_Idx] == 0)) {
    hc_2516582670[hc_2516582670_Idx] = 314159265;
    }
    
    if (((t_2516582668.data).length == 0)) {
    result_2516582671 = -1;
    break BeforeRet;
    }
    
    var h_2516582723 = (hc_2516582670[hc_2516582670_Idx] & (t_2516582668.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field0)) break Label2;
          if (((t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field0 == hc_2516582670[hc_2516582670_Idx]) && eqStrings(t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field1, key_2516582669))) {
          result_2516582671 = h_2516582723;
          break BeforeRet;
          }
          
          h_2516582723 = nextTry_1308622883(h_2516582723, (t_2516582668.data).length - 1);
        }
    };
    result_2516582671 = subInt(-1, h_2516582723);
  };

  return result_2516582671;

}

function mustRehash_2516584939(t_2516584941) {
  var result_2516584942 = false;

    if (!((t_2516584941.counter < (t_2516584941.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2516584942 = ((mulInt((t_2516584941.data).length, 2) < mulInt(t_2516584941.counter, 3)) || (subInt((t_2516584941.data).length, t_2516584941.counter) < 4));

  return result_2516584942;

}

function rawInsert_2516585388(t_2516585392, data_2516585393, data_2516585393_Idx, key_2516585394, val_2516585395, hc_2516585396, h_2516585397) {
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field1 = nimCopy(null, key_2516585394, NTI33554449);
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field2 = nimCopy(data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field2, val_2516585395, NTI2516582404);
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field0 = hc_2516585396;

  
}

function enlarge_2516585094(t_2516585097) {
    var n_2516585100 = [];
    n_2516585100 = new Array(chckRange(mulInt((t_2516585097.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2516585097.data).length, 2), 0, 2147483647) ; ++i) { n_2516585100[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    var Temporary1 = t_2516585097.data; t_2516585097.data = n_2516585100; n_2516585100 = Temporary1;    Label2: {
      var i_2516585164 = 0;
      var colontmp__536871074 = 0;
      colontmp__536871074 = (n_2516585100).length - 1;
      var res_536871075 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871075 <= colontmp__536871074)) break Label4;
            i_2516585164 = res_536871075;
            var eh_2516585218 = n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field0;
            if (isFilled_1308622880(eh_2516585218)) {
            var j_2516585222 = (eh_2516585218 & (t_2516585097.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2516585097.data[chckIndx(j_2516585222, 0, (t_2516585097.data).length - 1)].Field0)) break Label6;
                  j_2516585222 = nextTry_1308622883(j_2516585222, (t_2516585097.data).length - 1);
                }
            };
            rawInsert_2516585388(t_2516585097, t_2516585097, "data", n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field1, n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field2, eh_2516585218, j_2516585222);
            }
            
            res_536871075 = addInt(res_536871075, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2516585557(t_2516585560, key_2516585561, hc_2516585562) {
  var result_2516585563 = 0;

  BeforeRet: {
    if (((t_2516585560.data).length == 0)) {
    result_2516585563 = -1;
    break BeforeRet;
    }
    
    var h_2516585614 = (hc_2516585562 & (t_2516585560.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field0)) break Label2;
          if (((t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field0 == hc_2516585562) && eqStrings(t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field1, key_2516585561))) {
          result_2516585563 = h_2516585614;
          break BeforeRet;
          }
          
          h_2516585614 = nextTry_1308622883(h_2516585614, (t_2516585560.data).length - 1);
        }
    };
    result_2516585563 = subInt(-1, h_2516585614);
  };

  return result_2516585563;

}

function HEX5BHEX5DHEX3D_2516584766(t_2516584769, key_2516584770, val_2516584771) {
    if (((t_2516584769.data).length == 0)) {
    var correctSizeHEX60gensym37_2516584820 = slotsNeeded_1308622891(32);
    t_2516584769.counter = 0;
    t_2516584769.data = new Array(chckRange(correctSizeHEX60gensym37_2516584820, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2516584820, 0, 2147483647) ; ++i) { t_2516584769.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    }
    
    var hc_2516584825 = [0];
    var index_2516584832 = rawGet_2516582665(t_2516584769, key_2516584770, hc_2516584825, 0);
    if ((0 <= index_2516584832)) {
    t_2516584769.data[chckIndx(index_2516584832, 0, (t_2516584769.data).length - 1)].Field2 = nimCopy(t_2516584769.data[chckIndx(index_2516584832, 0, (t_2516584769.data).length - 1)].Field2, val_2516584771, NTI2516582404);
    }
    else {
      if (((t_2516584769.data).length == 0)) {
      var correctSizeHEX60gensym40_2516584934 = slotsNeeded_1308622891(32);
      t_2516584769.counter = 0;
      t_2516584769.data = new Array(chckRange(correctSizeHEX60gensym40_2516584934, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym40_2516584934, 0, 2147483647) ; ++i) { t_2516584769.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }      }
      
      if (mustRehash_2516584939(t_2516584769)) {
      enlarge_2516585094(t_2516584769);
      index_2516584832 = rawGetKnownHC_2516585557(t_2516584769, key_2516584770, hc_2516584825[0]);
      }
      
      index_2516584832 = subInt(-1, index_2516584832);
      rawInsert_2516585388(t_2516584769, t_2516584769, "data", key_2516584770, val_2516584771, hc_2516584825[0], index_2516584832);
      t_2516584769.counter = addInt(t_2516584769.counter, 1);
    }
    

  
}

function some_2516583251(val_2516583253) {
  var result_2516583254 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

    result_2516583254.has = true;
    result_2516583254.val = nimCopy(result_2516583254.val, val_2516583253, NTI2550136835);

  return result_2516583254;

}

function defaultTheme_2516586063() {
  var result_2516586064 = null;

    result_2516586064 = ({path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})});
    result_2516586064.name = nimCopy(null, [100,101,102,97,117,108,116], NTI33554449);
    result_2516586064.typ = nimCopy(null, [100,97,114,107], NTI33554449);
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,97,99,116,105,118,101,70,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,105,99,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,112,97,114,97,116,111,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,98,108,117,101], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,103,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,108,105,110,101,115], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,111,114,97,110,103,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,112,117,114,112,108,101], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,114,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,121,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,73,110,112,117,116,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,67,117,114,114,101,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,68,105,115,97,98,108,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,85,110,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,99,111,110,116,105,110,117,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,100,105,115,99,111,110,110,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,112,97,117,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,114,101,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,66,97,99,107,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,73,110,116,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,111,112,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,98,111,111,108,101,97,110], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,101,114,114,111,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,97,109,101], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,117,109,98,101,114], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,115,116,114,105,110,103], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,118,97,108,117,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,111,108,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,118,97,108,117,101,67,104,97,110,103,101,100,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,115,99,114,105,112,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,100,105,97,103,111,110,97,108,70,105,108,108], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,105,110,115,101,114,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,114,101,109,111,118,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,108,105,115,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,99,117,115,101,100,83,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,108,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,104,111,118,101,114,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,107,101,100,69,100,105,116,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,49], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,50], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,51], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,52], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,53], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,54], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,111,100,101,76,101,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,101,109,112,116,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,102,111,99,117,115,101,100,69,109,112,116,121,66,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,110,111,84,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,102,111,108,100,105,110,103,67,111,110,116,114,111,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,105,110,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,105,110,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,100,101,110,116,71,117,105,100,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,65,117,116,111,70,105,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,97,100,100,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,100,101,108,101,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,102,105,110,100,77,97,116,99,104,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,109,111,100,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,80,97,110,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,82,117,108,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,115,101,108,101,99,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,85,110,110,101,99,101,115,115,97,114,121,67,111,100,101,46,111,112,97,99,105,116,121], parseHexVar_2516582448([48,48,48,48,48,48,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,104,105,116,101,115,112,97,99,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,97,100,103,101,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,112,114,101,82,101,108,101,97,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,112,111,110,115,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,116,97,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,97,100,100,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,99,111,110,102,108,105,99,116,105,110,103,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,100,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,105,103,110,111,114,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,109,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,68,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,77,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,117,110,116,114,97,99,107,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,112,108,97,99,101,104,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,116,116,111,109,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,102,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,70,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,118,97,108,105,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,110,111,77,97,116,99,104,101,115,79,117,116,108,105,110,101], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,111,117,116,108,105,110,101], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,98,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,115,101,112,97,114,97,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,98,97,114,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,111,109,109,111,110,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,111,109,109,111,110,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,119,111,114,100,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,101,114,114,111,114,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([57,51,57,50,57,51,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,79,99,99,117,114,114,101,110,99,101,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([55,50,55,48,55,50,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,119,97,114,110,105,110,103,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,99,57,56,54,55,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,66,111,114,100,101,114,67,111,108,111,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,55,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,73,110,115,101,114,116,105,111,110,73,110,100,105,99,97,116,111,114], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,83,116,97,116,117,115,66,97,114,73,116,101,109,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,84,111,111,108,98,97,114,83,101,112,97,114,97,116,111,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,101,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,102,111,99,117,115,101,100,69,100,105,116,111,114,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,82,117,110,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,83,117,99,99,101,115,115,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,84,111,97,115,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,108,105,110,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,68,101,115,99,114,105,112,116,105,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,105,99,107,101,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,105,99,107,101,114,71,114,111,117,112,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,111,114,116,115,46,105,99,111,110,82,117,110,110,105,110,103,80,114,111,99,101,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,103,114,101,115,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,97,115,104,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,46,115,104,97,100,111,119], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,76,105,115,116,66,111,114,100,101,114], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,104,101,97,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,73,110,100,105,99,97,116,111,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,114,111,119,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,84,105,116,108,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,97,114,114,97,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,98,111,111,108,101,97,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,108,97,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,108,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,97,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,114,117,99,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,77,101,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,118,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,101,108,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,117,110,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,105,110,116,101,114,102,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,119,111,114,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,109,101,116,104,111,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,109,111,100,117,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,97,109,101,115,112,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,108,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,111,98,106,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,111,112,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,112,97,99,107,97,103,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,112,114,111,112,101,114,116,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,114,101,102,101,114,101,110,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,110,105,112,112,101,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,117,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,116,101,120,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,116,121,112,101,80,97,114,97,109,101,116,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,117,110,105,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,118,97,114,105,97,98,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,108,97,115,116,80,105,110,110,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,97,99,107], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,117,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,97,99,107], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,117,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,67,121,97,110], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,71,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,77,97,103,101,110,116,97], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,82,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,87,104,105,116,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,89,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,67,121,97,110], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,71,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,77,97,103,101,110,116,97], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,82,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,87,104,105,116,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,89,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,100,101,102,97,117,108,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,115,117,99,99,101,115,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,69,114,114,111,114,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,70,97,105,108,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,80,97,115,115,101,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,81,117,101,117,101,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,83,107,105,112,112,101,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,85,110,115,101,116], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,114,117,110,65,99,116,105,111,110], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,67,111,100,101,66,108,111,99,107,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,80,114,101,102,111,114,109,97,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,83,101,112,97,114,97,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,97,108,107,84,104,114,111,117,103,104,46,101,109,98,101,100,100,101,100,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,83,104,97,100,111,119], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,105,100,103,101,116,46,115,104,97,100,111,119], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516584766(result_2516586064.tokenColors, [99,111,109,109,101,110,116], {foreground: some_2516583251(parseHexVar_2516582448([55,50,55,48,55,50])), fontStyle: nimCopy(null, ConstSet281, NTI2516582423), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false})});

  return result_2516586064;

}

function setTheme_1291851003(self_1291851004, path_1291851005) {
      var Temporary1;

      var oHEX60gensym57_1291851008 = loadFromFile_2516586059(path_1291851005);
      if (!isSome_1291851013(oHEX60gensym57_1291851008)) Temporary1 = false; else {        var theme_1291851059 = get_1291851033(oHEX60gensym57_1291851008);
        Temporary1 = true;      }    if (Temporary1) {
    self_1291851004.theme = theme_1291851059;
    }
    
    requestRender_2768240746(self_1291851004.platform, false);

  
}

function symbolName_1291854218(a_1291854220) {
  var result_1291854221 = [];

    result_1291854221 = nimCopy(null, names_1291854223[chckIndx(subInt(a_1291854220, 0), 0, (names_1291854223).length - 1)], NTI33554449);

  return result_1291854221;

}

function toJson_1291854202(a_1291854204, opt_1291854205) {
    var Temporary1;

  var result_1291854206 = null;

    switch (opt_1291854205.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854204);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854218(a_1291854204), opt_1291854205);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854204, NTI2449473553), opt_1291854205);
      break;
    }
    result_1291854206 = Temporary1;

  return result_1291854206;

}

function none_1291854110() {
  var result_1291854116 = ({val: null});

  return result_1291854116;

}

function some_1291854117(val_1291854119) {
  var result_1291854120 = ({val: null});

    if (!(!((val_1291854119 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291854120.val = val_1291854119;

  return result_1291854120;

}

function getEditor_1291854101() {
  var result_1291854106 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291854106 = nimCopy(result_1291854106, none_1291854110(), NTI1291850591);
    break BeforeRet;
    }
    
    result_1291854106 = nimCopy(result_1291854106, some_1291854117(gEditor), NTI1291850591);
    break BeforeRet;
  };

  return result_1291854106;

}

function isNone_1291854155(self_1291854157) {
  var result_1291854158 = false;

    result_1291854158 = (self_1291854157.val == null);

  return result_1291854158;

}

function get_1291854175(self_1291854177) {
  var result_1291854178 = null;

    if (isNone_1291854155(self_1291854177)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291854178 = self_1291854177["val"];

  return result_1291854178;

}

function getBackendScript_1291854140_1291854148() {
  var result_1291854149 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym144_1291854150 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym144_1291854150)) {
      break BeforeRet;
      }
      
    };
    result_1291854149 = getBackend_1291854145(get_1291854175(rHEX60gensym144_1291854150));
  };

  return result_1291854149;

}

function getBackendApi_1291854200(HEX3Atmp_1291854142) {
  var result_1291854201 = null;

  BeforeRet: {
    result_1291854201 = newJNull_1627390049();
++excHandler;
    try {
    result_1291854201 = toJson_1291854202(getBackendScript_1291854140_1291854148(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym150_1291854299 = [103,101,116,66,97,99,107,101,110,100];
    var fmtRes_1291854304 = [mnewString(0)];
    fmtRes_1291854304[0].push.apply(fmtRes_1291854304[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854304, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym150_1291854299 || [],fmtRes_1291854304[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291854201;

}

function saveAppStateScript_1291854307_1291855063() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym155_1291855064 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym155_1291855064)) {
      break BeforeRet;
      }
      
    };
    saveAppState_1291853866(get_1291854175(rHEX60gensym155_1291855064));
  };

  
}

function saveAppStateApi_1291855090(HEX3Atmp_1291854309) {
  var result_1291855091 = null;

    result_1291855091 = newJNull_1627390049();
++excHandler;
    try {
    saveAppStateScript_1291854307_1291855063();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym160_1291855092 = [115,97,118,101,65,112,112,83,116,97,116,101];
    var fmtRes_1291855097 = [mnewString(0)];
    fmtRes_1291855097[0].push.apply(fmtRes_1291855097[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855097, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym160_1291855092 || [],fmtRes_1291855097[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855091;

}

function requestRenderScript_1291855172_1291855180(redrawEverything_1291855181) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym171_1291855182 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym171_1291855182)) {
      break BeforeRet;
      }
      
    };
    requestRender_1291855177(get_1291854175(rHEX60gensym171_1291855182), redrawEverything_1291855181);
  };

  
}

function initFromJson_1627395343(dst_1627395344, dst_1627395344_Idx, jsonNode_1627395345, jsonPath_1627395346, jsonPath_1627395346_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395345, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395346[jsonPath_1627395346_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet282[jsonNode_1627395345.kind] != undefined))) {
    var msgHEX60gensym103_1627395516 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet283), nimCopy(null, jsonPath_1627395346[jsonPath_1627395346_Idx], NTI33554449), reprEnum(jsonNode_1627395345.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym103_1627395516, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1627395345;
    if (ConstSet284[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_1627395344[dst_1627395344_Idx] = Temporary1.bval;

  
}

function to_2818585105(node_2818585108) {
  var result_2818585110 = [false];

    var jsonPath_2818585111 = [[]];
    result_2818585110[0] = false;
    initFromJson_1627395343(result_2818585110, 0, node_2818585108, jsonPath_2818585111, 0);

  return result_2818585110[0];

}

function fromJson_2818585094(a_2818585096, a_2818585096_Idx, b_2818585097, opt_2818585098) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818585097, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [98,111,111,108], Field1: b_2818585097}));
    }
    
    a_2818585096[a_2818585096_Idx] = to_2818585105(b_2818585097);

  
}

function jsonTo_2818585088(b_2818585090, opt_2818585092) {
  var result_2818585093 = [false];

    fromJson_2818585094(result_2818585093, 0, b_2818585090, opt_2818585092);

  return result_2818585093[0];

}

function requestRenderApi_1291855209(HEX3Atmp_1291855174) {
      var Temporary3;

  var result_1291855210 = null;

    result_1291855210 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291855174))) {
      Temporary3 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291855174, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    requestRenderScript_1291855172_1291855180(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym176_1291855216 = [114,101,113,117,101,115,116,82,101,110,100,101,114];
    var fmtRes_1291855221 = [mnewString(0)];
    fmtRes_1291855221[0].push.apply(fmtRes_1291855221[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855221, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym176_1291855216 || [],fmtRes_1291855221[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855210;

}

function setHandleInputsScript_1291855224_1291855233(context_1291855234, value_1291855235) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym182_1291855236 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym182_1291855236)) {
      break BeforeRet;
      }
      
    };
    setHandleInputs_1291855229(get_1291854175(rHEX60gensym182_1291855236), context_1291855234, value_1291855235);
  };

  
}

function initFromJson_1627395339(dst_1627395340, dst_1627395340_Idx, jsonNode_1627395341, jsonPath_1627395342, jsonPath_1627395342_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395341, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395342[jsonPath_1627395342_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet285[jsonNode_1627395341.kind] != undefined))) {
    var msgHEX60gensym99_1627395476 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet286), nimCopy(null, jsonPath_1627395342[jsonPath_1627395342_Idx], NTI33554449), reprEnum(jsonNode_1627395341.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym99_1627395476, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1627395341.kind == 0)) {
    dst_1627395340[dst_1627395340_Idx] = nimCopy(null, [], NTI33554449);
    }
    else {
      var Temporary1 = jsonNode_1627395341;
      if (ConstSet287[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      dst_1627395340[dst_1627395340_Idx] = nimCopy(null, Temporary1.str, NTI33554449);
    }
    

  
}

function to_1811939905(node_1811939908) {
  var result_1811939910 = [[]];

    var jsonPath_1811939911 = [[]];
    result_1811939910[0] = nimCopy(null, [], NTI33554449);
    initFromJson_1627395339(result_1811939910, 0, node_1811939908, jsonPath_1811939911, 0);

  return result_1811939910[0];

}

function fromJson_1811939890(a_1811939892, a_1811939892_Idx, b_1811939893, opt_1811939894) {
    if (!(!(HEX3DHEX3D_1627392026(b_1811939893, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,116,114,105,110,103], Field1: b_1811939893}));
    }
    
    a_1811939892[a_1811939892_Idx] = nimCopy(null, to_1811939905(b_1811939893), NTI33554449);

  
}

function jsonTo_1811939884(b_1811939886, opt_1811939888) {
  var result_1811939889 = [[]];

    fromJson_1811939890(result_1811939889, 0, b_1811939886, opt_1811939888);

  return result_1811939889[0];

}

function setHandleInputsApi_1291855264(HEX3Atmp_1291855226) {
  var result_1291855265 = null;

    result_1291855265 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleInputsScript_1291855224_1291855233(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855226, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291855226, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym187_1291855276 = [115,101,116,72,97,110,100,108,101,73,110,112,117,116,115];
    var fmtRes_1291855281 = [mnewString(0)];
    fmtRes_1291855281[0].push.apply(fmtRes_1291855281[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855281, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym187_1291855276 || [],fmtRes_1291855281[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855265;

}

function setHandleActionsScript_1291855284_1291855293(context_1291855294, value_1291855295) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym192_1291855296 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym192_1291855296)) {
      break BeforeRet;
      }
      
    };
    setHandleActions_1291855289(get_1291854175(rHEX60gensym192_1291855296), context_1291855294, value_1291855295);
  };

  
}

function setHandleActionsApi_1291855324(HEX3Atmp_1291855286) {
  var result_1291855325 = null;

    result_1291855325 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleActionsScript_1291855284_1291855293(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855286, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291855286, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym197_1291855336 = [115,101,116,72,97,110,100,108,101,65,99,116,105,111,110,115];
    var fmtRes_1291855341 = [mnewString(0)];
    fmtRes_1291855341[0].push.apply(fmtRes_1291855341[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855341, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym197_1291855336 || [],fmtRes_1291855341[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855325;

}

function setConsumeAllActionsScript_1291855344_1291855353(context_1291855354, value_1291855355) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym202_1291855356 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym202_1291855356)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllActions_1291855349(get_1291854175(rHEX60gensym202_1291855356), context_1291855354, value_1291855355);
  };

  
}

function setConsumeAllActionsApi_1291855384(HEX3Atmp_1291855346) {
  var result_1291855385 = null;

    result_1291855385 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllActionsScript_1291855344_1291855353(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855346, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291855346, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym207_1291855396 = [115,101,116,67,111,110,115,117,109,101,65,108,108,65,99,116,105,111,110,115];
    var fmtRes_1291855401 = [mnewString(0)];
    fmtRes_1291855401[0].push.apply(fmtRes_1291855401[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855401, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym207_1291855396 || [],fmtRes_1291855401[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855385;

}

function setConsumeAllInputScript_1291855404_1291855413(context_1291855414, value_1291855415) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym212_1291855416 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym212_1291855416)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllInput_1291855409(get_1291854175(rHEX60gensym212_1291855416), context_1291855414, value_1291855415);
  };

  
}

function setConsumeAllInputApi_1291855444(HEX3Atmp_1291855406) {
  var result_1291855445 = null;

    result_1291855445 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllInputScript_1291855404_1291855413(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855406, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291855406, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym217_1291855456 = [115,101,116,67,111,110,115,117,109,101,65,108,108,73,110,112,117,116];
    var fmtRes_1291855461 = [mnewString(0)];
    fmtRes_1291855461[0].push.apply(fmtRes_1291855461[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855461, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym217_1291855456 || [],fmtRes_1291855461[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855445;

}

function clearWorkspaceCachesScript_1291855541_1291855552() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym225_1291855553 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym225_1291855553)) {
      break BeforeRet;
      }
      
    };
    clearWorkspaceCaches_1291855546(get_1291854175(rHEX60gensym225_1291855553));
  };

  
}

function clearWorkspaceCachesApi_1291855579(HEX3Atmp_1291855543) {
  var result_1291855580 = null;

    result_1291855580 = newJNull_1627390049();
++excHandler;
    try {
    clearWorkspaceCachesScript_1291855541_1291855552();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym230_1291855581 = [99,108,101,97,114,87,111,114,107,115,112,97,99,101,67,97,99,104,101,115];
    var fmtRes_1291855586 = [mnewString(0)];
    fmtRes_1291855586[0].push.apply(fmtRes_1291855586[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855586, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym230_1291855581 || [],fmtRes_1291855586[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855580;

}

function openGithubWorkspaceScript_1291855593_1291855603(user_1291855604, repository_1291855605, branchOrHash_1291855606) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym236_1291855607 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym236_1291855607)) {
      break BeforeRet;
      }
      
    };
    openGithubWorkspace_1291855598(get_1291854175(rHEX60gensym236_1291855607), user_1291855604, repository_1291855605, branchOrHash_1291855606);
  };

  
}

function openGithubWorkspaceApi_1291855636(HEX3Atmp_1291855595) {
  var result_1291855637 = null;

    result_1291855637 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    openGithubWorkspaceScript_1291855593_1291855603(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855595, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855595, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855595, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym241_1291855653 = [111,112,101,110,71,105,116,104,117,98,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291855658 = [mnewString(0)];
    fmtRes_1291855658[0].push.apply(fmtRes_1291855658[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855658, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym241_1291855653 || [],fmtRes_1291855658[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855637;

}

function openAbsytreeServerWorkspaceScript_1291855675_1291855683(url_1291855684) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym245_1291855685 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym245_1291855685)) {
      break BeforeRet;
      }
      
    };
    openAbsytreeServerWorkspace_1291855680(get_1291854175(rHEX60gensym245_1291855685), url_1291855684);
  };

  
}

function openAbsytreeServerWorkspaceApi_1291855712(HEX3Atmp_1291855677) {
  var result_1291855713 = null;

    result_1291855713 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    openAbsytreeServerWorkspaceScript_1291855675_1291855683(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855677, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym250_1291855719 = [111,112,101,110,65,98,115,121,116,114,101,101,83,101,114,118,101,114,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291855724 = [mnewString(0)];
    fmtRes_1291855724[0].push.apply(fmtRes_1291855724[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855724, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym250_1291855719 || [],fmtRes_1291855724[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855713;

}

function getFlagScript2_1291855727_1291855746(flag_1291855747, default_1291855748) {
  var result_1291855749 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym255_1291855750 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym255_1291855750)) {
      break BeforeRet;
      }
      
    };
    result_1291855749 = getFlag_1291848874(get_1291854175(rHEX60gensym255_1291855750), flag_1291855747, default_1291855748);
  };

  return result_1291855749;

}

function getFlagApi2_1291855779(HEX3Atmp_1291855729) {
      var Temporary4;

  var result_1291855780 = null;

  BeforeRet: {
    result_1291855780 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291855729))) {
      Temporary4 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291855729, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    result_1291855780 = toJson_2818589142(getFlagScript2_1291855727_1291855746(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855729, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym261_1291855795 = [103,101,116,70,108,97,103];
    var fmtRes_1291855800 = [mnewString(0)];
    fmtRes_1291855800[0].push.apply(fmtRes_1291855800[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855800, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym261_1291855795 || [],fmtRes_1291855800[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291855780;

}

function setFlagScript2_1291855803_1291855867(flag_1291855868, value_1291855869) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym267_1291855870 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym267_1291855870)) {
      break BeforeRet;
      }
      
    };
    setFlag_1291848951(get_1291854175(rHEX60gensym267_1291855870), flag_1291855868, value_1291855869);
  };

  
}

function setFlagApi2_1291855898(HEX3Atmp_1291855805) {
  var result_1291855899 = null;

    result_1291855899 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setFlagScript2_1291855803_1291855867(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855805, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291855805, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym272_1291855910 = [115,101,116,70,108,97,103];
    var fmtRes_1291855915 = [mnewString(0)];
    fmtRes_1291855915[0].push.apply(fmtRes_1291855915[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855915, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym272_1291855910 || [],fmtRes_1291855915[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855899;

}

function toggleFlagScript_1291855924_1291855932(flag_1291855933) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym281_1291855934 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym281_1291855934)) {
      break BeforeRet;
      }
      
    };
    toggleFlag_1291848955(get_1291854175(rHEX60gensym281_1291855934), flag_1291855933);
  };

  
}

function toggleFlagApi_1291855961(HEX3Atmp_1291855926) {
  var result_1291855962 = null;

    result_1291855962 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    toggleFlagScript_1291855924_1291855932(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855926, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym286_1291855968 = [116,111,103,103,108,101,70,108,97,103];
    var fmtRes_1291855973 = [mnewString(0)];
    fmtRes_1291855973[0].push.apply(fmtRes_1291855973[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855973, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym286_1291855968 || [],fmtRes_1291855973[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855962;

}

function setOptionScript_1291855976_1291856024(option_1291856025, value_1291856026) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym291_1291856027 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym291_1291856027)) {
      break BeforeRet;
      }
      
    };
    setOption_1291855981(get_1291854175(rHEX60gensym291_1291856027), option_1291856025, value_1291856026);
  };

  
}

function setOptionApi_1291856055(HEX3Atmp_1291855978) {
  var result_1291856056 = null;

    result_1291856056 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setOptionScript_1291855976_1291856024(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855978, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_1291855978, 1));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym296_1291856062 = [115,101,116,79,112,116,105,111,110];
    var fmtRes_1291856067 = [mnewString(0)];
    fmtRes_1291856067[0].push.apply(fmtRes_1291856067[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856067, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym296_1291856062 || [],fmtRes_1291856067[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856056;

}

function quitScript_1291856075_1291856082() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym304_1291856083 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym304_1291856083)) {
      break BeforeRet;
      }
      
    };
    quit_1291856080(get_1291854175(rHEX60gensym304_1291856083));
  };

  
}

function quitApi_1291856109(HEX3Atmp_1291856077) {
  var result_1291856110 = null;

    result_1291856110 = newJNull_1627390049();
++excHandler;
    try {
    quitScript_1291856075_1291856082();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym309_1291856111 = [113,117,105,116];
    var fmtRes_1291856116 = [mnewString(0)];
    fmtRes_1291856116[0].push.apply(fmtRes_1291856116[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856116, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym309_1291856111 || [],fmtRes_1291856116[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856110;

}

function changeFontSizeScript_1291856119_1291856127(amount_1291856128) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym313_1291856129 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym313_1291856129)) {
      break BeforeRet;
      }
      
    };
    changeFontSize_1291856124(get_1291854175(rHEX60gensym313_1291856129), amount_1291856128);
  };

  
}

function initFromJson_2818586509(dst_2818586511, dst_2818586511_Idx, jsonNode_2818586512, jsonPath_2818586513, jsonPath_2818586513_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_2818586512.kind == 4)) {
    var Temporary1 = jsonNode_2818586512;
    if (ConstSet288[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_2818586518 = NaN;
      dst_2818586511[dst_2818586511_Idx] = b_2818586518;
      break;
    case "inf":
      var b_2818586519 = Infinity;
      dst_2818586511[dst_2818586511_Idx] = b_2818586519;
      break;
    case "-inf":
      var b_2818586520 = -Infinity;
      dst_2818586511[dst_2818586511_Idx] = b_2818586520;
      break;
    default: 
      var Temporary2 = jsonNode_2818586512;
      if (ConstSet289[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_2818586512, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818586513[jsonPath_2818586513_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet290[jsonNode_2818586512.kind] != undefined))) {
      var msgHEX60gensym400_2818586534 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet291), nimCopy(null, jsonPath_2818586513[jsonPath_2818586513_Idx], NTI33554449), reprEnum(jsonNode_2818586512.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym400_2818586534, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_2818586512.kind == 3)) {
      var Temporary3 = jsonNode_2818586512;
      if (ConstSet292[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_2818586511[dst_2818586511_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_2818586512;
        if (ConstSet293[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_2818586511[dst_2818586511_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_2818586498(node_2818586501) {
  var result_2818586503 = [0.0];

    var jsonPath_2818586504 = [[]];
    result_2818586503[0] = 0.0;
    initFromJson_2818586509(result_2818586503, 0, node_2818586501, jsonPath_2818586504, 0);

  return result_2818586503[0];

}

function fromJson_2818586483(a_2818586485, a_2818586485_Idx, b_2818586486, opt_2818586487) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818586486, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116,51,50], Field1: b_2818586486}));
    }
    
    a_2818586485[a_2818586485_Idx] = to_2818586498(b_2818586486);

  
}

function jsonTo_2818586477(b_2818586479, opt_2818586481) {
  var result_2818586482 = [0.0];

    fromJson_2818586483(result_2818586482, 0, b_2818586479, opt_2818586481);

  return result_2818586482[0];

}

function changeFontSizeApi_1291856156(HEX3Atmp_1291856121) {
  var result_1291856157 = null;

    result_1291856157 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    changeFontSizeScript_1291856119_1291856127(jsonTo_2818586477(HEX5BHEX5D_1627393116(HEX3Atmp_1291856121, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym318_1291856163 = [99,104,97,110,103,101,70,111,110,116,83,105,122,101];
    var fmtRes_1291856168 = [mnewString(0)];
    fmtRes_1291856168[0].push.apply(fmtRes_1291856168[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856168, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym318_1291856163 || [],fmtRes_1291856168[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856157;

}

function changeLayoutPropScript_1291856171_1291856429(prop_1291856430, change_1291856431) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym323_1291856432 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym323_1291856432)) {
      break BeforeRet;
      }
      
    };
    changeLayoutProp_1291856176(get_1291854175(rHEX60gensym323_1291856432), prop_1291856430, change_1291856431);
  };

  
}

function changeLayoutPropApi_1291856460(HEX3Atmp_1291856173) {
  var result_1291856461 = null;

    result_1291856461 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    changeLayoutPropScript_1291856171_1291856429(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856173, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586477(HEX5BHEX5D_1627393116(HEX3Atmp_1291856173, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym328_1291856472 = [99,104,97,110,103,101,76,97,121,111,117,116,80,114,111,112];
    var fmtRes_1291856477 = [mnewString(0)];
    fmtRes_1291856477[0].push.apply(fmtRes_1291856477[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856477, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym328_1291856472 || [],fmtRes_1291856477[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856461;

}

function toggleStatusBarLocationScript_1291856487_1291856494() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym337_1291856495 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym337_1291856495)) {
      break BeforeRet;
      }
      
    };
    toggleStatusBarLocation_1291856492(get_1291854175(rHEX60gensym337_1291856495));
  };

  
}

function toggleStatusBarLocationApi_1291856521(HEX3Atmp_1291856489) {
  var result_1291856522 = null;

    result_1291856522 = newJNull_1627390049();
++excHandler;
    try {
    toggleStatusBarLocationScript_1291856487_1291856494();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym342_1291856523 = [116,111,103,103,108,101,83,116,97,116,117,115,66,97,114,76,111,99,97,116,105,111,110];
    var fmtRes_1291856528 = [mnewString(0)];
    fmtRes_1291856528[0].push.apply(fmtRes_1291856528[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856528, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym342_1291856523 || [],fmtRes_1291856528[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856522;

}

function createViewScript_1291856531_1291856543() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym345_1291856544 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym345_1291856544)) {
      break BeforeRet;
      }
      
    };
    createView_1291856536(get_1291854175(rHEX60gensym345_1291856544));
  };

  
}

function createViewApi_1291856570(HEX3Atmp_1291856533) {
  var result_1291856571 = null;

    result_1291856571 = newJNull_1627390049();
++excHandler;
    try {
    createViewScript_1291856531_1291856543();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym350_1291856572 = [99,114,101,97,116,101,86,105,101,119];
    var fmtRes_1291856577 = [mnewString(0)];
    fmtRes_1291856577[0].push.apply(fmtRes_1291856577[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856577, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym350_1291856572 || [],fmtRes_1291856577[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856571;

}

function closeCurrentViewScript_1291856585_1291856622() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym353_1291856623 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym353_1291856623)) {
      break BeforeRet;
      }
      
    };
    closeCurrentView_1291856590(get_1291854175(rHEX60gensym353_1291856623));
  };

  
}

function closeCurrentViewApi_1291856649(HEX3Atmp_1291856587) {
  var result_1291856650 = null;

    result_1291856650 = newJNull_1627390049();
++excHandler;
    try {
    closeCurrentViewScript_1291856585_1291856622();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym358_1291856651 = [99,108,111,115,101,67,117,114,114,101,110,116,86,105,101,119];
    var fmtRes_1291856656 = [mnewString(0)];
    fmtRes_1291856656[0].push.apply(fmtRes_1291856656[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856656, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym358_1291856651 || [],fmtRes_1291856656[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856650;

}

function moveCurrentViewToTopScript_1291856664_1291856707() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym363_1291856708 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym363_1291856708)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewToTop_1291856669(get_1291854175(rHEX60gensym363_1291856708));
  };

  
}

function moveCurrentViewToTopApi_1291856734(HEX3Atmp_1291856666) {
  var result_1291856735 = null;

    result_1291856735 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewToTopScript_1291856664_1291856707();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym368_1291856736 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,84,111,84,111,112];
    var fmtRes_1291856741 = [mnewString(0)];
    fmtRes_1291856741[0].push.apply(fmtRes_1291856741[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856741, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym368_1291856736 || [],fmtRes_1291856741[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856735;

}

function nextViewScript_1291856745_1291856758() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym374_1291856759 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym374_1291856759)) {
      break BeforeRet;
      }
      
    };
    nextView_1291856750(get_1291854175(rHEX60gensym374_1291856759));
  };

  
}

function nextViewApi_1291856785(HEX3Atmp_1291856747) {
  var result_1291856786 = null;

    result_1291856786 = newJNull_1627390049();
++excHandler;
    try {
    nextViewScript_1291856745_1291856758();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym379_1291856787 = [110,101,120,116,86,105,101,119];
    var fmtRes_1291856792 = [mnewString(0)];
    fmtRes_1291856792[0].push.apply(fmtRes_1291856792[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856792, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym379_1291856787 || [],fmtRes_1291856792[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856786;

}

function prevViewScript_1291856795_1291856811() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym382_1291856812 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym382_1291856812)) {
      break BeforeRet;
      }
      
    };
    prevView_1291856800(get_1291854175(rHEX60gensym382_1291856812));
  };

  
}

function prevViewApi_1291856838(HEX3Atmp_1291856797) {
  var result_1291856839 = null;

    result_1291856839 = newJNull_1627390049();
++excHandler;
    try {
    prevViewScript_1291856795_1291856811();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym387_1291856840 = [112,114,101,118,86,105,101,119];
    var fmtRes_1291856845 = [mnewString(0)];
    fmtRes_1291856845[0].push.apply(fmtRes_1291856845[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856845, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym387_1291856840 || [],fmtRes_1291856845[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856839;

}

function moveCurrentViewPrevScript_1291856848_1291856878() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym390_1291856879 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym390_1291856879)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewPrev_1291856853(get_1291854175(rHEX60gensym390_1291856879));
  };

  
}

function moveCurrentViewPrevApi_1291856905(HEX3Atmp_1291856850) {
  var result_1291856906 = null;

    result_1291856906 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewPrevScript_1291856848_1291856878();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym395_1291856907 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,80,114,101,118];
    var fmtRes_1291856912 = [mnewString(0)];
    fmtRes_1291856912[0].push.apply(fmtRes_1291856912[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856912, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym395_1291856907 || [],fmtRes_1291856912[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856906;

}

function moveCurrentViewNextScript_1291856915_1291856942() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym399_1291856943 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym399_1291856943)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewNext_1291856920(get_1291854175(rHEX60gensym399_1291856943));
  };

  
}

function moveCurrentViewNextApi_1291856969(HEX3Atmp_1291856917) {
  var result_1291856970 = null;

    result_1291856970 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewNextScript_1291856915_1291856942();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym404_1291856971 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,78,101,120,116];
    var fmtRes_1291856976 = [mnewString(0)];
    fmtRes_1291856976[0].push.apply(fmtRes_1291856976[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856976, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym404_1291856971 || [],fmtRes_1291856976[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856970;

}

function setLayoutScript_1291856979_1291857023(layout_1291857024) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym409_1291857025 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym409_1291857025)) {
      break BeforeRet;
      }
      
    };
    setLayout_1291856984(get_1291854175(rHEX60gensym409_1291857025), layout_1291857024);
  };

  
}

function setLayoutApi_1291857052(HEX3Atmp_1291856981) {
  var result_1291857053 = null;

    result_1291857053 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setLayoutScript_1291856979_1291857023(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856981, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym414_1291857059 = [115,101,116,76,97,121,111,117,116];
    var fmtRes_1291857064 = [mnewString(0)];
    fmtRes_1291857064[0].push.apply(fmtRes_1291857064[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857064, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym414_1291857059 || [],fmtRes_1291857064[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857053;

}

function commandLineScript_1291857067_1291857079(initialValue_1291857080) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym418_1291857081 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym418_1291857081)) {
      break BeforeRet;
      }
      
    };
    commandLine_1291857072(get_1291854175(rHEX60gensym418_1291857081), initialValue_1291857080);
  };

  
}

function commandLineApi_1291857108(HEX3Atmp_1291857069) {
      var Temporary3;

  var result_1291857109 = null;

    result_1291857109 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857069))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857069, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    commandLineScript_1291857067_1291857079(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym423_1291857115 = [99,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857120 = [mnewString(0)];
    fmtRes_1291857120[0].push.apply(fmtRes_1291857120[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857120, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym423_1291857115 || [],fmtRes_1291857120[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857109;

}

function exitCommandLineScript_1291857123_1291857134() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym427_1291857135 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym427_1291857135)) {
      break BeforeRet;
      }
      
    };
    exitCommandLine_1291857128(get_1291854175(rHEX60gensym427_1291857135));
  };

  
}

function exitCommandLineApi_1291857161(HEX3Atmp_1291857125) {
  var result_1291857162 = null;

    result_1291857162 = newJNull_1627390049();
++excHandler;
    try {
    exitCommandLineScript_1291857123_1291857134();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym432_1291857163 = [101,120,105,116,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857168 = [mnewString(0)];
    fmtRes_1291857168[0].push.apply(fmtRes_1291857168[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857168, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym432_1291857163 || [],fmtRes_1291857168[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857162;

}

function executeCommandLineScript_1291857171_1291857203() {
  var result_1291857204 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym435_1291857205 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym435_1291857205)) {
      break BeforeRet;
      }
      
    };
    result_1291857204 = executeCommandLine_1291857176(get_1291854175(rHEX60gensym435_1291857205));
  };

  return result_1291857204;

}

function executeCommandLineApi_1291857232(HEX3Atmp_1291857173) {
  var result_1291857233 = null;

  BeforeRet: {
    result_1291857233 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857233 = toJson_2818589142(executeCommandLineScript_1291857171_1291857203(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym441_1291857238 = [101,120,101,99,117,116,101,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857243 = [mnewString(0)];
    fmtRes_1291857243[0].push.apply(fmtRes_1291857243[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857243, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym441_1291857238 || [],fmtRes_1291857243[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857233;

}

function writeFileScript_1291857279_1291857300(path_1291857301, app_1291857302) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym452_1291857303 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym452_1291857303)) {
      break BeforeRet;
      }
      
    };
    writeFile_1291857284(get_1291854175(rHEX60gensym452_1291857303), path_1291857301, app_1291857302);
  };

  
}

function writeFileApi_1291857331(HEX3Atmp_1291857281) {
      var Temporary3;
      var Temporary5;

  var result_1291857332 = null;

    result_1291857332 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857281))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857281, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    Label4: {
      if ((1 < len_1627392983(HEX3Atmp_1291857281))) {
      Temporary5 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291857281, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = false;
      }
      
    };
    writeFileScript_1291857279_1291857300(Temporary3, Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym457_1291857343 = [119,114,105,116,101,70,105,108,101];
    var fmtRes_1291857348 = [mnewString(0)];
    fmtRes_1291857348[0].push.apply(fmtRes_1291857348[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857348, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym457_1291857343 || [],fmtRes_1291857348[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857332;

}

function loadFileScript_1291857351_1291857371(path_1291857372) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym466_1291857373 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym466_1291857373)) {
      break BeforeRet;
      }
      
    };
    loadFile_1291857356(get_1291854175(rHEX60gensym466_1291857373), path_1291857372);
  };

  
}

function loadFileApi_1291857400(HEX3Atmp_1291857353) {
      var Temporary3;

  var result_1291857401 = null;

    result_1291857401 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857353))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857353, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    loadFileScript_1291857351_1291857371(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym471_1291857407 = [108,111,97,100,70,105,108,101];
    var fmtRes_1291857412 = [mnewString(0)];
    fmtRes_1291857412[0].push.apply(fmtRes_1291857412[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857412, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym471_1291857407 || [],fmtRes_1291857412[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857401;

}

function openFileScript_1291857434_1291857488(path_1291857489, app_1291857490) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym483_1291857491 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym483_1291857491)) {
      break BeforeRet;
      }
      
    };
    openFile_1291857439(get_1291854175(rHEX60gensym483_1291857491), path_1291857489, app_1291857490);
  };

  
}

function openFileApi_1291857519(HEX3Atmp_1291857436) {
      var Temporary4;

  var result_1291857520 = null;

    result_1291857520 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291857436))) {
      Temporary4 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291857436, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    openFileScript_1291857434_1291857488(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857436, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym488_1291857531 = [111,112,101,110,70,105,108,101];
    var fmtRes_1291857536 = [mnewString(0)];
    fmtRes_1291857536[0].push.apply(fmtRes_1291857536[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857536, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym488_1291857531 || [],fmtRes_1291857536[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857520;

}

function removeFromLocalStorageScript_1291857593_1291857616() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym495_1291857617 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym495_1291857617)) {
      break BeforeRet;
      }
      
    };
    removeFromLocalStorage_1291857598(get_1291854175(rHEX60gensym495_1291857617));
  };

  
}

function removeFromLocalStorageApi_1291857643(HEX3Atmp_1291857595) {
  var result_1291857644 = null;

    result_1291857644 = newJNull_1627390049();
++excHandler;
    try {
    removeFromLocalStorageScript_1291857593_1291857616();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym500_1291857645 = [114,101,109,111,118,101,70,114,111,109,76,111,99,97,108,83,116,111,114,97,103,101];
    var fmtRes_1291857650 = [mnewString(0)];
    fmtRes_1291857650[0].push.apply(fmtRes_1291857650[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857650, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym500_1291857645 || [],fmtRes_1291857650[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857644;

}

function loadThemeScript_1291857653_1291857697(name_1291857698) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym506_1291857699 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym506_1291857699)) {
      break BeforeRet;
      }
      
    };
    loadTheme_1291857658(get_1291854175(rHEX60gensym506_1291857699), name_1291857698);
  };

  
}

function loadThemeApi_1291857726(HEX3Atmp_1291857655) {
  var result_1291857727 = null;

    result_1291857727 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    loadThemeScript_1291857653_1291857697(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857655, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym511_1291857733 = [108,111,97,100,84,104,101,109,101];
    var fmtRes_1291857738 = [mnewString(0)];
    fmtRes_1291857738[0].push.apply(fmtRes_1291857738[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857738, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym511_1291857733 || [],fmtRes_1291857738[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857727;

}

function chooseThemeScript_1291857741_1291858026() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym517_1291858027 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym517_1291858027)) {
      break BeforeRet;
      }
      
    };
    chooseTheme_1291857746(get_1291854175(rHEX60gensym517_1291858027));
  };

  
}

function chooseThemeApi_1291858053(HEX3Atmp_1291857743) {
  var result_1291858054 = null;

    result_1291858054 = newJNull_1627390049();
++excHandler;
    try {
    chooseThemeScript_1291857741_1291858026();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym522_1291858055 = [99,104,111,111,115,101,84,104,101,109,101];
    var fmtRes_1291858060 = [mnewString(0)];
    fmtRes_1291858060[0].push.apply(fmtRes_1291858060[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858060, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym522_1291858055 || [],fmtRes_1291858060[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858054;

}

function chooseFileScript_1291858359_1291858538(view_1291858539) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym543_1291858540 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym543_1291858540)) {
      break BeforeRet;
      }
      
    };
    chooseFile_1291858364(get_1291854175(rHEX60gensym543_1291858540), view_1291858539);
  };

  
}

function chooseFileApi_1291858567(HEX3Atmp_1291858361) {
      var Temporary3;

  var result_1291858568 = null;

    result_1291858568 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291858361))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858361, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [110,101,119];
      }
      
    };
    chooseFileScript_1291858359_1291858538(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym548_1291858574 = [99,104,111,111,115,101,70,105,108,101];
    var fmtRes_1291858579 = [mnewString(0)];
    fmtRes_1291858579[0].push.apply(fmtRes_1291858579[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858579, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym548_1291858574 || [],fmtRes_1291858579[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858568;

}

function setGithubAccessTokenScript_1291858607_1291858615(token_1291858616) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym560_1291858617 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym560_1291858617)) {
      break BeforeRet;
      }
      
    };
    setGithubAccessToken_1291858612(get_1291854175(rHEX60gensym560_1291858617), token_1291858616);
  };

  
}

function setGithubAccessTokenApi_1291858644(HEX3Atmp_1291858609) {
  var result_1291858645 = null;

    result_1291858645 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setGithubAccessTokenScript_1291858607_1291858615(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858609, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym565_1291858651 = [115,101,116,71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110];
    var fmtRes_1291858656 = [mnewString(0)];
    fmtRes_1291858656[0].push.apply(fmtRes_1291858656[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858656, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym565_1291858651 || [],fmtRes_1291858656[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858645;

}

function reloadConfigScript_1291858659_1291858679() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym568_1291858680 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym568_1291858680)) {
      break BeforeRet;
      }
      
    };
    reloadConfig_1291858664(get_1291854175(rHEX60gensym568_1291858680));
  };

  
}

function reloadConfigApi_1291858706(HEX3Atmp_1291858661) {
  var result_1291858707 = null;

    result_1291858707 = newJNull_1627390049();
++excHandler;
    try {
    reloadConfigScript_1291858659_1291858679();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym573_1291858708 = [114,101,108,111,97,100,67,111,110,102,105,103];
    var fmtRes_1291858713 = [mnewString(0)];
    fmtRes_1291858713[0].push.apply(fmtRes_1291858713[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858713, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym573_1291858708 || [],fmtRes_1291858713[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858707;

}

function logOptionsScript_1291858716_1291858723() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym578_1291858724 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym578_1291858724)) {
      break BeforeRet;
      }
      
    };
    logOptions_1291858721(get_1291854175(rHEX60gensym578_1291858724));
  };

  
}

function logOptionsApi_1291858750(HEX3Atmp_1291858718) {
  var result_1291858751 = null;

    result_1291858751 = newJNull_1627390049();
++excHandler;
    try {
    logOptionsScript_1291858716_1291858723();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym583_1291858752 = [108,111,103,79,112,116,105,111,110,115];
    var fmtRes_1291858757 = [mnewString(0)];
    fmtRes_1291858757[0].push.apply(fmtRes_1291858757[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858757, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym583_1291858752 || [],fmtRes_1291858757[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858751;

}

function clearCommandsScript_1291858760_1291858768(context_1291858769) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym587_1291858770 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym587_1291858770)) {
      break BeforeRet;
      }
      
    };
    clearCommands_1291858765(get_1291854175(rHEX60gensym587_1291858770), context_1291858769);
  };

  
}

function clearCommandsApi_1291858797(HEX3Atmp_1291858762) {
  var result_1291858798 = null;

    result_1291858798 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearCommandsScript_1291858760_1291858768(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858762, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym592_1291858804 = [99,108,101,97,114,67,111,109,109,97,110,100,115];
    var fmtRes_1291858809 = [mnewString(0)];
    fmtRes_1291858809[0].push.apply(fmtRes_1291858809[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858809, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym592_1291858804 || [],fmtRes_1291858809[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858798;

}

function toJson_2818585164(a_2818585166, opt_2818585167) {
  var result_2818585168 = null;

    result_2818585168 = HEX25_1627391779(a_2818585166);

  return result_2818585168;

}

function toJson_1291859080(a_1291859082, opt_1291859083) {
  var result_1291859084 = null;

    result_1291859084 = newJArray_1627390082();
    Label1: {
      var ai_1291859091 = 0;
      var i_536871157 = 0;
      var L_536871158 = (a_1291859082).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871157 < L_536871158)) break Label3;
            ai_1291859091 = a_1291859082[chckIndx(i_536871157, 0, (a_1291859082).length - 1)];
            add_1627390190(result_1291859084, toJson_2818585164(ai_1291859091, opt_1291859083));
            i_536871157 = addInt(i_536871157, 1);
            if (!(((a_1291859082).length == L_536871158))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291859084;

}

function getAllEditorsScript_1291858816_1291859049() {
  var result_1291859050 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym595_1291859051 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym595_1291859051)) {
      break BeforeRet;
      }
      
    };
    result_1291859050 = nimCopy(null, getAllEditors_1291858821(get_1291854175(rHEX60gensym595_1291859051)), NTI1291854649);
  };

  return result_1291859050;

}

function getAllEditorsApi_1291859078(HEX3Atmp_1291858818) {
  var result_1291859079 = null;

  BeforeRet: {
    result_1291859079 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859079 = toJson_1291859080(getAllEditorsScript_1291858816_1291859049(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym601_1291859096 = [103,101,116,65,108,108,69,100,105,116,111,114,115];
    var fmtRes_1291859101 = [mnewString(0)];
    fmtRes_1291859101[0].push.apply(fmtRes_1291859101[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859101, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym601_1291859096 || [],fmtRes_1291859101[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859079;

}

function setModeScript22_1291859119_1291859159(mode_1291859160) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym607_1291859161 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym607_1291859161)) {
      break BeforeRet;
      }
      
    };
    setMode_1291859124(get_1291854175(rHEX60gensym607_1291859161), mode_1291859160);
  };

  
}

function setModeApi22_1291859188(HEX3Atmp_1291859121) {
  var result_1291859189 = null;

    result_1291859189 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setModeScript22_1291859119_1291859159(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859121, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym612_1291859195 = [115,101,116,77,111,100,101];
    var fmtRes_1291859200 = [mnewString(0)];
    fmtRes_1291859200[0].push.apply(fmtRes_1291859200[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859200, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym612_1291859195 || [],fmtRes_1291859200[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859189;

}

function modeScript22_1291859204_1291859212() {
  var result_1291859213 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym618_1291859214 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym618_1291859214)) {
      break BeforeRet;
      }
      
    };
    result_1291859213 = nimCopy(null, mode_1291859209(get_1291854175(rHEX60gensym618_1291859214)), NTI33554449);
  };

  return result_1291859213;

}

function modeApi22_1291859241(HEX3Atmp_1291859206) {
  var result_1291859242 = null;

  BeforeRet: {
    result_1291859242 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859242 = toJson_1811939932(modeScript22_1291859204_1291859212(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym624_1291859247 = [109,111,100,101];
    var fmtRes_1291859252 = [mnewString(0)];
    fmtRes_1291859252[0].push.apply(fmtRes_1291859252[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859252, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym624_1291859247 || [],fmtRes_1291859252[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859242;

}

function getContextWithModeScript22_1291859255_1291859264(context_1291859265) {
  var result_1291859266 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym628_1291859267 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym628_1291859267)) {
      break BeforeRet;
      }
      
    };
    result_1291859266 = nimCopy(null, getContextWithMode_1291859260(get_1291854175(rHEX60gensym628_1291859267), context_1291859265), NTI33554449);
  };

  return result_1291859266;

}

function getContextWithModeApi22_1291859295(HEX3Atmp_1291859257) {
  var result_1291859296 = null;

  BeforeRet: {
    result_1291859296 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859296 = toJson_1811939932(getContextWithModeScript22_1291859255_1291859264(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859257, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym634_1291859306 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_1291859311 = [mnewString(0)];
    fmtRes_1291859311[0].push.apply(fmtRes_1291859311[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859311, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym634_1291859306 || [],fmtRes_1291859311[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859296;

}

function scriptRunActionScript_1291859541_1291859551(action_1291859552, arg_1291859553) {
    scriptRunAction_1291859545(action_1291859552, arg_1291859553);

  
}

function scriptRunActionApi_1291859558(HEX3Atmp_1291859543) {
  var result_1291859559 = null;

    result_1291859559 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptRunActionScript_1291859541_1291859551(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859543, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859543, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym649_1291859570 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110];
    var fmtRes_1291859575 = [mnewString(0)];
    fmtRes_1291859575[0].push.apply(fmtRes_1291859575[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859575, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym649_1291859570 || [],fmtRes_1291859575[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859559;

}

function scriptLogScript_1291859578_1291859589(message_1291859590) {
    scriptLog_1291859582(message_1291859590);

  
}

function scriptLogApi_1291859594(HEX3Atmp_1291859580) {
  var result_1291859595 = null;

    result_1291859595 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    scriptLogScript_1291859578_1291859589(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859580, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym656_1291859601 = [115,99,114,105,112,116,76,111,103];
    var fmtRes_1291859606 = [mnewString(0)];
    fmtRes_1291859606[0].push.apply(fmtRes_1291859606[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859606, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym656_1291859601 || [],fmtRes_1291859606[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859595;

}

function addCommandScriptScript_1291859609_1291859621(context_1291859622, keys_1291859623, action_1291859624, arg_1291859625) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym664_1291859626 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym664_1291859626)) {
      break BeforeRet;
      }
      
    };
    addCommandScript_1291859614(get_1291854175(rHEX60gensym664_1291859626), context_1291859622, keys_1291859623, action_1291859624, arg_1291859625);
  };

  
}

function addCommandScriptApi_1291859656(HEX3Atmp_1291859611) {
      var Temporary6;

  var result_1291859657 = null;

    result_1291859657 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_1291859611))) {
      Temporary6 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859611, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = [];
      }
      
    };
    addCommandScriptScript_1291859609_1291859621(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859611, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859611, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859611, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym669_1291859678 = [97,100,100,67,111,109,109,97,110,100,83,99,114,105,112,116];
    var fmtRes_1291859683 = [mnewString(0)];
    fmtRes_1291859683[0].push.apply(fmtRes_1291859683[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859683, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym669_1291859678 || [],fmtRes_1291859683[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859657;

}

function removeCommandScript_1291859692_1291859701(context_1291859702, keys_1291859703) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym675_1291859704 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym675_1291859704)) {
      break BeforeRet;
      }
      
    };
    removeCommand_1291859697(get_1291854175(rHEX60gensym675_1291859704), context_1291859702, keys_1291859703);
  };

  
}

function removeCommandApi_1291859732(HEX3Atmp_1291859694) {
  var result_1291859733 = null;

    result_1291859733 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    removeCommandScript_1291859692_1291859701(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859694, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859694, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym680_1291859744 = [114,101,109,111,118,101,67,111,109,109,97,110,100];
    var fmtRes_1291859749 = [mnewString(0)];
    fmtRes_1291859749[0].push.apply(fmtRes_1291859749[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859749, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym680_1291859744 || [],fmtRes_1291859749[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859733;

}

function getActivePopupScript_1291859754_1291859772() {
  var result_1291859773 = 0;

    result_1291859773 = getActivePopup_1291859758();

  return result_1291859773;

}

function getActivePopupApi_1291859777(HEX3Atmp_1291859756) {
  var result_1291859778 = null;

  BeforeRet: {
    result_1291859778 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859778 = toJson_2818585164(getActivePopupScript_1291859754_1291859772(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym687_1291859783 = [103,101,116,65,99,116,105,118,101,80,111,112,117,112];
    var fmtRes_1291859788 = [mnewString(0)];
    fmtRes_1291859788[0].push.apply(fmtRes_1291859788[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859788, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym687_1291859783 || [],fmtRes_1291859788[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859778;

}

function getActiveEditorScript_1291859791_1291859803() {
  var result_1291859804 = 0;

    result_1291859804 = getActiveEditor_1291859795();

  return result_1291859804;

}

function getActiveEditorApi_1291859808(HEX3Atmp_1291859793) {
  var result_1291859809 = null;

  BeforeRet: {
    result_1291859809 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859809 = toJson_2818585164(getActiveEditorScript_1291859791_1291859803(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym695_1291859814 = [103,101,116,65,99,116,105,118,101,69,100,105,116,111,114];
    var fmtRes_1291859819 = [mnewString(0)];
    fmtRes_1291859819[0].push.apply(fmtRes_1291859819[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859819, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym695_1291859814 || [],fmtRes_1291859819[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859809;

}

function loadCurrentConfigScript_1291859865_1291859877() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym707_1291859878 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym707_1291859878)) {
      break BeforeRet;
      }
      
    };
    loadCurrentConfig_1291859870(get_1291854175(rHEX60gensym707_1291859878));
  };

  
}

function loadCurrentConfigApi_1291859904(HEX3Atmp_1291859867) {
  var result_1291859905 = null;

    result_1291859905 = newJNull_1627390049();
++excHandler;
    try {
    loadCurrentConfigScript_1291859865_1291859877();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym712_1291859906 = [108,111,97,100,67,117,114,114,101,110,116,67,111,110,102,105,103];
    var fmtRes_1291859911 = [mnewString(0)];
    fmtRes_1291859911[0].push.apply(fmtRes_1291859911[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859911, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym712_1291859906 || [],fmtRes_1291859911[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859905;

}

function sourceCurrentDocumentScript_1291859914_1291859944() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym715_1291859945 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym715_1291859945)) {
      break BeforeRet;
      }
      
    };
    sourceCurrentDocument_1291859919(get_1291854175(rHEX60gensym715_1291859945));
  };

  
}

function sourceCurrentDocumentApi_1291859971(HEX3Atmp_1291859916) {
  var result_1291859972 = null;

    result_1291859972 = newJNull_1627390049();
++excHandler;
    try {
    sourceCurrentDocumentScript_1291859914_1291859944();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym720_1291859973 = [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116];
    var fmtRes_1291859978 = [mnewString(0)];
    fmtRes_1291859978[0].push.apply(fmtRes_1291859978[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859978, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym720_1291859973 || [],fmtRes_1291859978[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859972;

}

function getEditorScript_1291859981_1291859994(index_1291859995) {
  var result_1291859996 = 0;

    result_1291859996 = getEditor_1291859985(index_1291859995);

  return result_1291859996;

}

function getEditorApi_1291860001(HEX3Atmp_1291859983) {
  var result_1291860002 = null;

  BeforeRet: {
    result_1291860002 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860002 = toJson_2818585164(getEditorScript_1291859981_1291859994(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291859983, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym730_1291860012 = [103,101,116,69,100,105,116,111,114];
    var fmtRes_1291860017 = [mnewString(0)];
    fmtRes_1291860017[0].push.apply(fmtRes_1291860017[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860017, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym730_1291860012 || [],fmtRes_1291860017[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860002;

}

function scriptIsTextEditorScript_1291860020_1291860062(editorId_1291860063) {
  var result_1291860064 = false;

    result_1291860064 = scriptIsTextEditor_1291860024(editorId_1291860063);

  return result_1291860064;

}

function scriptIsTextEditorApi_1291860069(HEX3Atmp_1291860022) {
  var result_1291860070 = null;

  BeforeRet: {
    result_1291860070 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860070 = toJson_2818589142(scriptIsTextEditorScript_1291860020_1291860062(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860022, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym739_1291860080 = [115,99,114,105,112,116,73,115,84,101,120,116,69,100,105,116,111,114];
    var fmtRes_1291860085 = [mnewString(0)];
    fmtRes_1291860085[0].push.apply(fmtRes_1291860085[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860085, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym739_1291860080 || [],fmtRes_1291860085[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860070;

}

function scriptIsAstEditorScript_1291860089_1291860131(editorId_1291860132) {
  var result_1291860133 = false;

    result_1291860133 = scriptIsAstEditor_1291860093(editorId_1291860132);

  return result_1291860133;

}

function scriptIsAstEditorApi_1291860138(HEX3Atmp_1291860091) {
  var result_1291860139 = null;

  BeforeRet: {
    result_1291860139 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860139 = toJson_2818589142(scriptIsAstEditorScript_1291860089_1291860131(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860091, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym748_1291860149 = [115,99,114,105,112,116,73,115,65,115,116,69,100,105,116,111,114];
    var fmtRes_1291860154 = [mnewString(0)];
    fmtRes_1291860154[0].push.apply(fmtRes_1291860154[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860154, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym748_1291860149 || [],fmtRes_1291860154[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860139;

}

function scriptRunActionForScript_1291860157_1291860224(editorId_1291860225, action_1291860226, arg_1291860227) {
    scriptRunActionFor_1291860161(editorId_1291860225, action_1291860226, arg_1291860227);

  
}

function scriptRunActionForApi_1291860233(HEX3Atmp_1291860159) {
  var result_1291860234 = null;

    result_1291860234 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    scriptRunActionForScript_1291860157_1291860224(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860159, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860159, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860159, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym758_1291860250 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110,70,111,114];
    var fmtRes_1291860255 = [mnewString(0)];
    fmtRes_1291860255[0].push.apply(fmtRes_1291860255[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860255, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym758_1291860250 || [],fmtRes_1291860255[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860234;

}

function scriptInsertTextIntoScript_1291860258_1291860296(editorId_1291860297, text_1291860298) {
    scriptInsertTextInto_1291860262(editorId_1291860297, text_1291860298);

  
}

function scriptInsertTextIntoApi_1291860303(HEX3Atmp_1291860260) {
  var result_1291860304 = null;

    result_1291860304 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptInsertTextIntoScript_1291860258_1291860296(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860260, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860260, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym768_1291860315 = [115,99,114,105,112,116,73,110,115,101,114,116,84,101,120,116,73,110,116,111];
    var fmtRes_1291860320 = [mnewString(0)];
    fmtRes_1291860320[0].push.apply(fmtRes_1291860320[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860320, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym768_1291860315 || [],fmtRes_1291860320[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860304;

}

function toJson_2818585151(a_2818585153, opt_2818585154) {
  var result_2818585155 = null;

    result_2818585155 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818585155, [108,105,110,101], toJson_2818585164(a_2818585153["Field0"], opt_2818585154));
    HEX5BHEX5DHEX3D_1627391903(result_2818585155, [99,111,108,117,109,110], toJson_2818585164(a_2818585153["Field1"], opt_2818585154));

  return result_2818585155;

}

function toJson_2818585138(a_2818585140, opt_2818585141) {
  var result_2818585142 = null;

    result_2818585142 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818585142, [102,105,114,115,116], toJson_2818585151(a_2818585140["Field0"], opt_2818585141));
    HEX5BHEX5DHEX3D_1627391903(result_2818585142, [108,97,115,116], toJson_2818585151(a_2818585140["Field1"], opt_2818585141));

  return result_2818585142;

}

function scriptTextEditorSelectionScript_1291860323_1291860366(editorId_1291860367) {
  var result_1291860368 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291860368 = nimCopy(result_1291860368, scriptTextEditorSelection_1291860327(editorId_1291860367), NTI2449473547);

  return result_1291860368;

}

function scriptTextEditorSelectionApi_1291860373(HEX3Atmp_1291860325) {
  var result_1291860374 = null;

  BeforeRet: {
    result_1291860374 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860374 = toJson_2818585138(scriptTextEditorSelectionScript_1291860323_1291860366(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860325, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym777_1291860384 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291860389 = [mnewString(0)];
    fmtRes_1291860389[0].push.apply(fmtRes_1291860389[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860389, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym777_1291860384 || [],fmtRes_1291860389[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860374;

}

function scriptSetTextEditorSelectionScript_1291860396_1291860438(editorId_1291860439, selection_1291860440) {
    scriptSetTextEditorSelection_1291860400(editorId_1291860439, selection_1291860440);

  
}

function fromJson_2818584949(a_2818584951, b_2818584952, opt_2818584953) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584952, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,117,114,115,111,114], Field1: b_2818584952}));
    }
    
    if (!((b_2818584952.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584952.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584979 = 0;
    var numMatchedHEX60gensym25_2818584980 = 0;
    numHEX60gensym25_2818584979 = addInt(numHEX60gensym25_2818584979, 1);
    if (hasKey_1627393154(b_2818584952, [108,105,110,101])) {
    numMatchedHEX60gensym25_2818584980 = addInt(numMatchedHEX60gensym25_2818584980, 1);
    fromJson_2818584052(a_2818584951, "Field0", HEX5BHEX5D_1627393037(b_2818584952, [108,105,110,101]), opt_2818584953);
    }
    else {
    if (opt_2818584953.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,105,110,101], [67,117,114,115,111,114], pretty_1627394477(b_2818584952, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584979 = addInt(numHEX60gensym25_2818584979, 1);
    if (hasKey_1627393154(b_2818584952, [99,111,108,117,109,110])) {
    numMatchedHEX60gensym25_2818584980 = addInt(numMatchedHEX60gensym25_2818584980, 1);
    fromJson_2818584052(a_2818584951, "Field1", HEX5BHEX5D_1627393037(b_2818584952, [99,111,108,117,109,110]), opt_2818584953);
    }
    else {
    if (opt_2818584953.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[99,111,108,117,109,110], [67,117,114,115,111,114], pretty_1627394477(b_2818584952, 2)]));
      }
      
    }
    }
    if ((opt_2818584953.allowExtraKeys && opt_2818584953.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584953.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584979 == numMatchedHEX60gensym25_2818584980))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584979 == numMatchedHEX60gensym25_2818584980);
    }
    else {
    if (opt_2818584953.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584952) == numMatchedHEX60gensym25_2818584980);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584952) == numHEX60gensym25_2818584979) && (numHEX60gensym25_2818584979 == numMatchedHEX60gensym25_2818584980));
    }
    }}
    var okHEX60gensym25_2818585041 = Temporary1;
    if (!(okHEX60gensym25_2818585041)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584952)), HEX24_369098760(numHEX60gensym25_2818584979), [67,117,114,115,111,114], pretty_1627394477(b_2818584952, 2)]));
    }
    

  
}

function fromJson_2818584895(a_2818584897, b_2818584898, opt_2818584899) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584898, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110], Field1: b_2818584898}));
    }
    
    if (!((b_2818584898.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584898.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584925 = 0;
    var numMatchedHEX60gensym25_2818584926 = 0;
    numHEX60gensym25_2818584925 = addInt(numHEX60gensym25_2818584925, 1);
    if (hasKey_1627393154(b_2818584898, [102,105,114,115,116])) {
    numMatchedHEX60gensym25_2818584926 = addInt(numMatchedHEX60gensym25_2818584926, 1);
    fromJson_2818584949(a_2818584897["Field0"], HEX5BHEX5D_1627393037(b_2818584898, [102,105,114,115,116]), opt_2818584899);
    }
    else {
    if (opt_2818584899.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,114,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584898, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584925 = addInt(numHEX60gensym25_2818584925, 1);
    if (hasKey_1627393154(b_2818584898, [108,97,115,116])) {
    numMatchedHEX60gensym25_2818584926 = addInt(numMatchedHEX60gensym25_2818584926, 1);
    fromJson_2818584949(a_2818584897["Field1"], HEX5BHEX5D_1627393037(b_2818584898, [108,97,115,116]), opt_2818584899);
    }
    else {
    if (opt_2818584899.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584898, 2)]));
      }
      
    }
    }
    if ((opt_2818584899.allowExtraKeys && opt_2818584899.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584899.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584925 == numMatchedHEX60gensym25_2818584926))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584925 == numMatchedHEX60gensym25_2818584926);
    }
    else {
    if (opt_2818584899.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584898) == numMatchedHEX60gensym25_2818584926);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584898) == numHEX60gensym25_2818584925) && (numHEX60gensym25_2818584925 == numMatchedHEX60gensym25_2818584926));
    }
    }}
    var okHEX60gensym25_2818585079 = Temporary1;
    if (!(okHEX60gensym25_2818585079)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584898)), HEX24_369098760(numHEX60gensym25_2818584925), [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584898, 2)]));
    }
    

  
}

function jsonTo_2818586095(b_2818586097, opt_2818586099) {
  var result_2818586100 = [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}];

    fromJson_2818584895(result_2818586100[0], b_2818586097, opt_2818586099);

  return result_2818586100[0];

}

function scriptSetTextEditorSelectionApi_1291860445(HEX3Atmp_1291860398) {
  var result_1291860446 = null;

    result_1291860446 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionScript_1291860396_1291860438(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860398, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586095(HEX5BHEX5D_1627393116(HEX3Atmp_1291860398, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym786_1291860457 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291860462 = [mnewString(0)];
    fmtRes_1291860462[0].push.apply(fmtRes_1291860462[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860462, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym786_1291860457 || [],fmtRes_1291860462[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860446;

}

function toJson_2818585126(a_2818585128, opt_2818585129) {
  var result_2818585130 = null;

    result_2818585130 = newJArray_1627390082();
    Label1: {
      var ai_2818585137 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871192 = 0;
      var L_536871193 = (a_2818585128).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871192 < L_536871193)) break Label3;
            ai_2818585137 = a_2818585128[chckIndx(i_536871192, 0, (a_2818585128).length - 1)];
            add_1627390190(result_2818585130, toJson_2818585138(ai_2818585137, opt_2818585129));
            i_536871192 = addInt(i_536871192, 1);
            if (!(((a_2818585128).length == L_536871193))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818585130;

}

function scriptTextEditorSelectionsScript_1291860465_1291860516(editorId_1291860517) {
  var result_1291860518 = [];

    result_1291860518 = nimCopy(null, scriptTextEditorSelections_1291860469(editorId_1291860517), NTI1291855966);

  return result_1291860518;

}

function scriptTextEditorSelectionsApi_1291860523(HEX3Atmp_1291860467) {
  var result_1291860524 = null;

  BeforeRet: {
    result_1291860524 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860524 = toJson_2818585126(scriptTextEditorSelectionsScript_1291860465_1291860516(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860467, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym795_1291860534 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291860539 = [mnewString(0)];
    fmtRes_1291860539[0].push.apply(fmtRes_1291860539[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860539, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym795_1291860534 || [],fmtRes_1291860539[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860524;

}

function scriptSetTextEditorSelectionsScript_1291860542_1291860584(editorId_1291860585, selections_1291860586) {
    scriptSetTextEditorSelections_1291860546(editorId_1291860585, selections_1291860586);

  
}

function getElems_1627390175(n_1627390176, default_1627390181) {
      var Temporary1;

  var result_1627390182 = [];

  BeforeRet: {
    if (((n_1627390176 == null) || !((n_1627390176.kind == 6)))) {
    result_1627390182 = nimCopy(null, default_1627390181, NTI1627390088);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390176;
      if (ConstSet294[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390182 = nimCopy(null, Temporary1.elems, NTI1627389974);
      break BeforeRet;
    }
    
  };

  return result_1627390182;

}

function fromJson_2818584840(a_2818584842, a_2818584842_Idx, b_2818584843, opt_2818584844) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584843, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,83,101,108,101,99,116,105,111,110,93], Field1: b_2818584843}));
    }
    
    if (a_2818584842[a_2818584842_Idx].length < (Temporary1 = chckRange(len_1627392983(b_2818584843), 0, 2147483647), Temporary1)) { for (var i = a_2818584842[a_2818584842_Idx].length ; i < Temporary1 ; ++i) a_2818584842[a_2818584842_Idx].push({Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}); }
               else { a_2818584842[a_2818584842_Idx].length = Temporary1; };
    Label2: {
      var i_2818584893 = 0;
      var val_2818584894 = null;
      var colontmp__536871198 = [];
      colontmp__536871198 = getElems_1627390175(b_2818584843, []);
      var i_536871200 = 0;
      var L_536871201 = (colontmp__536871198).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871200 < L_536871201)) break Label4;
            i_2818584893 = i_536871200;
            val_2818584894 = colontmp__536871198[chckIndx(i_536871200, 0, (colontmp__536871198).length - 1)];
            fromJson_2818584895(a_2818584842[a_2818584842_Idx][chckIndx(i_2818584893, 0, (a_2818584842[a_2818584842_Idx]).length - 1)], val_2818584894, opt_2818584844);
            i_536871200 = addInt(i_536871200, 1);
            if (!(((colontmp__536871198).length == L_536871201))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function jsonTo_2818584834(b_2818584836, opt_2818584838) {
  var result_2818584839 = [[]];

    fromJson_2818584840(result_2818584839, 0, b_2818584836, opt_2818584838);

  return result_2818584839[0];

}

function scriptSetTextEditorSelectionsApi_1291860591(HEX3Atmp_1291860544) {
  var result_1291860592 = null;

    result_1291860592 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionsScript_1291860542_1291860584(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860544, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584834(HEX5BHEX5D_1627393116(HEX3Atmp_1291860544, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym804_1291860603 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291860608 = [mnewString(0)];
    fmtRes_1291860608[0].push.apply(fmtRes_1291860608[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860608, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym804_1291860603 || [],fmtRes_1291860608[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860592;

}

function scriptGetTextEditorLineScript_1291860611_1291860658(editorId_1291860659, line_1291860660) {
  var result_1291860661 = [];

    result_1291860661 = nimCopy(null, scriptGetTextEditorLine_1291860615(editorId_1291860659, line_1291860660), NTI33554449);

  return result_1291860661;

}

function scriptGetTextEditorLineApi_1291860667(HEX3Atmp_1291860613) {
  var result_1291860668 = null;

  BeforeRet: {
    result_1291860668 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860668 = toJson_1811939932(scriptGetTextEditorLineScript_1291860611_1291860658(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860613, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860613, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym814_1291860683 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101];
    var fmtRes_1291860688 = [mnewString(0)];
    fmtRes_1291860688[0].push.apply(fmtRes_1291860688[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860688, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym814_1291860683 || [],fmtRes_1291860688[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860668;

}

function scriptGetTextEditorLineCountScript_1291860691_1291860737(editorId_1291860738) {
  var result_1291860739 = 0;

    result_1291860739 = scriptGetTextEditorLineCount_1291860695(editorId_1291860738);

  return result_1291860739;

}

function scriptGetTextEditorLineCountApi_1291860744(HEX3Atmp_1291860693) {
  var result_1291860745 = null;

  BeforeRet: {
    result_1291860745 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860745 = toJson_2818585164(scriptGetTextEditorLineCountScript_1291860691_1291860737(jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860693, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym824_1291860755 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101,67,111,117,110,116];
    var fmtRes_1291860760 = [mnewString(0)];
    fmtRes_1291860760[0].push.apply(fmtRes_1291860760[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860760, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym824_1291860755 || [],fmtRes_1291860760[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860745;

}

function scriptGetOptionIntScript_1291860774_1291860790(path_1291860791, default_1291860792) {
  var result_1291860793 = 0;

    result_1291860793 = scriptGetOptionInt_1291860778(path_1291860791, default_1291860792);

  return result_1291860793;

}

function scriptGetOptionIntApi_1291860799(HEX3Atmp_1291860776) {
  var result_1291860800 = null;

  BeforeRet: {
    result_1291860800 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860800 = toJson_2818585164(scriptGetOptionIntScript_1291860774_1291860790(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860776, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291860776, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym834_1291860815 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291860820 = [mnewString(0)];
    fmtRes_1291860820[0].push.apply(fmtRes_1291860820[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860820, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym834_1291860815 || [],fmtRes_1291860820[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860800;

}

function scriptGetOptionFloatScript_1291860824_1291860840(path_1291860841, default_1291860842) {
  var result_1291860843 = 0.0;

    result_1291860843 = scriptGetOptionFloat_1291860828(path_1291860841, default_1291860842);

  return result_1291860843;

}

function initFromJson_1291860888(dst_1291860890, dst_1291860890_Idx, jsonNode_1291860891, jsonPath_1291860892, jsonPath_1291860892_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_1291860891.kind == 4)) {
    var Temporary1 = jsonNode_1291860891;
    if (ConstSet295[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_1291860897 = NaN;
      dst_1291860890[dst_1291860890_Idx] = b_1291860897;
      break;
    case "inf":
      var b_1291860898 = Infinity;
      dst_1291860890[dst_1291860890_Idx] = b_1291860898;
      break;
    case "-inf":
      var b_1291860899 = -Infinity;
      dst_1291860890[dst_1291860890_Idx] = b_1291860899;
      break;
    default: 
      var Temporary2 = jsonNode_1291860891;
      if (ConstSet296[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_1291860891, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1291860892[jsonPath_1291860892_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet297[jsonNode_1291860891.kind] != undefined))) {
      var msgHEX60gensym848_1291860913 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet298), nimCopy(null, jsonPath_1291860892[jsonPath_1291860892_Idx], NTI33554449), reprEnum(jsonNode_1291860891.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym848_1291860913, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_1291860891.kind == 3)) {
      var Temporary3 = jsonNode_1291860891;
      if (ConstSet299[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_1291860890[dst_1291860890_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_1291860891;
        if (ConstSet300[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_1291860890[dst_1291860890_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_1291860877(node_1291860880) {
  var result_1291860882 = [0.0];

    var jsonPath_1291860883 = [[]];
    result_1291860882[0] = 0.0;
    initFromJson_1291860888(result_1291860882, 0, node_1291860880, jsonPath_1291860883, 0);

  return result_1291860882[0];

}

function fromJson_1291860862(a_1291860864, a_1291860864_Idx, b_1291860865, opt_1291860866) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291860865, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116], Field1: b_1291860865}));
    }
    
    a_1291860864[a_1291860864_Idx] = to_1291860877(b_1291860865);

  
}

function jsonTo_1291860856(b_1291860858, opt_1291860860) {
  var result_1291860861 = [0.0];

    fromJson_1291860862(result_1291860861, 0, b_1291860858, opt_1291860860);

  return result_1291860861[0];

}

function scriptGetOptionFloatApi_1291860849(HEX3Atmp_1291860826) {
  var result_1291860850 = null;

  BeforeRet: {
    result_1291860850 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860850 = toJson_1291854837(scriptGetOptionFloatScript_1291860824_1291860840(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860826, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860856(HEX5BHEX5D_1627393116(HEX3Atmp_1291860826, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym844_1291860923 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291860928 = [mnewString(0)];
    fmtRes_1291860928[0].push.apply(fmtRes_1291860928[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860928, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym844_1291860923 || [],fmtRes_1291860928[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860850;

}

function scriptGetOptionBoolScript_1291860932_1291860948(path_1291860949, default_1291860950) {
  var result_1291860951 = false;

    result_1291860951 = scriptGetOptionBool_1291860936(path_1291860949, default_1291860950);

  return result_1291860951;

}

function scriptGetOptionBoolApi_1291860957(HEX3Atmp_1291860934) {
  var result_1291860958 = null;

  BeforeRet: {
    result_1291860958 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860958 = toJson_2818589142(scriptGetOptionBoolScript_1291860932_1291860948(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860934, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291860934, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym860_1291860973 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291860978 = [mnewString(0)];
    fmtRes_1291860978[0].push.apply(fmtRes_1291860978[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860978, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym860_1291860973 || [],fmtRes_1291860978[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860958;

}

function scriptGetOptionStringScript_1291860982_1291860998(path_1291860999, default_1291861000) {
  var result_1291861001 = [];

    result_1291861001 = nimCopy(null, scriptGetOptionString_1291860986(path_1291860999, default_1291861000), NTI33554449);

  return result_1291861001;

}

function scriptGetOptionStringApi_1291861007(HEX3Atmp_1291860984) {
  var result_1291861008 = null;

  BeforeRet: {
    result_1291861008 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291861008 = toJson_1811939932(scriptGetOptionStringScript_1291860982_1291860998(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860984, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860984, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym870_1291861023 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291861028 = [mnewString(0)];
    fmtRes_1291861028[0].push.apply(fmtRes_1291861028[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861028, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym870_1291861023 || [],fmtRes_1291861028[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291861008;

}

function scriptSetOptionIntScript_1291861032_1291861081(path_1291861082, value_1291861083) {
    scriptSetOptionInt_1291861036(path_1291861082, value_1291861083);

  
}

function scriptSetOptionIntApi_1291861088(HEX3Atmp_1291861034) {
  var result_1291861089 = null;

    result_1291861089 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionIntScript_1291861032_1291861081(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861034, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291861034, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym879_1291861100 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291861105 = [mnewString(0)];
    fmtRes_1291861105[0].push.apply(fmtRes_1291861105[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861105, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym879_1291861100 || [],fmtRes_1291861105[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861089;

}

function scriptSetOptionFloatScript_1291861114_1291861163(path_1291861164, value_1291861165) {
    scriptSetOptionFloat_1291861118(path_1291861164, value_1291861165);

  
}

function scriptSetOptionFloatApi_1291861170(HEX3Atmp_1291861116) {
  var result_1291861171 = null;

    result_1291861171 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionFloatScript_1291861114_1291861163(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861116, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860856(HEX5BHEX5D_1627393116(HEX3Atmp_1291861116, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym893_1291861182 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291861187 = [mnewString(0)];
    fmtRes_1291861187[0].push.apply(fmtRes_1291861187[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861187, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym893_1291861182 || [],fmtRes_1291861187[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861171;

}

function scriptSetOptionBoolScript_1291861196_1291861245(path_1291861246, value_1291861247) {
    scriptSetOptionBool_1291861200(path_1291861246, value_1291861247);

  
}

function scriptSetOptionBoolApi_1291861252(HEX3Atmp_1291861198) {
  var result_1291861253 = null;

    result_1291861253 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionBoolScript_1291861196_1291861245(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861198, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_1291861198, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym907_1291861264 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291861269 = [mnewString(0)];
    fmtRes_1291861269[0].push.apply(fmtRes_1291861269[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861269, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym907_1291861264 || [],fmtRes_1291861269[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861253;

}

function scriptSetOptionStringScript_1291861278_1291861327(path_1291861328, value_1291861329) {
    scriptSetOptionString_1291861282(path_1291861328, value_1291861329);

  
}

function scriptSetOptionStringApi_1291861334(HEX3Atmp_1291861280) {
  var result_1291861335 = null;

    result_1291861335 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionStringScript_1291861278_1291861327(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861280, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861280, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym921_1291861346 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291861351 = [mnewString(0)];
    fmtRes_1291861351[0].push.apply(fmtRes_1291861351[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861351, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym921_1291861346 || [],fmtRes_1291861351[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861335;

}

function scriptSetCallbackScript_1291861360_1291861416(path_1291861417, id_1291861418) {
    scriptSetCallback_1291861364(path_1291861417, id_1291861418);

  
}

function scriptSetCallbackApi_1291861423(HEX3Atmp_1291861362) {
  var result_1291861424 = null;

    result_1291861424 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetCallbackScript_1291861360_1291861416(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861362, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_1291861362, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym935_1291861435 = [115,99,114,105,112,116,83,101,116,67,97,108,108,98,97,99,107];
    var fmtRes_1291861440 = [mnewString(0)];
    fmtRes_1291861440[0].push.apply(fmtRes_1291861440[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861440, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym935_1291861435 || [],fmtRes_1291861440[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861424;

}

function dispatch_1291861451(command_1291861450, arg_1291861449) {
    var Temporary1;

  var result_1291861453 = ({val: null});

    switch (toJSStr(command_1291861450)) {
    case "getBackend":
    case "get-backend":
      Temporary1 = some_2818593610(getBackendApi_1291854200(arg_1291861449));
      break;
    case "saveAppState":
    case "save-app-state":
      Temporary1 = some_2818593610(saveAppStateApi_1291855090(arg_1291861449));
      break;
    case "requestRender":
    case "request-render":
      Temporary1 = some_2818593610(requestRenderApi_1291855209(arg_1291861449));
      break;
    case "setHandleInputs":
    case "set-handle-inputs":
      Temporary1 = some_2818593610(setHandleInputsApi_1291855264(arg_1291861449));
      break;
    case "setHandleActions":
    case "set-handle-actions":
      Temporary1 = some_2818593610(setHandleActionsApi_1291855324(arg_1291861449));
      break;
    case "setConsumeAllActions":
    case "set-consume-all-actions":
      Temporary1 = some_2818593610(setConsumeAllActionsApi_1291855384(arg_1291861449));
      break;
    case "setConsumeAllInput":
    case "set-consume-all-input":
      Temporary1 = some_2818593610(setConsumeAllInputApi_1291855444(arg_1291861449));
      break;
    case "clearWorkspaceCaches":
    case "clear-workspace-caches":
      Temporary1 = some_2818593610(clearWorkspaceCachesApi_1291855579(arg_1291861449));
      break;
    case "openGithubWorkspace":
    case "open-github-workspace":
      Temporary1 = some_2818593610(openGithubWorkspaceApi_1291855636(arg_1291861449));
      break;
    case "openAbsytreeServerWorkspace":
    case "open-absytree-server-workspace":
      Temporary1 = some_2818593610(openAbsytreeServerWorkspaceApi_1291855712(arg_1291861449));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818593610(getFlagApi2_1291855779(arg_1291861449));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818593610(setFlagApi2_1291855898(arg_1291861449));
      break;
    case "toggleFlag":
    case "toggle-flag":
      Temporary1 = some_2818593610(toggleFlagApi_1291855961(arg_1291861449));
      break;
    case "setOption":
    case "set-option":
      Temporary1 = some_2818593610(setOptionApi_1291856055(arg_1291861449));
      break;
    case "quit":
      Temporary1 = some_2818593610(quitApi_1291856109(arg_1291861449));
      break;
    case "changeFontSize":
    case "change-font-size":
      Temporary1 = some_2818593610(changeFontSizeApi_1291856156(arg_1291861449));
      break;
    case "changeLayoutProp":
    case "change-layout-prop":
      Temporary1 = some_2818593610(changeLayoutPropApi_1291856460(arg_1291861449));
      break;
    case "toggleStatusBarLocation":
    case "toggle-status-bar-location":
      Temporary1 = some_2818593610(toggleStatusBarLocationApi_1291856521(arg_1291861449));
      break;
    case "createView":
    case "create-view":
      Temporary1 = some_2818593610(createViewApi_1291856570(arg_1291861449));
      break;
    case "closeCurrentView":
    case "close-current-view":
      Temporary1 = some_2818593610(closeCurrentViewApi_1291856649(arg_1291861449));
      break;
    case "moveCurrentViewToTop":
    case "move-current-view-to-top":
      Temporary1 = some_2818593610(moveCurrentViewToTopApi_1291856734(arg_1291861449));
      break;
    case "nextView":
    case "next-view":
      Temporary1 = some_2818593610(nextViewApi_1291856785(arg_1291861449));
      break;
    case "prevView":
    case "prev-view":
      Temporary1 = some_2818593610(prevViewApi_1291856838(arg_1291861449));
      break;
    case "moveCurrentViewPrev":
    case "move-current-view-prev":
      Temporary1 = some_2818593610(moveCurrentViewPrevApi_1291856905(arg_1291861449));
      break;
    case "moveCurrentViewNext":
    case "move-current-view-next":
      Temporary1 = some_2818593610(moveCurrentViewNextApi_1291856969(arg_1291861449));
      break;
    case "setLayout":
    case "set-layout":
      Temporary1 = some_2818593610(setLayoutApi_1291857052(arg_1291861449));
      break;
    case "commandLine":
    case "command-line":
      Temporary1 = some_2818593610(commandLineApi_1291857108(arg_1291861449));
      break;
    case "exitCommandLine":
    case "exit-command-line":
      Temporary1 = some_2818593610(exitCommandLineApi_1291857161(arg_1291861449));
      break;
    case "executeCommandLine":
    case "execute-command-line":
      Temporary1 = some_2818593610(executeCommandLineApi_1291857232(arg_1291861449));
      break;
    case "writeFile":
    case "write-file":
      Temporary1 = some_2818593610(writeFileApi_1291857331(arg_1291861449));
      break;
    case "loadFile":
    case "load-file":
      Temporary1 = some_2818593610(loadFileApi_1291857400(arg_1291861449));
      break;
    case "openFile":
    case "open-file":
      Temporary1 = some_2818593610(openFileApi_1291857519(arg_1291861449));
      break;
    case "removeFromLocalStorage":
    case "remove-from-local-storage":
      Temporary1 = some_2818593610(removeFromLocalStorageApi_1291857643(arg_1291861449));
      break;
    case "loadTheme":
    case "load-theme":
      Temporary1 = some_2818593610(loadThemeApi_1291857726(arg_1291861449));
      break;
    case "chooseTheme":
    case "choose-theme":
      Temporary1 = some_2818593610(chooseThemeApi_1291858053(arg_1291861449));
      break;
    case "chooseFile":
    case "choose-file":
      Temporary1 = some_2818593610(chooseFileApi_1291858567(arg_1291861449));
      break;
    case "setGithubAccessToken":
    case "set-github-access-token":
      Temporary1 = some_2818593610(setGithubAccessTokenApi_1291858644(arg_1291861449));
      break;
    case "reloadConfig":
    case "reload-config":
      Temporary1 = some_2818593610(reloadConfigApi_1291858706(arg_1291861449));
      break;
    case "logOptions":
    case "log-options":
      Temporary1 = some_2818593610(logOptionsApi_1291858750(arg_1291861449));
      break;
    case "clearCommands":
    case "clear-commands":
      Temporary1 = some_2818593610(clearCommandsApi_1291858797(arg_1291861449));
      break;
    case "getAllEditors":
    case "get-all-editors":
      Temporary1 = some_2818593610(getAllEditorsApi_1291859078(arg_1291861449));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593610(setModeApi22_1291859188(arg_1291861449));
      break;
    case "mode":
      Temporary1 = some_2818593610(modeApi22_1291859241(arg_1291861449));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593610(getContextWithModeApi22_1291859295(arg_1291861449));
      break;
    case "scriptRunAction":
    case "script-run-action":
      Temporary1 = some_2818593610(scriptRunActionApi_1291859558(arg_1291861449));
      break;
    case "scriptLog":
    case "script-log":
      Temporary1 = some_2818593610(scriptLogApi_1291859594(arg_1291861449));
      break;
    case "addCommandScript":
    case "add-command-script":
      Temporary1 = some_2818593610(addCommandScriptApi_1291859656(arg_1291861449));
      break;
    case "removeCommand":
    case "remove-command":
      Temporary1 = some_2818593610(removeCommandApi_1291859732(arg_1291861449));
      break;
    case "getActivePopup":
    case "get-active-popup":
      Temporary1 = some_2818593610(getActivePopupApi_1291859777(arg_1291861449));
      break;
    case "getActiveEditor":
    case "get-active-editor":
      Temporary1 = some_2818593610(getActiveEditorApi_1291859808(arg_1291861449));
      break;
    case "loadCurrentConfig":
    case "load-current-config":
      Temporary1 = some_2818593610(loadCurrentConfigApi_1291859904(arg_1291861449));
      break;
    case "sourceCurrentDocument":
    case "source-current-document":
      Temporary1 = some_2818593610(sourceCurrentDocumentApi_1291859971(arg_1291861449));
      break;
    case "getEditor":
    case "get-editor":
      Temporary1 = some_2818593610(getEditorApi_1291860001(arg_1291861449));
      break;
    case "scriptIsTextEditor":
    case "script-is-text-editor":
      Temporary1 = some_2818593610(scriptIsTextEditorApi_1291860069(arg_1291861449));
      break;
    case "scriptIsAstEditor":
    case "script-is-ast-editor":
      Temporary1 = some_2818593610(scriptIsAstEditorApi_1291860138(arg_1291861449));
      break;
    case "scriptRunActionFor":
    case "script-run-action-for":
      Temporary1 = some_2818593610(scriptRunActionForApi_1291860233(arg_1291861449));
      break;
    case "scriptInsertTextInto":
    case "script-insert-text-into":
      Temporary1 = some_2818593610(scriptInsertTextIntoApi_1291860303(arg_1291861449));
      break;
    case "scriptTextEditorSelection":
    case "script-text-editor-selection":
      Temporary1 = some_2818593610(scriptTextEditorSelectionApi_1291860373(arg_1291861449));
      break;
    case "scriptSetTextEditorSelection":
    case "script-set-text-editor-selection":
      Temporary1 = some_2818593610(scriptSetTextEditorSelectionApi_1291860445(arg_1291861449));
      break;
    case "scriptTextEditorSelections":
    case "script-text-editor-selections":
      Temporary1 = some_2818593610(scriptTextEditorSelectionsApi_1291860523(arg_1291861449));
      break;
    case "scriptSetTextEditorSelections":
    case "script-set-text-editor-selections":
      Temporary1 = some_2818593610(scriptSetTextEditorSelectionsApi_1291860591(arg_1291861449));
      break;
    case "scriptGetTextEditorLine":
    case "script-get-text-editor-line":
      Temporary1 = some_2818593610(scriptGetTextEditorLineApi_1291860667(arg_1291861449));
      break;
    case "scriptGetTextEditorLineCount":
    case "script-get-text-editor-line-count":
      Temporary1 = some_2818593610(scriptGetTextEditorLineCountApi_1291860744(arg_1291861449));
      break;
    case "scriptGetOptionInt":
    case "script-get-option-int":
      Temporary1 = some_2818593610(scriptGetOptionIntApi_1291860799(arg_1291861449));
      break;
    case "scriptGetOptionFloat":
    case "script-get-option-float":
      Temporary1 = some_2818593610(scriptGetOptionFloatApi_1291860849(arg_1291861449));
      break;
    case "scriptGetOptionBool":
    case "script-get-option-bool":
      Temporary1 = some_2818593610(scriptGetOptionBoolApi_1291860957(arg_1291861449));
      break;
    case "scriptGetOptionString":
    case "script-get-option-string":
      Temporary1 = some_2818593610(scriptGetOptionStringApi_1291861007(arg_1291861449));
      break;
    case "scriptSetOptionInt":
    case "script-set-option-int":
      Temporary1 = some_2818593610(scriptSetOptionIntApi_1291861088(arg_1291861449));
      break;
    case "scriptSetOptionFloat":
    case "script-set-option-float":
      Temporary1 = some_2818593610(scriptSetOptionFloatApi_1291861170(arg_1291861449));
      break;
    case "scriptSetOptionBool":
    case "script-set-option-bool":
      Temporary1 = some_2818593610(scriptSetOptionBoolApi_1291861252(arg_1291861449));
      break;
    case "scriptSetOptionString":
    case "script-set-option-string":
      Temporary1 = some_2818593610(scriptSetOptionStringApi_1291861334(arg_1291861449));
      break;
    case "scriptSetCallback":
    case "script-set-callback":
      Temporary1 = some_2818593610(scriptSetCallbackApi_1291861423(arg_1291861449));
      break;
    default: 
      Temporary1 = none_2818593809();
      break;
    }
    result_1291861453 = nimCopy(result_1291861453, Temporary1, NTI2818585760);

  return result_1291861453;

}

function handleAction_1291848870(self_1291848871, action_1291848872, arg_1291848873) {
  var result_1291861680 = false;

  BeforeRet: {
    log_1174405220(logger_704643272[0], 2, [nsuFormatOpenArray([91,101,100,93,32,65,99,116,105,111,110,32,39,36,49,32,36,50,39], [nimCopy(null, action_1291848872, NTI33554449), nimCopy(null, arg_1291848873, NTI33554449)])]);
    var args_1291861681 = newJArray_1627390082();
    Label1: {
      var a_1291861682 = null;
      var colontmp__536871079 = null;
      colontmp__536871079 = newStringStream_1660945417(arg_1291848873);
      var p_536871080 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871080[0], colontmp__536871079, [], false);
      try {
      var _ = getTok_1694499270(p_536871080[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536871080[0].tok == 1))) break Label4;
            a_1291861682 = parseJson_1627395211(p_536871080[0], false, false, 0);
            add_1627390190(args_1291861681, a_1291861682);
          }
      };
      } finally {
      close_1694498967(p_536871080[0]);
      }
    };
++excHandler;
    try {
    if (handleGlobalAction_2751463463(self_1291848871.scriptContext, action_1291848872, args_1291861681)) {
    result_1291861680 = true;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291861687 = [mnewString(0)];
    fmtRes_1291861687[0].push.apply(fmtRes_1291861687[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,71,108,111,98,97,108,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291861687, 0, action_1291848872, []);
    fmtRes_1291861687[0].push.apply(fmtRes_1291861687[0], [32]);;
    formatValue_721420459(fmtRes_1291861687, 0, arg_1291848873, []);
    fmtRes_1291861687[0].push.apply(fmtRes_1291861687[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291861687, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291861687[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291861680 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291861680 = isSome_2818593877(dispatch_1291861451(action_1291848872, args_1291861681));
    break BeforeRet;
  };

  return result_1291861680;

}

function getBiggestInt_1627390129(n_1627390130, default_1627390131) {
      var Temporary1;

  var result_1627390132 = 0;

  BeforeRet: {
    if (((n_1627390130 == null) || !((n_1627390130.kind == 2)))) {
    result_1627390132 = default_1627390131;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390130;
      if (ConstSet301[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390132 = Temporary1.num;
      break BeforeRet;
    }
    
  };

  return result_1627390132;

}

function parseEnum_1291853194(s_1291853196) {
    var Temporary1;

  var result_1291853197 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_1291853196))) {
    case "Local":
      Temporary1 = 0;
      break;
    case "Absytreeserver":
      Temporary1 = 1;
      break;
    case "Github":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_1291853196 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1291853197 = Temporary1;

  return result_1291853197;

}

function fromJson_1291853182(a_1291853184, a_1291853184_Idx, b_1291853185, opt_1291853186) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853185, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], Field1: b_1291853185}));
    }
    
    switch (b_1291853185.kind) {
    case 2:
      a_1291853184[a_1291853184_Idx] = chckRange(getBiggestInt_1627390129(b_1291853185, 0), 0, 2);
      break;
    case 4:
      a_1291853184[a_1291853184_Idx] = parseEnum_1291853194(getStr_1627390106(b_1291853185, []));
      break;
    default: 
      if (true) {
      var fmtRes_1291853232 = [mnewString(0)];
      fmtRes_1291853232[0].push.apply(fmtRes_1291853232[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_1291853232, 0, [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], []);
      fmtRes_1291853232[0].push.apply(fmtRes_1291853232[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_1291853232, 0, pretty_1627394477(b_1291853185, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_1291853232[0]);
      }
      
      break;
    }

  
}

function fromJson_1291853297(a_1291853299, a_1291853299_Idx, b_1291853300, opt_1291853301) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853300, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [74,115,111,110,78,111,100,101], Field1: b_1291853300}));
    }
    
    a_1291853299[a_1291853299_Idx] = b_1291853300;

  
}

function fromJson_1291853124(a_1291853126, b_1291853127, opt_1291853128) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853127, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101], Field1: b_1291853127}));
    }
    
    if (!((b_1291853127.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853127.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853163 = 0;
    var numMatchedHEX60gensym16_1291853164 = 0;
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [107,105,110,100])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1291853182(a_1291853126, "kind", HEX5BHEX5D_1627393037(b_1291853127, [107,105,110,100]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[107,105,110,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [105,100])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1811939890(a_1291853126, "id", HEX5BHEX5D_1627393037(b_1291853127, [105,100]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[105,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [110,97,109,101])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1811939890(a_1291853126, "name", HEX5BHEX5D_1627393037(b_1291853127, [110,97,109,101]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[110,97,109,101], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [115,101,116,116,105,110,103,115])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1291853297(a_1291853126, "settings", HEX5BHEX5D_1627393037(b_1291853127, [115,101,116,116,105,110,103,115]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[115,101,116,116,105,110,103,115], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    if ((opt_1291853128.allowExtraKeys && opt_1291853128.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853128.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853163 == numMatchedHEX60gensym16_1291853164))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853163 == numMatchedHEX60gensym16_1291853164);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853127) == numMatchedHEX60gensym16_1291853164);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853127) == numHEX60gensym16_1291853163) && (numHEX60gensym16_1291853163 == numMatchedHEX60gensym16_1291853164));
    }
    }}
    var okHEX60gensym16_1291853320 = Temporary1;
    if (!(okHEX60gensym16_1291853320)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853127)), HEX24_369098760(numHEX60gensym16_1291853163), [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
    }
    

  
}

function fromJson_1291853096(a_1291853098, a_1291853098_Idx, b_1291853099, opt_1291853100) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853099, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,87,111,114,107,115,112,97,99,101,93], Field1: b_1291853099}));
    }
    
    if (a_1291853098[a_1291853098_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853099), 0, 2147483647), Temporary1)) { for (var i = a_1291853098[a_1291853098_Idx].length ; i < Temporary1 ; ++i) a_1291853098[a_1291853098_Idx].push(({kind: 0, id: [], name: [], settings: null})); }
               else { a_1291853098[a_1291853098_Idx].length = Temporary1; };
    Label2: {
      var i_1291853122 = 0;
      var val_1291853123 = null;
      var colontmp__536871225 = [];
      colontmp__536871225 = getElems_1627390175(b_1291853099, []);
      var i_536871226 = 0;
      var L_536871227 = (colontmp__536871225).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871226 < L_536871227)) break Label4;
            i_1291853122 = i_536871226;
            val_1291853123 = colontmp__536871225[chckIndx(i_536871226, 0, (colontmp__536871225).length - 1)];
            fromJson_1291853124(a_1291853098[a_1291853098_Idx][chckIndx(i_1291853122, 0, (a_1291853098[a_1291853098_Idx]).length - 1)], val_1291853123, opt_1291853100);
            i_536871226 = addInt(i_536871226, 1);
            if (!(((colontmp__536871225).length == L_536871227))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291853369(a_1291853371, b_1291853372, opt_1291853373) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853372, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,69,100,105,116,111,114], Field1: b_1291853372}));
    }
    
    if (!((b_1291853372.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853372.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853408 = 0;
    var numMatchedHEX60gensym16_1291853409 = 0;
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [102,105,108,101,110,97,109,101])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_1811939890(a_1291853371, "filename", HEX5BHEX5D_1627393037(b_1291853372, [102,105,108,101,110,97,109,101]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,108,101,110,97,109,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [97,115,116])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_2818585094(a_1291853371, "ast", HEX5BHEX5D_1627393037(b_1291853372, [97,115,116]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,115,116], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [108,97,110,103,117,97,103,101,73,68])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_1811939890(a_1291853371, "languageID", HEX5BHEX5D_1627393037(b_1291853372, [108,97,110,103,117,97,103,101,73,68]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,110,103,117,97,103,101,73,68], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [97,112,112,70,105,108,101])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_2818585094(a_1291853371, "appFile", HEX5BHEX5D_1627393037(b_1291853372, [97,112,112,70,105,108,101]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,112,112,70,105,108,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [119,111,114,107,115,112,97,99,101,73,100])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_1811939890(a_1291853371, "workspaceId", HEX5BHEX5D_1627393037(b_1291853372, [119,111,114,107,115,112,97,99,101,73,100]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,73,100], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    if ((opt_1291853373.allowExtraKeys && opt_1291853373.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853373.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853408 == numMatchedHEX60gensym16_1291853409))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853408 == numMatchedHEX60gensym16_1291853409);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853372) == numMatchedHEX60gensym16_1291853409);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853372) == numHEX60gensym16_1291853408) && (numHEX60gensym16_1291853408 == numMatchedHEX60gensym16_1291853409));
    }
    }}
    var okHEX60gensym16_1291853528 = Temporary1;
    if (!(okHEX60gensym16_1291853528)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853372)), HEX24_369098760(numHEX60gensym16_1291853408), [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
    }
    

  
}

function fromJson_1291853341(a_1291853343, a_1291853343_Idx, b_1291853344, opt_1291853345) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853344, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,69,100,105,116,111,114,93], Field1: b_1291853344}));
    }
    
    if (a_1291853343[a_1291853343_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853344), 0, 2147483647), Temporary1)) { for (var i = a_1291853343[a_1291853343_Idx].length ; i < Temporary1 ; ++i) a_1291853343[a_1291853343_Idx].push(({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []})); }
               else { a_1291853343[a_1291853343_Idx].length = Temporary1; };
    Label2: {
      var i_1291853367 = 0;
      var val_1291853368 = null;
      var colontmp__536871230 = [];
      colontmp__536871230 = getElems_1627390175(b_1291853344, []);
      var i_536871231 = 0;
      var L_536871232 = (colontmp__536871230).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871231 < L_536871232)) break Label4;
            i_1291853367 = i_536871231;
            val_1291853368 = colontmp__536871230[chckIndx(i_536871231, 0, (colontmp__536871230).length - 1)];
            fromJson_1291853369(a_1291853343[a_1291853343_Idx][chckIndx(i_1291853367, 0, (a_1291853343[a_1291853343_Idx]).length - 1)], val_1291853368, opt_1291853345);
            i_536871231 = addInt(i_536871231, 1);
            if (!(((colontmp__536871230).length == L_536871232))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291852898(a_1291852900, b_1291852901, opt_1291852902) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852901, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [69,100,105,116,111,114,83,116,97,116,101], Field1: b_1291852901}));
    }
    
    if (!((b_1291852901.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291852901.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291852945 = 0;
    var numMatchedHEX60gensym16_1291852946 = 0;
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [116,104,101,109,101])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "theme", HEX5BHEX5D_1627393037(b_1291852901, [116,104,101,109,101]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[116,104,101,109,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,83,105,122,101])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_2818586483(a_1291852900, "fontSize", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,83,105,122,101]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,83,105,122,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,82,101,103,117,108,97,114])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontRegular", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,82,101,103,117,108,97,114]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,82,101,103,117,108,97,114], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,66,111,108,100])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontBold", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,66,111,108,100]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontItalic", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,73,116,97,108,105,99]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,66,111,108,100,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontBoldItalic", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,66,111,108,100,73,116,97,108,105,99]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1291853096(a_1291852900, "workspaceFolders", HEX5BHEX5D_1627393037(b_1291852901, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [111,112,101,110,69,100,105,116,111,114,115])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1291853341(a_1291852900, "openEditors", HEX5BHEX5D_1627393037(b_1291852901, [111,112,101,110,69,100,105,116,111,114,115]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[111,112,101,110,69,100,105,116,111,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    if ((opt_1291852902.allowExtraKeys && opt_1291852902.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291852902.allowExtraKeys) {
    if (!((numHEX60gensym16_1291852945 == numMatchedHEX60gensym16_1291852946))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291852945 == numMatchedHEX60gensym16_1291852946);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291852901) == numMatchedHEX60gensym16_1291852946);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291852901) == numHEX60gensym16_1291852945) && (numHEX60gensym16_1291852945 == numMatchedHEX60gensym16_1291852946));
    }
    }}
    var okHEX60gensym16_1291853540 = Temporary1;
    if (!(okHEX60gensym16_1291853540)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291852901)), HEX24_369098760(numHEX60gensym16_1291852945), [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
    }
    

  
}

function jsonTo_1291852892(b_1291852894, opt_1291852896) {
  var result_1291852897 = [({theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []})];

    fromJson_1291852898(result_1291852897[0], b_1291852894, opt_1291852896);

  return result_1291852897[0];

}

function getVarType_1627395261(x_1627395262, isRawNumber_1627395263, isRawNumber_1627395263_Idx) {
        var Temporary1;

  var result_1627395264 = 0;

  BeforeRet: {
    result_1627395264 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1627395262)))) {
    case "[object Array]":
      result_1627395264 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1627395264 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1627395262)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1627395262) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1627395262)) {
      result_1627395264 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1627395263[isRawNumber_1627395263_Idx] = true;
        result_1627395264 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1627395264 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1627395264 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1627395264 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1627395264 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,57,56,51,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }
  };

  return result_1627395264;

}

function len_1627395282(x_1627395283) {
  var result_1627395284 = 0;

          result_1627395284 = x_1627395283.length;
    

  return result_1627395284;

}

function convertObject_1627395285(x_1627395286) {
  var result_1627395287 = null;

    var isRawNumber_1627395288 = [false];
    switch (getVarType_1627395261(x_1627395286, isRawNumber_1627395288, 0)) {
    case 6:
      result_1627395287 = newJArray_1627390082();
      Label1: {
        var i_1627395293 = 0;
        var colontmp__536871235 = 0;
        colontmp__536871235 = len_1627395282(x_1627395286);
        var i_536871236 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_536871236 < colontmp__536871235)) break Label3;
              i_1627395293 = i_536871236;
              add_1627390190(result_1627395287, convertObject_1627395285(x_1627395286[i_1627395293]));
              i_536871236 = addInt(i_536871236, 1);
            }
        };
      };
      break;
    case 5:
      result_1627395287 = newJObject_1627390051();
      for (var property in x_1627395286) {
        if (x_1627395286.hasOwnProperty(property)) {
      
      var nimProperty_1627395294 = null;
      var nimValue_1627395295 = null;
      nimProperty_1627395294 = property; nimValue_1627395295 = x_1627395286[property];
      HEX5BHEX5DHEX3D_1627391903(result_1627395287, cstrToNimstr(nimProperty_1627395294), convertObject_1627395285(nimValue_1627395295));
      }}
      break;
    case 2:
      result_1627395287 = newJInt_1627390040((x_1627395286));
      break;
    case 3:
      result_1627395287 = newJFloat_1627390043((x_1627395286));
      break;
    case 4:
      if (isRawNumber_1627395288[0]) {
      var value_1627395304 = null;
      value_1627395304 = x_1627395286.toString();
      result_1627395287 = newJRawNumber_1627390037(cstrToNimstr(value_1627395304));
      }
      else {
        result_1627395287 = newJString_1627389994(cstrToNimstr((x_1627395286)));
      }
      
      break;
    case 1:
      result_1627395287 = newJBool_1627390046((x_1627395286));
      break;
    case 0:
      result_1627395287 = newJNull_1627390049();
      break;
    }

  return result_1627395287;

}

function parseJson_1627395313(buffer_1627395314) {
  var result_1627395315 = null;

  BeforeRet: {
    result_1627395315 = convertObject_1627395285(JSON.parse(toJSStr(buffer_1627395314)));
    break BeforeRet;
  };

  return result_1627395315;

}

function nosisAbsolute(path_1426063472) {
  var result_1426063473 = false;

  BeforeRet: {
    if (((path_1426063472).length == 0)) {
    result_1426063473 = false;
    break BeforeRet;
    }
    
    result_1426063473 = (path_1426063472[chckIndx(0, 0, (path_1426063472).length - 1)] == 47);
  };

  return result_1426063473;

}

function absolutePath_1426063704(path_1426063705, root_1426063706) {
    var Temporary1;

  var result_1426063707 = [];

    if (nosisAbsolute(path_1426063705)) {
    Temporary1 = path_1426063705;
    }
    else {
      if (!(nosisAbsolute(root_1426063706))) {
      raiseException({message: ([84,104,101,32,115,112,101,99,105,102,105,101,100,32,114,111,111,116,32,105,115,32,110,111,116,32,97,98,115,111,108,117,116,101,58,32] || []).concat(root_1426063706 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      
    Temporary1 = nosjoinPath(root_1426063706, path_1426063705);
    }
    
    result_1426063707 = nimCopy(null, Temporary1, NTI33554449);

  return result_1426063707;

}

function nosgetCurrentDir() {
  var result_1426063698 = [];

    if (true) {
    failedAssertImpl_268435515(makeNimstrLit("ospaths2.nim(849, 7) `false` use -d:nodejs to have `getCurrentDir` defined"));
    }
    

  return result_1426063698;

}

function newWorkspaceFolderLocal_2264924264(path_2264924265) {
  var result_2264924266 = null;

    result_2264924266 = ({m_type: NTI2264924164, path: [], name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2264924266.path = nimCopy(null, path_2264924265, NTI33554449);
    var fmtRes_2264924274 = [mnewString(0)];
    fmtRes_2264924274[0].push.apply(fmtRes_2264924274[0], [76,111,99,97,108,58]);;
    formatValue_721420459(fmtRes_2264924274, 0, absolutePath_1426063704(path_2264924265, nosgetCurrentDir()), []);
    result_2264924266.name = nimCopy(null, fmtRes_2264924274[0], NTI33554449);

  return result_2264924266;

}

function newWorkspaceFolderLocal_2264924293(settings_2264924294) {
  var result_2264924295 = null;

  BeforeRet: {
    var path_2264924296 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2264924294, [112,97,116,104]), []);
    result_2264924295 = newWorkspaceFolderLocal_2264924264(path_2264924296);
    break BeforeRet;
  };

  return result_2264924295;

}

function newWorkspaceFolderAbsytreeServer_2399144372(settings_2399144373) {
  var result_2399144374 = null;

  BeforeRet: {
    var url_2399144375 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2399144373, [98,97,115,101,85,114,108]), []);
    result_2399144374 = newWorkspaceFolderAbsytreeServer_2399144348(url_2399144375);
    break BeforeRet;
  };

  return result_2399144374;

}

function newWorkspaceFolderGithub_2281703740(settings_2281703741) {
  var result_2281703742 = null;

  BeforeRet: {
    var user_2281703743 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [117,115,101,114]), []);
    var repository_2281703744 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [114,101,112,111,115,105,116,111,114,121]), []);
    var branchOrHash_2281703745 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [98,114,97,110,99,104,79,114,72,97,115,104]), []);
    result_2281703742 = newWorkspaceFolderGithub_2281703680(user_2281703743, repository_2281703744, branchOrHash_2281703745);
    break BeforeRet;
  };

  return result_2281703742;

}

function formatValue_1291853582(result_1291853584, result_1291853584_Idx, value_1291853585, specifier_1291853586) {
    formatValue_721420459(result_1291853584, result_1291853584_Idx, reprEnum(value_1291853585, NTI1291845663), specifier_1291853586);

  
}

function new_1291853619() {
  var result_1291853622 = null;

  BeforeRet: {
    var r_1291853624 = null;
    r_1291853624 = ({m_type: NTI2801795076});
    result_1291853622 = r_1291853624;
    break BeforeRet;
  };

  return result_1291853622;

}

function getWorkspaceFolder_1291851105(self_1291851106, id_1291851107) {
  var result_1291855515 = ({val: null});

  BeforeRet: {
    Label1: {
      var wf_1291855519 = null;
      var i_536871239 = 0;
      var L_536871240 = (self_1291851106.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871239 < L_536871240)) break Label3;
            wf_1291855519 = self_1291851106.workspace.folders[chckIndx(i_536871239, 0, (self_1291851106.workspace.folders).length - 1)];
            if (HEX3DHEX3D_2046820626(wf_1291855519.id, id_1291851107)) {
            result_1291855515 = nimCopy(result_1291855515, some_1291855520(wf_1291855519), NTI2197815306);
            break BeforeRet;
            }
            
            i_536871239 = addInt(i_536871239, 1);
            if (!(((self_1291851106.workspace.folders).length == L_536871240))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291855515 = nimCopy(result_1291855515, none_1291855533(), NTI2197815306);
    break BeforeRet;
  };

  return result_1291855515;

}

function newTextDocument_2818579080(filename_2818579081, app_2818579082, workspaceFolder_2818579084) {
  var result_2818579085 = null;

    result_2818579085 = newTextDocument_2818579086(filename_2818579081, [], app_2818579082);
    result_2818579085.workspace = nimCopy(result_2818579085.workspace, workspaceFolder_2818579084, NTI2197815306);
    load_2197815320(result_2818579085, []);

  return result_2818579085;

}

function newEditor_1291851109(backend_1291851110, platform_1291851111) {
    
function HEX3Aanonymous_1291851125(event_1291851143) {
        handleKeyPress_1291851063(self_1291851113, event_1291851143.Field0, event_1291851143.Field1);

      
    }
    
function HEX3Aanonymous_1291851197(event_1291851215) {
        handleKeyRelease_1291851067(self_1291851113, event_1291851215.Field0, event_1291851215.Field1);

      
    }
    
function HEX3Aanonymous_1291851246(event_1291851264) {
        handleRune_1291851071(self_1291851113, event_1291851264.Field0, event_1291851264.Field1);

      
    }
    
function HEX3Aanonymous_1291851295(event_1291851313) {
        handleMousePress_1291851075(self_1291851113, event_1291851313.Field0, event_1291851313.Field1, event_1291851313.Field2);

      
    }
    
function HEX3Aanonymous_1291851367(event_1291851385) {
        handleMouseRelease_1291851080(self_1291851113, event_1291851385.Field0, event_1291851385.Field1, event_1291851385.Field2);

      
    }
    
function HEX3Aanonymous_1291851416(event_1291851434) {
        handleMouseMove_1291851085(self_1291851113, event_1291851434.Field0, event_1291851434.Field1, event_1291851434.Field2, event_1291851434.Field3);

      
    }
    
function HEX3Aanonymous_1291851488(event_1291851506) {
        handleScroll_1291851091(self_1291851113, event_1291851506.Field1, event_1291851506.Field0, event_1291851506.Field2);

      
    }
    
function HEX3Aanonymous_1291851560(event_1291851578) {
        handleDropFile_1291851096(self_1291851113, event_1291851578.Field0, event_1291851578.Field1);

      
    }
    
function HEX3Aanonymous_1291851632() {
        self_1291851113.closeRequested = true;

      
    }
      
function HEX3Aanonymous_1291852840(actionHEX60gensym73HEX60gensym74_1291852841, argHEX60gensym73HEX60gensym74_1291852842) {
          var Temporary1;

        var result_1291852843 = 0;

        BeforeRet: {
          if (handlerHEX60gensym73_1291852828.config.handleActions) {
          var action_1291852844 = nimCopy(null, actionHEX60gensym73HEX60gensym74_1291852841, NTI33554449);
          var arg_1291852845 = nimCopy(null, argHEX60gensym73HEX60gensym74_1291852842, NTI33554449);
          if (handleAction_1291848870(self_1291851113, action_1291852844, arg_1291852845)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym73HEX60gensym74_1291852846 = Temporary1;
          if (handlerHEX60gensym73_1291852828.config.consumeAllActions) {
          result_1291852843 = 3;
          break BeforeRet;
          }
          
          result_1291852843 = responseHEX60gensym73HEX60gensym74_1291852846;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym73_1291852828.config.consumeAllActions) {
          result_1291852843 = 3;
          break BeforeRet;
          }
          else {
            result_1291852843 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852843;

      }
      
function HEX3Aanonymous_1291852848(inputHEX60gensym73HEX60gensym75_1291852849) {
        var result_1291852850 = 0;

        BeforeRet: {
          if (handlerHEX60gensym73_1291852828.config.handleInputs) {
          var input_1291852851 = nimCopy(null, inputHEX60gensym73HEX60gensym75_1291852849, NTI33554449);
          result_1291852850 = 1;
          break BeforeRet;
          }
          else {
            result_1291852850 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852850;

      }
      
function HEX3Aanonymous_1291852871(actionHEX60gensym76HEX60gensym77_1291852872, argHEX60gensym76HEX60gensym77_1291852873) {
          var Temporary1;

        var result_1291852874 = 0;

        BeforeRet: {
          if (handlerHEX60gensym76_1291852859.config.handleActions) {
          var action_1291852875 = nimCopy(null, actionHEX60gensym76HEX60gensym77_1291852872, NTI33554449);
          var arg_1291852876 = nimCopy(null, argHEX60gensym76HEX60gensym77_1291852873, NTI33554449);
          if (handleAction_1291848870(self_1291851113, action_1291852875, arg_1291852876)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym76HEX60gensym77_1291852877 = Temporary1;
          if (handlerHEX60gensym76_1291852859.config.consumeAllActions) {
          result_1291852874 = 3;
          break BeforeRet;
          }
          
          result_1291852874 = responseHEX60gensym76HEX60gensym77_1291852877;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym76_1291852859.config.consumeAllActions) {
          result_1291852874 = 3;
          break BeforeRet;
          }
          else {
            result_1291852874 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852874;

      }
      
function HEX3Aanonymous_1291852879(inputHEX60gensym76HEX60gensym78_1291852880) {
        var result_1291852881 = 0;

        BeforeRet: {
          if (handlerHEX60gensym76_1291852859.config.handleInputs) {
          var input_1291852882 = nimCopy(null, inputHEX60gensym76HEX60gensym78_1291852880, NTI33554449);
          result_1291852881 = 1;
          break BeforeRet;
          }
          else {
            result_1291852881 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852881;

      }
              var Temporary8;
        var Temporary12;
              var Temporary19;
                var Temporary20;

  var result_1291851112 = null;

  BeforeRet: {
    var self_1291851113 = {backend: 0, platform: null, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], clearAtlasTimer: 0.0, timer: 0.0, frameTimer: 0.0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), closeRequested: false, widget: null, eventHandlerConfigs: ({data: [], counter: 0}), options: null, callbacks: ({data: [], counter: 0}), logger: null, workspace: null, scriptContext: null, initializeCalled: false, statusBarOnTop: false, currentView: 0, views: [], layout: null, layout_props: null, theme: null, loadedFontSize: 0.0, editors: ({data: [], counter: 0}), popups: [], onEditorRegistered: ({handlers: []}), onEditorDeregistered: ({handlers: []}), commandLineTextEditor: null, eventHandler: null, commandLineEventHandler: null, commandLineMode: false, modeEventHandler: null, currentMode: [], editor_defaults: []};
    self_1291851113 = createWithPrototype(editor_prototype, self_1291851113);
    gEditor = self_1291851113;
    self_1291851113.platform = platform_1291851111;
    self_1291851113.backend = backend_1291851110;
    self_1291851113.statusBarOnTop = false;
    var _ = subscribe_1291851158(platform_1291851111.onKeyPress, HEX3Aanonymous_1291851125);
    var _ = subscribe_1291851158(platform_1291851111.onKeyRelease, HEX3Aanonymous_1291851197);
    var _ = subscribe_1291851158(platform_1291851111.onRune, HEX3Aanonymous_1291851246);
    var _ = subscribe_1291851328(platform_1291851111.onMousePress, HEX3Aanonymous_1291851295);
    var _ = subscribe_1291851328(platform_1291851111.onMouseRelease, HEX3Aanonymous_1291851367);
    var _ = subscribe_1291851449(platform_1291851111.onMouseMove, HEX3Aanonymous_1291851416);
    var _ = subscribe_1291851521(platform_1291851111.onScroll, HEX3Aanonymous_1291851488);
    var _ = subscribe_1291851593(platform_1291851111.onDropFile, HEX3Aanonymous_1291851560);
    var _ = subscribe_1291851665(platform_1291851111.onCloseRequested, HEX3Aanonymous_1291851632);
    self_1291851113.timer = startTimer_2080374869();
    self_1291851113.frameTimer = startTimer_2080374869();
    self_1291851113.layout = {m_type: NTI1291845643};
    self_1291851113.layout_props = {props: toTable_1291851675([{Field0: [109,97,105,110,45,115,112,108,105,116], Field1: 0.5}])};
    fontSizeHEX3D_2768240776(self_1291851113.platform, 20.0);
    self_1291851113.fontRegular = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], NTI33554449);
    self_1291851113.fontBold = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], NTI33554449);
    self_1291851113.fontItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851113.fontBoldItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851113.editor_defaults = nimCopy(null, [{m_type: NTI2818572510, editor: null, document: null, selectionsInternal: [], selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, completionsBaseIndex: 0, completionsScrollOffset: 0.0, lastItems: [], lastCompletionsWidget: null, lastCompletionWidgets: [], showCompletions: false, scrollToCompletion: ({val: 0, has: false}), id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI2969568620, editor: null, document: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), lastRootNode: null, currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditor: null, textDocument: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}], NTI1291849426);
    self_1291851113.workspace = ({folders: []});
    self_1291851113.theme = defaultTheme_2516586063();
    setTheme_1291851003(self_1291851113, [46,47,116,104,101,109,101,115,47,116,111,107,121,111,45,110,105,103,104,116,45,99,111,108,111,114,45,116,104,101,109,101,46,106,115,111,110]);
    self_1291851113.currentView = 0;
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]), [60,67,45,120,62,60,67,45,120,62], [113,117,105,116]);
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]), [60,67,65,83,45,114,62], [114,101,108,111,97,100,45,99,111,110,102,105,103]);
    self_1291851113.options = newJObject_1627390051();
    Label1: {
      var handlerHEX60gensym73_1291852828 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym73_1291852828.config = getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]);
      handlerHEX60gensym73_1291852828.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]));
      handlerHEX60gensym73_1291852828.handleAction = HEX3Aanonymous_1291852840;
      handlerHEX60gensym73_1291852828.handleInput = HEX3Aanonymous_1291852848;
    };
    self_1291851113.eventHandler = handlerHEX60gensym73_1291852828;
    Label2: {
      var handlerHEX60gensym76_1291852859 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym76_1291852859.config = getEventHandlerConfig_1291849162(self_1291851113, [99,111,109,109,97,110,100,76,105,110,101]);
      handlerHEX60gensym76_1291852859.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(self_1291851113, [99,111,109,109,97,110,100,76,105,110,101]));
      handlerHEX60gensym76_1291852859.handleAction = HEX3Aanonymous_1291852871;
      handlerHEX60gensym76_1291852859.handleInput = HEX3Aanonymous_1291852879;
    };
    self_1291851113.commandLineEventHandler = handlerHEX60gensym76_1291852859;
    self_1291851113.commandLineMode = false;
    self_1291851113.commandLineTextEditor = newTextEditor_2818594007(newTextDocument_2818579086([], [], false), self_1291851113);
    self_1291851113.commandLineTextEditor.renderHeader = false;
    self_1291851113.commandLineTextEditor.lineNumbers = nimCopy(self_1291851113.commandLineTextEditor.lineNumbers, some_3170894358(0), NTI2818572554);
    getCommandLineTextEditor_1291851060(self_1291851113).hideCursorWhenInactive = true;
    var state_1291852891 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
++excHandler;
    try {
    state_1291852891 = nimCopy(state_1291852891, jsonTo_1291852892(parseJson_1627395313(loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115,111,110])), {allowMissingKeys: true, allowExtraKeys: true}), NTI1291845666);
    setTheme_1291851003(self_1291851113, state_1291852891.theme);
    self_1291851113.loadedFontSize = state_1291852891.fontSize;
    fontSizeHEX3D_2768240776(self_1291851113.platform, state_1291852891.fontSize);
    if ((0 < (state_1291852891.fontRegular).length)) {
    self_1291851113.fontRegular = nimCopy(null, state_1291852891.fontRegular, NTI33554449);
    }
    
    if ((0 < (state_1291852891.fontBold).length)) {
    self_1291851113.fontBold = nimCopy(null, state_1291852891.fontBold, NTI33554449);
    }
    
    if ((0 < (state_1291852891.fontItalic).length)) {
    self_1291851113.fontItalic = nimCopy(null, state_1291852891.fontItalic, NTI33554449);
    }
    
    if ((0 < (state_1291852891.fontBoldItalic).length)) {
    self_1291851113.fontBoldItalic = nimCopy(null, state_1291852891.fontBoldItalic, NTI33554449);
    }
    
    self_1291851113.options = parseJson_1627395313(loadApplicationFile_2365587474(fs_2365587509, [111,112,116,105,111,110,115,46,106,115,111,110]));
    var fmtRes_1291853548 = [mnewString(0)];
    fmtRes_1291853548[0].push.apply(fmtRes_1291853548[0], [82,101,115,116,111,114,105,110,103,32,111,112,116,105,111,110,115,58,32]);;
    formatValue_721420459(fmtRes_1291853548, 0, pretty_1627394477(self_1291851113.options, 2), []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853548[0], NTI33554449)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853553 = [mnewString(0)];
    fmtRes_1291853553[0].push.apply(fmtRes_1291853553[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,112,114,101,118,105,111,117,115,32,115,116,97,116,101,32,102,114,111,109,32,99,111,110,102,105,103,32,102,105,108,101,58,32]);;
    formatValue_721420459(fmtRes_1291853553, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853553[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848874(self_1291851113, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,119,111,114,107,115,112,97,99,101,115], false)) {
    Label4: {
      var wf_1291853576 = ({kind: 0, id: [], name: [], settings: null});
      var i_536870985 = 0;
      var L_536870986 = (state_1291852891.workspaceFolders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536870985 < L_536870986)) break Label6;
            wf_1291853576 = state_1291852891.workspaceFolders[chckIndx(i_536870985, 0, (state_1291852891.workspaceFolders).length - 1)];
            Label7: {
              switch (wf_1291853576.kind) {
              case 0:
                Temporary8 = newWorkspaceFolderLocal_2264924293(wf_1291853576.settings);
                break;
              case 1:
                Temporary8 = newWorkspaceFolderAbsytreeServer_2399144372(wf_1291853576.settings);
                break;
              case 2:
                Temporary8 = newWorkspaceFolderGithub_2281703740(wf_1291853576.settings);
                break;
              default: 
                var fmtRes_1291853581 = [mnewString(0)];
                fmtRes_1291853581[0].push.apply(fmtRes_1291853581[0], makeNimstrLit("[editor][restore-open-workspaces] Unhandled or unknown workspace folder kind "));;
                formatValue_1291853582(fmtRes_1291853581, 0, wf_1291853576.kind, []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853581[0], NTI33554449)]);
                break Label7;
                break;
              }
              var folder_1291853590 = Temporary8;
              folder_1291853590.id = nimCopy(folder_1291853590.id, parseId_2046820640(wf_1291853576.id), NTI2046820355);
              folder_1291853590.name = nimCopy(null, wf_1291853576.name, NTI33554449);
              if (addWorkspaceFolder_1291851102(self_1291851113, folder_1291853590)) {
              var fmtRes_1291853595 = [mnewString(0)];
              fmtRes_1291853595[0].push.apply(fmtRes_1291853595[0], [82,101,115,116,111,114,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
              formatValue_721420459(fmtRes_1291853595, 0, folder_1291853590.name, []);
              fmtRes_1291853595[0].push.apply(fmtRes_1291853595[0], [32,40]);;
              formatValue_3036676340(fmtRes_1291853595, 0, folder_1291853590.id, []);
              fmtRes_1291853595[0].push.apply(fmtRes_1291853595[0], [41]);;
              log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853595[0], NTI33554449)]);
              }
              
            };
            i_536870985 = addInt(i_536870985, 1);
            if (!(((state_1291852891.workspaceFolders).length == L_536870986))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
++excHandler;
    try {
    var searchPaths_1291853605 = [[115,114,99], [115,99,114,105,112,116,105,110,103]];
    var searchPathsJson_1291853610 = HEX7BHEX7D_1627393316(self_1291851113.options, [[115,99,114,105,112,116,105,110,103], [115,101,97,114,99,104,45,112,97,116,104,115]]);
    if (!((searchPathsJson_1291853610 == null))) {
    Label10: {
      var sp_1291853614 = null;
      if (!((searchPathsJson_1291853610.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(searchPathsJson_1291853610.kind, NTI1627389955) || []));
      }
      
      Label11: {
        var i_536870995 = null;
        var colontmp__536870996 = [];
        var Temporary12 = searchPathsJson_1291853610;
        if (ConstSet302[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__536870996 = Temporary12.elems;
        var i_536870997 = 0;
        var L_536870998 = (colontmp__536870996).length;
        Label13: {
            Label14: while (true) {
            if (!(i_536870997 < L_536870998)) break Label14;
              i_536870995 = colontmp__536870996[chckIndx(i_536870997, 0, (colontmp__536870996).length - 1)];
              sp_1291853614 = i_536870995;
              searchPaths_1291853605.push(getStr_1627390106(sp_1291853614, []));;
              i_536870997 = addInt(i_536870997, 1);
              if (!(((colontmp__536870996).length == L_536870998))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    self_1291851113.scriptContext = new_1291853619();
    init_2751463438(self_1291851113.scriptContext, []);
    var _ = false;
    self_1291851113.initializeCalled = true;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853655 = [mnewString(0)];
    fmtRes_1291853655[0].push.apply(fmtRes_1291853655[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,99,111,110,102,105,103,58,32]);;
    formatValue_721420459(fmtRes_1291853655, 0, getCurrentExceptionMsg_33556469(), []);
    addChar(fmtRes_1291853655[0], 10);;
    formatValue_721420459(fmtRes_1291853655, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853655[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848874(self_1291851113, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,101,100,105,116,111,114,115], false)) {
    Label15: {
      var editorState_1291853678 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_536871002 = 0;
      var L_536871003 = (state_1291852891.openEditors).length;
      Label16: {
          Label17: while (true) {
          if (!(i_536871002 < L_536871003)) break Label17;
            editorState_1291853678 = state_1291852891.openEditors[chckIndx(i_536871002, 0, (state_1291852891.openEditors).length - 1)];
            Label18: {
              var workspaceFolder_1291853679 = getWorkspaceFolder_1291851105(self_1291851113, parseId_2046820640(editorState_1291853678.workspaceId));
              if (editorState_1291853678.ast) {
              Temporary19 = newAstDocument_2969571604(editorState_1291853678.filename, editorState_1291853678.appFile, workspaceFolder_1291853679);
              }
              else {
++excHandler;
                try {
                Temporary20 = newTextDocument_2818579080(editorState_1291853678.filename, editorState_1291853678.appFile, workspaceFolder_1291853679);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                var fmtRes_1291853684 = [mnewString(0)];
                fmtRes_1291853684[0].push.apply(fmtRes_1291853684[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
                formatValue_721420459(fmtRes_1291853684, 0, editorState_1291853678.filename, []);
                fmtRes_1291853684[0].push.apply(fmtRes_1291853684[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
                formatValue_721420459(fmtRes_1291853684, 0, getCurrentExceptionMsg_33556469(), []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853684[0], NTI33554449)]);
                break Label18;
                lastJSError = prevJSError;
                } finally {
                }
              Temporary19 = Temporary20;
              }
              
              var document_1291853685 = Temporary19;
              createView_1291848958(self_1291851113, document_1291853685);
            };
            i_536871002 = addInt(i_536871002, 1);
            if (!(((state_1291852891.openEditors).length == L_536871003))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    result_1291851112 = self_1291851113;
    break BeforeRet;
  };

  return result_1291851112;

}

function fromJsonHook_2516583208(color_2516583209, jsonNode_2516583210) {
    var Temporary1;

  BeforeRet: {
    if ((jsonNode_2516583210.kind == 0)) {
    color_2516583209 = nimCopy(color_2516583209, parseHex_2533359858([48,48,48,48,48,48]), NTI2550136835);
    break BeforeRet;
    }
    
    var Temporary1 = jsonNode_2516583210;
    if (ConstSet304[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    color_2516583209 = nimCopy(color_2516583209, parseHexVar_2516582448(Temporary1.str), NTI2550136835);
  };

  
}

function fromJson_2516583240(a_2516583242, b_2516583243, opt_2516583244) {
    if (!(!(HEX3DHEX3D_1627392026(b_2516583243, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,111,108,111,114], Field1: b_2516583243}));
    }
    
    fromJsonHook_2516583208(a_2516583242, b_2516583243);

  
}

function jsonTo_2516583234(b_2516583236, opt_2516583238) {
  var result_2516583239 = [({r: 0.0, g: 0.0, b: 0.0, a: 0.0})];

    fromJson_2516583240(result_2516583239[0], b_2516583236, opt_2516583238);

  return result_2516583239[0];

}

function hasKey_2516582658(t_2516582661, key_2516582662) {
  var result_2516582663 = false;

    var hc_2516582664 = [0];
    result_2516582663 = (0 <= rawGet_2516582665(t_2516582661, key_2516582662, hc_2516582664, 0));

  return result_2516582663;

}

function contains_2516582652(t_2516582655, key_2516582656) {
  var result_2516582657 = false;

  BeforeRet: {
    result_2516582657 = hasKey_2516582658(t_2516582655, key_2516582656);
    break BeforeRet;
  };

  return result_2516582657;

}

function none_2516583264() {
  var result_2516583271 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

  return result_2516583271;

}

function HEX5BHEX5D_2516582957(t_2516582960, key_2516582961) {
  var result_2516582962 = null;

    var hcHEX60gensym22_2516582963 = [0];
    var indexHEX60gensym22_2516582970 = rawGet_2516582665(t_2516582960, key_2516582961, hcHEX60gensym22_2516582963, 0);
    if ((0 <= indexHEX60gensym22_2516582970)) {
    result_2516582962 = t_2516582960.data[chckIndx(indexHEX60gensym22_2516582970, 0, (t_2516582960.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2516582961);
    }
    

  return result_2516582962;

}

function contains_855639877(s_855639878, sub_855639879) {
  var result_855639880 = false;

  BeforeRet: {
    result_855639880 = (0 <= nsuFindStr(s_855639878, sub_855639879, 0, -1));
    break BeforeRet;
  };

  return result_855639880;

}

function fromJsonHook_2516583215(style_2516583216, jsonNode_2516583217) {
    var Temporary1;

    style_2516583216 = nimCopy(style_2516583216, ConstSet309, NTI2516582915);
    var Temporary1 = jsonNode_2516583217;
    if (ConstSet310[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var text_2516583218 = nimCopy(null, Temporary1.str, NTI33554449);
    if (contains_855639877(text_2516583218, [105,116,97,108,105,99])) {
    style_2516583216[0] = true;
    }
    
    if (contains_855639877(text_2516583218, [98,111,108,100])) {
    style_2516583216[2] = true;
    }
    
    if (contains_855639877(text_2516583218, [117,110,100,101,114,108,105,110,101])) {
    style_2516583216[1] = true;
    }
    

  
}

function fromJson_2516583278(a_2516583280, b_2516583281, opt_2516583282) {
    if (!(!(HEX3DHEX3D_1627392026(b_2516583281, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,116,91,70,111,110,116,83,116,121,108,101,93], Field1: b_2516583281}));
    }
    
    fromJsonHook_2516583215(a_2516583280, b_2516583281);

  
}

function jsonTo_2516583272(b_2516583274, opt_2516583276) {
  var result_2516583277 = [{}];

    fromJson_2516583278(result_2516583277[0], b_2516583274, opt_2516583276);

  return result_2516583277[0];

}

function jsonToTheme_2516583298(json_2516583299, opt_2516583300) {
      var Temporary2;
      var Temporary6;
            var Temporary9;
                var Temporary12;
                      var Temporary15;

  var result_2516583301 = null;

    result_2516583301 = {path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})};
    result_2516583301.name = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [110,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    if (hasKey_1627393154(json_2516583299, [116,121,112,101])) {
    result_2516583301.typ = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [116,121,112,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2516583299, [99,111,108,111,114,83,112,97,99,101,78,97,109,101])) {
    result_2516583301.colorSpace = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [99,111,108,111,114,83,112,97,99,101,78,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2516583299, [99,111,108,111,114,115])) {
    Label1: {
      var key_2516583321 = [];
      var value_2516583322 = null;
      var colontmp__536871243 = ({data: [], counter: 0, first: 0, last: 0});
      var Temporary2 = HEX5BHEX5D_1627393037(json_2516583299, [99,111,108,111,114,115]);
      if (ConstSet303[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      colontmp__536871243 = nimCopy(colontmp__536871243, Temporary2.fields, NTI1627389966);
      var L_536871244 = len_1627392114(colontmp__536871243);
      if ((0 < colontmp__536871243.counter)) {
      var h_536871245 = colontmp__536871243.first;
      Label3: {
          Label4: while (true) {
          if (!(0 <= h_536871245)) break Label4;
            var nxt_536871247 = colontmp__536871243.data[chckIndx(h_536871245, 0, (colontmp__536871243.data).length - 1)].Field1;
            if (isFilled_1308622880(colontmp__536871243.data[chckIndx(h_536871245, 0, (colontmp__536871243.data).length - 1)].Field0)) {
            var colontmp__536871249 = nimCopy(null, {Field0: nimCopy(null, colontmp__536871243.data[chckIndx(h_536871245, 0, (colontmp__536871243.data).length - 1)].Field2, NTI33554449), Field1: colontmp__536871243.data[chckIndx(h_536871245, 0, (colontmp__536871243.data).length - 1)].Field3}, NTI1627391161);
            key_2516583321 = colontmp__536871249["Field0"];
            value_2516583322 = colontmp__536871249["Field1"];
            HEX5BHEX5DHEX3D_2516583368(result_2516583301.colors, key_2516583321, jsonTo_2516583234(value_2516583322, {allowExtraKeys: false, allowMissingKeys: false}));
            if (!((len_1627392114(colontmp__536871243) == L_536871244))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_536871245 = nxt_536871247;
          }
      };
      }
      
    };
    }
    
    if (hasKey_1627393154(json_2516583299, [116,111,107,101,110,67,111,108,111,114,115])) {
    Label5: {
      var item_2516584633 = null;
      var colontmp__536871260 = [];
      var Temporary6 = HEX5BHEX5D_1627393037(json_2516583299, [116,111,107,101,110,67,111,108,111,114,115]);
      if (ConstSet305[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      colontmp__536871260 = Temporary6.elems;
      var i_536871261 = 0;
      var L_536871262 = (colontmp__536871260).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536871261 < L_536871262)) break Label8;
            item_2516584633 = colontmp__536871260[chckIndx(i_536871261, 0, (colontmp__536871260).length - 1)];
            var scopes_2516584638 = [];
            if (hasKey_1627393154(item_2516584633, [115,99,111,112,101])) {
            var scope_2516584639 = HEX5BHEX5D_1627393037(item_2516584633, [115,99,111,112,101]);
            if ((scope_2516584639.kind == 4)) {
            var Temporary9 = scope_2516584639;
            if (ConstSet306[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
            var Temporary10 = nimCopy(null, Temporary9.str, NTI33554449);
            scopes_2516584638.push(Temporary10);;
            }
            else {
              Label11: {
                var scopeName_2516584651 = null;
                var colontmp__536871252 = [];
                var Temporary12 = scope_2516584639;
                if (ConstSet307[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
                colontmp__536871252 = Temporary12.elems;
                var i_536871253 = 0;
                var L_536871254 = (colontmp__536871252).length;
                Label13: {
                    Label14: while (true) {
                    if (!(i_536871253 < L_536871254)) break Label14;
                      scopeName_2516584651 = colontmp__536871252[chckIndx(i_536871253, 0, (colontmp__536871252).length - 1)];
                      var Temporary15 = scopeName_2516584651;
                      if (ConstSet308[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
                      var Temporary16 = nimCopy(null, Temporary15.str, NTI33554449);
                      scopes_2516584638.push(Temporary16);;
                      i_536871253 = addInt(i_536871253, 1);
                      if (!(((colontmp__536871252).length == L_536871254))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            }
            
            }
            else {
            scopes_2516584638.push([46]);;
            }
            
            var settings_2516584660 = HEX5BHEX5D_1627393037(item_2516584633, [115,101,116,116,105,110,103,115]);
            Label17: {
              var scope_2516584664 = [];
              var i_536871257 = 0;
              var L_536871258 = (scopes_2516584638).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536871257 < L_536871258)) break Label19;
                    scope_2516584664 = scopes_2516584638[chckIndx(i_536871257, 0, (scopes_2516584638).length - 1)];
                    if (!(contains_2516582652(result_2516583301.tokenColors, scope_2516584664))) {
                    HEX5BHEX5DHEX3D_2516584766(result_2516583301.tokenColors, scope_2516584664, {foreground: none_2516583264(), background: none_2516583264(), fontStyle: {}});
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [102,111,114,101,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).foreground = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).foreground, some_2516583251(jsonTo_2516583234(HEX5BHEX5D_1627393037(settings_2516584660, [102,111,114,101,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2516582412);
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [98,97,99,107,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).background = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).background, some_2516583251(jsonTo_2516583234(HEX5BHEX5D_1627393037(settings_2516584660, [98,97,99,107,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2516582412);
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [102,111,110,116,83,116,121,108,101])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).fontStyle = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).fontStyle, jsonTo_2516583272(HEX5BHEX5D_1627393037(settings_2516584660, [102,111,110,116,83,116,121,108,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2516582423);
                    }
                    
                    i_536871257 = addInt(i_536871257, 1);
                    if (!(((scopes_2516584638).length == L_536871258))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536871261 = addInt(i_536871261, 1);
            if (!(((colontmp__536871260).length == L_536871262))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  return result_2516583301;

}

function some_2516586018(val_2516586020) {
  var result_2516586021 = ({val: null});

    if (!(!((val_2516586020 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2516586021.val = val_2516586020;

  return result_2516586021;

}

function none_2516586043() {
  var result_2516586049 = ({val: null});

  return result_2516586049;

}

function loadFromString_2516586008(input_2516586009, path_2516586010) {
  var result_2516586015 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var json_2516586016 = parseJson_1627395313(input_2516586009);
    var newTheme_2516586017 = jsonToTheme_2516583298(json_2516586016, {allowExtraKeys: false, allowMissingKeys: false});
    newTheme_2516586017.path = nimCopy(null, path_2516586010, NTI33554449);
    result_2516586015 = nimCopy(result_2516586015, some_2516586018(newTheme_2516586017), NTI2516584388);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2516586036 = [mnewString(0)];
    fmtRes_2516586036[0].push.apply(fmtRes_2516586036[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32,102,114,111,109,32]);;
    formatValue_721420459(fmtRes_2516586036, 0, path_2516586010, []);
    fmtRes_2516586036[0].push.apply(fmtRes_2516586036[0], [58,32]);;
    formatValue_721420459(fmtRes_2516586036, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516586036[0], NTI33554449)]);
    var fmtRes_2516586042 = [mnewString(0)];
    formatValue_721420459(fmtRes_2516586042, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516586042[0], NTI33554449)]);
    result_2516586015 = nimCopy(result_2516586015, none_2516586043(), NTI2516584388);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2516586015;

}
  var Temporary273;
var rend_536870947 = [new_536870929()];
init_2768240764(rend_536870947[0]);
var initializedEditor_536870948 = [false];
var ed_536870949 = [newEditor_1291851109(2, rend_536870947[0])];
  var oHEX60gensym0_536870953 = loadFromString_2516586008(makeNimstrLit("{\x0A    \"name\": \"Tokyo Night Storm\",\x0A    \"author\": \"Enkia\",\x0A    \"maintainers\": [\"Enkia <enki77@gmail.com>\"],\x0A    \"type\": \"dark\",\x0A    \"semanticTokenColors\": {\x0A        \"parameter.declaration\": {\x0A            \"foreground\": \"#e0af68\"\x0A        },\x0A        \"parameter\": {\x0A            \"foreground\": \"#cfc9c2\"\x0A        },\x0A        \"property.declaration\": {\x0A            \"foreground\": \"#73daca\"\x0A        },\x0A        \"property.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"*.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.declaration\": {\x0A            \"foreground\": \"#bb9af7\"\x0A        },\x0A        \"variable\": {\x0A            \"foreground\": \"#c0caf5\"\x0A        }\x0A    },\x0A    \"semanticClass\": \"tokyo-night-storm\",\x0A    \"colors\": {\x0A        \"foreground\": \"#7982a9\",\x0A        \"descriptionForeground\": \"#545c7e\",\x0A        \"focusBorder\": \"#545c7e33\",\x0A        \"errorForeground\": \"#5a607d\",\x0A        \"widget.shadow\": \"#ffffff00\",\x0A        \"scrollbar.shadow\": \"#00000033\",\x0A        \"badge.background\": \"#7e83b233\",\x0A        \"badge.foreground\": \"#a9b1d6\",\x0A        \"icon.foreground\": \"#7982a9\",\x0A        \"settings.headerForeground\": \"#6183bb\",\x0A        \"window.activeBorder\": \"#0d0f17\",\x0A        \"window.inactiveBorder\": \"#0d0f17\",\x0A        \"sash.hoverBorder\": \"#29355a\",\x0A\x0A        \"toolbar.activeBackground\": \"#2c324a\",\x0A        \"toolbar.hoverBackground\": \"#2c324a\",\x0A\x0A        \"extensionButton.prominentBackground\": \"#3d59a1DD\",\x0A        \"extensionButton.prominentHoverBackground\": \"#3d59a1AA\",\x0A        \"extensionButton.prominentForeground\": \"#ffffff\",\x0A        \"extensionBadge.remoteBackground\": \"#3d59a1\",\x0A        \"extensionBadge.remoteForeground\": \"#ffffff\",\x0A\x0A        \"button.background\": \"#3d59a1dd\",\x0A        \"button.hoverBackground\": \"#3d59a1AA\",\x0A        \"button.secondaryBackground\": \"#41496b\",\x0A        \"button.foreground\": \"#ffffff\",\x0A        \"progressBar.background\": \"#3d59a1\",\x0A\x0A        \"input.background\": \"#1b1e2e\",\x0A        \"input.foreground\": \"#a9b1d6\",\x0A        \"input.border\": \"#282e44\",\x0A        \"input.placeholderForeground\": \"#4a5272\",\x0A        \"inputOption.activeForeground\": \"#c0caf5\",\x0A        \"inputOption.activeBackground\": \"#3d59a144\",\x0A\x0A        \"inputValidation.infoForeground\": \"#000000\",\x0A        \"inputValidation.infoBackground\": \"#0da0ba\",\x0A        \"inputValidation.infoBorder\": \"#0db9d7\",\x0A        \"inputValidation.warningForeground\": \"#000000\",\x0A        \"inputValidation.warningBackground\": \"#c2985b\",\x0A        \"inputValidation.warningBorder\": \"#e0af68\",\x0A        \"inputValidation.errorForeground\": \"#bbc2e0\",\x0A        \"inputValidation.errorBackground\": \"#85353e\",\x0A        \"inputValidation.errorBorder\": \"#963c47\",\x0A\x0A        \"dropdown.foreground\": \"#7982a9\",\x0A        \"dropdown.background\": \"#1b1e2e\",\x0A        \"dropdown.listBackground\": \"#1b1e2e\",\x0A\x0A        \"activityBar.background\": \"#1f2335\",\x0A        \"activityBar.foreground\": \"#7982a9\",\x0A        \"activityBar.inactiveForeground\": \"#41496b\",\x0A        \"activityBar.border\": \"#1f2335\",\x0A        \"activityBarBadge.background\": \"#3d59a1\",\x0A        \"activityBarBadge.foreground\": \"#fff\",\x0A\x0A        \"tree.indentGuidesStroke\": \"#2e344f\",\x0A        \"sideBar.foreground\": \"#7982a9\",\x0A        \"sideBar.background\": \"#1f2335\",\x0A        \"sideBar.border\": \"#1b1e2e\",\x0A        \"sideBarTitle.foreground\": \"#7982a9\",\x0A        \"sideBarSectionHeader.background\": \"#1f2335\",\x0A        \"sideBarSectionHeader.foreground\": \"#a9b1d6\",\x0A        \"sideBarSectionHeader.border\": \"#1b1e2e\",\x0A        \"sideBar.dropBackground\": \"#292e42\",\x0A\x0A        \"list.dropBackground\": \"#292e42\",\x0A        \"list.deemphasizedForeground\": \"#7982a9\",\x0A        \"list.activeSelectionBackground\": \"#2c324a\",\x0A\x0A        \"list.activeSelectionForeground\": \"#a9b1d6\",\x0A        \"list.inactiveSelectionBackground\": \"#292e42\",\x0A        \"list.inactiveSelectionForeground\": \"#a9b1d6\",\x0A        \"list.focusBackground\": \"#292e42\",\x0A        \"list.focusForeground\": \"#a9b1d6\",\x0A        \"list.hoverBackground\": \"#1b1e2e\",\x0A        \"list.hoverForeground\": \"#a9b1d6\",\x0A\x0A        \"list.highlightForeground\": \"#668ac4\",\x0A        \"list.invalidItemForeground\": \"#c97018\",\x0A        \"list.errorForeground\": \"#bb616b\",\x0A        \"list.warningForeground\": \"#c49a5a\",\x0A\x0A        \"listFilterWidget.background\": \"#1b1e2e\",\x0A        \"listFilterWidget.outline\": \"#3d59a1\",\x0A        \"listFilterWidget.noMatchesOutline\": \"#a6333f\",\x0A\x0A        \"pickerGroup.foreground\": \"#a9b1d6\",\x0A        \"pickerGroup.border\": \"#1b1e2e\",\x0A\x0A        \"scrollbarSlider.background\": \"#9cacff15\",\x0A        \"scrollbarSlider.hoverBackground\": \"#9cacff10\",\x0A        \"scrollbarSlider.activeBackground\": \"#9cacff22\",\x0A\x0A        \"editorBracketHighlight.foreground1\": \"#698cd6\",\x0A        \"editorBracketHighlight.foreground2\": \"#68b3de\",\x0A        \"editorBracketHighlight.foreground3\": \"#9a7ecc\",\x0A        \"editorBracketHighlight.foreground4\": \"#25aac2\",\x0A        \"editorBracketHighlight.foreground5\": \"#80a856\",\x0A        \"editorBracketHighlight.foreground6\": \"#cfa25f\",\x0A        \"editorBracketHighlight.unexpectedBracket.foreground\": \"#db4b4b\",\x0A\x0A        \"editorBracketPairGuide.activeBackground1\": \"#698cd6\",\x0A        \"editorBracketPairGuide.activeBackground2\": \"#68b3de\",\x0A        \"editorBracketPairGuide.activeBackground3\": \"#9a7ecc\",\x0A        \"editorBracketPairGuide.activeBackground4\": \"#25aac2\",\x0A        \"editorBracketPairGuide.activeBackground5\": \"#80a856\",\x0A        \"editorBracketPairGuide.activeBackground6\": \"#cfa25f\",\x0A\x0A        \"selection.background\": \"#7c89ca49\",\x0A        \"editor.background\": \"#24283b\",\x0A        \"editor.foreground\": \"#a9b1d6\",\x0A        \"editor.foldBackground\": \"#181b294a\",\x0A        \"editorLink.activeForeground\": \"#a9b1d6\",\x0A\x0A        \"editor.selectionBackground\": \"#6f7bb630\",\x0A        \"editor.inactiveSelectionBackground\": \"#6f7bb615\",\x0A\x0A        \"editor.findMatchBackground\": \"#3d59a166\",\x0A        \"editor.findMatchBorder\": \"#ffdb69aa\",\x0A        \"editor.findMatchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"editor.findRangeHighlightBackground\": \"#6f7bb625\",\x0A        \"editor.rangeHighlightBackground\": \"#aaa82c31\",\x0A        \"editor.wordHighlightBackground\": \"#6f7bb633\",\x0A        \"editor.wordHighlightStrongBackground\": \"#6f7bb644\",\x0A        \"editor.selectionHighlightBackground\": \"#6f7bb633\",\x0A\x0A        \"editorCursor.foreground\": \"#c0caf5\",\x0A        \"editorIndentGuide.background\": \"#292e42\",\x0A        \"editorIndentGuide.activeBackground\": \"#3b4261\",\x0A        \"editorLineNumber.foreground\": \"#3b4261\",\x0A        \"editorLineNumber.activeForeground\": \"#737aa2\",\x0A        \"editor.lineHighlightBackground\": \"#292e42\",\x0A        \"editorWhitespace.foreground\": \"#3b4261\",\x0A\x0A        \"editorMarkerNavigation.background\": \"#1f2335\",\x0A        \"editorHoverWidget.background\": \"#1f2335\",\x0A        \"editorHoverWidget.border\": \"#1b1e2e\",\x0A\x0A        \"editorBracketMatch.background\": \"#1f2335\",\x0A        \"editorBracketMatch.border\": \"#545c7e\",\x0A\x0A        \"editorOverviewRuler.border\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.errorForeground\": \"#db4b4b\",\x0A        \"editorOverviewRuler.warningForeground\": \"#e0af68\",\x0A        \"editorOverviewRuler.infoForeground\": \"#1abc9c\",\x0A        \"editorOverviewRuler.bracketMatchForeground\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.findMatchForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.rangeHighlightForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.selectionHighlightForeground\": \"#a9b1d622\",\x0A        \"editorOverviewRuler.wordHighlightForeground\": \"#bb9af755\",\x0A        \"editorOverviewRuler.wordHighlightStrongForeground\": \"#bb9af766\",\x0A        \"editorOverviewRuler.modifiedForeground\": \"#3d547a\",\x0A        \"editorOverviewRuler.addedForeground\": \"#164846\",\x0A        \"editorOverviewRuler.deletedForeground\": \"#703438\",\x0A\x0A        \"editorRuler.foreground\": \"#1b1e2e\",\x0A        \"editorError.foreground\": \"#db4b4b\",\x0A        \"editorWarning.foreground\": \"#e0af68\",\x0A        \"editorInfo.foreground\": \"#0da0ba\",\x0A        \"editorHint.foreground\": \"#0da0ba\",\x0A\x0A        \"editorGutter.modifiedBackground\": \"#3d547a\",\x0A        \"editorGutter.addedBackground\": \"#164846\",\x0A        \"editorGutter.deletedBackground\": \"#823c41\",\x0A\x0A        \"editorGhostText.foreground\": \"#7582ba\",\x0A\x0A        \"minimapGutter.modifiedBackground\": \"#3d547a\",\x0A        \"minimapGutter.addedBackground\": \"#1C5957\",\x0A        \"minimapGutter.deletedBackground\": \"#944449\",\x0A\x0A        \"editorGroup.border\": \"#1b1e2e\",\x0A        \"editorGroup.dropBackground\": \"#292e42\",\x0A        \"editorGroupHeader.tabsBorder\": \"#1b1e2e\",\x0A        \"editorGroupHeader.tabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.noTabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.border\": \"#1b1e2e\",\x0A\x0A        \"editorPane.background\": \"#1f2335\",\x0A\x0A        \"editorWidget.background\": \"#1f2335\",\x0A        \"editorWidget.resizeBorder\": \"#545c7e33\",\x0A\x0A        \"editorSuggestWidget.background\": \"#1f2335\",\x0A        \"editorSuggestWidget.border\": \"#1b1e2e\",\x0A        \"editorSuggestWidget.selectedBackground\": \"#282e44\",\x0A        \"editorSuggestWidget.highlightForeground\": \"#668ac4\",\x0A\x0A        \"editorCodeLens.foreground\": \"#565f89\",\x0A        \"editorLightBulb.foreground\": \"#e0af68\",\x0A        \"editorLightBulbAutoFix.foreground\": \"#e0af68\",\x0A\x0A        \"peekView.border\": \"#1b1e2e\",\x0A        \"peekViewEditor.background\": \"#1f2335\",\x0A        \"peekViewEditor.matchHighlightBackground\": \"#3d59a166\",\x0A        \"peekViewTitle.background\": \"#1b1e2e\",\x0A        \"peekViewTitleLabel.foreground\": \"#a9b1d6\",\x0A        \"peekViewTitleDescription.foreground\": \"#7982a9\",\x0A        \"peekViewResult.background\": \"#1b1e2e\",\x0A        \"peekViewResult.selectionForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.selectionBackground\": \"#3d59a133\",\x0A        \"peekViewResult.lineForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.fileForeground\": \"#7982a9\",\x0A        \"peekViewResult.matchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"diffEditor.insertedTextBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedTextBackground\": \"#db4b4b22\",\x0A        \"diffEditor.insertedLineBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorGutter.insertedLineBackground\": \"#41a6b525\",\x0A        \"diffEditorGutter.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorOverview.insertedForeground\": \"#41a6b525\",\x0A        \"diffEditorOverview.removedForeground\": \"#db4b4b22\",\x0A        \"diffEditor.diagonalFill\": \"#2c324a\",\x0A\x0A        \"breadcrumb.background\": \"#1f2335\",\x0A        \"breadcrumbPicker.background\": \"#1f2335\",\x0A        \"breadcrumb.foreground\": \"#545c7e\",\x0A        \"breadcrumb.focusForeground\": \"#a9b1d6\",\x0A        \"breadcrumb.activeSelectionForeground\": \"#a9b1d6\",\x0A\x0A        \"tab.activeBackground\": \"#1f2335\",\x0A        \"tab.inactiveBackground\": \"#1f2335\",\x0A        \"tab.activeForeground\": \"#a9b1d6\",\x0A        \"tab.hoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeBorder\": \"#3d59a1\",\x0A        \"tab.inactiveForeground\": \"#7982a9\",\x0A        \"tab.border\": \"#1b1e2e\",\x0A        \"tab.unfocusedActiveForeground\": \"#a9b1d6\",\x0A        \"tab.unfocusedInactiveForeground\": \"#7982a9\",\x0A        \"tab.unfocusedHoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeModifiedBorder\": \"#282d42\",\x0A        \"tab.inactiveModifiedBorder\": \"#282d42\",\x0A        \"tab.unfocusedActiveBorder\": \"#3b4261\",\x0A        \"tab.lastPinnedBorder\": \"#2c3147\",\x0A\x0A        \"panel.background\": \"#1f2335\",\x0A        \"panel.border\": \"#1b1e2e\",\x0A        \"panelTitle.activeForeground\": \"#a9b1d6\",\x0A        \"panelTitle.inactiveForeground\": \"#7982a9\",\x0A        \"panelTitle.activeBorder\": \"#3d59a1\",\x0A        \"panelInput.border\": \"#1f2335\",\x0A\x0A        \"statusBar.foreground\": \"#7982a9\",\x0A        \"statusBar.background\": \"#1f2335\",\x0A        \"statusBar.border\": \"#1b1e2e\",\x0A        \"statusBar.noFolderBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingForeground\": \"#7982a9\",\x0A        \"statusBarItem.activeBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.hoverBackground\": \"#282e44\",\x0A        \"statusBarItem.prominentBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.prominentHoverBackground\": \"#282e44\",\x0A\x0A        \"titleBar.activeForeground\": \"#7982a9\",\x0A        \"titleBar.inactiveForeground\": \"#7982a9\",\x0A        \"titleBar.activeBackground\": \"#1f2335\",\x0A        \"titleBar.inactiveBackground\": \"#1f2335\",\x0A        \"titleBar.border\": \"#1b1e2e\",\x0A\x0A        \"walkThrough.embeddedEditorBackground\": \"#1f2335\",\x0A        \"textLink.foreground\": \"#668ac4\",\x0A        \"textLink.activeForeground\": \"#7dcfff\",\x0A        \"textPreformat.foreground\": \"#73daca\",\x0A        \"textBlockQuote.background\": \"#1f2335\",\x0A        \"textCodeBlock.background\": \"#1f2335\",\x0A        \"textSeparator.foreground\": \"#545c7e\",\x0A\x0A        \"debugExceptionWidget.border\": \"#963c47\",\x0A        \"debugExceptionWidget.background\": \"#1b1e2e\",\x0A        \"debugToolBar.background\": \"#1b1e2e\",\x0A\x0A        \"debugConsole.infoForeground\": \"#7982a9\",\x0A        \"debugConsole.errorForeground\": \"#bb616b\",\x0A        \"debugConsole.sourceForeground\": \"#7982a9\",\x0A        \"debugConsole.warningForeground\": \"#c49a5a\",\x0A        \"debugConsoleInputIcon.foreground\": \"#73daca\",\x0A\x0A        \"editor.stackFrameHighlightBackground\": \"#e2bd3a20\",\x0A        \"editor.focusedStackFrameHighlightBackground\": \"#73daca20\",\x0A        \"debugView.stateLabelForeground\": \"#7982a9\",\x0A        \"debugView.stateLabelBackground\": \"#1b1e2e\",\x0A        \"debugView.valueChangedHighlight\": \"#3d59a1cc\",\x0A        \"debugTokenExpression.name\": \"#7dcfff\",\x0A        \"debugTokenExpression.value\": \"#9aa5ce\",\x0A        \"debugTokenExpression.string\": \"#9ece6a\",\x0A        \"debugTokenExpression.boolean\": \"#ff9e64\",\x0A        \"debugTokenExpression.number\": \"#ff9e64\",\x0A        \"debugTokenExpression.error\": \"#bb616b\",\x0A\x0A        \"debugIcon.breakpointForeground\": \"#db4b4b\",\x0A        \"debugIcon.breakpointDisabledForeground\": \"#545c7e\",\x0A        \"debugIcon.breakpointUnverifiedForeground\": \"#c24242\",\x0A\x0A        \"terminal.background\": \"#1f2335\",\x0A        \"terminal.foreground\": \"#7982a9\",\x0A        \"terminal.selectionBackground\": \"#6f7bb620\",\x0A\x0A        \"terminal.ansiBlack\": \"#414868\",\x0A        \"terminal.ansiRed\": \"#f7768e\",\x0A        \"terminal.ansiGreen\": \"#73daca\",\x0A        \"terminal.ansiYellow\": \"#e0af68\",\x0A        \"terminal.ansiBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiCyan\": \"#7dcfff\",\x0A        \"terminal.ansiWhite\": \"#7982a9\",\x0A        \"terminal.ansiBrightBlack\": \"#414868\",\x0A        \"terminal.ansiBrightRed\": \"#f7768e\",\x0A        \"terminal.ansiBrightGreen\": \"#73daca\",\x0A        \"terminal.ansiBrightYellow\": \"#e0af68\",\x0A        \"terminal.ansiBrightBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiBrightMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiBrightCyan\": \"#7dcfff\",\x0A        \"terminal.ansiBrightWhite\": \"#a9b1d6\",\x0A\x0A        \"gitDecoration.modifiedResourceForeground\": \"#6183bb\",\x0A        \"gitDecoration.ignoredResourceForeground\": \"#545c7e\",\x0A        \"gitDecoration.deletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.renamedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.addedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.untrackedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.conflictingResourceForeground\": \"#e0af68cc\",\x0A        \"gitDecoration.stageDeletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.stageModifiedResourceForeground\": \"#6183bb\",\x0A\x0A        \"notebook.editorBackground\": \"#24283b\",\x0A        \"notebook.cellEditorBackground\": \"#1f2335\",\x0A        \"notebook.cellBorderColor\": \"#1b1e2e\",\x0A        \"notebook.focusedCellBorder\": \"#29355a\",\x0A        \"notebook.cellStatusBarItemHoverBackground\": \"#2c324a\",\x0A\x0A        \"charts.red\": \"#f7768e\",\x0A        \"charts.blue\": \"#7aa2f7\",\x0A        \"charts.yellow\": \"#e0af68\",\x0A        \"charts.orange\": \"#ff9e64\",\x0A        \"charts.green\": \"#73daca\",\x0A        \"charts.purple\": \"#9d7cd8\",\x0A        \"charts.foreground\": \"#9AA5CE\",\x0A        \"charts.lines\": \"#1f2335\",\x0A\x0A        \"merge.currentHeaderBackground\": \"#41a6b525\",\x0A        \"merge.currentContentBackground\": \"#007a7544\",\x0A        \"merge.incomingHeaderBackground\": \"#3d59a1aa\",\x0A        \"merge.incomingContentBackground\": \"#3d59a144\",\x0A        \"mergeEditor.change.background\": \"#41a6b525\",\x0A        \"mergeEditor.change.word.background\": \"#41a6b540\",\x0A        \"mergeEditor.conflict.unhandledUnfocused.border\": \"#e0af6888\",\x0A        \"mergeEditor.conflict.unhandledFocused.border\": \"#e0af68d9\",\x0A        \"mergeEditor.conflict.handledUnfocused.border\": \"#41a6b525\",\x0A        \"mergeEditor.conflict.handledFocused.border\": \"#41a6b565\",\x0A        \"mergeEditor.conflict.handled.minimapOverViewRuler\": \"#449dab\",\x0A        \"mergeEditor.conflict.unhandled.minimapOverViewRuler\": \"#e0af68\",\x0A\x0A        \"gitlens.trailingLineForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterUncommittedForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterForegroundColor\": \"#565f89\",\x0A\x0A        \"notificationCenterHeader.background\": \"#1b1e2e\",\x0A        \"notifications.background\": \"#1b1e2e\",\x0A        \"notificationLink.foreground\": \"#6183bb\",\x0A        \"notificationsErrorIcon.foreground\": \"#bb616b\",\x0A        \"notificationsWarningIcon.foreground\": \"#bba461\",\x0A        \"notificationsInfoIcon.foreground\": \"#0da0ba\",\x0A\x0A        \"menubar.selectionForeground\": \"#c0caf5\",\x0A        \"menubar.selectionBackground\": \"#2f3549\",\x0A        \"menubar.selectionBorder\": \"#1b1e2e\",\x0A        \"menu.foreground\": \"#7982a9\",\x0A        \"menu.background\": \"#1f2335\",\x0A        \"menu.selectionForeground\": \"#c0caf5\",\x0A        \"menu.selectionBackground\": \"#2f3549\",\x0A        \"menu.separatorBackground\": \"#1b1e2e\",\x0A        \"menu.border\": \"#1b1e2e\"\x0A    },\x0A    \"tokenColors\": [{\x0A            \"name\": \"Italics - Comments, Storage, Keyword Flow, Vue attributes, Decorators\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"meta.var.expr storage.type\",\x0A                \"keyword.control.flow\",\x0A                \"keyword.control.return\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\",\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Fix YAML block scalar\",\x0A            \"scope\": \"keyword.control.flow.block-scalar.literal\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"comment.block.documentation\",\x0A                \"punctuation.definition.comment\",\x0A                \"comment.block.documentation punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc\",\x0A            \"scope\": [\x0A                \"keyword.operator.assignment.jsdoc\",\x0A                \"comment.block.documentation variable\",\x0A                \"comment.block.documentation storage\",\x0A                \"comment.block.documentation keyword\",\x0A                \"comment.block.documentation support\",\x0A                \"comment.block.documentation markup\",\x0A                \"comment.block.documentation markup.inline.raw.string.markdown\",\x0A                \"meta.other.type.phpdoc.php keyword.other.type.php\",\x0A                \"meta.other.type.phpdoc.php support.other.namespace.php\",\x0A                \"meta.other.type.phpdoc.php punctuation.separator.inheritance.php\",\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"keyword.other.phpdoc.php\",\x0A                \"log.date\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#6a75a8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc Emphasized\",\x0A            \"scope\": [\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"comment.block.documentation storage.type\",\x0A                \"comment.block.documentation punctuation.definition.block.tag\",\x0A                \"comment.block.documentation entity.name.type.instance\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7582ba\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Number, Boolean, Undefined, Null\",\x0A            \"scope\": [\x0A                \"variable.other.constant\",\x0A                \"punctuation.definition.constant\",\x0A                \"constant.language\",\x0A                \"constant.numeric\",\x0A                \"support.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"String, Symbols\",\x0A            \"scope\": [\x0A                \"string\",\x0A                \"constant.other.symbol\",\x0A                \"constant.other.key\",\x0A                \"meta.attribute-selector\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Colors\",\x0A            \"scope\": [\x0A                \"constant.other.color\",\x0A                \"constant.other.color.rgb-value.hex punctuation.definition.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid\",\x0A            \"scope\": [\x0A                \"invalid\",\x0A                \"invalid.illegal\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff5370\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid deprecated\",\x0A            \"scope\": \"invalid.deprecated\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage Type\",\x0A            \"scope\": \"storage.type\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage - modifier, var, const, let\",\x0A            \"scope\": [\x0A                \"meta.var.expr storage.type\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Interpolation / PHP tags / Smarty tags\",\x0A            \"scope\": [\x0A                \"punctuation.definition.template-expression\",\x0A                \"punctuation.section.embedded\",\x0A                \"meta.embedded.line.tag.smarty\",\x0A                \"support.constant.handlebars\",\x0A                \"punctuation.section.tag.twig\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Twig, Smarty, Blade, Handlebars keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.smarty\",\x0A                \"keyword.control.twig\",\x0A                \"support.constant.handlebars keyword.control\",\x0A                \"keyword.operator.comparison.twig\",\x0A                \"keyword.blade\",\x0A                \"entity.name.function.blade\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Spread\",\x0A            \"scope\": [\x0A                \"keyword.operator.spread\",\x0A                \"keyword.operator.rest\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\",\x0A                \"fontStyle\": \"bold\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Operator, Misc\",\x0A            \"scope\": [\x0A                \"keyword.operator\",\x0A                \"keyword.control.as\",\x0A                \"keyword.other\",\x0A                \"keyword.operator.bitwise.shift\",\x0A                \"punctuation\",\x0A                \"expression.embbeded.vue punctuation.definition.tag\",\x0A                \"text.html.twig meta.tag.inline.any.html\",\x0A                \"meta.tag.template.value.twig meta.function.arguments.twig\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"punctuation.definition.constant.markdown\",\x0A                \"punctuation.definition.string\",\x0A                \"punctuation.support.type.property-name\",\x0A                \"text.html.vue-html meta.tag\",\x0A                \"punctuation.definition.keyword\",\x0A                \"punctuation.terminator.rule\",\x0A                \"punctuation.definition.entity\",\x0A                \"punctuation.separator.inheritance.php\",\x0A                \"keyword.other.template\",\x0A                \"keyword.other.substitution\",\x0A                \"entity.name.operator\",\x0A                \"meta.property-list punctuation.separator.key-value\",\x0A                \"meta.at-rule.mixin punctuation.separator.key-value\",\x0A                \"meta.at-rule.function variable.parameter.url\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Import, Export, From, Default\",\x0A            \"scope\": [\x0A                \"keyword.control.import\",\x0A                \"keyword.control.export\",\x0A                \"keyword.control.from\",\x0A                \"keyword.control.default\",\x0A                \"meta.import keyword.other\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword\",\x0A            \"scope\": [\x0A                \"keyword\",\x0A                \"keyword.control\",\x0A                \"keyword.other.important\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f79aeb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword SQL\",\x0A            \"scope\": \"keyword.other.DML\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword Operator Logical, Arrow, Ternary, Comparison\",\x0A            \"scope\": [\x0A                \"keyword.operator.logical\",\x0A                \"storage.type.function\",\x0A                \"keyword.operator.bitwise\",\x0A                \"keyword.operator.ternary\",\x0A                \"keyword.operator.comparison\",\x0A                \"keyword.operator.relational\",\x0A                \"keyword.operator.or.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag\",\x0A            \"scope\": \"entity.name.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Component\",\x0A            \"scope\": [\x0A                \"entity.name.tag support.class.component\",\x0A                \"meta.tag\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#de5971\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Punctuation\",\x0A            \"scope\": \"punctuation.definition.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ba3c97\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Globals, PHP Constants, etc\",\x0A            \"scope\": [\x0A                \"constant.other.php\",\x0A                \"variable.other.global.safer\",\x0A                \"variable.other.global.safer punctuation.definition.variable\",\x0A                \"variable.other.global\",\x0A                \"variable.other.global punctuation.definition.variable\",\x0A                \"constant.other.haskell\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variables\",\x0A            \"scope\": [\x0A                \"variable\",\x0A                \"support.variable\",\x0A                \"string constant.other.placeholder\",\x0A                \"variable.parameter.handlebars\",\x0A                \"variable.other.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \" Variable Array Key\",\x0A            \"scope\": \"meta.array.literal variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Key\",\x0A            \"scope\": [\x0A                \"meta.object-literal.key\",\x0A                \"entity.name.type.hcl\",\x0A                \"string.alias.graphql\",\x0A                \"string.unquoted.graphql\",\x0A                \"string.unquoted.alias.graphql\",\x0A                \"meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js\",\x0A                \"meta.field.declaration.ts variable.object.property\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": [\x0A                \"variable.other.property\",\x0A                \"support.variable.property\",\x0A                \"support.variable.property.dom\",\x0A                \"meta.function-call variable.other.object.property\",\x0A                \"variable.other.object.property.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": \"variable.other.object.property\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Literal Member lvl 3 (Vue Prop Validation)\",\x0A            \"scope\": \"meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.object-literal.key\",\x0A            \"settings\": {\x0A                \"foreground\": \"#41a6b5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"C-related Block Level Variables\",\x0A            \"scope\": \"source.cpp meta.block variable.other\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Other Variable\",\x0A            \"scope\": \"support.other.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Methods\",\x0A            \"scope\": [\x0A                \"meta.class-method.js entity.name.function.js\",\x0A                \"entity.name.method.js\",\x0A                \"variable.function.constructor\",\x0A                \"keyword.other.special-method\",\x0A                \"storage.type.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Definition\",\x0A            \"scope\": [\x0A                \"entity.name.function\",\x0A                \"variable.other.enummember\",\x0A                \"meta.function-call\",\x0A                \"meta.function-call entity.name.function\",\x0A                \"variable.function\",\x0A                \"meta.definition.method entity.name.function\",\x0A                \"meta.object-literal entity.name.function\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Argument\",\x0A            \"scope\": [\x0A                \"variable.parameter.function.language.special\",\x0A                \"variable.parameter\",\x0A                \"meta.function.parameters punctuation.definition.variable\",\x0A                \"meta.function.parameter variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0ce68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Constant, Tag Attribute\",\x0A            \"scope\": [\x0A                \"keyword.other.type.php\",\x0A                \"storage.type.php\",\x0A                \"constant.character\",\x0A                \"constant.escape\",\x0A                \"keyword.other.unit\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable Definition\",\x0A            \"scope\": [\x0A                \"meta.definition.variable variable.other.constant\",\x0A                \"meta.definition.variable variable.other.readwrite\",\x0A                \"variable.declaration.hcl variable.other.readwrite.hcl\",\x0A                \"meta.mapping.key.hcl variable.other.readwrite.hcl\",\x0A                \"variable.other.declaration\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inherited Class\",\x0A            \"scope\": \"entity.other.inherited-class\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class, Support, DOM, etc\",\x0A            \"scope\": [\x0A                \"support.class\",\x0A                \"support.type\",\x0A                \"variable.other.readwrite.alias\",\x0A                \"support.orther.namespace.use.php\",\x0A                \"meta.use.php\",\x0A                \"support.other.namespace.php\",\x0A                \"support.type.sys-types\",\x0A                \"support.variable.dom\",\x0A                \"support.constant.math\",\x0A                \"support.type.object.module\",\x0A                \"support.constant.json\",\x0A                \"entity.name.namespace\",\x0A                \"meta.import.qualifier\",\x0A                \"variable.other.constant.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class Name\",\x0A            \"scope\": \"entity.name\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Support Function\",\x0A            \"scope\": \"support.function\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class and Support\",\x0A            \"scope\": [\x0A                \"source.css support.type.property-name\",\x0A                \"source.sass support.type.property-name\",\x0A                \"source.scss support.type.property-name\",\x0A                \"source.less support.type.property-name\",\x0A                \"source.stylus support.type.property-name\",\x0A                \"source.postcss support.type.property-name\",\x0A                \"support.type.property-name.css\",\x0A                \"support.type.vendored.property-name\",\x0A                \"support.type.map.key\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Font\",\x0A            \"scope\": [\x0A                \"support.constant.font-name\",\x0A                \"meta.definition.variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.class\",\x0A                \"meta.at-rule.mixin.scss entity.name.function.scss\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\",\x0A            \"scope\": \"entity.other.attribute-name.id\",\x0A            \"settings\": {\x0A                \"foreground\": \"#fc7b7b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag\",\x0A            \"scope\": \"entity.name.tag.css\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag Reference, Pseudo & Class Punctuation\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.pseudo-element punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.class punctuation.definition.entity\",\x0A                \"entity.name.tag.reference\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation\",\x0A            \"scope\": \"meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS at-rule fix\",\x0A            \"scope\": [\x0A                \"meta.property-list meta.at-rule.if\",\x0A                \"meta.at-rule.return variable.parameter.url\",\x0A                \"meta.property-list meta.at-rule.else\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Parent Selector Entity\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.parent-selector-suffix punctuation.definition.entity.css\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation comma fix\",\x0A            \"scope\": \"meta.property-list meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS @\",\x0A            \"scope\": [\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.include entity.name.function.scss\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Mixins, Extends, Include Keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.at-rule.include punctuation.definition.keyword\",\x0A                \"keyword.control.at-rule.mixin punctuation.definition.keyword\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\",\x0A                \"keyword.control.at-rule.extend punctuation.definition.keyword\",\x0A                \"meta.at-rule.extend keyword.control.at-rule.extend\",\x0A                \"entity.other.attribute-name.placeholder.css punctuation.definition.entity.css\",\x0A                \"meta.at-rule.media keyword.control.at-rule.media\",\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.function keyword.control.at-rule.function\",\x0A                \"keyword.control punctuation.definition.keyword\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Include Mixin Argument\",\x0A            \"scope\": \"meta.property-list meta.at-rule.include\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS value\",\x0A            \"scope\": \"support.constant.property-value\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Sub-methods\",\x0A            \"scope\": [\x0A                \"entity.name.module.js\",\x0A                \"variable.import.parameter.js\",\x0A                \"variable.other.class.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Language methods\",\x0A            \"scope\": \"variable.language\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable punctuation\",\x0A            \"scope\": \"variable.other punctuation.definition.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword this with Punctuation, ES7 Bind Operator\",\x0A            \"scope\": [\x0A                \"source.js constant.other.object.key.js string.unquoted.label.js\",\x0A                \"variable.language.this punctuation.definition.variable\",\x0A                \"keyword.other.this\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name\",\x0A                \"text.html.basic entity.other.attribute-name.html\",\x0A                \"text.html.basic entity.other.attribute-name\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Character Entity\",\x0A            \"scope\": \"text.html constant.character.entity\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2AC3DE\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Vue Template attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.id.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\'s\",\x0A            \"scope\": \"source.sass keyword.control\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS psuedo selectors\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class\",\x0A                \"entity.other.attribute-name.pseudo-element\",\x0A                \"entity.other.attribute-name.placeholder\",\x0A                \"meta.property-list meta.property-value\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inserted\",\x0A            \"scope\": \"markup.inserted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#449dab\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Deleted\",\x0A            \"scope\": \"markup.deleted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#914c54\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Changed\",\x0A            \"scope\": \"markup.changed\",\x0A            \"settings\": {\x0A                \"foreground\": \"#6183bb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions\",\x0A            \"scope\": \"string.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b4f9f8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Punctuation\",\x0A            \"scope\": \"punctuation.definition.group\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class Set\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.set.regexp\",\x0A                \"punctuation.definition.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Quantifier\",\x0A            \"scope\": \"keyword.operator.quantifier.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Backslash\",\x0A            \"scope\": \"constant.character.escape.backslash\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Escape Characters\",\x0A            \"scope\": \"constant.character.escape\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Decorators\",\x0A            \"scope\": [\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Units\",\x0A            \"scope\": \"keyword.other.unit\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 0\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 1\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 2\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 3\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 4\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 5\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 6\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 7\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 8\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Plain Punctuation\",\x0A            \"scope\": \"punctuation.definition.list_item.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Block Punctuation\",\x0A            \"scope\": [\x0A                \"meta.block\",\x0A                \"meta.brace\",\x0A                \"punctuation.definition.block\",\x0A                \"punctuation.definition.use\",\x0A                \"punctuation.definition.class\",\x0A                \"punctuation.definition.begin.bracket\",\x0A                \"punctuation.definition.end.bracket\",\x0A                \"punctuation.definition.switch-expression.begin.bracket\",\x0A                \"punctuation.definition.switch-expression.end.bracket\",\x0A                \"punctuation.definition.section.switch-block.begin.bracket\",\x0A                \"punctuation.definition.section.switch-block.end.bracket\",\x0A                \"punctuation.definition.group.shell\",\x0A                \"punctuation.definition.parameters\",\x0A                \"punctuation.definition.arguments\",\x0A                \"punctuation.definition.dictionary\",\x0A                \"punctuation.definition.array\",\x0A                \"punctuation.section\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Plain\",\x0A            \"scope\": [\x0A                \"meta.jsx.children\",\x0A                \"meta.embedded.block\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML text\",\x0A            \"scope\": \"text.html\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline Punctuation\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown punctuation.definition.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 1\",\x0A            \"scope\": [\x0A                \"heading.1.markdown entity.name\",\x0A                \"heading.1.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 2\",\x0A            \"scope\": [\x0A                \"heading.2.markdown entity.name\",\x0A                \"heading.2.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#61bdf2\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 3\",\x0A            \"scope\": [\x0A                \"heading.3.markdown entity.name\",\x0A                \"heading.3.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 4\",\x0A            \"scope\": [\x0A                \"heading.4.markdown entity.name\",\x0A                \"heading.4.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#6d91de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 5\",\x0A            \"scope\": [\x0A                \"heading.5.markdown entity.name\",\x0A                \"heading.5.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 6\",\x0A            \"scope\": [\x0A                \"heading.6.markdown entity.name\",\x0A                \"heading.6.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#747ca1\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Italic\",\x0A            \"scope\": [\x0A                \"markup.italic\",\x0A                \"markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold\",\x0A            \"scope\": [\x0A                \"markup.bold\",\x0A                \"markup.bold punctuation\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold-Italic\",\x0A            \"scope\": [\x0A                \"markup.bold markup.italic\",\x0A                \"markup.bold markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Underline\",\x0A            \"scope\": [\x0A                \"markup.underline\",\x0A                \"markup.underline punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"underline\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Blockquote\",\x0A            \"scope\": \"markup.quote punctuation.definition.blockquote.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Quote\",\x0A            \"scope\": \"markup.quote\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Link\",\x0A            \"scope\": [\x0A                \"string.other.link\",\x0A                \"markup.underline.link\",\x0A                \"constant.other.reference.link.markdown\",\x0A                \"string.other.link.description.title.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Fenced Code Block\",\x0A            \"scope\": [\x0A                \"markup.fenced_code.block.markdown\",\x0A                \"markup.inline.raw.string.markdown\",\x0A                \"variable.language.fenced.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Separator\",\x0A            \"scope\": \"meta.separator\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Table\",\x0A            \"scope\": \"markup.table\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0cefc\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Info\",\x0A            \"scope\": \"token.info-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#0db9d7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Warn\",\x0A            \"scope\": \"token.warn-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ffdb69\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Error\",\x0A            \"scope\": \"token.error-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#db4b4b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Debug\",\x0A            \"scope\": \"token.debug-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b267e6\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Apache Tag\",\x0A            \"scope\": \"entity.tag.apacheconf\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Preprocessor\",\x0A            \"scope\": [\x0A                \"meta.preprocessor\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"ENV value\",\x0A            \"scope\": \"source.env\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        }\x0A    ]\x0A}"), [115,116,114,105,110,103]);
  if (!isSome_1291851013(oHEX60gensym0_536870953)) Temporary273 = false; else {    var theme_536870976 = get_1291851033(oHEX60gensym0_536870953);
    Temporary273 = true;  }if (Temporary273) {
ed_536870949[0].theme = theme_536870976;
}

setLayout_1291856984(ed_536870949[0], [102,105,98,111,110,97,99,99,105]);
var frameTime_536870977 = [0.0];
var frameIndex_536870978 = [0];
var hasRequestedRerender_536870979 = [false];
var isRenderInProgress_536870980 = [false];

function updateFontSettings_3338666063(self_3338666064) {
    var newFontSize_3338667151 = nsuParseFloat(HEX5BHEX5D_855639319(cstrToNimstr(window.getComputedStyle(self_3338666064.content, null).fontSize), HEX2EHEX2E_1040187488(0, 3)));
    if (!((newFontSize_3338667151 == self_3338666064.mFontSize))) {
    self_3338666064.mFontSize = newFontSize_3338667151;
    var d_3338667152 = document.createElement("div");
    d_3338667152.setAttribute("style", "position: absolute; visibility: hidden; height: auto; width: auto;");
    d_3338667152.innerHTML = toJSStr(nsuRepeatStr([35], 100));
    self_3338666064.content.appendChild(d_3338667152);
    self_3338666064.mLineHeight = d_3338667152.clientHeight;
    self_3338666064.mCharWidth = (d_3338667152.clientWidth / 100.0);
    self_3338666064.content.removeChild(d_3338667152);
    self_3338666064.redrawEverything = true;
    }
    

  
}

function color_2550136904(r_2550136905, g_2550136906, b_2550136907, a_2550136908) {
  var result_2550136909 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2550136909 = nimCopy(result_2550136909, {r: r_2550136905, g: g_2550136906, b: b_2550136907, a: a_2550136908}, NTI2550136835);

  return result_2550136909;

}

function rawGet_3254780072(t_3254780075, key_3254780076, hc_3254780077, hc_3254780077_Idx) {
  var result_3254780078 = 0;

  BeforeRet: {
    hc_3254780077[hc_3254780077_Idx] = hash_1325400236(key_3254780076);
    if ((hc_3254780077[hc_3254780077_Idx] == 0)) {
    hc_3254780077[hc_3254780077_Idx] = 314159265;
    }
    
    if (((t_3254780075.data).length == 0)) {
    result_3254780078 = -1;
    break BeforeRet;
    }
    
    var h_3254780133 = (hc_3254780077[hc_3254780077_Idx] & (t_3254780075.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254780075.data[chckIndx(h_3254780133, 0, (t_3254780075.data).length - 1)].Field0)) break Label2;
          if (((t_3254780075.data[chckIndx(h_3254780133, 0, (t_3254780075.data).length - 1)].Field0 == hc_3254780077[hc_3254780077_Idx]) && (t_3254780075.data[chckIndx(h_3254780133, 0, (t_3254780075.data).length - 1)].Field1 == key_3254780076))) {
          result_3254780078 = h_3254780133;
          break BeforeRet;
          }
          
          h_3254780133 = nextTry_1308622883(h_3254780133, (t_3254780075.data).length - 1);
        }
    };
    result_3254780078 = subInt(-1, h_3254780133);
  };

  return result_3254780078;

}

function hasKey_3254780065(t_3254780068, key_3254780069) {
  var result_3254780070 = false;

    var hc_3254780071 = [0];
    result_3254780070 = (0 <= rawGet_3254780072(t_3254780068, key_3254780069, hc_3254780071, 0));

  return result_3254780070;

}

function contains_3254780059(t_3254780062, key_3254780063) {
  var result_3254780064 = false;

  BeforeRet: {
    result_3254780064 = hasKey_3254780065(t_3254780062, key_3254780063);
    break BeforeRet;
  };

  return result_3254780064;

}

function HEX5BHEX5D_3254780358(t_3254780361, key_3254780362) {
  var result_3254780363 = null;
  var result_3254780363_Idx = 0;

    var hcHEX60gensym22_3254780364 = [0];
    var indexHEX60gensym22_3254780371 = rawGet_3254780072(t_3254780361, key_3254780362, hcHEX60gensym22_3254780364, 0);
    if ((0 <= indexHEX60gensym22_3254780371)) {
    result_3254780363 = t_3254780361.data[chckIndx(indexHEX60gensym22_3254780371, 0, (t_3254780361.data).length - 1)]; result_3254780363_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3254780362);
    }
    

  return [result_3254780363, result_3254780363_Idx];

}

function mustRehash_3254780650(t_3254780652) {
  var result_3254780653 = false;

    if (!((t_3254780652.counter < (t_3254780652.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3254780653 = ((mulInt((t_3254780652.data).length, 2) < mulInt(t_3254780652.counter, 3)) || (subInt((t_3254780652.data).length, t_3254780652.counter) < 4));

  return result_3254780653;

}

function rawInsert_3254781099(t_3254781103, data_3254781104, data_3254781104_Idx, key_3254781105, val_3254781106, hc_3254781107, h_3254781108) {
    data_3254781104[data_3254781104_Idx][chckIndx(h_3254781108, 0, (data_3254781104[data_3254781104_Idx]).length - 1)].Field1 = key_3254781105;
    data_3254781104[data_3254781104_Idx][chckIndx(h_3254781108, 0, (data_3254781104[data_3254781104_Idx]).length - 1)].Field2 = val_3254781106;
    data_3254781104[data_3254781104_Idx][chckIndx(h_3254781108, 0, (data_3254781104[data_3254781104_Idx]).length - 1)].Field0 = hc_3254781107;

  
}

function enlarge_3254780805(t_3254780808) {
    var n_3254780811 = [];
    n_3254780811 = new Array(chckRange(mulInt((t_3254780808.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3254780808.data).length, 2), 0, 2147483647) ; ++i) { n_3254780811[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3254780808.data; t_3254780808.data = n_3254780811; n_3254780811 = Temporary1;    Label2: {
      var i_3254780875 = 0;
      var colontmp__536871861 = 0;
      colontmp__536871861 = (n_3254780811).length - 1;
      var res_536871862 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871862 <= colontmp__536871861)) break Label4;
            i_3254780875 = res_536871862;
            var eh_3254780929 = n_3254780811[chckIndx(i_3254780875, 0, (n_3254780811).length - 1)].Field0;
            if (isFilled_1308622880(eh_3254780929)) {
            var j_3254780933 = (eh_3254780929 & (t_3254780808.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3254780808.data[chckIndx(j_3254780933, 0, (t_3254780808.data).length - 1)].Field0)) break Label6;
                  j_3254780933 = nextTry_1308622883(j_3254780933, (t_3254780808.data).length - 1);
                }
            };
            rawInsert_3254781099(t_3254780808, t_3254780808, "data", n_3254780811[chckIndx(i_3254780875, 0, (n_3254780811).length - 1)].Field1, n_3254780811[chckIndx(i_3254780875, 0, (n_3254780811).length - 1)].Field2, eh_3254780929, j_3254780933);
            }
            
            res_536871862 = addInt(res_536871862, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3254781268(t_3254781271, key_3254781272, hc_3254781273) {
  var result_3254781274 = 0;

  BeforeRet: {
    if (((t_3254781271.data).length == 0)) {
    result_3254781274 = -1;
    break BeforeRet;
    }
    
    var h_3254781325 = (hc_3254781273 & (t_3254781271.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254781271.data[chckIndx(h_3254781325, 0, (t_3254781271.data).length - 1)].Field0)) break Label2;
          if (((t_3254781271.data[chckIndx(h_3254781325, 0, (t_3254781271.data).length - 1)].Field0 == hc_3254781273) && (t_3254781271.data[chckIndx(h_3254781325, 0, (t_3254781271.data).length - 1)].Field1 == key_3254781272))) {
          result_3254781274 = h_3254781325;
          break BeforeRet;
          }
          
          h_3254781325 = nextTry_1308622883(h_3254781325, (t_3254781271.data).length - 1);
        }
    };
    result_3254781274 = subInt(-1, h_3254781325);
  };

  return result_3254781274;

}

function HEX5BHEX5DHEX3D_3254780477(t_3254780480, key_3254780481, val_3254780482) {
    if (((t_3254780480.data).length == 0)) {
    var correctSizeHEX60gensym5_3254780531 = slotsNeeded_1308622891(32);
    t_3254780480.counter = 0;
    t_3254780480.data = new Array(chckRange(correctSizeHEX60gensym5_3254780531, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym5_3254780531, 0, 2147483647) ; ++i) { t_3254780480.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3254780536 = [0];
    var index_3254780543 = rawGet_3254780072(t_3254780480, key_3254780481, hc_3254780536, 0);
    if ((0 <= index_3254780543)) {
    t_3254780480.data[chckIndx(index_3254780543, 0, (t_3254780480.data).length - 1)].Field2 = val_3254780482;
    }
    else {
      if (((t_3254780480.data).length == 0)) {
      var correctSizeHEX60gensym8_3254780645 = slotsNeeded_1308622891(32);
      t_3254780480.counter = 0;
      t_3254780480.data = new Array(chckRange(correctSizeHEX60gensym8_3254780645, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3254780645, 0, 2147483647) ; ++i) { t_3254780480.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3254780650(t_3254780480)) {
      enlarge_3254780805(t_3254780480);
      index_3254780543 = rawGetKnownHC_3254781268(t_3254780480, key_3254780481, hc_3254780536[0]);
      }
      
      index_3254780543 = subInt(-1, index_3254780543);
      rawInsert_3254781099(t_3254780480, t_3254780480, "data", key_3254780481, val_3254780482, hc_3254780536[0], index_3254780543);
      t_3254780480.counter = addInt(t_3254780480.counter, 1);
    }
    

  
}

function activeHEX3D_2415919215(self_2415919216, newActive_2415919217) {
    if (!((newActive_2415919217 == self_2415919216.active))) {
    markDirty_2415919143(self_2415919216);
    }
    
    self_2415919216.active = newActive_2415919217;

  
}

function HEX5BHEX5D_3254781522(s_3254781526, x_3254781527) {
  var result_3254781528 = [];

    var a_3254781530 = x_3254781527.a;
    var L_3254781536 = addInt(subInt(subInt((s_3254781526).length, x_3254781527.b), a_3254781530), 1);
    result_3254781528 = new Array(chckRange(L_3254781536, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3254781536, 0, 2147483647) ; ++i) { result_3254781528[i] = null; }    Label1: {
      var i_3254781545 = 0;
      var i_536871866 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871866 < L_3254781536)) break Label3;
            i_3254781545 = i_536871866;
            result_3254781528[chckIndx(i_3254781545, 0, (result_3254781528).length - 1)] = s_3254781526[chckIndx(addInt(i_3254781545, a_3254781530), 0, (s_3254781526).length - 1)];
            i_536871866 = addInt(i_536871866, 1);
          }
      };
    };

  return result_3254781528;

}

function find_3254781750(a_3254781753, item_3254781754) {
  var result_3254781755 = 0;

  BeforeRet: {
    result_3254781755 = 0;
    Label1: {
      var i_3254781768 = null;
      var i_536871870 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871870 < (a_3254781753).length)) break Label3;
            i_3254781768 = a_3254781753[chckIndx(i_536871870, 0, (a_3254781753).length - 1)];
            if ((i_3254781768 == item_3254781754)) {
            break BeforeRet;
            }
            
            result_3254781755 = addInt(result_3254781755, 1);
            i_536871870 = addInt(i_536871870, 1);
          }
      };
    };
    result_3254781755 = -1;
  };

  return result_3254781755;

}

function contains_3254781745(a_3254781747, item_3254781748) {
  var result_3254781749 = false;

  BeforeRet: {
    result_3254781749 = (0 <= find_3254781750(a_3254781747, item_3254781748));
    break BeforeRet;
  };

  return result_3254781749;

}

function contains_2130706618(a_2130706619, b_2130706620) {
  var result_2130706621 = false;

  BeforeRet: {
    result_2130706621 = ((((a_2130706619.x <= b_2130706620.x) && ((b_2130706620.x + b_2130706620.w) <= (a_2130706619.x + a_2130706619.w))) && (a_2130706619.y <= b_2130706620.y)) && ((b_2130706620.y + b_2130706620.h) <= (a_2130706619.y + a_2130706619.h)));
    break BeforeRet;
  };

  return result_2130706621;

}

function invalidate_2785018087(self_2785018088, currentIndex_2785018089, rect_2785018090) {
  BeforeRet: {
    if ((!(intersects_2130706609(self_2785018088.lastBounds, rect_2785018090)) || ((currentIndex_2785018089 <= self_2785018088.lastInvalidation) && contains_2130706618(self_2785018088.lastInvalidationRect, rect_2785018090)))) {
    break BeforeRet;
    }
    
    self_2785018088.lastInvalidationRect = nimCopy(self_2785018088.lastInvalidationRect, and_2147483732(rect_2785018090, self_2785018088.lastBounds), NTI2147483653);
    self_2785018088.lastInvalidation = currentIndex_2785018089;
    if (isObj(self_2785018088.m_type, NTI2785017868)) {
    Label1: {
      var c_2785018100 = null;
      var colontmp__536871873 = [];
      colontmp__536871873 = self_2785018088.children;
      var i_536871874 = 0;
      var L_536871875 = (colontmp__536871873).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871874 < L_536871875)) break Label3;
            c_2785018100 = colontmp__536871873[chckIndx(i_536871874, 0, (colontmp__536871873).length - 1)];
            invalidate_2785018087(c_2785018100, currentIndex_2785018089, self_2785018088.lastInvalidationRect);
            i_536871874 = addInt(i_536871874, 1);
            if (!(((colontmp__536871873).length == L_536871875))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018088.m_type, NTI2785017870)) {
    Label4: {
      var c_2785018110 = null;
      var colontmp__536871878 = [];
      colontmp__536871878 = self_2785018088.children;
      var i_536871879 = 0;
      var L_536871880 = (colontmp__536871878).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871879 < L_536871880)) break Label6;
            c_2785018110 = colontmp__536871878[chckIndx(i_536871879, 0, (colontmp__536871878).length - 1)];
            invalidate_2785018087(c_2785018110, currentIndex_2785018089, self_2785018088.lastInvalidationRect);
            i_536871879 = addInt(i_536871879, 1);
            if (!(((colontmp__536871878).length == L_536871880))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018088.m_type, NTI2785017872)) {
    Label7: {
      var c_2785018120 = null;
      var colontmp__536871883 = [];
      colontmp__536871883 = self_2785018088.children;
      var i_536871884 = 0;
      var L_536871885 = (colontmp__536871883).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871884 < L_536871885)) break Label9;
            c_2785018120 = colontmp__536871883[chckIndx(i_536871884, 0, (colontmp__536871883).length - 1)];
            invalidate_2785018087(c_2785018120, currentIndex_2785018089, self_2785018088.lastInvalidationRect);
            i_536871884 = addInt(i_536871884, 1);
            if (!(((colontmp__536871883).length == L_536871885))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018088.m_type, NTI2785017874)) {
    Label10: {
      var c_2785018130 = null;
      var colontmp__536871888 = [];
      colontmp__536871888 = self_2785018088.children;
      var i_536871889 = 0;
      var L_536871890 = (colontmp__536871888).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871889 < L_536871890)) break Label12;
            c_2785018130 = colontmp__536871888[chckIndx(i_536871889, 0, (colontmp__536871888).length - 1)];
            invalidate_2785018087(c_2785018130, currentIndex_2785018089, self_2785018088.lastInvalidationRect);
            i_536871889 = addInt(i_536871889, 1);
            if (!(((colontmp__536871888).length == L_536871890))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}
  };

  
}

function hasKey_3187671625(t_3187671628, key_3187671629) {
  var result_3187671630 = false;

    var hc_3187671631 = [0];
    result_3187671630 = (0 <= rawGet_2516583429(t_3187671628, key_3187671629, hc_3187671631, 0));

  return result_3187671630;

}

function contains_3187671619(t_3187671622, key_3187671623) {
  var result_3187671624 = false;

  BeforeRet: {
    result_3187671624 = hasKey_3187671625(t_3187671622, key_3187671623);
    break BeforeRet;
  };

  return result_3187671624;

}

function HEX5BHEX5D_3187671709(t_3187671712, key_3187671713) {
  var result_3187671714 = null;

    var hcHEX60gensym22_3187671715 = [0];
    var indexHEX60gensym22_3187671722 = rawGet_2516583429(t_3187671712, key_3187671713, hcHEX60gensym22_3187671715, 0);
    if ((0 <= indexHEX60gensym22_3187671722)) {
    result_3187671714 = t_3187671712.data[chckIndx(indexHEX60gensym22_3187671722, 0, (t_3187671712.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_3187671713);
    }
    

  return result_3187671714;

}

function max_855639778(x_855639780, y_855639781) {
    var Temporary1;

  var result_855639782 = 0;

    if ((y_855639781 <= x_855639780)) {
    Temporary1 = x_855639780;
    }
    else {
    Temporary1 = y_855639781;
    }
    
    result_855639782 = Temporary1;

  return result_855639782;

}

function nsuRFindStr(s_855639772, sub_855639773, start_855639774, last_855639775) {
    var Temporary1;
    var Temporary2;

  var result_855639776 = 0;

  BeforeRet: {
    if (((sub_855639773).length == 0)) {
    if ((last_855639775 < 0)) {
    Temporary1 = (s_855639772).length;
    }
    else {
    Temporary1 = last_855639775;
    }
    
    var rightIndex_855639777 = chckRange(Temporary1, 0, 2147483647);
    result_855639776 = max_855639778(start_855639774, rightIndex_855639777);
    break BeforeRet;
    }
    
    if ((subInt((s_855639772).length, start_855639774) < (sub_855639773).length)) {
    result_855639776 = -1;
    break BeforeRet;
    }
    
    if ((last_855639775 == -1)) {
    Temporary2 = (s_855639772).length - 1;
    }
    else {
    Temporary2 = last_855639775;
    }
    
    var last_855639783 = Temporary2;
    result_855639776 = 0;
    Label3: {
      var i_855639789 = 0;
      var colontmp__536871897 = 0;
      var colontmp__536871898 = 0;
      colontmp__536871897 = addInt(subInt(last_855639783, (sub_855639773).length), 1);
      colontmp__536871898 = start_855639774;
      var res_536871899 = colontmp__536871897;
      Label4: {
          Label5: while (true) {
          if (!(colontmp__536871898 <= res_536871899)) break Label5;
            i_855639789 = res_536871899;
            Label6: {
              var j_855639794 = 0;
              var colontmp__536871894 = 0;
              colontmp__536871894 = subInt((sub_855639773).length, 1);
              var res_536871895 = 0;
              Label7: {
                  Label8: while (true) {
                  if (!(res_536871895 <= colontmp__536871894)) break Label8;
                    j_855639794 = res_536871895;
                    result_855639776 = i_855639789;
                    if (!((sub_855639773[chckIndx(j_855639794, 0, (sub_855639773).length - 1)] == s_855639772[chckIndx(addInt(i_855639789, j_855639794), 0, (s_855639772).length - 1)]))) {
                    result_855639776 = -1;
                    break Label6;
                    }
                    
                    res_536871895 = addInt(res_536871895, 1);
                  }
              };
            };
            if (!((result_855639776 == -1))) {
            break BeforeRet;
            }
            
            res_536871899 = subInt(res_536871899, 1);
          }
      };
    };
    result_855639776 = -1;
    break BeforeRet;
  };

  return result_855639776;

}

function getCascading_3288334607(table_3288334609, key_3288334610, default_3288334611) {
  var result_3288334612 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (contains_3187671619(table_3288334609, key_3288334610)) {
    result_3288334612 = nimCopy(result_3288334612, HEX5BHEX5D_3187671709(table_3288334609, key_3288334610), NTI2550136835);
    break BeforeRet;
    }
    
    var index_3288334718 = nsuRFindStr(key_3288334610, [46], 0, -1);
    if (!((index_3288334718 == -1))) {
    result_3288334612 = nimCopy(result_3288334612, getCascading_3288334607(table_3288334609, HEX5BHEX5D_855639291(key_3288334610, HEX2EHEX2E_805306418(0, subInt(index_3288334718, 1))), default_3288334611), NTI2550136835);
    break BeforeRet;
    }
    
    result_3288334612 = nimCopy(result_3288334612, default_3288334611, NTI2550136835);
    break BeforeRet;
  };

  return result_3288334612;

}

function color_3288334596(theme_3288334598, name_3288334599, default_3288334600) {
  var result_3288334601 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3288334601 = nimCopy(result_3288334601, getCascading_3288334607(theme_3288334598.colors, name_3288334599, color_2634022945(default_3288334600)), NTI2550136835);
    break BeforeRet;
  };

  return result_3288334601;

}

function HEX3DHEX3D_2785017924(x_2785017926, y_2785017927) {
  var result_2785017928 = false;

  BeforeRet: {
    if (!((x_2785017926.r == y_2785017927.r))) {
    result_2785017928 = false;
    break BeforeRet;
    }
    
    if (!((x_2785017926.g == y_2785017927.g))) {
    result_2785017928 = false;
    break BeforeRet;
    }
    
    if (!((x_2785017926.b == y_2785017927.b))) {
    result_2785017928 = false;
    break BeforeRet;
    }
    
    if (!((x_2785017926.a == y_2785017927.a))) {
    result_2785017928 = false;
    break BeforeRet;
    }
    
    result_2785017928 = true;
    break BeforeRet;
  };

  return result_2785017928;

}

function updateForegroundColor_2785017920(self_2785017921, color_2785017922, frameIndex_2785017923) {
    if (!(HEX3DHEX3D_2785017924(self_2785017921.foregroundColor, color_2785017922))) {
    self_2785017921.lastHierarchyChange = nimMax(self_2785017921.lastHierarchyChange, frameIndex_2785017923);
    }
    
    self_2785017921.foregroundColor = nimCopy(self_2785017921.foregroundColor, color_2785017922, NTI2550136835);

  
}

function updateLastHierarchyChangeFromChildren_2785017942(self_2785017943, currentIndex_2785017944) {
    if (isObj(self_2785017943.m_type, NTI2785017868)) {
    Label1: {
      var c_2785017974 = null;
      var colontmp__536871902 = [];
      colontmp__536871902 = self_2785017943.children;
      var i_536871903 = 0;
      var L_536871904 = (colontmp__536871902).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871903 < L_536871904)) break Label3;
            c_2785017974 = colontmp__536871902[chckIndx(i_536871903, 0, (colontmp__536871902).length - 1)];
            updateLastHierarchyChangeFromChildren_2785017942(c_2785017974, currentIndex_2785017944);
            self_2785017943.lastHierarchyChange = nimMax(nimMax(self_2785017943.lastHierarchyChange, c_2785017974.lastHierarchyChange), c_2785017974.lastBoundsChange);
            i_536871903 = addInt(i_536871903, 1);
            if (!(((colontmp__536871902).length == L_536871904))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785017943.m_type, NTI2785017870)) {
    Label4: {
      var c_2785017985 = null;
      var colontmp__536871907 = [];
      colontmp__536871907 = self_2785017943.children;
      var i_536871908 = 0;
      var L_536871909 = (colontmp__536871907).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871908 < L_536871909)) break Label6;
            c_2785017985 = colontmp__536871907[chckIndx(i_536871908, 0, (colontmp__536871907).length - 1)];
            updateLastHierarchyChangeFromChildren_2785017942(c_2785017985, currentIndex_2785017944);
            self_2785017943.lastHierarchyChange = nimMax(nimMax(self_2785017943.lastHierarchyChange, c_2785017985.lastHierarchyChange), c_2785017985.lastBoundsChange);
            i_536871908 = addInt(i_536871908, 1);
            if (!(((colontmp__536871907).length == L_536871909))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785017943.m_type, NTI2785017872)) {
    Label7: {
      var c_2785017996 = null;
      var colontmp__536871912 = [];
      colontmp__536871912 = self_2785017943.children;
      var i_536871913 = 0;
      var L_536871914 = (colontmp__536871912).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871913 < L_536871914)) break Label9;
            c_2785017996 = colontmp__536871912[chckIndx(i_536871913, 0, (colontmp__536871912).length - 1)];
            updateLastHierarchyChangeFromChildren_2785017942(c_2785017996, currentIndex_2785017944);
            self_2785017943.lastHierarchyChange = nimMax(nimMax(self_2785017943.lastHierarchyChange, c_2785017996.lastHierarchyChange), c_2785017996.lastBoundsChange);
            i_536871913 = addInt(i_536871913, 1);
            if (!(((colontmp__536871912).length == L_536871914))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785017943.m_type, NTI2785017874)) {
    Label10: {
      var c_2785018007 = null;
      var colontmp__536871917 = [];
      colontmp__536871917 = self_2785017943.children;
      var i_536871918 = 0;
      var L_536871919 = (colontmp__536871917).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871918 < L_536871919)) break Label12;
            c_2785018007 = colontmp__536871917[chckIndx(i_536871918, 0, (colontmp__536871917).length - 1)];
            updateLastHierarchyChangeFromChildren_2785017942(c_2785018007, currentIndex_2785017944);
            self_2785017943.lastHierarchyChange = nimMax(nimMax(self_2785017943.lastHierarchyChange, c_2785018007.lastHierarchyChange), c_2785018007.lastBoundsChange);
            i_536871918 = addInt(i_536871918, 1);
            if (!(((colontmp__536871917).length == L_536871919))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785017943.m_type, NTI2785017876)) {
    if (!(eqStrings(self_2785017943.text, self_2785017943.lastRenderedText))) {
    self_2785017943.lastHierarchyChange = nimMax(self_2785017943.lastHierarchyChange, currentIndex_2785017944);
    }
    
    }
    }}}}

  
}

function updateStatusBar_3254779921(self_3254779922, frameIndex_3254779923, statusBarWidget_3254779924) {
    var Temporary1;

    var statusWidget_3254779925 = null;
    var commandLineWidget_3254779926 = null;
    if (((statusBarWidget_3254779924.children).length == 0)) {
    statusWidget_3254779925 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.5)}, NTI2785017867), lastHierarchyChange: frameIndex_3254779923, m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3254779924.children.push(statusWidget_3254779925);;
    commandLineWidget_3254779926 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.5), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3254779923, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3254779924.children.push(commandLineWidget_3254779926);;
    layoutWidget_2785018180(statusWidget_3254779925, statusBarWidget_3254779924.lastBounds, frameIndex_3254779923, self_3254779922.platform.layoutOptions);
    layoutWidget_2785018180(commandLineWidget_3254779926, statusBarWidget_3254779924.lastBounds, frameIndex_3254779923, self_3254779922.platform.layoutOptions);
    }
    else {
      statusWidget_3254779925 = statusBarWidget_3254779924.children[chckIndx(0, 0, (statusBarWidget_3254779924.children).length - 1)];
      commandLineWidget_3254779926 = statusBarWidget_3254779924.children[chckIndx(1, 0, (statusBarWidget_3254779924.children).length - 1)];
    }
    
    var textColor_3254779943 = color_3288334596(self_3254779922.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((self_3254779922.currentMode).length == 0)) {
    Temporary1 = [110,111,114,109,97,108];
    }
    else {
    Temporary1 = self_3254779922.currentMode;
    }
    
    statusWidget_3254779925.text = nimCopy(null, Temporary1, NTI33554449);
    updateForegroundColor_2785017920(statusWidget_3254779925, textColor_3254779943, frameIndex_3254779923);
    updateLastHierarchyChangeFromChildren_2785017942(statusWidget_3254779925, frameIndex_3254779923);
    statusBarWidget_3254779924.lastHierarchyChange = nimMax(statusBarWidget_3254779924.lastHierarchyChange, statusWidget_3254779925.lastHierarchyChange);
    activeHEX3D_2415919215(getCommandLineTextEditor_1291851060(self_3254779922), self_3254779922.commandLineMode);
    updateWidget_3271557130(getCommandLineTextEditor_1291851060(self_3254779922), self_3254779922, commandLineWidget_3254779926, frameIndex_3254779923);
    statusBarWidget_3254779924.lastHierarchyChange = nimMax(statusBarWidget_3254779924.lastHierarchyChange, commandLineWidget_3254779926.lastHierarchyChange);

  
}

function updateInvalidationFromChildren_2785018131(self_2785018132, currentIndex_2785018133, recurse_2785018134) {
    if (isObj(self_2785018132.m_type, NTI2785017868)) {
    Label1: {
      var c_2785018144 = null;
      var colontmp__536871922 = [];
      colontmp__536871922 = self_2785018132.children;
      var i_536871923 = 0;
      var L_536871924 = (colontmp__536871922).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871923 < L_536871924)) break Label3;
            c_2785018144 = colontmp__536871922[chckIndx(i_536871923, 0, (colontmp__536871922).length - 1)];
            if (recurse_2785018134) {
            updateInvalidationFromChildren_2785018131(c_2785018144, currentIndex_2785018133, recurse_2785018134);
            }
            
            self_2785018132.lastInvalidation = nimMax(nimMax(self_2785018132.lastInvalidation, c_2785018144.lastInvalidation), currentIndex_2785018133);
            i_536871923 = addInt(i_536871923, 1);
            if (!(((colontmp__536871922).length == L_536871924))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018132.m_type, NTI2785017870)) {
    Label4: {
      var c_2785018154 = null;
      var colontmp__536871927 = [];
      colontmp__536871927 = self_2785018132.children;
      var i_536871928 = 0;
      var L_536871929 = (colontmp__536871927).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871928 < L_536871929)) break Label6;
            c_2785018154 = colontmp__536871927[chckIndx(i_536871928, 0, (colontmp__536871927).length - 1)];
            if (recurse_2785018134) {
            updateInvalidationFromChildren_2785018131(c_2785018154, currentIndex_2785018133, recurse_2785018134);
            }
            
            self_2785018132.lastInvalidation = nimMax(nimMax(self_2785018132.lastInvalidation, c_2785018154.lastInvalidation), currentIndex_2785018133);
            i_536871928 = addInt(i_536871928, 1);
            if (!(((colontmp__536871927).length == L_536871929))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018132.m_type, NTI2785017872)) {
    Label7: {
      var c_2785018164 = null;
      var colontmp__536871932 = [];
      colontmp__536871932 = self_2785018132.children;
      var i_536871933 = 0;
      var L_536871934 = (colontmp__536871932).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871933 < L_536871934)) break Label9;
            c_2785018164 = colontmp__536871932[chckIndx(i_536871933, 0, (colontmp__536871932).length - 1)];
            if (recurse_2785018134) {
            updateInvalidationFromChildren_2785018131(c_2785018164, currentIndex_2785018133, recurse_2785018134);
            }
            
            self_2785018132.lastInvalidation = nimMax(nimMax(self_2785018132.lastInvalidation, c_2785018164.lastInvalidation), currentIndex_2785018133);
            i_536871933 = addInt(i_536871933, 1);
            if (!(((colontmp__536871932).length == L_536871934))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018132.m_type, NTI2785017874)) {
    Label10: {
      var c_2785018174 = null;
      var colontmp__536871937 = [];
      colontmp__536871937 = self_2785018132.children;
      var i_536871938 = 0;
      var L_536871939 = (colontmp__536871937).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871938 < L_536871939)) break Label12;
            c_2785018174 = colontmp__536871937[chckIndx(i_536871938, 0, (colontmp__536871937).length - 1)];
            if (recurse_2785018134) {
            updateInvalidationFromChildren_2785018131(c_2785018174, currentIndex_2785018133, recurse_2785018134);
            }
            
            self_2785018132.lastInvalidation = nimMax(nimMax(self_2785018132.lastInvalidation, c_2785018174.lastInvalidation), currentIndex_2785018133);
            i_536871938 = addInt(i_536871938, 1);
            if (!(((colontmp__536871937).length == L_536871939))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}

  
}

function updateWidgetTree_3254779983(self_3254779984, frameIndex_3254779985) {
            var Temporary4;
            var Temporary8;

    if ((self_3254779984.widget == null)) {
    mainStack_3254779945[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), right: -1.0, logLayout: false, m_type: NTI2785017870, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
    self_3254779984.widget = mainStack_3254779945[0];
    mainPanel_3254779947[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainStack_3254779945[0].children.push(mainPanel_3254779947[0]);;
    viewPanel_3254779946[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), bottom: (-2.0 * totalLineHeight_2768240810(self_3254779984.platform)), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainPanel_3254779947[0].children.push(viewPanel_3254779946[0]);;
    commandLineWidget_3254779944[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 1.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), top: (-2.0 * totalLineHeight_2768240810(self_3254779984.platform)), fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    mainPanel_3254779947[0].children.push(commandLineWidget_3254779944[0]);;
    layoutWidget_2785018180(self_3254779984.widget, rect_2147483672(vec2_2164261725(0.0, 0.0), size_2768240760(self_3254779984.platform)), frameIndex_3254779985, self_3254779984.platform.layoutOptions);
    }
    
    if (viewPanel_3254779946[0].children.length < 0) { for (var i = viewPanel_3254779946[0].children.length ; i < 0 ; ++i) viewPanel_3254779946[0].children.push(null); }
               else { viewPanel_3254779946[0].children.length = 0; };
    var rects_3254780008 = layoutViews_1291848236(self_3254779984.layout, self_3254779984.layout_props, rect_2147483666(0.0, 0.0, 1.0, 1.0), (self_3254779984.views).length);
    Label1: {
      var i_3254780014 = 0;
      var view_3254780015 = null;
      var i_536871838 = 0;
      var L_536871839 = (self_3254779984.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871838 < L_536871839)) break Label3;
            i_3254780014 = i_536871838;
            view_3254780015 = self_3254779984.views[chckIndx(i_536871838, 0, (self_3254779984.views).length - 1)];
            var widget_3254780016 = null;
            if (contains_3254780059(widgetsPerEditor_3254779973[0], view_3254780015.editor.id)) {
            widget_3254780016 = (Temporary4 = HEX5BHEX5D_3254780358(widgetsPerEditor_3254779973[0], view_3254780015.editor.id), Temporary4)[0][Temporary4[1]];
            }
            else {
              widget_3254780016 = {lastHierarchyChange: frameIndex_3254779985, logLayout: false, m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3254780477(widgetsPerEditor_3254779973[0], view_3254780015.editor.id, widget_3254780016);
            }
            
            if ((i_3254780014 < (rects_3254780008).length)) {
            var colontmp__536871836 = xy_2147483680(rects_3254780008[chckIndx(i_3254780014, 0, (rects_3254780008).length - 1)]);
            var colontmp__536871837 = vec2_2164261725((rects_3254780008[chckIndx(i_3254780014, 0, (rects_3254780008).length - 1)].x + rects_3254780008[chckIndx(i_3254780014, 0, (rects_3254780008).length - 1)].w), (rects_3254780008[chckIndx(i_3254780014, 0, (rects_3254780008).length - 1)].y + rects_3254780008[chckIndx(i_3254780014, 0, (rects_3254780008).length - 1)].h));
            widget_3254780016.anchor = nimCopy(widget_3254780016.anchor, {Field0: nimCopy(null, colontmp__536871836, NTI2164261152), Field1: nimCopy(null, colontmp__536871837, NTI2164261152)}, NTI2785017867);
            layoutWidget_2785018180(widget_3254780016, viewPanel_3254779946[0].lastBounds, frameIndex_3254779985, self_3254779984.platform.layoutOptions);
            viewPanel_3254779946[0].children.push(widget_3254780016);;
            activeHEX3D_2415919215(view_3254780015.editor, (self_3254779984.currentView == i_3254780014));
            updateWidget_3271557130(view_3254780015.editor, self_3254779984, widget_3254780016, frameIndex_3254779985);
            viewPanel_3254779946[0].lastHierarchyChange = nimMax(viewPanel_3254779946[0].lastHierarchyChange, widget_3254780016.lastHierarchyChange);
            }
            
            i_536871838 = addInt(i_536871838, 1);
            if (!(((self_3254779984.views).length == L_536871839))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    mainPanel_3254779947[0].lastHierarchyChange = nimMax(mainPanel_3254779947[0].lastHierarchyChange, viewPanel_3254779946[0].lastHierarchyChange);
    var lastPopups_3254781546 = HEX5BHEX5D_3254781522(mainStack_3254779945[0].children, HEX2EHEX2E_1040187488(1, 1));
    if (mainStack_3254779945[0].children.length < 1) { for (var i = mainStack_3254779945[0].children.length ; i < 1 ; ++i) mainStack_3254779945[0].children.push(null); }
               else { mainStack_3254779945[0].children.length = 1; };
    Label5: {
      var i_3254781583 = 0;
      var popup_3254781584 = null;
      var i_536871845 = 0;
      var L_536871846 = (self_3254779984.popups).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536871845 < L_536871846)) break Label7;
            i_3254781583 = i_536871845;
            popup_3254781584 = self_3254779984.popups[chckIndx(i_536871845, 0, (self_3254779984.popups).length - 1)];
            var widget_3254781585 = null;
            if (contains_3254780059(widgetsPerEditor_3254779973[0], popup_3254781584.id)) {
            widget_3254781585 = (Temporary8 = HEX5BHEX5D_3254780358(widgetsPerEditor_3254779973[0], popup_3254781584.id), Temporary8)[0][Temporary8[1]];
            }
            else {
              widget_3254781585 = {backgroundColor: color_2550136904(1.0, 0.0, 1.0, 1.0), fillBackground: true, lastHierarchyChange: frameIndex_3254779985, logLayout: false, m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3254780477(widgetsPerEditor_3254779973[0], popup_3254781584.id, widget_3254781585);
            }
            
            var colontmp__536871842 = vec2_2164261725(0.25, 0.25);
            var colontmp__536871843 = vec2_2164261725(0.75, 0.75);
            widget_3254781585.anchor = nimCopy(widget_3254781585.anchor, {Field0: nimCopy(null, colontmp__536871842, NTI2164261152), Field1: nimCopy(null, colontmp__536871843, NTI2164261152)}, NTI2785017867);
            layoutWidget_2785018180(widget_3254781585, mainStack_3254779945[0].lastBounds, frameIndex_3254779985, self_3254779984.platform.layoutOptions);
            mainStack_3254779945[0].children.push(widget_3254781585);;
            updateWidget_3271557136(popup_3254781584, self_3254779984, widget_3254781585, frameIndex_3254779985);
            mainStack_3254779945[0].lastHierarchyChange = nimMax(mainStack_3254779945[0].lastHierarchyChange, widget_3254781585.lastHierarchyChange);
            i_536871845 = addInt(i_536871845, 1);
            if (!(((self_3254779984.popups).length == L_536871846))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      var p_3254781744 = null;
      var i_536871855 = 0;
      var L_536871856 = (lastPopups_3254781546).length;
      Label10: {
          Label11: while (true) {
          if (!(i_536871855 < L_536871856)) break Label11;
            p_3254781744 = lastPopups_3254781546[chckIndx(i_536871855, 0, (lastPopups_3254781546).length - 1)];
            Label12: {
              if (contains_3254781745(mainStack_3254779945[0].children, p_3254781744)) {
              break Label12;
              }
              
              Label13: {
                var c_3254781781 = null;
                var i_536871852 = 0;
                var L_536871853 = (mainStack_3254779945[0].children).length;
                Label14: {
                    Label15: while (true) {
                    if (!(i_536871852 < L_536871853)) break Label15;
                      c_3254781781 = mainStack_3254779945[0].children[chckIndx(i_536871852, 0, (mainStack_3254779945[0].children).length - 1)];
                      invalidate_2785018087(c_3254781781, frameIndex_3254779985, p_3254781744.lastBounds);
                      i_536871852 = addInt(i_536871852, 1);
                      if (!(((mainStack_3254779945[0].children).length == L_536871853))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            i_536871855 = addInt(i_536871855, 1);
            if (!(((lastPopups_3254781546).length == L_536871856))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    updateStatusBar_3254779921(self_3254779984, frameIndex_3254779985, commandLineWidget_3254779944[0]);
    mainPanel_3254779947[0].lastHierarchyChange = nimMax(mainPanel_3254779947[0].lastHierarchyChange, commandLineWidget_3254779944[0].lastHierarchyChange);
    mainStack_3254779945[0].lastHierarchyChange = nimMax(mainStack_3254779945[0].lastHierarchyChange, mainPanel_3254779947[0].lastHierarchyChange);
    updateInvalidationFromChildren_2785018131(mainStack_3254779945[0], -1, false);
    self_3254779984.widget.lastHierarchyChange = nimMax(self_3254779984.widget.lastHierarchyChange, commandLineWidget_3254779944[0].lastHierarchyChange);

  
}

function layoutWidgetTree_3254781800(self_3254781801, size_3254781802, frameIndex_3254781803) {
  BeforeRet: {
    self_3254781801.lastBounds = nimCopy(self_3254781801.lastBounds, rect_2147483672(vec2_2164261725(0.0, 0.0), size_3254781802), NTI2147483653);
    if ((self_3254781801.widget == null)) {
    break BeforeRet;
    }
    
    layoutWidget_2785018180(self_3254781801.widget, self_3254781801.lastBounds, frameIndex_3254781803, self_3254781801.platform.layoutOptions);
  };

  
}

function requestRender_536871264(redrawEverything_536871265) {
    
function HEX3Aanonymous_536871266(time_536871267) {
        hasRequestedRerender_536870979[0] = false;
        isRenderInProgress_536870980[0] = true;
        try {
        try {
        var layoutTime_536871273 = 0.0;
        var updateTime_536871274 = 0.0;
        var renderTime_536871275 = 0.0;
        Label3: {
          ed_536870949[0].frameTimer = startTimer_2080374869();
          updateFontSettings_3338666063(rend_536870947[0]);
          var updateTimer_536871276 = startTimer_2080374869();
          updateWidgetTree_3254779983(ed_536870949[0], frameIndex_536870978[0]);
          updateTime_536871274 = ms_2080374842(elapsed_2080374866(updateTimer_536871276));
          var layoutTimer_536871277 = startTimer_2080374869();
          layoutWidgetTree_3254781800(ed_536870949[0], size_2768240760(rend_536870947[0]), frameIndex_536870978[0]);
          layoutTime_536871273 = ms_2080374842(elapsed_2080374866(layoutTimer_536871277));
          var renderTimer_536871278 = startTimer_2080374869();
          render_2768240751(rend_536870947[0], ed_536870949[0].widget, frameIndex_536870978[0]);
          renderTime_536871275 = ms_2080374842(elapsed_2080374866(renderTimer_536871278));
          frameTime_536870977[0] = ms_2080374842(elapsed_2080374866(ed_536870949[0].frameTimer));
        };
        if ((20.0 < frameTime_536870977[0])) {
        var fmtRes_536871283 = [mnewString(0)];
        fmtRes_536871283[0].push.apply(fmtRes_536871283[0], [70,114,97,109,101,58,32]);;
        formatValue_2785018295(fmtRes_536871283, 0, frameTime_536870977[0], [62,53,46,50]);
        fmtRes_536871283[0].push.apply(fmtRes_536871283[0], [109,115,32,40,117,58,32]);;
        formatValue_2785018295(fmtRes_536871283, 0, updateTime_536871274, [62,53,46,50]);
        fmtRes_536871283[0].push.apply(fmtRes_536871283[0], [109,115,44,32,108,58,32]);;
        formatValue_2785018295(fmtRes_536871283, 0, layoutTime_536871273, [62,53,46,50]);
        fmtRes_536871283[0].push.apply(fmtRes_536871283[0], [109,115,44,32,114,58,32]);;
        formatValue_2785018295(fmtRes_536871283, 0, renderTime_536871275, [62,53,46,50]);
        fmtRes_536871283[0].push.apply(fmtRes_536871283[0], [109,115,41]);;
        log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_536871283[0], NTI33554449)]);
        }
        
        } finally {
        frameIndex_536870978[0] = addInt(frameIndex_536870978[0], 1);
        }
        } finally {
        isRenderInProgress_536870980[0] = false;
        }

      
    }

  BeforeRet: {
    if (!(initializedEditor_536870948[0])) {
    break BeforeRet;
    }
    
    if (hasRequestedRerender_536870979[0]) {
    break BeforeRet;
    }
    
    if (isRenderInProgress_536870980[0]) {
    break BeforeRet;
    }
    
    var _ = window.requestAnimationFrame(HEX3Aanonymous_536871266);
  };

  
}

function subscribe_536871751(event_536871753, callback_536871755) {
  var result_536871756 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_536871756 = nimCopy(result_536871756, newId_2046820597(), NTI2046820355);
    event_536871753.handlers.push({Field0: nimCopy(null, result_536871756, NTI2046820355), Field1: callback_536871755});;

  return result_536871756;

}

function HEX3Aanonymous_536871333(event_536871351) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871382(event_536871400) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871431(event_536871449) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871480(event_536871498) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871529(event_536871547) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871578(event_536871596) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871627(event_536871645) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871676() {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871725(redrawEverything_536871726) {
    requestRender_536871264(redrawEverything_536871726);

  
}
var _ = subscribe_1291851158(rend_536870947[0].onKeyPress, HEX3Aanonymous_536871333);
var _ = subscribe_1291851158(rend_536870947[0].onKeyRelease, HEX3Aanonymous_536871382);
var _ = subscribe_1291851158(rend_536870947[0].onRune, HEX3Aanonymous_536871431);
var _ = subscribe_1291851328(rend_536870947[0].onMousePress, HEX3Aanonymous_536871480);
var _ = subscribe_1291851328(rend_536870947[0].onMouseRelease, HEX3Aanonymous_536871529);
var _ = subscribe_1291851449(rend_536870947[0].onMouseMove, HEX3Aanonymous_536871578);
var _ = subscribe_1291851521(rend_536870947[0].onScroll, HEX3Aanonymous_536871627);
var _ = subscribe_1291851665(rend_536870947[0].onCloseRequested, HEX3Aanonymous_536871676);
var _ = subscribe_536871751(rend_536870947[0].onResized, HEX3Aanonymous_536871725);
Label311: {
  setHandleInputs_1291855229(ed_536870949[0], [101,100,105,116,111,114,46,116,101,120,116], true);
  scriptSetOptionString_1291861282([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116,46], [98,111,116,104]);
  scriptSetOptionBool_1291861200([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101,46], false);
  addCommandScript_1291859614(ed_536870949[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,108], [108,111,97,100,45,99,117,114,114,101,110,116,45,99,111,110,102,105,103], []);
  addCommandScript_1291859614(ed_536870949[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,115], [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116], []);
};
initializedEditor_536870948[0] = true;
requestRender_536871264(false);
const hiXorLoJs_override_mask = BigInt("0xffffffffffffffff");
const hiXorLoJs_override_shift = BigInt("64");
function hiXorLoJs_override(a, b) {
    var prod = (a * b);
    return ((prod >> hiXorLoJs_override_shift) ^ (prod & hiXorLoJs_override_mask));
}

var hashWangYi1_override_c1 = BigInt("0xa0761d6478bd642f");
var hashWangYi1_override_c2 = BigInt("0xe7037ed1a0b428db");
var hashWangYi1_override_c3 = BigInt("0xeb44accab455d16d");

function hashWangYi1_override(x) {
    if (typeof BigInt != 'undefined') {
        var res = hiXorLoJs_override(hiXorLoJs_override(hashWangYi1_override_c1, (BigInt(x) ^ hashWangYi1_override_c2)), hashWangYi1_override_c3);
        return Number(BigInt.asIntN(32, res));
    }
    else {
        return (x & 4294967295);
    }
}


function hashWangYi1_1325400278(x_1325400280) {
  var result_1325400281 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym10_1325400300 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym10_1325400301 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym10_1325400302 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym10_1325400303 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym10_1325400300, (BigInt(x_1325400280) ^ P1HEX60gensym10_1325400301)), P58HEX60gensym10_1325400302);
    result_1325400281 = Number((() => { const i = resHEX60gensym10_1325400303, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400281 = (x_1325400280 & 4294967295);
    }
    

  return result_1325400281;

}

function hashWangYi1_536871965(x_536871967) {
  var result_536871968 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_536871981 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_536871982 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_536871983 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_536871984 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_536871981, (BigInt(x_536871967) ^ P1HEX60gensym6_536871982)), P58HEX60gensym6_536871983);
    result_536871968 = Number((() => { const i = resHEX60gensym6_536871984, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_536871968 = (x_536871967 & 4294967295);
    }
    

  return result_536871968;

}
window.hashWangYi1_1325400278 = hashWangYi1_override;
window.hashWangYi1_1325400244 = hashWangYi1_override;
window.hashWangYi1_536871965 = hashWangYi1_override;

function formatValue_1291848865(result_1291848867, result_1291848867_Idx, value_1291848868, specifier_1291848869) {
    formatValue_721420459(result_1291848867, result_1291848867_Idx, HEX24_1627394481(value_1291848868), specifier_1291848869);

  
}

function handleUnknownDocumentEditorAction_1291848854(self_1291848855, editor_1291848856, action_1291848857, args_1291848858) {
  var result_1291848859 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (handleUnknownDocumentEditorAction_2751463456(self_1291848855.scriptContext, editor_1291848856, action_1291848857, args_1291848858)) {
    result_1291848859 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848864 = [mnewString(0)];
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,68,111,99,117,109,101,110,116,69,100,105,116,111,114,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848864, 0, action_1291848857, []);
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [32]);;
    formatValue_1291848865(fmtRes_1291848864, 0, args_1291848858, []);
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848864, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848864[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848859 = 0;
    break BeforeRet;
  };

  return result_1291848859;

}

function insert_2818593848(x_2818593850, x_2818593850_Idx, item_2818593851, i_2818593852) {
    var it_2818593872 = null;
    x_2818593850[x_2818593850_Idx] = x_2818593850[x_2818593850_Idx] || []; x_2818593850[x_2818593850_Idx].splice(i_2818593852, 0, it_2818593872);
    x_2818593850[x_2818593850_Idx][chckIndx(i_2818593852, 0, (x_2818593850[x_2818593850_Idx]).length - 1)] = item_2818593851;

  
}

function toJson_2818584039(self_2818584040, opt_2818584041) {
  var result_2818584042 = null;

    result_2818584042 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818584042, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,116,101,120,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2818584042, [105,100], newJInt_1627390040(self_2818584040.id));

  return result_2818584042;

}

function none_2818583945() {
  var result_2818583951 = ({val: null});

  return result_2818583951;

}

function some_2818584004(val_2818584006) {
  var result_2818584007 = ({val: null});

    if (!(!((val_2818584006 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818584007.val = val_2818584006;

  return result_2818584007;

}

function getTextDocumentEditor_2818583935(wrapper_2818583936) {
      var Temporary1;

  var result_2818583941 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2818583941 = nimCopy(result_2818583941, none_2818583945(), NTI2818578635);
    break BeforeRet;
    }
    
      var oHEX60gensym171_2818583954 = getEditorForId_1291850661(gEditor, wrapper_2818583936.id);
      if (!isSome_2818583959(oHEX60gensym171_2818583954)) Temporary1 = false; else {        var editor_2818583996 = get_2818583979(oHEX60gensym171_2818583954);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2818583996.m_type, NTI2818572510)) {
    result_2818583941 = nimCopy(result_2818583941, some_2818584004(editor_2818583996), NTI2818578635);
    break BeforeRet;
    }
    
    }
    
    result_2818583941 = nimCopy(result_2818583941, none_2818583945(), NTI2818578635);
    break BeforeRet;
  };

  return result_2818583941;

}

function isNone_2818584296(self_2818584298) {
  var result_2818584299 = false;

    result_2818584299 = (self_2818584298.val == null);

  return result_2818584299;

}

function get_2818584316(self_2818584318) {
  var result_2818584319 = null;

    if (isNone_2818584296(self_2818584318)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818584319 = self_2818584318["val"];

  return result_2818584319;

}

function setModeScript_2818584181_2818584288(self_2818584289, mode_2818584290) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym182_2818584291 = getTextDocumentEditor_2818583935(self_2818584289);
      if (isNone_2818584296(rHEX60gensym182_2818584291)) {
      break BeforeRet;
      }
      
    };
    setMode_2818584221(get_2818584316(rHEX60gensym182_2818584291), mode_2818584290);
  };

  
}

function fromJsonHook_2818584043(t_2818584044, jsonNode_2818584045) {
    t_2818584044.id = jsonTo_2818584046(HEX5BHEX5D_1627393037(jsonNode_2818584045, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2818584356(a_2818584358, b_2818584359, opt_2818584360) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584359, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [84,101,120,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2818584359}));
    }
    
    fromJsonHook_2818584043(a_2818584358, b_2818584359);

  
}

function jsonTo_2818584350(b_2818584352, opt_2818584354) {
  var result_2818584355 = [({id: 0})];

    fromJson_2818584356(result_2818584355[0], b_2818584352, opt_2818584354);

  return result_2818584355[0];

}

function setModeApi_2818584348(HEX3Atmp_2818584184) {
  var result_2818584349 = null;

    result_2818584349 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript_2818584181_2818584288(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818584184, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584184, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym187_2818584372 = [115,101,116,77,111,100,101];
    var fmtRes_2818584377 = [mnewString(0)];
    fmtRes_2818584377[0].push.apply(fmtRes_2818584377[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584377, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym187_2818584372 || [],fmtRes_2818584377[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584349;

}

function modeScript_2818584472_2818584480(self_2818584481) {
  var result_2818584482 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym196_2818584483 = getTextDocumentEditor_2818583935(self_2818584481);
      if (isNone_2818584296(rHEX60gensym196_2818584483)) {
      break BeforeRet;
      }
      
    };
    result_2818584482 = nimCopy(null, mode_2818584477(get_2818584316(rHEX60gensym196_2818584483)), NTI33554449);
  };

  return result_2818584482;

}

function modeApi_2818584510(HEX3Atmp_2818584474) {
  var result_2818584511 = null;

  BeforeRet: {
    result_2818584511 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818584511 = toJson_1811939932(modeScript_2818584472_2818584480(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818584474, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym202_2818584521 = [109,111,100,101];
    var fmtRes_2818584526 = [mnewString(0)];
    fmtRes_2818584526[0].push.apply(fmtRes_2818584526[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584526, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym202_2818584521 || [],fmtRes_2818584526[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584511;

}

function getContextWithModeScript_2818584529_2818584538(self_2818584539, context_2818584540) {
  var result_2818584541 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym206_2818584542 = getTextDocumentEditor_2818583935(self_2818584539);
      if (isNone_2818584296(rHEX60gensym206_2818584542)) {
      break BeforeRet;
      }
      
    };
    result_2818584541 = nimCopy(null, getContextWithMode_2818583607(get_2818584316(rHEX60gensym206_2818584542), context_2818584540), NTI33554449);
  };

  return result_2818584541;

}

function getContextWithModeApi_2818584570(HEX3Atmp_2818584531) {
  var result_2818584571 = null;

  BeforeRet: {
    result_2818584571 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818584571 = toJson_1811939932(getContextWithModeScript_2818584529_2818584538(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818584531, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584531, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym212_2818584586 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2818584591 = [mnewString(0)];
    fmtRes_2818584591[0].push.apply(fmtRes_2818584591[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584591, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym212_2818584586 || [],fmtRes_2818584591[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584571;

}

function updateTargetColumnScript_2818584594_2818584602(self_2818584603, cursor_2818584604) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym216_2818584605 = getTextDocumentEditor_2818583935(self_2818584603);
      if (isNone_2818584296(rHEX60gensym216_2818584605)) {
      break BeforeRet;
      }
      
    };
    updateTargetColumn_2818584599(get_2818584316(rHEX60gensym216_2818584605), cursor_2818584604);
  };

  
}

function parseEnum_2818584657(s_2818584659) {
    var Temporary1;

  var result_2818584660 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818584659))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_2818584659 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2818584660 = Temporary1;

  return result_2818584660;

}

function fromJson_2818584645(a_2818584647, a_2818584647_Idx, b_2818584648, opt_2818584649) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584648, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], Field1: b_2818584648}));
    }
    
    switch (b_2818584648.kind) {
    case 2:
      a_2818584647[a_2818584647_Idx] = chckRange(getBiggestInt_1627390129(b_2818584648, 0), 0, 4);
      break;
    case 4:
      a_2818584647[a_2818584647_Idx] = parseEnum_2818584657(getStr_1627390106(b_2818584648, []));
      break;
    default: 
      if (true) {
      var fmtRes_2818584685 = [mnewString(0)];
      fmtRes_2818584685[0].push.apply(fmtRes_2818584685[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_2818584685, 0, [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], []);
      fmtRes_2818584685[0].push.apply(fmtRes_2818584685[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_2818584685, 0, pretty_1627394477(b_2818584648, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_2818584685[0]);
      }
      
      break;
    }

  
}

function jsonTo_2818584639(b_2818584641, opt_2818584643) {
  var result_2818584644 = [0];

    fromJson_2818584645(result_2818584644, 0, b_2818584641, opt_2818584643);

  return result_2818584644[0];

}

function updateTargetColumnApi_2818584632(HEX3Atmp_2818584596) {
  var result_2818584633 = null;

    result_2818584633 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateTargetColumnScript_2818584594_2818584602(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818584596, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818584596, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym221_2818584689 = [117,112,100,97,116,101,84,97,114,103,101,116,67,111,108,117,109,110];
    var fmtRes_2818584694 = [mnewString(0)];
    fmtRes_2818584694[0].push.apply(fmtRes_2818584694[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584694, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym221_2818584689 || [],fmtRes_2818584694[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584633;

}

function invertSelectionScript_2818584711_2818584718(self_2818584719) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym230_2818584720 = getTextDocumentEditor_2818583935(self_2818584719);
      if (isNone_2818584296(rHEX60gensym230_2818584720)) {
      break BeforeRet;
      }
      
    };
    invertSelection_2818584716(get_2818584316(rHEX60gensym230_2818584720));
  };

  
}

function invertSelectionApi_2818584746(HEX3Atmp_2818584713) {
  var result_2818584747 = null;

    result_2818584747 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    invertSelectionScript_2818584711_2818584718(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818584713, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym235_2818584753 = [105,110,118,101,114,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818584758 = [mnewString(0)];
    fmtRes_2818584758[0].push.apply(fmtRes_2818584758[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584758, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym235_2818584753 || [],fmtRes_2818584758[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584747;

}

function insertScript_2818584774_2818584787(self_2818584788, selections_2818584789, text_2818584790, notify_2818584791, record_2818584792, autoIndent_2818584793) {
  var result_2818584794 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym243_2818584795 = getTextDocumentEditor_2818583935(self_2818584788);
      if (isNone_2818584296(rHEX60gensym243_2818584795)) {
      break BeforeRet;
      }
      
    };
    result_2818584794 = nimCopy(null, insert_2818584779(get_2818584316(rHEX60gensym243_2818584795), selections_2818584789, text_2818584790, notify_2818584791, record_2818584792, autoIndent_2818584793), NTI2818579318);
  };

  return result_2818584794;

}

function insertApi_2818584827(HEX3Atmp_2818584776) {
      var Temporary6;
      var Temporary8;
      var Temporary10;

  var result_2818584828 = null;

  BeforeRet: {
    result_2818584828 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818584776))) {
      Temporary6 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818584776, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1627392983(HEX3Atmp_2818584776))) {
      Temporary8 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818584776, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = true;
      }
      
    };
    Label9: {
      if ((5 < len_1627392983(HEX3Atmp_2818584776))) {
      Temporary10 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818584776, 5), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary10 = true;
      }
      
    };
    result_2818584828 = toJson_2818585126(insertScript_2818584774_2818584787(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818584776, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584834(HEX5BHEX5D_1627393116(HEX3Atmp_2818584776, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584776, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6, Temporary8, Temporary10), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym249_2818585182 = [105,110,115,101,114,116];
    var fmtRes_2818585187 = [mnewString(0)];
    fmtRes_2818585187[0].push.apply(fmtRes_2818585187[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585187, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym249_2818585182 || [],fmtRes_2818585187[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584828;

}

function deleteScript_2818585275_2818585286(self_2818585287, selections_2818585288, notify_2818585289, record_2818585290) {
  var result_2818585291 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym276_2818585292 = getTextDocumentEditor_2818583935(self_2818585287);
      if (isNone_2818584296(rHEX60gensym276_2818585292)) {
      break BeforeRet;
      }
      
    };
    result_2818585291 = nimCopy(null, delete_2818585280(get_2818584316(rHEX60gensym276_2818585292), selections_2818585288, notify_2818585289, record_2818585290), NTI2818579834);
  };

  return result_2818585291;

}

function deleteApi_2818585322(HEX3Atmp_2818585277) {
      var Temporary5;
      var Temporary7;

  var result_2818585323 = null;

  BeforeRet: {
    result_2818585323 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818585277))) {
      Temporary5 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818585277, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818585277))) {
      Temporary7 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818585277, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    result_2818585323 = toJson_2818585126(deleteScript_2818585275_2818585286(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818585277, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584834(HEX5BHEX5D_1627393116(HEX3Atmp_2818585277, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym282_2818585348 = [100,101,108,101,116,101];
    var fmtRes_2818585353 = [mnewString(0)];
    fmtRes_2818585353[0].push.apply(fmtRes_2818585353[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585353, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym282_2818585348 || [],fmtRes_2818585353[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818585323;

}

function selectPrevScript_2818585391_2818585565(self_2818585566) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym287_2818585567 = getTextDocumentEditor_2818583935(self_2818585566);
      if (isNone_2818584296(rHEX60gensym287_2818585567)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2818585396(get_2818584316(rHEX60gensym287_2818585567));
  };

  
}

function selectPrevApi_2818585593(HEX3Atmp_2818585393) {
  var result_2818585594 = null;

    result_2818585594 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript_2818585391_2818585565(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818585393, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym292_2818585600 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2818585605 = [mnewString(0)];
    fmtRes_2818585605[0].push.apply(fmtRes_2818585605[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585605, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym292_2818585600 || [],fmtRes_2818585605[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585594;

}

function selectNextScript_2818585609_2818585760(self_2818585761) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym298_2818585762 = getTextDocumentEditor_2818583935(self_2818585761);
      if (isNone_2818584296(rHEX60gensym298_2818585762)) {
      break BeforeRet;
      }
      
    };
    selectNext_2818585614(get_2818584316(rHEX60gensym298_2818585762));
  };

  
}

function selectNextApi_2818585788(HEX3Atmp_2818585611) {
  var result_2818585789 = null;

    result_2818585789 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript_2818585609_2818585760(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818585611, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym303_2818585795 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2818585800 = [mnewString(0)];
    fmtRes_2818585800[0].push.apply(fmtRes_2818585800[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585800, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym303_2818585795 || [],fmtRes_2818585800[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585789;

}

function selectInsideScript_2818585803_2818585822(self_2818585823, cursor_2818585824) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym308_2818585825 = getTextDocumentEditor_2818583935(self_2818585823);
      if (isNone_2818584296(rHEX60gensym308_2818585825)) {
      break BeforeRet;
      }
      
    };
    selectInside_2818585808(get_2818584316(rHEX60gensym308_2818585825), cursor_2818585824);
  };

  
}

function jsonTo_2818585859(b_2818585861, opt_2818585863) {
  var result_2818585864 = [{Field0: 0, Field1: 0}];

    fromJson_2818584949(result_2818585864[0], b_2818585861, opt_2818585863);

  return result_2818585864[0];

}

function selectInsideApi_2818585852(HEX3Atmp_2818585805) {
  var result_2818585853 = null;

    result_2818585853 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectInsideScript_2818585803_2818585822(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818585805, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585859(HEX5BHEX5D_1627393116(HEX3Atmp_2818585805, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym313_2818585870 = [115,101,108,101,99,116,73,110,115,105,100,101];
    var fmtRes_2818585875 = [mnewString(0)];
    fmtRes_2818585875[0].push.apply(fmtRes_2818585875[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585875, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym313_2818585870 || [],fmtRes_2818585875[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585853;

}

function selectInsideCurrentScript_2818585880_2818585887(self_2818585888) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym317_2818585889 = getTextDocumentEditor_2818583935(self_2818585888);
      if (isNone_2818584296(rHEX60gensym317_2818585889)) {
      break BeforeRet;
      }
      
    };
    selectInsideCurrent_2818585885(get_2818584316(rHEX60gensym317_2818585889));
  };

  
}

function selectInsideCurrentApi_2818585915(HEX3Atmp_2818585882) {
  var result_2818585916 = null;

    result_2818585916 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectInsideCurrentScript_2818585880_2818585887(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818585882, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym322_2818585922 = [115,101,108,101,99,116,73,110,115,105,100,101,67,117,114,114,101,110,116];
    var fmtRes_2818585927 = [mnewString(0)];
    fmtRes_2818585927[0].push.apply(fmtRes_2818585927[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585927, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym322_2818585922 || [],fmtRes_2818585927[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585916;

}

function selectLineScript_2818585930_2818585938(self_2818585939, line_2818585940) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym326_2818585941 = getTextDocumentEditor_2818583935(self_2818585939);
      if (isNone_2818584296(rHEX60gensym326_2818585941)) {
      break BeforeRet;
      }
      
    };
    selectLine_2818585935(get_2818584316(rHEX60gensym326_2818585941), line_2818585940);
  };

  
}

function selectLineApi_2818585968(HEX3Atmp_2818585932) {
  var result_2818585969 = null;

    result_2818585969 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectLineScript_2818585930_2818585938(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818585932, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818585932, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym331_2818585980 = [115,101,108,101,99,116,76,105,110,101];
    var fmtRes_2818585985 = [mnewString(0)];
    fmtRes_2818585985[0].push.apply(fmtRes_2818585985[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585985, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym331_2818585980 || [],fmtRes_2818585985[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585969;

}

function selectLineCurrentScript_2818585988_2818585995(self_2818585996) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym334_2818585997 = getTextDocumentEditor_2818583935(self_2818585996);
      if (isNone_2818584296(rHEX60gensym334_2818585997)) {
      break BeforeRet;
      }
      
    };
    selectLineCurrent_2818585993(get_2818584316(rHEX60gensym334_2818585997));
  };

  
}

function selectLineCurrentApi_2818586023(HEX3Atmp_2818585990) {
  var result_2818586024 = null;

    result_2818586024 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectLineCurrentScript_2818585988_2818585995(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818585990, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym339_2818586030 = [115,101,108,101,99,116,76,105,110,101,67,117,114,114,101,110,116];
    var fmtRes_2818586035 = [mnewString(0)];
    fmtRes_2818586035[0].push.apply(fmtRes_2818586035[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586035, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym339_2818586030 || [],fmtRes_2818586035[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586024;

}

function selectParentTsScript_2818586038_2818586058(self_2818586059, selection_2818586060) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym343_2818586061 = getTextDocumentEditor_2818583935(self_2818586059);
      if (isNone_2818584296(rHEX60gensym343_2818586061)) {
      break BeforeRet;
      }
      
    };
    selectParentTs_2818586043(get_2818584316(rHEX60gensym343_2818586061), selection_2818586060);
  };

  
}

function selectParentTsApi_2818586088(HEX3Atmp_2818586040) {
  var result_2818586089 = null;

    result_2818586089 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectParentTsScript_2818586038_2818586058(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818586040, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586095(HEX5BHEX5D_1627393116(HEX3Atmp_2818586040, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym348_2818586106 = [115,101,108,101,99,116,80,97,114,101,110,116,84,115];
    var fmtRes_2818586111 = [mnewString(0)];
    fmtRes_2818586111[0].push.apply(fmtRes_2818586111[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586111, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym348_2818586106 || [],fmtRes_2818586111[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586089;

}

function selectParentCurrentTsScript_2818586121_2818586128(self_2818586129) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym352_2818586130 = getTextDocumentEditor_2818583935(self_2818586129);
      if (isNone_2818584296(rHEX60gensym352_2818586130)) {
      break BeforeRet;
      }
      
    };
    selectParentCurrentTs_2818586126(get_2818584316(rHEX60gensym352_2818586130));
  };

  
}

function selectParentCurrentTsApi_2818586156(HEX3Atmp_2818586123) {
  var result_2818586157 = null;

    result_2818586157 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectParentCurrentTsScript_2818586121_2818586128(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818586123, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym357_2818586163 = [115,101,108,101,99,116,80,97,114,101,110,116,67,117,114,114,101,110,116,84,115];
    var fmtRes_2818586168 = [mnewString(0)];
    fmtRes_2818586168[0].push.apply(fmtRes_2818586168[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586168, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym357_2818586163 || [],fmtRes_2818586168[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586157;

}

function insertTextScript_2818586174_2818586183(self_2818586184, text_2818586185) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym362_2818586186 = getTextDocumentEditor_2818583935(self_2818586184);
      if (isNone_2818584296(rHEX60gensym362_2818586186)) {
      break BeforeRet;
      }
      
    };
    insertText_2818586179(get_2818584316(rHEX60gensym362_2818586186), text_2818586185);
  };

  
}

function insertTextApi_2818586213(HEX3Atmp_2818586176) {
  var result_2818586214 = null;

    result_2818586214 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertTextScript_2818586174_2818586183(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818586176, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818586176, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym367_2818586225 = [105,110,115,101,114,116,84,101,120,116];
    var fmtRes_2818586230 = [mnewString(0)];
    fmtRes_2818586230[0].push.apply(fmtRes_2818586230[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586230, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym367_2818586225 || [],fmtRes_2818586230[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586214;

}

function undoScript_2818586246_2818586301(self_2818586302) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym372_2818586303 = getTextDocumentEditor_2818583935(self_2818586302);
      if (isNone_2818584296(rHEX60gensym372_2818586303)) {
      break BeforeRet;
      }
      
    };
    undo_2818586251(get_2818584316(rHEX60gensym372_2818586303));
  };

  
}

function undoApi_2818586329(HEX3Atmp_2818586248) {
  var result_2818586330 = null;

    result_2818586330 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript_2818586246_2818586301(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818586248, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym377_2818586336 = [117,110,100,111];
    var fmtRes_2818586341 = [mnewString(0)];
    fmtRes_2818586341[0].push.apply(fmtRes_2818586341[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586341, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym377_2818586336 || [],fmtRes_2818586341[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586330;

}

function redoScript_2818586348_2818586381(self_2818586382) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym382_2818586383 = getTextDocumentEditor_2818583935(self_2818586382);
      if (isNone_2818584296(rHEX60gensym382_2818586383)) {
      break BeforeRet;
      }
      
    };
    redo_2818586353(get_2818584316(rHEX60gensym382_2818586383));
  };

  
}

function redoApi_2818586409(HEX3Atmp_2818586350) {
  var result_2818586410 = null;

    result_2818586410 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript_2818586348_2818586381(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818586350, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym387_2818586416 = [114,101,100,111];
    var fmtRes_2818586421 = [mnewString(0)];
    fmtRes_2818586421[0].push.apply(fmtRes_2818586421[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586421, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym387_2818586416 || [],fmtRes_2818586421[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586410;

}

function scrollTextScript_2818586428_2818586440(self_2818586441, amount_2818586442) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym392_2818586443 = getTextDocumentEditor_2818583935(self_2818586441);
      if (isNone_2818584296(rHEX60gensym392_2818586443)) {
      break BeforeRet;
      }
      
    };
    scrollText_2818586433(get_2818584316(rHEX60gensym392_2818586443), amount_2818586442);
  };

  
}

function scrollTextApi_2818586470(HEX3Atmp_2818586430) {
  var result_2818586471 = null;

    result_2818586471 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollTextScript_2818586428_2818586440(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818586430, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586477(HEX5BHEX5D_1627393116(HEX3Atmp_2818586430, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym397_2818586540 = [115,99,114,111,108,108,84,101,120,116];
    var fmtRes_2818586545 = [mnewString(0)];
    fmtRes_2818586545[0].push.apply(fmtRes_2818586545[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586545, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym397_2818586540 || [],fmtRes_2818586545[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586471;

}

function duplicateLastSelectionScript_2818586548_2818586597(self_2818586598) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym406_2818586599 = getTextDocumentEditor_2818583935(self_2818586598);
      if (isNone_2818584296(rHEX60gensym406_2818586599)) {
      break BeforeRet;
      }
      
    };
    duplicateLastSelection_2818586553(get_2818584316(rHEX60gensym406_2818586599));
  };

  
}

function duplicateLastSelectionApi_2818586625(HEX3Atmp_2818586550) {
  var result_2818586626 = null;

    result_2818586626 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    duplicateLastSelectionScript_2818586548_2818586597(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818586550, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym411_2818586632 = [100,117,112,108,105,99,97,116,101,76,97,115,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818586637 = [mnewString(0)];
    fmtRes_2818586637[0].push.apply(fmtRes_2818586637[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586637, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym411_2818586632 || [],fmtRes_2818586637[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586626;

}

function addCursorBelowScript_2818586648_2818586667(self_2818586668) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym414_2818586669 = getTextDocumentEditor_2818583935(self_2818586668);
      if (isNone_2818584296(rHEX60gensym414_2818586669)) {
      break BeforeRet;
      }
      
    };
    addCursorBelow_2818586653(get_2818584316(rHEX60gensym414_2818586669));
  };

  
}

function addCursorBelowApi_2818586695(HEX3Atmp_2818586650) {
  var result_2818586696 = null;

    result_2818586696 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorBelowScript_2818586648_2818586667(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818586650, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym419_2818586702 = [97,100,100,67,117,114,115,111,114,66,101,108,111,119];
    var fmtRes_2818586707 = [mnewString(0)];
    fmtRes_2818586707[0].push.apply(fmtRes_2818586707[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586707, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym419_2818586702 || [],fmtRes_2818586707[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586696;

}

function addCursorAboveScript_2818586714_2818586733(self_2818586734) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym422_2818586735 = getTextDocumentEditor_2818583935(self_2818586734);
      if (isNone_2818584296(rHEX60gensym422_2818586735)) {
      break BeforeRet;
      }
      
    };
    addCursorAbove_2818586719(get_2818584316(rHEX60gensym422_2818586735));
  };

  
}

function addCursorAboveApi_2818586761(HEX3Atmp_2818586716) {
  var result_2818586762 = null;

    result_2818586762 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorAboveScript_2818586714_2818586733(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818586716, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym427_2818586768 = [97,100,100,67,117,114,115,111,114,65,98,111,118,101];
    var fmtRes_2818586773 = [mnewString(0)];
    fmtRes_2818586773[0].push.apply(fmtRes_2818586773[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586773, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym427_2818586768 || [],fmtRes_2818586773[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586762;

}

function getPrevFindResultScript_2818586776_2818587056(self_2818587057, cursor_2818587058, offset_2818587059) {
  var result_2818587060 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym432_2818587061 = getTextDocumentEditor_2818583935(self_2818587057);
      if (isNone_2818584296(rHEX60gensym432_2818587061)) {
      break BeforeRet;
      }
      
    };
    result_2818587060 = nimCopy(result_2818587060, getPrevFindResult_2818583548(get_2818584316(rHEX60gensym432_2818587061), cursor_2818587058, offset_2818587059), NTI2449473547);
  };

  return result_2818587060;

}

function getPrevFindResultApi_2818587090(HEX3Atmp_2818586778) {
      var Temporary5;

  var result_2818587091 = null;

  BeforeRet: {
    result_2818587091 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818586778))) {
      Temporary5 = jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818586778, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818587091 = toJson_2818585138(getPrevFindResultScript_2818586776_2818587056(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818586778, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585859(HEX5BHEX5D_1627393116(HEX3Atmp_2818586778, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym438_2818587111 = [103,101,116,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818587116 = [mnewString(0)];
    fmtRes_2818587116[0].push.apply(fmtRes_2818587116[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587116, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym438_2818587111 || [],fmtRes_2818587116[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818587091;

}

function getNextFindResultScript_2818587127_2818587300(self_2818587301, cursor_2818587302, offset_2818587303) {
  var result_2818587304 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym444_2818587305 = getTextDocumentEditor_2818583935(self_2818587301);
      if (isNone_2818584296(rHEX60gensym444_2818587305)) {
      break BeforeRet;
      }
      
    };
    result_2818587304 = nimCopy(result_2818587304, getNextFindResult_2818583552(get_2818584316(rHEX60gensym444_2818587305), cursor_2818587302, offset_2818587303), NTI2449473547);
  };

  return result_2818587304;

}

function getNextFindResultApi_2818587334(HEX3Atmp_2818587129) {
      var Temporary5;

  var result_2818587335 = null;

  BeforeRet: {
    result_2818587335 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587129))) {
      Temporary5 = jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818587129, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818587335 = toJson_2818585138(getNextFindResultScript_2818587127_2818587300(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818587129, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585859(HEX5BHEX5D_1627393116(HEX3Atmp_2818587129, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym450_2818587355 = [103,101,116,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818587360 = [mnewString(0)];
    fmtRes_2818587360[0].push.apply(fmtRes_2818587360[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587360, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym450_2818587355 || [],fmtRes_2818587360[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818587335;

}

function addNextFindResultToSelectionScript_2818587373_2818587388(self_2818587389) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym454_2818587390 = getTextDocumentEditor_2818583935(self_2818587389);
      if (isNone_2818584296(rHEX60gensym454_2818587390)) {
      break BeforeRet;
      }
      
    };
    addNextFindResultToSelection_2818587378(get_2818584316(rHEX60gensym454_2818587390));
  };

  
}

function addNextFindResultToSelectionApi_2818587416(HEX3Atmp_2818587375) {
  var result_2818587417 = null;

    result_2818587417 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addNextFindResultToSelectionScript_2818587373_2818587388(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818587375, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym459_2818587423 = [97,100,100,78,101,120,116,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818587428 = [mnewString(0)];
    fmtRes_2818587428[0].push.apply(fmtRes_2818587428[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587428, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym459_2818587423 || [],fmtRes_2818587428[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587417;

}

function addPrevFindResultToSelectionScript_2818587431_2818587446(self_2818587447) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym462_2818587448 = getTextDocumentEditor_2818583935(self_2818587447);
      if (isNone_2818584296(rHEX60gensym462_2818587448)) {
      break BeforeRet;
      }
      
    };
    addPrevFindResultToSelection_2818587436(get_2818584316(rHEX60gensym462_2818587448));
  };

  
}

function addPrevFindResultToSelectionApi_2818587474(HEX3Atmp_2818587433) {
  var result_2818587475 = null;

    result_2818587475 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addPrevFindResultToSelectionScript_2818587431_2818587446(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818587433, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym467_2818587481 = [97,100,100,80,114,101,118,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818587486 = [mnewString(0)];
    fmtRes_2818587486[0].push.apply(fmtRes_2818587486[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587486, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym467_2818587481 || [],fmtRes_2818587486[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587475;

}

function setAllFindResultToSelectionScript_2818587489_2818587820(self_2818587821) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym470_2818587822 = getTextDocumentEditor_2818583935(self_2818587821);
      if (isNone_2818584296(rHEX60gensym470_2818587822)) {
      break BeforeRet;
      }
      
    };
    setAllFindResultToSelection_2818587494(get_2818584316(rHEX60gensym470_2818587822));
  };

  
}

function setAllFindResultToSelectionApi_2818587848(HEX3Atmp_2818587491) {
  var result_2818587849 = null;

    result_2818587849 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setAllFindResultToSelectionScript_2818587489_2818587820(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818587491, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym475_2818587855 = [115,101,116,65,108,108,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818587860 = [mnewString(0)];
    fmtRes_2818587860[0].push.apply(fmtRes_2818587860[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587860, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym475_2818587855 || [],fmtRes_2818587860[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587849;

}

function clearSelectionsScript_2818587878_2818587891(self_2818587892) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym480_2818587893 = getTextDocumentEditor_2818583935(self_2818587892);
      if (isNone_2818584296(rHEX60gensym480_2818587893)) {
      break BeforeRet;
      }
      
    };
    clearSelections_2818587883(get_2818584316(rHEX60gensym480_2818587893));
  };

  
}

function clearSelectionsApi_2818587919(HEX3Atmp_2818587880) {
  var result_2818587920 = null;

    result_2818587920 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearSelectionsScript_2818587878_2818587891(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818587880, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym485_2818587926 = [99,108,101,97,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_2818587931 = [mnewString(0)];
    fmtRes_2818587931[0].push.apply(fmtRes_2818587931[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587931, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym485_2818587926 || [],fmtRes_2818587931[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587920;

}

function moveCursorColumnScript_2818587934_2818587962(self_2818587963, distance_2818587964, cursor_2818587965, all_2818587966) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym492_2818587967 = getTextDocumentEditor_2818583935(self_2818587963);
      if (isNone_2818584296(rHEX60gensym492_2818587967)) {
      break BeforeRet;
      }
      
    };
    moveCursorColumn_2818587939(get_2818584316(rHEX60gensym492_2818587967), distance_2818587964, cursor_2818587965, all_2818587966);
  };

  
}

function moveCursorColumnApi_2818587996(HEX3Atmp_2818587936) {
      var Temporary5;
      var Temporary7;

  var result_2818587997 = null;

    result_2818587997 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587936))) {
      Temporary5 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818587936, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818587936))) {
      Temporary7 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818587936, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorColumnScript_2818587934_2818587962(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818587936, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818587936, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym497_2818588018 = [109,111,118,101,67,117,114,115,111,114,67,111,108,117,109,110];
    var fmtRes_2818588023 = [mnewString(0)];
    fmtRes_2818588023[0].push.apply(fmtRes_2818588023[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588023, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym497_2818588018 || [],fmtRes_2818588023[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587997;

}

function moveCursorLineScript_2818588042_2818588052(self_2818588053, distance_2818588054, cursor_2818588055, all_2818588056) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym505_2818588057 = getTextDocumentEditor_2818583935(self_2818588053);
      if (isNone_2818584296(rHEX60gensym505_2818588057)) {
      break BeforeRet;
      }
      
    };
    moveCursorLine_2818588047(get_2818584316(rHEX60gensym505_2818588057), distance_2818588054, cursor_2818588055, all_2818588056);
  };

  
}

function moveCursorLineApi_2818588086(HEX3Atmp_2818588044) {
      var Temporary5;
      var Temporary7;

  var result_2818588087 = null;

    result_2818588087 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588044))) {
      Temporary5 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818588044, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588044))) {
      Temporary7 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818588044, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorLineScript_2818588042_2818588052(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588044, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818588044, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym510_2818588108 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101];
    var fmtRes_2818588113 = [mnewString(0)];
    fmtRes_2818588113[0].push.apply(fmtRes_2818588113[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588113, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym510_2818588108 || [],fmtRes_2818588113[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588087;

}

function moveCursorHomeScript_2818588116_2818588125(self_2818588126, cursor_2818588127, all_2818588128) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym517_2818588129 = getTextDocumentEditor_2818583935(self_2818588126);
      if (isNone_2818584296(rHEX60gensym517_2818588129)) {
      break BeforeRet;
      }
      
    };
    moveCursorHome_2818588121(get_2818584316(rHEX60gensym517_2818588129), cursor_2818588127, all_2818588128);
  };

  
}

function moveCursorHomeApi_2818588157(HEX3Atmp_2818588118) {
      var Temporary4;
      var Temporary6;

  var result_2818588158 = null;

    result_2818588158 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588118))) {
      Temporary4 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818588118, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588118))) {
      Temporary6 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818588118, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorHomeScript_2818588116_2818588125(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588118, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym522_2818588174 = [109,111,118,101,67,117,114,115,111,114,72,111,109,101];
    var fmtRes_2818588179 = [mnewString(0)];
    fmtRes_2818588179[0].push.apply(fmtRes_2818588179[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588179, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym522_2818588174 || [],fmtRes_2818588179[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588158;

}

function moveCursorEndScript_2818588184_2818588193(self_2818588194, cursor_2818588195, all_2818588196) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym529_2818588197 = getTextDocumentEditor_2818583935(self_2818588194);
      if (isNone_2818584296(rHEX60gensym529_2818588197)) {
      break BeforeRet;
      }
      
    };
    moveCursorEnd_2818588189(get_2818584316(rHEX60gensym529_2818588197), cursor_2818588195, all_2818588196);
  };

  
}

function moveCursorEndApi_2818588225(HEX3Atmp_2818588186) {
      var Temporary4;
      var Temporary6;

  var result_2818588226 = null;

    result_2818588226 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588186))) {
      Temporary4 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818588186, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588186))) {
      Temporary6 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818588186, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorEndScript_2818588184_2818588193(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588186, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym534_2818588242 = [109,111,118,101,67,117,114,115,111,114,69,110,100];
    var fmtRes_2818588247 = [mnewString(0)];
    fmtRes_2818588247[0].push.apply(fmtRes_2818588247[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588247, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym534_2818588242 || [],fmtRes_2818588247[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588226;

}

function moveCursorToScript_2818588252_2818588269(self_2818588270, str_2818588271, cursor_2818588272, all_2818588273) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym542_2818588274 = getTextDocumentEditor_2818583935(self_2818588270);
      if (isNone_2818584296(rHEX60gensym542_2818588274)) {
      break BeforeRet;
      }
      
    };
    moveCursorTo_2818588257(get_2818584316(rHEX60gensym542_2818588274), str_2818588271, cursor_2818588272, all_2818588273);
  };

  
}

function moveCursorToApi_2818588303(HEX3Atmp_2818588254) {
      var Temporary5;
      var Temporary7;

  var result_2818588304 = null;

    result_2818588304 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588254))) {
      Temporary5 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818588254, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588254))) {
      Temporary7 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818588254, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorToScript_2818588252_2818588269(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588254, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588254, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym547_2818588325 = [109,111,118,101,67,117,114,115,111,114,84,111];
    var fmtRes_2818588330 = [mnewString(0)];
    fmtRes_2818588330[0].push.apply(fmtRes_2818588330[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588330, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym547_2818588325 || [],fmtRes_2818588330[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588304;

}

function moveCursorBeforeScript_2818588335_2818588352(self_2818588353, str_2818588354, cursor_2818588355, all_2818588356) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym556_2818588357 = getTextDocumentEditor_2818583935(self_2818588353);
      if (isNone_2818584296(rHEX60gensym556_2818588357)) {
      break BeforeRet;
      }
      
    };
    moveCursorBefore_2818588340(get_2818584316(rHEX60gensym556_2818588357), str_2818588354, cursor_2818588355, all_2818588356);
  };

  
}

function moveCursorBeforeApi_2818588386(HEX3Atmp_2818588337) {
      var Temporary5;
      var Temporary7;

  var result_2818588387 = null;

    result_2818588387 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588337))) {
      Temporary5 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818588337, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588337))) {
      Temporary7 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818588337, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorBeforeScript_2818588335_2818588352(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588337, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588337, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym561_2818588408 = [109,111,118,101,67,117,114,115,111,114,66,101,102,111,114,101];
    var fmtRes_2818588413 = [mnewString(0)];
    fmtRes_2818588413[0].push.apply(fmtRes_2818588413[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588413, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym561_2818588408 || [],fmtRes_2818588413[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588387;

}

function moveCursorNextFindResultScript_2818588418_2818588427(self_2818588428, cursor_2818588429, all_2818588430) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym569_2818588431 = getTextDocumentEditor_2818583935(self_2818588428);
      if (isNone_2818584296(rHEX60gensym569_2818588431)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextFindResult_2818588423(get_2818584316(rHEX60gensym569_2818588431), cursor_2818588429, all_2818588430);
  };

  
}

function moveCursorNextFindResultApi_2818588459(HEX3Atmp_2818588420) {
      var Temporary4;
      var Temporary6;

  var result_2818588460 = null;

    result_2818588460 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588420))) {
      Temporary4 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818588420, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588420))) {
      Temporary6 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818588420, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorNextFindResultScript_2818588418_2818588427(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588420, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym574_2818588476 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818588481 = [mnewString(0)];
    fmtRes_2818588481[0].push.apply(fmtRes_2818588481[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588481, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym574_2818588476 || [],fmtRes_2818588481[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588460;

}

function moveCursorPrevFindResultScript_2818588484_2818588493(self_2818588494, cursor_2818588495, all_2818588496) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym581_2818588497 = getTextDocumentEditor_2818583935(self_2818588494);
      if (isNone_2818584296(rHEX60gensym581_2818588497)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevFindResult_2818588489(get_2818584316(rHEX60gensym581_2818588497), cursor_2818588495, all_2818588496);
  };

  
}

function moveCursorPrevFindResultApi_2818588525(HEX3Atmp_2818588486) {
      var Temporary4;
      var Temporary6;

  var result_2818588526 = null;

    result_2818588526 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588486))) {
      Temporary4 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818588486, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588486))) {
      Temporary6 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818588486, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorPrevFindResultScript_2818588484_2818588493(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588486, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym586_2818588542 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818588547 = [mnewString(0)];
    fmtRes_2818588547[0].push.apply(fmtRes_2818588547[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588547, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym586_2818588542 || [],fmtRes_2818588547[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588526;

}

function scrollToCursorScript_2818588550_2818588558(self_2818588559, cursor_2818588560) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym592_2818588561 = getTextDocumentEditor_2818583935(self_2818588559);
      if (isNone_2818584296(rHEX60gensym592_2818588561)) {
      break BeforeRet;
      }
      
    };
    scrollToCursor_2818584036(get_2818584316(rHEX60gensym592_2818588561), cursor_2818588560);
  };

  
}

function scrollToCursorApi_2818588588(HEX3Atmp_2818588552) {
      var Temporary4;

  var result_2818588589 = null;

    result_2818588589 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588552))) {
      Temporary4 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818588552, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    scrollToCursorScript_2818588550_2818588558(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588552, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym597_2818588600 = [115,99,114,111,108,108,84,111,67,117,114,115,111,114];
    var fmtRes_2818588605 = [mnewString(0)];
    fmtRes_2818588605[0].push.apply(fmtRes_2818588605[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588605, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym597_2818588600 || [],fmtRes_2818588605[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588589;

}

function reloadTreesitterScript_2818588608_2818588615(self_2818588616) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym601_2818588617 = getTextDocumentEditor_2818583935(self_2818588616);
      if (isNone_2818584296(rHEX60gensym601_2818588617)) {
      break BeforeRet;
      }
      
    };
    reloadTreesitter_2818588613(get_2818584316(rHEX60gensym601_2818588617));
  };

  
}

function reloadTreesitterApi_2818588643(HEX3Atmp_2818588610) {
  var result_2818588644 = null;

    result_2818588644 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    reloadTreesitterScript_2818588608_2818588615(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588610, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym606_2818588650 = [114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114];
    var fmtRes_2818588655 = [mnewString(0)];
    fmtRes_2818588655[0].push.apply(fmtRes_2818588655[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588655, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym606_2818588650 || [],fmtRes_2818588655[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588644;

}

function deleteLeftScript_2818588664_2818588679(self_2818588680) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym610_2818588681 = getTextDocumentEditor_2818583935(self_2818588680);
      if (isNone_2818584296(rHEX60gensym610_2818588681)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_2818588669(get_2818584316(rHEX60gensym610_2818588681));
  };

  
}

function deleteLeftApi_2818588707(HEX3Atmp_2818588666) {
  var result_2818588708 = null;

    result_2818588708 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteLeftScript_2818588664_2818588679(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588666, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym615_2818588714 = [100,101,108,101,116,101,76,101,102,116];
    var fmtRes_2818588719 = [mnewString(0)];
    fmtRes_2818588719[0].push.apply(fmtRes_2818588719[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588719, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym615_2818588714 || [],fmtRes_2818588719[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588708;

}

function deleteRightScript_2818588728_2818588743(self_2818588744) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym618_2818588745 = getTextDocumentEditor_2818583935(self_2818588744);
      if (isNone_2818584296(rHEX60gensym618_2818588745)) {
      break BeforeRet;
      }
      
    };
    deleteRight_2818588733(get_2818584316(rHEX60gensym618_2818588745));
  };

  
}

function deleteRightApi_2818588771(HEX3Atmp_2818588730) {
  var result_2818588772 = null;

    result_2818588772 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteRightScript_2818588728_2818588743(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588730, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym623_2818588778 = [100,101,108,101,116,101,82,105,103,104,116];
    var fmtRes_2818588783 = [mnewString(0)];
    fmtRes_2818588783[0].push.apply(fmtRes_2818588783[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588783, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym623_2818588778 || [],fmtRes_2818588783[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588772;

}

function getCommandCountScript_2818588792_2818588800(self_2818588801) {
  var result_2818588802 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym626_2818588803 = getTextDocumentEditor_2818583935(self_2818588801);
      if (isNone_2818584296(rHEX60gensym626_2818588803)) {
      break BeforeRet;
      }
      
    };
    result_2818588802 = getCommandCount_2818588797(get_2818584316(rHEX60gensym626_2818588803));
  };

  return result_2818588802;

}

function getCommandCountApi_2818588830(HEX3Atmp_2818588794) {
  var result_2818588831 = null;

  BeforeRet: {
    result_2818588831 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818588831 = toJson_2818585164(getCommandCountScript_2818588792_2818588800(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588794, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym632_2818588841 = [103,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818588846 = [mnewString(0)];
    fmtRes_2818588846[0].push.apply(fmtRes_2818588846[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588846, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym632_2818588841 || [],fmtRes_2818588846[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588831;

}

function setCommandCountScript_2818588849_2818588857(self_2818588858, count_2818588859) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym636_2818588860 = getTextDocumentEditor_2818583935(self_2818588858);
      if (isNone_2818584296(rHEX60gensym636_2818588860)) {
      break BeforeRet;
      }
      
    };
    setCommandCount_2818588854(get_2818584316(rHEX60gensym636_2818588860), count_2818588859);
  };

  
}

function setCommandCountApi_2818588887(HEX3Atmp_2818588851) {
  var result_2818588888 = null;

    result_2818588888 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountScript_2818588849_2818588857(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588851, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818588851, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym641_2818588899 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818588904 = [mnewString(0)];
    fmtRes_2818588904[0].push.apply(fmtRes_2818588904[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588904, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym641_2818588899 || [],fmtRes_2818588904[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588888;

}

function setCommandCountRestoreScript_2818588907_2818588915(self_2818588916, count_2818588917) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym645_2818588918 = getTextDocumentEditor_2818583935(self_2818588916);
      if (isNone_2818584296(rHEX60gensym645_2818588918)) {
      break BeforeRet;
      }
      
    };
    setCommandCountRestore_2818588912(get_2818584316(rHEX60gensym645_2818588918), count_2818588917);
  };

  
}

function setCommandCountRestoreApi_2818588945(HEX3Atmp_2818588909) {
  var result_2818588946 = null;

    result_2818588946 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountRestoreScript_2818588907_2818588915(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588909, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818588909, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym650_2818588957 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116,82,101,115,116,111,114,101];
    var fmtRes_2818588962 = [mnewString(0)];
    fmtRes_2818588962[0].push.apply(fmtRes_2818588962[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588962, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym650_2818588957 || [],fmtRes_2818588962[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588946;

}

function updateCommandCountScript_2818588965_2818588973(self_2818588974, digit_2818588975) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym654_2818588976 = getTextDocumentEditor_2818583935(self_2818588974);
      if (isNone_2818584296(rHEX60gensym654_2818588976)) {
      break BeforeRet;
      }
      
    };
    updateCommandCount_2818588970(get_2818584316(rHEX60gensym654_2818588976), digit_2818588975);
  };

  
}

function updateCommandCountApi_2818589003(HEX3Atmp_2818588967) {
  var result_2818589004 = null;

    result_2818589004 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateCommandCountScript_2818588965_2818588973(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818588967, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818588967, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym659_2818589015 = [117,112,100,97,116,101,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818589020 = [mnewString(0)];
    fmtRes_2818589020[0].push.apply(fmtRes_2818589020[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589020, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym659_2818589015 || [],fmtRes_2818589020[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589004;

}

function setFlagScript_2818589023_2818589032(self_2818589033, name_2818589034, value_2818589035) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym664_2818589036 = getTextDocumentEditor_2818583935(self_2818589033);
      if (isNone_2818584296(rHEX60gensym664_2818589036)) {
      break BeforeRet;
      }
      
    };
    setFlag_2818589028(get_2818584316(rHEX60gensym664_2818589036), name_2818589034, value_2818589035);
  };

  
}

function setFlagApi_2818589064(HEX3Atmp_2818589025) {
  var result_2818589065 = null;

    result_2818589065 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    setFlagScript_2818589023_2818589032(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818589025, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589025, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818589025, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym669_2818589081 = [115,101,116,70,108,97,103];
    var fmtRes_2818589086 = [mnewString(0)];
    fmtRes_2818589086[0].push.apply(fmtRes_2818589086[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589086, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym669_2818589081 || [],fmtRes_2818589086[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589065;

}

function getFlagScript_2818589089_2818589098(self_2818589099, name_2818589100) {
  var result_2818589101 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym673_2818589102 = getTextDocumentEditor_2818583935(self_2818589099);
      if (isNone_2818584296(rHEX60gensym673_2818589102)) {
      break BeforeRet;
      }
      
    };
    result_2818589101 = getFlag_2818589094(get_2818584316(rHEX60gensym673_2818589102), name_2818589100);
  };

  return result_2818589101;

}

function getFlagApi_2818589130(HEX3Atmp_2818589091) {
  var result_2818589131 = null;

  BeforeRet: {
    result_2818589131 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818589131 = toJson_2818589142(getFlagScript_2818589089_2818589098(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818589091, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589091, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym679_2818589151 = [103,101,116,70,108,97,103];
    var fmtRes_2818589156 = [mnewString(0)];
    fmtRes_2818589156[0].push.apply(fmtRes_2818589156[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589156, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym679_2818589151 || [],fmtRes_2818589156[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589131;

}

function runActionScript_2818589159_2818589173(self_2818589174, action_2818589175, args_2818589176) {
  var result_2818589177 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym684_2818589178 = getTextDocumentEditor_2818583935(self_2818589174);
      if (isNone_2818584296(rHEX60gensym684_2818589178)) {
      break BeforeRet;
      }
      
    };
    result_2818589177 = runAction_2818589164(get_2818584316(rHEX60gensym684_2818589178), action_2818589175, args_2818589176);
  };

  return result_2818589177;

}

function runActionApi_2818589207(HEX3Atmp_2818589161) {
  var result_2818589208 = null;

  BeforeRet: {
    result_2818589208 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    result_2818589208 = toJson_2818589142(runActionScript_2818589159_2818589173(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818589161, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589161, 1), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_2818589161, 2)), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym690_2818589223 = [114,117,110,65,99,116,105,111,110];
    var fmtRes_2818589228 = [mnewString(0)];
    fmtRes_2818589228[0].push.apply(fmtRes_2818589228[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589228, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym690_2818589223 || [],fmtRes_2818589228[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589208;

}

function findWordBoundaryScript_2818589234_2818589270(self_2818589271, cursor_2818589272) {
  var result_2818589273 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym694_2818589274 = getTextDocumentEditor_2818583935(self_2818589271);
      if (isNone_2818584296(rHEX60gensym694_2818589274)) {
      break BeforeRet;
      }
      
    };
    result_2818589273 = nimCopy(result_2818589273, findWordBoundary_2818589239(get_2818584316(rHEX60gensym694_2818589274), cursor_2818589272), NTI2449473547);
  };

  return result_2818589273;

}

function findWordBoundaryApi_2818589302(HEX3Atmp_2818589236) {
  var result_2818589303 = null;

  BeforeRet: {
    result_2818589303 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818589303 = toJson_2818585138(findWordBoundaryScript_2818589234_2818589270(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818589236, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585859(HEX5BHEX5D_1627393116(HEX3Atmp_2818589236, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym700_2818589318 = [102,105,110,100,87,111,114,100,66,111,117,110,100,97,114,121];
    var fmtRes_2818589323 = [mnewString(0)];
    fmtRes_2818589323[0].push.apply(fmtRes_2818589323[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589323, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym700_2818589318 || [],fmtRes_2818589323[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589303;

}

function getSelectionForMoveScript_2818589328_2818589431(self_2818589432, cursor_2818589433, move_2818589434, count_2818589435) {
  var result_2818589436 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym710_2818589437 = getTextDocumentEditor_2818583935(self_2818589432);
      if (isNone_2818584296(rHEX60gensym710_2818589437)) {
      break BeforeRet;
      }
      
    };
    result_2818589436 = nimCopy(result_2818589436, getSelectionForMove_2818589333(get_2818584316(rHEX60gensym710_2818589437), cursor_2818589433, move_2818589434, count_2818589435), NTI2449473547);
  };

  return result_2818589436;

}

function getSelectionForMoveApi_2818589467(HEX3Atmp_2818589330) {
      var Temporary6;

  var result_2818589468 = null;

  BeforeRet: {
    result_2818589468 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818589330))) {
      Temporary6 = jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818589330, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = 0;
      }
      
    };
    result_2818589468 = toJson_2818585138(getSelectionForMoveScript_2818589328_2818589431(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818589330, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585859(HEX5BHEX5D_1627393116(HEX3Atmp_2818589330, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589330, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym716_2818589493 = [103,101,116,83,101,108,101,99,116,105,111,110,70,111,114,77,111,118,101];
    var fmtRes_2818589498 = [mnewString(0)];
    fmtRes_2818589498[0].push.apply(fmtRes_2818589498[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589498, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym716_2818589493 || [],fmtRes_2818589498[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589468;

}

function setMoveScript_2818589573_2818589769(self_2818589770, args_2818589771) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym732_2818589772 = getTextDocumentEditor_2818583935(self_2818589770);
      if (isNone_2818584296(rHEX60gensym732_2818589772)) {
      break BeforeRet;
      }
      
    };
    setMove_2818589578(get_2818584316(rHEX60gensym732_2818589772), args_2818589771);
  };

  
}

function HEX5BHEX5D_2818589813(a_2818589816, x_2818589817) {
  var result_2818589818 = null;

    if (!((a_2818589816.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,48,44,32,57,41,32,96,97,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    result_2818589818 = newJArray_1627390082();
    var xa_2818589829 = x_2818589817.a;
    var L_2818589831 = addInt(subInt(subInt(len_1627392983(a_2818589816), x_2818589817.b), xa_2818589829), 1);
    Label1: {
      var i_2818589836 = 0;
      var i_536872147 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872147 < L_2818589831)) break Label3;
            i_2818589836 = i_536872147;
            add_1627390190(result_2818589818, HEX5BHEX5D_1627393116(a_2818589816, addInt(i_2818589836, xa_2818589829)));
            i_536872147 = addInt(i_536872147, 1);
          }
      };
    };

  return result_2818589818;

}

function setMoveApi_2818589799(HEX3Atmp_2818589575) {
  var result_2818589800 = null;

    result_2818589800 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setMoveScript_2818589573_2818589769(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818589575, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_2818589813(HEX3Atmp_2818589575, HEX2EHEX2E_1040187488(1, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym737_2818589837 = [115,101,116,77,111,118,101];
    var fmtRes_2818589842 = [mnewString(0)];
    fmtRes_2818589842[0].push.apply(fmtRes_2818589842[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589842, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym737_2818589837 || [],fmtRes_2818589842[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589800;

}

function deleteMoveScript_2818589865_2818589905(self_2818589906, move_2818589907, which_2818589908, all_2818589909) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym759_2818589910 = getTextDocumentEditor_2818583935(self_2818589906);
      if (isNone_2818584296(rHEX60gensym759_2818589910)) {
      break BeforeRet;
      }
      
    };
    deleteMove_2818589870(get_2818584316(rHEX60gensym759_2818589910), move_2818589907, which_2818589908, all_2818589909);
  };

  
}

function deleteMoveApi_2818589939(HEX3Atmp_2818589867) {
      var Temporary5;
      var Temporary7;

  var result_2818589940 = null;

    result_2818589940 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589867))) {
      Temporary5 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818589867, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589867))) {
      Temporary7 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818589867, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    deleteMoveScript_2818589865_2818589905(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818589867, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589867, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym764_2818589961 = [100,101,108,101,116,101,77,111,118,101];
    var fmtRes_2818589966 = [mnewString(0)];
    fmtRes_2818589966[0].push.apply(fmtRes_2818589966[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589966, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym764_2818589961 || [],fmtRes_2818589966[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589940;

}

function selectMoveScript_2818589969_2818590034(self_2818590035, move_2818590036, which_2818590037, all_2818590038) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym772_2818590039 = getTextDocumentEditor_2818583935(self_2818590035);
      if (isNone_2818584296(rHEX60gensym772_2818590039)) {
      break BeforeRet;
      }
      
    };
    selectMove_2818589974(get_2818584316(rHEX60gensym772_2818590039), move_2818590036, which_2818590037, all_2818590038);
  };

  
}

function selectMoveApi_2818590068(HEX3Atmp_2818589971) {
      var Temporary5;
      var Temporary7;

  var result_2818590069 = null;

    result_2818590069 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589971))) {
      Temporary5 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818589971, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589971))) {
      Temporary7 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818589971, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    selectMoveScript_2818589969_2818590034(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818589971, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589971, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym777_2818590090 = [115,101,108,101,99,116,77,111,118,101];
    var fmtRes_2818590095 = [mnewString(0)];
    fmtRes_2818590095[0].push.apply(fmtRes_2818590095[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590095, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym777_2818590090 || [],fmtRes_2818590095[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590069;

}

function changeMoveScript_2818590098_2818590138(self_2818590139, move_2818590140, which_2818590141, all_2818590142) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym786_2818590143 = getTextDocumentEditor_2818583935(self_2818590139);
      if (isNone_2818584296(rHEX60gensym786_2818590143)) {
      break BeforeRet;
      }
      
    };
    changeMove_2818590103(get_2818584316(rHEX60gensym786_2818590143), move_2818590140, which_2818590141, all_2818590142);
  };

  
}

function changeMoveApi_2818590172(HEX3Atmp_2818590100) {
      var Temporary5;
      var Temporary7;

  var result_2818590173 = null;

    result_2818590173 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590100))) {
      Temporary5 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818590100, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818590100))) {
      Temporary7 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818590100, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    changeMoveScript_2818590098_2818590138(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818590100, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590100, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym791_2818590194 = [99,104,97,110,103,101,77,111,118,101];
    var fmtRes_2818590199 = [mnewString(0)];
    fmtRes_2818590199[0].push.apply(fmtRes_2818590199[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590199, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym791_2818590194 || [],fmtRes_2818590199[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590173;

}

function moveLastScript_2818590202_2818590250(self_2818590251, move_2818590252, which_2818590253, all_2818590254, count_2818590255) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym800_2818590256 = getTextDocumentEditor_2818583935(self_2818590251);
      if (isNone_2818584296(rHEX60gensym800_2818590256)) {
      break BeforeRet;
      }
      
    };
    moveLast_2818590207(get_2818584316(rHEX60gensym800_2818590256), move_2818590252, which_2818590253, all_2818590254, count_2818590255);
  };

  
}

function moveLastApi_2818590286(HEX3Atmp_2818590204) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818590287 = null;

    result_2818590287 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590204))) {
      Temporary5 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818590204, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818590204))) {
      Temporary7 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818590204, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2818590204))) {
      Temporary9 = jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818590204, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveLastScript_2818590202_2818590250(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818590204, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590204, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym805_2818590313 = [109,111,118,101,76,97,115,116];
    var fmtRes_2818590318 = [mnewString(0)];
    fmtRes_2818590318[0].push.apply(fmtRes_2818590318[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590318, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym805_2818590313 || [],fmtRes_2818590318[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590287;

}

function moveFirstScript_2818590329_2818590377(self_2818590378, move_2818590379, which_2818590380, all_2818590381, count_2818590382) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym815_2818590383 = getTextDocumentEditor_2818583935(self_2818590378);
      if (isNone_2818584296(rHEX60gensym815_2818590383)) {
      break BeforeRet;
      }
      
    };
    moveFirst_2818590334(get_2818584316(rHEX60gensym815_2818590383), move_2818590379, which_2818590380, all_2818590381, count_2818590382);
  };

  
}

function moveFirstApi_2818590413(HEX3Atmp_2818590331) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818590414 = null;

    result_2818590414 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590331))) {
      Temporary5 = jsonTo_2818584639(HEX5BHEX5D_1627393116(HEX3Atmp_2818590331, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818590331))) {
      Temporary7 = jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2818590331, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2818590331))) {
      Temporary9 = jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818590331, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveFirstScript_2818590329_2818590377(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818590331, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590331, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym820_2818590440 = [109,111,118,101,70,105,114,115,116];
    var fmtRes_2818590445 = [mnewString(0)];
    fmtRes_2818590445[0].push.apply(fmtRes_2818590445[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590445, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym820_2818590440 || [],fmtRes_2818590445[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590414;

}

function setSearchQueryScript_2818590448_2818590470(self_2818590471, query_2818590472) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym827_2818590473 = getTextDocumentEditor_2818583935(self_2818590471);
      if (isNone_2818584296(rHEX60gensym827_2818590473)) {
      break BeforeRet;
      }
      
    };
    setSearchQuery_2818590453(get_2818584316(rHEX60gensym827_2818590473), query_2818590472);
  };

  
}

function setSearchQueryApi_2818590500(HEX3Atmp_2818590450) {
  var result_2818590501 = null;

    result_2818590501 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setSearchQueryScript_2818590448_2818590470(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818590450, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590450, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym832_2818590512 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121];
    var fmtRes_2818590517 = [mnewString(0)];
    fmtRes_2818590517[0].push.apply(fmtRes_2818590517[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590517, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym832_2818590512 || [],fmtRes_2818590517[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590501;

}

function setSearchQueryFromMoveScript_2818590540_2818590550(self_2818590551, move_2818590552, count_2818590553) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym837_2818590554 = getTextDocumentEditor_2818583935(self_2818590551);
      if (isNone_2818584296(rHEX60gensym837_2818590554)) {
      break BeforeRet;
      }
      
    };
    setSearchQueryFromMove_2818590545(get_2818584316(rHEX60gensym837_2818590554), move_2818590552, count_2818590553);
  };

  
}

function setSearchQueryFromMoveApi_2818590582(HEX3Atmp_2818590542) {
      var Temporary5;

  var result_2818590583 = null;

    result_2818590583 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590542))) {
      Temporary5 = jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2818590542, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    setSearchQueryFromMoveScript_2818590540_2818590550(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818590542, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590542, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym842_2818590599 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121,70,114,111,109,77,111,118,101];
    var fmtRes_2818590604 = [mnewString(0)];
    fmtRes_2818590604[0].push.apply(fmtRes_2818590604[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590604, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym842_2818590599 || [],fmtRes_2818590604[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590583;

}

function gotoDefinitionScript_2818593063_2818593070(self_2818593071) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym882_2818593072 = getTextDocumentEditor_2818583935(self_2818593071);
      if (isNone_2818584296(rHEX60gensym882_2818593072)) {
      break BeforeRet;
      }
      
    };
    gotoDefinition_2818593068(get_2818584316(rHEX60gensym882_2818593072));
  };

  
}

function gotoDefinitionApi_2818593098(HEX3Atmp_2818593065) {
  var result_2818593099 = null;

    result_2818593099 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    gotoDefinitionScript_2818593063_2818593070(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818593065, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym887_2818593105 = [103,111,116,111,68,101,102,105,110,105,116,105,111,110];
    var fmtRes_2818593110 = [mnewString(0)];
    fmtRes_2818593110[0].push.apply(fmtRes_2818593110[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593110, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym887_2818593105 || [],fmtRes_2818593110[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593099;

}

function getCompletionsScript_2818593127_2818593134(self_2818593135) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym891_2818593136 = getTextDocumentEditor_2818583935(self_2818593135);
      if (isNone_2818584296(rHEX60gensym891_2818593136)) {
      break BeforeRet;
      }
      
    };
    getCompletions_2818593132(get_2818584316(rHEX60gensym891_2818593136));
  };

  
}

function getCompletionsApi_2818593162(HEX3Atmp_2818593129) {
  var result_2818593163 = null;

    result_2818593163 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    getCompletionsScript_2818593127_2818593134(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818593129, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym896_2818593169 = [103,101,116,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2818593174 = [mnewString(0)];
    fmtRes_2818593174[0].push.apply(fmtRes_2818593174[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593174, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym896_2818593169 || [],fmtRes_2818593174[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593163;

}

function hideCompletionsScript_2818593213_2818593220(self_2818593221) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym900_2818593222 = getTextDocumentEditor_2818583935(self_2818593221);
      if (isNone_2818584296(rHEX60gensym900_2818593222)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_2818593218(get_2818584316(rHEX60gensym900_2818593222));
  };

  
}

function hideCompletionsApi_2818593248(HEX3Atmp_2818593215) {
  var result_2818593249 = null;

    result_2818593249 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    hideCompletionsScript_2818593213_2818593220(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818593215, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym905_2818593255 = [104,105,100,101,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2818593260 = [mnewString(0)];
    fmtRes_2818593260[0].push.apply(fmtRes_2818593260[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593260, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym905_2818593255 || [],fmtRes_2818593260[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593249;

}

function selectPrevCompletionScript_2818593263_2818593287(self_2818593288) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym908_2818593289 = getTextDocumentEditor_2818583935(self_2818593288);
      if (isNone_2818584296(rHEX60gensym908_2818593289)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2818593268(get_2818584316(rHEX60gensym908_2818593289));
  };

  
}

function selectPrevCompletionApi_2818593315(HEX3Atmp_2818593265) {
  var result_2818593316 = null;

    result_2818593316 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript_2818593263_2818593287(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818593265, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym913_2818593322 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818593327 = [mnewString(0)];
    fmtRes_2818593327[0].push.apply(fmtRes_2818593327[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593327, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym913_2818593322 || [],fmtRes_2818593327[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593316;

}

function selectNextCompletionScript_2818593330_2818593354(self_2818593355) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym917_2818593356 = getTextDocumentEditor_2818583935(self_2818593355);
      if (isNone_2818584296(rHEX60gensym917_2818593356)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2818593335(get_2818584316(rHEX60gensym917_2818593356));
  };

  
}

function selectNextCompletionApi_2818593382(HEX3Atmp_2818593332) {
  var result_2818593383 = null;

    result_2818593383 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript_2818593330_2818593354(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818593332, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym922_2818593389 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818593394 = [mnewString(0)];
    fmtRes_2818593394[0].push.apply(fmtRes_2818593394[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593394, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym922_2818593389 || [],fmtRes_2818593394[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593383;

}

function applySelectedCompletionScript_2818593397_2818593537(self_2818593538) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym926_2818593539 = getTextDocumentEditor_2818583935(self_2818593538);
      if (isNone_2818584296(rHEX60gensym926_2818593539)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2818593402(get_2818584316(rHEX60gensym926_2818593539));
  };

  
}

function applySelectedCompletionApi_2818593565(HEX3Atmp_2818593399) {
  var result_2818593566 = null;

    result_2818593566 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript_2818593397_2818593537(jsonTo_2818584350(HEX5BHEX5D_1627393116(HEX3Atmp_2818593399, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym931_2818593572 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818593577 = [mnewString(0)];
    fmtRes_2818593577[0].push.apply(fmtRes_2818593577[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593577, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym931_2818593572 || [],fmtRes_2818593577[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593566;

}

function dispatch_2818593604(command_2818593603, arg_2818593602) {
    var Temporary1;

  var result_2818593609 = ({val: null});

    switch (toJSStr(command_2818593603)) {
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593610(setModeApi_2818584348(arg_2818593602));
      break;
    case "mode":
      Temporary1 = some_2818593610(modeApi_2818584510(arg_2818593602));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593610(getContextWithModeApi_2818584570(arg_2818593602));
      break;
    case "updateTargetColumn":
    case "update-target-column":
      Temporary1 = some_2818593610(updateTargetColumnApi_2818584632(arg_2818593602));
      break;
    case "invertSelection":
    case "invert-selection":
      Temporary1 = some_2818593610(invertSelectionApi_2818584746(arg_2818593602));
      break;
    case "insert":
      Temporary1 = some_2818593610(insertApi_2818584827(arg_2818593602));
      break;
    case "delete":
      Temporary1 = some_2818593610(deleteApi_2818585322(arg_2818593602));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818593610(selectPrevApi_2818585593(arg_2818593602));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818593610(selectNextApi_2818585788(arg_2818593602));
      break;
    case "selectInside":
    case "select-inside":
      Temporary1 = some_2818593610(selectInsideApi_2818585852(arg_2818593602));
      break;
    case "selectInsideCurrent":
    case "select-inside-current":
      Temporary1 = some_2818593610(selectInsideCurrentApi_2818585915(arg_2818593602));
      break;
    case "selectLine":
    case "select-line":
      Temporary1 = some_2818593610(selectLineApi_2818585968(arg_2818593602));
      break;
    case "selectLineCurrent":
    case "select-line-current":
      Temporary1 = some_2818593610(selectLineCurrentApi_2818586023(arg_2818593602));
      break;
    case "selectParentTs":
    case "select-parent-ts":
      Temporary1 = some_2818593610(selectParentTsApi_2818586088(arg_2818593602));
      break;
    case "selectParentCurrentTs":
    case "select-parent-current-ts":
      Temporary1 = some_2818593610(selectParentCurrentTsApi_2818586156(arg_2818593602));
      break;
    case "insertText":
    case "insert-text":
      Temporary1 = some_2818593610(insertTextApi_2818586213(arg_2818593602));
      break;
    case "undo":
      Temporary1 = some_2818593610(undoApi_2818586329(arg_2818593602));
      break;
    case "redo":
      Temporary1 = some_2818593610(redoApi_2818586409(arg_2818593602));
      break;
    case "scrollText":
    case "scroll-text":
      Temporary1 = some_2818593610(scrollTextApi_2818586470(arg_2818593602));
      break;
    case "duplicateLastSelection":
    case "duplicate-last-selection":
      Temporary1 = some_2818593610(duplicateLastSelectionApi_2818586625(arg_2818593602));
      break;
    case "addCursorBelow":
    case "add-cursor-below":
      Temporary1 = some_2818593610(addCursorBelowApi_2818586695(arg_2818593602));
      break;
    case "addCursorAbove":
    case "add-cursor-above":
      Temporary1 = some_2818593610(addCursorAboveApi_2818586761(arg_2818593602));
      break;
    case "getPrevFindResult":
    case "get-prev-find-result":
      Temporary1 = some_2818593610(getPrevFindResultApi_2818587090(arg_2818593602));
      break;
    case "getNextFindResult":
    case "get-next-find-result":
      Temporary1 = some_2818593610(getNextFindResultApi_2818587334(arg_2818593602));
      break;
    case "addNextFindResultToSelection":
    case "add-next-find-result-to-selection":
      Temporary1 = some_2818593610(addNextFindResultToSelectionApi_2818587416(arg_2818593602));
      break;
    case "addPrevFindResultToSelection":
    case "add-prev-find-result-to-selection":
      Temporary1 = some_2818593610(addPrevFindResultToSelectionApi_2818587474(arg_2818593602));
      break;
    case "setAllFindResultToSelection":
    case "set-all-find-result-to-selection":
      Temporary1 = some_2818593610(setAllFindResultToSelectionApi_2818587848(arg_2818593602));
      break;
    case "clearSelections":
    case "clear-selections":
      Temporary1 = some_2818593610(clearSelectionsApi_2818587919(arg_2818593602));
      break;
    case "moveCursorColumn":
    case "move-cursor-column":
      Temporary1 = some_2818593610(moveCursorColumnApi_2818587996(arg_2818593602));
      break;
    case "moveCursorLine":
    case "move-cursor-line":
      Temporary1 = some_2818593610(moveCursorLineApi_2818588086(arg_2818593602));
      break;
    case "moveCursorHome":
    case "move-cursor-home":
      Temporary1 = some_2818593610(moveCursorHomeApi_2818588157(arg_2818593602));
      break;
    case "moveCursorEnd":
    case "move-cursor-end":
      Temporary1 = some_2818593610(moveCursorEndApi_2818588225(arg_2818593602));
      break;
    case "moveCursorTo":
    case "move-cursor-to":
      Temporary1 = some_2818593610(moveCursorToApi_2818588303(arg_2818593602));
      break;
    case "moveCursorBefore":
    case "move-cursor-before":
      Temporary1 = some_2818593610(moveCursorBeforeApi_2818588386(arg_2818593602));
      break;
    case "moveCursorNextFindResult":
    case "move-cursor-next-find-result":
      Temporary1 = some_2818593610(moveCursorNextFindResultApi_2818588459(arg_2818593602));
      break;
    case "moveCursorPrevFindResult":
    case "move-cursor-prev-find-result":
      Temporary1 = some_2818593610(moveCursorPrevFindResultApi_2818588525(arg_2818593602));
      break;
    case "scrollToCursor":
    case "scroll-to-cursor":
      Temporary1 = some_2818593610(scrollToCursorApi_2818588588(arg_2818593602));
      break;
    case "reloadTreesitter":
    case "reload-treesitter":
      Temporary1 = some_2818593610(reloadTreesitterApi_2818588643(arg_2818593602));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2818593610(deleteLeftApi_2818588707(arg_2818593602));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2818593610(deleteRightApi_2818588771(arg_2818593602));
      break;
    case "getCommandCount":
    case "get-command-count":
      Temporary1 = some_2818593610(getCommandCountApi_2818588830(arg_2818593602));
      break;
    case "setCommandCount":
    case "set-command-count":
      Temporary1 = some_2818593610(setCommandCountApi_2818588887(arg_2818593602));
      break;
    case "setCommandCountRestore":
    case "set-command-count-restore":
      Temporary1 = some_2818593610(setCommandCountRestoreApi_2818588945(arg_2818593602));
      break;
    case "updateCommandCount":
    case "update-command-count":
      Temporary1 = some_2818593610(updateCommandCountApi_2818589003(arg_2818593602));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818593610(setFlagApi_2818589064(arg_2818593602));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818593610(getFlagApi_2818589130(arg_2818593602));
      break;
    case "runAction":
    case "run-action":
      Temporary1 = some_2818593610(runActionApi_2818589207(arg_2818593602));
      break;
    case "findWordBoundary":
    case "find-word-boundary":
      Temporary1 = some_2818593610(findWordBoundaryApi_2818589302(arg_2818593602));
      break;
    case "getSelectionForMove":
    case "get-selection-for-move":
      Temporary1 = some_2818593610(getSelectionForMoveApi_2818589467(arg_2818593602));
      break;
    case "setMove":
    case "set-move":
      Temporary1 = some_2818593610(setMoveApi_2818589799(arg_2818593602));
      break;
    case "deleteMove":
    case "delete-move":
      Temporary1 = some_2818593610(deleteMoveApi_2818589939(arg_2818593602));
      break;
    case "selectMove":
    case "select-move":
      Temporary1 = some_2818593610(selectMoveApi_2818590068(arg_2818593602));
      break;
    case "changeMove":
    case "change-move":
      Temporary1 = some_2818593610(changeMoveApi_2818590172(arg_2818593602));
      break;
    case "moveLast":
    case "move-last":
      Temporary1 = some_2818593610(moveLastApi_2818590286(arg_2818593602));
      break;
    case "moveFirst":
    case "move-first":
      Temporary1 = some_2818593610(moveFirstApi_2818590413(arg_2818593602));
      break;
    case "setSearchQuery":
    case "set-search-query":
      Temporary1 = some_2818593610(setSearchQueryApi_2818590500(arg_2818593602));
      break;
    case "setSearchQueryFromMove":
    case "set-search-query-from-move":
      Temporary1 = some_2818593610(setSearchQueryFromMoveApi_2818590582(arg_2818593602));
      break;
    case "gotoDefinition":
    case "goto-definition":
      Temporary1 = some_2818593610(gotoDefinitionApi_2818593098(arg_2818593602));
      break;
    case "getCompletions":
    case "get-completions":
      Temporary1 = some_2818593610(getCompletionsApi_2818593162(arg_2818593602));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2818593610(hideCompletionsApi_2818593248(arg_2818593602));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818593610(selectPrevCompletionApi_2818593315(arg_2818593602));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818593610(selectNextCompletionApi_2818593382(arg_2818593602));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818593610(applySelectedCompletionApi_2818593565(arg_2818593602));
      break;
    default: 
      Temporary1 = none_2818593809();
      break;
    }
    result_2818593609 = nimCopy(result_2818593609, Temporary1, NTI2818585760);

  return result_2818593609;

}

function isNone_2818593894(self_2818593896) {
  var result_2818593897 = false;

    result_2818593897 = (self_2818593896.val == null);

  return result_2818593897;

}

function handleActionInternal_2818572657(self_2818572658, action_2818572659, args_2818572660) {
    var Temporary3;

  var result_2818593829 = 0;

  BeforeRet: {
    if ((handleUnknownDocumentEditorAction_1291848854(self_2818572658.editor, self_2818572658, action_2818572659, args_2818572660) == 3)) {
    self_2818572658.commandCount = subInt(self_2818572658.commandCount, 1);
    Label1: {
        Label2: while (true) {
        if (!(0 < self_2818572658.commandCount)) break Label2;
          if (!((handleUnknownDocumentEditorAction_1291848854(self_2818572658.editor, self_2818572658, action_2818572659, args_2818572660) == 3))) {
          break Label1;
          }
          
          self_2818572658.commandCount = subInt(self_2818572658.commandCount, 1);
        }
    };
    self_2818572658.commandCount = self_2818572658.commandCountRestore;
    self_2818572658.commandCountRestore = 0;
    result_2818593829 = 3;
    break BeforeRet;
    }
    
    var Temporary3 = args_2818572660;
    if (ConstSet311[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
    insert_2818593848(Temporary3, "elems", toJson_2818584039({id: self_2818572658.id}, initToJsonOptions_1811939362()), 0);
    if (isSome_2818593877(dispatch_2818593604(action_2818572659, args_2818572660))) {
    self_2818572658.commandCount = subInt(self_2818572658.commandCount, 1);
    Label4: {
        Label5: while (true) {
        if (!(0 < self_2818572658.commandCount)) break Label5;
          if (isNone_2818593894(dispatch_2818593604(action_2818572659, args_2818572660))) {
          break Label4;
          }
          
          self_2818572658.commandCount = subInt(self_2818572658.commandCount, 1);
        }
    };
    self_2818572658.commandCount = self_2818572658.commandCountRestore;
    self_2818572658.commandCountRestore = 0;
    result_2818593829 = 3;
    break BeforeRet;
    }
    
    result_2818593829 = 1;
    break BeforeRet;
  };

  return result_2818593829;

}

function handleAction_2818572653(self_2818572654, action_2818572655, arg_2818572656) {
  var result_2818593911 = 0;

  BeforeRet: {
    var args_2818593912 = newJArray_1627390082();
++excHandler;
    try {
    Label2: {
      var a_2818593913 = null;
      var colontmp__536871986 = null;
      colontmp__536871986 = newStringStream_1660945417(arg_2818572656);
      var p_536871987 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871987[0], colontmp__536871986, [], false);
      try {
      var _ = getTok_1694499270(p_536871987[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871987[0].tok == 1))) break Label5;
            a_2818593913 = parseJson_1627395211(p_536871987[0], false, false, 0);
            add_1627390190(args_2818593912, a_2818593913);
          }
      };
      } finally {
      close_1694498967(p_536871987[0]);
      }
    };
    result_2818593911 = handleActionInternal_2818572657(self_2818572654, action_2818572655, args_2818593912);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818593918 = [mnewString(0)];
    fmtRes_2818593918[0].push.apply(fmtRes_2818593918[0], [91,101,100,105,116,111,114,46,116,101,120,116,93,32,104,97,110,100,108,101,65,99,116,105,111,110,58,32]);;
    formatValue_721420459(fmtRes_2818593918, 0, action_2818572655, []);
    fmtRes_2818593918[0].push.apply(fmtRes_2818593918[0], [44,32,70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,114,103,115,58,32,39]);;
    formatValue_721420459(fmtRes_2818593918, 0, arg_2818572656, []);
    fmtRes_2818593918[0].push.apply(fmtRes_2818593918[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818593918[0], NTI33554449)]);
    result_2818593911 = 0;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818593911;

}

function hasKey_1291847815(t_1291847818, key_1291847819) {
  var result_1291847820 = false;

    var hc_1291847821 = [0];
    result_1291847820 = (0 <= rawGet_1291847822(t_1291847818, key_1291847819, hc_1291847821, 0));

  return result_1291847820;

}

function contains_1291847809(t_1291847812, key_1291847813) {
  var result_1291847814 = false;

  BeforeRet: {
    result_1291847814 = hasKey_1291847815(t_1291847812, key_1291847813);
    break BeforeRet;
  };

  return result_1291847814;

}

function HEX5BHEX5D_1291848114(t_1291848117, key_1291848118) {
  var result_1291848119 = null;
  var result_1291848119_Idx = 0;

    var hcHEX60gensym22_1291848120 = [0];
    var indexHEX60gensym22_1291848127 = rawGet_1291847822(t_1291848117, key_1291848118, hcHEX60gensym22_1291848120, 0);
    if ((0 <= indexHEX60gensym22_1291848127)) {
    result_1291848119 = t_1291848117.data[chckIndx(indexHEX60gensym22_1291848127, 0, (t_1291848117.data).length - 1)]; result_1291848119_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291848118);
    }
    

  return [result_1291848119, result_1291848119_Idx];

}

function invokeCallback_1291847762(self_1291847763, context_1291847764, args_1291847765) {
    var Temporary1;

  var result_1291847766 = false;

  BeforeRet: {
    if (!(contains_1291847809(self_1291847763.callbacks, context_1291847764))) {
    result_1291847766 = false;
    break BeforeRet;
    }
    
    var id_1291848184 = (Temporary1 = HEX5BHEX5D_1291848114(self_1291847763.callbacks, context_1291847764), Temporary1)[0][Temporary1[1]];
++excHandler;
    try {
    result_1291847766 = false;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848195 = [mnewString(0)];
    fmtRes_1291848195[0].push.apply(fmtRes_1291848195[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,67,97,108,108,98,97,99,107,32]);;
    formatValue_2701131945(fmtRes_1291848195, 0, id_1291848184, []);
    fmtRes_1291848195[0].push.apply(fmtRes_1291848195[0], [58,32]);;
    formatValue_721420459(fmtRes_1291848195, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848195[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291847766 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291847766;

}

function handleInput_2818572661(self_2818572662, input_2818572663) {
  var result_2818593922 = 0;

  BeforeRet: {
    if (invokeCallback_1291847762(self_2818572662.editor, getContextWithMode_2818583607(self_2818572662, [101,100,105,116,111,114,46,116,101,120,116,46,105,110,112,117,116,45,104,97,110,100,108,101,114]), newJString_1627389994(input_2818572663))) {
    result_2818593922 = 3;
    break BeforeRet;
    }
    
    insertText_2818586179(self_2818572662, input_2818572663);
    result_2818593922 = 3;
    break BeforeRet;
  };

  return result_2818593922;

}

function toJson_2969578861(self_2969578862, opt_2969578863) {
  var result_2969578864 = null;

    result_2969578864 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2969578864, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,97,115,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2969578864, [105,100], newJInt_1627390040(self_2969578862.id));

  return result_2969578864;

}

function none_2969578793() {
  var result_2969578799 = ({val: null});

  return result_2969578799;

}

function some_2969578833(val_2969578835) {
  var result_2969578836 = ({val: null});

    if (!(!((val_2969578835 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2969578836.val = val_2969578835;

  return result_2969578836;

}

function getAstDocumentEditor_2969578783(wrapper_2969578784) {
      var Temporary1;

  var result_2969578789 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2969578789 = nimCopy(result_2969578789, none_2969578793(), NTI2969574395);
    break BeforeRet;
    }
    
      var oHEX60gensym531_2969578802 = getEditorForId_1291850661(gEditor, wrapper_2969578784.id);
      if (!isSome_2818583959(oHEX60gensym531_2969578802)) Temporary1 = false; else {        var editor_2969578825 = get_2818583979(oHEX60gensym531_2969578802);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2969578825.m_type, NTI2969568620)) {
    result_2969578789 = nimCopy(result_2969578789, some_2969578833(editor_2969578825), NTI2969574395);
    break BeforeRet;
    }
    
    }
    
    result_2969578789 = nimCopy(result_2969578789, none_2969578793(), NTI2969574395);
    break BeforeRet;
  };

  return result_2969578789;

}

function isNone_2969578892(self_2969578894) {
  var result_2969578895 = false;

    result_2969578895 = (self_2969578894.val == null);

  return result_2969578895;

}

function get_2969578912(self_2969578914) {
  var result_2969578915 = null;

    if (isNone_2969578892(self_2969578914)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969578915 = self_2969578914["val"];

  return result_2969578915;

}

function moveCursorScript_2969578874_2969578884(self_2969578885, direction_2969578886) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym536_2969578887 = getAstDocumentEditor_2969578783(self_2969578885);
      if (isNone_2969578892(rHEX60gensym536_2969578887)) {
      break BeforeRet;
      }
      
    };
    moveCursor_2969578879(get_2969578912(rHEX60gensym536_2969578887), direction_2969578886);
  };

  
}

function fromJsonHook_2969578865(t_2969578866, jsonNode_2969578867) {
    t_2969578866.id = jsonTo_2818584046(HEX5BHEX5D_1627393037(jsonNode_2969578867, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2969578945(a_2969578947, b_2969578948, opt_2969578949) {
    if (!(!(HEX3DHEX3D_1627392026(b_2969578948, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2969578948}));
    }
    
    fromJsonHook_2969578865(a_2969578947, b_2969578948);

  
}

function jsonTo_2969578939(b_2969578941, opt_2969578943) {
  var result_2969578944 = [({id: 0})];

    fromJson_2969578945(result_2969578944[0], b_2969578941, opt_2969578943);

  return result_2969578944[0];

}

function moveCursorApi_2969578937(HEX3Atmp_2969578876) {
  var result_2969578938 = null;

    result_2969578938 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    moveCursorScript_2969578874_2969578884(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969578876, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584046(HEX5BHEX5D_1627393116(HEX3Atmp_2969578876, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym541_2969578961 = [109,111,118,101,67,117,114,115,111,114];
    var fmtRes_2969578966 = [mnewString(0)];
    fmtRes_2969578966[0].push.apply(fmtRes_2969578966[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969578966, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym541_2969578961 || [],fmtRes_2969578966[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969578938;

}

function moveCursorUpScript_2969579040_2969579059(self_2969579060) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym548_2969579061 = getAstDocumentEditor_2969578783(self_2969579060);
      if (isNone_2969578892(rHEX60gensym548_2969579061)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_2969579045(get_2969578912(rHEX60gensym548_2969579061));
  };

  
}

function moveCursorUpApi_2969579087(HEX3Atmp_2969579042) {
  var result_2969579088 = null;

    result_2969579088 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorUpScript_2969579040_2969579059(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579042, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym553_2969579094 = [109,111,118,101,67,117,114,115,111,114,85,112];
    var fmtRes_2969579099 = [mnewString(0)];
    fmtRes_2969579099[0].push.apply(fmtRes_2969579099[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579099, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym553_2969579094 || [],fmtRes_2969579099[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579088;

}

function moveCursorDownScript_2969579102_2969579109(self_2969579110) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym559_2969579111 = getAstDocumentEditor_2969578783(self_2969579110);
      if (isNone_2969578892(rHEX60gensym559_2969579111)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_2969579107(get_2969578912(rHEX60gensym559_2969579111));
  };

  
}

function moveCursorDownApi_2969579137(HEX3Atmp_2969579104) {
  var result_2969579138 = null;

    result_2969579138 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorDownScript_2969579102_2969579109(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579104, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym564_2969579144 = [109,111,118,101,67,117,114,115,111,114,68,111,119,110];
    var fmtRes_2969579149 = [mnewString(0)];
    fmtRes_2969579149[0].push.apply(fmtRes_2969579149[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579149, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym564_2969579144 || [],fmtRes_2969579149[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579138;

}

function moveCursorNextScript_2969579152_2969579166(self_2969579167) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym568_2969579168 = getAstDocumentEditor_2969578783(self_2969579167);
      if (isNone_2969578892(rHEX60gensym568_2969579168)) {
      break BeforeRet;
      }
      
    };
    moveCursorNext_2969579157(get_2969578912(rHEX60gensym568_2969579168));
  };

  
}

function moveCursorNextApi_2969579194(HEX3Atmp_2969579154) {
  var result_2969579195 = null;

    result_2969579195 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextScript_2969579152_2969579166(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579154, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym573_2969579201 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116];
    var fmtRes_2969579206 = [mnewString(0)];
    fmtRes_2969579206[0].push.apply(fmtRes_2969579206[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579206, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym573_2969579201 || [],fmtRes_2969579206[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579195;

}

function moveCursorPrevScript_2969579220_2969579233(self_2969579234) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym577_2969579235 = getAstDocumentEditor_2969578783(self_2969579234);
      if (isNone_2969578892(rHEX60gensym577_2969579235)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrev_2969579225(get_2969578912(rHEX60gensym577_2969579235));
  };

  
}

function moveCursorPrevApi_2969579261(HEX3Atmp_2969579222) {
  var result_2969579262 = null;

    result_2969579262 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevScript_2969579220_2969579233(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579222, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym582_2969579268 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118];
    var fmtRes_2969579273 = [mnewString(0)];
    fmtRes_2969579273[0].push.apply(fmtRes_2969579273[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579273, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym582_2969579268 || [],fmtRes_2969579273[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579262;

}

function moveCursorNextLineScript_2969579286_2969579319(self_2969579320) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym586_2969579321 = getAstDocumentEditor_2969578783(self_2969579320);
      if (isNone_2969578892(rHEX60gensym586_2969579321)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextLine_2969579291(get_2969578912(rHEX60gensym586_2969579321));
  };

  
}

function moveCursorNextLineApi_2969579347(HEX3Atmp_2969579288) {
  var result_2969579348 = null;

    result_2969579348 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextLineScript_2969579286_2969579319(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579288, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym591_2969579354 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,76,105,110,101];
    var fmtRes_2969579359 = [mnewString(0)];
    fmtRes_2969579359[0].push.apply(fmtRes_2969579359[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579359, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym591_2969579354 || [],fmtRes_2969579359[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579348;

}

function moveCursorPrevLineScript_2969579371_2969579404(self_2969579405) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym595_2969579406 = getAstDocumentEditor_2969578783(self_2969579405);
      if (isNone_2969578892(rHEX60gensym595_2969579406)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevLine_2969579376(get_2969578912(rHEX60gensym595_2969579406));
  };

  
}

function moveCursorPrevLineApi_2969579432(HEX3Atmp_2969579373) {
  var result_2969579433 = null;

    result_2969579433 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevLineScript_2969579371_2969579404(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579373, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym600_2969579439 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,76,105,110,101];
    var fmtRes_2969579444 = [mnewString(0)];
    fmtRes_2969579444[0].push.apply(fmtRes_2969579444[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579444, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym600_2969579439 || [],fmtRes_2969579444[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579433;

}

function selectContainingScript_2969579457_2969579621(self_2969579622, container_2969579623) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym605_2969579624 = getAstDocumentEditor_2969578783(self_2969579622);
      if (isNone_2969578892(rHEX60gensym605_2969579624)) {
      break BeforeRet;
      }
      
    };
    selectContaining_2969579462(get_2969578912(rHEX60gensym605_2969579624), container_2969579623);
  };

  
}

function selectContainingApi_2969579651(HEX3Atmp_2969579459) {
  var result_2969579652 = null;

    result_2969579652 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectContainingScript_2969579457_2969579621(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579459, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969579459, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym610_2969579663 = [115,101,108,101,99,116,67,111,110,116,97,105,110,105,110,103];
    var fmtRes_2969579668 = [mnewString(0)];
    fmtRes_2969579668[0].push.apply(fmtRes_2969579668[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579668, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym610_2969579663 || [],fmtRes_2969579668[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579652;

}

function deleteSelectedScript_2969579671_2969579681(self_2969579682) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym619_2969579683 = getAstDocumentEditor_2969578783(self_2969579682);
      if (isNone_2969578892(rHEX60gensym619_2969579683)) {
      break BeforeRet;
      }
      
    };
    deleteSelected_2969579676(get_2969578912(rHEX60gensym619_2969579683));
  };

  
}

function deleteSelectedApi_2969579709(HEX3Atmp_2969579673) {
  var result_2969579710 = null;

    result_2969579710 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteSelectedScript_2969579671_2969579681(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579673, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym624_2969579716 = [100,101,108,101,116,101,83,101,108,101,99,116,101,100];
    var fmtRes_2969579721 = [mnewString(0)];
    fmtRes_2969579721[0].push.apply(fmtRes_2969579721[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579721, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym624_2969579716 || [],fmtRes_2969579721[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579710;

}

function copySelectedScript_2969579778_2969579788(self_2969579789) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym627_2969579790 = getAstDocumentEditor_2969578783(self_2969579789);
      if (isNone_2969578892(rHEX60gensym627_2969579790)) {
      break BeforeRet;
      }
      
    };
    copySelected_2969579783(get_2969578912(rHEX60gensym627_2969579790));
  };

  
}

function copySelectedApi_2969579816(HEX3Atmp_2969579780) {
  var result_2969579817 = null;

    result_2969579817 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    copySelectedScript_2969579778_2969579788(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579780, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym632_2969579823 = [99,111,112,121,83,101,108,101,99,116,101,100];
    var fmtRes_2969579828 = [mnewString(0)];
    fmtRes_2969579828[0].push.apply(fmtRes_2969579828[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579828, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym632_2969579823 || [],fmtRes_2969579828[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579817;

}

function finishEditScript_2969579846_2969579896(self_2969579897, apply_2969579898) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym636_2969579899 = getAstDocumentEditor_2969578783(self_2969579897);
      if (isNone_2969578892(rHEX60gensym636_2969579899)) {
      break BeforeRet;
      }
      
    };
    finishEdit_2969575630(get_2969578912(rHEX60gensym636_2969579899), apply_2969579898);
  };

  
}

function finishEditApi_2969579926(HEX3Atmp_2969579848) {
  var result_2969579927 = null;

    result_2969579927 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    finishEditScript_2969579846_2969579896(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579848, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585088(HEX5BHEX5D_1627393116(HEX3Atmp_2969579848, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym641_2969579938 = [102,105,110,105,115,104,69,100,105,116];
    var fmtRes_2969579943 = [mnewString(0)];
    fmtRes_2969579943[0].push.apply(fmtRes_2969579943[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579943, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym641_2969579938 || [],fmtRes_2969579943[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579927;

}

function undoScript2_2969579986_2969580019(self_2969580020) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym647_2969580021 = getAstDocumentEditor_2969578783(self_2969580020);
      if (isNone_2969578892(rHEX60gensym647_2969580021)) {
      break BeforeRet;
      }
      
    };
    undo_2969579991(get_2969578912(rHEX60gensym647_2969580021));
  };

  
}

function undoApi2_2969580047(HEX3Atmp_2969579988) {
  var result_2969580048 = null;

    result_2969580048 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript2_2969579986_2969580019(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969579988, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym652_2969580054 = [117,110,100,111];
    var fmtRes_2969580059 = [mnewString(0)];
    fmtRes_2969580059[0].push.apply(fmtRes_2969580059[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580059, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym652_2969580054 || [],fmtRes_2969580059[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580048;

}

function redoScript2_2969580063_2969580096(self_2969580097) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym656_2969580098 = getAstDocumentEditor_2969578783(self_2969580097);
      if (isNone_2969578892(rHEX60gensym656_2969580098)) {
      break BeforeRet;
      }
      
    };
    redo_2969580068(get_2969578912(rHEX60gensym656_2969580098));
  };

  
}

function redoApi2_2969580124(HEX3Atmp_2969580065) {
  var result_2969580125 = null;

    result_2969580125 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript2_2969580063_2969580096(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969580065, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym661_2969580131 = [114,101,100,111];
    var fmtRes_2969580136 = [mnewString(0)];
    fmtRes_2969580136[0].push.apply(fmtRes_2969580136[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580136, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym661_2969580131 || [],fmtRes_2969580136[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580125;

}

function insertAfterSmartScript_2969580139_2969580264(self_2969580265, nodeTemplate_2969580266) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym666_2969580267 = getAstDocumentEditor_2969578783(self_2969580265);
      if (isNone_2969578892(rHEX60gensym666_2969580267)) {
      break BeforeRet;
      }
      
    };
    insertAfterSmart_2969580144(get_2969578912(rHEX60gensym666_2969580267), nodeTemplate_2969580266);
  };

  
}

function insertAfterSmartApi_2969580294(HEX3Atmp_2969580141) {
  var result_2969580295 = null;

    result_2969580295 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterSmartScript_2969580139_2969580264(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969580141, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580141, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym671_2969580306 = [105,110,115,101,114,116,65,102,116,101,114,83,109,97,114,116];
    var fmtRes_2969580311 = [mnewString(0)];
    fmtRes_2969580311[0].push.apply(fmtRes_2969580311[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580311, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym671_2969580306 || [],fmtRes_2969580311[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580295;

}

function insertAfterScript_2969580494_2969580587(self_2969580588, nodeTemplate_2969580589) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym679_2969580590 = getAstDocumentEditor_2969578783(self_2969580588);
      if (isNone_2969578892(rHEX60gensym679_2969580590)) {
      break BeforeRet;
      }
      
    };
    insertAfter_2969580499(get_2969578912(rHEX60gensym679_2969580590), nodeTemplate_2969580589);
  };

  
}

function insertAfterApi_2969580617(HEX3Atmp_2969580496) {
  var result_2969580618 = null;

    result_2969580618 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterScript_2969580494_2969580587(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969580496, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580496, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym684_2969580629 = [105,110,115,101,114,116,65,102,116,101,114];
    var fmtRes_2969580634 = [mnewString(0)];
    fmtRes_2969580634[0].push.apply(fmtRes_2969580634[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580634, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym684_2969580629 || [],fmtRes_2969580634[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580618;

}

function insertBeforeScript_2969580649_2969580741(self_2969580742, nodeTemplate_2969580743) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym691_2969580744 = getAstDocumentEditor_2969578783(self_2969580742);
      if (isNone_2969578892(rHEX60gensym691_2969580744)) {
      break BeforeRet;
      }
      
    };
    insertBefore_2969580654(get_2969578912(rHEX60gensym691_2969580744), nodeTemplate_2969580743);
  };

  
}

function insertBeforeApi_2969580771(HEX3Atmp_2969580651) {
  var result_2969580772 = null;

    result_2969580772 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertBeforeScript_2969580649_2969580741(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969580651, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580651, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym696_2969580783 = [105,110,115,101,114,116,66,101,102,111,114,101];
    var fmtRes_2969580788 = [mnewString(0)];
    fmtRes_2969580788[0].push.apply(fmtRes_2969580788[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580788, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym696_2969580783 || [],fmtRes_2969580788[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580772;

}

function insertChildScript_2969580803_2969580894(self_2969580895, nodeTemplate_2969580896) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym703_2969580897 = getAstDocumentEditor_2969578783(self_2969580895);
      if (isNone_2969578892(rHEX60gensym703_2969580897)) {
      break BeforeRet;
      }
      
    };
    insertChild_2969580808(get_2969578912(rHEX60gensym703_2969580897), nodeTemplate_2969580896);
  };

  
}

function insertChildApi_2969580924(HEX3Atmp_2969580805) {
  var result_2969580925 = null;

    result_2969580925 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertChildScript_2969580803_2969580894(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969580805, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580805, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym708_2969580936 = [105,110,115,101,114,116,67,104,105,108,100];
    var fmtRes_2969580941 = [mnewString(0)];
    fmtRes_2969580941[0].push.apply(fmtRes_2969580941[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580941, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym708_2969580936 || [],fmtRes_2969580941[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580925;

}

function replaceScript_2969580956_2969581001(self_2969581002, nodeTemplate_2969581003) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym715_2969581004 = getAstDocumentEditor_2969578783(self_2969581002);
      if (isNone_2969578892(rHEX60gensym715_2969581004)) {
      break BeforeRet;
      }
      
    };
    replace_2969580961(get_2969578912(rHEX60gensym715_2969581004), nodeTemplate_2969581003);
  };

  
}

function replaceApi_2969581031(HEX3Atmp_2969580958) {
  var result_2969581032 = null;

    result_2969581032 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceScript_2969580956_2969581001(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969580958, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580958, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym720_2969581043 = [114,101,112,108,97,99,101];
    var fmtRes_2969581048 = [mnewString(0)];
    fmtRes_2969581048[0].push.apply(fmtRes_2969581048[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581048, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym720_2969581043 || [],fmtRes_2969581048[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581032;

}

function replaceEmptyScript_2969581063_2969581112(self_2969581113, nodeTemplate_2969581114) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym725_2969581115 = getAstDocumentEditor_2969578783(self_2969581113);
      if (isNone_2969578892(rHEX60gensym725_2969581115)) {
      break BeforeRet;
      }
      
    };
    replaceEmpty_2969581068(get_2969578912(rHEX60gensym725_2969581115), nodeTemplate_2969581114);
  };

  
}

function replaceEmptyApi_2969581142(HEX3Atmp_2969581065) {
  var result_2969581143 = null;

    result_2969581143 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceEmptyScript_2969581063_2969581112(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581065, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969581065, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym730_2969581154 = [114,101,112,108,97,99,101,69,109,112,116,121];
    var fmtRes_2969581159 = [mnewString(0)];
    fmtRes_2969581159[0].push.apply(fmtRes_2969581159[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581159, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym730_2969581154 || [],fmtRes_2969581159[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581143;

}

function replaceParentScript_2969581174_2969581191(self_2969581192) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym734_2969581193 = getAstDocumentEditor_2969578783(self_2969581192);
      if (isNone_2969578892(rHEX60gensym734_2969581193)) {
      break BeforeRet;
      }
      
    };
    replaceParent_2969581179(get_2969578912(rHEX60gensym734_2969581193));
  };

  
}

function replaceParentApi_2969581219(HEX3Atmp_2969581176) {
  var result_2969581220 = null;

    result_2969581220 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    replaceParentScript_2969581174_2969581191(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581176, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym739_2969581226 = [114,101,112,108,97,99,101,80,97,114,101,110,116];
    var fmtRes_2969581231 = [mnewString(0)];
    fmtRes_2969581231[0].push.apply(fmtRes_2969581231[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581231, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym739_2969581226 || [],fmtRes_2969581231[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581220;

}

function wrapScript_2969581234_2969581303(self_2969581304, nodeTemplate_2969581305) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym743_2969581306 = getAstDocumentEditor_2969578783(self_2969581304);
      if (isNone_2969578892(rHEX60gensym743_2969581306)) {
      break BeforeRet;
      }
      
    };
    wrap_2969581239(get_2969578912(rHEX60gensym743_2969581306), nodeTemplate_2969581305);
  };

  
}

function wrapApi_2969581333(HEX3Atmp_2969581236) {
  var result_2969581334 = null;

    result_2969581334 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    wrapScript_2969581234_2969581303(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581236, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969581236, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym748_2969581345 = [119,114,97,112];
    var fmtRes_2969581350 = [mnewString(0)];
    fmtRes_2969581350[0].push.apply(fmtRes_2969581350[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581350, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym748_2969581345 || [],fmtRes_2969581350[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581334;

}

function editPrevEmptyScript_2969581377_2969581390(self_2969581391) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym752_2969581392 = getAstDocumentEditor_2969578783(self_2969581391);
      if (isNone_2969578892(rHEX60gensym752_2969581392)) {
      break BeforeRet;
      }
      
    };
    editPrevEmpty_2969581382(get_2969578912(rHEX60gensym752_2969581392));
  };

  
}

function editPrevEmptyApi_2969581418(HEX3Atmp_2969581379) {
  var result_2969581419 = null;

    result_2969581419 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editPrevEmptyScript_2969581377_2969581390(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581379, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym757_2969581425 = [101,100,105,116,80,114,101,118,69,109,112,116,121];
    var fmtRes_2969581430 = [mnewString(0)];
    fmtRes_2969581430[0].push.apply(fmtRes_2969581430[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581430, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym757_2969581425 || [],fmtRes_2969581430[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581419;

}

function editNextEmptyScript_2969581440_2969581461(self_2969581462) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym761_2969581463 = getAstDocumentEditor_2969578783(self_2969581462);
      if (isNone_2969578892(rHEX60gensym761_2969581463)) {
      break BeforeRet;
      }
      
    };
    editNextEmpty_2969581445(get_2969578912(rHEX60gensym761_2969581463));
  };

  
}

function editNextEmptyApi_2969581489(HEX3Atmp_2969581442) {
  var result_2969581490 = null;

    result_2969581490 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editNextEmptyScript_2969581440_2969581461(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581442, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym766_2969581496 = [101,100,105,116,78,101,120,116,69,109,112,116,121];
    var fmtRes_2969581501 = [mnewString(0)];
    fmtRes_2969581501[0].push.apply(fmtRes_2969581501[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581501, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym766_2969581496 || [],fmtRes_2969581501[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581490;

}

function renameScript_2969581517_2969581524(self_2969581525) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym770_2969581526 = getAstDocumentEditor_2969578783(self_2969581525);
      if (isNone_2969578892(rHEX60gensym770_2969581526)) {
      break BeforeRet;
      }
      
    };
    rename_2969581522(get_2969578912(rHEX60gensym770_2969581526));
  };

  
}

function renameApi_2969581552(HEX3Atmp_2969581519) {
  var result_2969581553 = null;

    result_2969581553 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    renameScript_2969581517_2969581524(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581519, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym775_2969581559 = [114,101,110,97,109,101];
    var fmtRes_2969581564 = [mnewString(0)];
    fmtRes_2969581564[0].push.apply(fmtRes_2969581564[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581564, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym775_2969581559 || [],fmtRes_2969581564[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581553;

}

function selectPrevCompletionScript2_2969581567_2969581585(self_2969581586) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym778_2969581587 = getAstDocumentEditor_2969578783(self_2969581586);
      if (isNone_2969578892(rHEX60gensym778_2969581587)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2969581572(get_2969578912(rHEX60gensym778_2969581587));
  };

  
}

function selectPrevCompletionApi2_2969581613(HEX3Atmp_2969581569) {
  var result_2969581614 = null;

    result_2969581614 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript2_2969581567_2969581585(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581569, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym783_2969581620 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581625 = [mnewString(0)];
    fmtRes_2969581625[0].push.apply(fmtRes_2969581625[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581625, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym783_2969581620 || [],fmtRes_2969581625[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581614;

}

function selectNextCompletionScript2_2969581628_2969581646(editor_2969581647) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym787_2969581648 = getAstDocumentEditor_2969578783(editor_2969581647);
      if (isNone_2969578892(rHEX60gensym787_2969581648)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2969581633(get_2969578912(rHEX60gensym787_2969581648));
  };

  
}

function selectNextCompletionApi2_2969581674(HEX3Atmp_2969581630) {
  var result_2969581675 = null;

    result_2969581675 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript2_2969581628_2969581646(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581630, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym792_2969581681 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581686 = [mnewString(0)];
    fmtRes_2969581686[0].push.apply(fmtRes_2969581686[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581686, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym792_2969581681 || [],fmtRes_2969581686[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581675;

}

function applySelectedCompletionScript2_2969581689_2969581809(editor_2969581810) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym796_2969581811 = getAstDocumentEditor_2969578783(editor_2969581810);
      if (isNone_2969578892(rHEX60gensym796_2969581811)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2969581694(get_2969578912(rHEX60gensym796_2969581811));
  };

  
}

function applySelectedCompletionApi2_2969581837(HEX3Atmp_2969581691) {
  var result_2969581838 = null;

    result_2969581838 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript2_2969581689_2969581809(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581691, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym801_2969581844 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581849 = [mnewString(0)];
    fmtRes_2969581849[0].push.apply(fmtRes_2969581849[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581849, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym801_2969581844 || [],fmtRes_2969581849[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581838;

}

function cancelAndNextCompletionScript_2969581900_2969581907(self_2969581908) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym811_2969581909 = getAstDocumentEditor_2969578783(self_2969581908);
      if (isNone_2969578892(rHEX60gensym811_2969581909)) {
      break BeforeRet;
      }
      
    };
    cancelAndNextCompletion_2969581905(get_2969578912(rHEX60gensym811_2969581909));
  };

  
}

function cancelAndNextCompletionApi_2969581935(HEX3Atmp_2969581902) {
  var result_2969581936 = null;

    result_2969581936 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndNextCompletionScript_2969581900_2969581907(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581902, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym816_2969581942 = [99,97,110,99,101,108,65,110,100,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581947 = [mnewString(0)];
    fmtRes_2969581947[0].push.apply(fmtRes_2969581947[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581947, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym816_2969581942 || [],fmtRes_2969581947[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581936;

}

function cancelAndPrevCompletionScript_2969581950_2969581957(self_2969581958) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym819_2969581959 = getAstDocumentEditor_2969578783(self_2969581958);
      if (isNone_2969578892(rHEX60gensym819_2969581959)) {
      break BeforeRet;
      }
      
    };
    cancelAndPrevCompletion_2969581955(get_2969578912(rHEX60gensym819_2969581959));
  };

  
}

function cancelAndPrevCompletionApi_2969581985(HEX3Atmp_2969581952) {
  var result_2969581986 = null;

    result_2969581986 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndPrevCompletionScript_2969581950_2969581957(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969581952, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym824_2969581992 = [99,97,110,99,101,108,65,110,100,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581997 = [mnewString(0)];
    fmtRes_2969581997[0].push.apply(fmtRes_2969581997[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581997, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym824_2969581992 || [],fmtRes_2969581997[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581986;

}

function cancelAndDeleteScript_2969582000_2969582010(self_2969582011) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym827_2969582012 = getAstDocumentEditor_2969578783(self_2969582011);
      if (isNone_2969578892(rHEX60gensym827_2969582012)) {
      break BeforeRet;
      }
      
    };
    cancelAndDelete_2969582005(get_2969578912(rHEX60gensym827_2969582012));
  };

  
}

function cancelAndDeleteApi_2969582038(HEX3Atmp_2969582002) {
  var result_2969582039 = null;

    result_2969582039 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndDeleteScript_2969582000_2969582010(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969582002, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym832_2969582045 = [99,97,110,99,101,108,65,110,100,68,101,108,101,116,101];
    var fmtRes_2969582050 = [mnewString(0)];
    fmtRes_2969582050[0].push.apply(fmtRes_2969582050[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582050, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym832_2969582045 || [],fmtRes_2969582050[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582039;

}

function moveNodeToPrevSpaceScript_2969582053_2969582164(self_2969582165) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym835_2969582166 = getAstDocumentEditor_2969578783(self_2969582165);
      if (isNone_2969578892(rHEX60gensym835_2969582166)) {
      break BeforeRet;
      }
      
    };
    moveNodeToPrevSpace_2969582058(get_2969578912(rHEX60gensym835_2969582166));
  };

  
}

function moveNodeToPrevSpaceApi_2969582192(HEX3Atmp_2969582055) {
  var result_2969582193 = null;

    result_2969582193 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToPrevSpaceScript_2969582053_2969582164(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969582055, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym840_2969582199 = [109,111,118,101,78,111,100,101,84,111,80,114,101,118,83,112,97,99,101];
    var fmtRes_2969582204 = [mnewString(0)];
    fmtRes_2969582204[0].push.apply(fmtRes_2969582204[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582204, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym840_2969582199 || [],fmtRes_2969582204[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582193;

}

function moveNodeToNextSpaceScript_2969582215_2969582327(self_2969582328) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym848_2969582329 = getAstDocumentEditor_2969578783(self_2969582328);
      if (isNone_2969578892(rHEX60gensym848_2969582329)) {
      break BeforeRet;
      }
      
    };
    moveNodeToNextSpace_2969582220(get_2969578912(rHEX60gensym848_2969582329));
  };

  
}

function moveNodeToNextSpaceApi_2969582355(HEX3Atmp_2969582217) {
  var result_2969582356 = null;

    result_2969582356 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToNextSpaceScript_2969582215_2969582327(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969582217, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym853_2969582362 = [109,111,118,101,78,111,100,101,84,111,78,101,120,116,83,112,97,99,101];
    var fmtRes_2969582367 = [mnewString(0)];
    fmtRes_2969582367[0].push.apply(fmtRes_2969582367[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582367, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym853_2969582362 || [],fmtRes_2969582367[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582356;

}

function selectPrevScript2_2969582381_2969582388(self_2969582389) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym860_2969582390 = getAstDocumentEditor_2969578783(self_2969582389);
      if (isNone_2969578892(rHEX60gensym860_2969582390)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2969582386(get_2969578912(rHEX60gensym860_2969582390));
  };

  
}

function selectPrevApi2_2969582416(HEX3Atmp_2969582383) {
  var result_2969582417 = null;

    result_2969582417 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript2_2969582381_2969582388(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969582383, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym865_2969582423 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2969582428 = [mnewString(0)];
    fmtRes_2969582428[0].push.apply(fmtRes_2969582428[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582428, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym865_2969582423 || [],fmtRes_2969582428[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582417;

}

function selectNextScript2_2969582432_2969582439(self_2969582440) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym868_2969582441 = getAstDocumentEditor_2969578783(self_2969582440);
      if (isNone_2969578892(rHEX60gensym868_2969582441)) {
      break BeforeRet;
      }
      
    };
    selectNext_2969582437(get_2969578912(rHEX60gensym868_2969582441));
  };

  
}

function selectNextApi2_2969582467(HEX3Atmp_2969582434) {
  var result_2969582468 = null;

    result_2969582468 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript2_2969582432_2969582439(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969582434, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym873_2969582474 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2969582479 = [mnewString(0)];
    fmtRes_2969582479[0].push.apply(fmtRes_2969582479[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582479, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym873_2969582474 || [],fmtRes_2969582479[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582468;

}

function gotoScript_2969582483_2969583270(self_2969583271, where_2969583272) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym877_2969583273 = getAstDocumentEditor_2969578783(self_2969583271);
      if (isNone_2969578892(rHEX60gensym877_2969583273)) {
      break BeforeRet;
      }
      
    };
    goto_2969582488(get_2969578912(rHEX60gensym877_2969583273), where_2969583272);
  };

  
}

function gotoApi_2969583300(HEX3Atmp_2969582485) {
  var result_2969583301 = null;

    result_2969583301 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    gotoScript_2969582483_2969583270(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969582485, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969582485, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym882_2969583312 = [103,111,116,111];
    var fmtRes_2969583317 = [mnewString(0)];
    fmtRes_2969583317[0].push.apply(fmtRes_2969583317[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583317, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym882_2969583312 || [],fmtRes_2969583317[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583301;

}

function runSelectedFunctionScript_2969583482_2969583708(self_2969583709) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym903_2969583710 = getAstDocumentEditor_2969578783(self_2969583709);
      if (isNone_2969578892(rHEX60gensym903_2969583710)) {
      break BeforeRet;
      }
      
    };
    runSelectedFunction_2969583487(get_2969578912(rHEX60gensym903_2969583710));
  };

  
}

function runSelectedFunctionApi_2969583736(HEX3Atmp_2969583484) {
  var result_2969583737 = null;

    result_2969583737 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    runSelectedFunctionScript_2969583482_2969583708(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969583484, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym908_2969583743 = [114,117,110,83,101,108,101,99,116,101,100,70,117,110,99,116,105,111,110];
    var fmtRes_2969583748 = [mnewString(0)];
    fmtRes_2969583748[0].push.apply(fmtRes_2969583748[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583748, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym908_2969583743 || [],fmtRes_2969583748[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583737;

}

function toggleOptionScript_2969583760_2969583768(self_2969583769, name_2969583770) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym926_2969583771 = getAstDocumentEditor_2969578783(self_2969583769);
      if (isNone_2969578892(rHEX60gensym926_2969583771)) {
      break BeforeRet;
      }
      
    };
    toggleOption_2969583765(get_2969578912(rHEX60gensym926_2969583771), name_2969583770);
  };

  
}

function toggleOptionApi_2969583798(HEX3Atmp_2969583762) {
  var result_2969583799 = null;

    result_2969583799 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    toggleOptionScript_2969583760_2969583768(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969583762, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969583762, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym931_2969583810 = [116,111,103,103,108,101,79,112,116,105,111,110];
    var fmtRes_2969583815 = [mnewString(0)];
    fmtRes_2969583815[0].push.apply(fmtRes_2969583815[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583815, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym931_2969583810 || [],fmtRes_2969583815[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583799;

}

function runLastCommandScript_2969583822_2969583830(self_2969583831, which_2969583832) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym935_2969583833 = getAstDocumentEditor_2969578783(self_2969583831);
      if (isNone_2969578892(rHEX60gensym935_2969583833)) {
      break BeforeRet;
      }
      
    };
    runLastCommand_2969583827(get_2969578912(rHEX60gensym935_2969583833), which_2969583832);
  };

  
}

function runLastCommandApi_2969583860(HEX3Atmp_2969583824) {
  var result_2969583861 = null;

    result_2969583861 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    runLastCommandScript_2969583822_2969583830(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969583824, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969583824, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym940_2969583872 = [114,117,110,76,97,115,116,67,111,109,109,97,110,100];
    var fmtRes_2969583877 = [mnewString(0)];
    fmtRes_2969583877[0].push.apply(fmtRes_2969583877[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583877, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym940_2969583872 || [],fmtRes_2969583877[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583861;

}

function selectCenterNodeScript_2969583880_2969584144(self_2969584145) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym943_2969584146 = getAstDocumentEditor_2969578783(self_2969584145);
      if (isNone_2969578892(rHEX60gensym943_2969584146)) {
      break BeforeRet;
      }
      
    };
    selectCenterNode_2969583885(get_2969578912(rHEX60gensym943_2969584146));
  };

  
}

function selectCenterNodeApi_2969584172(HEX3Atmp_2969583882) {
  var result_2969584173 = null;

    result_2969584173 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectCenterNodeScript_2969583880_2969584144(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969583882, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym948_2969584179 = [115,101,108,101,99,116,67,101,110,116,101,114,78,111,100,101];
    var fmtRes_2969584184 = [mnewString(0)];
    fmtRes_2969584184[0].push.apply(fmtRes_2969584184[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584184, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym948_2969584179 || [],fmtRes_2969584184[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584173;

}

function scrollScript_2969584216_2969584228(self_2969584229, amount_2969584230) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym960_2969584231 = getAstDocumentEditor_2969578783(self_2969584229);
      if (isNone_2969578892(rHEX60gensym960_2969584231)) {
      break BeforeRet;
      }
      
    };
    scroll_2969584221(get_2969578912(rHEX60gensym960_2969584231), amount_2969584230);
  };

  
}

function scrollApi_2969584258(HEX3Atmp_2969584218) {
  var result_2969584259 = null;

    result_2969584259 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollScript_2969584216_2969584228(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969584218, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586477(HEX5BHEX5D_1627393116(HEX3Atmp_2969584218, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym965_2969584270 = [115,99,114,111,108,108];
    var fmtRes_2969584275 = [mnewString(0)];
    fmtRes_2969584275[0].push.apply(fmtRes_2969584275[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584275, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym965_2969584270 || [],fmtRes_2969584275[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584259;

}

function scrollOutputScript_2969584278_2969584297(self_2969584298, arg_2969584299) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym969_2969584300 = getAstDocumentEditor_2969578783(self_2969584298);
      if (isNone_2969578892(rHEX60gensym969_2969584300)) {
      break BeforeRet;
      }
      
    };
    scrollOutput_2969584283(get_2969578912(rHEX60gensym969_2969584300), arg_2969584299);
  };

  
}

function scrollOutputApi_2969584327(HEX3Atmp_2969584280) {
  var result_2969584328 = null;

    result_2969584328 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollOutputScript_2969584278_2969584297(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969584280, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584280, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym974_2969584339 = [115,99,114,111,108,108,79,117,116,112,117,116];
    var fmtRes_2969584344 = [mnewString(0)];
    fmtRes_2969584344[0].push.apply(fmtRes_2969584344[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584344, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym974_2969584339 || [],fmtRes_2969584344[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584328;

}

function dumpContextScript_2969584347_2969584354(self_2969584355) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym977_2969584356 = getAstDocumentEditor_2969578783(self_2969584355);
      if (isNone_2969578892(rHEX60gensym977_2969584356)) {
      break BeforeRet;
      }
      
    };
    dumpContext_2969584352(get_2969578912(rHEX60gensym977_2969584356));
  };

  
}

function dumpContextApi_2969584382(HEX3Atmp_2969584349) {
  var result_2969584383 = null;

    result_2969584383 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    dumpContextScript_2969584347_2969584354(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969584349, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym982_2969584389 = [100,117,109,112,67,111,110,116,101,120,116];
    var fmtRes_2969584394 = [mnewString(0)];
    fmtRes_2969584394[0].push.apply(fmtRes_2969584394[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584394, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym982_2969584389 || [],fmtRes_2969584394[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584383;

}

function setModeScript2_2969584483_2969584523(self_2969584524, mode_2969584525) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym986_2969584526 = getAstDocumentEditor_2969578783(self_2969584524);
      if (isNone_2969578892(rHEX60gensym986_2969584526)) {
      break BeforeRet;
      }
      
    };
    setMode_2969584488(get_2969578912(rHEX60gensym986_2969584526), mode_2969584525);
  };

  
}

function setModeApi2_2969584553(HEX3Atmp_2969584485) {
  var result_2969584554 = null;

    result_2969584554 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript2_2969584483_2969584523(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969584485, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584485, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym991_2969584565 = [115,101,116,77,111,100,101];
    var fmtRes_2969584570 = [mnewString(0)];
    fmtRes_2969584570[0].push.apply(fmtRes_2969584570[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584570, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym991_2969584565 || [],fmtRes_2969584570[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584554;

}

function modeScript2_2969584574_2969584582(self_2969584583) {
  var result_2969584584 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym997_2969584585 = getAstDocumentEditor_2969578783(self_2969584583);
      if (isNone_2969578892(rHEX60gensym997_2969584585)) {
      break BeforeRet;
      }
      
    };
    result_2969584584 = nimCopy(null, mode_2969584579(get_2969578912(rHEX60gensym997_2969584585)), NTI33554449);
  };

  return result_2969584584;

}

function modeApi2_2969584612(HEX3Atmp_2969584576) {
  var result_2969584613 = null;

  BeforeRet: {
    result_2969584613 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2969584613 = toJson_1811939932(modeScript2_2969584574_2969584582(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969584576, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1003_2969584623 = [109,111,100,101];
    var fmtRes_2969584628 = [mnewString(0)];
    fmtRes_2969584628[0].push.apply(fmtRes_2969584628[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584628, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1003_2969584623 || [],fmtRes_2969584628[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2969584613;

}

function getContextWithModeScript2_2969584631_2969584640(self_2969584641, context_2969584642) {
  var result_2969584643 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1007_2969584644 = getAstDocumentEditor_2969578783(self_2969584641);
      if (isNone_2969578892(rHEX60gensym1007_2969584644)) {
      break BeforeRet;
      }
      
    };
    result_2969584643 = nimCopy(null, getContextWithMode_2969584636(get_2969578912(rHEX60gensym1007_2969584644), context_2969584642), NTI33554449);
  };

  return result_2969584643;

}

function getContextWithModeApi2_2969584672(HEX3Atmp_2969584633) {
  var result_2969584673 = null;

  BeforeRet: {
    result_2969584673 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2969584673 = toJson_1811939932(getContextWithModeScript2_2969584631_2969584640(jsonTo_2969578939(HEX5BHEX5D_1627393116(HEX3Atmp_2969584633, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584633, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1013_2969584688 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2969584693 = [mnewString(0)];
    fmtRes_2969584693[0].push.apply(fmtRes_2969584693[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584693, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1013_2969584688 || [],fmtRes_2969584693[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2969584673;

}

function dispatch_2969584698(command_2969584697, arg_2969584696) {
    var Temporary1;

  var result_2969584700 = ({val: null});

    switch (toJSStr(command_2969584697)) {
    case "moveCursor":
    case "move-cursor":
      Temporary1 = some_2818593610(moveCursorApi_2969578937(arg_2969584696));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2818593610(moveCursorUpApi_2969579087(arg_2969584696));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2818593610(moveCursorDownApi_2969579137(arg_2969584696));
      break;
    case "moveCursorNext":
    case "move-cursor-next":
      Temporary1 = some_2818593610(moveCursorNextApi_2969579194(arg_2969584696));
      break;
    case "moveCursorPrev":
    case "move-cursor-prev":
      Temporary1 = some_2818593610(moveCursorPrevApi_2969579261(arg_2969584696));
      break;
    case "moveCursorNextLine":
    case "move-cursor-next-line":
      Temporary1 = some_2818593610(moveCursorNextLineApi_2969579347(arg_2969584696));
      break;
    case "moveCursorPrevLine":
    case "move-cursor-prev-line":
      Temporary1 = some_2818593610(moveCursorPrevLineApi_2969579432(arg_2969584696));
      break;
    case "selectContaining":
    case "select-containing":
      Temporary1 = some_2818593610(selectContainingApi_2969579651(arg_2969584696));
      break;
    case "deleteSelected":
    case "delete-selected":
      Temporary1 = some_2818593610(deleteSelectedApi_2969579709(arg_2969584696));
      break;
    case "copySelected":
    case "copy-selected":
      Temporary1 = some_2818593610(copySelectedApi_2969579816(arg_2969584696));
      break;
    case "finishEdit":
    case "finish-edit":
      Temporary1 = some_2818593610(finishEditApi_2969579926(arg_2969584696));
      break;
    case "undo":
      Temporary1 = some_2818593610(undoApi2_2969580047(arg_2969584696));
      break;
    case "redo":
      Temporary1 = some_2818593610(redoApi2_2969580124(arg_2969584696));
      break;
    case "insertAfterSmart":
    case "insert-after-smart":
      Temporary1 = some_2818593610(insertAfterSmartApi_2969580294(arg_2969584696));
      break;
    case "insertAfter":
    case "insert-after":
      Temporary1 = some_2818593610(insertAfterApi_2969580617(arg_2969584696));
      break;
    case "insertBefore":
    case "insert-before":
      Temporary1 = some_2818593610(insertBeforeApi_2969580771(arg_2969584696));
      break;
    case "insertChild":
    case "insert-child":
      Temporary1 = some_2818593610(insertChildApi_2969580924(arg_2969584696));
      break;
    case "replace":
      Temporary1 = some_2818593610(replaceApi_2969581031(arg_2969584696));
      break;
    case "replaceEmpty":
    case "replace-empty":
      Temporary1 = some_2818593610(replaceEmptyApi_2969581142(arg_2969584696));
      break;
    case "replaceParent":
    case "replace-parent":
      Temporary1 = some_2818593610(replaceParentApi_2969581219(arg_2969584696));
      break;
    case "wrap":
      Temporary1 = some_2818593610(wrapApi_2969581333(arg_2969584696));
      break;
    case "editPrevEmpty":
    case "edit-prev-empty":
      Temporary1 = some_2818593610(editPrevEmptyApi_2969581418(arg_2969584696));
      break;
    case "editNextEmpty":
    case "edit-next-empty":
      Temporary1 = some_2818593610(editNextEmptyApi_2969581489(arg_2969584696));
      break;
    case "rename":
      Temporary1 = some_2818593610(renameApi_2969581552(arg_2969584696));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818593610(selectPrevCompletionApi2_2969581613(arg_2969584696));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818593610(selectNextCompletionApi2_2969581674(arg_2969584696));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818593610(applySelectedCompletionApi2_2969581837(arg_2969584696));
      break;
    case "cancelAndNextCompletion":
    case "cancel-and-next-completion":
      Temporary1 = some_2818593610(cancelAndNextCompletionApi_2969581935(arg_2969584696));
      break;
    case "cancelAndPrevCompletion":
    case "cancel-and-prev-completion":
      Temporary1 = some_2818593610(cancelAndPrevCompletionApi_2969581985(arg_2969584696));
      break;
    case "cancelAndDelete":
    case "cancel-and-delete":
      Temporary1 = some_2818593610(cancelAndDeleteApi_2969582038(arg_2969584696));
      break;
    case "moveNodeToPrevSpace":
    case "move-node-to-prev-space":
      Temporary1 = some_2818593610(moveNodeToPrevSpaceApi_2969582192(arg_2969584696));
      break;
    case "moveNodeToNextSpace":
    case "move-node-to-next-space":
      Temporary1 = some_2818593610(moveNodeToNextSpaceApi_2969582355(arg_2969584696));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818593610(selectPrevApi2_2969582416(arg_2969584696));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818593610(selectNextApi2_2969582467(arg_2969584696));
      break;
    case "goto":
      Temporary1 = some_2818593610(gotoApi_2969583300(arg_2969584696));
      break;
    case "runSelectedFunction":
    case "run-selected-function":
      Temporary1 = some_2818593610(runSelectedFunctionApi_2969583736(arg_2969584696));
      break;
    case "toggleOption":
    case "toggle-option":
      Temporary1 = some_2818593610(toggleOptionApi_2969583798(arg_2969584696));
      break;
    case "runLastCommand":
    case "run-last-command":
      Temporary1 = some_2818593610(runLastCommandApi_2969583860(arg_2969584696));
      break;
    case "selectCenterNode":
    case "select-center-node":
      Temporary1 = some_2818593610(selectCenterNodeApi_2969584172(arg_2969584696));
      break;
    case "scroll":
      Temporary1 = some_2818593610(scrollApi_2969584258(arg_2969584696));
      break;
    case "scrollOutput":
    case "scroll-output":
      Temporary1 = some_2818593610(scrollOutputApi_2969584327(arg_2969584696));
      break;
    case "dumpContext":
    case "dump-context":
      Temporary1 = some_2818593610(dumpContextApi_2969584382(arg_2969584696));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593610(setModeApi2_2969584553(arg_2969584696));
      break;
    case "mode":
      Temporary1 = some_2818593610(modeApi2_2969584612(arg_2969584696));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593610(getContextWithModeApi2_2969584672(arg_2969584696));
      break;
    default: 
      Temporary1 = none_2818593809();
      break;
    }
    result_2969584700 = nimCopy(result_2969584700, Temporary1, NTI2818585760);

  return result_2969584700;

}

function handleAction_2969583817(self_2969583818, action_2969583819, arg_2969583820) {
  var result_2969584846 = 0;

  BeforeRet: {
    var args_2969584847 = newJArray_1627390082();
    add_1627390190(args_2969584847, toJson_2969578861({id: self_2969583818.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_2969584848 = null;
      var colontmp__536872196 = null;
      colontmp__536872196 = newStringStream_1660945417(arg_2969583820);
      var p_536872197 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872197[0], colontmp__536872196, [], false);
      try {
      var _ = getTok_1694499270(p_536872197[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536872197[0].tok == 1))) break Label4;
            a_2969584848 = parseJson_1627395211(p_536872197[0], false, false, 0);
            add_1627390190(args_2969584847, a_2969584848);
          }
      };
      } finally {
      close_1694498967(p_536872197[0]);
      }
    };
    var newLastCommand_2969584849 = {Field0: nimCopy(null, action_2969583819, NTI33554449), Field1: nimCopy(null, arg_2969583820, NTI33554449)};
    try {
    if ((handleUnknownDocumentEditorAction_1291848854(self_2969583818.editor, self_2969583818, action_2969583819, args_2969584847) == 3)) {
    result_2969584846 = 3;
    break BeforeRet;
    }
    
    if (isSome_2818593877(dispatch_2969584698(action_2969583819, args_2969584847))) {
    result_2969584846 = 3;
    break BeforeRet;
    }
    
    result_2969584846 = 1;
    break BeforeRet;
    } finally {
    self_2969583818.lastCommand = nimCopy(self_2969583818.lastCommand, newLastCommand_2969584849, NTI2969568643);
    }
  };

  return result_2969584846;

}

function sysFatal_33556946(message_33556949) {
    raiseException({message: nimCopy(null, message_33556949, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33556945, p_33556945_Idx) {
    if ((p_33556945 == null && p_33556945_Idx == 0)) {
    sysFatal_33556946([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function isSome_704643153(self_704643155) {
  var result_704643156 = false;

    result_704643156 = !((self_704643155.val == null));

  return result_704643156;

}

function isNone_704643181(self_704643183) {
  var result_704643184 = false;

    result_704643184 = (self_704643183.val == null);

  return result_704643184;

}

function get_704643173(self_704643175) {
  var result_704643176 = null;

    if (isNone_704643181(self_704643175)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643176 = self_704643175["val"];

  return result_704643176;

}

function isSome_704643207(self_704643209) {
  var result_704643210 = false;

    result_704643210 = !((self_704643209.val == null));

  return result_704643210;

}

function isNone_704643235(self_704643237) {
  var result_704643238 = false;

    result_704643238 = (self_704643237.val == null);

  return result_704643238;

}

function get_704643227(self_704643229) {
  var result_704643230 = null;

    if (isNone_704643235(self_704643229)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643230 = self_704643229["val"];

  return result_704643230;

}

function log_704643142(self_704643143, level_704643144, args_704643145) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym2_704643148 = nimCopy(null, self_704643143.fileLogger, NTI704643097);
      if (!isSome_704643153(oHEX60gensym2_704643148)) Temporary1 = false; else {        var l_704643199 = get_704643173(oHEX60gensym2_704643148);
        Temporary1 = true;      }    if (Temporary1) {
    log_1174405220(l_704643199, level_704643144, args_704643145);
    }
    
      var oHEX60gensym4_704643202 = nimCopy(null, self_704643143.consoleLogger, NTI704643084);
      if (!isSome_704643207(oHEX60gensym4_704643202)) Temporary2 = false; else {        var l_704643253 = get_704643227(oHEX60gensym4_704643202);
        Temporary2 = true;      }    if (Temporary2) {
    log_1174405220(l_704643253, level_704643144, args_704643145);
    }
    

  
}

function nsuToLowerAsciiChar(c_855638100) {
  var result_855638101 = 0;

    if ((ConstSet313[c_855638100] != undefined)) {
    result_855638101 = (c_855638100 ^ 32);
    }
    else {
      result_855638101 = c_855638100;
    }
    

  return result_855638101;

}

function nsuIntToStr(x_855638860, minchars_855638861) {
  var result_855638862 = [];

    result_855638862 = nimCopy(null, HEX24_369098760(absInt(x_855638860)), NTI33554449);
    Label1: {
      var i_855638867 = 0;
      var colontmp__536872315 = 0;
      colontmp__536872315 = subInt(minchars_855638861, (result_855638862).length);
      var res_536872316 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_536872316 <= colontmp__536872315)) break Label3;
            i_855638867 = res_536872316;
            result_855638862 = nimCopy(null, [48].concat(result_855638862 || []), NTI33554449);
            res_536872316 = addInt(res_536872316, 1);
          }
      };
    };
    if ((x_855638860 < 0)) {
    result_855638862 = nimCopy(null, [45].concat(result_855638862 || []), NTI33554449);
    }
    

  return result_855638862;

}

function monthday_1191183564(dt_1191183565) {
  var result_1191183566 = 0;

    if (!(!((dt_1191183565.monthdayZero == 0)))) {
    failedAssertImpl_268435515(makeNimstrLit("times.nim(1062, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1191183566 = dt_1191183565.monthdayZero;

  return result_1191183566;

}

function ntgetDateStr(dt_1191183915) {
  var result_1191183916 = [];

    if (!(!((dt_1191183915.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,56,56,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183916 = nimCopy(null, (HEX24_369098760(dt_1191183915.year) || []).concat([45],nsuIntToStr(dt_1191183915.monthZero, 2) || [],[45],nsuIntToStr(monthday_1191183564(dt_1191183915), 2) || []), NTI33554449);

  return result_1191183916;

}

function HEX2B_1191182354(a_1191182355, b_1191182356) {
  var result_1191182357 = 0;

    result_1191182357 = (a_1191182355 + b_1191182356);

  return result_1191182357;

}

function HEX2A_1191182346(a_1191182347, b_1191182348) {
  var result_1191182349 = 0;

    result_1191182349 = (a_1191182347 * b_1191182348);

  return result_1191182349;

}

function convert_1191182803(unitFrom_1191182805, unitTo_1191182806, quantity_1191182807) {
    var Temporary1;

  var result_1191182808 = 0;

    if ((unitFrom_1191182805 < unitTo_1191182806)) {
    Temporary1 = divInt(quantity_1191182807, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182807);
    }
    
    result_1191182808 = Temporary1;

  return result_1191182808;

}

function convert_1191182870(unitFrom_1191182872, unitTo_1191182873, quantity_1191182874) {
    var Temporary1;

  var result_1191182875 = 0;

    if ((unitFrom_1191182872 < unitTo_1191182873)) {
    Temporary1 = chckRange(divInt(quantity_1191182874, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182874), -2147483648, 2147483647);
    }
    
    result_1191182875 = Temporary1;

  return result_1191182875;

}

function normalize_1191183440(seconds_1191183442, nanoseconds_1191183443) {
  var result_1191183444 = ({seconds: 0, nanosecond: 0});

    result_1191183444.seconds = HEX2B_1191182354(seconds_1191183442, convert_1191182803(0, 3, nanoseconds_1191183443));
    var nanosecond_1191183455 = modInt(nanoseconds_1191183443, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191183455 < 0)) {
    nanosecond_1191183455 = addInt(nanosecond_1191183455, convert_1191182870(3, 0, 1));
    result_1191183444.seconds = subInt(result_1191183444.seconds, 1);
    }
    
    result_1191183444.nanosecond = chckRange(chckRange(nanosecond_1191183455, -2147483648, 2147483647), 0, 999999999);

  return result_1191183444;

}

function HEX2D_1191182362(a_1191182363, b_1191182364) {
  var result_1191182365 = 0;

    result_1191182365 = (a_1191182363 - b_1191182364);

  return result_1191182365;

}

function HEX2D_1191182366(a_1191182367, b_1191182368) {
  var result_1191182369 = 0;

    result_1191182369 = (a_1191182367 - b_1191182368);

  return result_1191182369;

}

function ntSubTime(a_1191183470, b_1191183471) {
  var result_1191183472 = ({seconds: 0, nanosecond: 0});

    result_1191183472 = nimCopy(result_1191183472, normalize_1191183440(HEX2D_1191182362(a_1191183470.seconds, b_1191183471.seconds), HEX2D_1191182366(a_1191183470.nanosecond, b_1191183471.nanosecond)), NTI1191182368);

  return result_1191183472;

}

function normalize_1191182860(seconds_1191182862, nanoseconds_1191182863) {
  var result_1191182864 = ({seconds: 0, nanosecond: 0});

    result_1191182864.seconds = HEX2B_1191182354(seconds_1191182862, convert_1191182803(0, 3, nanoseconds_1191182863));
    var nanosecond_1191182880 = modInt(nanoseconds_1191182863, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191182880 < 0)) {
    nanosecond_1191182880 = addInt(nanosecond_1191182880, convert_1191182870(3, 0, 1));
    result_1191182864.seconds = subInt(result_1191182864.seconds, 1);
    }
    
    result_1191182864.nanosecond = chckRange(chckRange(nanosecond_1191182880, -2147483648, 2147483647), 0, 999999999);

  return result_1191182864;

}

function initDuration_1191182793(nanoseconds_1191182794, microseconds_1191182795, milliseconds_1191182796, seconds_1191182797, minutes_1191182798, hours_1191182799, days_1191182800, weeks_1191182801) {
  var result_1191182802 = ({seconds: 0, nanosecond: 0});

    var seconds_1191182848 = HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(7, 3, weeks_1191182801), convert_1191182803(6, 3, days_1191182800)), convert_1191182803(4, 3, minutes_1191182798)), convert_1191182803(5, 3, hours_1191182799)), convert_1191182803(3, 3, seconds_1191182797)), convert_1191182803(2, 3, milliseconds_1191182796)), convert_1191182803(1, 3, microseconds_1191182795)), convert_1191182803(0, 3, nanoseconds_1191182794));
    var nanoseconds_1191182859 = chckRange(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(2, 0, modInt(milliseconds_1191182796, 1000)), convert_1191182803(1, 0, modInt(microseconds_1191182795, 1000000))), modInt(nanoseconds_1191182794, 1000000000)), -2147483648, 2147483647);
    result_1191182802 = nimCopy(result_1191182802, normalize_1191182860(seconds_1191182848, nanoseconds_1191182859), NTI1191182370);

  return result_1191182802;

}

function floorDiv_1191182634(x_1191182636, y_1191182637) {
  var result_1191182638 = 0;

    result_1191182638 = Math.trunc(x_1191182636 / y_1191182637);
    var r_1191182639 = Math.trunc(x_1191182636 % y_1191182637);
    if ((((0 < r_1191182639) && (y_1191182637 < 0)) || ((r_1191182639 < 0) && (0 < y_1191182637)))) {
    result_1191182638 -= 1;
    }
    

  return result_1191182638;

}

function inc_1191182378(a_1191182379, a_1191182379_Idx, b_1191182380) {
    a_1191182379[a_1191182379_Idx] += b_1191182380;

  
}

function fromEpochDay_1191182567(epochday_1191182568) {
    var Temporary1;
    var Temporary2;

  var result_1191182572 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_1191182573 = [epochday_1191182568];
    inc_1191182378(z_1191182573, 0, 719468);
    if ((0 <= z_1191182573[0])) {
    Temporary1 = z_1191182573[0];
    }
    else {
    Temporary1 = HEX2D_1191182362(z_1191182573[0], 146096);
    }
    
    var era_1191182574 = divInt(Temporary1, 146097);
    var doe_1191182575 = HEX2D_1191182362(z_1191182573[0], HEX2A_1191182346(era_1191182574, 146097));
    var yoe_1191182576 = divInt(HEX2D_1191182362(HEX2B_1191182354(HEX2D_1191182362(doe_1191182575, divInt(doe_1191182575, 1460)), divInt(doe_1191182575, 36524)), divInt(doe_1191182575, 146096)), 365);
    var y_1191182577 = HEX2B_1191182354(yoe_1191182576, HEX2A_1191182346(era_1191182574, 400));
    var doy_1191182578 = HEX2D_1191182362(doe_1191182575, HEX2D_1191182362(HEX2B_1191182354(HEX2A_1191182346(365, yoe_1191182576), divInt(yoe_1191182576, 4)), divInt(yoe_1191182576, 100)));
    var mp_1191182579 = divInt(HEX2B_1191182354(HEX2A_1191182346(5, doy_1191182578), 2), 153);
    var d_1191182580 = HEX2B_1191182354(HEX2D_1191182362(doy_1191182578, divInt(HEX2B_1191182354(HEX2A_1191182346(153, mp_1191182579), 2), 5)), 1);
    if ((mp_1191182579 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1191182581 = HEX2B_1191182354(mp_1191182579, Temporary2);
    var colontmp__536872319 = chckRange(d_1191182580, 1, 31);
    var colontmp__536872320 = chckRange(m_1191182581, 1, 12);
    var colontmp__536872321 = chckRange(HEX2B_1191182354(y_1191182577, ((m_1191182581 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1191182572 = nimCopy(result_1191182572, {Field0: nimCopy(null, colontmp__536872319, NTI1191182360), Field1: colontmp__536872320, Field2: colontmp__536872321}, NTI1191182532);
    break BeforeRet;
  };

  return result_1191182572;

}

function isLeapYear_1191182509(year_1191182510) {
  var result_1191182511 = false;

    result_1191182511 = ((modInt(year_1191182510, 4) == 0) && (!((modInt(year_1191182510, 100) == 0)) || (modInt(year_1191182510, 400) == 0)));

  return result_1191182511;

}

function getDaysInMonth_1191182512(month_1191182513, year_1191182514) {
      var Temporary1;

  var result_1191182515 = 0;

    switch (month_1191182513) {
    case 2:
      if (isLeapYear_1191182509(year_1191182514)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1191182515 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1191182515 = 30;
      break;
    default: 
      result_1191182515 = 31;
      break;
    }

  return result_1191182515;

}

function assertValidDate_1191182516(monthday_1191182517, month_1191182518, year_1191182519) {
    if (!((monthday_1191182517 <= getDaysInMonth_1191182512(month_1191182518, year_1191182519)))) {
    failedAssertImpl_268435515(([116,105,109,101,115,46,110,105,109,40,52,54,49,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_369098760(year_1191182519) || [],[45] || [],nsuIntToStr(month_1191182518, 2) || [],[45] || [],HEX24_369098760(monthday_1191182517) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_1191182350(a_1191182351, b_1191182352) {
  var result_1191182353 = 0;

    result_1191182353 = (a_1191182351 * b_1191182352);

  return result_1191182353;

}

function HEX2B_1191182358(a_1191182359, b_1191182360) {
  var result_1191182361 = 0;

    result_1191182361 = (a_1191182359 + b_1191182360);

  return result_1191182361;

}

function toEpochDay_1191182538(monthday_1191182539, month_1191182540, year_1191182541) {
    var Temporary1;
    var Temporary2;

  var result_1191182542 = 0;

  BeforeRet: {
    assertValidDate_1191182516(monthday_1191182539, month_1191182540, year_1191182541);
    var colontmp__536872322 = {Field0: year_1191182541, Field1: month_1191182540, Field2: monthday_1191182539};
    var y_1191182546 = colontmp__536872322["Field0"];
    var m_1191182547 = colontmp__536872322["Field1"];
    var d_1191182548 = colontmp__536872322["Field2"];
    if ((m_1191182547 <= 2)) {
    y_1191182546 = subInt(y_1191182546, 1);
    }
    
    if ((0 <= y_1191182546)) {
    Temporary1 = y_1191182546;
    }
    else {
    Temporary1 = HEX2D_1191182366(y_1191182546, 399);
    }
    
    var era_1191182554 = divInt(Temporary1, 400);
    var yoe_1191182555 = HEX2D_1191182366(y_1191182546, HEX2A_1191182350(era_1191182554, 400));
    if ((2 < m_1191182547)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1191182556 = HEX2D_1191182366(HEX2B_1191182358(divInt(HEX2B_1191182358(HEX2A_1191182350(153, HEX2B_1191182358(m_1191182547, Temporary2)), 2), 5), d_1191182548), 1);
    var doe_1191182557 = HEX2B_1191182358(HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(yoe_1191182555, 365), divInt(yoe_1191182555, 4)), divInt(yoe_1191182555, 100)), doy_1191182556);
    result_1191182542 = HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(era_1191182554, 146097), doe_1191182557), 719468);
    break BeforeRet;
  };

  return result_1191182542;

}

function getDayOfWeek_1191182628(monthday_1191182629, month_1191182630, year_1191182631) {
    var Temporary1;

  var result_1191182632 = 0;

    assertValidDate_1191182516(monthday_1191182629, month_1191182630, year_1191182631);
    var days_1191182633 = HEX2D_1191182362(toEpochDay_1191182538(monthday_1191182629, month_1191182630, year_1191182631), 3);
    var weeks_1191182645 = floorDiv_1191182634(days_1191182633, 7);
    var wd_1191182646 = HEX2D_1191182362(days_1191182633, HEX2A_1191182346(weeks_1191182645, 7));
    if ((wd_1191182646 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1191182362(wd_1191182646, 1), 0, 6);
    }
    
    result_1191182632 = Temporary1;

  return result_1191182632;

}

function getDayOfYear_1191182603(monthday_1191182604, month_1191182605, year_1191182606) {
  var result_1191182607 = 0;

    assertValidDate_1191182516(monthday_1191182604, month_1191182605, year_1191182606);
    if (isLeapYear_1191182509(year_1191182606)) {
    result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonthLeap_1191182609[chckIndx(month_1191182605, 1, (daysUntilMonthLeap_1191182609).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    else {
      result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonth_1191182608[chckIndx(month_1191182605, 1, (daysUntilMonth_1191182608).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    

  return result_1191182607;

}

function initDateTime_1191183671(zt_1191183672, zone_1191183673) {
  var result_1191183674 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1191183675 = ntSubTime(zt_1191183672.time, initDuration_1191182793(0, 0, 0, zt_1191183672.utcOffset, 0, 0, 0, 0));
    var s_1191183676 = adjTime_1191183675.seconds;
    var epochday_1191183681 = floorDiv_1191182634(s_1191183676, 86400);
    var rem_1191183682 = HEX2D_1191182362(s_1191183676, HEX2A_1191182346(epochday_1191183681, 86400));
    var hour_1191183683 = divInt(rem_1191183682, 3600);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(hour_1191183683, 3600));
    var minute_1191183684 = divInt(rem_1191183682, 60);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(minute_1191183684, 60));
    var second_1191183685 = rem_1191183682;
    var colontmp__536872318 = fromEpochDay_1191182567(epochday_1191183681);
    var d_1191183686 = colontmp__536872318["Field0"];
    var m_1191183687 = colontmp__536872318["Field1"];
    var y_1191183688 = colontmp__536872318["Field2"];
    result_1191183674 = nimCopy(result_1191183674, {year: y_1191183688, monthZero: ((m_1191183687) | 0), monthdayZero: d_1191183686, hour: nimCopy(null, chckRange(hour_1191183683, 0, 23), NTI1191182361), minute: nimCopy(null, chckRange(minute_1191183684, 0, 59), NTI1191182362), second: nimCopy(null, chckRange(second_1191183685, 0, 60), NTI1191182363), nanosecond: nimCopy(null, zt_1191183672.time.nanosecond, NTI1191182365), weekday: getDayOfWeek_1191182628(d_1191183686, m_1191183687, y_1191183688), yearday: getDayOfYear_1191182603(d_1191183686, m_1191183687, y_1191183688), isDst: zt_1191183672.isDst, timezone: zone_1191183673, utcOffset: zt_1191183672.utcOffset, m_type: NTI1191182369}, NTI1191182369);

  return result_1191183674;

}

function zonedTimeFromTime_1191183728(zone_1191183729, time_1191183730) {
  var result_1191183731 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1191183731 = nimCopy(result_1191183731, zone_1191183729.zonedTimeFromTimeImpl(time_1191183730), NTI1191182375);

  return result_1191183731;

}

function inZone_1191183768(time_1191183769, zone_1191183770) {
  var result_1191183771 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183771 = nimCopy(result_1191183771, initDateTime_1191183671(zonedTimeFromTime_1191183728(zone_1191183770, time_1191183769), zone_1191183770), NTI1191182369);

  return result_1191183771;

}

function newTimezone_1191183698(name_1191183699, zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl_1191183705) {
  var result_1191183706 = null;

    result_1191183706 = {name: nimCopy(null, name_1191183699, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1191183705};

  return result_1191183706;

}

function localZonedTimeFromTime_1191183786(time_1191183787) {
  var result_1191183788 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1191183792 = new Date(HEX2A_1191182346(time_1191183787.seconds, 1000));
    var offset_1191183793 = HEX2A_1191182350(jsDate_1191183792.getTimezoneOffset(), 60);
    result_1191183788.time = nimCopy(result_1191183788.time, time_1191183787, NTI1191182368);
    result_1191183788.utcOffset = offset_1191183793;
    result_1191183788.isDst = false;

  return result_1191183788;

}

function ntAddTime(a_1191183434, b_1191183435) {
  var result_1191183436 = ({seconds: 0, nanosecond: 0});

    result_1191183436 = nimCopy(result_1191183436, normalize_1191183440(HEX2B_1191182354(a_1191183434.seconds, b_1191183435.seconds), HEX2B_1191182358(a_1191183434.nanosecond, b_1191183435.nanosecond)), NTI1191182368);

  return result_1191183436;

}

function localZonedTimeFromAdjTime_1191183794(adjTime_1191183795) {
  var result_1191183796 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1191183800 = new Date(HEX2A_1191182346(adjTime_1191183795.seconds, 1000));
    var localDate_1191183801 = new Date(utcDate_1191183800.getUTCFullYear(),utcDate_1191183800.getUTCMonth(),utcDate_1191183800.getUTCDate(),utcDate_1191183800.getUTCHours(),utcDate_1191183800.getUTCMinutes(),utcDate_1191183800.getUTCSeconds(),0);
    if (contains_1191183809(HEX2EHEX2E_805306418(0, 99), utcDate_1191183800.getUTCFullYear())) {
    localDate_1191183801.setFullYear(utcDate_1191183800.getUTCFullYear());
    }
    
    result_1191183796.utcOffset = HEX2A_1191182350(localDate_1191183801.getTimezoneOffset(), 60);
    result_1191183796.time = nimCopy(result_1191183796.time, ntAddTime(adjTime_1191183795, initDuration_1191182793(0, 0, 0, result_1191183796.utcOffset, 0, 0, 0, 0)), NTI1191182368);
    result_1191183796.isDst = false;

  return result_1191183796;

}

function local_1191183835() {
  var result_1191183836 = null;

    if ((localInstance_1191183820[0] == null)) {
    localInstance_1191183820[0] = newTimezone_1191183698([76,79,67,65,76], localZonedTimeFromTime_1191183786, localZonedTimeFromAdjTime_1191183794);
    }
    
    result_1191183836 = localInstance_1191183820[0];

  return result_1191183836;

}

function local_1191183849(t_1191183850) {
  var result_1191183851 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183851 = nimCopy(result_1191183851, inZone_1191183768(t_1191183850, local_1191183835()), NTI1191182369);

  return result_1191183851;

}

function initTime_1191183319(unix_1191183320, nanosecond_1191183321) {
  var result_1191183322 = ({seconds: 0, nanosecond: 0});

    result_1191183322.seconds = unix_1191183320;
    result_1191183322.nanosecond = nanosecond_1191183321;

  return result_1191183322;

}

function getTime_1191183389() {
  var result_1191183390 = ({seconds: 0, nanosecond: 0});

    var millis_1191183395 = new Date().getTime();
    var seconds_1191183401 = convert_1191182870(2, 3, millis_1191183395);
    var nanos_1191183412 = convert_1191182870(2, 0, modInt(millis_1191183395, convert_1191182870(3, 2, 1)));
    result_1191183390 = nimCopy(result_1191183390, initTime_1191183319(seconds_1191183401, chckRange(nanos_1191183412, 0, 999999999)), NTI1191182368);

  return result_1191183390;

}

function now_1191183852() {
  var result_1191183853 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183853 = nimCopy(result_1191183853, local_1191183849(getTime_1191183389()), NTI1191182369);

  return result_1191183853;

}

function ntgetClockStr(dt_1191183923) {
  var result_1191183924 = [];

    if (!(!((dt_1191183923.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,57,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183924 = nimCopy(null, (nsuIntToStr(dt_1191183923.hour, 2) || []).concat([58],nsuIntToStr(dt_1191183923.minute, 2) || [],[58],nsuIntToStr(dt_1191183923.second, 2) || []), NTI33554449);

  return result_1191183924;

}

function substituteLog_1174405176(frmt_1174405177, level_1174405178, args_1174405179) {
                  var Temporary8;

  var result_1174405180 = [];

    var msgLen_1174405181 = 0;
    Label1: {
      var arg_1174405185 = [];
      var i_536872307 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872307 < (args_1174405179).length)) break Label3;
            arg_1174405185 = args_1174405179[chckIndx(i_536872307, 0, (args_1174405179).length - 1)];
            msgLen_1174405181 = addInt(msgLen_1174405181, (arg_1174405185).length);
            i_536872307 = addInt(i_536872307, 1);
          }
      };
    };
    result_1174405180 = nimCopy(null, mnewString(0), NTI33554449);
    var i_1174405190 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_1174405190 < (frmt_1174405177).length)) break Label5;
          if (!((frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)] == 36))) {
          addChar(result_1174405180, frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]);;
          i_1174405190 = addInt(i_1174405190, 1);
          }
          else {
            i_1174405190 = addInt(i_1174405190, 1);
            var v_1174405201 = [];
            var app_1174405202 = [];
            Label6: {
                Label7: while (true) {
                  if (!(i_1174405190 < (frmt_1174405177).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet312[frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_1174405201, nsuToLowerAsciiChar(frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]));;
                  i_1174405190 = addInt(i_1174405190, 1);
                }
            };
            switch (toJSStr(v_1174405201)) {
            case "date":
              result_1174405180.push.apply(result_1174405180, ntgetDateStr(now_1191183852()));;
              break;
            case "time":
              result_1174405180.push.apply(result_1174405180, ntgetClockStr(now_1191183852()));;
              break;
            case "datetime":
              result_1174405180.push.apply(result_1174405180, (ntgetDateStr(now_1191183852()) || []).concat([84] || [],ntgetClockStr(now_1191183852()) || []));;
              break;
            case "app":
              result_1174405180.push.apply(result_1174405180, app_1174405202);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)][chckIndx(0, 0, (LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]).length - 1)]);;
              break;
            case "levelname":
              result_1174405180.push.apply(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]);;
              break;
            default: 
              break;
            }
          }
          
        }
    };
    Label9: {
      var arg_1174405215 = [];
      var i_536872312 = 0;
      Label10: {
          Label11: while (true) {
          if (!(i_536872312 < (args_1174405179).length)) break Label11;
            arg_1174405215 = args_1174405179[chckIndx(i_536872312, 0, (args_1174405179).length - 1)];
            result_1174405180.push.apply(result_1174405180, arg_1174405215);;
            i_536872312 = addInt(i_536872312, 1);
          }
      };
    };

  return result_1174405180;

}

function log_1174405221(logger_1174405222, level_1174405223, args_1174405224) {
    if (((level_1174405147[0] <= level_1174405223) && (logger_1174405222.levelThreshold <= level_1174405223))) {
    var ln_1174405233 = substituteLog_1174405176(logger_1174405222.fmtStr, level_1174405223, args_1174405224);
    var cln_1174405234 = toJSStr(ln_1174405233);
    switch (level_1174405223) {
    case 1:
      console.debug(cln_1174405234);
      break;
    case 2:
      console.info(cln_1174405234);
      break;
    case 4:
      console.warn(cln_1174405234);
      break;
    case 5:
      console.error(cln_1174405234);
      break;
    default: 
      console.log(cln_1174405234);
      break;
    }
    }
    

  
}

function log_1174405216(logger_1174405217, level_1174405218, args_1174405219) {
  
}

function log_1174405220(logger_1174405217, level_1174405218, args_1174405219) {
    chckNilDisp(logger_1174405217);
    if (isObj(logger_1174405217.m_type, NTI704643078)) {
    log_704643142(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405134)) {
    log_1174405221(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405133)) {
    log_1174405216(logger_1174405217, level_1174405218, args_1174405219);
    }
    }}

  
}

function isReadOnly_2399141915(self_2399141916) {
  var result_2399141917 = false;

    result_2399141917 = false;

  return result_2399141917;

}

function isReadOnly_2281701431(self_2281701432) {
  var result_2281701433 = false;

    result_2281701433 = true;

  return result_2281701433;

}

function isReadOnly_2264924176(self_2264924177) {
  var result_2264924178 = false;

    result_2264924178 = false;

  return result_2264924178;

}

function isReadOnly_2214592526(self_2214592527) {
  var result_2214592528 = false;

    result_2214592528 = true;

  return result_2214592528;

}

function isReadOnly_2214592529(self_2214592527) {
  var result_2214592530 = false;

  BeforeRet: {
    chckNilDisp(self_2214592527);
    if (isObj(self_2214592527.m_type, NTI2399141893)) {
    result_2214592530 = isReadOnly_2399141915(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2281701380)) {
    result_2214592530 = isReadOnly_2281701431(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2264924164)) {
    result_2214592530 = isReadOnly_2264924176(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2214592520)) {
    result_2214592530 = isReadOnly_2214592526(self_2214592527);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592530;

}

function settings_2399141918(self_2399141919) {
  var result_2399141920 = null;

    result_2399141920 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2399141920, [98,97,115,101,85,114,108], newJString_1627389994(self_2399141919.baseUrl));

  return result_2399141920;

}

function settings_2281701434(self_2281701435) {
  var result_2281701436 = null;

    result_2281701436 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [98,97,115,101,85,114,108], newJString_1627389994(self_2281701435.baseUrl));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [117,115,101,114], newJString_1627389994(self_2281701435.user));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [114,101,112,111,115,105,116,111,114,121], newJString_1627389994(self_2281701435.repository));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [98,114,97,110,99,104,79,114,72,97,115,104], newJString_1627389994(self_2281701435.branchOrHash));

  return result_2281701436;

}

function settings_2264924169(self_2264924170) {
  var result_2264924171 = null;

    result_2264924171 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2264924171, [112,97,116,104], newJString_1627389994(self_2264924170.path));

  return result_2264924171;

}

function settings_2214592531(self_2214592532) {
  var result_2214592533 = null;

  return result_2214592533;

}

function settings_2214592534(self_2214592532) {
  var result_2214592535 = null;

  BeforeRet: {
    chckNilDisp(self_2214592532);
    if (isObj(self_2214592532.m_type, NTI2399141893)) {
    result_2214592535 = settings_2399141918(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2281701380)) {
    result_2214592535 = settings_2281701434(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2264924164)) {
    result_2214592535 = settings_2264924169(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2214592520)) {
    result_2214592535 = settings_2214592531(self_2214592532);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592535;

}

function clear_2399141963(t_2399141966) {
    Label1: {
      var i_2399142019 = 0;
      var colontmp__536872324 = 0;
      colontmp__536872324 = (t_2399141966.data).length;
      var i_536872325 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872325 < colontmp__536872324)) break Label3;
            i_2399142019 = i_536872325;
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field0 = 0;
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field2 = nimCopy(t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field2, ({done: false, listing: ({files: [], folders: []})}), NTI2399141891);
            i_536872325 = addInt(i_536872325, 1);
          }
      };
    };
    t_2399141966.counter = 0;

  
}

function clearDirectoryCache_2399141921(self_2399141922) {
    clear_2399141963(self_2399141922.cachedDirectoryListings);

  
}

function clear_2281701479(t_2281701482) {
    Label1: {
      var i_2281701535 = 0;
      var colontmp__536872328 = 0;
      colontmp__536872328 = (t_2281701482.data).length;
      var i_536872329 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872329 < colontmp__536872328)) break Label3;
            i_2281701535 = i_536872329;
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field0 = 0;
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field2 = nimCopy(t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field2, ({files: [], folders: []}), NTI2214592517);
            i_536872329 = addInt(i_536872329, 1);
          }
      };
    };
    t_2281701482.counter = 0;

  
}

function clearDirectoryCache_2281701437(self_2281701438) {
    clear_2281701479(self_2281701438.cachedDirectoryListings);

  
}

function clearDirectoryCache_2214592536(self_2214592537) {
  
}

function clearDirectoryCache_2214592538(self_2214592537) {
    chckNilDisp(self_2214592537);
    if (isObj(self_2214592537.m_type, NTI2399141893)) {
    clearDirectoryCache_2399141921(self_2214592537);
    }
    else {
    if (isObj(self_2214592537.m_type, NTI2281701380)) {
    clearDirectoryCache_2281701437(self_2214592537);
    }
    else {
    if (isObj(self_2214592537.m_type, NTI2214592520)) {
    clearDirectoryCache_2214592536(self_2214592537);
    }
    }}

  
}
async function httpGet_2348810256(url_2348810257, authToken_2348810271) {
  var result_2348810273 = null;

  BeforeRet: {
    var cstr_2348810313 = (await getAsyncJs(toJSStr(url_2348810257), toJSStr(get_2348810295(authToken_2348810271, []))));
    result_2348810273 = cstrToNimstr(cstr_2348810313);
    break BeforeRet;
  };

  return result_2348810273;

}
async function loadFile_2399142382(self_2399142383, relativePath_2399142384) {
    var Temporary1;

  var result_2399142386 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2399142384, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2399142384, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2399142384;
    }
    
    var relativePath_2399142414 = nimCopy(null, Temporary1, NTI33554449);
    var url_2399142415 = (self_2399142383.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2399142414 || []);
    var fmtRes_2399142420 = [mnewString(0)];
    fmtRes_2399142420[0].push.apply(fmtRes_2399142420[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2399142420, 0, url_2399142415, []);
    fmtRes_2399142420[0].push.apply(fmtRes_2399142420[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2399142420[0], NTI33554449)]);
    result_2399142386 = (await httpGet_2348810256(url_2399142415, none_2348810263()));
    break BeforeRet;
  };

  return result_2399142386;

}

function hasKey_1795162450(t_1795162453, key_1795162454) {
  var result_1795162455 = false;

    var hc_1795162456 = [0];
    result_1795162455 = (0 <= rawGet_1795162457(t_1795162453, key_1795162454, hc_1795162456, 0));

  return result_1795162455;

}

function contains_2382364741(t_2382364744, key_2382364745) {
  var result_2382364746 = false;

  BeforeRet: {
    result_2382364746 = hasKey_1795162450(t_2382364744, key_2382364745);
    break BeforeRet;
  };

  return result_2382364746;

}

function HEX5BHEX5D_1795163814(t_1795163817, key_1795163818) {
  var result_1795163819 = null;
  var result_1795163819_Idx = 0;

    var hcHEX60gensym22_1795163820 = [0];
    var indexHEX60gensym22_1795163827 = rawGet_1795162457(t_1795163817, key_1795163818, hcHEX60gensym22_1795163820, 0);
    if ((0 <= indexHEX60gensym22_1795163827)) {
    result_1795163819 = t_1795163817.data[chckIndx(indexHEX60gensym22_1795163827, 0, (t_1795163817.data).length - 1)]; result_1795163819_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1795163818);
    }
    

  return [result_1795163819, result_1795163819_Idx];

}

function loadApplicationFile_2382364695(self_2382364696, name_2382364697) {
    var Temporary1;

  var result_2382364698 = [];

  BeforeRet: {
    if ((window.localStorage.getItem(toJSStr(name_2382364697)) !== null)) {
    result_2382364698 = nimCopy(null, cstrToNimstr(window.localStorage.getItem(toJSStr(name_2382364697))), NTI33554449);
    break BeforeRet;
    }
    
    if (!(contains_2382364741(cachedAppFiles_2382364694[0], name_2382364697))) {
    HEX5BHEX5DHEX3D_1795162732(cachedAppFiles_2382364694[0], name_2382364697, cstrToNimstr(loadFileSync(toJSStr(name_2382364697))));
    }
    
    result_2382364698 = nimCopy(null, (Temporary1 = HEX5BHEX5D_1795163814(cachedAppFiles_2382364694[0], name_2382364697), Temporary1)[0][Temporary1[1]], NTI33554449);
    break BeforeRet;
  };

  return result_2382364698;

}

function loadApplicationFile_2365587470(self_2365587471, name_2365587472) {
  var result_2365587473 = [];

  return result_2365587473;

}

function loadApplicationFile_2365587474(self_2365587471, name_2365587472) {
  var result_2365587475 = [];

  BeforeRet: {
    chckNilDisp(self_2365587471);
    if (isObj(self_2365587471.m_type, NTI2382364676)) {
    result_2365587475 = loadApplicationFile_2382364695(self_2365587471, name_2365587472);
    break BeforeRet;
    }
    else {
    if (isObj(self_2365587471.m_type, NTI2365587460)) {
    result_2365587475 = loadApplicationFile_2365587470(self_2365587471, name_2365587472);
    break BeforeRet;
    }
    }
  };

  return result_2365587475;

}

function getAccessToken_2281701406() {
  var result_2281701408 = ({val: [], has: false});

  BeforeRet: {
    var token_2281701409 = loadApplicationFile_2365587474(fs_2365587509, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110]);
    if ((0 < (token_2281701409).length)) {
    result_2281701408 = nimCopy(result_2281701408, some_2281701410(token_2281701409), NTI2348810261);
    break BeforeRet;
    }
    
    result_2281701408 = nimCopy(result_2281701408, none_2348810263(), NTI2348810261);
    break BeforeRet;
  };

  return result_2281701408;

}

function decode_2315256303(s_2315256304) {
    
function decodeSize_2315256306(size_2315256307) {
      var result_2315256308 = 0;

      BeforeRet: {
        result_2315256308 = addInt(divInt(mulInt(size_2315256307, 3), 4), 6);
        break BeforeRet;
      };

      return result_2315256308;

    }
    var Temporary1;

  var result_2315256305 = [];

  BeforeRet: {
    if (((s_2315256304).length == 0)) {
    break BeforeRet;
    }
    
    if (result_2315256305.length < (Temporary1 = chckRange(decodeSize_2315256306((s_2315256304).length), 0, 2147483647), Temporary1)) { for (var i = result_2315256305.length; i < Temporary1; ++i) result_2315256305.push(0); }
         else {result_2315256305.length = Temporary1; };
    var inputIndex_2315256313 = 0;
    var outputIndex_2315256314 = 0;
    var inputLen_2315256315 = (s_2315256304).length;
    var inputEnds_2315256316 = 0;
    Label2: {
        Label3: while (true) {
        if (!(ConstSet314[s_2315256304[chckIndx(subInt(inputLen_2315256315, 1), 0, (s_2315256304).length - 1)]] != undefined)) break Label3;
          inputLen_2315256315 = subInt(inputLen_2315256315, 1);
        }
    };
    inputEnds_2315256316 = subInt(inputLen_2315256315, 4);
    Label4: {
        Label5: while (true) {
        if (!(inputIndex_2315256313 <= inputEnds_2315256316)) break Label5;
          Label6: {
              Label7: while (true) {
              if (!(ConstSet315[s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]] != undefined)) break Label7;
                inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
              }
          };
          var a_2315256338 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((a_2315256338 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var b_2315256351 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((b_2315256351 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var c_2315256364 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((c_2315256364 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var d_2315256377 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((d_2315256377 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256338 << 2) | (b_2315256351 >> 4)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((b_2315256351 << 4) | (c_2315256364 >> 2)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((c_2315256364 << 6) | (d_2315256377 >> 0)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
        }
    };
    var leftLen_2315256426 = absInt(modInt(subInt(inputIndex_2315256313, inputLen_2315256315), 4));
    if ((leftLen_2315256426 == 2)) {
    var a_2315256430 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((a_2315256430 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var b_2315256443 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((b_2315256443 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256430 << 2) | (b_2315256443 >> 4)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    }
    else {
    if ((leftLen_2315256426 == 3)) {
    var a_2315256469 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((a_2315256469 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var b_2315256482 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((b_2315256482 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var c_2315256495 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((c_2315256495 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256469 << 2) | (b_2315256482 >> 4)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((b_2315256482 << 4) | (c_2315256495 >> 2)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    }
    }
    if (result_2315256305.length < chckRange(outputIndex_2315256314, 0, 2147483647)) { for (var i = result_2315256305.length; i < chckRange(outputIndex_2315256314, 0, 2147483647); ++i) result_2315256305.push(0); }
         else {result_2315256305.length = chckRange(outputIndex_2315256314, 0, 2147483647); };
  };

  return result_2315256305;

}
async function loadFile_2281701875(self_2281701876, relativePath_2281701877) {
    var Temporary1;

  var result_2281701879 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2281701877, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2281701877, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2281701877;
    }
    
    var relativePath_2281701907 = nimCopy(null, Temporary1, NTI33554449);
    var url_2281701908 = (self_2281701876.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2281701907 || [],[63,114,101,102,61] || [],self_2281701876.branchOrHash || []);
    var fmtRes_2281701913 = [mnewString(0)];
    fmtRes_2281701913[0].push.apply(fmtRes_2281701913[0], [91,103,105,116,104,117,98,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2281701913, 0, url_2281701908, []);
    fmtRes_2281701913[0].push.apply(fmtRes_2281701913[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2281701913[0], NTI33554449)]);
    var token_2281701914 = getAccessToken_2281701406();
    var response_2281701919 = (await httpGet_2348810256(url_2281701908, token_2281701914));
++excHandler;
    try {
    var jsn_2281701920 = parseJson_1627395313(response_2281701919);
    if (hasKey_1627393154(jsn_2281701920, [99,111,110,116,101,110,116])) {
    var contentBase64_2281701921 = getStr_1627390106(HEX5BHEX5D_1627393037(jsn_2281701920, [99,111,110,116,101,110,116]), []);
    var content_2281701922 = decode_2315256303(contentBase64_2281701921);
    result_2281701879 = content_2281701922;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2281701930 = [mnewString(0)];
    fmtRes_2281701930[0].push.apply(fmtRes_2281701930[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2281701930, 0, response_2281701919, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281701930[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2281701879 = [];
    break BeforeRet;
  };

  return result_2281701879;

}

function open_503316852(f_503316853, f_503316853_Idx, filename_503316854, mode_503316855, bufSize_503316856) {
    var Temporary1;

  var result_503316857 = false;

    var p_503316858 = (Temporary1 = fopen(toJSStr(filename_503316854), FormatOpen_503316842[chckIndx(mode_503316855, 0, (FormatOpen_503316842).length - 1)]), Temporary1)[0], p_503316858_Idx = Temporary1[1];
    if (!((p_503316858 == null && p_503316858_Idx == 0))) {
    var f2_503316859 = p_503316858;
    result_503316857 = true;
    f_503316853[f_503316853_Idx] = p_503316858;
    if (((0 < bufSize_503316856) && ((bufSize_503316856 >>> 0) <= 4294967295))) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IOFBF, (bufSize_503316856 >>> 0));
    }
    else {
    if ((bufSize_503316856 == 0)) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_503316857;

}

function rawFileSize_503316808(file_503316809) {
  var result_503316810 = 0;

    var oldPos_503316811 = ftello(file_503316809);
    var _ = fseeko(file_503316809, 0, 2);
    result_503316810 = ftello(file_503316809);
    var _ = fseeko(file_503316809, oldPos_503316811, 0);

  return result_503316810;

}

function raiseEIO_503316567(msg_503316568) {
    raiseException({message: nimCopy(null, msg_503316568, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_503316612(f_503316613) {
    if (!((ferror(f_503316613) == 0))) {
    var msg_503316614 = ([101,114,114,110,111,58,32] || []).concat(HEX24_369098760(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    clearerr(f_503316613);
    raiseEIO_503316567(msg_503316614);
    }
    

  
}

function readBuffer_503316615(f_503316616, buffer_503316617, buffer_503316617_Idx, len_503316618) {
  var result_503316619 = 0;

    result_503316619 = (fread(buffer_503316617, buffer_503316617_Idx, 1, (len_503316618 >>> 0), f_503316616) | 0);
    if (!((result_503316619 == len_503316618))) {
    checkErr_503316612(f_503316616);
    }
    

  return result_503316619;

}

function endOfFile_503316812(f_503316813) {
  var result_503316814 = false;

  BeforeRet: {
    var c_503316815 = fgetc(f_503316813);
    var _ = ungetc(c_503316815, f_503316813);
    result_503316814 = (c_503316815 < 0);
    break BeforeRet;
  };

  return result_503316814;

}

function readAllBuffer_503316803(file_503316804) {
  var result_503316805 = [];

    result_503316805 = nimCopy(null, [], NTI33554449);
    var buffer_503316806 = mnewString(4000);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_503316807 = readBuffer_503316615(file_503316804, buffer_503316806, chckIndx(0, 0, (buffer_503316806).length - 1), 4000);
          if ((bytesRead_503316807 == 4000)) {
          result_503316805.push.apply(result_503316805, buffer_503316806);;
          }
          else {
            if (buffer_503316806.length < chckRange(bytesRead_503316807, 0, 2147483647)) { for (var i = buffer_503316806.length; i < chckRange(bytesRead_503316807, 0, 2147483647); ++i) buffer_503316806.push(0); }
         else {buffer_503316806.length = chckRange(bytesRead_503316807, 0, 2147483647); };
            result_503316805.push.apply(result_503316805, buffer_503316806);;
            break Label1;
          }
          
        }
    };

  return result_503316805;

}

function readAllFile_503316816(file_503316817, len_503316818) {
  var result_503316819 = [];

    result_503316819 = nimCopy(null, mnewString(chckRange(len_503316818, 0, 2147483647)), NTI33554449);
    var bytes_503316820 = readBuffer_503316615(file_503316817, result_503316819, chckIndx(0, 0, (result_503316819).length - 1), chckRange(len_503316818, 0, 2147483647));
    if (endOfFile_503316812(file_503316817)) {
    if ((bytes_503316820 < len_503316818)) {
    if (result_503316819.length < chckRange(bytes_503316820, 0, 2147483647)) { for (var i = result_503316819.length; i < chckRange(bytes_503316820, 0, 2147483647); ++i) result_503316819.push(0); }
         else {result_503316819.length = chckRange(bytes_503316820, 0, 2147483647); };
    }
    
    }
    else {
    result_503316819.push.apply(result_503316819, readAllBuffer_503316803(file_503316817));;
    }
    

  return result_503316819;

}

function readAll_503316825(file_503316826) {
  var result_503316827 = [];

    var len_503316828 = rawFileSize_503316808(file_503316826);
    if ((0 < len_503316828)) {
    result_503316827 = nimCopy(null, readAllFile_503316816(file_503316826, len_503316828), NTI33554449);
    }
    else {
      result_503316827 = nimCopy(null, readAllBuffer_503316803(file_503316826), NTI33554449);
    }
    

  return result_503316827;

}

function close_503316691(f_503316692) {
    if (!((f_503316692 == null))) {
    var _ = fclose(f_503316692);
    }
    

  
}

function readFile_503316918(filename_503316919) {
  var result_503316920 = [];

    var f_503316921 = [null];
    if (open_503316852(f_503316921, 0, filename_503316919, 0, -1)) {
    try {
    result_503316920 = nimCopy(null, readAll_503316825(f_503316921[0]), NTI33554449);
    } finally {
    close_503316691(f_503316921[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316919 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_503316920;

}

function getAbsolutePath_2264924172(self_2264924173, relativePath_2264924174) {
  var result_2264924175 = [];

    result_2264924175 = nimCopy(null, HEX2F_1426063446(self_2264924173.path, relativePath_2264924174), NTI33554449);

  return result_2264924175;

}
async function loadFile_2264924200(self_2264924201, relativePath_2264924202) {
  var result_2264924204 = null;

  BeforeRet: {
    result_2264924204 = readFile_503316918(getAbsolutePath_2264924172(self_2264924201, relativePath_2264924202));
    break BeforeRet;
  };

  return result_2264924204;

}

function loadFile_2214592539(self_2214592540, relativePath_2214592541) {
  var result_2214592544 = null;

  return result_2214592544;

}

function loadFile_2214592545(self_2214592540, relativePath_2214592541) {
  var result_2214592546 = null;

  BeforeRet: {
    chckNilDisp(self_2214592540);
    if (isObj(self_2214592540.m_type, NTI2399141893)) {
    result_2214592546 = loadFile_2399142382(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2281701380)) {
    result_2214592546 = loadFile_2281701875(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2264924164)) {
    result_2214592546 = loadFile_2264924200(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2214592520)) {
    result_2214592546 = loadFile_2214592539(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592546;

}
async function httpPost_2348810327(url_2348810328, content_2348810329, authToken_2348810338) {
  var result_2348810340 = null;

  BeforeRet: {
    (await postAsyncJs(toJSStr(url_2348810328), toJSStr(content_2348810329), toJSStr(get_2348810295(authToken_2348810338, []))));
    result_2348810340 = undefined;
    break BeforeRet;
  };

  return result_2348810340;

}
async function saveFile_2399142429(self_2399142430, relativePath_2399142431, content_2399142432) {
    var Temporary1;

  var result_2399142434 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2399142431, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2399142431, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2399142431;
    }
    
    var relativePath_2399142458 = nimCopy(null, Temporary1, NTI33554449);
    var url_2399142459 = (self_2399142430.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2399142458 || []);
    var fmtRes_2399142464 = [mnewString(0)];
    fmtRes_2399142464[0].push.apply(fmtRes_2399142464[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,115,97,118,101,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2399142464, 0, url_2399142459, []);
    fmtRes_2399142464[0].push.apply(fmtRes_2399142464[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2399142464[0], NTI33554449)]);
    (await httpPost_2348810327(url_2399142459, content_2399142432, none_2348810263()));
    result_2399142434 = undefined;
    break BeforeRet;
  };

  return result_2399142434;

}
async function saveFile_2281701935(self_2281701936, relativePath_2281701937, content_2281701938) {
  var result_2281701940 = null;

  BeforeRet: {
    result_2281701940 = undefined;
    break BeforeRet;
  };

  return result_2281701940;

}

function writeBuffer_503316646(f_503316647, buffer_503316648, buffer_503316648_Idx, len_503316649) {
  var result_503316650 = 0;

    result_503316650 = (fwrite(buffer_503316648, buffer_503316648_Idx, 1, (len_503316649 >>> 0), f_503316647) | 0);
    checkErr_503316612(f_503316647);

  return result_503316650;

}

function write_503316684(f_503316685, s_503316686) {
    if (!((writeBuffer_503316646(f_503316685, toJSStr(s_503316686), chckRange((s_503316686).length, 0, 2147483647)) == (s_503316686).length))) {
    raiseEIO_503316567([99,97,110,110,111,116,32,119,114,105,116,101,32,115,116,114,105,110,103,32,116,111,32,102,105,108,101]);
    }
    

  
}

function writeFile_503316923(filename_503316924, content_503316925) {
    var f_503316926 = [null];
    if (open_503316852(f_503316926, 0, filename_503316924, 1, -1)) {
    try {
    write_503316684(f_503316926[0], content_503316925);
    } finally {
    close_503316691(f_503316926[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316924 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  
}
async function saveFile_2264924227(self_2264924228, relativePath_2264924229, content_2264924230) {
  var result_2264924232 = null;

  BeforeRet: {
    writeFile_503316923(getAbsolutePath_2264924172(self_2264924228, relativePath_2264924229), content_2264924230);
    result_2264924232 = undefined;
    break BeforeRet;
  };

  return result_2264924232;

}

function saveFile_2214592547(self_2214592548, relativePath_2214592549, content_2214592550) {
  var result_2214592552 = null;

  return result_2214592552;

}

function saveFile_2214592553(self_2214592548, relativePath_2214592549, content_2214592550) {
  var result_2214592554 = null;

  BeforeRet: {
    chckNilDisp(self_2214592548);
    if (isObj(self_2214592548.m_type, NTI2399141893)) {
    result_2214592554 = saveFile_2399142429(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2281701380)) {
    result_2214592554 = saveFile_2281701935(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2264924164)) {
    result_2214592554 = saveFile_2264924227(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2214592520)) {
    result_2214592554 = saveFile_2214592547(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592554;

}

function rawGet_2399142566(t_2399142569, key_2399142570, hc_2399142571, hc_2399142571_Idx) {
  var result_2399142572 = 0;

  BeforeRet: {
    hc_2399142571[hc_2399142571_Idx] = hash_1325400491(key_2399142570);
    if ((hc_2399142571[hc_2399142571_Idx] == 0)) {
    hc_2399142571[hc_2399142571_Idx] = 314159265;
    }
    
    if (((t_2399142569.data).length == 0)) {
    result_2399142572 = -1;
    break BeforeRet;
    }
    
    var h_2399142623 = (hc_2399142571[hc_2399142571_Idx] & (t_2399142569.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field0)) break Label2;
          if (((t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field0 == hc_2399142571[hc_2399142571_Idx]) && eqStrings(t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field1, key_2399142570))) {
          result_2399142572 = h_2399142623;
          break BeforeRet;
          }
          
          h_2399142623 = nextTry_1308622883(h_2399142623, (t_2399142569.data).length - 1);
        }
    };
    result_2399142572 = subInt(-1, h_2399142623);
  };

  return result_2399142572;

}

function hasKey_2399142559(t_2399142562, key_2399142563) {
  var result_2399142564 = false;

    var hc_2399142565 = [0];
    result_2399142564 = (0 <= rawGet_2399142566(t_2399142562, key_2399142563, hc_2399142565, 0));

  return result_2399142564;

}

function contains_2399142553(t_2399142556, key_2399142557) {
  var result_2399142558 = false;

  BeforeRet: {
    result_2399142558 = hasKey_2399142559(t_2399142556, key_2399142557);
    break BeforeRet;
  };

  return result_2399142558;

}

function HEX5BHEX5D_2399142857(t_2399142860, key_2399142861) {
  var result_2399142862 = null;

    var hcHEX60gensym22_2399142863 = [0];
    var indexHEX60gensym22_2399142870 = rawGet_2399142566(t_2399142860, key_2399142861, hcHEX60gensym22_2399142863, 0);
    if ((0 <= indexHEX60gensym22_2399142870)) {
    result_2399142862 = t_2399142860.data[chckIndx(indexHEX60gensym22_2399142870, 0, (t_2399142860.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2399142861);
    }
    

  return result_2399142862;

}

function mustRehash_2399143261(t_2399143263) {
  var result_2399143264 = false;

    if (!((t_2399143263.counter < (t_2399143263.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2399143264 = ((mulInt((t_2399143263.data).length, 2) < mulInt(t_2399143263.counter, 3)) || (subInt((t_2399143263.data).length, t_2399143263.counter) < 4));

  return result_2399143264;

}

function rawInsert_2399143710(t_2399143714, data_2399143715, data_2399143715_Idx, key_2399143716, val_2399143717, hc_2399143718, h_2399143719) {
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field1 = nimCopy(null, key_2399143716, NTI33554449);
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field2 = nimCopy(data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field2, val_2399143717, NTI2399141891);
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field0 = hc_2399143718;

  
}

function enlarge_2399143416(t_2399143419) {
    var n_2399143422 = [];
    n_2399143422 = new Array(chckRange(mulInt((t_2399143419.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2399143419.data).length, 2), 0, 2147483647) ; ++i) { n_2399143422[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }    var Temporary1 = t_2399143419.data; t_2399143419.data = n_2399143422; n_2399143422 = Temporary1;    Label2: {
      var i_2399143486 = 0;
      var colontmp__536872339 = 0;
      colontmp__536872339 = (n_2399143422).length - 1;
      var res_536872340 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872340 <= colontmp__536872339)) break Label4;
            i_2399143486 = res_536872340;
            var eh_2399143540 = n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field0;
            if (isFilled_1308622880(eh_2399143540)) {
            var j_2399143544 = (eh_2399143540 & (t_2399143419.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2399143419.data[chckIndx(j_2399143544, 0, (t_2399143419.data).length - 1)].Field0)) break Label6;
                  j_2399143544 = nextTry_1308622883(j_2399143544, (t_2399143419.data).length - 1);
                }
            };
            rawInsert_2399143710(t_2399143419, t_2399143419, "data", n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field1, n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field2, eh_2399143540, j_2399143544);
            }
            
            res_536872340 = addInt(res_536872340, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2399143879(t_2399143882, key_2399143883, hc_2399143884) {
  var result_2399143885 = 0;

  BeforeRet: {
    if (((t_2399143882.data).length == 0)) {
    result_2399143885 = -1;
    break BeforeRet;
    }
    
    var h_2399143936 = (hc_2399143884 & (t_2399143882.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field0)) break Label2;
          if (((t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field0 == hc_2399143884) && eqStrings(t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field1, key_2399143883))) {
          result_2399143885 = h_2399143936;
          break BeforeRet;
          }
          
          h_2399143936 = nextTry_1308622883(h_2399143936, (t_2399143882.data).length - 1);
        }
    };
    result_2399143885 = subInt(-1, h_2399143936);
  };

  return result_2399143885;

}

function HEX5BHEX5DHEX3D_2399143088(t_2399143091, key_2399143092, val_2399143093) {
    if (((t_2399143091.data).length == 0)) {
    var correctSizeHEX60gensym25_2399143142 = slotsNeeded_1308622891(32);
    t_2399143091.counter = 0;
    t_2399143091.data = new Array(chckRange(correctSizeHEX60gensym25_2399143142, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2399143142, 0, 2147483647) ; ++i) { t_2399143091.data[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }    }
    
    var hc_2399143147 = [0];
    var index_2399143154 = rawGet_2399142566(t_2399143091, key_2399143092, hc_2399143147, 0);
    if ((0 <= index_2399143154)) {
    t_2399143091.data[chckIndx(index_2399143154, 0, (t_2399143091.data).length - 1)].Field2 = nimCopy(t_2399143091.data[chckIndx(index_2399143154, 0, (t_2399143091.data).length - 1)].Field2, val_2399143093, NTI2399141891);
    }
    else {
      if (((t_2399143091.data).length == 0)) {
      var correctSizeHEX60gensym28_2399143256 = slotsNeeded_1308622891(32);
      t_2399143091.counter = 0;
      t_2399143091.data = new Array(chckRange(correctSizeHEX60gensym28_2399143256, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2399143256, 0, 2147483647) ; ++i) { t_2399143091.data[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }      }
      
      if (mustRehash_2399143261(t_2399143091)) {
      enlarge_2399143416(t_2399143091);
      index_2399143154 = rawGetKnownHC_2399143879(t_2399143091, key_2399143092, hc_2399143147[0]);
      }
      
      index_2399143154 = subInt(-1, index_2399143154);
      rawInsert_2399143710(t_2399143091, t_2399143091, "data", key_2399143092, val_2399143093, hc_2399143147[0], index_2399143154);
      t_2399143091.counter = addInt(t_2399143091.counter, 1);
    }
    

  
}

function parseDirectoryListing_2399142469(self_2399142470, basePath_2399142471, jsn_2399142472) {
        var Temporary3;
        var Temporary8;

  var result_2399142473 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2399142472, [102,105,108,101,115]) && (HEX5BHEX5D_1627393037(jsn_2399142472, [102,105,108,101,115]).kind == 6))) {
    var files_2399142478 = HEX5BHEX5D_1627393037(jsn_2399142472, [102,105,108,101,115]);
    Label1: {
      var item_2399142479 = null;
      if (!((files_2399142478.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(files_2399142478.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872345 = null;
        var colontmp__536872346 = [];
        var Temporary3 = files_2399142478;
        if (ConstSet316[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872346 = Temporary3.elems;
        var i_536872347 = 0;
        var L_536872348 = (colontmp__536872346).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872347 < L_536872348)) break Label5;
              i_536872345 = colontmp__536872346[chckIndx(i_536872347, 0, (colontmp__536872346).length - 1)];
              item_2399142479 = i_536872345;
              result_2399142473.files.push(getStr_1627390106(item_2399142479, []));;
              i_536872347 = addInt(i_536872347, 1);
              if (!(((colontmp__536872346).length == L_536872348))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    if ((hasKey_1627393154(jsn_2399142472, [102,111,108,100,101,114,115]) && (HEX5BHEX5D_1627393037(jsn_2399142472, [102,111,108,100,101,114,115]).kind == 6))) {
    var folders_2399142488 = HEX5BHEX5D_1627393037(jsn_2399142472, [102,111,108,100,101,114,115]);
    Label6: {
      var item_2399142489 = null;
      if (!((folders_2399142488.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(folders_2399142488.kind, NTI1627389955) || []));
      }
      
      Label7: {
        var i_536872352 = null;
        var colontmp__536872353 = [];
        var Temporary8 = folders_2399142488;
        if (ConstSet317[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        colontmp__536872353 = Temporary8.elems;
        var i_536872354 = 0;
        var L_536872355 = (colontmp__536872353).length;
        Label9: {
            Label10: while (true) {
            if (!(i_536872354 < L_536872355)) break Label10;
              i_536872352 = colontmp__536872353[chckIndx(i_536872354, 0, (colontmp__536872353).length - 1)];
              item_2399142489 = i_536872352;
              result_2399142473.folders.push(getStr_1627390106(item_2399142489, []));;
              i_536872354 = addInt(i_536872354, 1);
              if (!(((colontmp__536872353).length == L_536872355))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2399142473;

}
async function getDirectoryListing_2399142497(self_2399142498, relativePath_2399142499) {
    var Temporary3;

  var result_2399142501 = null;

  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499) && !(HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).done))) break Label2;
          (await (new Promise(resolve => setTimeout(resolve, 2))));
        }
    };
    if (contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499)) {
    result_2399142501 = HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).listing;
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_2399143088(self_2399142498.cachedDirectoryListings, relativePath_2399142499, {done: false, listing: ({files: [], folders: []})});
    if ((((relativePath_2399142499).length == 0) || eqStrings(relativePath_2399142499, [46]))) {
    Temporary3 = (self_2399142498.baseUrl || []).concat([47,108,105,115,116] || []);
    }
    else {
    Temporary3 = (self_2399142498.baseUrl || []).concat([47,108,105,115,116,47] || [],relativePath_2399142499 || []);
    }
    
    var url_2399144117 = nimCopy(null, Temporary3, NTI33554449);
    var response_2399144122 = (await httpGet_2348810256(url_2399144117, none_2348810263()));
++excHandler;
    try {
    var jsn_2399144123 = parseJson_1627395313(response_2399144122);
    var listing_2399144124 = parseDirectoryListing_2399142469(self_2399142498, relativePath_2399142499, jsn_2399144123);
    HEX5BHEX5DHEX3D_2399143088(self_2399142498.cachedDirectoryListings, relativePath_2399142499, {done: true, listing: nimCopy(null, listing_2399144124, NTI2214592517)});
    result_2399142501 = listing_2399144124;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2399144178 = [mnewString(0)];
    fmtRes_2399144178[0].push.apply(fmtRes_2399144178[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2399144178, 0, response_2399144122, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2399144178[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499)) {
    HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).done = true;
    result_2399142501 = HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).listing;
    break BeforeRet;
    }
    
    result_2399142501 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2399142501;

}

function rawGet_2281702091(t_2281702094, key_2281702095, hc_2281702096, hc_2281702096_Idx) {
  var result_2281702097 = 0;

  BeforeRet: {
    hc_2281702096[hc_2281702096_Idx] = hash_1325400491(key_2281702095);
    if ((hc_2281702096[hc_2281702096_Idx] == 0)) {
    hc_2281702096[hc_2281702096_Idx] = 314159265;
    }
    
    if (((t_2281702094.data).length == 0)) {
    result_2281702097 = -1;
    break BeforeRet;
    }
    
    var h_2281702148 = (hc_2281702096[hc_2281702096_Idx] & (t_2281702094.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field0)) break Label2;
          if (((t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field0 == hc_2281702096[hc_2281702096_Idx]) && eqStrings(t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field1, key_2281702095))) {
          result_2281702097 = h_2281702148;
          break BeforeRet;
          }
          
          h_2281702148 = nextTry_1308622883(h_2281702148, (t_2281702094.data).length - 1);
        }
    };
    result_2281702097 = subInt(-1, h_2281702148);
  };

  return result_2281702097;

}

function hasKey_2281702084(t_2281702087, key_2281702088) {
  var result_2281702089 = false;

    var hc_2281702090 = [0];
    result_2281702089 = (0 <= rawGet_2281702091(t_2281702087, key_2281702088, hc_2281702090, 0));

  return result_2281702089;

}

function contains_2281702078(t_2281702081, key_2281702082) {
  var result_2281702083 = false;

  BeforeRet: {
    result_2281702083 = hasKey_2281702084(t_2281702081, key_2281702082);
    break BeforeRet;
  };

  return result_2281702083;

}

function HEX5BHEX5D_2281702382(t_2281702385, key_2281702386) {
  var result_2281702387 = null;

    var hcHEX60gensym22_2281702388 = [0];
    var indexHEX60gensym22_2281702395 = rawGet_2281702091(t_2281702385, key_2281702386, hcHEX60gensym22_2281702388, 0);
    if ((0 <= indexHEX60gensym22_2281702395)) {
    result_2281702387 = t_2281702385.data[chckIndx(indexHEX60gensym22_2281702395, 0, (t_2281702385.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2281702386);
    }
    

  return result_2281702387;

}

function parseDirectoryListing_2281701946(self_2281701947, basePath_2281701948, jsn_2281701949) {
        var Temporary3;

  var result_2281701950 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2281701949, [116,114,101,101]) && (HEX5BHEX5D_1627393037(jsn_2281701949, [116,114,101,101]).kind == 6))) {
    var tree_2281701955 = HEX5BHEX5D_1627393037(jsn_2281701949, [116,114,101,101]);
    Label1: {
      var item_2281701956 = null;
      if (!((tree_2281701955.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(tree_2281701955.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872361 = null;
        var colontmp__536872362 = [];
        var Temporary3 = tree_2281701955;
        if (ConstSet318[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872362 = Temporary3.elems;
        var i_536872363 = 0;
        var L_536872364 = (colontmp__536872362).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872363 < L_536872364)) break Label5;
              i_536872361 = colontmp__536872362[chckIndx(i_536872363, 0, (colontmp__536872362).length - 1)];
              item_2281701956 = i_536872361;
              Label6: {
                if (!((item_2281701956.kind == 5))) {
                break Label6;
                }
                
                var path_2281701961 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [112,97,116,104]), []);
                var typ_2281701962 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [116,121,112,101]), []);
                var url_2281701963 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [117,114,108]), []);
                var sha_2281701964 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [115,104,97]), []);
                HEX5BHEX5DHEX3D_1795162732(self_2281701947.pathToSha, HEX2F_1426063446(basePath_2281701948, path_2281701961), sha_2281701964);
                switch (toJSStr(typ_2281701962)) {
                case "blob":
                  var Temporary7 = nimCopy(null, path_2281701961, NTI33554449);
                  result_2281701950.files.push(Temporary7);;
                  break;
                case "tree":
                  var Temporary8 = nimCopy(null, path_2281701961, NTI33554449);
                  result_2281701950.folders.push(Temporary8);;
                  break;
                default: 
                  break;
                }
              };
              i_536872363 = addInt(i_536872363, 1);
              if (!(((colontmp__536872362).length == L_536872364))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2281701950;

}

function mustRehash_2281702804(t_2281702806) {
  var result_2281702807 = false;

    if (!((t_2281702806.counter < (t_2281702806.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2281702807 = ((mulInt((t_2281702806.data).length, 2) < mulInt(t_2281702806.counter, 3)) || (subInt((t_2281702806.data).length, t_2281702806.counter) < 4));

  return result_2281702807;

}

function rawInsert_2281703253(t_2281703257, data_2281703258, data_2281703258_Idx, key_2281703259, val_2281703260, hc_2281703261, h_2281703262) {
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field1 = nimCopy(null, key_2281703259, NTI33554449);
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field2 = nimCopy(data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field2, val_2281703260, NTI2214592517);
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field0 = hc_2281703261;

  
}

function enlarge_2281702959(t_2281702962) {
    var n_2281702965 = [];
    n_2281702965 = new Array(chckRange(mulInt((t_2281702962.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2281702962.data).length, 2), 0, 2147483647) ; ++i) { n_2281702965[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    var Temporary1 = t_2281702962.data; t_2281702962.data = n_2281702965; n_2281702965 = Temporary1;    Label2: {
      var i_2281703029 = 0;
      var colontmp__536872368 = 0;
      colontmp__536872368 = (n_2281702965).length - 1;
      var res_536872369 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872369 <= colontmp__536872368)) break Label4;
            i_2281703029 = res_536872369;
            var eh_2281703083 = n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field0;
            if (isFilled_1308622880(eh_2281703083)) {
            var j_2281703087 = (eh_2281703083 & (t_2281702962.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2281702962.data[chckIndx(j_2281703087, 0, (t_2281702962.data).length - 1)].Field0)) break Label6;
                  j_2281703087 = nextTry_1308622883(j_2281703087, (t_2281702962.data).length - 1);
                }
            };
            rawInsert_2281703253(t_2281702962, t_2281702962, "data", n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field1, n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field2, eh_2281703083, j_2281703087);
            }
            
            res_536872369 = addInt(res_536872369, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2281703422(t_2281703425, key_2281703426, hc_2281703427) {
  var result_2281703428 = 0;

  BeforeRet: {
    if (((t_2281703425.data).length == 0)) {
    result_2281703428 = -1;
    break BeforeRet;
    }
    
    var h_2281703479 = (hc_2281703427 & (t_2281703425.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field0)) break Label2;
          if (((t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field0 == hc_2281703427) && eqStrings(t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field1, key_2281703426))) {
          result_2281703428 = h_2281703479;
          break BeforeRet;
          }
          
          h_2281703479 = nextTry_1308622883(h_2281703479, (t_2281703425.data).length - 1);
        }
    };
    result_2281703428 = subInt(-1, h_2281703479);
  };

  return result_2281703428;

}

function HEX5BHEX5DHEX3D_2281702631(t_2281702634, key_2281702635, val_2281702636) {
    if (((t_2281702634.data).length == 0)) {
    var correctSizeHEX60gensym22_2281702685 = slotsNeeded_1308622891(32);
    t_2281702634.counter = 0;
    t_2281702634.data = new Array(chckRange(correctSizeHEX60gensym22_2281702685, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym22_2281702685, 0, 2147483647) ; ++i) { t_2281702634.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    }
    
    var hc_2281702690 = [0];
    var index_2281702697 = rawGet_2281702091(t_2281702634, key_2281702635, hc_2281702690, 0);
    if ((0 <= index_2281702697)) {
    t_2281702634.data[chckIndx(index_2281702697, 0, (t_2281702634.data).length - 1)].Field2 = nimCopy(t_2281702634.data[chckIndx(index_2281702697, 0, (t_2281702634.data).length - 1)].Field2, val_2281702636, NTI2214592517);
    }
    else {
      if (((t_2281702634.data).length == 0)) {
      var correctSizeHEX60gensym25_2281702799 = slotsNeeded_1308622891(32);
      t_2281702634.counter = 0;
      t_2281702634.data = new Array(chckRange(correctSizeHEX60gensym25_2281702799, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2281702799, 0, 2147483647) ; ++i) { t_2281702634.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }      }
      
      if (mustRehash_2281702804(t_2281702634)) {
      enlarge_2281702959(t_2281702634);
      index_2281702697 = rawGetKnownHC_2281703422(t_2281702634, key_2281702635, hc_2281702690[0]);
      }
      
      index_2281702697 = subInt(-1, index_2281702697);
      rawInsert_2281703253(t_2281702634, t_2281702634, "data", key_2281702635, val_2281702636, hc_2281702690[0], index_2281702697);
      t_2281702634.counter = addInt(t_2281702634.counter, 1);
    }
    

  
}
async function getDirectoryListing_2281702022(self_2281702023, relativePath_2281702024) {
    var Temporary1;
    var Temporary2;

  var result_2281702026 = null;

  BeforeRet: {
    if (contains_2281702078(self_2281702023.cachedDirectoryListings, relativePath_2281702024)) {
    result_2281702026 = HEX5BHEX5D_2281702382(self_2281702023.cachedDirectoryListings, relativePath_2281702024);
    break BeforeRet;
    }
    
    var fmtRes_2281702468 = [mnewString(0)];
    fmtRes_2281702468[0].push.apply(fmtRes_2281702468[0], [91,103,105,116,104,117,98,93,32,103,101,116,68,105,114,101,99,116,111,114,121,76,105,115,116,105,110,103,32,102,111,114,32]);;
    formatValue_721420459(fmtRes_2281702468, 0, self_2281702023.baseUrl, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2281702468[0], NTI33554449)]);
    var token_2281702469 = getAccessToken_2281701406();
    if ((((relativePath_2281702024).length == 0) || eqStrings(relativePath_2281702024, [46]))) {
    Temporary1 = (self_2281702023.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],self_2281702023.branchOrHash || []);
    }
    else {
    if (contains_2382364741(self_2281702023.pathToSha, relativePath_2281702024)) {
    Temporary1 = (self_2281702023.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],(Temporary2 = HEX5BHEX5D_1795163814(self_2281702023.pathToSha, relativePath_2281702024), Temporary2)[0][Temporary2[1]] || []);
    }
    else {
      var fmtRes_2281702579 = [mnewString(0)];
      fmtRes_2281702579[0].push.apply(fmtRes_2281702579[0], [91,103,105,116,104,117,98,93,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,100,105,114,101,99,116,111,114,121,32,108,105,115,116,105,110,103,32,102,111,114,32,39]);;
      formatValue_721420459(fmtRes_2281702579, 0, relativePath_2281702024, []);
      fmtRes_2281702579[0].push.apply(fmtRes_2281702579[0], [39]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281702579[0], NTI33554449)]);
      result_2281702026 = {files: [], folders: []};
      break BeforeRet;
    }
    }
    var url_2281702583 = nimCopy(null, Temporary1, NTI33554449);
    var response_2281702588 = (await httpGet_2348810256(url_2281702583, token_2281702469));
++excHandler;
    try {
    var jsn_2281702589 = parseJson_1627395313(response_2281702588);
    var listing_2281702590 = parseDirectoryListing_2281701946(self_2281702023, relativePath_2281702024, jsn_2281702589);
    HEX5BHEX5DHEX3D_2281702631(self_2281702023.cachedDirectoryListings, relativePath_2281702024, listing_2281702590);
    result_2281702026 = listing_2281702590;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2281703667 = [mnewString(0)];
    fmtRes_2281703667[0].push.apply(fmtRes_2281703667[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2281703667, 0, response_2281702588, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281703667[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2281702026 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2281702026;

}
async function getDirectoryListing_2264924250(self_2264924251, relativePath_2264924252) {
  var result_2264924254 = null;

  return result_2264924254;

}

function getDirectoryListing_2214592555(self_2214592556, relativePath_2214592557) {
  var result_2214592560 = null;

  return result_2214592560;

}

function getDirectoryListing_2214592561(self_2214592556, relativePath_2214592557) {
  var result_2214592562 = null;

  BeforeRet: {
    chckNilDisp(self_2214592556);
    if (isObj(self_2214592556.m_type, NTI2399141893)) {
    result_2214592562 = getDirectoryListing_2399142497(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2281701380)) {
    result_2214592562 = getDirectoryListing_2281702022(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2264924164)) {
    result_2214592562 = getDirectoryListing_2264924250(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2214592520)) {
    result_2214592562 = getDirectoryListing_2214592555(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592562;

}

function loadFile_2382364680(self_2382364681, path_2382364682) {
  var result_2382364683 = [];

  BeforeRet: {
    result_2382364683 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(path_2382364682))), NTI33554449);
    break BeforeRet;
  };

  return result_2382364683;

}

function loadFile_2365587459(self_2365587460, path_2365587461) {
  var result_2365587462 = [];

  return result_2365587462;

}

function loadFile_2365587463(self_2365587460, path_2365587461) {
  var result_2365587464 = [];

  BeforeRet: {
    chckNilDisp(self_2365587460);
    if (isObj(self_2365587460.m_type, NTI2382364676)) {
    result_2365587464 = loadFile_2382364680(self_2365587460, path_2365587461);
    break BeforeRet;
    }
    else {
    if (isObj(self_2365587460.m_type, NTI2365587460)) {
    result_2365587464 = loadFile_2365587459(self_2365587460, path_2365587461);
    break BeforeRet;
    }
    }
  };

  return result_2365587464;

}

function saveFile_2382364684(self_2382364685, path_2382364686, content_2382364687) {
  
}

function saveFile_2365587465(self_2365587466, path_2365587467, content_2365587468) {
  
}

function saveFile_2365587469(self_2365587466, path_2365587467, content_2365587468) {
    chckNilDisp(self_2365587466);
    if (isObj(self_2365587466.m_type, NTI2382364676)) {
    saveFile_2382364684(self_2365587466, path_2365587467, content_2365587468);
    }
    else {
    if (isObj(self_2365587466.m_type, NTI2365587460)) {
    saveFile_2365587465(self_2365587466, path_2365587467, content_2365587468);
    }
    }

  
}

function saveApplicationFile_2382364856(self_2382364857, name_2382364858, content_2382364859) {
    window.localStorage.setItem(toJSStr(name_2382364858), toJSStr(content_2382364859));

  
}

function saveApplicationFile_2365587476(self_2365587477, name_2365587478, content_2365587479) {
  
}

function saveApplicationFile_2365587480(self_2365587477, name_2365587478, content_2365587479) {
    chckNilDisp(self_2365587477);
    if (isObj(self_2365587477.m_type, NTI2382364676)) {
    saveApplicationFile_2382364856(self_2365587477, name_2365587478, content_2365587479);
    }
    else {
    if (isObj(self_2365587477.m_type, NTI2365587460)) {
    saveApplicationFile_2365587476(self_2365587477, name_2365587478, content_2365587479);
    }
    }

  
}
async function updateWorkspaceName_2399142357(self_2399142358) {
  var result_2399142360 = null;

  BeforeRet: {
    var url_2399142366 = (self_2399142358.baseUrl || []).concat([47,105,110,102,111,47,110,97,109,101] || []);
    var localFolder_2399142371 = (await httpGet_2348810256(url_2399142366, none_2348810263()));
    var fmtRes_2399142376 = [mnewString(0)];
    fmtRes_2399142376[0].push.apply(fmtRes_2399142376[0], [65,98,115,121,116,114,101,101,83,101,114,118,101,114,58]);;
    formatValue_721420459(fmtRes_2399142376, 0, self_2399142358.baseUrl, []);
    fmtRes_2399142376[0].push.apply(fmtRes_2399142376[0], [47]);;
    formatValue_721420459(fmtRes_2399142376, 0, localFolder_2399142371, []);
    self_2399142358.name = nimCopy(null, fmtRes_2399142376[0], NTI33554449);
    result_2399142360 = undefined;
    break BeforeRet;
  };

  return result_2399142360;

}
async function updateWorkspaceName_2399142377(self_2399142358) {
  var result_2399142378 = null;

  BeforeRet: {
    result_2399142378 = updateWorkspaceName_2399142357(self_2399142358);
    break BeforeRet;
  };

  return result_2399142378;

}

function HEX24_2969571601(document_2969571602) {
  var result_2969571603 = [];

  BeforeRet: {
    result_2969571603 = nimCopy(null, document_2969571602.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2969571603;

}

function HEX24_2818579224(document_2818579225) {
  var result_2818579226 = [];

  BeforeRet: {
    result_2818579226 = nimCopy(null, document_2818579225.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2818579226;

}

function HEX24_2197815307(document_2197815308) {
  var result_2197815309 = [];

  BeforeRet: {
    result_2197815309 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2197815309;

}

function HEX24_2197815310(document_2197815308) {
  var result_2197815311 = [];

  BeforeRet: {
    chckNilDisp(document_2197815308);
    if (isObj(document_2197815308.m_type, NTI2969568591)) {
    result_2197815311 = HEX24_2969571601(document_2197815308);
    break BeforeRet;
    }
    else {
    if (isObj(document_2197815308.m_type, NTI2818572427)) {
    result_2197815311 = HEX24_2818579224(document_2197815308);
    break BeforeRet;
    }
    else {
    if (isObj(document_2197815308.m_type, NTI2197815300)) {
    result_2197815311 = HEX24_2197815307(document_2197815308);
    break BeforeRet;
    }
    }}
  };

  return result_2197815311;

}

function toJson_3003123902(kind_3003123903, opt_3003123904) {
  var result_3003123905 = null;

  BeforeRet: {
    result_3003123905 = newJString_1627389994(reprEnum(kind_3003123903, NTI3003121667));
    break BeforeRet;
  };

  return result_3003123905;

}

function toJson_2046820654(id_2046820655, opt_2046820656) {
  var result_2046820657 = null;

  BeforeRet: {
    result_2046820657 = newJString_1627389994(HEX24_2046820617(id_2046820655));
    break BeforeRet;
  };

  return result_2046820657;

}

function join_3003123944(a_3003123946, sep_3003123947) {
  var result_3003123948 = [];

    result_3003123948 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3003123963 = 0;
      var x_3003123964 = 0;
      var i_536872378 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872378 < (a_3003123946).length)) break Label3;
            i_3003123963 = i_536872378;
            x_3003123964 = a_3003123946[chckIndx(i_536872378, 0, (a_3003123946).length - 1)];
            if ((0 < i_3003123963)) {
            result_3003123948.push.apply(result_3003123948, sep_3003123947);;
            }
            
            result_3003123948.push.apply(result_3003123948, HEX24_369098760(x_3003123964));;
            i_536872378 = addInt(i_536872378, 1);
          }
      };
    };

  return result_3003123948;

}

function toJson_3003123936(node_3003123937, opt_3003123938) {
  var result_3003123939 = null;

    result_3003123939 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [107,105,110,100], toJson_3003123902(node_3003123937.kind, opt_3003123938));
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [105,100], toJson_2046820654(node_3003123937.id, opt_3003123938));
    if (!(HEX3DHEX3D_2046820626(node_3003123937.reff, null_2046820646))) {
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [114,101,102,102], toJson_2046820654(node_3003123937.reff, opt_3003123938));
    }
    
    if ((0 < (node_3003123937.text).length)) {
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [116,101,120,116], toJson_1811939932(node_3003123937.text, opt_3003123938));
    }
    
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [112,97,116,104], newJString_1627389994(join_3003123944(path_3003123619(node_3003123937), [44,32])));
    if ((0 < len_3003121752(node_3003123937))) {
    var children_3003123965 = newJArray_1627390082();
    Label1: {
      var child_3003123969 = null;
      var i_536872373 = 0;
      var L_536872374 = (node_3003123937.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872373 < L_536872374)) break Label3;
            child_3003123969 = node_3003123937.children[chckIndx(i_536872373, 0, (node_3003123937.children).length - 1)];
            add_1627390190(children_3003123965, toJson_3003123936(child_3003123969, opt_3003123938));
            i_536872373 = addInt(i_536872373, 1);
            if (!(((node_3003123937.children).length == L_536872374))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [99,104,105,108,100,114,101,110], children_3003123965);
    }
    

  return result_3003123939;

}

function get_2818579259(self_2818579261) {
  var result_2818579262 = null;

    if (isNone_2818579267(self_2818579261)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818579262 = self_2818579261["val"];

  return result_2818579262;

}

function serializeHtml_3187672156(self_3187672157, theme_3187672158) {
  var result_3187672159 = [];

  BeforeRet: {
    var title_3187672160 = nimCopy(null, nossplitFile(self_3187672157.filename).Field1, NTI33554449);
    var body_3187672161 = [];
    var diagnosticsCss_3187672162 = [];
    var fmtRes_3187672167 = [mnewString(0)];
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("<!DOCTYPE html>\x0A<html>\x0A  <head>\x0A    <meta charset=utf-8>\x0A    <title>"));;
    formatValue_721420459(fmtRes_3187672167, 0, title_3187672160, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("</title>\x0A    <style>\x0A      body {\x0A        margin: 0px;\x0A        font-family: \"Courier New\", monospace;\x0A        background: #222222;\x0A      }\x0A      .code span {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code a {\x0A        text-decoration: none;\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code div {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A\x0A      .code a:hover {\x0A        text-decoration: underline;\x0A      }\x0A\x0A      .highlight {\x0A        outline-width: 1px;\x0A        outline-color: yellow;\x0A        outline-style: solid;\x0A      }\x0A\x0A      .primary {\x0A        outline-width: 1px;\x0A        outline-color: red;\x0A        outline-style: solid;\x0A      }\x0A\x0A      "));;
    formatValue_721420459(fmtRes_3187672167, 0, diagnosticsCss_3187672162, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("\x0A\x0A      .collapsible {\x0A        cursor: pointer; /* Add a cursor to the div */\x0A\x0A        -webkit-touch-callout: none; /* Disable callout on iOS */\x0A        -webkit-user-select: none; /* Disable selection on iOS */\x0A        -khtml-user-select: none; /* Disable selection on Konqueror */\x0A        -moz-user-select: none; /* Disable selection on Firefox */\x0A        -ms-user-select: none; /* Disable selection on IE 10+ */\x0A        user-select: none; /* Disable selection on modern browsers */\x0A      }\x0A\x0A      /* Style the sidebar */\x0A      .sidebar {\x0A        height: 100%; /* Set the height to 100% */\x0A        width: 100; /* Set the width */\x0A        position: fixed; /* Fix the position */\x0A        top: 0; /* Set the top position */\x0A        left: 0; /* Set the left position */\x0A        background-color: #444;\x0A        padding: 8px; /* Add some padding */\x0A      }\x0A\x0A      /* Style the main content */\x0A      .main {\x0A        margin-left: 116px; /* Set the margin to the left of the sidebar */\x0A        padding: 8px;\x0A      }\x0A\x0A      @media (max-width: 600px) {\x0A        .sidebar {\x0A          position: sticky; /* Set the position to relative */\x0A          width: 100%; /* Set the width to 100% */\x0A        }\x0A        .main {\x0A          margin-left: 0; /* Remove the margin */\x0A        }\x0A      }\x0A\x0A    </style>\x0A  </head>\x0A\x0A  <body>\x0A    <div class=\"sidebar\">\x0A      <button onclick=\"collapseAll(true)\">Collapse All</button><br>\x0A      <button onclick=\"collapseAll(false)\">Expand All</button>\x0A    </div>\x0A\x0A    <div class=\"main\">\x0A      <h1><a href=\"./"));;
    formatValue_721420459(fmtRes_3187672167, 0, title_3187672160, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], [46,97,115,116,34,32,115,116,121,108,101,61,34,99,111,108,111,114,58,32,119,104,105,116,101,34,62]);;
    formatValue_721420459(fmtRes_3187672167, 0, title_3187672160, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], [60,47,97,62,60,47,104,49,62,10,32,32,32,32,32,32]);;
    formatValue_721420459(fmtRes_3187672167, 0, body_3187672161, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("\x0A    </div>\x0A\x0A    <script>\x0A\x0A      function clearAllHighlights() {\x0A        // Remove the highlight class from all elements\x0A        let elements = document.querySelectorAll(\'.highlight\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'highlight\');\x0A        }\x0A        elements = document.querySelectorAll(\'.primary\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'primary\');\x0A        }\x0A      }\x0A\x0A      let links = document.querySelectorAll(\'a\');\x0A      for (let i = 0; i < links.length; i++) {\x0A        links[i].addEventListener(\'click\', function() {\x0A          clearAllHighlights();\x0A\x0A          // Add the highlight class to the element with the same id as the clicked link\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            let element = document.getElementById(this.getAttribute(\'href\').substring(1));\x0A            if (element !== null) {\x0A              element.classList.add(\'highlight\');\x0A              console.log(\"test\");\x0A              element.scrollIntoView({\x0A                behavior: \"smooth\",\x0A                block: \"center\"\x0A              });\x0A              return false;\x0A            }\x0A          }\x0A\x0A          return true;\x0A        });\x0A\x0A        links[i].addEventListener(\'mouseenter\', function() {\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            clearAllHighlights();\x0A            let href = this.getAttribute(\'href\').substring(1);\x0A            let element = document.getElementById(href);\x0A            if (element !== null) {\x0A              //element.classList.add(\'highlight\');\x0A              element.classList.add(\'primary\');\x0A            }\x0A            highlightReferences(href);\x0A          }\x0A          this.classList.add(\'highlight\');\x0A        });\x0A      }\x0A\x0A      let defs = document.querySelectorAll(\'.def\');\x0A      for (let i = 0; i < defs.length; i++) {\x0A        defs[i].addEventListener(\'mouseleave\', function() {\x0A          clearAllHighlights();\x0A          return true;\x0A        })\x0A        defs[i].addEventListener(\'mouseenter\', function() {\x0A          clearAllHighlights();\x0A          highlightReferences(this.id);\x0A          // this.classList.add(\'highlight\');\x0A          this.classList.add(\'primary\');\x0A          return true;\x0A        })\x0A      }\x0A\x0A      function highlightReferences(id) {\x0A        let links = document.querySelectorAll(`a[href=\"#${id}\"]`);\x0A        for (let link of links) {\x0A          link.classList.add(\'highlight\');\x0A        }\x0A      }\x0A\x0A      var coll = document.getElementsByClassName(\"collapsible\");\x0A      var i;\x0A\x0A      for (i = 0; i < coll.length; i++) {\x0A        coll[i].addEventListener(\"click\", function() {\x0A          this.classList.toggle(\"active\");\x0A          var content = this.nextElementSibling;\x0A          if (content.style.display !== \"none\") {\x0A            content.style.display = \"none\";\x0A            this.innerHTML = \"+\";\x0A          } else {\x0A            this.innerHTML = \"-\";\x0A            if (this.classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (this.classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        });\x0A      }\x0A\x0A      function collapseAll(collapse) {\x0A        var coll = document.getElementsByClassName(\"collapsible\");\x0A\x0A        for (let i = 0; i < coll.length; i++) {\x0A          var content = coll[i].nextElementSibling;\x0A          if (collapse) {\x0A            coll[i].classList.add(\"active\");\x0A            content.style.display = \"none\";\x0A            coll[i].innerHTML = \"+\";\x0A          } else {\x0A            coll[i].classList.remove(\"active\");\x0A            coll[i].innerHTML = \"-\";\x0A            if (coll[i].classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (coll[i].classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        }\x0A      }\x0A    </script>\x0A  </body>\x0A</html>"));;
    result_3187672159 = nimCopy(null, fmtRes_3187672167[0], NTI33554449);
    break BeforeRet;
  };

  return result_3187672159;

}

function saveHtml_2969571627(self_2969571628) {
    var pathParts_2969571629 = nossplitFile(self_2969571628.filename);
    var htmlPath_2969571630 = HEX2F_1426063446(pathParts_2969571629.Field0, (pathParts_2969571629.Field1 || []).concat([46,104,116,109,108] || []));
    var html_2969571631 = serializeHtml_3187672156(self_2969571628, gEditor.theme);
    saveFile_2365587469(fs_2365587509, htmlPath_2969571630, html_2969571631);

  
}

function save_2969571632(self_2969571633, filename_2969571634, app_2969571635) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2969571634).length)) {
    Temporary1 = filename_2969571634;
    }
    else {
    Temporary1 = self_2969571633.filename;
    }
    
    self_2969571633.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2969571633.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_2969571641 = [mnewString(0)];
    fmtRes_2969571641[0].push.apply(fmtRes_2969571641[0], [91,97,115,116,100,111,99,93,32,83,97,118,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969571641, 0, self_2969571633.filename, []);
    fmtRes_2969571641[0].push.apply(fmtRes_2969571641[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571641[0], NTI33554449)]);
    var serialized_2969571642 = toJson_3003123936(self_2969571633.rootNode, initToJsonOptions_1811939362());
      var oHEX60gensym79_2969571645 = nimCopy(null, self_2969571633.workspace, NTI2197815306);
      if (!isSome_2818579239(oHEX60gensym79_2969571645)) Temporary2 = false; else {        var ws_2969571668 = get_2818579259(oHEX60gensym79_2969571645);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2214592553(ws_2969571668, self_2969571633.filename, pretty_1627394477(serialized_2969571642, 2));
    }
    else {
    if (self_2969571633.appFile) {
    saveApplicationFile_2365587480(fs_2365587509, self_2969571633.filename, pretty_1627394477(serialized_2969571642, 2));
    }
    else {
    saveFile_2365587469(fs_2365587509, self_2969571633.filename, pretty_1627394477(serialized_2969571642, 2));
    }
    }
    saveHtml_2969571627(self_2969571633);

  
}

function save_2818579227(self_2818579228, filename_2818579229, app_2818579230) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2818579229).length)) {
    Temporary1 = filename_2818579229;
    }
    else {
    Temporary1 = self_2818579228.filename;
    }
    
    self_2818579228.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2818579228.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818579228.appFile = app_2818579230;
      var oHEX60gensym103_2818579234 = nimCopy(null, self_2818579228.workspace, NTI2197815306);
      if (!isSome_2818579239(oHEX60gensym103_2818579234)) Temporary2 = false; else {        var ws_2818579285 = get_2818579259(oHEX60gensym103_2818579234);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2214592553(ws_2818579285, self_2818579228.filename, contentString_2818574086(self_2818579228));
    }
    else {
    if (self_2818579228.appFile) {
    saveApplicationFile_2365587480(fs_2365587509, self_2818579228.filename, contentString_2818574086(self_2818579228));
    }
    else {
    saveFile_2365587469(fs_2365587509, self_2818579228.filename, contentString_2818574086(self_2818579228));
    }
    }

  
}

function save_2197815312(self_2197815313, filename_2197815314, app_2197815315) {
  
}

function save_2197815316(self_2197815313, filename_2197815314, app_2197815315) {
    chckNilDisp(self_2197815313);
    if (isObj(self_2197815313.m_type, NTI2969568591)) {
    save_2969571632(self_2197815313, filename_2197815314, app_2197815315);
    }
    else {
    if (isObj(self_2197815313.m_type, NTI2818572427)) {
    save_2818579227(self_2197815313, filename_2197815314, app_2197815315);
    }
    else {
    if (isObj(self_2197815313.m_type, NTI2197815300)) {
    save_2197815312(self_2197815313, filename_2197815314, app_2197815315);
    }
    }}

  
}

function parseEnum_3003123912(s_3003123914, default_3003123915) {
    var Temporary1;

  var result_3003123916 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3003123914))) {
    case "Empty":
      Temporary1 = 0;
      break;
    case "Identifier":
      Temporary1 = 1;
      break;
    case "Numberliteral":
      Temporary1 = 2;
      break;
    case "Stringliteral":
      Temporary1 = 3;
      break;
    case "Constdecl":
      Temporary1 = 4;
      break;
    case "Letdecl":
      Temporary1 = 5;
      break;
    case "Vardecl":
      Temporary1 = 6;
      break;
    case "Nodelist":
      Temporary1 = 7;
      break;
    case "Call":
      Temporary1 = 8;
      break;
    case "If":
      Temporary1 = 9;
      break;
    case "While":
      Temporary1 = 10;
      break;
    case "Functiondefinition":
      Temporary1 = 11;
      break;
    case "Params":
      Temporary1 = 12;
      break;
    case "Assignment":
      Temporary1 = 13;
      break;
    default: 
      Temporary1 = default_3003123915;
      break;
    }
    result_3003123916 = Temporary1;

  return result_3003123916;

}

function fromJsonHook_3003123909(t_3003123910, t_3003123910_Idx, jsonNode_3003123911) {
    var Temporary1;

    var Temporary1 = jsonNode_3003123911;
    if (ConstSet319[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    t_3003123910[t_3003123910_Idx] = parseEnum_3003123912(Temporary1.str, 0);

  
}

function fromJson_3003123980(a_3003123982, a_3003123982_Idx, b_3003123983, opt_3003123984) {
    if (!(!(HEX3DHEX3D_1627392026(b_3003123983, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,78,111,100,101,75,105,110,100], Field1: b_3003123983}));
    }
    
    fromJsonHook_3003123909(a_3003123982, a_3003123982_Idx, b_3003123983);

  
}

function jsonTo_3003123974(b_3003123976, opt_3003123978) {
  var result_3003123979 = [0];

    fromJson_3003123980(result_3003123979, 0, b_3003123976, opt_3003123978);

  return result_3003123979[0];

}

function fromJsonHook_2046820647(id_2046820648, json_2046820649) {
    var Temporary1;

    if ((json_2046820649.kind == 4)) {
    var Temporary1 = json_2046820649;
    if (ConstSet320[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    id_2046820648 = nimCopy(id_2046820648, parseId_2046820640(Temporary1.str), NTI2046820355);
    }
    else {
      id_2046820648 = nimCopy(id_2046820648, null_2046820646, NTI2046820355);
    }
    

  
}

function fromJson_3003123997(a_3003123999, b_3003124000, opt_3003124001) {
    if (!(!(HEX3DHEX3D_1627392026(b_3003124000, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [73,100], Field1: b_3003124000}));
    }
    
    fromJsonHook_2046820647(a_3003123999, b_3003124000);

  
}

function jsonTo_3003123991(b_3003123993, opt_3003123995) {
  var result_3003123996 = [({padding: 0, time: 0, fuzz: 0, count: 0})];

    fromJson_3003123997(result_3003123996[0], b_3003123993, opt_3003123995);

  return result_3003123996[0];

}

function jsonToAstNode_3003123970(json_3003123971, opt_3003123972) {
        var Temporary3;

  var result_3003123973 = null;

    result_3003123973 = {parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []};
    result_3003123973.kind = jsonTo_3003123974(HEX5BHEX5D_1627393037(json_3003123971, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    result_3003123973.id = nimCopy(result_3003123973.id, jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3003123971, [105,100]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    if (hasKey_1627393154(json_3003123971, [114,101,102,102])) {
    result_3003123973.reff = nimCopy(result_3003123973.reff, jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3003123971, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    }
    
    if (hasKey_1627393154(json_3003123971, [116,101,120,116])) {
    result_3003123973.text = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_3003123971, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_3003123971, [99,104,105,108,100,114,101,110])) {
    Label1: {
      var child_3003124018 = null;
      var colontmp__536872388 = null;
      colontmp__536872388 = HEX5BHEX5D_1627393037(json_3003123971, [99,104,105,108,100,114,101,110]);
      if (!((colontmp__536872388.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__536872388.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872390 = null;
        var colontmp__536872391 = [];
        var Temporary3 = colontmp__536872388;
        if (ConstSet321[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872391 = Temporary3.elems;
        var i_536872392 = 0;
        var L_536872393 = (colontmp__536872391).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872392 < L_536872393)) break Label5;
              i_536872390 = colontmp__536872391[chckIndx(i_536872392, 0, (colontmp__536872391).length - 1)];
              child_3003124018 = i_536872390;
              add_3003121702(result_3003123973, jsonToAstNode_3003123970(child_3003124018, {allowExtraKeys: false, allowMissingKeys: false}));
              i_536872392 = addInt(i_536872392, 1);
              if (!(((colontmp__536872391).length == L_536872393))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_3003123973;

}

function clear_3019950259(t_3019950262) {
    t_3019950262.clear();

  
}

function clear_3019950419(t_3019950422) {
    t_3019950422.clear();

  
}

function clear_3019950501(t_3019950504) {
    t_3019950504.clear();

  
}

function clear_3019950583(t_3019950586) {
    t_3019950586.clear();

  
}

function clear_3019950665(t_3019950668) {
    t_3019950668.clear();

  
}

function clear_3019950747(t_3019950750) {
    t_3019950750.clear();

  
}

function clear_3019950829(t_3019950832) {
    t_3019950832.clear();

  
}

function clear_3019950911(t_3019950914) {
    t_3019950914.clear();

  
}

function clear_3019950993(t_3019950996) {
    t_3019950996.clear();

  
}

function clear_3019951075(t_3019951078) {
    t_3019951078.clear();

  
}

function clear_3019951157(t_3019951160) {
    t_3019951160.clear();

  
}

function clear_3019951239(t_3019951242) {
    t_3019951242.clear();

  
}

function clear_3019951321(t_3019951324) {
    t_3019951324.clear();

  
}

function clear_3019951403(t_3019951406) {
    t_3019951406.clear();

  
}

function clear_3019951485(t_3019951488) {
    t_3019951488.clear();

  
}

function deleteAllNodesAndSymbols_3019950179(ctx_3019950180) {
    ctx_3019950180.depGraph.revision = addInt(ctx_3019950180.depGraph.revision, 1);
    clear_3019950259(ctx_3019950180.depGraph.changed);
    clear_3019950259(ctx_3019950180.depGraph.verified);
    clear_3019950419(ctx_3019950180.depGraph.fingerprints);
    clear_3019950501(ctx_3019950180.depGraph.dependencies);
    clear_3019950583(ctx_3019950180.itemsAstNode);
    clear_3019950665(ctx_3019950180.itemsSymbol);
    clear_3019950747(ctx_3019950180.itemsNodeLayoutInput);
    clear_3019950829(ctx_3019950180.itemsFunctionExecutionContext);
    clear_3019950911(ctx_3019950180.queryCacheType);
    clear_3019950993(ctx_3019950180.queryCacheValue);
    clear_3019951075(ctx_3019950180.queryCacheSymbolType);
    clear_3019951157(ctx_3019950180.queryCacheSymbolValue);
    clear_3019951239(ctx_3019950180.queryCacheSymbol);
    clear_3019951321(ctx_3019950180.queryCacheSymbols);
    clear_3019951403(ctx_3019950180.queryCacheFunctionExecution);
    clear_3019951485(ctx_3019950180.queryCacheNodeLayout);

  
}

function clear_2969571791(t_2969571794) {
    Label1: {
      var i_2969571862 = 0;
      var colontmp__536872396 = 0;
      colontmp__536872396 = (t_2969571794.data).length;
      var i_536872397 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872397 < colontmp__536872396)) break Label3;
            i_2969571862 = i_536872397;
            t_2969571794.data[chckIndx(i_2969571862, 0, (t_2969571794.data).length - 1)].Field0 = 0;
            t_2969571794.data[chckIndx(i_2969571862, 0, (t_2969571794.data).length - 1)].Field1 = nimCopy(t_2969571794.data[chckIndx(i_2969571862, 0, (t_2969571794.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_2969571794.data[chckIndx(i_2969571862, 0, (t_2969571794.data).length - 1)].Field2 = null;
            i_536872397 = addInt(i_536872397, 1);
          }
      };
    };
    t_2969571794.counter = 0;

  
}
async function loadAsync_2969571673(self_2969571674) {
      var Temporary2;

  var result_2969571676 = null;

  BeforeRet: {
    var fmtRes_2969571686 = [mnewString(0)];
    fmtRes_2969571686[0].push.apply(fmtRes_2969571686[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969571686, 0, self_2969571674.filename, []);
    fmtRes_2969571686[0].push.apply(fmtRes_2969571686[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571686[0], NTI33554449)]);
++excHandler;
    try {
    var jsonText_2969571687 = [];
      var oHEX60gensym86_2969571690 = nimCopy(null, self_2969571674.workspace, NTI2197815306);
      if (!isSome_2818579239(oHEX60gensym86_2969571690)) Temporary2 = false; else {        var ws_2969571713 = get_2818579259(oHEX60gensym86_2969571690);
        Temporary2 = true;      }    if (Temporary2) {
    jsonText_2969571687 = nimCopy(null, (await loadFile_2214592545(ws_2969571713, self_2969571674.filename)), NTI33554449);
    }
    else {
    if (self_2969571674.appFile) {
    jsonText_2969571687 = nimCopy(null, loadApplicationFile_2365587474(fs_2365587509, self_2969571674.filename), NTI33554449);
    }
    else {
      jsonText_2969571687 = nimCopy(null, loadFile_2365587463(fs_2365587509, self_2969571674.filename), NTI33554449);
    }
    }
    var json_2969571718 = parseJson_1627395313(jsonText_2969571687);
    var newAst_2969571719 = jsonToAstNode_3003123970(json_2969571718, {allowExtraKeys: false, allowMissingKeys: false});
    var fmtRes_2969571724 = [mnewString(0)];
    fmtRes_2969571724[0].push.apply(fmtRes_2969571724[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,32,110,101,119,32,97,115,116,32]);;
    formatValue_3087008586(fmtRes_2969571724, 0, newAst_2969571719, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571724[0], NTI33554449)]);
    deleteAllNodesAndSymbols_3019950179(ctx_2969567287);
    Label3: {
      var symbol_2969571734 = null;
      var L_536872381 = len_3019948709(ctx_2969567287.globalScope);
      Label4: {
        var h_536872383 = 0;
        var colontmp__536872384 = 0;
        colontmp__536872384 = (ctx_2969567287.globalScope.data).length - 1;
        var res_536872385 = 0;
        Label5: {
            Label6: while (true) {
            if (!(res_536872385 <= colontmp__536872384)) break Label6;
              h_536872383 = res_536872385;
              if (isFilled_1308622880(ctx_2969567287.globalScope.data[chckIndx(h_536872383, 0, (ctx_2969567287.globalScope.data).length - 1)].Field0)) {
              symbol_2969571734 = ctx_2969567287.globalScope.data[chckIndx(h_536872383, 0, (ctx_2969567287.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_3019907315(ctx_2969567287, symbol_2969571734);
              if (!((len_3019948709(ctx_2969567287.globalScope) == L_536872381))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872385 = addInt(res_536872385, 1);
            }
        };
      };
    };
    clear_2969571791(self_2969571674.nodes);
    self_2969571674.rootNode = newAst_2969571719;
    handleNodeInserted_2969571669(self_2969571674, self_2969571674.rootNode);
    if (self_2969571674.undoOps.length < 0) { for (var i = self_2969571674.undoOps.length ; i < 0 ; ++i) self_2969571674.undoOps.push(null); }
               else { self_2969571674.undoOps.length = 0; };
    if (self_2969571674.redoOps.length < 0) { for (var i = self_2969571674.redoOps.length ; i < 0 ; ++i) self_2969571674.redoOps.push(null); }
               else { self_2969571674.redoOps.length = 0; };
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2969572346 = [mnewString(0)];
    fmtRes_2969572346[0].push.apply(fmtRes_2969572346[0], [91,97,115,116,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969572346, 0, self_2969571674.filename, []);
    fmtRes_2969572346[0].push.apply(fmtRes_2969572346[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969572346[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    saveHtml_2969571627(self_2969571674);
    result_2969571676 = undefined;
    break BeforeRet;
  };

  return result_2969571676;

}

function load_2969572347(self_2969572348, filename_2969572349) {
    var Temporary1;

    if ((0 < (filename_2969572349).length)) {
    Temporary1 = filename_2969572349;
    }
    else {
    Temporary1 = self_2969572348.filename;
    }
    
    var filename_2969572350 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2969572350).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2969572348.filename = nimCopy(null, filename_2969572350, NTI33554449);
    var _ = loadAsync_2969571673(self_2969572348);

  
}
async function loadAsync_2818579296(self_2818579297, ws_2818579298) {
  var result_2818579300 = null;

  BeforeRet: {
    contentHEX3D_2818573946(self_2818579297, (await loadFile_2214592545(ws_2818579298, self_2818579297.filename)));
    result_2818579300 = undefined;
    break BeforeRet;
  };

  return result_2818579300;

}

function load_2818579310(self_2818579311, filename_2818579312) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2818579312).length)) {
    Temporary1 = filename_2818579312;
    }
    else {
    Temporary1 = self_2818579311.filename;
    }
    
    var filename_2818579313 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2818579313).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818579311.filename = nimCopy(null, filename_2818579313, NTI33554449);
      var oHEX60gensym112_2818579317 = nimCopy(null, self_2818579311.workspace, NTI2197815306);
      if (!isSome_2818579239(oHEX60gensym112_2818579317)) Temporary2 = false; else {        var ws_2818579340 = get_2818579259(oHEX60gensym112_2818579317);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = loadAsync_2818579296(self_2818579311, ws_2818579340);
    }
    else {
    if (self_2818579311.appFile) {
    contentHEX3D_2818573946(self_2818579311, loadApplicationFile_2365587474(fs_2365587509, self_2818579311.filename));
    }
    else {
    contentHEX3D_2818573946(self_2818579311, loadFile_2365587463(fs_2365587509, self_2818579311.filename));
    }
    }

  
}

function load_2197815317(self_2197815318, filename_2197815319) {
  
}

function load_2197815320(self_2197815318, filename_2197815319) {
    chckNilDisp(self_2197815318);
    if (isObj(self_2197815318.m_type, NTI2969568591)) {
    load_2969572347(self_2197815318, filename_2197815319);
    }
    else {
    if (isObj(self_2197815318.m_type, NTI2818572427)) {
    load_2818579310(self_2197815318, filename_2197815319);
    }
    else {
    if (isObj(self_2197815318.m_type, NTI2197815300)) {
    load_2197815317(self_2197815318, filename_2197815319);
    }
    }}

  
}

function hasKey_2919238868(t_2919238871, key_2919238872) {
  var result_2919238873 = false;

    var hc_2919238874 = [0];
    result_2919238873 = (0 <= rawGet_2919236185(t_2919238871, key_2919238872, hc_2919238874, 0));

  return result_2919238873;

}

function contains_2919238862(t_2919238865, key_2919238866) {
  var result_2919238867 = false;

  BeforeRet: {
    result_2919238867 = hasKey_2919238868(t_2919238865, key_2919238866);
    break BeforeRet;
  };

  return result_2919238867;

}

function del_2919238921(t_2919238924, key_2919238925) {
    var hc_2919238926 = [0];
    var i_2919238933 = rawGet_2919236185(t_2919238924, key_2919238925, hc_2919238926, 0);
    var mskHEX60gensym36_2919238937 = (t_2919238924.data).length - 1;
    if ((0 <= i_2919238933)) {
    t_2919238924.counter = subInt(t_2919238924.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2919238944 = i_2919238933;
            var rHEX60gensym36_2919238945 = jHEX60gensym36_2919238944;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field1 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2919238933 = (addInt(i_2919238933, 1) & mskHEX60gensym36_2919238937);
                  if (isEmpty_1308622877(t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2919238945 = (t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 & mskHEX60gensym36_2919238937);
                  if (!(((((rHEX60gensym36_2919238945 <= i_2919238933) && (jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945)) || ((jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945) && (i_2919238933 < jHEX60gensym36_2919238944))) || ((i_2919238933 < jHEX60gensym36_2919238944) && (rHEX60gensym36_2919238945 <= i_2919238933))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)] = nimCopy(t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)], t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)], NTI2919235608);
          }
      };
    };
    }
    

  
}

function len_2919239477(t_2919239480) {
  var result_2919239481 = 0;

    result_2919239481 = t_2919239480.counter;

  return result_2919239481;

}

function find_2919239714(a_2919239717, item_2919239718) {
  var result_2919239719 = 0;

  BeforeRet: {
    result_2919239719 = 0;
    Label1: {
      var i_2919239723 = 0;
      var i_536872416 = 0;
      var L_536872417 = (a_2919239717).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872416 < L_536872417)) break Label3;
            i_2919239723 = a_2919239717[chckIndx(i_536872416, 0, (a_2919239717).length - 1)];
            if ((i_2919239723 == item_2919239718)) {
            break BeforeRet;
            }
            
            result_2919239719 = addInt(result_2919239719, 1);
            i_536872416 = addInt(i_536872416, 1);
            if (!(((a_2919239717).length == L_536872417))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2919239719 = -1;
  };

  return result_2919239719;

}

function del_2919239730(x_2919239732, x_2919239732_Idx, i_2919239733) {
    var xl_2919239737 = subInt((x_2919239732[x_2919239732_Idx]).length, 1);
    x_2919239732[x_2919239732_Idx][chckIndx(i_2919239733, 0, (x_2919239732[x_2919239732_Idx]).length - 1)] = x_2919239732[x_2919239732_Idx][chckIndx(xl_2919239737, 0, (x_2919239732[x_2919239732_Idx]).length - 1)];
    if (x_2919239732[x_2919239732_Idx].length < chckRange(xl_2919239737, 0, 2147483647)) { for (var i = x_2919239732[x_2919239732_Idx].length ; i < chckRange(xl_2919239737, 0, 2147483647) ; ++i) x_2919239732[x_2919239732_Idx].push(0); }
               else { x_2919239732[x_2919239732_Idx].length = chckRange(xl_2919239737, 0, 2147483647); };

  
}

function removeOnRequestSaveHandler_2919238817(self_2919238818, handle_2919238819) {
    if (contains_2919238862(self_2919238818.onRequestSave, handle_2919238819)) {
    del_2919238921(self_2919238818.onRequestSave, handle_2919238819);
    Label1: {
      var __2919239712 = [];
      var list_2919239713 = null;
      var list_2919239713_Idx = 0;
      var L_536872404 = len_2919239477(self_2919238818.onRequestSaveIndex);
      Label2: {
        var h_536872406 = 0;
        var colontmp__536872407 = 0;
        colontmp__536872407 = (self_2919238818.onRequestSaveIndex.data).length - 1;
        var res_536872408 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872408 <= colontmp__536872407)) break Label4;
              h_536872406 = res_536872408;
              if (isFilled_1308622880(self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872406, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field0)) {
              var colontmp__536872411 = nimCopy(null, {Field0: nimCopy(null, self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872406, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field1, NTI33554449), Field1: [self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872406, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)], "Field2"]}, NTI2919237548);
              __2919239712 = colontmp__536872411["Field0"];
              list_2919239713 = colontmp__536872411["Field1"][0]; list_2919239713_Idx = colontmp__536872411["Field1"][1];
              var index_2919239729 = find_2919239714(list_2919239713[list_2919239713_Idx], handle_2919238819);
              if ((0 <= index_2919239729)) {
              del_2919239730(list_2919239713, list_2919239713_Idx, chckRange(index_2919239729, 0, 2147483647));
              }
              
              if (!((len_2919239477(self_2919238818.onRequestSaveIndex) == L_536872404))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(723, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872408 = addInt(res_536872408, 1);
            }
        };
      };
    };
    }
    

  
}

function stop_2919235636(self_2919235637) {
  
}

function stop_2919235638(self_2919235637) {
    stop_2919235636(self_2919235637);

  
}

function destroy_2818579146(self_2818579147) {
    var Temporary1;
    var Temporary2;

    if (!((self_2818579147.tsParser == null))) {
    deinit_2885681592(self_2818579147.tsParser);
    self_2818579147.tsParser = null;
    }
    
    if (isSome_2818579155(self_2818579147.languageServer)) {
    removeOnRequestSaveHandler_2919238817((Temporary1 = get_2818579175(self_2818579147.languageServer), Temporary1)[0][Temporary1[1]], self_2818579147.onRequestSaveHandle);
    stop_2919235638((Temporary2 = get_2818579175(self_2818579147.languageServer), Temporary2)[0][Temporary2[1]]);
    self_2818579147.languageServer = nimCopy(self_2818579147.languageServer, none_2936012824(), NTI2818572486);
    }
    

  
}

function shutdown_2818579222(self_2818579223) {
    destroy_2818579146(self_2818579223.document);

  
}

function shutdown_2415919221(self_2415919222) {
  
}

function shutdown_2415919223(self_2415919222) {
    chckNilDisp(self_2415919222);
    if (isObj(self_2415919222.m_type, NTI2818572510)) {
    shutdown_2818579222(self_2415919222);
    }
    else {
    if (isObj(self_2415919222.m_type, NTI2415919108)) {
    shutdown_2415919221(self_2415919222);
    }
    }

  
}

function canEdit_2969575638(self_2969575639, document_2969575640) {
  var result_2969575641 = false;

  BeforeRet: {
    if (isObj(document_2969575640.m_type, NTI2969568591)) {
    result_2969575641 = true;
    break BeforeRet;
    }
    else {
      result_2969575641 = false;
      break BeforeRet;
    }
    
  };

  return result_2969575641;

}

function canEdit_2818580263(self_2818580264, document_2818580265) {
  var result_2818580266 = false;

  BeforeRet: {
    if (isObj(document_2818580265.m_type, NTI2818572427)) {
    result_2818580266 = true;
    break BeforeRet;
    }
    else {
      result_2818580266 = false;
      break BeforeRet;
    }
    
  };

  return result_2818580266;

}

function canEdit_2415919224(self_2415919225, document_2415919226) {
  var result_2415919227 = false;

  BeforeRet: {
    result_2415919227 = false;
    break BeforeRet;
  };

  return result_2415919227;

}

function canEdit_2415919228(self_2415919225, document_2415919226) {
  var result_2415919229 = false;

  BeforeRet: {
    chckNilDisp(self_2415919225);
    if (isObj(self_2415919225.m_type, NTI2969568620)) {
    result_2415919229 = canEdit_2969575638(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919225.m_type, NTI2818572510)) {
    result_2415919229 = canEdit_2818580263(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919225.m_type, NTI2415919108)) {
    result_2415919229 = canEdit_2415919224(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    }}
  };

  return result_2415919229;

}

function addQuoted_2969575154(s_2969575156, s_2969575156_Idx, x_2969575157) {
    s_2969575156[s_2969575156_Idx].push.apply(s_2969575156[s_2969575156_Idx], HEX24_3003123671(x_2969575157));;

  
}

function HEX24_2969575143(self_2969575145) {
  var result_2969575146 = [[]];

    if (isSome_3003123546(self_2969575145)) {
    result_2969575146[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2969575154(result_2969575146, 0, self_2969575145.val);
    result_2969575146[0].push.apply(result_2969575146[0], [41]);;
    }
    else {
      result_2969575146[0] = nimCopy(null, [110,111,110,101,40,65,115,116,78,111,100,101,41], NTI33554449);
    }
    

  return result_2969575146[0];

}

function formatValue_2969575076(result_2969575078, result_2969575078_Idx, value_2969575079, specifier_2969575080) {
    formatValue_721420459(result_2969575078, result_2969575078_Idx, HEX24_2969575143(value_2969575079), specifier_2969575080);

  
}

function handleNodeInserted_2969575058(self_2969575059, doc_2969575060, node_2969575061) {
      var Temporary1;
      var Temporary2;

    if (!((doc_2969575060.rootNode == self_2969575059.lastRootNode))) {
    nodeHEX3D_2969570879(self_2969575059, HEX5BHEX5D_3003121748(doc_2969575060.rootNode, 0));
    self_2969575059.lastRootNode = doc_2969575060.rootNode;
    }
    
    var fmtRes_2969575070 = [mnewString(0)];
    fmtRes_2969575070[0].push.apply(fmtRes_2969575070[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008586(fmtRes_2969575070, 0, node_2969575061, []);
    fmtRes_2969575070[0].push.apply(fmtRes_2969575070[0], [44,32]);;
    formatValue_2969575076(fmtRes_2969575070, 0, self_2969575059.deletedNode, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575070[0], NTI33554449)]);
      var oHEX60gensym113_2969575166 = nimCopy(null, self_2969575059.deletedNode, NTI3003121783);
      if (!isSome_3003123546(oHEX60gensym113_2969575166)) Temporary2 = false; else {        var deletedNode_2969575189 = get_3003123566(oHEX60gensym113_2969575166);
        Temporary2 = true;      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (deletedNode_2969575189 == node_2969575061);      }    if (Temporary1) {
    self_2969575059.deletedNode = nimCopy(self_2969575059.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969575061)), NTI3003121783);
    var fmtRes_2969575201 = mnewString(0);
    fmtRes_2969575201.push.apply(fmtRes_2969575201, makeNimstrLit("[asteditor] Clearing editor.deletedNode because it was just inserted"));;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575201, NTI33554449)]);
    }
    
    markDirty_2415919143(self_2969575059);

  
}

function createWithDocument_2969585110(self_2969585111, document_2969585112) {
    
function HEX3Aanonymous_2969585115(doc_2969585116, node_2969585117) {
        handleNodeInserted_2969575058(editor_2969585114, doc_2969585116, node_2969585117);

      
    }

  var result_2969585113 = null;

  BeforeRet: {
    var editor_2969585114 = {eventHandler: null, document: document_2969585112, textDocument: null, textEditor: null, m_type: NTI2969568620, editor: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), lastRootNode: null, currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2969585114 = createWithPrototype(editor_ast_prototype, editor_2969585114);
    init_2415919138(editor_2969585114);
    editor_2969585114.document.onNodeInserted.push(HEX3Aanonymous_2969585115);;
    editor_2969585114.selectedCompletion = 0;
    editor_2969585114.completions = nimCopy(null, [], NTI3170893842);
    Label1: {
      var tmpHEX60gensym1067_2969585131 = null;
      Label2: {
        var res_2969585137 = null;
        res_2969585137 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2969585137.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      };
    };
    add_3003121702(editor_2969585114.document.rootNode, res_2969585137);
    Label4: {
      var c_2969585150 = null;
      var i_536872422 = 0;
      var L_536872423 = (editor_2969585114.document.rootNode.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872422 < L_536872423)) break Label6;
            c_2969585150 = editor_2969585114.document.rootNode.children[chckIndx(i_536872422, 0, (editor_2969585114.document.rootNode.children).length - 1)];
            handleNodeInserted_2969571669(editor_2969585114.document, c_2969585150);
            i_536872422 = addInt(i_536872422, 1);
            if (!(((editor_2969585114.document.rootNode.children).length == L_536872423))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    insertNode_3019949207(ctx_2969567287, editor_2969585114.document.rootNode);
    nodeHEX3D_2969570879(editor_2969585114, HEX5BHEX5D_3003121748(editor_2969585114.document.rootNode, 0));
    result_2969585113 = editor_2969585114;
    break BeforeRet;
  };

  return result_2969585113;

}

function createWithDocument_2818594083(self_2818594084, document_2818594085) {
    
function HEX3Aanonymous_2818594106(__2818594107) {
        handleTextDocumentTextChanged_2818593989(editor_2818594087);

      
    }

  var result_2818594086 = null;

  BeforeRet: {
    var editor_2818594087 = createTextEditorInstance_2818593991();
    editor_2818594087.document = document_2818594085;
    init_2415919138(editor_2818594087);
    if (((editor_2818594087.document.lines).length == 0)) {
    editor_2818594087.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var _ = subscribe_2818594055(editor_2818594087.document.textChanged, HEX3Aanonymous_2818594106);
    result_2818594086 = editor_2818594087;
    break BeforeRet;
  };

  return result_2818594086;

}

function createWithDocument_2415919230(self_2415919231, document_2415919232) {
  var result_2415919233 = null;

  BeforeRet: {
    result_2415919233 = null;
    break BeforeRet;
  };

  return result_2415919233;

}

function createWithDocument_2415919243(self_2415919231, document_2415919232) {
  var result_2415919244 = null;

  BeforeRet: {
    chckNilDisp(self_2415919231);
    if (isObj(self_2415919231.m_type, NTI2969568620)) {
    result_2415919244 = createWithDocument_2969585110(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919231.m_type, NTI2818572510)) {
    result_2415919244 = createWithDocument_2818594083(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919231.m_type, NTI2415919108)) {
    result_2415919244 = createWithDocument_2415919230(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    }}
  };

  return result_2415919244;

}

function getEventHandlers_2969575649(self_2969575650) {
  var result_2969575651 = [[]];

    result_2969575651[0].push(self_2969575650.eventHandler);;
    if (!((self_2969575650.modeEventHandler == null))) {
    result_2969575651[0].push(self_2969575650.modeEventHandler);;
    }
    
    if (!((self_2969575650.textEditor == null))) {
    add_2969575667(result_2969575651, 0, getEventHandlers_2415919261(self_2969575650.textEditor));
    result_2969575651[0].push(self_2969575650.textEditEventHandler);;
    }
    

  return result_2969575651[0];

}

function getEventHandlers_2818580274(self_2818580275) {
  var result_2818580276 = [];

    result_2818580276 = nimCopy(null, [self_2818580275.eventHandler], NTI2466250766);
    if (!((self_2818580275.modeEventHandler == null))) {
    result_2818580276.push(self_2818580275.modeEventHandler);;
    }
    
    if (self_2818580275.showCompletions) {
    result_2818580276.push(self_2818580275.completionEventHandler);;
    }
    

  return result_2818580276;

}

function getEventHandlers_2466250757(self_2466250758) {
  var result_2466250759 = [];

  BeforeRet: {
    result_2466250759 = nimCopy(null, [self_2466250758.eventHandler], NTI2466250766);
    break BeforeRet;
  };

  return result_2466250759;

}

function getEventHandlers_2415919245(self_2415919246) {
  var result_2415919247 = [];

  BeforeRet: {
    result_2415919247 = nimCopy(null, [], NTI2415919187);
    break BeforeRet;
  };

  return result_2415919247;

}

function getEventHandlers_2415919261(self_2415919246) {
  var result_2415919262 = [];

  BeforeRet: {
    chckNilDisp(self_2415919246);
    if (isObj(self_2415919246.m_type, NTI2969568620)) {
    result_2415919262 = getEventHandlers_2969575649(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2818572510)) {
    result_2415919262 = getEventHandlers_2818580274(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2466250756)) {
    result_2415919262 = getEventHandlers_2466250757(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2415919108)) {
    result_2415919262 = getEventHandlers_2415919245(self_2415919246);
    break BeforeRet;
    }
    }}}
  };

  return result_2415919262;

}

function reset_2969575764(obj_2969575766, obj_2969575766_Idx) {
    obj_2969575766[obj_2969575766_Idx] = null;

  
}

function clear_2969575757(deq_2969575759) {
    Label1: {
      var el_2969575763 = null;
      var el_2969575763_Idx = 0;
      var i_536872433 = deq_2969575759.head;
      Label2: {
        var c_536872435 = 0;
        var i_536872436 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872436 < deq_2969575759.count)) break Label4;
              c_536872435 = i_536872436;
              el_2969575763 = deq_2969575759.data; el_2969575763_Idx = chckIndx(i_536872433, 0, (deq_2969575759.data).length - 1);
              reset_2969575764(el_2969575763, el_2969575763_Idx);
              i_536872433 = (addInt(i_536872433, 1) & deq_2969575759.mask);
              i_536872436 = addInt(i_536872436, 1);
            }
        };
      };
    };
    deq_2969575759.count = 0;
    deq_2969575759.tail = deq_2969575759.head;

  
}

function handleDocumentChanged_2969575694(self_2969575695) {
    var fmtRes_2969575700 = mnewString(0);
    fmtRes_2969575700.push.apply(fmtRes_2969575700, [91,97,115,116,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575700, NTI33554449)]);
    clear_2969575757(self_2969575695.selectionHistory);
    clear_2969575757(self_2969575695.selectionFuture);
    finishEdit_2969575630(self_2969575695, false);
    Label1: {
      var symbol_2969575834 = null;
      var L_536872426 = len_3019948709(ctx_2969567287.globalScope);
      Label2: {
        var h_536872428 = 0;
        var colontmp__536872429 = 0;
        colontmp__536872429 = (ctx_2969567287.globalScope.data).length - 1;
        var res_536872430 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872430 <= colontmp__536872429)) break Label4;
              h_536872428 = res_536872430;
              if (isFilled_1308622880(ctx_2969567287.globalScope.data[chckIndx(h_536872428, 0, (ctx_2969567287.globalScope.data).length - 1)].Field0)) {
              symbol_2969575834 = ctx_2969567287.globalScope.data[chckIndx(h_536872428, 0, (ctx_2969567287.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_3019907315(ctx_2969567287, symbol_2969575834);
              if (!((len_3019948709(ctx_2969567287.globalScope) == L_536872426))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872430 = addInt(res_536872430, 1);
            }
        };
      };
    };
    nodeHEX3D_2969570879(self_2969575695, HEX5BHEX5D_3003121748(self_2969575695.document.rootNode, 0));
    markDirty_2415919143(self_2969575695);

  
}

function handleDocumentChanged_2818583513(self_2818583514) {
    selectionHEX3D_2818572809(self_2818583514, {Field0: clampCursor_2818572706(self_2818583514, selection_2818572803(self_2818583514).Field0), Field1: clampCursor_2818572706(self_2818583514, selection_2818572803(self_2818583514).Field1)});
    updateSearchResults_2818580292(self_2818583514);

  
}

function handleDocumentChanged_2415919263(self_2415919264) {
  
}

function handleDocumentChanged_2415919265(self_2415919264) {
    chckNilDisp(self_2415919264);
    if (isObj(self_2415919264.m_type, NTI2969568620)) {
    handleDocumentChanged_2969575694(self_2415919264);
    }
    else {
    if (isObj(self_2415919264.m_type, NTI2818572510)) {
    handleDocumentChanged_2818583513(self_2415919264);
    }
    else {
    if (isObj(self_2415919264.m_type, NTI2415919108)) {
    handleDocumentChanged_2415919263(self_2415919264);
    }
    }}

  
}

function del_1291847224(t_1291847227, key_1291847228) {
    var hc_1291847229 = [0];
    var i_1291847236 = rawGet_1291845908(t_1291847227, key_1291847228, hc_1291847229, 0);
    var mskHEX60gensym36_1291847240 = (t_1291847227.data).length - 1;
    if ((0 <= i_1291847236)) {
    t_1291847227.counter = subInt(t_1291847227.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1291847247 = i_1291847236;
            var rHEX60gensym36_1291847248 = jHEX60gensym36_1291847247;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0 = 0;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field1 = 0;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1291847236 = (addInt(i_1291847236, 1) & mskHEX60gensym36_1291847240);
                  if (isEmpty_1308622877(t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1291847248 = (t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0 & mskHEX60gensym36_1291847240);
                  if (!(((((rHEX60gensym36_1291847248 <= i_1291847236) && (jHEX60gensym36_1291847247 < rHEX60gensym36_1291847248)) || ((jHEX60gensym36_1291847247 < rHEX60gensym36_1291847248) && (i_1291847236 < jHEX60gensym36_1291847247))) || ((i_1291847236 < jHEX60gensym36_1291847247) && (rHEX60gensym36_1291847248 <= i_1291847236))))) {
                  break Label4;
                  }
                  
                }
            };
            t_1291847227.data[chckIndx(jHEX60gensym36_1291847247, 0, (t_1291847227.data).length - 1)] = nimCopy(t_1291847227.data[chckIndx(jHEX60gensym36_1291847247, 0, (t_1291847227.data).length - 1)], t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)], NTI1291845716);
          }
      };
    };
    }
    

  
}

function invoke_1291847134(event_1291847136, arg_1291847137) {
    Label1: {
      var h_1291847160 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872442 = 0;
      var L_536872443 = (event_1291847136.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872442 < L_536872443)) break Label3;
            h_1291847160 = event_1291847136.handlers[chckIndx(i_536872442, 0, (event_1291847136.handlers).length - 1)];
            h_1291847160.Field1(arg_1291847137);
            i_536872442 = addInt(i_536872442, 1);
            if (!(((event_1291847136.handlers).length == L_536872443))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function unregisterEditor_1291847181(self_1291847182, editor_1291847183) {
    del_1291847224(self_1291847182.editors, editor_1291847183.id);
    invoke_1291847134(self_1291847182.onEditorDeregistered, editor_1291847183);

  
}

function unregister_2969585234(self_2969585235) {
    finishEdit_2969575630(self_2969585235, false);
    unregisterEditor_1291847181(self_2969585235.editor, self_2969585235);

  
}

function unregister_2818594433(self_2818594434) {
    unregisterEditor_1291847181(self_2818594434.editor, self_2818594434);

  
}

function unregister_2415919266(self_2415919267) {
  
}

function unregister_2415919268(self_2415919267) {
    chckNilDisp(self_2415919267);
    if (isObj(self_2415919267.m_type, NTI2969568620)) {
    unregister_2969585234(self_2415919267);
    }
    else {
    if (isObj(self_2415919267.m_type, NTI2818572510)) {
    unregister_2818594433(self_2415919267);
    }
    else {
    if (isObj(self_2415919267.m_type, NTI2415919108)) {
    unregister_2415919266(self_2415919267);
    }
    }}

  
}

function getItemAtPixelPosition_2969584865(self_2969584866, posWindow_2969584867) {
  var result_2969584869 = ({val: 0, has: false});

  BeforeRet: {
    result_2969584869 = nimCopy(result_2969584869, none_3003121842(), NTI1191183280);
    Label1: {
      var index_2969584880 = 0;
      var rect_2969584881 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872447 = 0;
      var L_536872448 = (self_2969584866.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872447 < L_536872448)) break Label3;
            index_2969584880 = self_2969584866.lastItems[chckIndx(i_536872447, 0, (self_2969584866.lastItems).length - 1)]["Field0"];
            rect_2969584881 = self_2969584866.lastItems[chckIndx(i_536872447, 0, (self_2969584866.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(rect_2969584881, posWindow_2969584867) && (0 <= index_2969584880)) && (index_2969584880 <= (self_2969584866.completions).length - 1))) {
            result_2969584869 = nimCopy(result_2969584869, some_1191184367(index_2969584880), NTI1191183280);
            break BeforeRet;
            }
            
            i_536872447 = addInt(i_536872447, 1);
            if (!(((self_2969584866.lastItems).length == L_536872448))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2969584869;

}

function getOption_2818583896(editor_2818583898, path_2818583899, default_2818583900) {
  var result_2818583906 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583898 == null)) {
      result_2818583906 = default_2818583900;
      break BeforeRet;
      }
      
      var nodeHEX60gensym170_2818583919 = HEX7BHEX7D_1627393316(editor_2818583898.options, nsuSplitString(path_2818583899, [46], -1));
      if ((nodeHEX60gensym170_2818583919 == null)) {
      result_2818583906 = default_2818583900;
      break BeforeRet;
      }
      
    };
    result_2818583906 = getFloat_1627390140(nodeHEX60gensym170_2818583919, default_2818583900);
    break BeforeRet;
  };

  return result_2818583906;

}

function handleScroll_2969584888(self_2969584889, scroll_2969584890, mousePosWindow_2969584891) {
    if (isSome_1191185117(getItemAtPixelPosition_2969584865(self_2969584889, mousePosWindow_2969584891))) {
    self_2969584889.selectedCompletion = clamp_1660945119(subInt(self_2969584889.selectedCompletion, ((scroll_2969584890.y) | 0)), 0, (self_2969584889.completions).length - 1);
    }
    else {
      HEX2BHEX3D_855640304(self_2969584889, "scrollOffset", (scroll_2969584890.y * getOption_2818583896(self_2969584889.editor, [97,115,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0)));
      markDirty_2415919143(self_2969584889);
    }
    

  
}

function handleScroll_2818583892(self_2818583893, scroll_2818583894, mousePosWindow_2818583895) {
    var scrollAmount_2818583923 = (scroll_2818583894.y * getOption_2818583896(self_2818583893.editor, [116,101,120,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 40.0));
    if ((!((self_2818583893.lastCompletionsWidget == null)) && contains_2130706614(self_2818583893.lastCompletionsWidget.lastBounds, mousePosWindow_2818583895))) {
    HEX2BHEX3D_855640304(self_2818583893, "completionsScrollOffset", scrollAmount_2818583923);
    }
    else {
    HEX2BHEX3D_855640304(self_2818583893, "scrollOffset", scrollAmount_2818583923);
    }
    
    markDirty_2415919143(self_2818583893);

  
}

function handleScroll_2415919269(self_2415919270, scroll_2415919271, mousePosWindow_2415919272) {
  
}

function handleScroll_2415919273(self_2415919270, scroll_2415919271, mousePosWindow_2415919272) {
    chckNilDisp(self_2415919270);
    if (isObj(self_2415919270.m_type, NTI2969568620)) {
    handleScroll_2969584888(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    else {
    if (isObj(self_2415919270.m_type, NTI2818572510)) {
    handleScroll_2818583892(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    else {
    if (isObj(self_2415919270.m_type, NTI2415919108)) {
    handleScroll_2415919269(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    }}

  
}

function HEX2D_2147484180(aHEX60gensym73_2147484182, bHEX60gensym73_2147484183) {
  var result_2147484184 = ({x: 0.0, y: 0.0});

    result_2147484184 = nimCopy(result_2147484184, {x: (aHEX60gensym73_2147484182.x - bHEX60gensym73_2147484183.x), y: (aHEX60gensym73_2147484182.y - bHEX60gensym73_2147484183.y)}, NTI2164261152);

  return result_2147484184;

}

function getNodeAtPixelPosition_2969578498(self_2969578499, posContent_2969578500) {
                      var Temporary8;

  var result_2969578502 = ({val: null});

  BeforeRet: {
    result_2969578502 = nimCopy(result_2969578502, none_3003121871(), NTI3003121783);
    Label1: {
      var layout_2969578530 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2969578531 = ({x: 0.0, y: 0.0});
      var i_536872461 = 0;
      var L_536872462 = (self_2969578499.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872461 < L_536872462)) break Label3;
            layout_2969578530 = self_2969578499.lastLayouts[chckIndx(i_536872461, 0, (self_2969578499.lastLayouts).length - 1)]["Field0"];
            offset_2969578531 = self_2969578499.lastLayouts[chckIndx(i_536872461, 0, (self_2969578499.lastLayouts).length - 1)]["Field1"];
            var bounds_2969578541 = HEX2B_2130706587(bounds_3087009966(layout_2969578530), offset_2969578531);
            var smallestRange_2969578542 = ({parent: null, first: 0, last: 0});
            if (contains_2130706614(bounds_2969578541, posContent_2969578500)) {
            Label4: {
              var __2969578543 = 0;
              var child_2969578544 = null;
              var n_536872453 = layout_2969578530.node;
              var idx_536872454 = -1;
              var i_536872455 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536872454 == -1)) {
                    var colontmp__536872458 = nimCopy(null, {Field0: i_536872455, Field1: n_536872453}, NTI3003123002);
                    __2969578543 = colontmp__536872458["Field0"];
                    child_2969578544 = colontmp__536872458["Field1"];
                    if (contains_2969569824(layout_2969578530.nodeToVisualNode, child_2969578544.id)) {
                    var visualNode_2969578690 = HEX5BHEX5D_2969570729(layout_2969578530.nodeToVisualNode, child_2969578544.id);
                    var bounds_2969578700 = HEX2B_2130706587(absoluteBounds_3087009579(visualNode_2969578690), vec2_2164261725(0.0, offset_2969578531.y));
                    if (contains_2130706614(bounds_2969578700, posContent_2969578500)) {
                    if (((((smallestRange_2969578542.parent == null) || (smallestRange_2969578542.parent.depth < visualNode_2969578690.parent.depth)) || ((visualNode_2969578690.parent.depth == smallestRange_2969578542.parent.depth) && (smallestRange_2969578542.parent.indent < visualNode_2969578690.parent.indent))) || ((visualNode_2969578690.parent.depth == smallestRange_2969578542.parent.depth) && (subInt(visualNode_2969578690.last, visualNode_2969578690.first) < subInt(smallestRange_2969578542.last, smallestRange_2969578542.first))))) {
                    smallestRange_2969578542 = nimCopy(smallestRange_2969578542, visualNode_2969578690, NTI3087007774);
                    result_2969578502 = nimCopy(result_2969578502, some_3003121890(child_2969578544), NTI3003121783);
                    }
                    
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536872454, 1) < len_3003121752(n_536872453))) {
                    n_536872453 = HEX5BHEX5D_3003121748(n_536872453, addInt(idx_536872454, 1));
                    idx_536872454 = -1;
                    }
                    else {
                      var oHEX60gensym74_536872459 = next_3003121857(n_536872453);
                      if (!isSome_3003123546(oHEX60gensym74_536872459)) Temporary8 = false; else {                        var ne_536872460 = get_3003123566(oHEX60gensym74_536872459);
                        Temporary8 = true;                      }                    if (Temporary8) {
                    n_536872453 = ne_536872460;
                    idx_536872454 = -1;
                    }
                    else {
                    if ((!((n_536872453.parent == null)) && !((n_536872453.parent == layout_2969578530.node)))) {
                    idx_536872454 = index_3003121772(n_536872453);
                    n_536872453 = n_536872453.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536872455 = addInt(i_536872455, 1);
                    }
                  }
              };
            };
            if (isNone_3003123574(result_2969578502)) {
            result_2969578502 = nimCopy(result_2969578502, some_3003121890(layout_2969578530.node), NTI3003121783);
            }
            
            break BeforeRet;
            }
            
            i_536872461 = addInt(i_536872461, 1);
            if (!(((self_2969578499.lastLayouts).length == L_536872462))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2969578502;

}

function handleMousePress_2969584920(self_2969584921, button_2969584922, mousePosWindow_2969584923) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

    var mousePosContent_2969584968 = HEX2D_2147484180(mousePosWindow_2969584923, xy_2147483680(self_2969584921.lastBounds));
    if ((button_2969584922 == 0)) {
      var oHEX60gensym1063_2969584975 = getItemAtPixelPosition_2969584865(self_2969584921, mousePosWindow_2969584923);
      if (!isSome_1191185117(oHEX60gensym1063_2969584975)) Temporary1 = false; else {        var index_2969584998 = get_1191185211(oHEX60gensym1063_2969584975);
        Temporary1 = true;      }    if (Temporary1) {
    self_2969584921.selectedCompletion = index_2969584998;
    applySelectedCompletion_2969581694(self_2969584921);
    }
    else {
      if (!!(isEditing_2969575204(self_2969584921))) Temporary2 = false; else {        var oHEX60gensym1064_2969585001 = getNodeAtPixelPosition_2969578498(self_2969584921, mousePosContent_2969584968);
        if (!isSome_3003123546(oHEX60gensym1064_2969585001)) Temporary3 = false; else {          var n_2969585024 = get_3003123566(oHEX60gensym1064_2969585001);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    nodeHEX3D_2969570879(self_2969584921, n_2969585024);
    }
    }
    }
    

  
}

function getHoveredCompletion_2818583847(self_2818583848, mousePosWindow_2818583849) {
  var result_2818583850 = 0;

  BeforeRet: {
    Label1: {
      var item_2818583873 = {Field0: 0, Field1: null};
      var i_536872466 = 0;
      var L_536872467 = (self_2818583848.lastCompletionWidgets).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872466 < L_536872467)) break Label3;
            item_2818583873 = self_2818583848.lastCompletionWidgets[chckIndx(i_536872466, 0, (self_2818583848.lastCompletionWidgets).length - 1)];
            if (contains_2130706614(item_2818583873.Field1.lastBounds, mousePosWindow_2818583849)) {
            result_2818583850 = item_2818583873.Field0;
            break BeforeRet;
            }
            
            i_536872466 = addInt(i_536872466, 1);
            if (!(((self_2818583848.lastCompletionWidgets).length == L_536872467))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818583850 = 0;
    break BeforeRet;
  };

  return result_2818583850;

}

function charWidth_3338667186(self_3338667187) {
  var result_3338667188 = 0.0;

    result_3338667188 = self_3338667187.mCharWidth;

  return result_3338667188;

}

function charWidth_2768240796(self_2768240797) {
  var result_2768240798 = 0.0;

  return result_2768240798;

}

function charWidth_2768240799(self_2768240797) {
  var result_2768240800 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240797);
    if (isObj(self_2768240797.m_type, NTI3338665995)) {
    result_2768240800 = charWidth_3338667186(self_2768240797);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240797.m_type, NTI2768240644)) {
    result_2768240800 = charWidth_2768240796(self_2768240797);
    break BeforeRet;
    }
    }
  };

  return result_2768240800;

}

function isThickCursor_2818583610(self_2818583611) {
  var result_2818583612 = false;

  BeforeRet: {
    result_2818583612 = getOption_2818583613(self_2818583611.editor, getContextWithMode_2818583607(self_2818583611, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    break BeforeRet;
  };

  return result_2818583612;

}

function HEX2DHEX3D_2818594209(x_2818594211, x_2818594211_Idx, y_2818594212) {
    x_2818594211[x_2818594211_Idx] = (x_2818594211[x_2818594211_Idx] - y_2818594212);

  
}

function some_2818594223(val_2818594225) {
  var result_2818594230 = ({val: {Field0: 0, Field1: 0}, has: false});

    result_2818594230.has = true;
    result_2818594230.val = nimCopy(result_2818594230.val, val_2818594225, NTI2818586256);

  return result_2818594230;

}

function none_2818594236() {
  var result_2818594243 = ({val: {Field0: 0, Field1: 0}, has: false});

  return result_2818594243;

}

function getCursorAtPixelPos_2818594136(self_2818594137, mousePosWindow_2818594138) {
  var result_2818594144 = ({val: {Field0: 0, Field1: 0}, has: false});

  BeforeRet: {
    var mousePosContent_2818594189 = HEX2D_2147484180(mousePosWindow_2818594138, xy_2147483680(self_2818594137.lastContentBounds));
    Label1: {
      var li_2818594195 = 0;
      var line_2818594196 = null;
      var i_536872474 = 0;
      var L_536872475 = (self_2818594137.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872474 < L_536872475)) break Label3;
            li_2818594195 = i_536872474;
            line_2818594196 = self_2818594137.lastRenderedLines[chckIndx(i_536872474, 0, (self_2818594137.lastRenderedLines).length - 1)];
            var startOffset_2818594197 = 0;
            Label4: {
              var i_2818594203 = 0;
              var part_2818594204 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_536872471 = 0;
              var L_536872472 = (line_2818594196.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872471 < L_536872472)) break Label6;
                    i_2818594203 = i_536872471;
                    part_2818594204 = nimCopy(part_2818594204, line_2818594196.parts[chckIndx(i_536872471, 0, (line_2818594196.parts).length - 1)], NTI2818572422);
                    if ((contains_2130706614(part_2818594204.bounds, mousePosContent_2818594189) || ((((i_2818594203 == (line_2818594196.parts).length - 1) && (part_2818594204.bounds.y <= mousePosContent_2818594189.y)) && (mousePosContent_2818594189.y <= (part_2818594204.bounds.y + part_2818594204.bounds.h))) && (part_2818594204.bounds.x <= mousePosContent_2818594189.x)))) {
                    var offsetFromLeft_2818594208 = [((mousePosContent_2818594189.x - part_2818594204.bounds.x) / charWidth_2768240799(self_2818594137.editor.platform))];
                    if (isThickCursor_2818583610(self_2818594137)) {
                    HEX2DHEX3D_2818594209(offsetFromLeft_2818594208, 0, 0.0);
                    }
                    else {
                    HEX2BHEX3D_855640304(offsetFromLeft_2818594208, 0, 0.5);
                    }
                    
                    var index_2818594222 = clamp_1660945119(((offsetFromLeft_2818594208[0]) | 0), 0, (part_2818594204.text).length);
                    result_2818594144 = nimCopy(result_2818594144, some_2818594223({Field0: line_2818594196.index, Field1: addInt(startOffset_2818594197, index_2818594222)}), NTI2818586210);
                    break BeforeRet;
                    }
                    
                    startOffset_2818594197 = addInt(startOffset_2818594197, (part_2818594204.text).length);
                    i_536872471 = addInt(i_536872471, 1);
                    if (!(((line_2818594196.parts).length == L_536872472))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872474 = addInt(i_536872474, 1);
            if (!(((self_2818594137.lastRenderedLines).length == L_536872475))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818594144 = nimCopy(result_2818594144, none_2818594236(), NTI2818586210);
    break BeforeRet;
  };

  return result_2818594144;

}

function isSome_2818594276(self_2818594278) {
  var result_2818594279 = false;

    result_2818594279 = self_2818594278.has;

  return result_2818594279;

}

function isNone_2818594301(self_2818594303) {
  var result_2818594304 = false;

    result_2818594304 = !(self_2818594303.has);

  return result_2818594304;

}

function get_2818594293(self_2818594295) {
  var result_2818594296 = {Field0: 0, Field1: 0};

    if (isNone_2818594301(self_2818594295)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818594296 = self_2818594295.val;

  return result_2818594296;

}

function handleMousePress_2818594253(self_2818594254, button_2818594255, mousePosWindow_2818594256) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
        var Temporary6;

  BeforeRet: {
    if ((!((self_2818594254.lastCompletionsWidget == null)) && contains_2130706614(self_2818594254.lastCompletionsWidget.lastBounds, mousePosWindow_2818594256))) {
    if ((button_2818594255 == 0)) {
    self_2818594254.selectedCompletion = getHoveredCompletion_2818583847(self_2818594254, mousePosWindow_2818594256);
    markDirty_2415919143(self_2818594254);
    }
    
    break BeforeRet;
    }
    
      if (!(button_2818594255 == 0)) Temporary1 = false; else {        var oHEX60gensym1040_2818594271 = getCursorAtPixelPos_2818594136(self_2818594254, mousePosWindow_2818594256);
        if (!isSome_2818594276(oHEX60gensym1040_2818594271)) Temporary2 = false; else {          var cursor_2818594316 = nimCopy(null, get_2818594293(oHEX60gensym1040_2818594271), NTI2449473545);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572809(self_2818594254, toSelection_2449474029(cursor_2818594316));
    }
    
      if (!(button_2818594255 == 3)) Temporary3 = false; else {        var oHEX60gensym1042_2818594323 = getCursorAtPixelPos_2818594136(self_2818594254, mousePosWindow_2818594256);
        if (!isSome_2818594276(oHEX60gensym1042_2818594323)) Temporary4 = false; else {          var cursor_2818594346 = nimCopy(null, get_2818594293(oHEX60gensym1042_2818594323), NTI2449473545);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    selectInside_2818585808(self_2818594254, cursor_2818594346);
    }
    
      if (!(button_2818594255 == 4)) Temporary5 = false; else {        var oHEX60gensym1043_2818594353 = getCursorAtPixelPos_2818594136(self_2818594254, mousePosWindow_2818594256);
        if (!isSome_2818594276(oHEX60gensym1043_2818594353)) Temporary6 = false; else {          var cursor_2818594376 = nimCopy(null, get_2818594293(oHEX60gensym1043_2818594353), NTI2449473545);
          Temporary6 = true;        }        Temporary5 = Temporary6;      }    if (Temporary5) {
    selectLine_2818585935(self_2818594254, cursor_2818594376.Field0);
    }
    
  };

  
}

function handleMousePress_2415919274(self_2415919275, button_2415919276, mousePosWindow_2415919277) {
  
}

function handleMousePress_2415919278(self_2415919275, button_2415919276, mousePosWindow_2415919277) {
    chckNilDisp(self_2415919275);
    if (isObj(self_2415919275.m_type, NTI2969568620)) {
    handleMousePress_2969584920(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    else {
    if (isObj(self_2415919275.m_type, NTI2818572510)) {
    handleMousePress_2818594253(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    else {
    if (isObj(self_2415919275.m_type, NTI2415919108)) {
    handleMousePress_2415919274(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    }}

  
}

function handleMouseRelease_2969585025(self_2969585026, button_2969585027, mousePosWindow_2969585028) {
  
}

function handleMouseRelease_2818594377(self_2818594378, button_2818594379, mousePosWindow_2818594380) {
    if ((((button_2818594379 == 0) && !((self_2818594378.lastCompletionsWidget == null))) && contains_2130706614(self_2818594378.lastCompletionsWidget.lastBounds, mousePosWindow_2818594380))) {
    var oldSelectedCompletion_2818594388 = self_2818594378.selectedCompletion;
    self_2818594378.selectedCompletion = getHoveredCompletion_2818583847(self_2818594378, mousePosWindow_2818594380);
    if ((self_2818594378.selectedCompletion == oldSelectedCompletion_2818594388)) {
    applySelectedCompletion_2818593402(self_2818594378);
    markDirty_2415919143(self_2818594378);
    }
    
    }
    

  
}

function handleMouseRelease_2415919279(self_2415919280, button_2415919281, mousePosWindow_2415919282) {
  
}

function handleMouseRelease_2415919283(self_2415919280, button_2415919281, mousePosWindow_2415919282) {
    chckNilDisp(self_2415919280);
    if (isObj(self_2415919280.m_type, NTI2969568620)) {
    handleMouseRelease_2969585025(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    else {
    if (isObj(self_2415919280.m_type, NTI2818572510)) {
    handleMouseRelease_2818594377(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    else {
    if (isObj(self_2415919280.m_type, NTI2415919108)) {
    handleMouseRelease_2415919279(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    }}

  
}

function handleMouseMove_2969585029(self_2969585030, mousePosWindow_2969585031, mousePosDelta_2969585032, modifiers_2969585033, buttons_2969585034) {
      var Temporary1;
        var Temporary2;

    if ((buttons_2969585034[0] != undefined)) {
    var mousePosContent_2969585083 = HEX2D_2147484180(mousePosWindow_2969585031, xy_2147483680(self_2969585030.lastBounds));
      if (!!(isEditing_2969575204(self_2969585030))) Temporary1 = false; else {        var oHEX60gensym1066_2969585086 = getNodeAtPixelPosition_2969578498(self_2969585030, mousePosContent_2969585083);
        if (!isSome_3003123546(oHEX60gensym1066_2969585086)) Temporary2 = false; else {          var n_2969585109 = get_3003123566(oHEX60gensym1066_2969585086);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    nodeHEX3D_2969570879(self_2969585030, n_2969585109);
    }
    
    }
    

  
}

function handleMouseMove_2818594389(self_2818594390, mousePosWindow_2818594391, mousePosDelta_2818594392, modifiers_2818594393, buttons_2818594394) {
      var Temporary1;
        var Temporary2;

  BeforeRet: {
    if ((!((self_2818594390.lastCompletionsWidget == null)) && contains_2130706614(self_2818594390.lastCompletionsWidget.lastBounds, mousePosWindow_2818594391))) {
    if ((buttons_2818594394[1] != undefined)) {
    self_2818594390.selectedCompletion = getHoveredCompletion_2818583847(self_2818594390, mousePosWindow_2818594391);
    markDirty_2415919143(self_2818594390);
    }
    
    break BeforeRet;
    }
    
      if (!(buttons_2818594394[0] != undefined)) Temporary1 = false; else {        var oHEX60gensym1046_2818594409 = getCursorAtPixelPos_2818594136(self_2818594390, mousePosWindow_2818594391);
        if (!isSome_2818594276(oHEX60gensym1046_2818594409)) Temporary2 = false; else {          var cursor_2818594432 = nimCopy(null, get_2818594293(oHEX60gensym1046_2818594409), NTI2449473545);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572809(self_2818594390, toSelection_2449474032(cursor_2818594432, selection_2818572803(self_2818594390), 3));
    }
    
  };

  
}

function handleMouseMove_2415919284(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289) {
  
}

function handleMouseMove_2415919290(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289) {
    chckNilDisp(self_2415919285);
    if (isObj(self_2415919285.m_type, NTI2969568620)) {
    handleMouseMove_2969585029(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    else {
    if (isObj(self_2415919285.m_type, NTI2818572510)) {
    handleMouseMove_2818594389(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    else {
    if (isObj(self_2415919285.m_type, NTI2415919108)) {
    handleMouseMove_2415919284(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    }}

  
}

function HEX26_3170894198(x_3170894200, y_3170894201) {
  var result_3170894202 = [];

    result_3170894202 = new Array(chckRange(addInt((x_3170894200).length, (y_3170894201).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3170894200).length, (y_3170894201).length), 0, 2147483647) ; ++i) { result_3170894202[i] = null; }    Label1: {
      var i_3170894220 = 0;
      var colontmp__536872478 = 0;
      colontmp__536872478 = subInt((x_3170894200).length, 1);
      var res_536872479 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872479 <= colontmp__536872478)) break Label3;
            i_3170894220 = res_536872479;
            result_3170894202[chckIndx(i_3170894220, 0, (result_3170894202).length - 1)] = x_3170894200[chckIndx(i_3170894220, 0, (x_3170894200).length - 1)];
            res_536872479 = addInt(res_536872479, 1);
          }
      };
    };
    Label4: {
      var i_3170894228 = 0;
      var colontmp__536872482 = 0;
      colontmp__536872482 = subInt((y_3170894201).length, 1);
      var res_536872483 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536872483 <= colontmp__536872482)) break Label6;
            i_3170894228 = res_536872483;
            result_3170894202[chckIndx(addInt(i_3170894228, (x_3170894200).length), 0, (result_3170894202).length - 1)] = y_3170894201[chckIndx(i_3170894228, 0, (y_3170894201).length - 1)];
            res_536872483 = addInt(res_536872483, 1);
          }
      };
    };

  return result_3170894202;

}

function getEventHandlers_3221225732(self_3221225733) {
  var result_3221225734 = [];

  BeforeRet: {
    result_3221225734 = nimCopy(null, HEX26_3170894198(getEventHandlers_2415919261(self_3221225733.textEditor), [self_3221225733.eventHandler]), NTI3170894057);
    break BeforeRet;
  };

  return result_3221225734;

}

function getEventHandlers_3170894191(self_3170894192) {
  var result_3170894193 = [];

  BeforeRet: {
    result_3170894193 = nimCopy(null, HEX26_3170894198(getEventHandlers_2415919261(self_3170894192.textEditor), [self_3170894192.eventHandler]), NTI3170894057);
    break BeforeRet;
  };

  return result_3170894193;

}

function getEventHandlers_2483028020(self_2483028021) {
  var result_2483028022 = [];

  BeforeRet: {
    result_2483028022 = nimCopy(null, [self_2483028021.eventHandler], NTI2466250766);
    break BeforeRet;
  };

  return result_2483028022;

}

function getEventHandlers_2483028027(self_2483028021) {
  var result_2483028028 = [];

  BeforeRet: {
    chckNilDisp(self_2483028021);
    if (isObj(self_2483028021.m_type, NTI3221225494)) {
    result_2483028028 = getEventHandlers_3221225732(self_2483028021);
    break BeforeRet;
    }
    else {
    if (isObj(self_2483028021.m_type, NTI3170893828)) {
    result_2483028028 = getEventHandlers_3170894191(self_2483028021);
    break BeforeRet;
    }
    else {
    if (isObj(self_2483028021.m_type, NTI2483027972)) {
    result_2483028028 = getEventHandlers_2483028020(self_2483028021);
    break BeforeRet;
    }
    }}
  };

  return result_2483028028;

}

function handleScroll_3221226184(self_3221226185, scroll_3221226186, mousePosWindow_3221226187) {
    self_3221226185.selected = clamp_1660945119(subInt(self_3221226185.selected, ((scroll_3221226186.y) | 0)), 0, subInt((self_3221226185.completions).length, 1));

  
}

function handleScroll_3170894268(self_3170894269, scroll_3170894270, mousePosWindow_3170894271) {
    self_3170894269.selected = clamp_1660945119(subInt(self_3170894269.selected, ((scroll_3170894270.y) | 0)), 0, subInt((self_3170894269.completions).length, 1));

  
}

function handleScroll_2483028029(self_2483028030, scroll_2483028031, mousePosWindow_2483028032) {
  
}

function handleScroll_2483028033(self_2483028030, scroll_2483028031, mousePosWindow_2483028032) {
    chckNilDisp(self_2483028030);
    if (isObj(self_2483028030.m_type, NTI3221225494)) {
    handleScroll_3221226184(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    else {
    if (isObj(self_2483028030.m_type, NTI3170893828)) {
    handleScroll_3170894268(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    else {
    if (isObj(self_2483028030.m_type, NTI2483027972)) {
    handleScroll_2483028029(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    }}

  
}

function none_3221225686() {
  var result_3221225692 = ({val: null});

  return result_3221225692;

}

function some_3221225701(val_3221225703) {
  var result_3221225704 = ({val: null});

    if (!(!((val_3221225703 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3221225704.val = val_3221225703;

  return result_3221225704;

}

function getItemAtPixelPosition_3221225678(self_3221225679, posWindow_3221225680) {
  var result_3221225685 = ({val: null});

  BeforeRet: {
    result_3221225685 = nimCopy(result_3221225685, none_3221225686(), NTI3221225617);
    Label1: {
      var index_3221225696 = 0;
      var rect_3221225697 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872486 = 0;
      var L_536872487 = (self_3221225679.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872486 < L_536872487)) break Label3;
            index_3221225696 = self_3221225679.lastItems[chckIndx(i_536872486, 0, (self_3221225679.lastItems).length - 1)]["Field0"];
            rect_3221225697 = self_3221225679.lastItems[chckIndx(i_536872486, 0, (self_3221225679.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(rect_3221225697, posWindow_3221225680) && (0 <= index_3221225696)) && (index_3221225696 <= (self_3221225679.completions).length - 1))) {
            result_3221225685 = nimCopy(result_3221225685, some_3221225701(self_3221225679.completions[chckIndx(index_3221225696, 0, (self_3221225679.completions).length - 1)]), NTI3221225617);
            break BeforeRet;
            }
            
            i_536872486 = addInt(i_536872486, 1);
            if (!(((self_3221225679.lastItems).length == L_536872487))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3221225685;

}

function isSome_3221226211(self_3221226213) {
  var result_3221226214 = false;

    result_3221226214 = !((self_3221226213.val == null));

  return result_3221226214;

}

function isNone_3221226239(self_3221226241) {
  var result_3221226242 = false;

    result_3221226242 = (self_3221226241.val == null);

  return result_3221226242;

}

function get_3221226231(self_3221226233) {
  var result_3221226234 = null;

    if (isNone_3221226239(self_3221226233)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221226234 = self_3221226233["val"];

  return result_3221226234;

}

function handleMousePress_3221226196(self_3221226197, button_3221226198, mousePosWindow_3221226199) {
      var Temporary1;

    if ((button_3221226198 == 0)) {
      var oHEX60gensym65_3221226206 = getItemAtPixelPosition_3221225678(self_3221226197, mousePosWindow_3221226199);
      if (!isSome_3221226211(oHEX60gensym65_3221226206)) Temporary1 = false; else {        var item_3221226257 = get_3221226231(oHEX60gensym65_3221226206);
        Temporary1 = true;      }    if (Temporary1) {
    self_3221226197.handleItemConfirmed(item_3221226257);
    popPopup_1291849115(self_3221226197.editor, self_3221226197);
    }
    
    }
    

  
}

function none_3170894096() {
  var result_3170894103 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  return result_3170894103;

}

function some_3170894131(val_3170894133) {
  var result_3170894134 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

    result_3170894134.has = true;
    result_3170894134.val = nimCopy(result_3170894134.val, val_3170894133, NTI2969568617);

  return result_3170894134;

}

function getItemAtPixelPosition_3170894087(self_3170894088, posWindow_3170894089) {
  var result_3170894095 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  BeforeRet: {
    result_3170894095 = nimCopy(result_3170894095, none_3170894096(), NTI3170893968);
    Label1: {
      var index_3170894126 = 0;
      var rect_3170894127 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872490 = 0;
      var L_536872491 = (self_3170894088.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872490 < L_536872491)) break Label3;
            index_3170894126 = self_3170894088.lastItems[chckIndx(i_536872490, 0, (self_3170894088.lastItems).length - 1)]["Field0"];
            rect_3170894127 = self_3170894088.lastItems[chckIndx(i_536872490, 0, (self_3170894088.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(rect_3170894127, posWindow_3170894089) && (0 <= index_3170894126)) && (index_3170894126 <= (self_3170894088.completions).length - 1))) {
            result_3170894095 = nimCopy(result_3170894095, some_3170894131(self_3170894088.completions[chckIndx(index_3170894126, 0, (self_3170894088.completions).length - 1)]), NTI3170893968);
            break BeforeRet;
            }
            
            i_536872490 = addInt(i_536872490, 1);
            if (!(((self_3170894088.lastItems).length == L_536872491))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3170894095;

}

function isSome_3170894295(self_3170894297) {
  var result_3170894298 = false;

    result_3170894298 = self_3170894297.has;

  return result_3170894298;

}

function isNone_3170894320(self_3170894322) {
  var result_3170894323 = false;

    result_3170894323 = !(self_3170894322.has);

  return result_3170894323;

}

function get_3170894312(self_3170894314) {
  var result_3170894315 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});

    if (isNone_3170894320(self_3170894314)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3170894315 = self_3170894314.val;

  return result_3170894315;

}

function handleMousePress_3170894280(self_3170894281, button_3170894282, mousePosWindow_3170894283) {
      var Temporary1;
    var Temporary2;

    if ((button_3170894282 == 0)) {
      var oHEX60gensym7_3170894290 = getItemAtPixelPosition_3170894087(self_3170894281, mousePosWindow_3170894283);
      if (!isSome_3170894295(oHEX60gensym7_3170894290)) Temporary1 = false; else {        var item_3170894335 = nimCopy(null, get_3170894312(oHEX60gensym7_3170894290), NTI2969568617);
        Temporary1 = true;      }    if (Temporary1) {
    var Temporary2 = item_3170894335;
    if (ConstSet322[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568616)); }
    self_3170894281.handleSymbolSelected(Temporary2.id);
    popPopup_1291849115(self_3170894281.editor, self_3170894281);
    }
    
    }
    

  
}

function handleMousePress_2483028034(self_2483028035, button_2483028036, mousePosWindow_2483028037) {
  
}

function handleMousePress_2483028038(self_2483028035, button_2483028036, mousePosWindow_2483028037) {
    chckNilDisp(self_2483028035);
    if (isObj(self_2483028035.m_type, NTI3221225494)) {
    handleMousePress_3221226196(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    else {
    if (isObj(self_2483028035.m_type, NTI3170893828)) {
    handleMousePress_3170894280(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    else {
    if (isObj(self_2483028035.m_type, NTI2483027972)) {
    handleMousePress_2483028034(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    }}

  
}

function handleMouseRelease_3221226260(self_3221226261, button_3221226262, mousePosWindow_3221226263) {
  
}

function handleMouseRelease_3170894338(self_3170894339, button_3170894340, mousePosWindow_3170894341) {
  
}

function handleMouseRelease_2483028039(self_2483028040, button_2483028041, mousePosWindow_2483028042) {
  
}

function handleMouseRelease_2483028043(self_2483028040, button_2483028041, mousePosWindow_2483028042) {
    chckNilDisp(self_2483028040);
    if (isObj(self_2483028040.m_type, NTI3221225494)) {
    handleMouseRelease_3221226260(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    else {
    if (isObj(self_2483028040.m_type, NTI3170893828)) {
    handleMouseRelease_3170894338(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    else {
    if (isObj(self_2483028040.m_type, NTI2483027972)) {
    handleMouseRelease_2483028039(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    }}

  
}

function handleMouseMove_3221226264(self_3221226265, mousePosWindow_3221226266, mousePosDelta_3221226267, modifiers_3221226268, buttons_3221226269) {
  
}

function handleMouseMove_3170894342(self_3170894343, mousePosWindow_3170894344, mousePosDelta_3170894345, modifiers_3170894346, buttons_3170894347) {
  
}

function handleMouseMove_2483028044(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049) {
  
}

function handleMouseMove_2483028050(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049) {
    chckNilDisp(self_2483028045);
    if (isObj(self_2483028045.m_type, NTI3221225494)) {
    handleMouseMove_3221226264(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    else {
    if (isObj(self_2483028045.m_type, NTI3170893828)) {
    handleMouseMove_3170894342(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    else {
    if (isObj(self_2483028045.m_type, NTI2483027972)) {
    handleMouseMove_2483028044(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    }}

  
}
async function initAsync_2801795119(self_2801795120) {
  var result_2801795122 = null;

  BeforeRet: {
    var _ = (await loadScript("scripting_runtime.js"));
    if ((window.localStorage.getItem("config.js") !== null)) {
    var config_2801795133 = loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115]);
    var contentStrict_2801795134 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(config_2801795133 || []);
    rawEcho(contentStrict_2801795134);
    var allowEval_2801795135 = confirm("You are about to eval() some javascript (config.js). Look in the console to see what's in there.");
    if (allowEval_2801795135) {
    var _ = (await loadScriptContent(toJSStr(config_2801795133)));
    }
    else {
      var fmtRes_2801795144 = mnewString(0);
      fmtRes_2801795144.push.apply(fmtRes_2801795144, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2801795144, NTI33554449)]);
    }
    
    }
    else {
    var _ = (await loadScript("config.js"));
    }
    
    result_2801795122 = undefined;
    break BeforeRet;
  };

  return result_2801795122;

}

function init_2801795167(self_2801795168, path_2801795169) {
    var _ = initAsync_2801795119(self_2801795168);

  
}

function init_2751463435(self_2751463436, path_2751463437) {
  
}

function init_2751463438(self_2751463436, path_2751463437) {
    chckNilDisp(self_2751463436);
    if (isObj(self_2751463436.m_type, NTI2801795076)) {
    init_2801795167(self_2751463436, path_2751463437);
    }
    else {
    if (isObj(self_2751463436.m_type, NTI2751463428)) {
    init_2751463435(self_2751463436, path_2751463437);
    }
    }

  
}

function reload_2801795170(self_2801795171) {
  
}

function reload_2751463439(self_2751463440) {
  
}

function reload_2751463441(self_2751463440) {
    chckNilDisp(self_2751463440);
    if (isObj(self_2751463440.m_type, NTI2801795076)) {
    reload_2801795170(self_2751463440);
    }
    else {
    if (isObj(self_2751463440.m_type, NTI2751463428)) {
    reload_2751463439(self_2751463440);
    }
    }

  
}

function handleUnknownPopupAction_2801795172(self_2801795173, popup_2801795174, action_2801795175, arg_2801795176) {
  var result_2801795177 = false;

    var action_2801795178 = toJSStr(action_2801795175);
    var arg_2801795179 = toJSStr(HEX24_1627394481(arg_2801795176));
    return window.handleUnknownPopupAction(popup_2801795174, action_2801795178,  JSON.parse(arg_2801795179));

  return result_2801795177;

}

function handleUnknownPopupAction_2751463442(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446) {
  var result_2751463447 = false;

  return result_2751463447;

}

function handleUnknownPopupAction_2751463448(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446) {
  var result_2751463449 = false;

  BeforeRet: {
    chckNilDisp(self_2751463443);
    if (isObj(self_2751463443.m_type, NTI2801795076)) {
    result_2751463449 = handleUnknownPopupAction_2801795172(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463443.m_type, NTI2751463428)) {
    result_2751463449 = handleUnknownPopupAction_2751463442(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446);
    break BeforeRet;
    }
    }
  };

  return result_2751463449;

}

function handleUnknownDocumentEditorAction_2801795180(self_2801795181, editor_2801795182, action_2801795183, arg_2801795184) {
  var result_2801795185 = false;

    var action_2801795186 = toJSStr(action_2801795183);
    var arg_2801795187 = toJSStr(HEX24_1627394481(arg_2801795184));
    return window.handleUnknownDocumentEditorAction(editor_2801795182, action_2801795186, JSON.parse(arg_2801795187));

  return result_2801795185;

}

function handleUnknownDocumentEditorAction_2751463450(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454) {
  var result_2751463455 = false;

  return result_2751463455;

}

function handleUnknownDocumentEditorAction_2751463456(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454) {
  var result_2751463457 = false;

  BeforeRet: {
    chckNilDisp(self_2751463451);
    if (isObj(self_2751463451.m_type, NTI2801795076)) {
    result_2751463457 = handleUnknownDocumentEditorAction_2801795180(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463451.m_type, NTI2751463428)) {
    result_2751463457 = handleUnknownDocumentEditorAction_2751463450(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454);
    break BeforeRet;
    }
    }
  };

  return result_2751463457;

}

function handleGlobalAction_2801795188(self_2801795189, action_2801795190, arg_2801795191) {
  var result_2801795192 = false;

    var action_2801795193 = toJSStr(action_2801795190);
    var arg_2801795194 = toJSStr(HEX24_1627394481(arg_2801795191));
    return window.handleGlobalAction(action_2801795193, JSON.parse(arg_2801795194));

  return result_2801795192;

}

function handleGlobalAction_2751463458(self_2751463459, action_2751463460, arg_2751463461) {
  var result_2751463462 = false;

  return result_2751463462;

}

function handleGlobalAction_2751463463(self_2751463459, action_2751463460, arg_2751463461) {
  var result_2751463464 = false;

  BeforeRet: {
    chckNilDisp(self_2751463459);
    if (isObj(self_2751463459.m_type, NTI2801795076)) {
    result_2751463464 = handleGlobalAction_2801795188(self_2751463459, action_2751463460, arg_2751463461);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463459.m_type, NTI2751463428)) {
    result_2751463464 = handleGlobalAction_2751463458(self_2751463459, action_2751463460, arg_2751463461);
    break BeforeRet;
    }
    }
  };

  return result_2751463464;

}

function calculateBounds_2785018185(self_2785018186, container_2785018187) {
  var result_2785018188 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var left_2785018189 = ((container_2785018187.x + (self_2785018186.anchor.Field0.x * container_2785018187.w)) + self_2785018186.left);
    var top_2785018190 = ((container_2785018187.y + (self_2785018186.anchor.Field0.y * container_2785018187.h)) + self_2785018186.top);
    var right_2785018191 = ((container_2785018187.x + (self_2785018186.anchor.Field1.x * container_2785018187.w)) + self_2785018186.right);
    var bottom_2785018192 = ((container_2785018187.y + (self_2785018186.anchor.Field1.y * container_2785018187.h)) + self_2785018186.bottom);
    var px_2785018193 = (self_2785018186.pivot.x * (right_2785018191 - left_2785018189));
    var py_2785018194 = (self_2785018186.pivot.y * (bottom_2785018192 - top_2785018190));
    result_2785018188.x = (left_2785018189 - px_2785018193);
    result_2785018188.y = (top_2785018190 - py_2785018194);
    result_2785018188.w = (right_2785018191 - left_2785018189);
    result_2785018188.h = (bottom_2785018192 - top_2785018190);

  return result_2785018188;

}

function formatValue_2785018207(result_2785018209, result_2785018209_Idx, value_2785018210, specifier_2785018211) {
    formatValue_721420459(result_2785018209, result_2785018209_Idx, HEX24_2147483713(value_2785018210), specifier_2785018211);

  
}

function nsuToLowerAsciiStr(s_855638110) {
  var result_855638111 = [];

    result_855638111 = nimCopy(null, mnewString(chckRange((s_855638110).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_855638117 = 0;
      var colontmp__536872498 = 0;
      colontmp__536872498 = subInt((s_855638110).length, 1);
      var res_536872499 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872499 <= colontmp__536872498)) break Label3;
            iHEX60gensym7_855638117 = res_536872499;
            result_855638111[chckIndx(iHEX60gensym7_855638117, 0, (result_855638111).length - 1)] = nsuToLowerAsciiChar(s_855638110[chckIndx(iHEX60gensym7_855638117, 0, (s_855638110).length - 1)]);
            res_536872499 = addInt(res_536872499, 1);
          }
      };
    };

  return result_855638111;

}

function HEX24_2164261788(aHEX60gensym45_2164261789) {
  var result_2164261790 = [];

    result_2164261790 = nimCopy(null, (nsuToLowerAsciiStr([86,101,99,50]) || []).concat([40] || [],HEX24_2164261794(aHEX60gensym45_2164261789.x) || [],[44,32] || [],HEX24_2164261794(aHEX60gensym45_2164261789.y) || [],[41] || []), NTI33554449);

  return result_2164261790;

}

function addQuoted_2785018254(s_2785018256, s_2785018256_Idx, x_2785018257) {
    s_2785018256[s_2785018256_Idx].push.apply(s_2785018256[s_2785018256_Idx], HEX24_2164261788(x_2785018257));;

  
}

function HEX24_2785018222(x_2785018224) {
  var result_2785018225 = [[]];

    result_2785018225[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym11_2785018236 = 0;
    if ((0 < countHEX60gensym11_2785018236)) {
    result_2785018225[0].push.apply(result_2785018225[0], [44,32]);;
    }
    
    result_2785018225[0].push.apply(result_2785018225[0], [109,105,110]);;
    result_2785018225[0].push.apply(result_2785018225[0], [58,32]);;
    countHEX60gensym11_2785018236 += 1;
    addQuoted_2785018254(result_2785018225, 0, x_2785018224["Field0"]);
    if ((0 < countHEX60gensym11_2785018236)) {
    result_2785018225[0].push.apply(result_2785018225[0], [44,32]);;
    }
    
    result_2785018225[0].push.apply(result_2785018225[0], [109,97,120]);;
    result_2785018225[0].push.apply(result_2785018225[0], [58,32]);;
    countHEX60gensym11_2785018236 += 1;
    addQuoted_2785018254(result_2785018225, 0, x_2785018224["Field1"]);
    result_2785018225[0].push.apply(result_2785018225[0], [41]);;

  return result_2785018225[0];

}

function formatValue_2785018217(result_2785018219, result_2785018219_Idx, value_2785018220, specifier_2785018221) {
    formatValue_721420459(result_2785018219, result_2785018219_Idx, HEX24_2785018222(value_2785018220), specifier_2785018221);

  
}

function formatValue_2785018284(result_2785018286, result_2785018286_Idx, value_2785018287, specifier_2785018288) {
    formatValue_721420459(result_2785018286, result_2785018286_Idx, HEX24_2164261788(value_2785018287), specifier_2785018288);

  
}

function layoutWidget_2785018195(self_2785018196, container_2785018197, frameIndex_2785018198, options_2785018199) {
    var newBounds_2785018200 = calculateBounds_2785018185(self_2785018196, container_2785018197);
    if (self_2785018196.logLayout) {
    var fmtRes_2785018206 = [mnewString(0)];
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [108,97,121,111,117,116,80,97,110,101,108,40]);;
    formatValue_2785018207(fmtRes_2785018206, 0, container_2785018197, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018206, 0, frameIndex_2785018198, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018217(fmtRes_2785018206, 0, self_2785018196.anchor, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018284(fmtRes_2785018206, 0, self_2785018196.pivot, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018206, 0, self_2785018196.left, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44]);;
    formatValue_2785018295(fmtRes_2785018206, 0, self_2785018196.top, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018206, 0, self_2785018196.right, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44]);;
    formatValue_2785018295(fmtRes_2785018206, 0, self_2785018196.bottom, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018206, 0, newBounds_2785018200, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018206[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018200, self_2785018196.lastBounds))) {
    var fmtRes_2785018381 = [mnewString(0)];
    fmtRes_2785018381[0].push.apply(fmtRes_2785018381[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018207(fmtRes_2785018381, 0, self_2785018196.lastBounds, []);
    fmtRes_2785018381[0].push.apply(fmtRes_2785018381[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018381, 0, newBounds_2785018200, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018381[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018200, self_2785018196.lastBounds))) {
    self_2785018196.lastBounds = nimCopy(self_2785018196.lastBounds, newBounds_2785018200, NTI2147483653);
    self_2785018196.lastBoundsChange = frameIndex_2785018198;
    }
    
    if (((frameIndex_2785018198 <= self_2785018196.lastHierarchyChange) || (frameIndex_2785018198 <= self_2785018196.lastBoundsChange))) {
    Label1: {
      var c_2785018399 = null;
      var i_536872494 = 0;
      var L_536872495 = (self_2785018196.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872494 < L_536872495)) break Label3;
            c_2785018399 = self_2785018196.children[chckIndx(i_536872494, 0, (self_2785018196.children).length - 1)];
            layoutWidget_2785018180(c_2785018399, newBounds_2785018200, frameIndex_2785018198, options_2785018199);
            i_536872494 = addInt(i_536872494, 1);
            if (!(((self_2785018196.children).length == L_536872495))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function height_2785017911(self_2785017912) {
  var result_2785017913 = 0.0;

    result_2785017913 = (self_2785017912.bottom - self_2785017912.top);

  return result_2785017913;

}

function layoutWidget_2785018632(self_2785018633, container_2785018634, frameIndex_2785018635, options_2785018636) {
    var newBounds_2785018637 = calculateBounds_2785018185(self_2785018633, container_2785018634);
    if (self_2785018633.logLayout) {
    var fmtRes_2785018643 = [mnewString(0)];
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [108,97,121,111,117,116,86,101,114,116,105,99,97,108,76,105,115,116,40]);;
    formatValue_2785018207(fmtRes_2785018643, 0, container_2785018634, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018643, 0, frameIndex_2785018635, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018217(fmtRes_2785018643, 0, self_2785018633.anchor, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018284(fmtRes_2785018643, 0, self_2785018633.pivot, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018643, 0, self_2785018633.left, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44]);;
    formatValue_2785018295(fmtRes_2785018643, 0, self_2785018633.top, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018643, 0, self_2785018633.right, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44]);;
    formatValue_2785018295(fmtRes_2785018643, 0, self_2785018633.bottom, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018643, 0, newBounds_2785018637, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018643[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018637, self_2785018633.lastBounds))) {
    var fmtRes_2785018698 = [mnewString(0)];
    fmtRes_2785018698[0].push.apply(fmtRes_2785018698[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018207(fmtRes_2785018698, 0, self_2785018633.lastBounds, []);
    fmtRes_2785018698[0].push.apply(fmtRes_2785018698[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018698, 0, newBounds_2785018637, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018698[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018637, self_2785018633.lastBounds))) {
    self_2785018633.lastBounds = nimCopy(self_2785018633.lastBounds, newBounds_2785018637, NTI2147483653);
    self_2785018633.lastBoundsChange = frameIndex_2785018635;
    }
    
    if (((frameIndex_2785018635 <= self_2785018633.lastHierarchyChange) || (frameIndex_2785018635 <= self_2785018633.lastBoundsChange))) {
    var lastY_2785018713 = 0.0;
    Label1: {
      var c_2785018717 = null;
      var i_536872502 = 0;
      var L_536872503 = (self_2785018633.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872502 < L_536872503)) break Label3;
            c_2785018717 = self_2785018633.children[chckIndx(i_536872502, 0, (self_2785018633.children).length - 1)];
            var height_2785018718 = height_2785017911(c_2785018717);
            c_2785018717.top = lastY_2785018713;
            c_2785018717.bottom = (lastY_2785018713 + height_2785018718);
            layoutWidget_2785018180(c_2785018717, newBounds_2785018637, frameIndex_2785018635, options_2785018636);
            lastY_2785018713 = ((c_2785018717.lastBounds.y + c_2785018717.lastBounds.h) - newBounds_2785018637.y);
            i_536872502 = addInt(i_536872502, 1);
            if (!(((self_2785018633.children).length == L_536872503))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function none_2785018533() {
  var result_2785018540 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

  return result_2785018540;

}

function isSome_2785018553(self_2785018555) {
  var result_2785018556 = false;

    result_2785018556 = self_2785018555.has;

  return result_2785018556;

}

function isNone_2785018578(self_2785018580) {
  var result_2785018581 = false;

    result_2785018581 = !(self_2785018580.has);

  return result_2785018581;

}

function get_2785018570(self_2785018572) {
  var result_2785018573 = null;

  BeforeRet: {
    if (isNone_2785018578(self_2785018572)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2785018573 = self_2785018572.val;
    break BeforeRet;
  };

  return result_2785018573;

}

function some_2785018615(val_2785018617) {
  var result_2785018618 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

    result_2785018618.has = true;
    result_2785018618.val = nimCopy(result_2785018618.val, val_2785018617, NTI2147483653);

  return result_2785018618;

}

function layoutWidget_2785018400(self_2785018401, container_2785018402, frameIndex_2785018403, options_2785018404) {
            var Temporary10;

    var newBounds_2785018405 = calculateBounds_2785018185(self_2785018401, container_2785018402);
    if (self_2785018401.logLayout) {
    var fmtRes_2785018411 = [mnewString(0)];
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [108,97,121,111,117,116,83,116,97,99,107,40]);;
    formatValue_2785018207(fmtRes_2785018411, 0, container_2785018402, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018411, 0, frameIndex_2785018403, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018217(fmtRes_2785018411, 0, self_2785018401.anchor, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018284(fmtRes_2785018411, 0, self_2785018401.pivot, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018411, 0, self_2785018401.left, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44]);;
    formatValue_2785018295(fmtRes_2785018411, 0, self_2785018401.top, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018411, 0, self_2785018401.right, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44]);;
    formatValue_2785018295(fmtRes_2785018411, 0, self_2785018401.bottom, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018411, 0, newBounds_2785018405, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018411[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018405, self_2785018401.lastBounds))) {
    var fmtRes_2785018466 = [mnewString(0)];
    fmtRes_2785018466[0].push.apply(fmtRes_2785018466[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018207(fmtRes_2785018466, 0, self_2785018401.lastBounds, []);
    fmtRes_2785018466[0].push.apply(fmtRes_2785018466[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018466, 0, newBounds_2785018405, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018466[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018405, self_2785018401.lastBounds))) {
    self_2785018401.lastBounds = nimCopy(self_2785018401.lastBounds, newBounds_2785018405, NTI2147483653);
    self_2785018401.lastBoundsChange = frameIndex_2785018403;
    }
    
    if (((frameIndex_2785018403 <= self_2785018401.lastHierarchyChange) || (frameIndex_2785018403 <= self_2785018401.lastBoundsChange))) {
    Label1: {
      var i_2785018513 = 0;
      var c_2785018514 = null;
      var i_536872511 = 0;
      var L_536872512 = (self_2785018401.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872511 < L_536872512)) break Label3;
            i_2785018513 = i_536872511;
            c_2785018514 = self_2785018401.children[chckIndx(i_536872511, 0, (self_2785018401.children).length - 1)];
            var oldBounds_2785018515 = nimCopy(null, c_2785018514.lastBounds, NTI2147483653);
            layoutWidget_2785018180(c_2785018514, newBounds_2785018405, frameIndex_2785018403, options_2785018404);
            var newBounds_2785018516 = nimCopy(null, c_2785018514.lastBounds, NTI2147483653);
            if ((!(HEX3DHEX3D_2785018366(oldBounds_2785018515, newBounds_2785018516)) && !(contains_2130706618(newBounds_2785018516, oldBounds_2785018515)))) {
            var invalidationRect_2785018521 = nimCopy(null, oldBounds_2785018515, NTI2147483653);
            Label4: {
              var k_2785018527 = 0;
              var colontmp__536872507 = 0;
              colontmp__536872507 = subInt(i_2785018513, 1);
              var res_536872508 = colontmp__536872507;
              Label5: {
                  Label6: while (true) {
                  if (!(0 <= res_536872508)) break Label6;
                    k_2785018527 = res_536872508;
                    invalidate_2785018087(self_2785018401.children[chckIndx(k_2785018527, 0, (self_2785018401.children).length - 1)], frameIndex_2785018403, invalidationRect_2785018521);
                    if (contains_2130706618(self_2785018401.children[chckIndx(k_2785018527, 0, (self_2785018401.children).length - 1)].lastBounds, invalidationRect_2785018521)) {
                    break Label4;
                    }
                    
                    res_536872508 = subInt(res_536872508, 1);
                  }
              };
            };
            }
            
            i_536872511 = addInt(i_536872511, 1);
            if (!(((self_2785018401.children).length == L_536872512))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var invalidationRect_2785018541 = [none_2785018533()];
    Label7: {
      var i_2785018547 = 0;
      var c_2785018548 = null;
      var i_536872515 = 0;
      var L_536872516 = (self_2785018401.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872515 < L_536872516)) break Label9;
            i_2785018547 = i_536872515;
            c_2785018548 = self_2785018401.children[chckIndx(i_536872515, 0, (self_2785018401.children).length - 1)];
            if (isSome_2785018553(invalidationRect_2785018541[0])) {
            invalidate_2785018087(c_2785018548, frameIndex_2785018403, get_2785018570(invalidationRect_2785018541[0]));
            }
            
            if (isSome_2785018553(invalidationRect_2785018541[0])) {
            Temporary10 = some_2785018615(or_2147483728(get_2785018570(invalidationRect_2785018541[0]), c_2785018548.lastBounds));
            }
            else {
            Temporary10 = some_2785018615(c_2785018548.lastBounds);
            }
            
            invalidationRect_2785018541[0] = nimCopy(invalidationRect_2785018541[0], Temporary10, NTI2785018260);
            i_536872515 = addInt(i_536872515, 1);
            if (!(((self_2785018401.children).length == L_536872516))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function HEX2DHEX3D_2634022922(x_2634022924, x_2634022924_Idx, y_2634022925) {
    x_2634022924[x_2634022924_Idx] = (x_2634022924[x_2634022924_Idx] - y_2634022925);

  
}

function layoutWidget_2785018806(self_2785018807, container_2785018808, frameIndex_2785018809, options_2785018810) {
    var newBounds_2785018811 = calculateBounds_2785018185(self_2785018807, container_2785018808);
    if (self_2785018807.sizeToContent) {
    var size_2785018812 = options_2785018810.getTextBounds(self_2785018807.text);
    var incX_2785018813 = max_33555642((size_2785018812.x - newBounds_2785018811.w), 0.0);
    var incY_2785018814 = max_33555642((size_2785018812.y - newBounds_2785018811.h), 0.0);
    newBounds_2785018811.w = size_2785018812.x;
    newBounds_2785018811.h = size_2785018812.y;
    HEX2DHEX3D_2634022922(newBounds_2785018811, "x", (incX_2785018813 * self_2785018807.pivot.x));
    HEX2DHEX3D_2634022922(newBounds_2785018811, "y", (incY_2785018814 * self_2785018807.pivot.y));
    }
    
    if (self_2785018807.logLayout) {
    var fmtRes_2785018828 = [mnewString(0)];
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [108,97,121,111,117,116,84,101,120,116,40,39]);;
    formatValue_721420459(fmtRes_2785018828, 0, self_2785018807.text, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [39,44,32]);;
    formatValue_2785018207(fmtRes_2785018828, 0, container_2785018808, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018828, 0, frameIndex_2785018809, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018217(fmtRes_2785018828, 0, self_2785018807.anchor, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018284(fmtRes_2785018828, 0, self_2785018807.pivot, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018828, 0, self_2785018807.left, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44]);;
    formatValue_2785018295(fmtRes_2785018828, 0, self_2785018807.top, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018828, 0, self_2785018807.right, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44]);;
    formatValue_2785018295(fmtRes_2785018828, 0, self_2785018807.bottom, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018828, 0, newBounds_2785018811, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018828[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018811, self_2785018807.lastBounds))) {
    var fmtRes_2785018883 = [mnewString(0)];
    fmtRes_2785018883[0].push.apply(fmtRes_2785018883[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018207(fmtRes_2785018883, 0, self_2785018807.lastBounds, []);
    fmtRes_2785018883[0].push.apply(fmtRes_2785018883[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018883, 0, newBounds_2785018811, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018883[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018811, self_2785018807.lastBounds))) {
    self_2785018807.lastBounds = nimCopy(self_2785018807.lastBounds, newBounds_2785018811, NTI2147483653);
    self_2785018807.lastBoundsChange = frameIndex_2785018809;
    }
    

  
}

function width_2785017908(self_2785017909) {
  var result_2785017910 = 0.0;

    result_2785017910 = (self_2785017909.right - self_2785017909.left);

  return result_2785017910;

}

function layoutWidget_2785018719(self_2785018720, container_2785018721, frameIndex_2785018722, options_2785018723) {
    var newBounds_2785018724 = calculateBounds_2785018185(self_2785018720, container_2785018721);
    if (self_2785018720.logLayout) {
    var fmtRes_2785018730 = [mnewString(0)];
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [108,97,121,111,117,116,72,111,114,105,122,111,110,116,97,108,76,105,115,116,40]);;
    formatValue_2785018207(fmtRes_2785018730, 0, container_2785018721, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018730, 0, frameIndex_2785018722, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018217(fmtRes_2785018730, 0, self_2785018720.anchor, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018284(fmtRes_2785018730, 0, self_2785018720.pivot, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018730, 0, self_2785018720.left, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44]);;
    formatValue_2785018295(fmtRes_2785018730, 0, self_2785018720.top, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018730, 0, self_2785018720.right, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44]);;
    formatValue_2785018295(fmtRes_2785018730, 0, self_2785018720.bottom, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018730, 0, newBounds_2785018724, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018730[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018724, self_2785018720.lastBounds))) {
    var fmtRes_2785018785 = [mnewString(0)];
    fmtRes_2785018785[0].push.apply(fmtRes_2785018785[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018207(fmtRes_2785018785, 0, self_2785018720.lastBounds, []);
    fmtRes_2785018785[0].push.apply(fmtRes_2785018785[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018785, 0, newBounds_2785018724, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018785[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018724, self_2785018720.lastBounds))) {
    self_2785018720.lastBounds = nimCopy(self_2785018720.lastBounds, newBounds_2785018724, NTI2147483653);
    self_2785018720.lastBoundsChange = frameIndex_2785018722;
    }
    
    if (((frameIndex_2785018722 <= self_2785018720.lastHierarchyChange) || (frameIndex_2785018722 <= self_2785018720.lastBoundsChange))) {
    var lastX_2785018800 = 0.0;
    Label1: {
      var c_2785018804 = null;
      var i_536872519 = 0;
      var L_536872520 = (self_2785018720.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872519 < L_536872520)) break Label3;
            c_2785018804 = self_2785018720.children[chckIndx(i_536872519, 0, (self_2785018720.children).length - 1)];
            var width_2785018805 = width_2785017908(c_2785018804);
            c_2785018804.left = lastX_2785018800;
            c_2785018804.right = (lastX_2785018800 + width_2785018805);
            layoutWidget_2785018180(c_2785018804, newBounds_2785018724, frameIndex_2785018722, options_2785018723);
            lastX_2785018800 = ((c_2785018804.lastBounds.x + c_2785018804.lastBounds.w) - newBounds_2785018724.x);
            i_536872519 = addInt(i_536872519, 1);
            if (!(((self_2785018720.children).length == L_536872520))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function layoutWidget_2785018175(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179) {
  
}

function layoutWidget_2785018180(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179) {
    chckNilDisp(self_2785018176);
    if (isObj(self_2785018176.m_type, NTI2785017868)) {
    layoutWidget_2785018195(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    else {
    if (isObj(self_2785018176.m_type, NTI2785017872)) {
    layoutWidget_2785018632(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    else {
    if (isObj(self_2785018176.m_type, NTI2785017870)) {
    layoutWidget_2785018400(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    else {
    if (isObj(self_2785018176.m_type, NTI2785017876)) {
    layoutWidget_2785018806(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    else {
    if (isObj(self_2785018176.m_type, NTI2785017874)) {
    layoutWidget_2785018719(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    else {
    if (isObj(self_2785018176.m_type, NTI2785017866)) {
    layoutWidget_2785018175(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    }}}}}

  
}

function invoke_3338666225(event_3338666227, arg_3338666228) {
    Label1: {
      var h_3338666251 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872524 = 0;
      var L_536872525 = (event_3338666227.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872524 < L_536872525)) break Label3;
            h_3338666251 = event_3338666227.handlers[chckIndx(i_536872524, 0, (event_3338666227.handlers).length - 1)];
            h_3338666251.Field1(arg_3338666228);
            i_536872524 = addInt(i_536872524, 1);
            if (!(((event_3338666227.handlers).length == L_536872525))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function requestRender_3338667089(self_3338667090, redrawEverything_3338667091) {
    self_3338667090.redrawEverything = (self_3338667090.redrawEverything || redrawEverything_3338667091);
    invoke_3338666225(self_3338667090.onResized, redrawEverything_3338667091);

  
}

function requestRender_2768240743(self_2768240744, redrawEverything_2768240745) {
  
}

function requestRender_2768240746(self_2768240744, redrawEverything_2768240745) {
    chckNilDisp(self_2768240744);
    if (isObj(self_2768240744.m_type, NTI3338665995)) {
    requestRender_3338667089(self_2768240744, redrawEverything_2768240745);
    }
    else {
    if (isObj(self_2768240744.m_type, NTI2768240644)) {
    requestRender_2768240743(self_2768240744, redrawEverything_2768240745);
    }
    }

  
}

function size_3338667123(self_3338667124) {
  var result_3338667125 = ({x: 0.0, y: 0.0});

    return {x: self_3338667124.content.clientWidth, y: self_3338667124.content.clientHeight};;

  return result_3338667125;

}

function size_2768240757(self_2768240758) {
  var result_2768240759 = ({x: 0.0, y: 0.0});

  return result_2768240759;

}

function size_2768240760(self_2768240758) {
  var result_2768240761 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2768240758);
    if (isObj(self_2768240758.m_type, NTI3338665995)) {
    result_2768240761 = nimCopy(result_2768240761, size_3338667123(self_2768240758), NTI2164261152);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240758.m_type, NTI2768240644)) {
    result_2768240761 = nimCopy(result_2768240761, size_2768240757(self_2768240758), NTI2164261152);
    break BeforeRet;
    }
    }
  };

  return result_2768240761;

}

function createOrReplaceElement_3338667291(element_3338667292, element_3338667292_Idx, name_3338667293, nameUpper_3338667294) {
    if ((element_3338667292[element_3338667292_Idx] == null)) {
    element_3338667292[element_3338667292_Idx] = document.createElement(name_3338667293);
    element_3338667292[element_3338667292_Idx].className = "widget";
    }
    else {
    if (!((element_3338667292[element_3338667292_Idx].nodeName == nameUpper_3338667294))) {
    var dif_3338667298 = document.createElement(name_3338667293);
    element_3338667292[element_3338667292_Idx].replaceWith(dif_3338667298);
    element_3338667292[element_3338667292_Idx] = dif_3338667298;
    element_3338667292[element_3338667292_Idx].className = "widget";
    }
    }

  
}

function HEX2D_2130706591(a_2130706592, b_2130706593) {
  var result_2130706594 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2130706594.x = (a_2130706592.x - b_2130706593.x);
    result_2130706594.y = (a_2130706592.y - b_2130706593.y);
    result_2130706594.w = a_2130706592.w;
    result_2130706594.h = a_2130706592.h;

  return result_2130706594;

}

function round_2634022918(x_2634022920) {
  var result_2634022921 = [0.0];

    if ((0.0 <= x_2634022920)) {
    result_2634022921[0] = Math.round(x_2634022920);
    }
    else {
      result_2634022921[0] = Math.ceil(x_2634022920);
      if ((0.5 <= (result_2634022921[0] - x_2634022920))) {
      HEX2DHEX3D_2634022922(result_2634022921, 0, 1.0);
      }
      
    }
    

  return result_2634022921[0];

}

function toHtmlRgba_2533360198(c_2533360199) {
  var result_2533360200 = [];

    result_2533360200 = nimCopy(null, ([114,103,98,97,40] || []).concat(HEX24_369098760(((round_2634022918((c_2533360199.r * 255.0))) | 0)) || [],[44,32] || [],HEX24_369098760(((round_2634022918((c_2533360199.g * 255.0))) | 0)) || [],[44,32] || [],HEX24_369098760(((round_2634022918((c_2533360199.b * 255.0))) | 0)) || [],[44,32] || [],HEX24_2164261794(c_2533360199.a) || [],[41] || []), NTI33554449);

  return result_2533360200;

}

function myToHtmlHex_3338667302(c_3338667303) {
  var result_3338667304 = [];

    result_3338667304 = nimCopy(null, toHtmlRgba_2533360198(c_3338667303), NTI33554449);

  return result_3338667304;

}

function getTextStyle_3338667457(x_3338667458, y_3338667459, width_3338667460, height_3338667461, color_3338667462, backgroundColor_3338667463) {
  var result_3338667464 = null;

    result_3338667464 = `left: ${x_3338667458}px; top: ${y_3338667459}px; width: ${width_3338667460}px; height: ${height_3338667461}px; overflow: visible; color: ${color_3338667462}; ${backgroundColor_3338667463}`

  return result_3338667464;

}

function pop_3338667266(s_3338667268, s_3338667268_Idx) {
  var result_3338667269 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var L_3338667273 = subInt((s_3338667268[s_3338667268_Idx]).length, 1);
    result_3338667269 = nimCopy(result_3338667269, s_3338667268[s_3338667268_Idx][chckIndx(L_3338667273, 0, (s_3338667268[s_3338667268_Idx]).length - 1)], NTI2147483653);
    if (s_3338667268[s_3338667268_Idx].length < chckRange(L_3338667273, 0, 2147483647)) { for (var i = s_3338667268[s_3338667268_Idx].length ; i < chckRange(L_3338667273, 0, 2147483647) ; ++i) s_3338667268[s_3338667268_Idx].push(({x: 0.0, y: 0.0, w: 0.0, h: 0.0})); }
               else { s_3338667268[s_3338667268_Idx].length = chckRange(L_3338667273, 0, 2147483647); };

  return result_3338667269;

}

function renderWidget_3338667465(self_3338667466, renderer_3338667467, element_3338667468, element_3338667468_Idx, forceRedraw_3338667469, frameIndex_3338667470, buffer_3338667471, buffer_3338667471_Idx) {
    var Temporary3;
    
function HEX3Aanonymous_3338667501() {
        element_3338667468[element_3338667468_Idx].setAttribute("style", getTextStyle_3338667457(((relBounds_3338667484.x) | 0), ((relBounds_3338667484.y) | 0), ((relBounds_3338667484.w) | 0), ((relBounds_3338667484.h) | 0), color_3338667492, backgroundColor_3338667500));
        if (updateText_3338667494) {
        element_3338667468[element_3338667468_Idx].innerText = text_3338667493;
        element_3338667468[element_3338667468_Idx].setAttribute("data-text", text_3338667493);
        }
        

      
    }

  BeforeRet: {
    if (((((self_3338667466.lastHierarchyChange < frameIndex_3338667470) && (self_3338667466.lastBoundsChange < frameIndex_3338667470)) && (self_3338667466.lastInvalidation < frameIndex_3338667470)) && !(forceRedraw_3338667469))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3338667291(element_3338667468, element_3338667468_Idx, "span", "SPAN");
    var relBounds_3338667484 = HEX2D_2130706591(self_3338667466.lastBounds, xy_2147483680(renderer_3338667467.boundsStack[chckIndx((renderer_3338667467.boundsStack).length - 1, 0, (renderer_3338667467.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3338667466.lastBounds, NTI2147483653);
    renderer_3338667467.boundsStack.push(Temporary1);;
    try {
    var color_3338667492 = toJSStr(myToHtmlHex_3338667302(self_3338667466.foregroundColor));
    var text_3338667493 = toJSStr(self_3338667466.text);
    var updateText_3338667494 = !((element_3338667468[element_3338667468_Idx].getAttribute("data-text") == text_3338667493));
    if (self_3338667466.fillBackground) {
    var fmtRes_3338667499 = [mnewString(0)];
    fmtRes_3338667499[0].push.apply(fmtRes_3338667499[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3338667499, 0, myToHtmlHex_3338667302(self_3338667466.backgroundColor), []);
    fmtRes_3338667499[0].push.apply(fmtRes_3338667499[0], [59]);;
    Temporary3 = toJSStr(fmtRes_3338667499[0]);
    }
    else {
    Temporary3 = "";
    }
    
    var backgroundColor_3338667500 = Temporary3;
    renderer_3338667467.domUpdates.push(HEX3Aanonymous_3338667501);;
    self_3338667466.lastRenderedText = nimCopy(null, self_3338667466.text, NTI33554449);
    } finally {
    var _ = pop_3338667266(renderer_3338667467, "boundsStack");
    }
  };

  
}

function updateRelativePosition_3338667299(element_3338667300, element_3338667300_Idx, bounds_3338667301) {
    element_3338667300[element_3338667300_Idx].style.left = toJSStr(HEX24_369098760(((bounds_3338667301.x) | 0)));
    element_3338667300[element_3338667300_Idx].style.top = toJSStr(HEX24_369098760(((bounds_3338667301.y) | 0)));
    element_3338667300[element_3338667300_Idx].style.width = toJSStr(HEX24_369098760(((bounds_3338667301.w) | 0)));
    element_3338667300[element_3338667300_Idx].style.height = toJSStr(HEX24_369098760(((bounds_3338667301.h) | 0)));

  
}

function renderWidget_3338667409(self_3338667410, renderer_3338667411, element_3338667412, element_3338667412_Idx, forceRedraw_3338667413, frameIndex_3338667414, buffer_3338667415, buffer_3338667415_Idx) {
            var Temporary8;

  BeforeRet: {
    if (((((self_3338667410.lastHierarchyChange < frameIndex_3338667414) && (self_3338667410.lastBoundsChange < frameIndex_3338667414)) && (self_3338667410.lastInvalidation < frameIndex_3338667414)) && !(forceRedraw_3338667413))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3338667291(element_3338667412, element_3338667412_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3338667410.children).length < (element_3338667412[element_3338667412_Idx].children).length)) break Label2;
          element_3338667412[element_3338667412_Idx].removeChild(element_3338667412[element_3338667412_Idx].lastChild);
        }
    };
    var relBounds_3338667434 = HEX2D_2130706591(self_3338667410.lastBounds, xy_2147483680(renderer_3338667411.boundsStack[chckIndx((renderer_3338667411.boundsStack).length - 1, 0, (renderer_3338667411.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3338667410.lastBounds, NTI2147483653);
    renderer_3338667411.boundsStack.push(Temporary3);;
    try {
    updateRelativePosition_3338667299(element_3338667412, element_3338667412_Idx, relBounds_3338667434);
    var existingCount_3338667445 = (element_3338667412[element_3338667412_Idx].children).length;
    Label5: {
      var i_3338667451 = 0;
      var c_3338667452 = null;
      var i_536872529 = 0;
      var L_536872530 = (self_3338667410.children).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872529 < L_536872530)) break Label7;
            i_3338667451 = i_536872529;
            c_3338667452 = self_3338667410.children[chckIndx(i_536872529, 0, (self_3338667410.children).length - 1)];
            if ((i_3338667451 < existingCount_3338667445)) {
            Temporary8 = element_3338667412[element_3338667412_Idx].children[chckIndx(i_3338667451, 0, (element_3338667412[element_3338667412_Idx].children).length - 1)];
            }
            else {
            Temporary8 = null;
            }
            
            var childElement_3338667453 = [Temporary8];
            renderWidget_3338667208(c_3338667452, renderer_3338667411, childElement_3338667453, 0, (forceRedraw_3338667413 || self_3338667410.fillBackground), frameIndex_3338667414, buffer_3338667415, buffer_3338667415_Idx);
            if (((existingCount_3338667445 <= i_3338667451) && !((childElement_3338667453[0] == null)))) {
            element_3338667412[element_3338667412_Idx].appendChild(childElement_3338667453[0]);
            }
            
            i_536872529 = addInt(i_536872529, 1);
            if (!(((self_3338667410.children).length == L_536872530))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3338667266(renderer_3338667411, "boundsStack");
    }
  };

  
}

function getBackgroundColor_2785017917(self_2785017918) {
  var result_2785017919 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2785017919 = nimCopy(result_2785017919, self_2785017918.backgroundColor, NTI2550136835);
    if (!(self_2785017918.allowAlpha)) {
    result_2785017919.a = 1.0;
    }
    

  return result_2785017919;

}

function getForegroundColor_2785017914(self_2785017915) {
  var result_2785017916 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2785017916 = nimCopy(result_2785017916, self_2785017915.foregroundColor, NTI2550136835);
    if (!(self_2785017915.allowAlpha)) {
    result_2785017916.a = 1.0;
    }
    

  return result_2785017916;

}

function renderWidget_3338667305(self_3338667306, renderer_3338667307, element_3338667308, element_3338667308_Idx, forceRedraw_3338667309, frameIndex_3338667310, buffer_3338667311, buffer_3338667311_Idx) {
    
function HEX3Aanonymous_3338667380() {
        element_3338667308[element_3338667308_Idx].className = "widget";
        element_3338667308[element_3338667308_Idx].setAttribute("style", toJSStr(css_3338667363));

      
    }
            var Temporary8;

  BeforeRet: {
    if (((((self_3338667306.lastHierarchyChange < frameIndex_3338667310) && (self_3338667306.lastBoundsChange < frameIndex_3338667310)) && (self_3338667306.lastInvalidation < frameIndex_3338667310)) && !(forceRedraw_3338667309))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3338667291(element_3338667308, element_3338667308_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3338667306.children).length < (element_3338667308[element_3338667308_Idx].children).length)) break Label2;
          element_3338667308[element_3338667308_Idx].removeChild(element_3338667308[element_3338667308_Idx].lastChild);
        }
    };
    var relBounds_3338667330 = HEX2D_2130706591(self_3338667306.lastBounds, xy_2147483680(renderer_3338667307.boundsStack[chckIndx((renderer_3338667307.boundsStack).length - 1, 0, (renderer_3338667307.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3338667306.lastBounds, NTI2147483653);
    renderer_3338667307.boundsStack.push(Temporary3);;
    try {
    var fmtRes_3338667342 = [mnewString(0)];
    fmtRes_3338667342[0].push.apply(fmtRes_3338667342[0], [108,101,102,116,58,32]);;
    formatValue_2701131945(fmtRes_3338667342, 0, ((relBounds_3338667330.x) | 0), []);
    fmtRes_3338667342[0].push.apply(fmtRes_3338667342[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2701131945(fmtRes_3338667342, 0, ((relBounds_3338667330.y) | 0), []);
    fmtRes_3338667342[0].push.apply(fmtRes_3338667342[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2701131945(fmtRes_3338667342, 0, ((relBounds_3338667330.w) | 0), []);
    fmtRes_3338667342[0].push.apply(fmtRes_3338667342[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2701131945(fmtRes_3338667342, 0, ((relBounds_3338667330.h) | 0), []);
    fmtRes_3338667342[0].push.apply(fmtRes_3338667342[0], [112,120,59]);;
    var css_3338667363 = nimCopy(null, fmtRes_3338667342[0], NTI33554449);
    var backgroundColor_3338667364 = getBackgroundColor_2785017917(self_3338667306);
    if (self_3338667306.fillBackground) {
    var fmtRes_3338667369 = [mnewString(0)];
    fmtRes_3338667369[0].push.apply(fmtRes_3338667369[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3338667369, 0, myToHtmlHex_3338667302(backgroundColor_3338667364), []);
    fmtRes_3338667369[0].push.apply(fmtRes_3338667369[0], [59]);;
    css_3338667363.push.apply(css_3338667363, fmtRes_3338667369[0]);;
    }
    
    if (self_3338667306.maskContent) {
    var fmtRes_3338667374 = mnewString(0);
    fmtRes_3338667374.push.apply(fmtRes_3338667374, [111,118,101,114,102,108,111,119,58,32,104,105,100,100,101,110,59]);;
    css_3338667363.push.apply(css_3338667363, fmtRes_3338667374);;
    }
    
    if (self_3338667306.drawBorder) {
    var fmtRes_3338667379 = [mnewString(0)];
    fmtRes_3338667379[0].push.apply(fmtRes_3338667379[0], [98,111,114,100,101,114,58,32,49,112,120,32,115,111,108,105,100,32]);;
    formatValue_721420459(fmtRes_3338667379, 0, myToHtmlHex_3338667302(getForegroundColor_2785017914(self_3338667306)), []);
    fmtRes_3338667379[0].push.apply(fmtRes_3338667379[0], [59]);;
    css_3338667363.push.apply(css_3338667363, fmtRes_3338667379[0]);;
    }
    
    renderer_3338667307.domUpdates.push(HEX3Aanonymous_3338667380);;
    var existingCount_3338667388 = (element_3338667308[element_3338667308_Idx].children).length;
    Label5: {
      var i_3338667394 = 0;
      var c_3338667395 = null;
      var i_536872534 = 0;
      var L_536872535 = (self_3338667306.children).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872534 < L_536872535)) break Label7;
            i_3338667394 = i_536872534;
            c_3338667395 = self_3338667306.children[chckIndx(i_536872534, 0, (self_3338667306.children).length - 1)];
            if ((i_3338667394 < existingCount_3338667388)) {
            Temporary8 = element_3338667308[element_3338667308_Idx].children[chckIndx(i_3338667394, 0, (element_3338667308[element_3338667308_Idx].children).length - 1)];
            }
            else {
            Temporary8 = null;
            }
            
            var childElement_3338667396 = [Temporary8];
            renderWidget_3338667208(c_3338667395, renderer_3338667307, childElement_3338667396, 0, (forceRedraw_3338667309 || self_3338667306.fillBackground), frameIndex_3338667310, buffer_3338667311, buffer_3338667311_Idx);
            if (((existingCount_3338667388 <= i_3338667394) && !((childElement_3338667396[0] == null)))) {
            element_3338667308[element_3338667308_Idx].appendChild(childElement_3338667396[0]);
            }
            
            i_536872534 = addInt(i_536872534, 1);
            if (!(((self_3338667306.children).length == L_536872535))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3338667266(renderer_3338667307, "boundsStack");
    }
  };

  
}

function renderWidget_3338667201(self_3338667202, renderer_3338667203, element_3338667204, element_3338667204_Idx, forceRedraw_3338667205, frameIndex_3338667206, buffer_3338667207, buffer_3338667207_Idx) {
  
}

function renderWidget_3338667208(self_3338667202, renderer_3338667203, element_3338667204, element_3338667204_Idx, forceRedraw_3338667205, frameIndex_3338667206, buffer_3338667207, buffer_3338667207_Idx) {
    chckNilDisp(self_3338667202);
    if (isObj(self_3338667202.m_type, NTI2785017876)) {
    renderWidget_3338667465(self_3338667202, renderer_3338667203, element_3338667204, element_3338667204_Idx, forceRedraw_3338667205, frameIndex_3338667206, buffer_3338667207, buffer_3338667207_Idx);
    }
    else {
    if (isObj(self_3338667202.m_type, NTI2785017870)) {
    renderWidget_3338667409(self_3338667202, renderer_3338667203, element_3338667204, element_3338667204_Idx, forceRedraw_3338667205, frameIndex_3338667206, buffer_3338667207, buffer_3338667207_Idx);
    }
    else {
    if (isObj(self_3338667202.m_type, NTI2785017868)) {
    renderWidget_3338667305(self_3338667202, renderer_3338667203, element_3338667204, element_3338667204_Idx, forceRedraw_3338667205, frameIndex_3338667206, buffer_3338667207, buffer_3338667207_Idx);
    }
    else {
    if (isObj(self_3338667202.m_type, NTI2785017866)) {
    renderWidget_3338667201(self_3338667202, renderer_3338667203, element_3338667204, element_3338667204_Idx, forceRedraw_3338667205, frameIndex_3338667206, buffer_3338667207, buffer_3338667207_Idx);
    }
    }}}

  
}

function applyDomUpdates_3338667209(self_3338667210) {
    Label1: {
      var update_3338667233 = null;
      var i_536872539 = 0;
      var L_536872540 = (self_3338667210.domUpdates).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872539 < L_536872540)) break Label3;
            update_3338667233 = self_3338667210.domUpdates[chckIndx(i_536872539, 0, (self_3338667210.domUpdates).length - 1)];
            update_3338667233();
            i_536872539 = addInt(i_536872539, 1);
            if (!(((self_3338667210.domUpdates).length == L_536872540))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3338667210.domUpdates.length < 0) { for (var i = self_3338667210.domUpdates.length ; i < 0 ; ++i) self_3338667210.domUpdates.push(null); }
               else { self_3338667210.domUpdates.length = 0; };

  
}

function render_3338667258(self_3338667259, widget_3338667260, frameIndex_3338667261) {
    var Temporary2;

    self_3338667259.boundsStack.push(rect_2147483672(vec2_2164261686(), size_2768240760(self_3338667259)));;
    try {
    var buffer_3338667278 = [[]];
    if ((0 < (self_3338667259.content.children).length)) {
    Temporary2 = self_3338667259.content.children[chckIndx(0, 0, (self_3338667259.content.children).length - 1)];
    }
    else {
    Temporary2 = null;
    }
    
    var element_3338667283 = [Temporary2];
    var wasNil_3338667287 = (element_3338667283[0] == null);
    renderWidget_3338667208(widget_3338667260, self_3338667259, element_3338667283, 0, self_3338667259.redrawEverything, frameIndex_3338667261, buffer_3338667278, 0);
    applyDomUpdates_3338667209(self_3338667259);
    if ((!((element_3338667283[0] == null)) && wasNil_3338667287)) {
    self_3338667259.content.appendChild(element_3338667283[0]);
    }
    
    self_3338667259.redrawEverything = false;
    } finally {
    var _ = pop_3338667266(self_3338667259, "boundsStack");
    }

  
}

function render_2768240747(self_2768240748, widget_2768240749, frameIndex_2768240750) {
  
}

function render_2768240751(self_2768240748, widget_2768240749, frameIndex_2768240750) {
    chckNilDisp(self_2768240748);
    if (isObj(self_2768240748.m_type, NTI3338665995)) {
    render_3338667258(self_2768240748, widget_2768240749, frameIndex_2768240750);
    }
    else {
    if (isObj(self_2768240748.m_type, NTI2768240644)) {
    render_2768240747(self_2768240748, widget_2768240749, frameIndex_2768240750);
    }
    }

  
}

function sizeChanged_2768240752(self_2768240753) {
  var result_2768240754 = false;

  return result_2768240754;

}

function sizeChanged_2768240755(self_2768240753) {
  var result_2768240756 = false;

  BeforeRet: {
    result_2768240756 = sizeChanged_2768240752(self_2768240753);
    break BeforeRet;
  };

  return result_2768240756;

}

function initDoublyLinkedList_3338666135() {
  var result_3338666137 = ({head: null, tail: null});

  return result_3338666137;

}

function initTable_3338666141(initialSize_3338666144) {
  var result_3338666145 = ({data: [], counter: 0});

    var correctSizeHEX60gensym3_3338666147 = slotsNeeded_1308622891(chckRange(initialSize_3338666144, 0, 2147483647));
    result_3338666145.counter = 0;
    result_3338666145.data = new Array(chckRange(correctSizeHEX60gensym3_3338666147, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3338666147, 0, 2147483647) ; ++i) { result_3338666145.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_3338666145;

}

function correctSize_3053453333(cap_3053453334) {
  var result_3053453335 = 0;

    result_3053453335 = cap_3053453334;

  return result_3053453335;

}

function newLruCache_3338666125(capacity_3338666128, recordRemovedKeys_3338666129) {
  var result_3338666130 = null;

    result_3338666130 = {capacity: capacity_3338666128, list: initDoublyLinkedList_3338666135(), table: initTable_3338666141(correctSize_3053453333(capacity_3338666128)), recordRemovedKeys: recordRemovedKeys_3338666129, removedKeys: ({data: [], counter: 0})};

  return result_3338666130;

}

function getModifiers_3338666065(self_3338666066) {
  var result_3338666067 = {};

    if (self_3338666066.altKey) {
    result_3338666067[2] = true;
    }
    
    if (self_3338666066.shiftKey) {
    result_3338666067[1] = true;
    }
    
    if (self_3338666066.ctrlKey) {
    result_3338666067[0] = true;
    }
    

  return result_3338666067;

}

function runeAt_788536179(s_788536180, i_788536181) {
  var result_788536182 = 0;

    if ((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] <= 127)) {
    result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 5) == 6)) {
    if ((i_788536181 <= subInt((s_788536180).length, 2))) {
    result_788536182 = chckRange((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 31) << 6) | (s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 4) == 14)) {
    if ((i_788536181 <= subInt((s_788536180).length, 3))) {
    result_788536182 = chckRange(((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 15) << 12) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 3) == 30)) {
    if ((i_788536181 <= subInt((s_788536180).length, 4))) {
    result_788536182 = chckRange((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 7) << 18) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 2) == 62)) {
    if ((i_788536181 <= subInt((s_788536180).length, 5))) {
    result_788536182 = chckRange(((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 3) << 24) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 1) == 126)) {
    if ((i_788536181 <= subInt((s_788536180).length, 6))) {
    result_788536182 = chckRange((((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 1) << 30) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 24)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 5), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
      result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_788536182;

}

function toInput_3338666059(key_3338666060, code_3338666061, keyCode_3338666062) {
  var result_3338667197 = 0;

    switch (key_3338666060) {
    case "Enter":
      result_3338667197 = -1;
      break;
    case "Escape":
      result_3338667197 = -2;
      break;
    case "Backspace":
      result_3338667197 = -3;
      break;
    case " ":
      result_3338667197 = -4;
      break;
    case "Delete":
      result_3338667197 = -5;
      break;
    case "Tab":
      result_3338667197 = -6;
      break;
    case "ArrowLeft":
      result_3338667197 = -7;
      break;
    case "ArrowRight":
      result_3338667197 = -8;
      break;
    case "ArrowUp":
      result_3338667197 = -9;
      break;
    case "ArrowDown":
      result_3338667197 = -10;
      break;
    case "Home":
      result_3338667197 = -11;
      break;
    case "End":
      result_3338667197 = -12;
      break;
    case "PageUp":
      result_3338667197 = -13;
      break;
    case "PageDown":
      result_3338667197 = -14;
      break;
    default: 
      if (      keyCode_3338666062 >= 112 && keyCode_3338666062 <= 123      ){        result_3338667197 = addInt(-20, subInt(keyCode_3338666062, 112));
        }
      else{
        if ((((key_3338666060) == null ? 0 : (key_3338666060).length) == 1)) {
        result_3338667197 = runeAt_788536179(cstrToNimstr(key_3338666060), 0);
        }
        
        }
      break;
    }

  return result_3338667197;

}

function invoke_3338666309(event_3338666311, arg_3338666312) {
    Label1: {
      var h_3338666335 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872549 = 0;
      var L_536872550 = (event_3338666311.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872549 < L_536872550)) break Label3;
            h_3338666335 = event_3338666311.handlers[chckIndx(i_536872549, 0, (event_3338666311.handlers).length - 1)];
            h_3338666335.Field1(arg_3338666312);
            i_536872549 = addInt(i_536872549, 1);
            if (!(((event_3338666311.handlers).length == L_536872550))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getModifiers_3338666080(self_3338666081) {
  var result_3338666082 = {};

    if (self_3338666081.altKey) {
    result_3338666082[2] = true;
    }
    
    if (self_3338666081.shiftKey) {
    result_3338666082[1] = true;
    }
    
    if (self_3338666081.ctrlKey) {
    result_3338666082[0] = true;
    }
    

  return result_3338666082;

}

function invoke_3338666652(event_3338666654, arg_3338666655) {
    Label1: {
      var h_3338666678 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872554 = 0;
      var L_536872555 = (event_3338666654.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872554 < L_536872555)) break Label3;
            h_3338666678 = event_3338666654.handlers[chckIndx(i_536872554, 0, (event_3338666654.handlers).length - 1)];
            h_3338666678.Field1(arg_3338666655);
            i_536872554 = addInt(i_536872554, 1);
            if (!(((event_3338666654.handlers).length == L_536872555))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function HEX2A_3338666489(aHEX60gensym74_3338666491, bHEX60gensym74_3338666492) {
  var result_3338666493 = ({x: 0.0, y: 0.0});

    result_3338666493 = nimCopy(result_3338666493, {x: (aHEX60gensym74_3338666491.x * bHEX60gensym74_3338666492), y: (aHEX60gensym74_3338666491.y * bHEX60gensym74_3338666492)}, NTI2164261152);

  return result_3338666493;

}

function getMouseButton_3338666111(event_3338666112) {
    var Temporary1;

  var result_3338666113 = 0;

    if (    event_3338666112.button == 0    ){      Temporary1 = 0;
      }
    else if (    event_3338666112.button == 1    ){      Temporary1 = 1;
      }
    else if (    event_3338666112.button == 2    ){      Temporary1 = 2;
      }
    else{
      Temporary1 = 5;
      }
    result_3338666113 = Temporary1;

  return result_3338666113;

}

function invoke_3338666748(event_3338666750, arg_3338666751) {
    Label1: {
      var h_3338666774 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872559 = 0;
      var L_536872560 = (event_3338666750.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872559 < L_536872560)) break Label3;
            h_3338666774 = event_3338666750.handlers[chckIndx(i_536872559, 0, (event_3338666750.handlers).length - 1)];
            h_3338666774.Field1(arg_3338666751);
            i_536872559 = addInt(i_536872559, 1);
            if (!(((event_3338666750.handlers).length == L_536872560))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3338666822(event_3338666824, arg_3338666825) {
    Label1: {
      var h_3338666848 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872564 = 0;
      var L_536872565 = (event_3338666824.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872564 < L_536872565)) break Label3;
            h_3338666848 = event_3338666824.handlers[chckIndx(i_536872564, 0, (event_3338666824.handlers).length - 1)];
            h_3338666848.Field1(arg_3338666825);
            i_536872564 = addInt(i_536872564, 1);
            if (!(((event_3338666824.handlers).length == L_536872565))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getMouseButtons_3338666095(event_3338666096) {
  var result_3338666097 = {};

    var buttons_3338666098 = event_3338666096.buttons;
    if (!(((buttons_3338666098 & 1) == 0))) {
    result_3338666097[0] = true;
    }
    
    if (!(((buttons_3338666098 & 2) == 0))) {
    result_3338666097[2] = true;
    }
    
    if (!(((buttons_3338666098 & 4) == 0))) {
    result_3338666097[1] = true;
    }
    

  return result_3338666097;

}

function invoke_3338666979(event_3338666981, arg_3338666982) {
    Label1: {
      var h_3338667005 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872569 = 0;
      var L_536872570 = (event_3338666981.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872569 < L_536872570)) break Label3;
            h_3338667005 = event_3338666981.handlers[chckIndx(i_536872569, 0, (event_3338666981.handlers).length - 1)];
            h_3338667005.Field1(arg_3338666982);
            i_536872569 = addInt(i_536872569, 1);
            if (!(((event_3338666981.handlers).length == L_536872570))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function init_3338666123(self_3338666124) {
    
function HEX3Aanonymous_3338666188(text_3338666189) {
      var result_3338666190 = ({x: 0.0, y: 0.0});

        result_3338666190.x = ((text_3338666189).length * self_3338666124.mCharWidth);
        result_3338666190.y = totalLineHeight_2768240810(self_3338666124);

      return result_3338666190;

    }
    
function HEX3Aanonymous_3338666200(e_3338666201) {
        var oldEvent_3338666202 = self_3338666124.currentEvent;
        self_3338666124.currentEvent = e_3338666201;
        try {
        invoke_3338666225(self_3338666124.onResized, true);
        } finally {
        self_3338666124.currentEvent = oldEvent_3338666202;
        }

      
    }
    
function HEX3Aanonymous_3338666281(e_3338666282) {
        var oldEvent_3338666283 = self_3338666124.currentEvent;
        self_3338666124.currentEvent = e_3338666282;
        try {
        var ke_3338666284 = e_3338666282;
        var modifiers_3338666285 = getModifiers_3338666065(ke_3338666284);
        var input_3338666286 = toInput_3338666059(ke_3338666284.key, ke_3338666284.code, ke_3338666284.keyCode);
        invoke_3338666309(self_3338666124.onKeyPress, {Field0: input_3338666286, Field1: nimCopy(null, modifiers_3338666285, NTI2013265950)});
        } finally {
        self_3338666124.currentEvent = oldEvent_3338666283;
        }

      
    }
    
function HEX3Aanonymous_3338666365(e_3338666366) {
        var oldEvent_3338666367 = self_3338666124.currentEvent;
        self_3338666124.currentEvent = e_3338666366;
        try {
        var we_3338666368 = e_3338666366;
        var modifiers_3338666369 = getModifiers_3338666080(we_3338666368);
        invoke_3338666652(self_3338666124.onScroll, {Field0: vec2_2164261725(we_3338666368.clientX, we_3338666368.clientY), Field1: HEX2A_3338666489(vec2_2164261725(we_3338666368.deltaX, -(we_3338666368.deltaY)), 0.01), Field2: nimCopy(null, modifiers_3338666369, NTI2013265950)});
        } finally {
        self_3338666124.currentEvent = oldEvent_3338666367;
        }

      
    }
    
function HEX3Aanonymous_3338666717(e_3338666718) {
        var oldEvent_3338666719 = self_3338666124.currentEvent;
        self_3338666124.currentEvent = e_3338666718;
        try {
        var me_3338666720 = e_3338666718;
        var modifiers_3338666721 = getModifiers_3338666080(me_3338666720);
        var mouseButton_3338666722 = getMouseButton_3338666111(me_3338666720);
        var currentTargetRect_3338666723 = me_3338666720.currentTarget.getBoundingClientRect();
        var x_3338666724 = (me_3338666720.pageX - currentTargetRect_3338666723.x);
        var y_3338666725 = (me_3338666720.pageY - currentTargetRect_3338666723.y);
        invoke_3338666748(self_3338666124.onMousePress, {Field0: mouseButton_3338666722, Field1: nimCopy(null, modifiers_3338666721, NTI2013265950), Field2: vec2_2164261725(x_3338666724, y_3338666725)});
        } finally {
        self_3338666124.currentEvent = oldEvent_3338666719;
        }

      
    }
    
function HEX3Aanonymous_3338666795(e_3338666796) {
        var oldEvent_3338666797 = self_3338666124.currentEvent;
        self_3338666124.currentEvent = e_3338666796;
        try {
        var me_3338666798 = e_3338666796;
        var modifiers_3338666799 = getModifiers_3338666080(me_3338666798);
        invoke_3338666822(self_3338666124.onMouseMove, {Field0: vec2_2164261725(me_3338666798.clientX, me_3338666798.clientY), Field1: vec2_2164261725(me_3338666798.movementX, me_3338666798.movementY), Field2: nimCopy(null, modifiers_3338666799, NTI2013265950), Field3: getMouseButtons_3338666095(me_3338666798)});
        } finally {
        self_3338666124.currentEvent = oldEvent_3338666797;
        }

      
    }
    
function HEX3Aanonymous_3338666881(e_3338666882) {
        var oldEvent_3338666883 = self_3338666124.currentEvent;
        self_3338666124.currentEvent = e_3338666882;
        try {
        var de_3338666884 = e_3338666882;
        de_3338666884.preventDefault();
        } finally {
        self_3338666124.currentEvent = oldEvent_3338666883;
        }

      
    }
    
function HEX3Aanonymous_3338666894(e_3338666895) {
                
function HEX3Aanonymous_3338666942(f_3338666943) {
                    
function HEX3Aanonymous_3338666955(e_3338666956) {
                        invoke_3338666979(self_3338666124.onDropFile, {Field0: cstrToNimstr(f_3338666943.name), Field1: cstrToNimstr((fileReader_3338666945.result || ''))});

                      
                    }

                    var fileReader_3338666945 = new FileReader();
                    fileReader_3338666945.readAsText(f_3338666943, "UTF-8");
                    fileReader_3338666945.onload = HEX3Aanonymous_3338666955;

                  
                }

        var oldEvent_3338666896 = self_3338666124.currentEvent;
        self_3338666124.currentEvent = e_3338666895;
        try {
        var de_3338666897 = e_3338666895;
        de_3338666897.preventDefault();
        console.log(de_3338666897.dataTransfer);;
        Label2: {
          var f_3338666923 = null;
          var i_536872544 = 0;
          var L_536872545 = (de_3338666897.dataTransfer.files).length;
          Label3: {
              Label4: while (true) {
              if (!(i_536872544 < L_536872545)) break Label4;
                f_3338666923 = de_3338666897.dataTransfer.files[chckIndx(i_536872544, 0, (de_3338666897.dataTransfer.files).length - 1)];
                HEX3Aanonymous_3338666942(f_3338666923);
                i_536872544 = addInt(i_536872544, 1);
                if (!(((de_3338666897.dataTransfer.files).length == L_536872545))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        } finally {
        self_3338666124.currentEvent = oldEvent_3338666896;
        }

      
    }

    self_3338666124.mFontSize = 18.0;
    self_3338666124.mLineHeight = 20.0;
    self_3338666124.mLineDistance = 2.0;
    self_3338666124.mCharWidth = 18.0;
    self_3338666124.escapedText = newLruCache_3338666125(1000, false);
    self_3338666124.layoutOptions.getTextBounds = HEX3Aanonymous_3338666188;
    window.addEventListener("resize", HEX3Aanonymous_3338666200, false);
    self_3338666124.content = document.getElementById("view");
    self_3338666124.content.addEventListener("keydown", HEX3Aanonymous_3338666281, false);
    self_3338666124.content.addEventListener("wheel", HEX3Aanonymous_3338666365, {passive: true, capture: false, once: false});
    self_3338666124.content.addEventListener("mousedown", HEX3Aanonymous_3338666717, false);
    self_3338666124.content.addEventListener("mousemove", HEX3Aanonymous_3338666795, false);
    self_3338666124.content.addEventListener("dragover", HEX3Aanonymous_3338666881, false);
    self_3338666124.content.addEventListener("drop", HEX3Aanonymous_3338666894, false);
    updateFontSettings_3338666063(self_3338666124);
    self_3338666124.content.focus();

  
}

function init_2768240762(self_2768240763) {
  
}

function init_2768240764(self_2768240763) {
    chckNilDisp(self_2768240763);
    if (isObj(self_2768240763.m_type, NTI3338665995)) {
    init_3338666123(self_2768240763);
    }
    else {
    if (isObj(self_2768240763.m_type, NTI2768240644)) {
    init_2768240762(self_2768240763);
    }
    }

  
}

function deinit_3338667118(self_3338667119) {
  
}

function deinit_2768240765(self_2768240766) {
  
}

function deinit_2768240767(self_2768240766) {
    chckNilDisp(self_2768240766);
    if (isObj(self_2768240766.m_type, NTI3338665995)) {
    deinit_3338667118(self_2768240766);
    }
    else {
    if (isObj(self_2768240766.m_type, NTI2768240644)) {
    deinit_2768240765(self_2768240766);
    }
    }

  
}

function processEvents_3338667198(self_3338667199) {
  var result_3338667200 = 0;

    result_3338667200 = 0;

  return result_3338667200;

}

function processEvents_2768240768(self_2768240769) {
  var result_2768240770 = 0;

  return result_2768240770;

}

function processEvents_2768240771(self_2768240769) {
  var result_2768240772 = 0;

  BeforeRet: {
    chckNilDisp(self_2768240769);
    if (isObj(self_2768240769.m_type, NTI3338665995)) {
    result_2768240772 = processEvents_3338667198(self_2768240769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240769.m_type, NTI2768240644)) {
    result_2768240772 = processEvents_2768240768(self_2768240769);
    break BeforeRet;
    }
    }
  };

  return result_2768240772;

}

function fontSizeHEX3D_3338667171(self_3338667172, fontSize_3338667173) {
    self_3338667172.content.style.fontSize = toJSStr(HEX24_33557336(fontSize_3338667173));

  
}

function fontSizeHEX3D_2768240773(self_2768240774, fontSize_2768240775) {
  
}

function fontSizeHEX3D_2768240776(self_2768240774, fontSize_2768240775) {
    chckNilDisp(self_2768240774);
    if (isObj(self_2768240774.m_type, NTI3338665995)) {
    fontSizeHEX3D_3338667171(self_2768240774, fontSize_2768240775);
    }
    else {
    if (isObj(self_2768240774.m_type, NTI2768240644)) {
    fontSizeHEX3D_2768240773(self_2768240774, fontSize_2768240775);
    }
    }

  
}

function lineDistanceHEX3D_2768240777(self_2768240778, lineDistance_2768240779) {
  
}

function lineDistanceHEX3D_2768240780(self_2768240778, lineDistance_2768240779) {
    lineDistanceHEX3D_2768240777(self_2768240778, lineDistance_2768240779);

  
}

function fontSize_3338667177(self_3338667178) {
  var result_3338667179 = 0.0;

    result_3338667179 = self_3338667178.mFontSize;

  return result_3338667179;

}

function fontSize_2768240781(self_2768240782) {
  var result_2768240783 = 0.0;

  return result_2768240783;

}

function fontSize_2768240784(self_2768240782) {
  var result_2768240785 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240782);
    if (isObj(self_2768240782.m_type, NTI3338665995)) {
    result_2768240785 = fontSize_3338667177(self_2768240782);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240782.m_type, NTI2768240644)) {
    result_2768240785 = fontSize_2768240781(self_2768240782);
    break BeforeRet;
    }
    }
  };

  return result_2768240785;

}

function lineDistance_3338667180(self_3338667181) {
  var result_3338667182 = 0.0;

    result_3338667182 = self_3338667181.mLineDistance;

  return result_3338667182;

}

function lineDistance_2768240786(self_2768240787) {
  var result_2768240788 = 0.0;

  return result_2768240788;

}

function lineDistance_2768240789(self_2768240787) {
  var result_2768240790 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240787);
    if (isObj(self_2768240787.m_type, NTI3338665995)) {
    result_2768240790 = lineDistance_3338667180(self_2768240787);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240787.m_type, NTI2768240644)) {
    result_2768240790 = lineDistance_2768240786(self_2768240787);
    break BeforeRet;
    }
    }
  };

  return result_2768240790;

}

function lineHeight_3338667183(self_3338667184) {
  var result_3338667185 = 0.0;

    result_3338667185 = self_3338667184.mLineHeight;

  return result_3338667185;

}

function lineHeight_2768240791(self_2768240792) {
  var result_2768240793 = 0.0;

  return result_2768240793;

}

function lineHeight_2768240794(self_2768240792) {
  var result_2768240795 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240792);
    if (isObj(self_2768240792.m_type, NTI3338665995)) {
    result_2768240795 = lineHeight_3338667183(self_2768240792);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240792.m_type, NTI2768240644)) {
    result_2768240795 = lineHeight_2768240791(self_2768240792);
    break BeforeRet;
    }
    }
  };

  return result_2768240795;

}

function measureText_3338667189(self_3338667190, text_3338667191) {
  var result_3338667192 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    result_3338667192 = nimCopy(result_3338667192, vec2_2164261725(((text_3338667191).length * self_3338667190.mCharWidth), totalLineHeight_2768240810(self_3338667190)), NTI2164261152);
    break BeforeRet;
  };

  return result_3338667192;

}

function measureText_2768240801(self_2768240802, text_2768240803) {
  var result_2768240804 = ({x: 0.0, y: 0.0});

  return result_2768240804;

}

function measureText_2768240805(self_2768240802, text_2768240803) {
  var result_2768240806 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2768240802);
    if (isObj(self_2768240802.m_type, NTI3338665995)) {
    result_2768240806 = nimCopy(result_2768240806, measureText_3338667189(self_2768240802, text_2768240803), NTI2164261152);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240802.m_type, NTI2768240644)) {
    result_2768240806 = nimCopy(result_2768240806, measureText_2768240801(self_2768240802, text_2768240803), NTI2164261152);
    break BeforeRet;
    }
    }
  };

  return result_2768240806;

}

function preventDefault_3338667126(self_3338667127) {
  BeforeRet: {
    if ((self_3338667127.currentEvent == null)) {
    break BeforeRet;
    }
    
    self_3338667127.currentEvent.preventDefault();
  };

  
}

function preventDefault_2768240807(self_2768240808) {
  
}

function preventDefault_2768240809(self_2768240808) {
    chckNilDisp(self_2768240808);
    if (isObj(self_2768240808.m_type, NTI3338665995)) {
    preventDefault_3338667126(self_2768240808);
    }
    else {
    if (isObj(self_2768240808.m_type, NTI2768240644)) {
    preventDefault_2768240807(self_2768240808);
    }
    }

  
}

function mustRehash_1291846256(t_1291846258) {
  var result_1291846259 = false;

    if (!((t_1291846258.counter < (t_1291846258.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291846259 = ((mulInt((t_1291846258.data).length, 2) < mulInt(t_1291846258.counter, 3)) || (subInt((t_1291846258.data).length, t_1291846258.counter) < 4));

  return result_1291846259;

}

function rawInsert_1291846705(t_1291846709, data_1291846710, data_1291846710_Idx, key_1291846711, val_1291846712, hc_1291846713, h_1291846714) {
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field1 = key_1291846711;
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field2 = val_1291846712;
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field0 = hc_1291846713;

  
}

function enlarge_1291846411(t_1291846414) {
    var n_1291846417 = [];
    n_1291846417 = new Array(chckRange(mulInt((t_1291846414.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291846414.data).length, 2), 0, 2147483647) ; ++i) { n_1291846417[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_1291846414.data; t_1291846414.data = n_1291846417; n_1291846417 = Temporary1;    Label2: {
      var i_1291846481 = 0;
      var colontmp__536872576 = 0;
      colontmp__536872576 = (n_1291846417).length - 1;
      var res_536872577 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872577 <= colontmp__536872576)) break Label4;
            i_1291846481 = res_536872577;
            var eh_1291846535 = n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291846535)) {
            var j_1291846539 = (eh_1291846535 & (t_1291846414.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291846414.data[chckIndx(j_1291846539, 0, (t_1291846414.data).length - 1)].Field0)) break Label6;
                  j_1291846539 = nextTry_1308622883(j_1291846539, (t_1291846414.data).length - 1);
                }
            };
            rawInsert_1291846705(t_1291846414, t_1291846414, "data", n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field1, n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field2, eh_1291846535, j_1291846539);
            }
            
            res_536872577 = addInt(res_536872577, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291846874(t_1291846877, key_1291846878, hc_1291846879) {
  var result_1291846880 = 0;

  BeforeRet: {
    if (((t_1291846877.data).length == 0)) {
    result_1291846880 = -1;
    break BeforeRet;
    }
    
    var h_1291846931 = (hc_1291846879 & (t_1291846877.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field0)) break Label2;
          if (((t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field0 == hc_1291846879) && (t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field1 == key_1291846878))) {
          result_1291846880 = h_1291846931;
          break BeforeRet;
          }
          
          h_1291846931 = nextTry_1308622883(h_1291846931, (t_1291846877.data).length - 1);
        }
    };
    result_1291846880 = subInt(-1, h_1291846931);
  };

  return result_1291846880;

}

function HEX5BHEX5DHEX3D_1291845847(t_1291845850, key_1291845851, val_1291845852) {
    if (((t_1291845850.data).length == 0)) {
    var correctSizeHEX60gensym1_1291845902 = slotsNeeded_1308622891(32);
    t_1291845850.counter = 0;
    t_1291845850.data = new Array(chckRange(correctSizeHEX60gensym1_1291845902, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1291845902, 0, 2147483647) ; ++i) { t_1291845850.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_1291845907 = [0];
    var index_1291846149 = rawGet_1291845908(t_1291845850, key_1291845851, hc_1291845907, 0);
    if ((0 <= index_1291846149)) {
    t_1291845850.data[chckIndx(index_1291846149, 0, (t_1291845850.data).length - 1)].Field2 = val_1291845852;
    }
    else {
      if (((t_1291845850.data).length == 0)) {
      var correctSizeHEX60gensym6_1291846251 = slotsNeeded_1308622891(32);
      t_1291845850.counter = 0;
      t_1291845850.data = new Array(chckRange(correctSizeHEX60gensym6_1291846251, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1291846251, 0, 2147483647) ; ++i) { t_1291845850.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1291846256(t_1291845850)) {
      enlarge_1291846411(t_1291845850);
      index_1291846149 = rawGetKnownHC_1291846874(t_1291845850, key_1291845851, hc_1291845907[0]);
      }
      
      index_1291846149 = subInt(-1, index_1291846149);
      rawInsert_1291846705(t_1291845850, t_1291845850, "data", key_1291845851, val_1291845852, hc_1291845907[0], index_1291846149);
      t_1291845850.counter = addInt(t_1291845850.counter, 1);
    }
    

  
}

function registerEditor_1291845804(self_1291845805, editor_1291845806) {
    HEX5BHEX5DHEX3D_1291845847(self_1291845805.editors, editor_1291845806.id, editor_1291845806);
    invoke_1291847134(self_1291845805.onEditorRegistered, editor_1291845806);

  
}

function handleInput_2969584861(self_2969584862, input_2969584863) {
  var result_2969584864 = 0;

  BeforeRet: {
    result_2969584864 = 1;
    break BeforeRet;
  };

  return result_2969584864;

}

function injectDependencies_2969585169(self_2969585170, ed_2969585171) {
      
function HEX3Aanonymous_2969585191(actionHEX60gensym1071HEX60gensym1072_2969585192, argHEX60gensym1071HEX60gensym1072_2969585193) {
        var result_2969585194 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1071_2969585179.config.handleActions) {
          var action_2969585195 = nimCopy(null, actionHEX60gensym1071HEX60gensym1072_2969585192, NTI33554449);
          var arg_2969585196 = nimCopy(null, argHEX60gensym1071HEX60gensym1072_2969585193, NTI33554449);
          var responseHEX60gensym1071HEX60gensym1072_2969585197 = handleAction_2969583817(self_2969585170, action_2969585195, arg_2969585196);
          if (handlerHEX60gensym1071_2969585179.config.consumeAllActions) {
          result_2969585194 = 3;
          break BeforeRet;
          }
          
          result_2969585194 = responseHEX60gensym1071HEX60gensym1072_2969585197;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1071_2969585179.config.consumeAllActions) {
          result_2969585194 = 3;
          break BeforeRet;
          }
          else {
            result_2969585194 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2969585194;

      }
      
function HEX3Aanonymous_2969585199(inputHEX60gensym1071HEX60gensym1073_2969585200) {
        var result_2969585201 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1071_2969585179.config.handleInputs) {
          var input_2969585202 = nimCopy(null, inputHEX60gensym1071HEX60gensym1073_2969585200, NTI33554449);
          result_2969585201 = handleInput_2969584861(self_2969585170, input_2969585202);
          break BeforeRet;
          }
          else {
            result_2969585201 = 1;
            break BeforeRet;
          }
          
        };

        return result_2969585201;

      }
      
function HEX3Aanonymous_2969585222(actionHEX60gensym1074HEX60gensym1075_2969585223, argHEX60gensym1074HEX60gensym1075_2969585224) {
        var result_2969585225 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1074_2969585210.config.handleActions) {
          var action_2969585226 = nimCopy(null, actionHEX60gensym1074HEX60gensym1075_2969585223, NTI33554449);
          var arg_2969585227 = nimCopy(null, argHEX60gensym1074HEX60gensym1075_2969585224, NTI33554449);
          var responseHEX60gensym1074HEX60gensym1075_2969585228 = handleAction_2969583817(self_2969585170, action_2969585226, arg_2969585227);
          if (handlerHEX60gensym1074_2969585210.config.consumeAllActions) {
          result_2969585225 = 3;
          break BeforeRet;
          }
          
          result_2969585225 = responseHEX60gensym1074HEX60gensym1075_2969585228;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1074_2969585210.config.consumeAllActions) {
          result_2969585225 = 3;
          break BeforeRet;
          }
          else {
            result_2969585225 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2969585225;

      }
      
function HEX3Aanonymous_2969585230(inputHEX60gensym1074HEX60gensym1076_2969585231) {
        var result_2969585232 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1074_2969585210.config.handleInputs) {
          var input_2969585233 = nimCopy(null, inputHEX60gensym1074HEX60gensym1076_2969585231, NTI33554449);
          result_2969585232 = 1;
          break BeforeRet;
          }
          else {
            result_2969585232 = 1;
            break BeforeRet;
          }
          
        };

        return result_2969585232;

      }

    self_2969585170.editor = ed_2969585171;
    registerEditor_1291845804(self_2969585170.editor, self_2969585170);
    Label1: {
      var handlerHEX60gensym1071_2969585179 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1071_2969585179.config = getEventHandlerConfig_1291849162(ed_2969585171, [101,100,105,116,111,114,46,97,115,116]);
      handlerHEX60gensym1071_2969585179.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2969585171, [101,100,105,116,111,114,46,97,115,116]));
      handlerHEX60gensym1071_2969585179.handleAction = HEX3Aanonymous_2969585191;
      handlerHEX60gensym1071_2969585179.handleInput = HEX3Aanonymous_2969585199;
    };
    self_2969585170.eventHandler = handlerHEX60gensym1071_2969585179;
    Label2: {
      var handlerHEX60gensym1074_2969585210 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1074_2969585210.config = getEventHandlerConfig_1291849162(ed_2969585171, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1074_2969585210.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2969585171, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1074_2969585210.handleAction = HEX3Aanonymous_2969585222;
      handlerHEX60gensym1074_2969585210.handleInput = HEX3Aanonymous_2969585230;
    };
    self_2969585170.textEditEventHandler = handlerHEX60gensym1074_2969585210;

  
}

function injectDependencies_2818593923(self_2818593924, ed_2818593925) {
      
function HEX3Aanonymous_2818593946(actionHEX60gensym1031HEX60gensym1032_2818593947, argHEX60gensym1031HEX60gensym1032_2818593948) {
        var result_2818593949 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1031_2818593934.config.handleActions) {
          var action_2818593950 = nimCopy(null, actionHEX60gensym1031HEX60gensym1032_2818593947, NTI33554449);
          var arg_2818593951 = nimCopy(null, argHEX60gensym1031HEX60gensym1032_2818593948, NTI33554449);
          var responseHEX60gensym1031HEX60gensym1032_2818593952 = handleAction_2818572653(self_2818593924, action_2818593950, arg_2818593951);
          if (handlerHEX60gensym1031_2818593934.config.consumeAllActions) {
          result_2818593949 = 3;
          break BeforeRet;
          }
          
          result_2818593949 = responseHEX60gensym1031HEX60gensym1032_2818593952;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1031_2818593934.config.consumeAllActions) {
          result_2818593949 = 3;
          break BeforeRet;
          }
          else {
            result_2818593949 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818593949;

      }
      
function HEX3Aanonymous_2818593954(inputHEX60gensym1031HEX60gensym1033_2818593955) {
        var result_2818593956 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1031_2818593934.config.handleInputs) {
          var input_2818593957 = nimCopy(null, inputHEX60gensym1031HEX60gensym1033_2818593955, NTI33554449);
          result_2818593956 = handleInput_2818572661(self_2818593924, input_2818593957);
          break BeforeRet;
          }
          else {
            result_2818593956 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818593956;

      }
      
function HEX3Aanonymous_2818593977(actionHEX60gensym1034HEX60gensym1035_2818593978, argHEX60gensym1034HEX60gensym1035_2818593979) {
        var result_2818593980 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1034_2818593965.config.handleActions) {
          var action_2818593981 = nimCopy(null, actionHEX60gensym1034HEX60gensym1035_2818593978, NTI33554449);
          var arg_2818593982 = nimCopy(null, argHEX60gensym1034HEX60gensym1035_2818593979, NTI33554449);
          var responseHEX60gensym1034HEX60gensym1035_2818593983 = handleAction_2818572653(self_2818593924, action_2818593981, arg_2818593982);
          if (handlerHEX60gensym1034_2818593965.config.consumeAllActions) {
          result_2818593980 = 3;
          break BeforeRet;
          }
          
          result_2818593980 = responseHEX60gensym1034HEX60gensym1035_2818593983;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1034_2818593965.config.consumeAllActions) {
          result_2818593980 = 3;
          break BeforeRet;
          }
          else {
            result_2818593980 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818593980;

      }
      
function HEX3Aanonymous_2818593985(inputHEX60gensym1034HEX60gensym1036_2818593986) {
        var result_2818593987 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1034_2818593965.config.handleInputs) {
          var input_2818593988 = nimCopy(null, inputHEX60gensym1034HEX60gensym1036_2818593986, NTI33554449);
          result_2818593987 = handleInput_2818572661(self_2818593924, input_2818593988);
          break BeforeRet;
          }
          else {
            result_2818593987 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818593987;

      }

    self_2818593924.editor = ed_2818593925;
    registerEditor_1291845804(self_2818593924.editor, self_2818593924);
    var config_2818593926 = getEventHandlerConfig_1291849162(ed_2818593925, [101,100,105,116,111,114,46,116,101,120,116]);
    Label1: {
      var handlerHEX60gensym1031_2818593934 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1031_2818593934.config = config_2818593926;
      handlerHEX60gensym1031_2818593934.dfaInternal = buildDFA_2113929279(config_2818593926);
      handlerHEX60gensym1031_2818593934.handleAction = HEX3Aanonymous_2818593946;
      handlerHEX60gensym1031_2818593934.handleInput = HEX3Aanonymous_2818593954;
    };
    self_2818593924.eventHandler = handlerHEX60gensym1031_2818593934;
    Label2: {
      var handlerHEX60gensym1034_2818593965 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1034_2818593965.config = getEventHandlerConfig_1291849162(ed_2818593925, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1034_2818593965.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2818593925, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1034_2818593965.handleAction = HEX3Aanonymous_2818593977;
      handlerHEX60gensym1034_2818593965.handleInput = HEX3Aanonymous_2818593985;
    };
    self_2818593924.completionEventHandler = handlerHEX60gensym1034_2818593965;

  
}

function injectDependencies_1291847758(self_1291847759, ed_1291847760) {
  
}

function injectDependencies_1291847761(self_1291847759, ed_1291847760) {
    chckNilDisp(self_1291847759);
    if (isObj(self_1291847759.m_type, NTI2969568620)) {
    injectDependencies_2969585169(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2818572510)) {
    injectDependencies_2818593923(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2415919108)) {
    injectDependencies_1291847758(self_1291847759, ed_1291847760);
    }
    }}

  
}

function getOrDefault_1291848310(t_1291848313, key_1291848314, default_1291848315) {
    var Temporary1;

  var result_1291848316 = 0.0;

    var hcHEX60gensym20_1291848319 = [0];
    var indexHEX60gensym20_1291848559 = rawGet_1291848320(t_1291848313, key_1291848314, hcHEX60gensym20_1291848319, 0);
    if ((0 <= indexHEX60gensym20_1291848559)) {
    Temporary1 = t_1291848313.data[chckIndx(indexHEX60gensym20_1291848559, 0, (t_1291848313.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1291848315;
    }
    
    result_1291848316 = Temporary1;

  return result_1291848316;

}

function value_2130706482(m_2130706483) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2130706484 = 0.0;

  BeforeRet: {
    switch (m_2130706483.kind) {
    case 0:
      var Temporary1 = m_2130706483;
      if (ConstSet323[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rel\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2130706435)); }
      result_2130706484 = Temporary1.rel;
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = m_2130706483;
      if (ConstSet324[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'abs\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2130706435)); }
      result_2130706484 = Temporary2.abs;
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = m_2130706483;
      if (ConstSet325[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'per\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2130706435)); }
      result_2130706484 = Temporary3.per;
      break BeforeRet;
      break;
    }
  };

  return result_2130706484;

}

function apply_2130706507(m_2130706508, a_2130706509, b_2130706510) {
  var result_2130706511 = 0.0;

  BeforeRet: {
    switch (m_2130706508.kind) {
    case 0:
      var v_2130706522 = value_2130706482(m_2130706508);
      result_2130706511 = (a_2130706509 + v_2130706522);
      break BeforeRet;
      break;
    case 1:
      var v_2130706523 = value_2130706482(m_2130706508);
      result_2130706511 = v_2130706523;
      break BeforeRet;
      break;
    case 2:
      var v_2130706524 = value_2130706482(m_2130706508);
      result_2130706511 = (a_2130706509 + (v_2130706524 * (b_2130706510 - a_2130706509)));
      break BeforeRet;
      break;
    }
  };

  return result_2130706511;

}

function splitV_2130706537(r_2130706538, x_2130706539) {
  var result_2130706542 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2130706542.Field0 = nimCopy(result_2130706542.Field0, r_2130706538, NTI2147483653);
    result_2130706542.Field1 = nimCopy(result_2130706542.Field1, r_2130706538, NTI2147483653);
    result_2130706542.Field0.w = (apply_2130706507(x_2130706539, r_2130706538.x, (r_2130706538.x + r_2130706538.w)) - r_2130706538.x);
    result_2130706542.Field1.x = (result_2130706542.Field0.x + result_2130706542.Field0.w);
    result_2130706542.Field1.w = (result_2130706542.Field1.w - result_2130706542.Field0.w);

  return result_2130706542;

}

function percent_2130706479(value_2130706480) {
  var result_2130706481 = ({kind: 0, rel: 0.0, abs: 0.0, per: 0.0});

  BeforeRet: {
    result_2130706481 = nimCopy(result_2130706481, {kind: 2, per: value_2130706480, rel: 0.0, abs: 0.0}, NTI2130706436);
    break BeforeRet;
  };

  return result_2130706481;

}

function splitH_2130706525(r_2130706526, y_2130706527) {
  var result_2130706530 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2130706530.Field0 = nimCopy(result_2130706530.Field0, r_2130706526, NTI2147483653);
    result_2130706530.Field1 = nimCopy(result_2130706530.Field1, r_2130706526, NTI2147483653);
    result_2130706530.Field0.h = (apply_2130706507(y_2130706527, r_2130706526.y, (r_2130706526.y + r_2130706526.h)) - r_2130706526.y);
    result_2130706530.Field1.y = (result_2130706530.Field0.y + result_2130706530.Field0.h);
    result_2130706530.Field1.h = (result_2130706530.Field1.h - result_2130706530.Field0.h);

  return result_2130706530;

}

function layoutViews_1291848745(layout_1291848746, props_1291848747, bounds_1291848748, views_1291848749) {
            var Temporary4;
            var Temporary5;

  var result_1291848750 = [];

    var mainSplit_1291848823 = getOrDefault_1291848310(props_1291848747.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848750 = nimCopy(null, [], NTI1291847200);
    var rect_1291848828 = nimCopy(null, bounds_1291848748, NTI2147483653);
    Label1: {
      var i_1291848833 = 0;
      var i_536872583 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872583 < views_1291848749)) break Label3;
            i_1291848833 = i_536872583;
            if (((i_1291848833 == 0) && (1 < views_1291848749))) {
            Temporary4 = mainSplit_1291848823;
            }
            else {
            if ((i_1291848833 == subInt(views_1291848749, 1))) {
            Temporary4 = 1.0;
            }
            else {
            Temporary4 = 0.5;
            }
            }
            var ratio_1291848834 = Temporary4;
            if ((modInt(i_1291848833, 2) == 0)) {
            Temporary5 = splitV_2130706537(rect_1291848828, percent_2130706479(ratio_1291848834));
            }
            else {
            Temporary5 = splitH_2130706525(rect_1291848828, percent_2130706479(ratio_1291848834));
            }
            
            var colontmp__536872585 = nimCopy(null, Temporary5, NTI2130706495);
            var view_rect_1291848835 = nimCopy(null, colontmp__536872585["Field0"], NTI2147483653);
            var remaining_1291848836 = nimCopy(null, colontmp__536872585["Field1"], NTI2147483653);
            rect_1291848828 = nimCopy(rect_1291848828, remaining_1291848836, NTI2147483653);
            var Temporary6 = nimCopy(null, view_rect_1291848835, NTI2147483653);
            result_1291848750.push(Temporary6);;
            i_536872583 = addInt(i_536872583, 1);
          }
      };
    };

  return result_1291848750;

}

function layoutViews_1291848649(layout_1291848650, props_1291848651, bounds_1291848652, views_1291848653) {
            var Temporary4;

  var result_1291848654 = [];

    var mainSplit_1291848727 = getOrDefault_1291848310(props_1291848651.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848654 = nimCopy(null, [], NTI1291847200);
    var rect_1291848732 = nimCopy(null, bounds_1291848652, NTI2147483653);
    Label1: {
      var i_1291848737 = 0;
      var i_536872587 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872587 < views_1291848653)) break Label3;
            i_1291848737 = i_536872587;
            if (((i_1291848737 == 0) && (1 < views_1291848653))) {
            Temporary4 = mainSplit_1291848727;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848653, i_1291848737));
            }
            
            var ratio_1291848738 = Temporary4;
            var colontmp__536872589 = splitH_2130706525(rect_1291848732, percent_2130706479(ratio_1291848738));
            var view_rect_1291848739 = nimCopy(null, colontmp__536872589["Field0"], NTI2147483653);
            var remaining_1291848740 = nimCopy(null, colontmp__536872589["Field1"], NTI2147483653);
            rect_1291848732 = nimCopy(rect_1291848732, remaining_1291848740, NTI2147483653);
            var Temporary5 = nimCopy(null, view_rect_1291848739, NTI2147483653);
            result_1291848654.push(Temporary5);;
            i_536872587 = addInt(i_536872587, 1);
          }
      };
    };

  return result_1291848654;

}

function layoutViews_1291848238(layout_1291848239, props_1291848240, bounds_1291848241, views_1291848242) {
            var Temporary4;

  var result_1291848243 = [];

    var mainSplit_1291848613 = getOrDefault_1291848310(props_1291848240.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848243 = nimCopy(null, [], NTI1291847200);
    var rect_1291848618 = nimCopy(null, bounds_1291848241, NTI2147483653);
    Label1: {
      var i_1291848623 = 0;
      var i_536872591 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872591 < views_1291848242)) break Label3;
            i_1291848623 = i_536872591;
            if (((i_1291848623 == 0) && (1 < views_1291848242))) {
            Temporary4 = mainSplit_1291848613;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848242, i_1291848623));
            }
            
            var ratio_1291848624 = Temporary4;
            var colontmp__536872593 = splitV_2130706537(rect_1291848618, percent_2130706479(ratio_1291848624));
            var view_rect_1291848625 = nimCopy(null, colontmp__536872593["Field0"], NTI2147483653);
            var remaining_1291848626 = nimCopy(null, colontmp__536872593["Field1"], NTI2147483653);
            rect_1291848618 = nimCopy(rect_1291848618, remaining_1291848626, NTI2147483653);
            var Temporary5 = nimCopy(null, view_rect_1291848625, NTI2147483653);
            result_1291848243.push(Temporary5);;
            i_536872591 = addInt(i_536872591, 1);
          }
      };
    };

  return result_1291848243;

}

function layoutViews_1291848208(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212) {
  var result_1291848213 = [];

  BeforeRet: {
    result_1291848213 = nimCopy(null, [nimCopy(null, bounds_1291848211, NTI2147483653)], NTI1291846989);
    break BeforeRet;
  };

  return result_1291848213;

}

function layoutViews_1291848236(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212) {
  var result_1291848237 = [];

  BeforeRet: {
    chckNilDisp(layout_1291848209);
    if (isObj(layout_1291848209.m_type, NTI1291845645)) {
    result_1291848237 = layoutViews_1291848745(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845644)) {
    result_1291848237 = layoutViews_1291848649(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845643)) {
    result_1291848237 = layoutViews_1291848238(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845642)) {
    result_1291848237 = layoutViews_1291848208(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    }}}
  };

  return result_1291848237;

}

function start_2919235633(self_2919235634) {
  
}

function start_2919235635(self_2919235634) {
    start_2919235633(self_2919235634);

  
}

function getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235650 = null;

  return result_2919235650;

}

function getDefinition_2919235651(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235652 = null;

  BeforeRet: {
    result_2919235652 = getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642);
    break BeforeRet;
  };

  return result_2919235652;

}

function getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235660 = null;

  return result_2919235660;

}

function getCompletions_2919235661(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235662 = null;

  BeforeRet: {
    result_2919235662 = getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657);
    break BeforeRet;
  };

  return result_2919235662;

}

function changed_1291850989(self_1291850990, other_1291850991) {
  var result_1291850992 = false;

  BeforeRet: {
    var other_1291850993 = other_1291850991;
    result_1291850992 = (!(eqStrings(self_1291850990.name, other_1291850993.name)) || !(eqStrings(self_1291850990.path, other_1291850993.path)));
    break BeforeRet;
  };

  return result_1291850992;

}

function changed_1291850975(self_1291850976, other_1291850977) {
  var result_1291850978 = false;

  BeforeRet: {
    var other_1291850979 = other_1291850977;
    result_1291850978 = !(eqStrings(self_1291850976.path, other_1291850979.path));
    break BeforeRet;
  };

  return result_1291850978;

}

function changed_3221225540(self_3221225541, other_3221225542) {
  var result_3221225543 = false;

  return result_3221225543;

}

function changed_3221225544(self_3221225541, other_3221225542) {
  var result_3221225545 = false;

  BeforeRet: {
    chckNilDisp(self_3221225541);
    if (isObj(self_3221225541.m_type, NTI1291848506)) {
    result_3221225545 = changed_1291850989(self_3221225541, other_3221225542);
    break BeforeRet;
    }
    else {
    if (isObj(self_3221225541.m_type, NTI1291848508)) {
    result_3221225545 = changed_1291850975(self_3221225541, other_3221225542);
    break BeforeRet;
    }
    else {
    if (isObj(self_3221225541.m_type, NTI3221225480)) {
    result_3221225545 = changed_3221225540(self_3221225541, other_3221225542);
    break BeforeRet;
    }
    }}
  };

  return result_3221225545;

}

function active_2415919218(self_2415919219) {
  var result_2415919220 = false;

    result_2415919220 = self_2415919219.active;

  return result_2415919220;

}

function updateBackgroundColor_2785017934(self_2785017935, color_2785017936, frameIndex_2785017937) {
    if (!(HEX3DHEX3D_2785017924(self_2785017935.backgroundColor, color_2785017936))) {
    self_2785017935.lastHierarchyChange = nimMax(self_2785017935.lastHierarchyChange, frameIndex_2785017937);
    }
    
    self_2785017935.backgroundColor = nimCopy(self_2785017935.backgroundColor, color_2785017936, NTI2550136835);

  
}

function HEX24_2449473860(selection_2449473861) {
  var result_2449473862 = [];

  BeforeRet: {
    result_2449473862 = nimCopy(null, (HEX24_2449473857(selection_2449473861.Field0) || []).concat([45] || [],HEX24_2449473857(selection_2449473861.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2449473862;

}

function formatValue_2818572415(result_2818572417, result_2818572417_Idx, value_2818572418, specifier_2818572419) {
    formatValue_721420459(result_2818572417, result_2818572417_Idx, HEX24_2449473860(value_2818572418), specifier_2818572419);

  
}

function HEX2A_2566914051(c_2566914052, v_2566914053) {
  var result_2566914054 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2566914054.r = (c_2566914052.r * v_2566914053);
    result_2566914054.g = (c_2566914052.g * v_2566914053);
    result_2566914054.b = (c_2566914052.b * v_2566914053);
    result_2566914054.a = (c_2566914052.a * v_2566914053);

  return result_2566914054;

}

function changed_2785018181(self_2785018182, frameIndex_2785018183) {
  var result_2785018184 = false;

    result_2785018184 = (((frameIndex_2785018183 <= self_2785018182.lastBoundsChange) || (frameIndex_2785018183 <= self_2785018182.lastHierarchyChange)) || (frameIndex_2785018183 <= self_2785018182.lastInvalidation));

  return result_2785018184;

}

function dirty_2415919140(self_2415919141) {
  var result_2415919142 = false;

    result_2415919142 = self_2415919141.mDirty;

  return result_2415919142;

}

function resetDirty_2415919213(self_2415919214) {
    self_2415919214.mDirty = false;

  
}

function clamp_3288334378(val_3288334380, bounds_3288334381) {
  var result_3288334382 = 0;

    if (!((bounds_3288334381.a <= bounds_3288334381.b))) {
    failedAssertImpl_268435515(([109,97,116,104,46,110,105,109,40,49,50,53,51,44,32,51,41,32,96,98,111,117,110,100,115,46,97,32,60,61,32,98,111,117,110,100,115,46,98,96,32] || []).concat(HEX24_2449473857({Field0: bounds_3288334381.a, Field1: bounds_3288334381.b}) || []));
    }
    
    result_3288334382 = clamp_1660945119(val_3288334380, bounds_3288334381.a, bounds_3288334381.b);

  return result_3288334382;

}

function updateBaseIndexAndScrollOffset_3305111624(contentPanel_3305111625, previousBaseIndex_3305111626, previousBaseIndex_3305111626_Idx, scrollOffset_3305111627, scrollOffset_3305111627_Idx, lines_3305111628, totalLineHeight_3305111629, targetLine_3305111631) {
      var Temporary1;

      var oHEX60gensym2_3305111634 = nimCopy(null, targetLine_3305111631, NTI1191183280);
      if (!isSome_1191185117(oHEX60gensym2_3305111634)) Temporary1 = false; else {        var targetLine_3305111657 = get_1191185211(oHEX60gensym2_3305111634);
        Temporary1 = true;      }    if (Temporary1) {
    var targetLineY_3305111658 = ((subInt(targetLine_3305111657, previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx]) * totalLineHeight_3305111629) + scrollOffset_3305111627[scrollOffset_3305111627_Idx]);
    var margin_3305111659 = 0.0;
    if ((targetLineY_3305111658 < margin_3305111659)) {
    scrollOffset_3305111627[scrollOffset_3305111627_Idx] = margin_3305111659;
    previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx] = targetLine_3305111657;
    }
    else {
    if (((contentPanel_3305111625.lastBounds.h - margin_3305111659) < (targetLineY_3305111658 + totalLineHeight_3305111629))) {
    scrollOffset_3305111627[scrollOffset_3305111627_Idx] = ((contentPanel_3305111625.lastBounds.h - margin_3305111659) - totalLineHeight_3305111629);
    previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx] = targetLine_3305111657;
    }
    }
    }
    
    previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx] = clamp_3288334378(previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx], HEX2EHEX2E_805306418(0, lines_3305111628));
    Label2: {
        Label3: while (true) {
        if (!((scrollOffset_3305111627[scrollOffset_3305111627_Idx] < 0.0) && (addInt(previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx], 1) < lines_3305111628))) break Label3;
          if ((contentPanel_3305111625.lastBounds.h <= (scrollOffset_3305111627[scrollOffset_3305111627_Idx] + totalLineHeight_3305111629))) {
          break Label2;
          }
          
          previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx] = addInt(previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx], 1);
          HEX2BHEX3D_855640304(scrollOffset_3305111627, scrollOffset_3305111627_Idx, totalLineHeight_3305111629);
        }
    };
    Label4: {
        Label5: while (true) {
        if (!((contentPanel_3305111625.lastBounds.h < scrollOffset_3305111627[scrollOffset_3305111627_Idx]) && (0 < previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx]))) break Label5;
          if (((scrollOffset_3305111627[scrollOffset_3305111627_Idx] - totalLineHeight_3305111629) <= 0.0)) {
          break Label4;
          }
          
          previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx] = subInt(previousBaseIndex_3305111626[previousBaseIndex_3305111626_Idx], 1);
          HEX2DHEX3D_2818594209(scrollOffset_3305111627, scrollOffset_3305111627_Idx, totalLineHeight_3305111629);
        }
    };

  
}

function initTable_3305112077(initialSize_3305112080) {
  var result_3305112081 = ({data: [], counter: 0});

    var correctSizeHEX60gensym13_3305112083 = slotsNeeded_1308622891(chckRange(initialSize_3305112080, 0, 2147483647));
    result_3305112081.counter = 0;
    result_3305112081.data = new Array(chckRange(correctSizeHEX60gensym13_3305112083, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_3305112083, 0, 2147483647) ; ++i) { result_3305112081.data[i] = {Field0: 0, Field1: 0, Field2: []}; }
  return result_3305112081;

}

function mgetOrPut_3305112129(t_3305112132, key_3305112133, val_3305112134) {
  var result_3305112135 = null;
  var result_3305112135_Idx = 0;

    if (((t_3305112132.data).length == 0)) {
    var correctSizeHEX60gensym16_3305112184 = slotsNeeded_1308622891(32);
    t_3305112132.counter = 0;
    t_3305112132.data = new Array(chckRange(correctSizeHEX60gensym16_3305112184, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3305112184, 0, 2147483647) ; ++i) { t_3305112132.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3305112189 = [0];
    var index_3305112196 = rawGet_2818581104(t_3305112132, key_3305112133, hc_3305112189, 0);
    if ((index_3305112196 < 0)) {
    if (((t_3305112132.data).length == 0)) {
    var correctSizeHEX60gensym19_3305112245 = slotsNeeded_1308622891(32);
    t_3305112132.counter = 0;
    t_3305112132.data = new Array(chckRange(correctSizeHEX60gensym19_3305112245, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym19_3305112245, 0, 2147483647) ; ++i) { t_3305112132.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    if (mustRehash_2818581580(t_3305112132)) {
    enlarge_2818581783(t_3305112132);
    index_3305112196 = rawGetKnownHC_2818582430(t_3305112132, key_3305112133, hc_3305112189[0]);
    }
    
    index_3305112196 = subInt(-1, index_3305112196);
    rawInsert_2818582189(t_3305112132, t_3305112132, "data", key_3305112133, val_3305112134, hc_3305112189[0], index_3305112196);
    t_3305112132.counter = addInt(t_3305112132.counter, 1);
    }
    
    result_3305112135 = t_3305112132.data[chckIndx(index_3305112196, 0, (t_3305112132.data).length - 1)]; result_3305112135_Idx = "Field2";

  return [result_3305112135, result_3305112135_Idx];

}

function isSome_3305112416(self_3305112418) {
  var result_3305112419 = false;

    result_3305112419 = self_3305112418.has;

  return result_3305112419;

}

function get_3305112407(self_3305112409, otherwise_3305112410) {
    var Temporary1;

  var result_3305112411 = 0;

    if (isSome_3305112416(self_3305112409)) {
    Temporary1 = self_3305112409.val;
    }
    else {
    Temporary1 = otherwise_3305112410;
    }
    
    result_3305112411 = Temporary1;

  return result_3305112411;

}

function parseEnum_3305112382(s_3305112384, default_3305112385) {
    var Temporary1;

  var result_3305112386 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3305112384))) {
    case "none":
      Temporary1 = 0;
      break;
    case "Absolute":
      Temporary1 = 1;
      break;
    case "relative":
      Temporary1 = 2;
      break;
    default: 
      Temporary1 = default_3305112385;
      break;
    }
    result_3305112386 = Temporary1;

  return result_3305112386;

}

function getOption_3305112356(editor_3305112358, path_3305112359, default_3305112360) {
  var result_3305112366 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_3305112358 == null)) {
      result_3305112366 = default_3305112360;
      break BeforeRet;
      }
      
      var nodeHEX60gensym21_3305112378 = HEX7BHEX7D_1627393316(editor_3305112358.options, nsuSplitString(path_3305112359, [46], -1));
      if ((nodeHEX60gensym21_3305112378 == null)) {
      result_3305112366 = default_3305112360;
      break BeforeRet;
      }
      
    };
    result_3305112366 = parseEnum_3305112382(getStr_1627390106(nodeHEX60gensym21_3305112378, []), default_3305112360);
    break BeforeRet;
  };

  return result_3305112366;

}

function color_3305112457(theme_3305112459, names_3305112460, default_3305112461) {
  var result_3305112462 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3305112466 = [];
      var i_536872615 = 0;
      var L_536872616 = (names_3305112460).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872615 < L_536872616)) break Label3;
            name_3305112466 = names_3305112460[chckIndx(i_536872615, 0, (names_3305112460).length - 1)];
            if (contains_3187671619(theme_3305112459.colors, name_3305112466)) {
            result_3305112462 = nimCopy(result_3305112462, HEX5BHEX5D_3187671709(theme_3305112459.colors, name_3305112466), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872615 = addInt(i_536872615, 1);
            if (!(((names_3305112460).length == L_536872616))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3305112462 = nimCopy(result_3305112462, color_2634022945(default_3305112461), NTI2550136835);
    break BeforeRet;
  };

  return result_3305112462;

}

function color_2634022963(c_2634022964) {
  var result_2634022965 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022965.r = (c_2634022964.r / 255.0);
    result_2634022965.g = (c_2634022964.g / 255.0);
    result_2634022965.b = (c_2634022964.b / 255.0);
    result_2634022965.a = (c_2634022964.a / 255.0);

  return result_2634022965;

}

function color_3305112577(theme_3305112579, names_3305112580, default_3305112581) {
  var result_3305112582 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3305112586 = [];
      var i_536872619 = 0;
      var L_536872620 = (names_3305112580).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872619 < L_536872620)) break Label3;
            name_3305112586 = names_3305112580[chckIndx(i_536872619, 0, (names_3305112580).length - 1)];
            if (contains_3187671619(theme_3305112579.colors, name_3305112586)) {
            result_3305112582 = nimCopy(result_3305112582, HEX5BHEX5D_3187671709(theme_3305112579.colors, name_3305112586), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872619 = addInt(i_536872619, 1);
            if (!(((names_3305112580).length == L_536872620))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3305112582 = nimCopy(result_3305112582, color_2634022963(default_3305112581), NTI2550136835);
    break BeforeRet;
  };

  return result_3305112582;

}

function rgba_2550136933(r_2550136934, g_2550136935, b_2550136936, a_2550136937) {
  var result_2550136938 = ({r: 0, g: 0, b: 0, a: 0});

    result_2550136938 = nimCopy(result_2550136938, {r: r_2550136934, g: g_2550136935, b: b_2550136936, a: a_2550136937}, NTI2550136837);

  return result_2550136938;

}

function createLinesInPanel_3305111685(app_3305111686, contentPanel_3305111687, previousBaseIndex_3305111688, scrollOffset_3305111689, lines_3305111690, frameIndex_3305111691, renderLine_3305111697) {
    var totalLineHeight_3305111698 = totalLineHeight_2768240810(app_3305111686.platform);
    Label1: {
      var i_3305111703 = 0;
      var i_536872624 = previousBaseIndex_3305111688;
      Label2: {
          Label3: while (true) {
          if (!(i_536872624 < lines_3305111690)) break Label3;
            i_3305111703 = i_536872624;
            Label4: {
              var top_3305111704 = ((subInt(i_3305111703, previousBaseIndex_3305111688) * totalLineHeight_3305111698) + scrollOffset_3305111689);
              if ((contentPanel_3305111687.lastBounds.h <= top_3305111704)) {
              break Label1;
              }
              
              if (((top_3305111704 + totalLineHeight_3305111698) <= 0.0)) {
              break Label4;
              }
              
              var lineWidget_3305111705 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), left: 1.0, right: -1.0, top: top_3305111704, bottom: (top_3305111704 + totalLineHeight_3305111698), lastHierarchyChange: frameIndex_3305111691, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
              if (!(renderLine_3305111697(lineWidget_3305111705, i_3305111703, true, frameIndex_3305111691))) {
              break Label1;
              }
              
              contentPanel_3305111687.children.push(lineWidget_3305111705);;
            };
            i_536872624 = addInt(i_536872624, 1);
          }
      };
    };
    Label5: {
      var k_3305111714 = 0;
      var res_536872628 = 1;
      Label6: {
          Label7: while (true) {
          if (!(res_536872628 <= previousBaseIndex_3305111688)) break Label7;
            k_3305111714 = res_536872628;
            Label8: {
              var i_3305111715 = subInt(previousBaseIndex_3305111688, k_3305111714);
              var top_3305111716 = ((subInt(i_3305111715, previousBaseIndex_3305111688) * totalLineHeight_3305111698) + scrollOffset_3305111689);
              if ((contentPanel_3305111687.lastBounds.h <= top_3305111716)) {
              break Label8;
              }
              
              if (((top_3305111716 + totalLineHeight_3305111698) <= 0.0)) {
              break Label5;
              }
              
              var lineWidget_3305111717 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), left: 1.0, right: -1.0, top: top_3305111716, bottom: (top_3305111716 + totalLineHeight_3305111698), lastHierarchyChange: frameIndex_3305111691, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
              if (!(renderLine_3305111697(lineWidget_3305111717, i_3305111715, false, frameIndex_3305111691))) {
              break Label5;
              }
              
              contentPanel_3305111687.children.push(lineWidget_3305111717);;
            };
            res_536872628 = addInt(res_536872628, 1);
          }
      };
    };

  
}

function rawGet_2818574414(t_2818574417, key_2818574418, hc_2818574419, hc_2818574419_Idx) {
  var result_2818574420 = 0;

  BeforeRet: {
    hc_2818574419[hc_2818574419_Idx] = hash_1325400236(key_2818574418);
    if ((hc_2818574419[hc_2818574419_Idx] == 0)) {
    hc_2818574419[hc_2818574419_Idx] = 314159265;
    }
    
    if (((t_2818574417.data).length == 0)) {
    result_2818574420 = -1;
    break BeforeRet;
    }
    
    var h_2818574490 = (hc_2818574419[hc_2818574419_Idx] & (t_2818574417.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818574417.data[chckIndx(h_2818574490, 0, (t_2818574417.data).length - 1)].Field0)) break Label2;
          if (((t_2818574417.data[chckIndx(h_2818574490, 0, (t_2818574417.data).length - 1)].Field0 == hc_2818574419[hc_2818574419_Idx]) && (t_2818574417.data[chckIndx(h_2818574490, 0, (t_2818574417.data).length - 1)].Field1 == key_2818574418))) {
          result_2818574420 = h_2818574490;
          break BeforeRet;
          }
          
          h_2818574490 = nextTry_1308622883(h_2818574490, (t_2818574417.data).length - 1);
        }
    };
    result_2818574420 = subInt(-1, h_2818574490);
  };

  return result_2818574420;

}

function hasKey_2818574407(t_2818574410, key_2818574411) {
  var result_2818574412 = false;

    var hc_2818574413 = [0];
    result_2818574412 = (0 <= rawGet_2818574414(t_2818574410, key_2818574411, hc_2818574413, 0));

  return result_2818574412;

}

function contains_2818574401(t_2818574404, key_2818574405) {
  var result_2818574406 = false;

  BeforeRet: {
    result_2818574406 = hasKey_2818574407(t_2818574404, key_2818574405);
    break BeforeRet;
  };

  return result_2818574406;

}

function HEX5BHEX5D_2818574820(t_2818574823, key_2818574824) {
  var result_2818574825 = null;
  var result_2818574825_Idx = 0;

    var hcHEX60gensym22_2818574826 = [0];
    var indexHEX60gensym22_2818574833 = rawGet_2818574414(t_2818574823, key_2818574824, hcHEX60gensym22_2818574826, 0);
    if ((0 <= indexHEX60gensym22_2818574833)) {
    result_2818574825 = t_2818574823.data[chckIndx(indexHEX60gensym22_2818574833, 0, (t_2818574823.data).length - 1)]; result_2818574825_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_2818574824);
    }
    

  return [result_2818574825, result_2818574825_Idx];

}

function initTable_2818574928(initialSize_2818574931) {
  var result_2818574937 = ({data: [], counter: 0});

    var correctSizeHEX60gensym42_2818574939 = slotsNeeded_1308622891(chckRange(initialSize_2818574931, 0, 2147483647));
    result_2818574937.counter = 0;
    result_2818574937.data = new Array(chckRange(correctSizeHEX60gensym42_2818574939, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2818574939, 0, 2147483647) ; ++i) { result_2818574937.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }
  return result_2818574937;

}

function matches_2885681272(self_2885681273, node_2885681274, selection_2885681275) {
  var result_2885681276 = [];

  BeforeRet: {
    result_2885681276 = nimCopy(null, self_2885681273.matches(node_2885681274, {row: selection_2885681275.Field0.Field0, column: selection_2885681275.Field0.Field1, m_type: NTI2885681166}, {row: selection_2885681275.Field1.Field0, column: selection_2885681275.Field1.Field1, m_type: NTI2885681166}), NTI2885681249);
    break BeforeRet;
  };

  return result_2885681276;

}

function rawGet_2818575131(t_2818575134, key_2818575135, hc_2818575136, hc_2818575136_Idx) {
  var result_2818575137 = 0;

  BeforeRet: {
    hc_2818575136[hc_2818575136_Idx] = hash_1325400491(key_2818575135);
    if ((hc_2818575136[hc_2818575136_Idx] == 0)) {
    hc_2818575136[hc_2818575136_Idx] = 314159265;
    }
    
    if (((t_2818575134.data).length == 0)) {
    result_2818575137 = -1;
    break BeforeRet;
    }
    
    var h_2818575205 = (hc_2818575136[hc_2818575136_Idx] & (t_2818575134.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818575134.data[chckIndx(h_2818575205, 0, (t_2818575134.data).length - 1)].Field0)) break Label2;
          if (((t_2818575134.data[chckIndx(h_2818575205, 0, (t_2818575134.data).length - 1)].Field0 == hc_2818575136[hc_2818575136_Idx]) && eqStrings(t_2818575134.data[chckIndx(h_2818575205, 0, (t_2818575134.data).length - 1)].Field1, key_2818575135))) {
          result_2818575137 = h_2818575205;
          break BeforeRet;
          }
          
          h_2818575205 = nextTry_1308622883(h_2818575205, (t_2818575134.data).length - 1);
        }
    };
    result_2818575137 = subInt(-1, h_2818575205);
  };

  return result_2818575137;

}

function hasKey_2818575124(t_2818575127, key_2818575128) {
  var result_2818575129 = false;

    var hc_2818575130 = [0];
    result_2818575129 = (0 <= rawGet_2818575131(t_2818575127, key_2818575128, hc_2818575130, 0));

  return result_2818575129;

}

function contains_2818575118(t_2818575121, key_2818575122) {
  var result_2818575123 = false;

  BeforeRet: {
    result_2818575123 = hasKey_2818575124(t_2818575121, key_2818575122);
    break BeforeRet;
  };

  return result_2818575123;

}

function HEX5BHEX5D_2818575526(t_2818575529, key_2818575530) {
  var result_2818575531 = null;

    var hcHEX60gensym22_2818575532 = [0];
    var indexHEX60gensym22_2818575539 = rawGet_2818575131(t_2818575529, key_2818575530, hcHEX60gensym22_2818575532, 0);
    if ((0 <= indexHEX60gensym22_2818575539)) {
    result_2818575531 = t_2818575529.data[chckIndx(indexHEX60gensym22_2818575539, 0, (t_2818575529.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2818575530);
    }
    

  return result_2818575531;

}

function mustRehash_2818575909(t_2818575911) {
  var result_2818575912 = false;

    if (!((t_2818575911.counter < (t_2818575911.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818575912 = ((mulInt((t_2818575911.data).length, 2) < mulInt(t_2818575911.counter, 3)) || (subInt((t_2818575911.data).length, t_2818575911.counter) < 4));

  return result_2818575912;

}

function rawInsert_2818576518(t_2818576522, data_2818576523, data_2818576523_Idx, key_2818576524, val_2818576525, hc_2818576526, h_2818576527) {
    data_2818576523[data_2818576523_Idx][chckIndx(h_2818576527, 0, (data_2818576523[data_2818576523_Idx]).length - 1)].Field1 = nimCopy(null, key_2818576524, NTI33554449);
    data_2818576523[data_2818576523_Idx][chckIndx(h_2818576527, 0, (data_2818576523[data_2818576523_Idx]).length - 1)].Field2 = nimCopy(data_2818576523[data_2818576523_Idx][chckIndx(h_2818576527, 0, (data_2818576523[data_2818576523_Idx]).length - 1)].Field2, val_2818576525, NTI2852126723);
    data_2818576523[data_2818576523_Idx][chckIndx(h_2818576527, 0, (data_2818576523[data_2818576523_Idx]).length - 1)].Field0 = hc_2818576526;

  
}

function enlarge_2818576112(t_2818576115) {
    var n_2818576118 = [];
    n_2818576118 = new Array(chckRange(mulInt((t_2818576115.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818576115.data).length, 2), 0, 2147483647) ; ++i) { n_2818576118[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    var Temporary1 = t_2818576115.data; t_2818576115.data = n_2818576118; n_2818576118 = Temporary1;    Label2: {
      var i_2818576198 = 0;
      var colontmp__536872658 = 0;
      colontmp__536872658 = (n_2818576118).length - 1;
      var res_536872659 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872659 <= colontmp__536872658)) break Label4;
            i_2818576198 = res_536872659;
            var eh_2818576276 = n_2818576118[chckIndx(i_2818576198, 0, (n_2818576118).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818576276)) {
            var j_2818576280 = (eh_2818576276 & (t_2818576115.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818576115.data[chckIndx(j_2818576280, 0, (t_2818576115.data).length - 1)].Field0)) break Label6;
                  j_2818576280 = nextTry_1308622883(j_2818576280, (t_2818576115.data).length - 1);
                }
            };
            rawInsert_2818576518(t_2818576115, t_2818576115, "data", n_2818576118[chckIndx(i_2818576198, 0, (n_2818576118).length - 1)].Field1, n_2818576118[chckIndx(i_2818576198, 0, (n_2818576118).length - 1)].Field2, eh_2818576276, j_2818576280);
            }
            
            res_536872659 = addInt(res_536872659, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818576759(t_2818576762, key_2818576763, hc_2818576764) {
  var result_2818576765 = 0;

  BeforeRet: {
    if (((t_2818576762.data).length == 0)) {
    result_2818576765 = -1;
    break BeforeRet;
    }
    
    var h_2818576832 = (hc_2818576764 & (t_2818576762.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818576762.data[chckIndx(h_2818576832, 0, (t_2818576762.data).length - 1)].Field0)) break Label2;
          if (((t_2818576762.data[chckIndx(h_2818576832, 0, (t_2818576762.data).length - 1)].Field0 == hc_2818576764) && eqStrings(t_2818576762.data[chckIndx(h_2818576832, 0, (t_2818576762.data).length - 1)].Field1, key_2818576763))) {
          result_2818576765 = h_2818576832;
          break BeforeRet;
          }
          
          h_2818576832 = nextTry_1308622883(h_2818576832, (t_2818576762.data).length - 1);
        }
    };
    result_2818576765 = subInt(-1, h_2818576832);
  };

  return result_2818576765;

}

function HEX5BHEX5DHEX3D_2818575680(t_2818575683, key_2818575684, val_2818575685) {
    if (((t_2818575683.data).length == 0)) {
    var correctSizeHEX60gensym56_2818575750 = slotsNeeded_1308622891(32);
    t_2818575683.counter = 0;
    t_2818575683.data = new Array(chckRange(correctSizeHEX60gensym56_2818575750, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_2818575750, 0, 2147483647) ; ++i) { t_2818575683.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    }
    
    var hc_2818575755 = [0];
    var index_2818575762 = rawGet_2818575131(t_2818575683, key_2818575684, hc_2818575755, 0);
    if ((0 <= index_2818575762)) {
    t_2818575683.data[chckIndx(index_2818575762, 0, (t_2818575683.data).length - 1)].Field2 = nimCopy(t_2818575683.data[chckIndx(index_2818575762, 0, (t_2818575683.data).length - 1)].Field2, val_2818575685, NTI2852126723);
    }
    else {
      if (((t_2818575683.data).length == 0)) {
      var correctSizeHEX60gensym59_2818575904 = slotsNeeded_1308622891(32);
      t_2818575683.counter = 0;
      t_2818575683.data = new Array(chckRange(correctSizeHEX60gensym59_2818575904, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_2818575904, 0, 2147483647) ; ++i) { t_2818575683.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }      }
      
      if (mustRehash_2818575909(t_2818575683)) {
      enlarge_2818576112(t_2818575683);
      index_2818575762 = rawGetKnownHC_2818576759(t_2818575683, key_2818575684, hc_2818575755[0]);
      }
      
      index_2818575762 = subInt(-1, index_2818575762);
      rawInsert_2818576518(t_2818575683, t_2818575683, "data", key_2818575684, val_2818575685, hc_2818575755[0], index_2818575762);
      t_2818575683.counter = addInt(t_2818575683.counter, 1);
    }
    

  
}

function HEX24_2885681319(node_2885681320) {
  var result_2885681321 = [];

  BeforeRet: {
    result_2885681321 = nimCopy(null, cstrToNimstr(node_2885681320.toString()), NTI33554449);
    break BeforeRet;
  };

  return result_2885681321;

}

function formatValue_2818577309(result_2818577311, result_2818577311_Idx, value_2818577312, specifier_2818577313) {
    formatValue_721420459(result_2818577311, result_2818577311_Idx, HEX24_2885681319(value_2818577312), specifier_2818577313);

  
}

function insert_2818574277(x_2818574279, x_2818574279_Idx, item_2818574280, i_2818574281) {
    var it_2818574301 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
    x_2818574279[x_2818574279_Idx] = x_2818574279[x_2818574279_Idx] || []; x_2818574279[x_2818574279_Idx].splice(i_2818574281, 0, it_2818574301);
    x_2818574279[x_2818574279_Idx][chckIndx(i_2818574281, 0, (x_2818574279[x_2818574279_Idx]).length - 1)] = nimCopy(x_2818574279[x_2818574279_Idx][chckIndx(i_2818574281, 0, (x_2818574279[x_2818574279_Idx]).length - 1)], item_2818574280, NTI2818572422);

  
}

function splitAt_2818574215(line_2818574216, line_2818574216_Idx, index_2818574217) {
    var index_2818574218 = index_2818574217;
    var i_2818574219 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_2818574219 < (line_2818574216[line_2818574216_Idx].parts).length) && ((line_2818574216[line_2818574216_Idx].parts[chckIndx(i_2818574219, 0, (line_2818574216[line_2818574216_Idx].parts).length - 1)].text).length <= index_2818574218))) break Label2;
          index_2818574218 = subInt(index_2818574218, (line_2818574216[line_2818574216_Idx].parts[chckIndx(i_2818574219, 0, (line_2818574216[line_2818574216_Idx].parts).length - 1)].text).length);
          i_2818574219 = addInt(i_2818574219, 1);
        }
    };
    if ((((i_2818574219 < (line_2818574216[line_2818574216_Idx].parts).length) && !((index_2818574218 == 0))) && !((index_2818574218 == (line_2818574216[line_2818574216_Idx].parts[chckIndx(i_2818574219, 0, (line_2818574216[line_2818574216_Idx].parts).length - 1)].text).length)))) {
    var copy_2818574234 = nimCopy(null, line_2818574216[line_2818574216_Idx].parts[chckIndx(i_2818574219, 0, (line_2818574216[line_2818574216_Idx].parts).length - 1)], NTI2818572422);
    line_2818574216[line_2818574216_Idx].parts[chckIndx(i_2818574219, 0, (line_2818574216[line_2818574216_Idx].parts).length - 1)].text = nimCopy(null, HEX5BHEX5D_855639291(line_2818574216[line_2818574216_Idx].parts[chckIndx(i_2818574219, 0, (line_2818574216[line_2818574216_Idx].parts).length - 1)].text, HEX2EHEX2E_805306418(0, subInt(index_2818574218, 1))), NTI33554449);
    copy_2818574234.text = nimCopy(null, HEX5BHEX5D_855639319(copy_2818574234.text, HEX2EHEX2E_1040187488(index_2818574218, 1)), NTI33554449);
    insert_2818574277(line_2818574216[line_2818574216_Idx], "parts", copy_2818574234, chckRange(addInt(i_2818574219, 1), 0, 2147483647));
    }
    

  
}

function overrideStyle_2818574311(line_2818574312, line_2818574312_Idx, first_2818574313, last_2818574314, scope_2818574315, priority_2818574316) {
    var index_2818574317 = 0;
    Label1: {
      var i_2818574325 = 0;
      var colontmp__536872665 = 0;
      colontmp__536872665 = (line_2818574312[line_2818574312_Idx].parts).length - 1;
      var res_536872666 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872666 <= colontmp__536872665)) break Label3;
            i_2818574325 = res_536872666;
            if ((((first_2818574313 <= index_2818574317) && (addInt(index_2818574317, (line_2818574312[line_2818574312_Idx].parts[chckIndx(i_2818574325, 0, (line_2818574312[line_2818574312_Idx].parts).length - 1)].text).length) <= last_2818574314)) && (priority_2818574316 < line_2818574312[line_2818574312_Idx].parts[chckIndx(i_2818574325, 0, (line_2818574312[line_2818574312_Idx].parts).length - 1)].priority))) {
            line_2818574312[line_2818574312_Idx].parts[chckIndx(i_2818574325, 0, (line_2818574312[line_2818574312_Idx].parts).length - 1)].scope = nimCopy(null, scope_2818574315, NTI33554449);
            line_2818574312[line_2818574312_Idx].parts[chckIndx(i_2818574325, 0, (line_2818574312[line_2818574312_Idx].parts).length - 1)].priority = priority_2818574316;
            }
            
            index_2818574317 = addInt(index_2818574317, (line_2818574312[line_2818574312_Idx].parts[chckIndx(i_2818574325, 0, (line_2818574312[line_2818574312_Idx].parts).length - 1)].text).length);
            res_536872666 = addInt(res_536872666, 1);
          }
      };
    };

  
}

function mustRehash_2818577601(t_2818577603) {
  var result_2818577604 = false;

    if (!((t_2818577603.counter < (t_2818577603.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818577604 = ((mulInt((t_2818577603.data).length, 2) < mulInt(t_2818577603.counter, 3)) || (subInt((t_2818577603.data).length, t_2818577603.counter) < 4));

  return result_2818577604;

}

function rawInsert_2818578210(t_2818578214, data_2818578215, data_2818578215_Idx, key_2818578216, val_2818578217, hc_2818578218, h_2818578219) {
    data_2818578215[data_2818578215_Idx][chckIndx(h_2818578219, 0, (data_2818578215[data_2818578215_Idx]).length - 1)].Field1 = key_2818578216;
    data_2818578215[data_2818578215_Idx][chckIndx(h_2818578219, 0, (data_2818578215[data_2818578215_Idx]).length - 1)].Field2 = val_2818578217;
    data_2818578215[data_2818578215_Idx][chckIndx(h_2818578219, 0, (data_2818578215[data_2818578215_Idx]).length - 1)].Field0 = hc_2818578218;

  
}

function enlarge_2818577804(t_2818577807) {
    var n_2818577810 = [];
    n_2818577810 = new Array(chckRange(mulInt((t_2818577807.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818577807.data).length, 2), 0, 2147483647) ; ++i) { n_2818577810[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2818577807.data; t_2818577807.data = n_2818577810; n_2818577810 = Temporary1;    Label2: {
      var i_2818577890 = 0;
      var colontmp__536872670 = 0;
      colontmp__536872670 = (n_2818577810).length - 1;
      var res_536872671 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872671 <= colontmp__536872670)) break Label4;
            i_2818577890 = res_536872671;
            var eh_2818577968 = n_2818577810[chckIndx(i_2818577890, 0, (n_2818577810).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818577968)) {
            var j_2818577972 = (eh_2818577968 & (t_2818577807.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818577807.data[chckIndx(j_2818577972, 0, (t_2818577807.data).length - 1)].Field0)) break Label6;
                  j_2818577972 = nextTry_1308622883(j_2818577972, (t_2818577807.data).length - 1);
                }
            };
            rawInsert_2818578210(t_2818577807, t_2818577807, "data", n_2818577810[chckIndx(i_2818577890, 0, (n_2818577810).length - 1)].Field1, n_2818577810[chckIndx(i_2818577890, 0, (n_2818577810).length - 1)].Field2, eh_2818577968, j_2818577972);
            }
            
            res_536872671 = addInt(res_536872671, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818578451(t_2818578454, key_2818578455, hc_2818578456) {
  var result_2818578457 = 0;

  BeforeRet: {
    if (((t_2818578454.data).length == 0)) {
    result_2818578457 = -1;
    break BeforeRet;
    }
    
    var h_2818578524 = (hc_2818578456 & (t_2818578454.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818578454.data[chckIndx(h_2818578524, 0, (t_2818578454.data).length - 1)].Field0)) break Label2;
          if (((t_2818578454.data[chckIndx(h_2818578524, 0, (t_2818578454.data).length - 1)].Field0 == hc_2818578456) && (t_2818578454.data[chckIndx(h_2818578524, 0, (t_2818578454.data).length - 1)].Field1 == key_2818578455))) {
          result_2818578457 = h_2818578524;
          break BeforeRet;
          }
          
          h_2818578524 = nextTry_1308622883(h_2818578524, (t_2818578454.data).length - 1);
        }
    };
    result_2818578457 = subInt(-1, h_2818578524);
  };

  return result_2818578457;

}

function HEX5BHEX5DHEX3D_2818577372(t_2818577375, key_2818577376, val_2818577377) {
    if (((t_2818577375.data).length == 0)) {
    var correctSizeHEX60gensym73_2818577442 = slotsNeeded_1308622891(32);
    t_2818577375.counter = 0;
    t_2818577375.data = new Array(chckRange(correctSizeHEX60gensym73_2818577442, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym73_2818577442, 0, 2147483647) ; ++i) { t_2818577375.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2818577447 = [0];
    var index_2818577454 = rawGet_2818574414(t_2818577375, key_2818577376, hc_2818577447, 0);
    if ((0 <= index_2818577454)) {
    t_2818577375.data[chckIndx(index_2818577454, 0, (t_2818577375.data).length - 1)].Field2 = val_2818577377;
    }
    else {
      if (((t_2818577375.data).length == 0)) {
      var correctSizeHEX60gensym76_2818577596 = slotsNeeded_1308622891(32);
      t_2818577375.counter = 0;
      t_2818577375.data = new Array(chckRange(correctSizeHEX60gensym76_2818577596, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym76_2818577596, 0, 2147483647) ; ++i) { t_2818577375.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2818577601(t_2818577375)) {
      enlarge_2818577804(t_2818577375);
      index_2818577454 = rawGetKnownHC_2818578451(t_2818577375, key_2818577376, hc_2818577447[0]);
      }
      
      index_2818577454 = subInt(-1, index_2818577454);
      rawInsert_2818578210(t_2818577375, t_2818577375, "data", key_2818577376, val_2818577377, hc_2818577447[0], index_2818577454);
      t_2818577375.counter = addInt(t_2818577375.counter, 1);
    }
    

  
}

function getStyledText_2818574339(self_2818574340, i_2818574341) {
    var Temporary1;
                                          var Temporary15;
                                          var Temporary16;
                        var Temporary17;
                        var Temporary18;

  var result_2818574342 = [null];

  BeforeRet: {
    if (contains_2818574401(self_2818574340.styledTextCache, i_2818574341)) {
    result_2818574342[0] = (Temporary1 = HEX5BHEX5D_2818574820(self_2818574340.styledTextCache, i_2818574341), Temporary1)[0][Temporary1[1]];
    }
    else {
      var line_2818574923 = nimCopy(null, self_2818574340.lines[chckIndx(i_2818574341, 0, (self_2818574340.lines).length - 1)], NTI33554449);
      result_2818574342[0] = {index: i_2818574341, parts: [{text: nimCopy(null, line_2818574923, NTI33554449), scope: [], priority: 1000000000, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})}]};
      var regexes_2818574953 = [initTable_2818574928(32)];
      if ((((self_2818574340.tsParser == null) || (self_2818574340.highlightQuery == null)) || (self_2818574340.currentTree == null))) {
      break BeforeRet;
      }
      
      Label2: {
        var match_2818574985 = null;
        var colontmp__536872649 = [];
        colontmp__536872649 = matches_2885681272(self_2818574340.highlightQuery, self_2818574340.currentTree.rootNode, {Field0: {Field0: i_2818574341, Field1: 0}, Field1: {Field0: i_2818574341, Field1: (line_2818574923).length}});
        var i_536872651 = 0;
        var L_536872652 = (colontmp__536872649).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536872651 < L_536872652)) break Label4;
              match_2818574985 = colontmp__536872649[chckIndx(i_536872651, 0, (colontmp__536872649).length - 1)];
              var predicates_2818574986 = self_2818574340.highlightQuery.predicatesForPattern(match_2818574985.pattern);
              Label5: {
                var capture_2818575009 = null;
                var colontmp__536872644 = [];
                colontmp__536872644 = match_2818574985.captures;
                var i_536872646 = 0;
                var L_536872647 = (colontmp__536872644).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536872646 < L_536872647)) break Label7;
                      capture_2818575009 = colontmp__536872644[chckIndx(i_536872646, 0, (colontmp__536872644).length - 1)];
                      Label8: {
                        var scope_2818575010 = capture_2818575009.name;
                        var node_2818575011 = capture_2818575009.node;
                        var matches_2818575012 = true;
                        Label9: {
                          var predicate_2818575035 = null;
                          var i_536872641 = 0;
                          var L_536872642 = (predicates_2818574986).length;
                          Label10: {
                              Label11: while (true) {
                              if (!(i_536872641 < L_536872642)) break Label11;
                                predicate_2818575035 = predicates_2818574986[chckIndx(i_536872641, 0, (predicates_2818574986).length - 1)];
                                if (!(matches_2818575012)) {
                                break Label9;
                                }
                                
                                Label12: {
                                  var operand_2818575058 = null;
                                  var colontmp__536872635 = [];
                                  colontmp__536872635 = predicate_2818575035.operands;
                                  var i_536872637 = 0;
                                  var L_536872638 = (colontmp__536872635).length;
                                  Label13: {
                                      Label14: while (true) {
                                      if (!(i_536872637 < L_536872638)) break Label14;
                                        operand_2818575058 = colontmp__536872635[chckIndx(i_536872637, 0, (colontmp__536872635).length - 1)];
                                        var value_2818575059 = cstrToNimstr(operand_2818575058.type);
                                        if (!((operand_2818575058.name == scope_2818575010))) {
                                        matches_2818575012 = false;
                                        break Label12;
                                        }
                                        
                                        switch (toJSStr(cstrToNimstr(predicate_2818575035.operator))) {
                                        case "match?":
                                          if (contains_2818575118(regexes_2818574953[0], value_2818575059)) {
                                          Temporary15 = HEX5BHEX5D_2818575526(regexes_2818574953[0], value_2818575059);
                                          }
                                          else {
                                            var regex_2818575629 = re_2852126779(value_2818575059);
                                            HEX5BHEX5DHEX3D_2818575680(regexes_2818574953[0], value_2818575059, regex_2818575629);
                                          Temporary15 = regex_2818575629;
                                          }
                                          
                                          var regex_2818577085 = nimCopy(null, Temporary15, NTI2852126723);
                                          var nodeText_2818577086 = contentString_2818574089(self_2818574340, getRange_2885681336(node_2818575011));
                                          if (!((matchLen_2852126756(nodeText_2818577086, regex_2818577085, 0) == (nodeText_2818577086).length))) {
                                          matches_2818575012 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-match?":
                                          if (contains_2818575118(regexes_2818574953[0], value_2818575059)) {
                                          Temporary16 = HEX5BHEX5D_2818575526(regexes_2818574953[0], value_2818575059);
                                          }
                                          else {
                                            var regex_2818577232 = re_2852126779(value_2818575059);
                                            HEX5BHEX5DHEX3D_2818575680(regexes_2818574953[0], value_2818575059, regex_2818577232);
                                          Temporary16 = regex_2818577232;
                                          }
                                          
                                          var regex_2818577289 = nimCopy(null, Temporary16, NTI2852126723);
                                          var nodeText_2818577290 = contentString_2818574089(self_2818574340, getRange_2885681336(node_2818575011));
                                          if ((matchLen_2852126756(nodeText_2818577290, regex_2818577289, 0) == (nodeText_2818577290).length)) {
                                          matches_2818575012 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "eq?":
                                          var nodeText_2818577291 = contentString_2818574089(self_2818574340, getRange_2885681336(node_2818575011));
                                          if (!(eqStrings(nodeText_2818577291, value_2818575059))) {
                                          matches_2818575012 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-eq?":
                                          var nodeText_2818577292 = contentString_2818574089(self_2818574340, getRange_2885681336(node_2818575011));
                                          if (eqStrings(nodeText_2818577292, value_2818575059)) {
                                          matches_2818575012 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        default: 
                                          var fmtRes_2818577297 = [mnewString(0)];
                                          fmtRes_2818577297[0].push.apply(fmtRes_2818577297[0], [85,110,107,110,111,119,110,32,112,114,101,100,105,99,97,116,101,32,39]);;
                                          add_33556386(fmtRes_2818577297, 0, predicate_2818575035.operator);
                                          fmtRes_2818577297[0].push.apply(fmtRes_2818577297[0], [39]);;
                                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818577297[0], NTI33554449)]);
                                          break;
                                        }
                                        i_536872637 = addInt(i_536872637, 1);
                                        if (!(((colontmp__536872635).length == L_536872638))) {
                                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                        }
                                        
                                      }
                                  };
                                };
                                if (getFlag_1291848874(gEditor, [116,101,120,116,46,112,114,105,110,116,45,109,97,116,99,104,101,115], false)) {
                                var nodeText_2818577298 = contentString_2818574089(self_2818574340, getRange_2885681336(node_2818575011));
                                var fmtRes_2818577303 = [mnewString(0)];
                                formatValue_2701131945(fmtRes_2818577303, 0, match_2818574985.pattern, []);
                                fmtRes_2818577303[0].push.apply(fmtRes_2818577303[0], [58,32,39]);;
                                formatValue_721420459(fmtRes_2818577303, 0, nodeText_2818577298, []);
                                fmtRes_2818577303[0].push.apply(fmtRes_2818577303[0], [39,32]);;
                                formatValue_2818577309(fmtRes_2818577303, 0, node_2818575011, []);
                                fmtRes_2818577303[0].push.apply(fmtRes_2818577303[0], [32,40,109,97,116,99,104,101,115,58,32]);;
                                formatValue_2818577314(fmtRes_2818577303, 0, matches_2818575012, []);
                                fmtRes_2818577303[0].push.apply(fmtRes_2818577303[0], [41]);;
                                log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818577303[0], NTI33554449)]);
                                }
                                
                                i_536872641 = addInt(i_536872641, 1);
                                if (!(((predicates_2818574986).length == L_536872642))) {
                                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          };
                        };
                        if (!(matches_2818575012)) {
                        break Label8;
                        }
                        
                        var nodeRange_2818577319 = getRange_2885681336(node_2818575011);
                        if ((nodeRange_2818577319.Field0.Field0 == i_2818574341)) {
                        splitAt_2818574215(result_2818574342, 0, nodeRange_2818577319.Field0.Field1);
                        }
                        
                        if ((nodeRange_2818577319.Field1.Field0 == i_2818574341)) {
                        splitAt_2818574215(result_2818574342, 0, nodeRange_2818577319.Field1.Field1);
                        }
                        
                        if ((nodeRange_2818577319.Field0.Field0 < i_2818574341)) {
                        Temporary17 = 0;
                        }
                        else {
                        if ((nodeRange_2818577319.Field0.Field0 == i_2818574341)) {
                        Temporary17 = nodeRange_2818577319.Field0.Field1;
                        }
                        else {
                        Temporary17 = (line_2818574923).length;
                        }
                        }
                        var first_2818577320 = Temporary17;
                        if ((nodeRange_2818577319.Field1.Field0 < i_2818574341)) {
                        Temporary18 = 0;
                        }
                        else {
                        if ((nodeRange_2818577319.Field1.Field0 == i_2818574341)) {
                        Temporary18 = nodeRange_2818577319.Field1.Field1;
                        }
                        else {
                        Temporary18 = (line_2818574923).length;
                        }
                        }
                        var last_2818577321 = Temporary18;
                        overrideStyle_2818574311(result_2818574342, 0, first_2818577320, last_2818577321, cstrToNimstr(scope_2818575010), match_2818574985.pattern);
                      };
                      i_536872646 = addInt(i_536872646, 1);
                      if (!(((colontmp__536872644).length == L_536872647))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              i_536872651 = addInt(i_536872651, 1);
              if (!(((colontmp__536872649).length == L_536872652))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      HEX5BHEX5DHEX3D_2818577372(self_2818574340.styledTextCache, i_2818574341, result_2818574342[0]);
    }
    
  };

  return result_2818574342[0];

}

function getOrDefault_3305112772(t_3305112775, key_3305112776, default_3305112777) {
    var Temporary1;

  var result_3305112778 = [];

    var hcHEX60gensym24_3305112781 = [0];
    var indexHEX60gensym24_3305112788 = rawGet_2818581104(t_3305112775, key_3305112776, hcHEX60gensym24_3305112781, 0);
    if ((0 <= indexHEX60gensym24_3305112788)) {
    Temporary1 = t_3305112775.data[chckIndx(indexHEX60gensym24_3305112788, 0, (t_3305112775.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3305112777;
    }
    
    result_3305112778 = nimCopy(null, Temporary1, NTI2818572535);

  return result_3305112778;

}

function map_3305112873(s_3305112876, op_3305112878) {
  var result_3305112879 = [];

    result_3305112879 = new Array(chckRange((s_3305112876).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3305112876).length, 0, 2147483647) ; ++i) { result_3305112879[i] = {Field0: 0, Field1: 0}; }    Label1: {
      var i_3305112894 = 0;
      var colontmp__536872675 = 0;
      colontmp__536872675 = (s_3305112876).length;
      var i_536872676 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872676 < colontmp__536872675)) break Label3;
            i_3305112894 = i_536872676;
            result_3305112879[chckIndx(i_3305112894, 0, (result_3305112879).length - 1)] = nimCopy(result_3305112879[chckIndx(i_3305112894, 0, (result_3305112879).length - 1)], op_3305112878(s_3305112876[chckIndx(i_3305112894, 0, (s_3305112876).length - 1)]), NTI3305111556);
            i_536872676 = addInt(i_536872676, 1);
          }
      };
    };

  return result_3305112879;

}

function clampToLine_3305111569(selection_3305111570, line_3305111571, lineLength_3305111572) {
    var Temporary1;
    var Temporary2;

  var result_3305111575 = {Field0: 0, Field1: 0};

    if ((selection_3305111570.Field0.Field0 < line_3305111571)) {
    Temporary1 = 0;
    }
    else {
    if ((selection_3305111570.Field0.Field0 == line_3305111571)) {
    Temporary1 = selection_3305111570.Field0.Field1;
    }
    else {
    Temporary1 = lineLength_3305111572;
    }
    }
    result_3305111575.Field0 = Temporary1;
    if ((selection_3305111570.Field1.Field0 < line_3305111571)) {
    Temporary2 = 0;
    }
    else {
    if ((selection_3305111570.Field1.Field0 == line_3305111571)) {
    Temporary2 = selection_3305111570.Field1.Field1;
    }
    else {
    Temporary2 = lineLength_3305111572;
    }
    }
    result_3305111575.Field1 = Temporary2;

  return result_3305111575;

}

function len_2818574167(line_2818574168) {
  var result_2818574169 = 0;

    result_2818574169 = 0;
    Label1: {
      var p_2818574192 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
      var i_536872680 = 0;
      var L_536872681 = (line_2818574168.parts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872680 < L_536872681)) break Label3;
            p_2818574192 = line_2818574168.parts[chckIndx(i_536872680, 0, (line_2818574168.parts).length - 1)];
            result_2818574169 = addInt(result_2818574169, (p_2818574192.text).length);
            i_536872680 = addInt(i_536872680, 1);
            if (!(((line_2818574168.parts).length == L_536872681))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818574169;

}

function createPartWidget_3305111618(text_3305111619, startOffset_3305111620, width_3305111621, color_3305111622, frameIndex_3305111623) {
  var result_3305113213 = null;

    result_3305113213 = ({m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});
    result_3305113213.text = text_3305111619.slice(0);
    result_3305113213.anchor = {Field0: {x: 0, y: 0}, Field1: {x: 0, y: 1}};
    result_3305113213.left = startOffset_3305111620;
    result_3305113213.right = startOffset_3305111620 + width_3305111621;
    result_3305113213.frameIndex = frameIndex_3305111623;
    result_3305113213.foregroundColor = color_3305111622;

  return result_3305113213;

}

function contains_2449473915(selection_2449473916, cursor_2449473917) {
  var result_2449473918 = false;

    result_2449473918 = (HEX3CHEX3D_2449473879(selection_2449473916.Field0, cursor_2449473917) && HEX3CHEX3D_2449473879(cursor_2449473917, selection_2449473916.Field1));

  return result_2449473918;

}

function renderTextHighlight_3305111576(panel_3305111577, app_3305111578, startOffset_3305111579, endOffset_3305111580, line_3305111581, startIndex_3305111582, selection_3305111583, selectionClamped_3305111586, part_3305111587, color_3305111588) {
  BeforeRet: {
    var startOffset_3305111589 = Math.floor(startOffset_3305111579);
    var endOffset_3305111590 = Math.ceil(endOffset_3305111580);
    var left_3305111591 = 0.0;
    var right_3305111592 = 0.0;
    if ((((startIndex_3305111582 < selectionClamped_3305111586.Field1) && (selectionClamped_3305111586.Field0 < addInt(startIndex_3305111582, (part_3305111587.text).length))) && (0 < (part_3305111587.text).length))) {
    left_3305111591 = (startOffset_3305111589 + ((nimMax(0, subInt(selectionClamped_3305111586.Field0, startIndex_3305111582)) / ((part_3305111587.text).length - 0.0)) * (endOffset_3305111590 - startOffset_3305111589)));
    right_3305111592 = (startOffset_3305111589 + ((nimMin((part_3305111587.text).length, subInt(selectionClamped_3305111586.Field1, startIndex_3305111582)) / ((part_3305111587.text).length - 0.0)) * (endOffset_3305111590 - startOffset_3305111589)));
    }
    else {
    if (((((part_3305111587.text).length == 0) && contains_2449473915(selection_3305111583, {Field0: line_3305111581, Field1: startIndex_3305111582})) && !(isEmpty_2449473908(selection_3305111583)))) {
    left_3305111591 = startOffset_3305111589;
    right_3305111592 = Math.ceil((startOffset_3305111589 + (charWidth_2768240799(app_3305111578.platform) * 0.5)));
    }
    else {
      break BeforeRet;
    }
    }
    panel_3305111577.children.push({anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017867), left: left_3305111591, right: right_3305111592, fillBackground: true, backgroundColor: nimCopy(null, color_3305111588, NTI2550136835), lastHierarchyChange: panel_3305111577.lastHierarchyChange, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
  };

  
}

function renderTextHighlight_3305111597(panel_3305111598, app_3305111599, startOffset_3305111600, endOffset_3305111601, line_3305111602, startIndex_3305111603, selections_3305111604, selectionClamped_3305111607, part_3305111608, color_3305111609) {
    Label1: {
      var i_3305111617 = 0;
      var colontmp__536872684 = 0;
      colontmp__536872684 = (selections_3305111604).length;
      var i_536872685 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872685 < colontmp__536872684)) break Label3;
            i_3305111617 = i_536872685;
            renderTextHighlight_3305111576(panel_3305111598, app_3305111599, startOffset_3305111600, endOffset_3305111601, line_3305111602, startIndex_3305111603, selections_3305111604[chckIndx(i_3305111617, 0, (selections_3305111604).length - 1)], selectionClamped_3305111607[chckIndx(i_3305111617, 0, (selectionClamped_3305111607).length - 1)], part_3305111608, color_3305111609);
            i_536872685 = addInt(i_536872685, 1);
          }
      };
    };

  
}

function isSome_3187671898(self_3187671900) {
  var result_3187671901 = false;

    result_3187671901 = self_3187671900.has;

  return result_3187671901;

}

function get_3305113165(self_3305113167, otherwise_3305113168) {
    var Temporary1;

  var result_3305113169 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isSome_3187671898(self_3305113167)) {
    Temporary1 = self_3305113167.val;
    }
    else {
    Temporary1 = otherwise_3305113168;
    }
    
    result_3305113169 = nimCopy(result_3305113169, Temporary1, NTI2550136835);

  return result_3305113169;

}

function getCascading_2516582604(table_2516582606, key_2516582607, default_2516582608) {
  var result_2516582609 = ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}});

  BeforeRet: {
    if (contains_2516582652(table_2516582606, key_2516582607)) {
    result_2516582609 = nimCopy(result_2516582609, HEX5BHEX5D_2516582957(table_2516582606, key_2516582607), NTI2516582404);
    break BeforeRet;
    }
    
    var index_2516583036 = nsuRFindStr(key_2516582607, [46], 0, -1);
    if (!((index_2516583036 == -1))) {
    result_2516582609 = nimCopy(result_2516582609, getCascading_2516582604(table_2516582606, HEX5BHEX5D_855639291(key_2516582607, HEX2EHEX2E_805306418(0, subInt(index_2516583036, 1))), default_2516582608), NTI2516582404);
    break BeforeRet;
    }
    
    result_2516582609 = nimCopy(result_2516582609, default_2516582608, NTI2516582404);
    break BeforeRet;
  };

  return result_2516582609;

}

function tokenColor_3305113137(theme_3305113139, name_3305113140, default_3305113141) {
  var result_3305113142 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3305113142 = nimCopy(result_3305113142, get_3305113165(getCascading_2516582604(theme_3305113139.tokenColors, name_3305113140, {foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}).foreground, color_2634022945(default_3305113141)), NTI2550136835);
    break BeforeRet;
  };

  return result_3305113142;

}

function isNone_3187671923(self_3187671925) {
  var result_3187671926 = false;

    result_3187671926 = !(self_3187671925.has);

  return result_3187671926;

}

function get_3187671915(self_3187671917) {
  var result_3187671918 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isNone_3187671923(self_3187671917)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671918 = self_3187671917.val;

  return result_3187671918;

}

function tokenColor_3305111746(theme_3305111748, names_3305111749, default_3305111750) {
  var result_3305111751 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3305111755 = [];
      var i_536872688 = 0;
      var L_536872689 = (names_3305111749).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872688 < L_536872689)) break Label3;
            name_3305111755 = names_3305111749[chckIndx(i_536872688, 0, (names_3305111749).length - 1)];
            if (contains_2516582652(theme_3305111748.tokenColors, name_3305111755)) {
            var style_3305111861 = nimCopy(null, HEX5BHEX5D_2516582957(theme_3305111748.tokenColors, name_3305111755), NTI2516582404);
            if (isSome_3187671898(style_3305111861.foreground)) {
            result_3305111751 = nimCopy(result_3305111751, get_3187671915(style_3305111861.foreground), NTI2550136835);
            break BeforeRet;
            }
            
            }
            
            i_536872688 = addInt(i_536872688, 1);
            if (!(((names_3305111749).length == L_536872689))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3305111751 = nimCopy(result_3305111751, color_2634022945(default_3305111750), NTI2550136835);
    break BeforeRet;
  };

  return result_3305111751;

}

function renderCompletions_3305111722(self_3305111723, app_3305111724, contentPanel_3305111725, cursorBounds_3305111726, frameIndex_3305111727) {
    
function renderLine_3305111916(lineWidget_3305111917, i_3305111918, down_3305111919, frameIndex_3305111920) {
      var result_3305111921 = false;

      BeforeRet: {
        var top_3305111922 = ((subInt(i_3305111918, self_3305111723.previousBaseIndex) * totalLineHeight_3305111728) + self_3305111723.scrollOffset);
        if ((i_3305111918 == self_3305111723.selectedCompletion)) {
        lineWidget_3305111917.fillBackground = true;
        lineWidget_3305111917.backgroundColor = nimCopy(lineWidget_3305111917.backgroundColor, selectedBackgroundColor_3305111741, NTI2550136835);
        }
        
        var completion_3305111923 = nimCopy(null, self_3305111723.completions[chckIndx(i_3305111918, 0, (self_3305111723.completions).length - 1)], NTI2919235630);
        var nameWidget_3305111924 = createPartWidget_3305111618(completion_3305111923.name, 0.0, ((completion_3305111923.name).length * charWidth_3305111729), nameColor_3305111884, frameIndex_3305111920);
        lineWidget_3305111917.children.push(nameWidget_3305111924);;
        var scopeWidget_3305111929 = createPartWidget_3305111618(completion_3305111923.scope, (-((completion_3305111923.scope).length) * charWidth_3305111729), ((completion_3305111923.scope).length * charWidth_3305111729), scopeColor_3305111896, frameIndex_3305111920);
        scopeWidget_3305111929.anchor.Field0.x = 1.0;
        scopeWidget_3305111929.anchor.Field1.x = 1.0;
        lineWidget_3305111917.children.push(scopeWidget_3305111929);;
        self_3305111723.lastCompletionWidgets.push({Field0: i_3305111918, Field1: lineWidget_3305111917});;
        result_3305111921 = true;
        break BeforeRet;
      };

      return result_3305111921;

    }

    var totalLineHeight_3305111728 = totalLineHeight_2768240810(app_3305111724.platform);
    var charWidth_3305111729 = charWidth_2768240799(app_3305111724.platform);
    var backgroundColor_3305111735 = color_3288334596(app_3305111724.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(30, 30, 30));
    var selectedBackgroundColor_3305111741 = color_3288334596(app_3305111724.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var nameColor_3305111884 = tokenColor_3305111746(app_3305111724.theme, [[101,110,116,105,116,121,46,110,97,109,101,46,108,97,98,101,108], [101,110,116,105,116,121,46,110,97,109,101]], rgb_2550136919(255, 255, 255));
    var textColor_3305111890 = color_3288334596(app_3305111724.theme, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 175));
    var scopeColor_3305111896 = color_3288334596(app_3305111724.theme, [115,116,114,105,110,103], rgb_2550136919(175, 255, 175));
    var panel_3305111897 = {left: cursorBounds_3305111726.x, top: (cursorBounds_3305111726.y + cursorBounds_3305111726.h), right: (cursorBounds_3305111726.x + (charWidth_3305111729 * 60.0)), bottom: ((cursorBounds_3305111726.y + cursorBounds_3305111726.h) + (totalLineHeight_3305111728 * 20.0)), fillBackground: true, backgroundColor: nimCopy(null, backgroundColor_3305111735, NTI2550136835), lastHierarchyChange: frameIndex_3305111727, maskContent: true, m_type: NTI2785017868, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    layoutWidget_2785018180(panel_3305111897, contentPanel_3305111725.lastBounds, frameIndex_3305111727, app_3305111724.platform.layoutOptions);
    contentPanel_3305111725.children.push(panel_3305111897);;
    self_3305111723.lastCompletionsWidget = panel_3305111897;
    updateBaseIndexAndScrollOffset_3305111624(panel_3305111897, self_3305111723, "completionsBaseIndex", self_3305111723, "completionsScrollOffset", (self_3305111723.completions).length, totalLineHeight_3305111728, self_3305111723.scrollToCompletion);
    self_3305111723.scrollToCompletion = nimCopy(self_3305111723.scrollToCompletion, none_3003121842(), NTI1191183280);
    if (self_3305111723.lastCompletionWidgets.length < 0) { for (var i = self_3305111723.lastCompletionWidgets.length ; i < 0 ; ++i) self_3305111723.lastCompletionWidgets.push({Field0: 0, Field1: null}); }
               else { self_3305111723.lastCompletionWidgets.length = 0; };
    createLinesInPanel_3305111685(app_3305111724, panel_3305111897, self_3305111723.completionsBaseIndex, self_3305111723.completionsScrollOffset, (self_3305111723.completions).length, frameIndex_3305111727, renderLine_3305111916);

  
}

function updateWidget_3305111941(self_3305111942, app_3305111943, widget_3305111944, frameIndex_3305111945) {
    var Temporary1;
    
function HEX3Aanonymous_3305111993(wf_3305112004) {
      var result_3305112007 = [];

        result_3305112007 = nimCopy(null, ([32,45,32] || []).concat(wf_3305112004.name || []), NTI33554449);

      return result_3305112007;

    }
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
                    var Temporary12;
    var Temporary14;
    var Temporary15;
    var Temporary16;
    
function renderLine_3305112694(lineWidget_3305112695, i_3305112696, down_3305112697, frameIndex_3305112698) {
        
function HEX3Aanonymous_3305112842(s_3305112850) {
          var result_3305112853 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

            result_3305112853 = nimCopy(result_3305112853, normalized_2449473902(s_3305112850), NTI2449473547);

          return result_3305112853;

        }
        
function HEX3Aanonymous_3305112862(s_3305112869) {
          var result_3305112872 = {Field0: 0, Field1: 0};

            result_3305112872 = nimCopy(result_3305112872, clampToLine_3305111569(s_3305112869, i_3305112696, len_2818574167(styledText_3305112701)), NTI3305111556);

          return result_3305112872;

        }
        
function HEX3Aanonymous_3305112981(s_3305112989) {
          var result_3305112992 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

            result_3305112992 = nimCopy(result_3305112992, normalized_2449473902(s_3305112989), NTI2449473547);

          return result_3305112992;

        }
        
function HEX3Aanonymous_3305113001(s_3305113008) {
          var result_3305113011 = {Field0: 0, Field1: 0};

            result_3305113011 = nimCopy(result_3305113011, clampToLine_3305111569(s_3305113008, i_3305112696, len_2818574167(styledText_3305112701)), NTI3305111556);

          return result_3305113011;

        }
                        var Temporary7;
                var Temporary8;

      var result_3305112699 = false;

      BeforeRet: {
        var top_3305112700 = ((subInt(i_3305112696, self_3305111942.previousBaseIndex) * totalLineHeight_3305111947) + self_3305111942.scrollOffset);
        var styledText_3305112701 = getStyledText_2818574339(self_3305111942.document, i_3305112696);
        var selectionsNormalizedOnLine_3305112861 = map_2818572733(getOrDefault_3305112772(selectionsPerLine_3305112088[0], i_3305112696, []), HEX3Aanonymous_3305112842);
        var selectionsClampedOnLine_3305112904 = map_3305112873(selectionsNormalizedOnLine_3305112861, HEX3Aanonymous_3305112862);
        var highlightsNormalizedOnLine_3305113000 = map_2818572733(getOrDefault_3305112772(highlightsPerLine_3305112343, i_3305112696, []), HEX3Aanonymous_3305112981);
        var highlightsClampedOnLine_3305113018 = map_3305112873(highlightsNormalizedOnLine_3305113000, HEX3Aanonymous_3305113001);
        if ((!((lineNumbers_3305112421 == 0)) && (cursorLine_3305112424 == i_3305112696))) {
        var partWidget_3305113023 = createPartWidget_3305111618(HEX24_369098760(i_3305112696), 0.0, lineNumberBounds_3305112431.x, textColor_3305111954, frameIndex_3305112698);
        lineWidget_3305112695.children.push(partWidget_3305113023);;
        }
        else {
          switch (lineNumbers_3305112421) {
          case 1:
            var text_3305113028 = HEX24_369098760(i_3305112696);
            var x_3305113029 = max_33555646(0.0, (lineNumberBounds_3305112431.x - ((text_3305113028).length * charWidth_3305111948)));
            var partWidget_3305113030 = createPartWidget_3305111618(text_3305113028, x_3305113029, lineNumberBounds_3305112431.x, textColor_3305111954, frameIndex_3305112698);
            lineWidget_3305112695.children.push(partWidget_3305113030);;
            break;
          case 2:
            var text_3305113035 = HEX24_369098760(absInt(subInt(i_3305112696, cursorLine_3305112424)));
            var x_3305113036 = max_33555646(0.0, (lineNumberBounds_3305112431.x - ((text_3305113035).length * charWidth_3305111948)));
            var partWidget_3305113037 = createPartWidget_3305111618(text_3305113035, x_3305113036, lineNumberBounds_3305112431.x, textColor_3305111954, frameIndex_3305112698);
            lineWidget_3305112695.children.push(partWidget_3305113037);;
            break;
          default: 
            break;
          }
        }
        
        var startOffset_3305113042 = [(lineNumberBounds_3305112431.x + lineNumberPadding_3305112425)];
        var startIndex_3305113043 = 0;
        Label1: {
          var partIndex_3305113049 = 0;
          var part_3305113050 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
          var i_536872608 = 0;
          var L_536872609 = (styledText_3305112701.parts).length;
          Label2: {
              Label3: while (true) {
              if (!(i_536872608 < L_536872609)) break Label3;
                partIndex_3305113049 = i_536872608;
                part_3305113050 = nimCopy(part_3305113050, styledText_3305112701.parts[chckIndx(i_536872608, 0, (styledText_3305112701.parts).length - 1)], NTI2818572422);
                var width_3305113051 = ((part_3305113050.text).length * charWidth_3305111948);
                renderTextHighlight_3305111597(lineWidget_3305112695, app_3305111943, startOffset_3305113042[0], (startOffset_3305113042[0] + width_3305113051), i_3305112696, startIndex_3305113043, selectionsNormalizedOnLine_3305112861, selectionsClampedOnLine_3305112904, part_3305113050, selectionColor_3305112452);
                renderTextHighlight_3305111597(lineWidget_3305112695, app_3305111943, startOffset_3305113042[0], (startOffset_3305113042[0] + width_3305113051), i_3305112696, startIndex_3305113043, highlightsNormalizedOnLine_3305113000, highlightsClampedOnLine_3305113018, part_3305113050, highlightColor_3305112572);
                Label4: {
                  var selection_3305113131 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                  var colontmp__536872604 = [];
                  colontmp__536872604 = getOrDefault_3305112772(selectionsPerLine_3305112088[0], i_3305112696, []);
                  var i_536872605 = 0;
                  var L_536872606 = (colontmp__536872604).length;
                  Label5: {
                      Label6: while (true) {
                      if (!(i_536872605 < L_536872606)) break Label6;
                        selection_3305113131 = colontmp__536872604[chckIndx(i_536872605, 0, (colontmp__536872604).length - 1)];
                        if ((((selection_3305113131.Field1.Field0 == i_3305112696) && (startIndex_3305113043 <= selection_3305113131.Field1.Field1)) && (selection_3305113131.Field1.Field1 <= addInt(startIndex_3305113043, (part_3305113050.text).length)))) {
                        if (((part_3305113050.text).length == 0)) {
                        Temporary7 = 0.0;
                        }
                        else {
                        Temporary7 = ((subInt(selection_3305113131.Field1.Field1, startIndex_3305113043) / (part_3305113050.text).length) * width_3305113051);
                        }
                        
                        var offsetFromPartStart_3305113132 = Temporary7;
                        lineWidget_3305112695.children.push({anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017867), left: (startOffset_3305113042[0] + offsetFromPartStart_3305113132), right: ((startOffset_3305113042[0] + offsetFromPartStart_3305113132) + (cursorWidth_3305112446 * charWidth_3305111948)), fillBackground: true, backgroundColor: nimCopy(null, cursorColor_3305112692, NTI2550136835), lastHierarchyChange: frameIndex_3305112698, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
                        cursorBounds_3305112693 = nimCopy(cursorBounds_3305112693, rect_2147483666((startOffset_3305113042[0] + offsetFromPartStart_3305113132), top_3305112700, (charWidth_3305111948 * cursorWidth_3305112446), lineHeight_3305111946), NTI2147483653);
                        }
                        
                        i_536872605 = addInt(i_536872605, 1);
                        if (!(((colontmp__536872604).length == L_536872606))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                if (((part_3305113050.scope).length == 0)) {
                Temporary8 = textColor_3305111954;
                }
                else {
                Temporary8 = tokenColor_3305113137(app_3305111943.theme, part_3305113050.scope, rgb_2550136919(255, 200, 200));
                }
                
                var color_3305113177 = nimCopy(null, Temporary8, NTI2550136835);
                var partWidget_3305113178 = createPartWidget_3305111618(part_3305113050.text, startOffset_3305113042[0], width_3305113051, color_3305113177, frameIndex_3305112698);
                styledText_3305112701.parts[chckIndx(partIndex_3305113049, 0, (styledText_3305112701.parts).length - 1)].bounds.x = partWidget_3305113178.left;
                styledText_3305112701.parts[chckIndx(partIndex_3305113049, 0, (styledText_3305112701.parts).length - 1)].bounds.y = lineWidget_3305112695.top;
                styledText_3305112701.parts[chckIndx(partIndex_3305113049, 0, (styledText_3305112701.parts).length - 1)].bounds.w = (partWidget_3305113178.right - partWidget_3305113178.left);
                styledText_3305112701.parts[chckIndx(partIndex_3305113049, 0, (styledText_3305112701.parts).length - 1)].bounds.h = (lineWidget_3305112695.bottom - lineWidget_3305112695.top);
                HEX2BHEX3D_855640304(startOffset_3305113042, 0, width_3305113051);
                startIndex_3305113043 = addInt(startIndex_3305113043, (part_3305113050.text).length);
                lineWidget_3305112695.children.push(partWidget_3305113178);;
                i_536872608 = addInt(i_536872608, 1);
                if (!(((styledText_3305112701.parts).length == L_536872609))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        self_3305111942.lastRenderedLines.push(styledText_3305112701);;
        result_3305112699 = true;
        break BeforeRet;
      };

      return result_3305112699;

    }

  BeforeRet: {
    var lineHeight_3305111946 = lineHeight_2768240794(app_3305111943.platform);
    var totalLineHeight_3305111947 = totalLineHeight_2768240810(app_3305111943.platform);
    var charWidth_3305111948 = charWidth_2768240799(app_3305111943.platform);
    var textColor_3305111954 = color_3288334596(app_3305111943.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3305111955 = null;
    var headerPart1Text_3305111956 = null;
    var headerPart2Text_3305111957 = null;
    var contentPanel_3305111958 = null;
    if (((widget_3305111944.children).length == 0)) {
    headerPanel_3305111955 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), bottom: totalLineHeight_3305111947, lastHierarchyChange: frameIndex_3305111945, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3305111944.children.push(headerPanel_3305111955);;
    headerPart1Text_3305111956 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3305111945, foregroundColor: nimCopy(null, textColor_3305111954, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3305111955.children.push(headerPart1Text_3305111956);;
    headerPart2Text_3305111957 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), pivot: vec2_2164261725(1.0, 0.0), lastHierarchyChange: frameIndex_3305111945, foregroundColor: nimCopy(null, textColor_3305111954, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3305111955.children.push(headerPart2Text_3305111957);;
    contentPanel_3305111958 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), top: totalLineHeight_3305111947, lastHierarchyChange: frameIndex_3305111945, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3305111958.maskContent = true;
    widget_3305111944.children.push(contentPanel_3305111958);;
    layoutWidget_2785018180(headerPanel_3305111955, widget_3305111944.lastBounds, frameIndex_3305111945, app_3305111943.platform.layoutOptions);
    layoutWidget_2785018180(contentPanel_3305111958, widget_3305111944.lastBounds, frameIndex_3305111945, app_3305111943.platform.layoutOptions);
    }
    else {
      headerPanel_3305111955 = widget_3305111944.children[chckIndx(0, 0, (widget_3305111944.children).length - 1)];
      headerPart1Text_3305111956 = headerPanel_3305111955.children[chckIndx(0, 0, (headerPanel_3305111955.children).length - 1)];
      headerPart2Text_3305111957 = headerPanel_3305111955.children[chckIndx(1, 0, (headerPanel_3305111955.children).length - 1)];
      contentPanel_3305111958 = widget_3305111944.children[chckIndx(1, 0, (widget_3305111944.children).length - 1)];
    }
    
    if (self_3305111942.renderHeader) {
    headerPanel_3305111955.bottom = totalLineHeight_3305111947;
    contentPanel_3305111958.top = totalLineHeight_3305111947;
    if (active_2415919218(self_3305111942)) {
    Temporary1 = color_3288334596(app_3305111943.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3288334596(app_3305111943.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3305111988 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785017934(headerPanel_3305111955, color_3305111988, frameIndex_3305111945);
    var workspaceName_3305112031 = get_2348810295(map_1291854418(self_3305111942.document.workspace, HEX3Aanonymous_3305111993), []);
    if (((self_3305111942.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3305111942.currentMode;
    }
    
    var mode_3305112032 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3305112037 = [mnewString(0)];
    fmtRes_3305112037[0].push.apply(fmtRes_3305112037[0], [32]);;
    formatValue_721420459(fmtRes_3305112037, 0, mode_3305112032, []);
    fmtRes_3305112037[0].push.apply(fmtRes_3305112037[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3305112037, 0, self_3305111942.document.filename, []);
    fmtRes_3305112037[0].push.apply(fmtRes_3305112037[0], [32]);;
    formatValue_721420459(fmtRes_3305112037, 0, workspaceName_3305112031, []);
    fmtRes_3305112037[0].push.apply(fmtRes_3305112037[0], [32]);;
    headerPart1Text_3305111956.text = nimCopy(null, fmtRes_3305112037[0], NTI33554449);
    var fmtRes_3305112042 = [mnewString(0)];
    fmtRes_3305112042[0].push.apply(fmtRes_3305112042[0], [32]);;
    formatValue_2818572415(fmtRes_3305112042, 0, selection_2818572803(self_3305111942), []);
    fmtRes_3305112042[0].push.apply(fmtRes_3305112042[0], [32,45,32]);;
    formatValue_2701131945(fmtRes_3305112042, 0, self_3305111942.id, []);
    fmtRes_3305112042[0].push.apply(fmtRes_3305112042[0], [32]);;
    headerPart2Text_3305111957.text = nimCopy(null, fmtRes_3305112042[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785017942(headerPanel_3305111955, frameIndex_3305111945);
    }
    else {
      headerPanel_3305111955.bottom = 0.0;
      contentPanel_3305111958.top = 0.0;
    }
    
    self_3305111942.lastContentBounds = nimCopy(self_3305111942.lastContentBounds, contentPanel_3305111958.lastBounds, NTI2147483653);
    widget_3305111944.lastHierarchyChange = nimMax(widget_3305111944.lastHierarchyChange, headerPanel_3305111955.lastHierarchyChange);
    if (active_2415919218(self_3305111942)) {
    Temporary3 = color_3288334596(app_3305111943.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3288334596(app_3305111943.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785017934(contentPanel_3305111958, Temporary3, frameIndex_3305111945);
      if (changed_2785018181(contentPanel_3305111958, frameIndex_3305111945)) Temporary5 = true; else {        Temporary5 = dirty_2415919140(self_3305111942);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3305111943.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2415919213(self_3305111942);
    if (contentPanel_3305111958.children.length < 0) { for (var i = contentPanel_3305111958.children.length ; i < 0 ; ++i) contentPanel_3305111958.children.push(null); }
               else { contentPanel_3305111958.children.length = 0; };
    updateBaseIndexAndScrollOffset_3305111624(contentPanel_3305111958, self_3305111942, "previousBaseIndex", self_3305111942, "scrollOffset", (self_3305111942.document.lines).length, totalLineHeight_3305111947, none_3003121842());
    var selectionsPerLine_3305112088 = [initTable_3305112077(32)];
    Label6: {
      var s_3305112092 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var colontmp__536872598 = [];
      colontmp__536872598 = selections_2818572800(self_3305111942);
      var i_536872599 = 0;
      var L_536872600 = (colontmp__536872598).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536872599 < L_536872600)) break Label8;
            s_3305112092 = colontmp__536872598[chckIndx(i_536872599, 0, (colontmp__536872598).length - 1)];
            var sn_3305112093 = normalized_2449473902(s_3305112092);
            Label9: {
              var line_3305112098 = 0;
              var res_536872596 = sn_3305112093.Field0.Field0;
              Label10: {
                  Label11: while (true) {
                  if (!(res_536872596 <= sn_3305112093.Field1.Field0)) break Label11;
                    line_3305112098 = res_536872596;
                    var Temporary13 = nimCopy(null, s_3305112092, NTI2449473547);
                    (Temporary12 = mgetOrPut_3305112129(selectionsPerLine_3305112088[0], line_3305112098, []), Temporary12)[0][Temporary12[1]].push(Temporary13);;
                    res_536872596 = addInt(res_536872596, 1);
                  }
              };
            };
            i_536872599 = addInt(i_536872599, 1);
            if (!(((colontmp__536872598).length == L_536872600))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var highlightsPerLine_3305112343 = nimCopy(null, self_3305111942.searchResults, NTI2818572541);
    var lineNumbers_3305112421 = get_3305112407(self_3305111942.lineNumbers, getOption_3305112356(app_3305111943, [101,100,105,116,111,114,46,116,101,120,116,46,108,105,110,101,45,110,117,109,98,101,114,115], 1));
    switch (lineNumbers_3305112421) {
    case 1:
      Temporary14 = addInt(self_3305111942.previousBaseIndex, ((((contentPanel_3305111958.lastBounds.h - self_3305111942.scrollOffset) / totalLineHeight_3305111947)) | 0));
      break;
    case 2:
      Temporary14 = 99;
      break;
    default: 
      Temporary14 = 0;
      break;
    }
    var maxLineNumber_3305112422 = Temporary14;
    var maxLineNumberLen_3305112423 = addInt((HEX24_369098760(maxLineNumber_3305112422)).length, 1);
    var cursorLine_3305112424 = selection_2818572803(self_3305111942).Field1.Field0;
    var lineNumberPadding_3305112425 = charWidth_3305111948;
    if (!((lineNumbers_3305112421 == 0))) {
    Temporary15 = vec2_2164261725((maxLineNumberLen_3305112423 * charWidth_3305111948), 0.0);
    }
    else {
    Temporary15 = vec2_2164261686();
    }
    
    var lineNumberBounds_3305112431 = nimCopy(null, Temporary15, NTI2164261152);
    if (self_3305111942.lastRenderedLines.length < 0) { for (var i = self_3305111942.lastRenderedLines.length ; i < 0 ; ++i) self_3305111942.lastRenderedLines.push(null); }
               else { self_3305111942.lastRenderedLines.length = 0; };
    var isWide_3305112445 = getOption_2818583613(app_3305111943, getContextWithMode_2818583607(self_3305111942, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    if (isWide_3305112445) {
    Temporary16 = 1.0;
    }
    else {
    Temporary16 = 0.2;
    }
    
    var cursorWidth_3305112446 = Temporary16;
    var selectionColor_3305112452 = color_3288334596(app_3305111943.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var highlightColor_3305112572 = color_3305112457(app_3305111943.theme, [[101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100]], rgb_2550136919(200, 200, 200));
    var cursorColor_3305112692 = color_3305112577(app_3305111943.theme, [[101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], [102,111,114,101,103,114,111,117,110,100]], rgba_2550136933(255, 255, 255, 127));
    var cursorBounds_3305112693 = rect_2147483672(vec2_2164261686(), vec2_2164261686());
    createLinesInPanel_3305111685(app_3305111943, contentPanel_3305111958, self_3305111942.previousBaseIndex, self_3305111942.scrollOffset, (self_3305111942.document.lines).length, frameIndex_3305111945, renderLine_3305112694);
    if (self_3305111942.showCompletions) {
    renderCompletions_3305111722(self_3305111942, app_3305111943, contentPanel_3305111958, cursorBounds_3305112693, frameIndex_3305111945);
    }
    
    contentPanel_3305111958.lastHierarchyChange = frameIndex_3305111945;
    widget_3305111944.lastHierarchyChange = nimMax(widget_3305111944.lastHierarchyChange, contentPanel_3305111958.lastHierarchyChange);
    self_3305111942.lastContentBounds = nimCopy(self_3305111942.lastContentBounds, contentPanel_3305111958.lastBounds, NTI2147483653);
  };

  
}

function initTable_3288334394(initialSize_3288334397) {
  var result_3288334398 = ({data: [], counter: 0});

    var correctSizeHEX60gensym2_3288334400 = slotsNeeded_1308622891(chckRange(initialSize_3288334397, 0, 2147483647));
    result_3288334398.counter = 0;
    result_3288334398.data = new Array(chckRange(correctSizeHEX60gensym2_3288334400, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym2_3288334400, 0, 2147483647) ; ++i) { result_3288334398.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3288334398;

}

function updateBaseIndexAndScrollOffset_3288334368(self_3288334369, app_3288334370, contentPanel_3288334371) {
          
function HEX3Aanonymous_3288334436(t_3288334439) {
            var result_3288334442 = ({x: 0.0, y: 0.0});

              result_3288334442 = nimCopy(result_3288334442, measureText_2768240805(self_3288334369.editor.platform, t_3288334439), NTI2164261152);

            return result_3288334442;

          }
          
function HEX3Aanonymous_3288334453(t_3288334456) {
            var result_3288334459 = ({x: 0.0, y: 0.0});

              result_3288334459 = nimCopy(result_3288334459, measureText_2768240805(self_3288334369.editor.platform, t_3288334456), NTI2164261152);

            return result_3288334459;

          }

    var totalLineHeight_3288334372 = totalLineHeight_2768240810(app_3288334370.platform);
    self_3288334369.previousBaseIndex = clamp_3288334378(self_3288334369.previousBaseIndex, HEX2EHEX2E_805306418(0, len_3003121752(self_3288334369.document.rootNode)));
    var selectedNodeId_3288334393 = nimCopy(null, node_2969569717(self_3288334369).id, NTI2046820355);
    var replacements_3288334405 = initTable_3288334394(32);
    var indent_3288334415 = getOption_2818583574(app_3288334370, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_3288334425 = getOption_2818583613(app_3288334370, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_3288334435 = getOption_2818583613(app_3288334370, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    Label1: {
        Label2: while (true) {
        if (!((self_3288334369.scrollOffset < 0.0) && (addInt(self_3288334369.previousBaseIndex, 1) < len_3003121752(self_3288334369.document.rootNode)))) break Label2;
          var input_3288334443 = getOrCreateNodeLayoutInput_3019906310(ctx_2969567287, {node: HEX5BHEX5D_3003121748(self_3288334369.document.rootNode, self_3288334369.previousBaseIndex), selectedNode: nimCopy(null, selectedNodeId_3288334393, NTI2046820355), replacements: nimCopy(null, replacements_3288334405, NTI3087007834), revision: config_3120562389[0].revision, measureText: HEX3Aanonymous_3288334436, indent: indent_3288334415, renderDivisionVertically: verticalDivision_3288334435, inlineBlocks: inlineBlocks_3288334425, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var layout_3288334444 = computeNodeLayout_3019931546(ctx_2969567287, input_3288334443, true);
          if ((contentPanel_3288334371.lastBounds.h <= ((self_3288334369.scrollOffset + bounds_3087009966(layout_3288334444).h) + totalLineHeight_3288334372))) {
          break Label1;
          }
          
          self_3288334369.previousBaseIndex = addInt(self_3288334369.previousBaseIndex, 1);
          HEX2BHEX3D_855640304(self_3288334369, "scrollOffset", (bounds_3087009966(layout_3288334444).h + totalLineHeight_3288334372));
        }
    };
    Label3: {
        Label4: while (true) {
        if (!((contentPanel_3288334371.lastBounds.h < self_3288334369.scrollOffset) && (0 < self_3288334369.previousBaseIndex))) break Label4;
          var input_3288334460 = getOrCreateNodeLayoutInput_3019906310(ctx_2969567287, {node: HEX5BHEX5D_3003121748(self_3288334369.document.rootNode, subInt(self_3288334369.previousBaseIndex, 1)), selectedNode: nimCopy(null, selectedNodeId_3288334393, NTI2046820355), replacements: nimCopy(null, replacements_3288334405, NTI3087007834), revision: config_3120562389[0].revision, measureText: HEX3Aanonymous_3288334453, indent: indent_3288334415, renderDivisionVertically: verticalDivision_3288334435, inlineBlocks: inlineBlocks_3288334425, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var layout_3288334461 = computeNodeLayout_3019931546(ctx_2969567287, input_3288334460, true);
          if (((self_3288334369.scrollOffset - bounds_3087009966(layout_3288334461).h) <= 0.0)) {
          break Label3;
          }
          
          self_3288334369.previousBaseIndex = subInt(self_3288334369.previousBaseIndex, 1);
          HEX2DHEX3D_2818594209(self_3288334369, "scrollOffset", (bounds_3087009966(layout_3288334461).h + totalLineHeight_3288334372));
        }
    };

  
}

function isSome_3288334492(self_3288334494) {
  var result_3288334495 = false;

    result_3288334495 = self_3288334494.has;

  return result_3288334495;

}

function isNone_3288334517(self_3288334519) {
  var result_3288334520 = false;

    result_3288334520 = !(self_3288334519.has);

  return result_3288334520;

}

function get_3288334509(self_3288334511) {
  var result_3288334512 = [];

    if (isNone_3288334517(self_3288334511)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3288334512 = self_3288334511["val"];

  return result_3288334512;

}

function anyColor_3187671549(theme_3187671551, names_3187671552, default_3187671553) {
  var result_3187671554 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3187671558 = [];
      var i_536872709 = 0;
      var L_536872710 = (names_3187671552).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872709 < L_536872710)) break Label3;
            name_3187671558 = names_3187671552[chckIndx(i_536872709, 0, (names_3187671552).length - 1)];
            if (nsuStartsWith(name_3187671558, [35])) {
            result_3187671554 = nimCopy(result_3187671554, parseHexVar_2516582448(name_3187671558), NTI2550136835);
            break BeforeRet;
            }
            else {
            if ((nsuStartsWith(name_3187671558, [38]) && contains_3187671619(theme_3187671551.colors, HEX5BHEX5D_855639319(name_3187671558, HEX2EHEX2E_1040187488(1, 1))))) {
            result_3187671554 = nimCopy(result_3187671554, HEX5BHEX5D_3187671709(theme_3187671551.colors, HEX5BHEX5D_855639319(name_3187671558, HEX2EHEX2E_1040187488(1, 1))), NTI2550136835);
            break BeforeRet;
            }
            else {
            if (contains_2516582652(theme_3187671551.tokenColors, name_3187671558)) {
            var style_3187671893 = nimCopy(null, HEX5BHEX5D_2516582957(theme_3187671551.tokenColors, name_3187671558), NTI2516582404);
            if (isSome_3187671898(style_3187671893.foreground)) {
            result_3187671554 = nimCopy(result_3187671554, get_3187671915(style_3187671893.foreground), NTI2550136835);
            break BeforeRet;
            }
            
            }
            }}
            i_536872709 = addInt(i_536872709, 1);
            if (!(((names_3187671552).length == L_536872710))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3187671554 = nimCopy(result_3187671554, color_2634022945(default_3187671553), NTI2550136835);
    break BeforeRet;
  };

  return result_3187671554;

}

function tokenFontStyle_2516583089(theme_2516583090, names_2516583091) {
  var result_2516583092 = {};

  BeforeRet: {
    Label1: {
      var name_2516583096 = [];
      var i_536872713 = 0;
      var L_536872714 = (names_2516583091).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872713 < L_536872714)) break Label3;
            name_2516583096 = names_2516583091[chckIndx(i_536872713, 0, (names_2516583091).length - 1)];
            if (contains_2516582652(theme_2516583090.tokenColors, name_2516583096)) {
            result_2516583092 = nimCopy(result_2516583092, HEX5BHEX5D_2516582957(theme_2516583090.tokenColors, name_2516583096).fontStyle, NTI2516582848);
            break BeforeRet;
            }
            
            i_536872713 = addInt(i_536872713, 1);
            if (!(((names_2516583091).length == L_536872714))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2516583092 = nimCopy(result_2516583092, ConstSet326, NTI2516582848);
    break BeforeRet;
  };

  return result_2516583092;

}

function isSome_3187671947(self_3187671949) {
  var result_3187671950 = false;

    result_3187671950 = self_3187671949.has;

  return result_3187671950;

}

function isNone_3187671972(self_3187671974) {
  var result_3187671975 = false;

    result_3187671975 = !(self_3187671974.has);

  return result_3187671975;

}

function get_3187671964(self_3187671966) {
  var result_3187671967 = {};

    if (isNone_3187671972(self_3187671966)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671967 = self_3187671966.val;

  return result_3187671967;

}

function createPartWidget_3288334362(text_3288334363, startOffset_3288334364, width_3288334365, color_3288334366, frameIndex_3288334367) {
  var result_3288335472 = null;

    result_3288335472 = ({m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});
    result_3288335472.text = text_3288334363.slice(0);
    result_3288335472.anchor = {Field0: {x: 0, y: 0}, Field1: {x: 0, y: 1}};
    result_3288335472.left = startOffset_3288334364;
    result_3288335472.right = startOffset_3288334364 + width_3288334365;
    result_3288335472.frameIndex = frameIndex_3288334367;
    result_3288335472.foregroundColor = color_3288334366;

  return result_3288335472;

}

function withAlpha_3288334358(color_3288334359, alpha_3288334360) {
  var result_3288334361 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_3288334361 = nimCopy(result_3288334361, color_2550136904(color_3288334359.r, color_3288334359.g, color_3288334359.b, alpha_3288334360), NTI2550136835);

  return result_3288334361;

}

function renderVisualNode_3288334470(self_3288334471, app_3288334472, node_3288334473, selected_3288334474, bounds_3288334475, offset_3288334476, widget_3288334477, frameIndex_3288334478) {
      var Temporary1;
      var Temporary2;

    var charWidth_3288334479 = charWidth_2768240799(app_3288334472.platform);
    var panel_3288334480 = {left: node_3288334473.bounds.x, right: (node_3288334473.bounds.x + node_3288334473.bounds.w), top: node_3288334473.bounds.y, bottom: (node_3288334473.bounds.y + node_3288334473.bounds.h), m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3288334477.children.push(panel_3288334480);;
      var oHEX60gensym9_3288334487 = nimCopy(null, node_3288334473.background, NTI3087007803);
      if (!isSome_3288334492(oHEX60gensym9_3288334487)) Temporary1 = false; else {        var colors_3288334532 = nimCopy(null, get_3288334509(oHEX60gensym9_3288334487), NTI3087007798);
        Temporary1 = true;      }    if (Temporary1) {
    var color_3288334538 = anyColor_3187671549(app_3288334472.theme, colors_3288334532, rgb_2550136919(255, 255, 255));
    panel_3288334480.backgroundColor = nimCopy(panel_3288334480.backgroundColor, color_3288334538, NTI2550136835);
    panel_3288334480.fillBackground = true;
    }
    
    if ((0 < (node_3288334473.text).length)) {
    var color_3288334544 = anyColor_3187671549(app_3288334472.theme, node_3288334473.colors, rgb_2550136919(255, 255, 255));
    var style_3288334545 = tokenFontStyle_2516583089(app_3288334472.theme, node_3288334473.colors);
      var oHEX60gensym12_3288334548 = nimCopy(null, node_3288334473.styleOverride, NTI3087007788);
      if (!isSome_3187671947(oHEX60gensym12_3288334548)) Temporary2 = false; else {        var override_3288334571 = nimCopy(null, get_3187671964(oHEX60gensym12_3288334548), NTI3087007783);
        Temporary2 = true;      }    if (Temporary2) {
    style_3288334545 = nimCopy(style_3288334545, SetPlus(style_3288334545, override_3288334571), NTI2516582848);
    }
    
    var textWidget_3288334577 = createPartWidget_3288334362(node_3288334473.text, node_3288334473.bounds.x, ((node_3288334473.text).length * charWidth_3288334479), color_3288334544, frameIndex_3288334478);
    textWidget_3288334577.style.fontStyle = nimCopy(textWidget_3288334577.style.fontStyle, style_3288334545, NTI2516582423);
    textWidget_3288334577.top = node_3288334473.bounds.y;
    textWidget_3288334577.bottom = (node_3288334473.bounds.y + node_3288334473.bounds.h);
    widget_3288334477.children.push(textWidget_3288334577);;
    }
    
    if ((0 < (node_3288334473.children).length)) {
    Label3: {
      var child_3288334591 = null;
      var i_536872705 = 0;
      var L_536872706 = (node_3288334473.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872705 < L_536872706)) break Label5;
            child_3288334591 = node_3288334473.children[chckIndx(i_536872705, 0, (node_3288334473.children).length - 1)];
            renderVisualNode_3288334470(self_3288334471, app_3288334472, child_3288334591, selected_3288334474, bounds_3288334475, offset_3288334476, panel_3288334480, frameIndex_3288334478);
            i_536872705 = addInt(i_536872705, 1);
            if (!(((node_3288334473.children).length == L_536872706))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    if ((!((node_3288334473.node == null)) && (HEX3DHEX3D_2046820626(node_2969569717(self_3288334471).id, node_3288334473.node.reff) || (HEX3DHEX3D_2046820626(node_2969569717(self_3288334471).reff, node_3288334473.node.reff) && !(HEX3DHEX3D_2046820626(node_3288334473.node.reff, null_2046820646)))))) {
    panel_3288334480.fillBackground = true;
    panel_3288334480.allowAlpha = true;
    panel_3288334480.drawBorder = true;
    panel_3288334480.backgroundColor = nimCopy(panel_3288334480.backgroundColor, withAlpha_3288334358(color_3288334596(app_3288334472.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], rgb_2550136919(175, 175, 255)), 0.2), NTI2550136835);
    panel_3288334480.foregroundColor = nimCopy(panel_3288334480.foregroundColor, color_3288334596(app_3288334472.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], rgb_2550136919(175, 175, 255)), NTI2550136835);
    }
    else {
    if ((!((node_3288334473.node == null)) && HEX3DHEX3D_2046820626(node_2969569717(self_3288334471).reff, node_3288334473.node.id))) {
    panel_3288334480.fillBackground = true;
    panel_3288334480.allowAlpha = true;
    panel_3288334480.drawBorder = true;
    panel_3288334480.backgroundColor = nimCopy(panel_3288334480.backgroundColor, withAlpha_3288334358(color_3288334596(app_3288334472.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], rgb_2550136919(175, 255, 200)), 0.2), NTI2550136835);
    panel_3288334480.foregroundColor = nimCopy(panel_3288334480.foregroundColor, color_3288334596(app_3288334472.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], rgb_2550136919(175, 255, 200)), NTI2550136835);
    }
    }

  
}

function color_3288335207(theme_3288335209, name_3288335210, default_3288335211) {
  var result_3288335212 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3288335212 = nimCopy(result_3288335212, getCascading_3288334607(theme_3288335209.colors, name_3288335210, color_2634023294(default_3288335211)), NTI2550136835);
    break BeforeRet;
  };

  return result_3288335212;

}

function insert_3288335053(x_3288335055, x_3288335055_Idx, item_3288335056, i_3288335057) {
    var it_3288335077 = null;
    x_3288335055[x_3288335055_Idx] = x_3288335055[x_3288335055_Idx] || []; x_3288335055[x_3288335055_Idx].splice(i_3288335057, 0, it_3288335077);
    x_3288335055[x_3288335055_Idx][chckIndx(i_3288335057, 0, (x_3288335055[x_3288335055_Idx]).length - 1)] = item_3288335056;

  
}

function color_3288334936(theme_3288334938, names_3288334939, default_3288334940) {
  var result_3288334941 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3288334945 = [];
      var i_536872727 = 0;
      var L_536872728 = (names_3288334939).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872727 < L_536872728)) break Label3;
            name_3288334945 = names_3288334939[chckIndx(i_536872727, 0, (names_3288334939).length - 1)];
            if (contains_3187671619(theme_3288334938.colors, name_3288334945)) {
            result_3288334941 = nimCopy(result_3288334941, HEX5BHEX5D_3187671709(theme_3288334938.colors, name_3288334945), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872727 = addInt(i_536872727, 1);
            if (!(((names_3288334939).length == L_536872728))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3288334941 = nimCopy(result_3288334941, color_2634023294(default_3288334940), NTI2550136835);
    break BeforeRet;
  };

  return result_3288334941;

}

function renderBlockIndent_3288334781(editor_3288334782, app_3288334783, layout_3288334784, node_3288334785, offset_3288334786, widget_3288334787) {
              var Temporary5;

  BeforeRet: {
    var indentLineWidth_3288334797 = getOption_2818583574(app_3288334783, [97,115,116,46,105,110,100,101,110,116,45,108,105,110,101,45,119,105,100,116,104], 1.0);
    var indentLineAlpha_3288334807 = getOption_2818583574(app_3288334783, [97,115,116,46,105,110,100,101,110,116,45,108,105,110,101,45,97,108,112,104,97], 1.0);
    if ((indentLineWidth_3288334797 <= 0.0)) {
    break BeforeRet;
    }
    
    Label1: {
      var __3288334808 = 0;
      var child_3288334809 = null;
      var n_536872718 = node_3288334785;
      var idx_536872719 = -1;
      var i_536872720 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_536872719 == -1)) {
            var colontmp__536872723 = nimCopy(null, {Field0: i_536872720, Field1: n_536872718}, NTI3003123002);
            __3288334808 = colontmp__536872723["Field0"];
            child_3288334809 = colontmp__536872723["Field1"];
            if (((child_3288334809.kind == 7) && contains_2969569824(layout_3288334784.nodeToVisualNode, child_3288334809.id))) {
            var visualRange_3288334919 = HEX5BHEX5D_2969570729(layout_3288334784.nodeToVisualNode, child_3288334809.id);
            var bounds_3288334920 = absoluteBounds_3087009579(visualRange_3288334919);
            var indent_3288334921 = addInt(modInt(subInt(HEX5BHEX5D_3087007963(visualRange_3288334919.parent, visualRange_3288334919.first).indent, 1), 6), 1);
            var fmtRes_3288334926 = [mnewString(0)];
            fmtRes_3288334926[0].push.apply(fmtRes_3288334926[0], [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100]);;
            formatValue_2701131945(fmtRes_3288334926, 0, indent_3288334921, []);
            var color_3288335051 = withAlpha_3288334358(color_3288334936(app_3288334783.theme, [nimCopy(null, fmtRes_3288334926[0], NTI33554449), [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], {r: 0.0, g: 0.0, b: 0.0, a: 1.0}), indentLineAlpha_3288334807);
            var panel_3288335052 = {left: bounds_3288334920.x, right: (bounds_3288334920.x + indentLineWidth_3288334797), top: bounds_3288334920.y, bottom: (bounds_3288334920.y + bounds_3288334920.h), fillBackground: true, allowAlpha: true, backgroundColor: nimCopy(null, color_3288335051, NTI2550136835), m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false};
            insert_3288335053(widget_3288334787, "children", panel_3288335052, 0);
            }
            
            }
            
            if ((addInt(idx_536872719, 1) < len_3003121752(n_536872718))) {
            n_536872718 = HEX5BHEX5D_3003121748(n_536872718, addInt(idx_536872719, 1));
            idx_536872719 = -1;
            }
            else {
              var oHEX60gensym74_536872724 = next_3003121857(n_536872718);
              if (!isSome_3003123546(oHEX60gensym74_536872724)) Temporary5 = false; else {                var ne_536872725 = get_3003123566(oHEX60gensym74_536872724);
                Temporary5 = true;              }            if (Temporary5) {
            n_536872718 = ne_536872725;
            idx_536872719 = -1;
            }
            else {
            if ((!((n_536872718.parent == null)) && !((n_536872718.parent == node_3288334785)))) {
            idx_536872719 = index_3003121772(n_536872718);
            n_536872718 = n_536872718.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_536872720 = addInt(i_536872720, 1);
            }
          }
      };
    };
  };

  
}

function renderVisualNodeLayout_3288335078(self_3288335079, app_3288335080, node_3288335081, bounds_3288335082, layout_3288335083, offset_3288335084, contentWidget_3288335085, frameIndex_3288335086) {
    self_3288335079.lastLayouts.push({Field0: nimCopy(null, layout_3288335083, NTI3087007775), Field1: nimCopy(null, offset_3288335084, NTI2164261152)});;
    var widget_3288335091 = {left: bounds_3087009966(layout_3288335083).x, right: (bounds_3087009966(layout_3288335083).x + bounds_3087009966(layout_3288335083).w), top: (bounds_3087009966(layout_3288335083).y + offset_3288335084.y), bottom: ((bounds_3087009966(layout_3288335083).y + bounds_3087009966(layout_3288335083).h) + offset_3288335084.y), m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    Label1: {
      var line_3288335095 = null;
      var i_536872701 = 0;
      var L_536872702 = (layout_3288335083.root.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872701 < L_536872702)) break Label3;
            line_3288335095 = layout_3288335083.root.children[chckIndx(i_536872701, 0, (layout_3288335083.root.children).length - 1)];
            renderVisualNode_3288334470(self_3288335079, app_3288335080, line_3288335095, node_2969569717(self_3288335079), bounds_3288335082, offset_3288335084, widget_3288335091, frameIndex_3288335086);
            i_536872701 = addInt(i_536872701, 1);
            if (!(((layout_3288335083.root.children).length == L_536872702))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    contentWidget_3288335085.children.push(widget_3288335091);;
    if (contains_2969569824(layout_3288335083.nodeToVisualNode, node_2969569717(self_3288335079).id)) {
    var visualRange_3288335205 = HEX5BHEX5D_2969570729(layout_3288335083.nodeToVisualNode, node_2969569717(self_3288335079).id);
    var bounds_3288335206 = absoluteBounds_3087009579(visualRange_3288335205);
    var panel_3288335228 = {left: bounds_3288335206.x, right: (bounds_3288335206.x + bounds_3288335206.w), top: bounds_3288335206.y, bottom: (bounds_3288335206.y + bounds_3288335206.h), fillBackground: true, drawBorder: true, allowAlpha: true, backgroundColor: withAlpha_3288334358(color_3288335207(app_3288335080.theme, [102,111,114,101,103,114,111,117,110,100], color_2550136904(1.0, 1.0, 1.0, 1.0)), 0.1), foregroundColor: color_3288334596(app_3288335080.theme, [102,111,114,101,103,114,111,117,110,100], rgb_2550136919(255, 255, 255)), m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false};
    insert_3288335053(widget_3288335091, "children", panel_3288335228, 0);
    }
    
    renderBlockIndent_3288334781(self_3288335079, app_3288335080, layout_3288335083, node_3288335081, offset_3288335084, widget_3288335091);

  
}

function updateWidget_3288335234(self_3288335235, app_3288335236, widget_3288335237, frameIndex_3288335238) {
    var Temporary1;
    
function HEX3Aanonymous_3288335287(wf_3288335298) {
      var result_3288335301 = [];

        result_3288335301 = nimCopy(null, ([32,45,32] || []).concat(wf_3288335298.name || []), NTI33554449);

      return result_3288335301;

    }
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
            
function HEX3Aanonymous_3288335405(t_3288335408) {
              var result_3288335411 = ({x: 0.0, y: 0.0});

                result_3288335411 = nimCopy(result_3288335411, measureText_2768240805(app_3288335236.platform, t_3288335408), NTI2164261152);

              return result_3288335411;

            }
            
function HEX3Aanonymous_3288335430(t_3288335433) {
              var result_3288335436 = ({x: 0.0, y: 0.0});

                result_3288335436 = nimCopy(result_3288335436, measureText_2768240805(app_3288335236.platform, t_3288335433), NTI2164261152);

              return result_3288335436;

            }

  BeforeRet: {
    var lineHeight_3288335239 = lineHeight_2768240794(app_3288335236.platform);
    var totalLineHeight_3288335240 = totalLineHeight_2768240810(app_3288335236.platform);
    var lineDistance_3288335241 = lineDistance_2768240789(app_3288335236.platform);
    var charWidth_3288335242 = charWidth_2768240799(app_3288335236.platform);
    var textColor_3288335248 = color_3288334596(app_3288335236.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3288335249 = null;
    var headerPart1Text_3288335250 = null;
    var headerPart2Text_3288335251 = null;
    var contentPanel_3288335252 = null;
    if (((widget_3288335237.children).length == 0)) {
    headerPanel_3288335249 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), bottom: totalLineHeight_3288335240, lastHierarchyChange: frameIndex_3288335238, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3288335237.children.push(headerPanel_3288335249);;
    headerPart1Text_3288335250 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3288335238, foregroundColor: nimCopy(null, textColor_3288335248, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3288335249.children.push(headerPart1Text_3288335250);;
    headerPart2Text_3288335251 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), pivot: vec2_2164261725(1.0, 0.0), lastHierarchyChange: frameIndex_3288335238, foregroundColor: nimCopy(null, textColor_3288335248, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3288335249.children.push(headerPart2Text_3288335251);;
    contentPanel_3288335252 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), top: totalLineHeight_3288335240, lastHierarchyChange: frameIndex_3288335238, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3288335252.maskContent = true;
    widget_3288335237.children.push(contentPanel_3288335252);;
    layoutWidget_2785018180(headerPanel_3288335249, widget_3288335237.lastBounds, frameIndex_3288335238, app_3288335236.platform.layoutOptions);
    layoutWidget_2785018180(contentPanel_3288335252, widget_3288335237.lastBounds, frameIndex_3288335238, app_3288335236.platform.layoutOptions);
    }
    else {
      headerPanel_3288335249 = widget_3288335237.children[chckIndx(0, 0, (widget_3288335237.children).length - 1)];
      headerPart1Text_3288335250 = headerPanel_3288335249.children[chckIndx(0, 0, (headerPanel_3288335249.children).length - 1)];
      headerPart2Text_3288335251 = headerPanel_3288335249.children[chckIndx(1, 0, (headerPanel_3288335249.children).length - 1)];
      contentPanel_3288335252 = widget_3288335237.children[chckIndx(1, 0, (widget_3288335237.children).length - 1)];
    }
    
    if (self_3288335235.renderHeader) {
    headerPanel_3288335249.bottom = totalLineHeight_3288335240;
    contentPanel_3288335252.top = totalLineHeight_3288335240;
    if (active_2415919218(self_3288335235)) {
    Temporary1 = color_3288334596(app_3288335236.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3288334596(app_3288335236.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3288335282 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785017934(headerPanel_3288335249, color_3288335282, frameIndex_3288335238);
    var workspaceName_3288335325 = get_2348810295(map_1291854418(self_3288335235.document.workspace, HEX3Aanonymous_3288335287), []);
    if (((self_3288335235.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3288335235.currentMode;
    }
    
    var mode_3288335326 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3288335331 = [mnewString(0)];
    fmtRes_3288335331[0].push.apply(fmtRes_3288335331[0], [32]);;
    formatValue_721420459(fmtRes_3288335331, 0, mode_3288335326, []);
    fmtRes_3288335331[0].push.apply(fmtRes_3288335331[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3288335331, 0, self_3288335235.document.filename, []);
    fmtRes_3288335331[0].push.apply(fmtRes_3288335331[0], [32]);;
    formatValue_721420459(fmtRes_3288335331, 0, workspaceName_3288335325, []);
    fmtRes_3288335331[0].push.apply(fmtRes_3288335331[0], [32]);;
    headerPart1Text_3288335250.text = nimCopy(null, fmtRes_3288335331[0], NTI33554449);
    var fmtRes_3288335336 = [mnewString(0)];
    fmtRes_3288335336[0].push.apply(fmtRes_3288335336[0], [32]);;
    formatValue_2701131945(fmtRes_3288335336, 0, self_3288335235.id, []);
    fmtRes_3288335336[0].push.apply(fmtRes_3288335336[0], [32]);;
    headerPart2Text_3288335251.text = nimCopy(null, fmtRes_3288335336[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785017942(headerPanel_3288335249, frameIndex_3288335238);
    }
    else {
      headerPanel_3288335249.bottom = 0.0;
      contentPanel_3288335252.top = 0.0;
    }
    
    self_3288335235.lastBounds = nimCopy(self_3288335235.lastBounds, contentPanel_3288335252.lastBounds, NTI2147483653);
    self_3288335235.lastContentBounds = nimCopy(self_3288335235.lastContentBounds, widget_3288335237.lastBounds, NTI2147483653);
    widget_3288335237.lastHierarchyChange = nimMax(widget_3288335237.lastHierarchyChange, headerPanel_3288335249.lastHierarchyChange);
    if (active_2415919218(self_3288335235)) {
    Temporary3 = color_3288334596(app_3288335236.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3288334596(app_3288335236.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785017934(contentPanel_3288335252, Temporary3, frameIndex_3288335238);
      if (changed_2785018181(contentPanel_3288335252, frameIndex_3288335238)) Temporary5 = true; else {        Temporary5 = dirty_2415919140(self_3288335235);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3288335236.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2415919213(self_3288335235);
    var timer_3288335352 = startTimer_2080374869();
    if (contentPanel_3288335252.children.length < 0) { for (var i = contentPanel_3288335252.children.length ; i < 0 ; ++i) contentPanel_3288335252.children.push(null); }
               else { contentPanel_3288335252.children.length = 0; };
    updateBaseIndexAndScrollOffset_3288334368(self_3288335235, app_3288335236, contentPanel_3288335252);
    if (self_3288335235.lastLayouts.length < 0) { for (var i = self_3288335235.lastLayouts.length ; i < 0 ; ++i) self_3288335235.lastLayouts.push({Field0: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null}), Field1: ({x: 0.0, y: 0.0})}); }
               else { self_3288335235.lastLayouts.length = 0; };
    var rendered_3288335361 = 0;
    var replacements_3288335366 = initTable_3288334394(32);
    var selectedNode_3288335367 = node_2969569717(self_3288335235);
    var indent_3288335377 = getOption_2818583574(app_3288335236, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_3288335387 = getOption_2818583613(app_3288335236, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_3288335397 = getOption_2818583613(app_3288335236, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    var offset_3288335398 = vec2_2164261725(0.0, self_3288335235.scrollOffset);
    Label6: {
      var i_3288335403 = 0;
      var colontmp__536872692 = 0;
      colontmp__536872692 = len_3003121752(self_3288335235.document.rootNode);
      var i_536872693 = self_3288335235.previousBaseIndex;
      Label7: {
          Label8: while (true) {
          if (!(i_536872693 < colontmp__536872692)) break Label8;
            i_3288335403 = i_536872693;
            var node_3288335404 = HEX5BHEX5D_3003121748(self_3288335235.document.rootNode, i_3288335403);
            var input_3288335412 = getOrCreateNodeLayoutInput_3019906310(ctx_2969567287, {node: node_3288335404, selectedNode: nimCopy(null, selectedNode_3288335367.id, NTI2046820355), replacements: nimCopy(null, replacements_3288335366, NTI3087007834), revision: config_3120562389[0].revision, measureText: HEX3Aanonymous_3288335405, indent: indent_3288335377, renderDivisionVertically: verticalDivision_3288335397, inlineBlocks: inlineBlocks_3288335387, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
            var layout_3288335413 = computeNodeLayout_3019931546(ctx_2969567287, input_3288335412, true);
            if ((contentPanel_3288335252.lastBounds.h < (bounds_3087009966(layout_3288335413).y + offset_3288335398.y))) {
            break Label6;
            }
            
            renderVisualNodeLayout_3288335078(self_3288335235, app_3288335236, node_3288335404, contentPanel_3288335252.lastBounds, layout_3288335413, offset_3288335398, contentPanel_3288335252, frameIndex_3288335238);
            HEX2BHEX3D_2147483761(offset_3288335398, "y", (bounds_3087009966(layout_3288335413).h + totalLineHeight_3288335240));
            rendered_3288335361 = addInt(rendered_3288335361, 1);
            i_536872693 = addInt(i_536872693, 1);
          }
      };
    };
    offset_3288335398 = nimCopy(offset_3288335398, vec2_2164261725(0.0, self_3288335235.scrollOffset), NTI2164261152);
    Label9: {
      var k_3288335427 = 0;
      var res_536872696 = 1;
      Label10: {
          Label11: while (true) {
          if (!(res_536872696 <= self_3288335235.previousBaseIndex)) break Label11;
            k_3288335427 = res_536872696;
            var i_3288335428 = subInt(self_3288335235.previousBaseIndex, k_3288335427);
            var node_3288335429 = HEX5BHEX5D_3003121748(self_3288335235.document.rootNode, i_3288335428);
            var input_3288335437 = getOrCreateNodeLayoutInput_3019906310(ctx_2969567287, {node: node_3288335429, selectedNode: nimCopy(null, selectedNode_3288335367.id, NTI2046820355), replacements: nimCopy(null, replacements_3288335366, NTI3087007834), revision: config_3120562389[0].revision, measureText: HEX3Aanonymous_3288335430, indent: indent_3288335377, renderDivisionVertically: verticalDivision_3288335397, inlineBlocks: inlineBlocks_3288335387, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
            var layout_3288335438 = computeNodeLayout_3019931546(ctx_2969567287, input_3288335437, true);
            if ((((bounds_3087009966(layout_3288335438).y + bounds_3087009966(layout_3288335438).h) + offset_3288335398.y) < 0.0)) {
            break Label9;
            }
            
            HEX2DHEX3D_2634022922(offset_3288335398, "y", (bounds_3087009966(layout_3288335438).h + totalLineHeight_3288335240));
            renderVisualNodeLayout_3288335078(self_3288335235, app_3288335236, node_3288335429, contentPanel_3288335252.lastBounds, layout_3288335438, offset_3288335398, contentPanel_3288335252, frameIndex_3288335238);
            rendered_3288335361 = addInt(rendered_3288335361, 1);
            res_536872696 = addInt(res_536872696, 1);
          }
      };
    };
    contentPanel_3288335252.lastHierarchyChange = frameIndex_3288335238;
    widget_3288335237.lastHierarchyChange = nimMax(widget_3288335237.lastHierarchyChange, contentPanel_3288335252.lastHierarchyChange);
    self_3288335235.lastContentBounds = nimCopy(self_3288335235.lastContentBounds, contentPanel_3288335252.lastBounds, NTI2147483653);
  };

  
}

function updateWidget_3271557125(self_3271557126, app_3271557127, widget_3271557128, frameIndex_3271557129) {
  
}

function updateWidget_3271557130(self_3271557126, app_3271557127, widget_3271557128, frameIndex_3271557129) {
    chckNilDisp(self_3271557126);
    if (isObj(self_3271557126.m_type, NTI2818572510)) {
    updateWidget_3305111941(self_3271557126, app_3271557127, widget_3271557128, frameIndex_3271557129);
    }
    else {
    if (isObj(self_3271557126.m_type, NTI2969568620)) {
    updateWidget_3288335234(self_3271557126, app_3271557127, widget_3271557128, frameIndex_3271557129);
    }
    else {
    if (isObj(self_3271557126.m_type, NTI2415919108)) {
    updateWidget_3271557125(self_3271557126, app_3271557127, widget_3271557128, frameIndex_3271557129);
    }
    }}

  
}

function dirty_2483027986(self_2483027987) {
  var result_2483027988 = false;

    result_2483027988 = self_2483027987.mDirty;

  return result_2483027988;

}

function resetDirty_2483028016(self_2483028017) {
    self_2483028017.mDirty = false;

  
}

function pop_3321888896(s_3321888898, s_3321888898_Idx) {
  var result_3321888899 = null;

    var L_3321888903 = subInt((s_3321888898[s_3321888898_Idx]).length, 1);
    result_3321888899 = s_3321888898[s_3321888898_Idx][chckIndx(L_3321888903, 0, (s_3321888898[s_3321888898_Idx]).length - 1)];
    if (s_3321888898[s_3321888898_Idx].length < chckRange(L_3321888903, 0, 2147483647)) { for (var i = s_3321888898[s_3321888898_Idx].length ; i < chckRange(L_3321888903, 0, 2147483647) ; ++i) s_3321888898[s_3321888898_Idx].push(null); }
               else { s_3321888898[s_3321888898_Idx].length = chckRange(L_3321888903, 0, 2147483647); };

  return result_3321888899;

}

function updateWidget_3321888811(self_3321888812, app_3321888813, widget_3321888814, frameIndex_3321888815) {
    var Temporary1;

    var textColor_3321888821 = color_3288334596(app_3321888813.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((widget_3321888814.children).length == 0)) {
    var text_3321888825 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3321888815, m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3321888814.children.push(text_3321888825);;
    Temporary1 = text_3321888825;
    }
    else {
    Temporary1 = widget_3321888814.children[chckIndx(0, 0, (widget_3321888814.children).length - 1)];
    }
    
    var text_3321888830 = Temporary1;
    text_3321888830.text = nimCopy(null, self_3321888812.path, NTI33554449);
    updateForegroundColor_2785017920(text_3321888830, textColor_3321888821, frameIndex_3321888815);
    updateLastHierarchyChangeFromChildren_2785017942(text_3321888830, -1);

  
}

function updateWidget_3321888791(self_3321888792, app_3321888793, widget_3321888794, frameIndex_3321888795) {
    var Temporary1;

    var textColor_3321888801 = color_3288334596(app_3321888793.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((widget_3321888794.children).length == 0)) {
    var text_3321888805 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3321888795, m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3321888794.children.push(text_3321888805);;
    Temporary1 = text_3321888805;
    }
    else {
    Temporary1 = widget_3321888794.children[chckIndx(0, 0, (widget_3321888794.children).length - 1)];
    }
    
    var text_3321888810 = Temporary1;
    text_3321888810.text = nimCopy(null, self_3321888792.path, NTI33554449);
    updateForegroundColor_2785017920(text_3321888810, textColor_3321888801, frameIndex_3321888795);
    updateLastHierarchyChangeFromChildren_2785017942(text_3321888810, -1);

  
}

function updateWidget_3321888785(self_3321888786, app_3321888787, widget_3321888788, frameIndex_3321888789) {
  
}

function updateWidget_3321888790(self_3321888786, app_3321888787, widget_3321888788, frameIndex_3321888789) {
    chckNilDisp(self_3321888786);
    if (isObj(self_3321888786.m_type, NTI1291848506)) {
    updateWidget_3321888811(self_3321888786, app_3321888787, widget_3321888788, frameIndex_3321888789);
    }
    else {
    if (isObj(self_3321888786.m_type, NTI1291848508)) {
    updateWidget_3321888791(self_3321888786, app_3321888787, widget_3321888788, frameIndex_3321888789);
    }
    else {
    if (isObj(self_3321888786.m_type, NTI3221225480)) {
    updateWidget_3321888785(self_3321888786, app_3321888787, widget_3321888788, frameIndex_3321888789);
    }
    }}

  
}

function updateWidget_3321888831(self_3321888832, app_3321888833, widget_3321888834, frameIndex_3321888835) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var lineHeight_3321888836 = lineHeight_2768240794(app_3321888833.platform);
    var totalLineHeight_3321888837 = totalLineHeight_2768240810(app_3321888833.platform);
    var charWidth_3321888838 = charWidth_2768240799(app_3321888833.platform);
    var textColor_3321888844 = color_3288334596(app_3321888833.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3321888845 = null;
    var contentPanel_3321888846 = null;
    if (((widget_3321888834.children).length == 0)) {
    headerPanel_3321888845 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), bottom: totalLineHeight_3321888837, lastHierarchyChange: frameIndex_3321888835, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3321888834.children.push(headerPanel_3321888845);;
    contentPanel_3321888846 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), top: totalLineHeight_3321888837, lastHierarchyChange: frameIndex_3321888835, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3321888846.maskContent = true;
    widget_3321888834.children.push(contentPanel_3321888846);;
    layoutWidget_2785018180(headerPanel_3321888845, widget_3321888834.lastBounds, frameIndex_3321888835, app_3321888833.platform.layoutOptions);
    layoutWidget_2785018180(contentPanel_3321888846, widget_3321888834.lastBounds, frameIndex_3321888835, app_3321888833.platform.layoutOptions);
    }
    else {
      headerPanel_3321888845 = widget_3321888834.children[chckIndx(0, 0, (widget_3321888834.children).length - 1)];
      contentPanel_3321888846 = widget_3321888834.children[chckIndx(1, 0, (widget_3321888834.children).length - 1)];
    }
    
    updateWidget_3271557130(self_3321888832.textEditor, app_3321888833, headerPanel_3321888845, frameIndex_3321888835);
    updateLastHierarchyChangeFromChildren_2785017942(headerPanel_3321888845, frameIndex_3321888835);
    widget_3321888834.lastHierarchyChange = nimMax(widget_3321888834.lastHierarchyChange, headerPanel_3321888845.lastHierarchyChange);
    updateBackgroundColor_2785017934(contentPanel_3321888846, color_3288334596(app_3321888833.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), frameIndex_3321888835);
    self_3321888832.lastContentBounds = nimCopy(self_3321888832.lastContentBounds, contentPanel_3321888846.lastBounds, NTI2147483653);
    var fmtRes_3321888868 = [mnewString(0)];
    formatValue_2785018207(fmtRes_3321888868, 0, self_3321888832.lastContentBounds, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3321888868[0], NTI33554449)]);
      if (changed_2785018181(contentPanel_3321888846, frameIndex_3321888835)) Temporary2 = true; else {        Temporary2 = dirty_2483027986(self_3321888832);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = app_3321888833.platform.redrawEverything;      }    if (!(Temporary1)) {
    break BeforeRet;
    }
    
    resetDirty_2483028016(self_3321888832);
    var maxLineCount_3321888874 = ((Math.floor((widget_3321888834.lastBounds.h / totalLineHeight_3321888837))) | 0);
    var targetNumRenderedItems_3321888878 = nimMin(maxLineCount_3321888874, (self_3321888832.completions).length);
    var lastRenderedIndex_3321888882 = nimMin(subInt(addInt(self_3321888832.scrollOffset, targetNumRenderedItems_3321888878), 1), (self_3321888832.completions).length - 1);
    if ((self_3321888832.selected < self_3321888832.scrollOffset)) {
    self_3321888832.scrollOffset = self_3321888832.selected;
    lastRenderedIndex_3321888882 = nimMin(subInt(addInt(self_3321888832.scrollOffset, targetNumRenderedItems_3321888878), 1), (self_3321888832.completions).length - 1);
    }
    
    if ((lastRenderedIndex_3321888882 < self_3321888832.selected)) {
    self_3321888832.scrollOffset = nimMax(addInt(subInt(self_3321888832.selected, targetNumRenderedItems_3321888878), 1), 0);
    lastRenderedIndex_3321888882 = nimMin(subInt(addInt(self_3321888832.scrollOffset, targetNumRenderedItems_3321888878), 1), (self_3321888832.completions).length - 1);
    }
    
    var numRenderedItems_3321888889 = nimMax(addInt(subInt(lastRenderedIndex_3321888882, self_3321888832.scrollOffset), 1), 0);
    Label3: {
        Label4: while (true) {
        if (!(numRenderedItems_3321888889 < (contentPanel_3321888846.children).length)) break Label4;
          var _ = pop_3321888896(contentPanel_3321888846, "children");
        }
    };
    Label5: {
        Label6: while (true) {
        if (!((contentPanel_3321888846.children).length < numRenderedItems_3321888889)) break Label6;
          contentPanel_3321888846.children.push({anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});;
        }
    };
    var selectionColor_3321888920 = color_3288334596(app_3321888833.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var top_3321888921 = 0.0;
    var widgetIndex_3321888922 = 0;
    Label7: {
      var completionIndex_3321888927 = 0;
      var res_536872733 = self_3321888832.scrollOffset;
      Label8: {
          Label9: while (true) {
          if (!(res_536872733 <= lastRenderedIndex_3321888882)) break Label9;
            completionIndex_3321888927 = res_536872733;
            try {
            var lineWidget_3321888933 = contentPanel_3321888846.children[chckIndx(widgetIndex_3321888922, 0, (contentPanel_3321888846.children).length - 1)];
            lineWidget_3321888933.top = top_3321888921;
            lineWidget_3321888933.bottom = (top_3321888921 + totalLineHeight_3321888837);
            lineWidget_3321888933.lastHierarchyChange = frameIndex_3321888835;
            if ((completionIndex_3321888927 == self_3321888832.selected)) {
            lineWidget_3321888933.fillBackground = true;
            updateBackgroundColor_2785017934(lineWidget_3321888933, selectionColor_3321888920, frameIndex_3321888835);
            }
            else {
              lineWidget_3321888933.fillBackground = false;
              updateBackgroundColor_2785017934(lineWidget_3321888933, color_2550136904(0.0, 0.0, 0.0, 1.0), frameIndex_3321888835);
            }
            
            updateWidget_3321888790(self_3321888832.completions[chckIndx(completionIndex_3321888927, 0, (self_3321888832.completions).length - 1)], app_3321888833, lineWidget_3321888933, frameIndex_3321888835);
            top_3321888921 = lineWidget_3321888933.bottom;
            res_536872733 = addInt(res_536872733, 1);
            } finally {
            widgetIndex_3321888922 = addInt(widgetIndex_3321888922, 1);
            }
          }
      };
    };
    contentPanel_3321888846.lastHierarchyChange = frameIndex_3321888835;
    widget_3321888834.lastHierarchyChange = nimMax(widget_3321888834.lastHierarchyChange, contentPanel_3321888846.lastHierarchyChange);
  };

  
}

function updateWidget_3271557131(self_3271557132, app_3271557133, widget_3271557134, frameIndex_3271557135) {
  
}

function updateWidget_3271557136(self_3271557132, app_3271557133, widget_3271557134, frameIndex_3271557135) {
    chckNilDisp(self_3271557132);
    if (isObj(self_3271557132.m_type, NTI3221225494)) {
    updateWidget_3321888831(self_3271557132, app_3271557133, widget_3271557134, frameIndex_3271557135);
    }
    else {
    if (isObj(self_3271557132.m_type, NTI2483027972)) {
    updateWidget_3271557131(self_3271557132, app_3271557133, widget_3271557134, frameIndex_3271557135);
    }
    }

  
}
